<Type Name="ArmSynapseModelFactory" FullName="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmSynapseModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmSynapseModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmSynapseModelFactory" />
  <TypeSignature Language="F#" Value="type ArmSynapseModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BigDataPoolLibraryInfo">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.BigDataPoolLibraryInfo BigDataPoolLibraryInfo (string name = default, string path = default, string containerName = default, DateTimeOffset? uploadedOn = default, string libraryInfoType = default, string provisioningStatus = default, string creatorId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.BigDataPoolLibraryInfo BigDataPoolLibraryInfo(string name, string path, string containerName, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; uploadedOn, string libraryInfoType, string provisioningStatus, string creatorId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.BigDataPoolLibraryInfo(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BigDataPoolLibraryInfo (Optional name As String = Nothing, Optional path As String = Nothing, Optional containerName As String = Nothing, Optional uploadedOn As Nullable(Of DateTimeOffset) = Nothing, Optional libraryInfoType As String = Nothing, Optional provisioningStatus As String = Nothing, Optional creatorId As String = Nothing) As BigDataPoolLibraryInfo" />
      <MemberSignature Language="F#" Value="static member BigDataPoolLibraryInfo : string * string * string * Nullable&lt;DateTimeOffset&gt; * string * string * string -&gt; Azure.ResourceManager.Synapse.Models.BigDataPoolLibraryInfo" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.BigDataPoolLibraryInfo (name, path, containerName, uploadedOn, libraryInfoType, provisioningStatus, creatorId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.BigDataPoolLibraryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="uploadedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="libraryInfoType" Type="System.String" />
        <Parameter Name="provisioningStatus" Type="System.String" />
        <Parameter Name="creatorId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the library. </param>
        <param name="path"> Storage blob path of library. </param>
        <param name="containerName"> Storage blob container name. </param>
        <param name="uploadedOn"> The last update time of the library. </param>
        <param name="libraryInfoType"> Type of the library. </param>
        <param name="provisioningStatus"> Provisioning status of the library/package. </param>
        <param name="creatorId"> Creator Id of the library/package. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.BigDataPoolLibraryInfo" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.BigDataPoolLibraryInfo" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BigDataPoolLibraryRequirements">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.BigDataPoolLibraryRequirements BigDataPoolLibraryRequirements (DateTimeOffset? updatedOn = default, string content = default, string filename = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.BigDataPoolLibraryRequirements BigDataPoolLibraryRequirements(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; updatedOn, string content, string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.BigDataPoolLibraryRequirements(System.Nullable{System.DateTimeOffset},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BigDataPoolLibraryRequirements (Optional updatedOn As Nullable(Of DateTimeOffset) = Nothing, Optional content As String = Nothing, Optional filename As String = Nothing) As BigDataPoolLibraryRequirements" />
      <MemberSignature Language="F#" Value="static member BigDataPoolLibraryRequirements : Nullable&lt;DateTimeOffset&gt; * string * string -&gt; Azure.ResourceManager.Synapse.Models.BigDataPoolLibraryRequirements" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.BigDataPoolLibraryRequirements (updatedOn, content, filename)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.BigDataPoolLibraryRequirements</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updatedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="updatedOn"> The last update time of the library requirements file. </param>
        <param name="content"> The library requirements. </param>
        <param name="filename"> The filename of the library requirements file. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.BigDataPoolLibraryRequirements" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.BigDataPoolLibraryRequirements" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BigDataPoolSparkConfigProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.BigDataPoolSparkConfigProperties BigDataPoolSparkConfigProperties (DateTimeOffset? updatedOn = default, string content = default, string filename = default, Azure.ResourceManager.Synapse.Models.SynapseSparkConfigurationType? configurationType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.BigDataPoolSparkConfigProperties BigDataPoolSparkConfigProperties(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; updatedOn, string content, string filename, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseSparkConfigurationType&gt; configurationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.BigDataPoolSparkConfigProperties(System.Nullable{System.DateTimeOffset},System.String,System.String,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseSparkConfigurationType})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BigDataPoolSparkConfigProperties (Optional updatedOn As Nullable(Of DateTimeOffset) = Nothing, Optional content As String = Nothing, Optional filename As String = Nothing, Optional configurationType As Nullable(Of SynapseSparkConfigurationType) = Nothing) As BigDataPoolSparkConfigProperties" />
      <MemberSignature Language="F#" Value="static member BigDataPoolSparkConfigProperties : Nullable&lt;DateTimeOffset&gt; * string * string * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseSparkConfigurationType&gt; -&gt; Azure.ResourceManager.Synapse.Models.BigDataPoolSparkConfigProperties" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.BigDataPoolSparkConfigProperties (updatedOn, content, filename, configurationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.BigDataPoolSparkConfigProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updatedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="configurationType" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseSparkConfigurationType&gt;" />
      </Parameters>
      <Docs>
        <param name="updatedOn"> The last update time of the spark config properties file. </param>
        <param name="content"> The spark config properties. </param>
        <param name="filename"> The filename of the spark config properties file. </param>
        <param name="configurationType"> The type of the spark config properties file. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.BigDataPoolSparkConfigProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.BigDataPoolSparkConfigProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KustoPoolDatabasePrincipalAssignmentNameAvailabilityContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.KustoPoolDatabasePrincipalAssignmentNameAvailabilityContent KustoPoolDatabasePrincipalAssignmentNameAvailabilityContent (string name = default, Azure.ResourceManager.Synapse.Models.SynapseDatabasePrincipalAssignmentType resourceType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.KustoPoolDatabasePrincipalAssignmentNameAvailabilityContent KustoPoolDatabasePrincipalAssignmentNameAvailabilityContent(string name, valuetype Azure.ResourceManager.Synapse.Models.SynapseDatabasePrincipalAssignmentType resourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.KustoPoolDatabasePrincipalAssignmentNameAvailabilityContent(System.String,Azure.ResourceManager.Synapse.Models.SynapseDatabasePrincipalAssignmentType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KustoPoolDatabasePrincipalAssignmentNameAvailabilityContent (Optional name As String = Nothing, Optional resourceType As SynapseDatabasePrincipalAssignmentType = Nothing) As KustoPoolDatabasePrincipalAssignmentNameAvailabilityContent" />
      <MemberSignature Language="F#" Value="static member KustoPoolDatabasePrincipalAssignmentNameAvailabilityContent : string * Azure.ResourceManager.Synapse.Models.SynapseDatabasePrincipalAssignmentType -&gt; Azure.ResourceManager.Synapse.Models.KustoPoolDatabasePrincipalAssignmentNameAvailabilityContent" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.KustoPoolDatabasePrincipalAssignmentNameAvailabilityContent (name, resourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.KustoPoolDatabasePrincipalAssignmentNameAvailabilityContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="resourceType" Type="Azure.ResourceManager.Synapse.Models.SynapseDatabasePrincipalAssignmentType" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> Principal Assignment resource name. </param>
        <param name="resourceType"> The type of resource, Microsoft.Synapse/workspaces/kustoPools/databases/principalAssignments. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.KustoPoolDatabasePrincipalAssignmentNameAvailabilityContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.KustoPoolDatabasePrincipalAssignmentNameAvailabilityContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KustoPoolDataConnectionNameAvailabilityContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.KustoPoolDataConnectionNameAvailabilityContent KustoPoolDataConnectionNameAvailabilityContent (string name = default, Azure.ResourceManager.Synapse.Models.SynapseDataConnectionType resourceType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.KustoPoolDataConnectionNameAvailabilityContent KustoPoolDataConnectionNameAvailabilityContent(string name, valuetype Azure.ResourceManager.Synapse.Models.SynapseDataConnectionType resourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.KustoPoolDataConnectionNameAvailabilityContent(System.String,Azure.ResourceManager.Synapse.Models.SynapseDataConnectionType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KustoPoolDataConnectionNameAvailabilityContent (Optional name As String = Nothing, Optional resourceType As SynapseDataConnectionType = Nothing) As KustoPoolDataConnectionNameAvailabilityContent" />
      <MemberSignature Language="F#" Value="static member KustoPoolDataConnectionNameAvailabilityContent : string * Azure.ResourceManager.Synapse.Models.SynapseDataConnectionType -&gt; Azure.ResourceManager.Synapse.Models.KustoPoolDataConnectionNameAvailabilityContent" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.KustoPoolDataConnectionNameAvailabilityContent (name, resourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.KustoPoolDataConnectionNameAvailabilityContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="resourceType" Type="Azure.ResourceManager.Synapse.Models.SynapseDataConnectionType" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> Data Connection name. </param>
        <param name="resourceType"> The type of resource, Microsoft.Synapse/workspaces/kustoPools/databases/dataConnections. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.KustoPoolDataConnectionNameAvailabilityContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.KustoPoolDataConnectionNameAvailabilityContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KustoPoolNameAvailabilityContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityContent KustoPoolNameAvailabilityContent (string name = default, Azure.ResourceManager.Synapse.Models.KustoPoolType resourceType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityContent KustoPoolNameAvailabilityContent(string name, valuetype Azure.ResourceManager.Synapse.Models.KustoPoolType resourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.KustoPoolNameAvailabilityContent(System.String,Azure.ResourceManager.Synapse.Models.KustoPoolType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KustoPoolNameAvailabilityContent (Optional name As String = Nothing, Optional resourceType As KustoPoolType = Nothing) As KustoPoolNameAvailabilityContent" />
      <MemberSignature Language="F#" Value="static member KustoPoolNameAvailabilityContent : string * Azure.ResourceManager.Synapse.Models.KustoPoolType -&gt; Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityContent" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.KustoPoolNameAvailabilityContent (name, resourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="resourceType" Type="Azure.ResourceManager.Synapse.Models.KustoPoolType" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> Kusto Pool name. </param>
        <param name="resourceType"> The type of resource, Microsoft.Synapse/workspaces/kustoPools. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KustoPoolNameAvailabilityResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityResult KustoPoolNameAvailabilityResult (bool? isNameAvailable = default, string name = default, string message = default, Azure.ResourceManager.Synapse.Models.KustoPoolNameUnavailableReason? reason = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityResult KustoPoolNameAvailabilityResult(valuetype System.Nullable`1&lt;bool&gt; isNameAvailable, string name, string message, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.KustoPoolNameUnavailableReason&gt; reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.KustoPoolNameAvailabilityResult(System.Nullable{System.Boolean},System.String,System.String,System.Nullable{Azure.ResourceManager.Synapse.Models.KustoPoolNameUnavailableReason})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KustoPoolNameAvailabilityResult (Optional isNameAvailable As Nullable(Of Boolean) = Nothing, Optional name As String = Nothing, Optional message As String = Nothing, Optional reason As Nullable(Of KustoPoolNameUnavailableReason) = Nothing) As KustoPoolNameAvailabilityResult" />
      <MemberSignature Language="F#" Value="static member KustoPoolNameAvailabilityResult : Nullable&lt;bool&gt; * string * string * Nullable&lt;Azure.ResourceManager.Synapse.Models.KustoPoolNameUnavailableReason&gt; -&gt; Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityResult" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.KustoPoolNameAvailabilityResult (isNameAvailable, name, message, reason)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isNameAvailable" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="reason" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.KustoPoolNameUnavailableReason&gt;" />
      </Parameters>
      <Docs>
        <param name="isNameAvailable"> Specifies a Boolean value that indicates if the name is available. </param>
        <param name="name"> The name that was checked. </param>
        <param name="message"> Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated. </param>
        <param name="reason"> Message providing the reason why the given name is invalid. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KustoPoolPrincipalAssignmentNameAvailabilityContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.KustoPoolPrincipalAssignmentNameAvailabilityContent KustoPoolPrincipalAssignmentNameAvailabilityContent (string name = default, Azure.ResourceManager.Synapse.Models.SynapsePrincipalAssignmentType resourceType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.KustoPoolPrincipalAssignmentNameAvailabilityContent KustoPoolPrincipalAssignmentNameAvailabilityContent(string name, valuetype Azure.ResourceManager.Synapse.Models.SynapsePrincipalAssignmentType resourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.KustoPoolPrincipalAssignmentNameAvailabilityContent(System.String,Azure.ResourceManager.Synapse.Models.SynapsePrincipalAssignmentType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KustoPoolPrincipalAssignmentNameAvailabilityContent (Optional name As String = Nothing, Optional resourceType As SynapsePrincipalAssignmentType = Nothing) As KustoPoolPrincipalAssignmentNameAvailabilityContent" />
      <MemberSignature Language="F#" Value="static member KustoPoolPrincipalAssignmentNameAvailabilityContent : string * Azure.ResourceManager.Synapse.Models.SynapsePrincipalAssignmentType -&gt; Azure.ResourceManager.Synapse.Models.KustoPoolPrincipalAssignmentNameAvailabilityContent" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.KustoPoolPrincipalAssignmentNameAvailabilityContent (name, resourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.KustoPoolPrincipalAssignmentNameAvailabilityContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="resourceType" Type="Azure.ResourceManager.Synapse.Models.SynapsePrincipalAssignmentType" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> Principal Assignment resource name. </param>
        <param name="resourceType"> The type of resource, Microsoft.Synapse/workspaces/kustoPools/principalAssignments. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.KustoPoolPrincipalAssignmentNameAvailabilityContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.KustoPoolPrincipalAssignmentNameAvailabilityContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KustoPoolSkuDescription">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.KustoPoolSkuDescription KustoPoolSkuDescription (string resourceType = default, string name = default, string size = default, System.Collections.Generic.IEnumerable&lt;Azure.Core.AzureLocation&gt; locations = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.KustoPoolSkuLocationInfoItem&gt; locationInfo = default, System.Collections.Generic.IEnumerable&lt;BinaryData&gt; restrictions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.KustoPoolSkuDescription KustoPoolSkuDescription(string resourceType, string name, string size, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.Core.AzureLocation&gt; locations, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Synapse.Models.KustoPoolSkuLocationInfoItem&gt; locationInfo, class System.Collections.Generic.IEnumerable`1&lt;class System.BinaryData&gt; restrictions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.KustoPoolSkuDescription(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.Core.AzureLocation},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Synapse.Models.KustoPoolSkuLocationInfoItem},System.Collections.Generic.IEnumerable{System.BinaryData})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KustoPoolSkuDescription (Optional resourceType As String = Nothing, Optional name As String = Nothing, Optional size As String = Nothing, Optional locations As IEnumerable(Of AzureLocation) = Nothing, Optional locationInfo As IEnumerable(Of KustoPoolSkuLocationInfoItem) = Nothing, Optional restrictions As IEnumerable(Of BinaryData) = Nothing) As KustoPoolSkuDescription" />
      <MemberSignature Language="F#" Value="static member KustoPoolSkuDescription : string * string * string * seq&lt;Azure.Core.AzureLocation&gt; * seq&lt;Azure.ResourceManager.Synapse.Models.KustoPoolSkuLocationInfoItem&gt; * seq&lt;BinaryData&gt; -&gt; Azure.ResourceManager.Synapse.Models.KustoPoolSkuDescription" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.KustoPoolSkuDescription (resourceType, name, size, locations, locationInfo, restrictions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.KustoPoolSkuDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="size" Type="System.String" />
        <Parameter Name="locations" Type="System.Collections.Generic.IEnumerable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="locationInfo" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.KustoPoolSkuLocationInfoItem&gt;" />
        <Parameter Name="restrictions" Type="System.Collections.Generic.IEnumerable&lt;System.BinaryData&gt;" />
      </Parameters>
      <Docs>
        <param name="resourceType"> The resource type. </param>
        <param name="name"> The name of the SKU. </param>
        <param name="size"> The size of the SKU. </param>
        <param name="locations"> The set of locations that the SKU is available. </param>
        <param name="locationInfo"> Locations and zones. </param>
        <param name="restrictions"> The restrictions because of which SKU cannot be used. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.KustoPoolSkuDescription" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.KustoPoolSkuDescription" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KustoPoolSkuLocationInfoItem">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.KustoPoolSkuLocationInfoItem KustoPoolSkuLocationInfoItem (Azure.Core.AzureLocation location = default, System.Collections.Generic.IEnumerable&lt;string&gt; zones = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.KustoPoolSkuLocationInfoItem KustoPoolSkuLocationInfoItem(valuetype Azure.Core.AzureLocation location, class System.Collections.Generic.IEnumerable`1&lt;string&gt; zones) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.KustoPoolSkuLocationInfoItem(Azure.Core.AzureLocation,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KustoPoolSkuLocationInfoItem (Optional location As AzureLocation = Nothing, Optional zones As IEnumerable(Of String) = Nothing) As KustoPoolSkuLocationInfoItem" />
      <MemberSignature Language="F#" Value="static member KustoPoolSkuLocationInfoItem : Azure.Core.AzureLocation * seq&lt;string&gt; -&gt; Azure.ResourceManager.Synapse.Models.KustoPoolSkuLocationInfoItem" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.KustoPoolSkuLocationInfoItem (location, zones)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.KustoPoolSkuLocationInfoItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="zones" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="location"> The available location of the SKU. </param>
        <param name="zones"> The available zone of the SKU. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.KustoPoolSkuLocationInfoItem" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.KustoPoolSkuLocationInfoItem" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateEndpointConnectionForPrivateLinkHubBasic">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.PrivateEndpointConnectionForPrivateLinkHubBasic PrivateEndpointConnectionForPrivateLinkHubBasic (string id = default, Azure.ResourceManager.Synapse.Models.SynapsePrivateEndpointConnectionProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.PrivateEndpointConnectionForPrivateLinkHubBasic PrivateEndpointConnectionForPrivateLinkHubBasic(string id, class Azure.ResourceManager.Synapse.Models.SynapsePrivateEndpointConnectionProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.PrivateEndpointConnectionForPrivateLinkHubBasic(System.String,Azure.ResourceManager.Synapse.Models.SynapsePrivateEndpointConnectionProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PrivateEndpointConnectionForPrivateLinkHubBasic (Optional id As String = Nothing, Optional properties As SynapsePrivateEndpointConnectionProperties = Nothing) As PrivateEndpointConnectionForPrivateLinkHubBasic" />
      <MemberSignature Language="F#" Value="static member PrivateEndpointConnectionForPrivateLinkHubBasic : string * Azure.ResourceManager.Synapse.Models.SynapsePrivateEndpointConnectionProperties -&gt; Azure.ResourceManager.Synapse.Models.PrivateEndpointConnectionForPrivateLinkHubBasic" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.PrivateEndpointConnectionForPrivateLinkHubBasic (id, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.PrivateEndpointConnectionForPrivateLinkHubBasic</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="properties" Type="Azure.ResourceManager.Synapse.Models.SynapsePrivateEndpointConnectionProperties" />
      </Parameters>
      <Docs>
        <param name="id" />
        <param name="properties"> Properties of a private endpoint connection. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.PrivateEndpointConnectionForPrivateLinkHubBasic" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.PrivateEndpointConnectionForPrivateLinkHubBasic" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceAllFirewallRulesOperationResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResult ReplaceAllFirewallRulesOperationResult (string operationId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResult ReplaceAllFirewallRulesOperationResult(string operationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.ReplaceAllFirewallRulesOperationResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReplaceAllFirewallRulesOperationResult (Optional operationId As String = Nothing) As ReplaceAllFirewallRulesOperationResult" />
      <MemberSignature Language="F#" Value="static member ReplaceAllFirewallRulesOperationResult : string -&gt; Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResult" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.ReplaceAllFirewallRulesOperationResult operationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operationId"> The operation ID. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlPoolUsage">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SqlPoolUsage SqlPoolUsage (string name = default, string resourceName = default, string displayName = default, double? currentValue = default, double? limit = default, string unit = default, DateTimeOffset? nextResetOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SqlPoolUsage SqlPoolUsage(string name, string resourceName, string displayName, valuetype System.Nullable`1&lt;float64&gt; currentValue, valuetype System.Nullable`1&lt;float64&gt; limit, string unit, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; nextResetOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SqlPoolUsage(System.String,System.String,System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SqlPoolUsage (Optional name As String = Nothing, Optional resourceName As String = Nothing, Optional displayName As String = Nothing, Optional currentValue As Nullable(Of Double) = Nothing, Optional limit As Nullable(Of Double) = Nothing, Optional unit As String = Nothing, Optional nextResetOn As Nullable(Of DateTimeOffset) = Nothing) As SqlPoolUsage" />
      <MemberSignature Language="F#" Value="static member SqlPoolUsage : string * string * string * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.Synapse.Models.SqlPoolUsage" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SqlPoolUsage (name, resourceName, displayName, currentValue, limit, unit, nextResetOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SqlPoolUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="currentValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="unit" Type="System.String" />
        <Parameter Name="nextResetOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the usage metric. </param>
        <param name="resourceName"> The name of the resource. </param>
        <param name="displayName"> The usage metric display name. </param>
        <param name="currentValue"> The current value of the usage metric. </param>
        <param name="limit"> The current limit of the usage metric. </param>
        <param name="unit"> The units of the usage metric. </param>
        <param name="nextResetOn"> The next reset time for the usage metric (ISO8601 format). </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SqlPoolUsage" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SqlPoolUsage" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlPoolVulnerabilityAssessmentScansExport">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SqlPoolVulnerabilityAssessmentScansExport SqlPoolVulnerabilityAssessmentScansExport (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string exportedReportLocation = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SqlPoolVulnerabilityAssessmentScansExport SqlPoolVulnerabilityAssessmentScansExport(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string exportedReportLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SqlPoolVulnerabilityAssessmentScansExport(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SqlPoolVulnerabilityAssessmentScansExport (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional exportedReportLocation As String = Nothing) As SqlPoolVulnerabilityAssessmentScansExport" />
      <MemberSignature Language="F#" Value="static member SqlPoolVulnerabilityAssessmentScansExport : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string -&gt; Azure.ResourceManager.Synapse.Models.SqlPoolVulnerabilityAssessmentScansExport" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SqlPoolVulnerabilityAssessmentScansExport (id, name, resourceType, systemData, exportedReportLocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SqlPoolVulnerabilityAssessmentScansExport</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="exportedReportLocation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="exportedReportLocation"> Location of the exported report (e.g. https://myStorage.blob.core.windows.net/VaScans/scans/serverName/databaseName/scan_scanId.xlsx). </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SqlPoolVulnerabilityAssessmentScansExport" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SqlPoolVulnerabilityAssessmentScansExport" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseAadOnlyAuthenticationData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationData SynapseAadOnlyAuthenticationData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, bool? isAadOnlyAuthenticationEnabled = default, Azure.ResourceManager.Synapse.Models.AadAuthenticationState? state = default, DateTimeOffset? createdOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationData SynapseAadOnlyAuthenticationData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;bool&gt; isAadOnlyAuthenticationEnabled, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.AadAuthenticationState&gt; state, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseAadOnlyAuthenticationData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Synapse.Models.AadAuthenticationState},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseAadOnlyAuthenticationData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional isAadOnlyAuthenticationEnabled As Nullable(Of Boolean) = Nothing, Optional state As Nullable(Of AadAuthenticationState) = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing) As SynapseAadOnlyAuthenticationData" />
      <MemberSignature Language="F#" Value="static member SynapseAadOnlyAuthenticationData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.AadAuthenticationState&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseAadOnlyAuthenticationData (id, name, resourceType, systemData, isAadOnlyAuthenticationEnabled, state, createdOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="isAadOnlyAuthenticationEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.AadAuthenticationState&gt;" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="isAadOnlyAuthenticationEnabled"> Azure Active Directory only Authentication enabled. </param>
        <param name="state"> property configuration state. </param>
        <param name="createdOn"> property configuration date. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseAttachedDatabaseConfigurationData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseAttachedDatabaseConfigurationData SynapseAttachedDatabaseConfigurationData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.Synapse.Models.ResourceProvisioningState? provisioningState = default, string databaseName = default, Azure.Core.ResourceIdentifier kustoPoolResourceId = default, System.Collections.Generic.IEnumerable&lt;string&gt; attachedDatabaseNames = default, Azure.ResourceManager.Synapse.Models.SynapseDefaultPrincipalsModificationKind? defaultPrincipalsModificationKind = default, Azure.ResourceManager.Synapse.Models.SynapseTableLevelSharingProperties tableLevelSharingProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseAttachedDatabaseConfigurationData SynapseAttachedDatabaseConfigurationData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt; provisioningState, string databaseName, class Azure.Core.ResourceIdentifier kustoPoolResourceId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; attachedDatabaseNames, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseDefaultPrincipalsModificationKind&gt; defaultPrincipalsModificationKind, class Azure.ResourceManager.Synapse.Models.SynapseTableLevelSharingProperties tableLevelSharingProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseAttachedDatabaseConfigurationData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.Core.AzureLocation},System.Nullable{Azure.ResourceManager.Synapse.Models.ResourceProvisioningState},System.String,Azure.Core.ResourceIdentifier,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseDefaultPrincipalsModificationKind},Azure.ResourceManager.Synapse.Models.SynapseTableLevelSharingProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseAttachedDatabaseConfigurationData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional provisioningState As Nullable(Of ResourceProvisioningState) = Nothing, Optional databaseName As String = Nothing, Optional kustoPoolResourceId As ResourceIdentifier = Nothing, Optional attachedDatabaseNames As IEnumerable(Of String) = Nothing, Optional defaultPrincipalsModificationKind As Nullable(Of SynapseDefaultPrincipalsModificationKind) = Nothing, Optional tableLevelSharingProperties As SynapseTableLevelSharingProperties = Nothing) As SynapseAttachedDatabaseConfigurationData" />
      <MemberSignature Language="F#" Value="static member SynapseAttachedDatabaseConfigurationData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.Core.AzureLocation&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt; * string * Azure.Core.ResourceIdentifier * seq&lt;string&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseDefaultPrincipalsModificationKind&gt; * Azure.ResourceManager.Synapse.Models.SynapseTableLevelSharingProperties -&gt; Azure.ResourceManager.Synapse.SynapseAttachedDatabaseConfigurationData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseAttachedDatabaseConfigurationData (id, name, resourceType, systemData, location, provisioningState, databaseName, kustoPoolResourceId, attachedDatabaseNames, defaultPrincipalsModificationKind, tableLevelSharingProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseAttachedDatabaseConfigurationData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt;" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="kustoPoolResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="attachedDatabaseNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="defaultPrincipalsModificationKind" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseDefaultPrincipalsModificationKind&gt;" />
        <Parameter Name="tableLevelSharingProperties" Type="Azure.ResourceManager.Synapse.Models.SynapseTableLevelSharingProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="location"> Resource location. </param>
        <param name="provisioningState"> The provisioned state of the resource. </param>
        <param name="databaseName"> The name of the database which you would like to attach, use * if you want to follow all current and future databases. </param>
        <param name="kustoPoolResourceId"> The resource id of the kusto pool where the databases you would like to attach reside. </param>
        <param name="attachedDatabaseNames"> The list of databases from the clusterResourceId which are currently attached to the kusto pool. </param>
        <param name="defaultPrincipalsModificationKind"> The default principals modification kind. </param>
        <param name="tableLevelSharingProperties"> Table level sharing specifications. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseAttachedDatabaseConfigurationData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseAttachedDatabaseConfigurationData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseBigDataPoolInfoData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoData SynapseBigDataPoolInfoData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, string provisioningState = default, Azure.ResourceManager.Synapse.Models.BigDataPoolAutoScaleProperties autoScale = default, DateTimeOffset? createdOn = default, Azure.ResourceManager.Synapse.Models.BigDataPoolAutoPauseProperties autoPause = default, bool? isComputeIsolationEnabled = default, bool? isAutotuneEnabled = default, bool? isSessionLevelPackagesEnabled = default, int? cacheSize = default, Azure.ResourceManager.Synapse.Models.SynapseDynamicExecutorAllocation dynamicExecutorAllocation = default, string sparkEventsFolder = default, int? nodeCount = default, Azure.ResourceManager.Synapse.Models.BigDataPoolLibraryRequirements libraryRequirements = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.BigDataPoolLibraryInfo&gt; customLibraries = default, Azure.ResourceManager.Synapse.Models.BigDataPoolSparkConfigProperties sparkConfigProperties = default, string sparkVersion = default, string defaultSparkLogFolder = default, Azure.ResourceManager.Synapse.Models.BigDataPoolNodeSize? nodeSize = default, Azure.ResourceManager.Synapse.Models.BigDataPoolNodeSizeFamily? nodeSizeFamily = default, DateTimeOffset? lastSucceededOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoData SynapseBigDataPoolInfoData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, string provisioningState, class Azure.ResourceManager.Synapse.Models.BigDataPoolAutoScaleProperties autoScale, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, class Azure.ResourceManager.Synapse.Models.BigDataPoolAutoPauseProperties autoPause, valuetype System.Nullable`1&lt;bool&gt; isComputeIsolationEnabled, valuetype System.Nullable`1&lt;bool&gt; isAutotuneEnabled, valuetype System.Nullable`1&lt;bool&gt; isSessionLevelPackagesEnabled, valuetype System.Nullable`1&lt;int32&gt; cacheSize, class Azure.ResourceManager.Synapse.Models.SynapseDynamicExecutorAllocation dynamicExecutorAllocation, string sparkEventsFolder, valuetype System.Nullable`1&lt;int32&gt; nodeCount, class Azure.ResourceManager.Synapse.Models.BigDataPoolLibraryRequirements libraryRequirements, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Synapse.Models.BigDataPoolLibraryInfo&gt; customLibraries, class Azure.ResourceManager.Synapse.Models.BigDataPoolSparkConfigProperties sparkConfigProperties, string sparkVersion, string defaultSparkLogFolder, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.BigDataPoolNodeSize&gt; nodeSize, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.BigDataPoolNodeSizeFamily&gt; nodeSizeFamily, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastSucceededOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseBigDataPoolInfoData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.String,Azure.ResourceManager.Synapse.Models.BigDataPoolAutoScaleProperties,System.Nullable{System.DateTimeOffset},Azure.ResourceManager.Synapse.Models.BigDataPoolAutoPauseProperties,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},Azure.ResourceManager.Synapse.Models.SynapseDynamicExecutorAllocation,System.String,System.Nullable{System.Int32},Azure.ResourceManager.Synapse.Models.BigDataPoolLibraryRequirements,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Synapse.Models.BigDataPoolLibraryInfo},Azure.ResourceManager.Synapse.Models.BigDataPoolSparkConfigProperties,System.String,System.String,System.Nullable{Azure.ResourceManager.Synapse.Models.BigDataPoolNodeSize},System.Nullable{Azure.ResourceManager.Synapse.Models.BigDataPoolNodeSizeFamily},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseBigDataPoolInfoData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional provisioningState As String = Nothing, Optional autoScale As BigDataPoolAutoScaleProperties = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional autoPause As BigDataPoolAutoPauseProperties = Nothing, Optional isComputeIsolationEnabled As Nullable(Of Boolean) = Nothing, Optional isAutotuneEnabled As Nullable(Of Boolean) = Nothing, Optional isSessionLevelPackagesEnabled As Nullable(Of Boolean) = Nothing, Optional cacheSize As Nullable(Of Integer) = Nothing, Optional dynamicExecutorAllocation As SynapseDynamicExecutorAllocation = Nothing, Optional sparkEventsFolder As String = Nothing, Optional nodeCount As Nullable(Of Integer) = Nothing, Optional libraryRequirements As BigDataPoolLibraryRequirements = Nothing, Optional customLibraries As IEnumerable(Of BigDataPoolLibraryInfo) = Nothing, Optional sparkConfigProperties As BigDataPoolSparkConfigProperties = Nothing, Optional sparkVersion As String = Nothing, Optional defaultSparkLogFolder As String = Nothing, Optional nodeSize As Nullable(Of BigDataPoolNodeSize) = Nothing, Optional nodeSizeFamily As Nullable(Of BigDataPoolNodeSizeFamily) = Nothing, Optional lastSucceededOn As Nullable(Of DateTimeOffset) = Nothing) As SynapseBigDataPoolInfoData" />
      <MemberSignature Language="F#" Value="static member SynapseBigDataPoolInfoData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * string * Azure.ResourceManager.Synapse.Models.BigDataPoolAutoScaleProperties * Nullable&lt;DateTimeOffset&gt; * Azure.ResourceManager.Synapse.Models.BigDataPoolAutoPauseProperties * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Azure.ResourceManager.Synapse.Models.SynapseDynamicExecutorAllocation * string * Nullable&lt;int&gt; * Azure.ResourceManager.Synapse.Models.BigDataPoolLibraryRequirements * seq&lt;Azure.ResourceManager.Synapse.Models.BigDataPoolLibraryInfo&gt; * Azure.ResourceManager.Synapse.Models.BigDataPoolSparkConfigProperties * string * string * Nullable&lt;Azure.ResourceManager.Synapse.Models.BigDataPoolNodeSize&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.BigDataPoolNodeSizeFamily&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseBigDataPoolInfoData (id, name, resourceType, systemData, tags, location, provisioningState, autoScale, createdOn, autoPause, isComputeIsolationEnabled, isAutotuneEnabled, isSessionLevelPackagesEnabled, cacheSize, dynamicExecutorAllocation, sparkEventsFolder, nodeCount, libraryRequirements, customLibraries, sparkConfigProperties, sparkVersion, defaultSparkLogFolder, nodeSize, nodeSizeFamily, lastSucceededOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="autoScale" Type="Azure.ResourceManager.Synapse.Models.BigDataPoolAutoScaleProperties" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="autoPause" Type="Azure.ResourceManager.Synapse.Models.BigDataPoolAutoPauseProperties" />
        <Parameter Name="isComputeIsolationEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isAutotuneEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isSessionLevelPackagesEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cacheSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="dynamicExecutorAllocation" Type="Azure.ResourceManager.Synapse.Models.SynapseDynamicExecutorAllocation" />
        <Parameter Name="sparkEventsFolder" Type="System.String" />
        <Parameter Name="nodeCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="libraryRequirements" Type="Azure.ResourceManager.Synapse.Models.BigDataPoolLibraryRequirements" />
        <Parameter Name="customLibraries" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.BigDataPoolLibraryInfo&gt;" />
        <Parameter Name="sparkConfigProperties" Type="Azure.ResourceManager.Synapse.Models.BigDataPoolSparkConfigProperties" />
        <Parameter Name="sparkVersion" Type="System.String" />
        <Parameter Name="defaultSparkLogFolder" Type="System.String" />
        <Parameter Name="nodeSize" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.BigDataPoolNodeSize&gt;" />
        <Parameter Name="nodeSizeFamily" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.BigDataPoolNodeSizeFamily&gt;" />
        <Parameter Name="lastSucceededOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="provisioningState"> The state of the Big Data pool. </param>
        <param name="autoScale"> Auto-scaling properties. </param>
        <param name="createdOn"> The time when the Big Data pool was created. </param>
        <param name="autoPause"> Auto-pausing properties. </param>
        <param name="isComputeIsolationEnabled"> Whether compute isolation is required or not. </param>
        <param name="isAutotuneEnabled"> Whether autotune is required or not. </param>
        <param name="isSessionLevelPackagesEnabled"> Whether session level packages enabled. </param>
        <param name="cacheSize"> The cache size. </param>
        <param name="dynamicExecutorAllocation"> Dynamic Executor Allocation. </param>
        <param name="sparkEventsFolder"> The Spark events folder. </param>
        <param name="nodeCount"> The number of nodes in the Big Data pool. </param>
        <param name="libraryRequirements"> Library version requirements. </param>
        <param name="customLibraries"> List of custom libraries/packages associated with the spark pool. </param>
        <param name="sparkConfigProperties"> Spark configuration file to specify additional properties. </param>
        <param name="sparkVersion"> The Apache Spark version. </param>
        <param name="defaultSparkLogFolder"> The default folder where Spark logs will be written. </param>
        <param name="nodeSize"> The level of compute power that each node in the Big Data pool has. </param>
        <param name="nodeSizeFamily"> The kind of nodes that the Big Data pool provides. </param>
        <param name="lastSucceededOn"> The time when the Big Data pool was updated successfully. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseClusterPrincipalAssignmentData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseClusterPrincipalAssignmentData SynapseClusterPrincipalAssignmentData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string principalId = default, Azure.ResourceManager.Synapse.Models.SynapseClusterPrincipalRole? role = default, Guid? tenantId = default, Azure.ResourceManager.Synapse.Models.SynapsePrincipalType? principalType = default, string tenantName = default, string principalName = default, Azure.ResourceManager.Synapse.Models.ResourceProvisioningState? provisioningState = default, Guid? aadObjectId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseClusterPrincipalAssignmentData SynapseClusterPrincipalAssignmentData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string principalId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseClusterPrincipalRole&gt; role, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; tenantId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapsePrincipalType&gt; principalType, string tenantName, string principalName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt; provisioningState, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; aadObjectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseClusterPrincipalAssignmentData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseClusterPrincipalRole},System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.Synapse.Models.SynapsePrincipalType},System.String,System.String,System.Nullable{Azure.ResourceManager.Synapse.Models.ResourceProvisioningState},System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseClusterPrincipalAssignmentData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional principalId As String = Nothing, Optional role As Nullable(Of SynapseClusterPrincipalRole) = Nothing, Optional tenantId As Nullable(Of Guid) = Nothing, Optional principalType As Nullable(Of SynapsePrincipalType) = Nothing, Optional tenantName As String = Nothing, Optional principalName As String = Nothing, Optional provisioningState As Nullable(Of ResourceProvisioningState) = Nothing, Optional aadObjectId As Nullable(Of Guid) = Nothing) As SynapseClusterPrincipalAssignmentData" />
      <MemberSignature Language="F#" Value="static member SynapseClusterPrincipalAssignmentData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseClusterPrincipalRole&gt; * Nullable&lt;Guid&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapsePrincipalType&gt; * string * string * Nullable&lt;Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt; * Nullable&lt;Guid&gt; -&gt; Azure.ResourceManager.Synapse.SynapseClusterPrincipalAssignmentData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseClusterPrincipalAssignmentData (id, name, resourceType, systemData, principalId, role, tenantId, principalType, tenantName, principalName, provisioningState, aadObjectId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseClusterPrincipalAssignmentData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="principalId" Type="System.String" />
        <Parameter Name="role" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseClusterPrincipalRole&gt;" />
        <Parameter Name="tenantId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="principalType" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapsePrincipalType&gt;" />
        <Parameter Name="tenantName" Type="System.String" />
        <Parameter Name="principalName" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt;" />
        <Parameter Name="aadObjectId" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="principalId"> The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name. </param>
        <param name="role"> Cluster principal role. </param>
        <param name="tenantId"> The tenant id of the principal. </param>
        <param name="principalType"> Principal type. </param>
        <param name="tenantName"> The tenant name of the principal. </param>
        <param name="principalName"> The principal name. </param>
        <param name="provisioningState"> The provisioned state of the resource. </param>
        <param name="aadObjectId"> The service principal object id in AAD (Azure active directory). </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseClusterPrincipalAssignmentData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseClusterPrincipalAssignmentData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseDatabaseData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseDatabaseData SynapseDatabaseData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.AzureLocation? location = default, string kind = &quot;Unknown&quot;);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseDatabaseData SynapseDatabaseData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, string kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseDatabaseData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.Core.AzureLocation},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseDatabaseData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional kind As String = &quot;Unknown&quot;) As SynapseDatabaseData" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="static member SynapseDatabaseData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.Core.AzureLocation&gt; * string -&gt; Azure.ResourceManager.Synapse.SynapseDatabaseData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseDatabaseData (id, name, resourceType, systemData, location, kind)" />
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseDatabaseData SynapseDatabaseData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.AzureLocation? location = default, string kind = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseDatabaseData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional kind As String = Nothing) As SynapseDatabaseData" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseDatabaseData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="kind" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="location"> Resource location. </param>
        <param name="kind"> Kind of the database. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseDatabaseData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseDatabaseData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseDatabasePrincipalAssignmentData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseDatabasePrincipalAssignmentData SynapseDatabasePrincipalAssignmentData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string principalId = default, Azure.ResourceManager.Synapse.Models.SynapseDatabasePrincipalRole? role = default, Guid? tenantId = default, Azure.ResourceManager.Synapse.Models.SynapsePrincipalType? principalType = default, string tenantName = default, string principalName = default, Azure.ResourceManager.Synapse.Models.ResourceProvisioningState? provisioningState = default, Guid? aadObjectId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseDatabasePrincipalAssignmentData SynapseDatabasePrincipalAssignmentData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string principalId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseDatabasePrincipalRole&gt; role, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; tenantId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapsePrincipalType&gt; principalType, string tenantName, string principalName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt; provisioningState, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; aadObjectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseDatabasePrincipalAssignmentData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseDatabasePrincipalRole},System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.Synapse.Models.SynapsePrincipalType},System.String,System.String,System.Nullable{Azure.ResourceManager.Synapse.Models.ResourceProvisioningState},System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseDatabasePrincipalAssignmentData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional principalId As String = Nothing, Optional role As Nullable(Of SynapseDatabasePrincipalRole) = Nothing, Optional tenantId As Nullable(Of Guid) = Nothing, Optional principalType As Nullable(Of SynapsePrincipalType) = Nothing, Optional tenantName As String = Nothing, Optional principalName As String = Nothing, Optional provisioningState As Nullable(Of ResourceProvisioningState) = Nothing, Optional aadObjectId As Nullable(Of Guid) = Nothing) As SynapseDatabasePrincipalAssignmentData" />
      <MemberSignature Language="F#" Value="static member SynapseDatabasePrincipalAssignmentData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseDatabasePrincipalRole&gt; * Nullable&lt;Guid&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapsePrincipalType&gt; * string * string * Nullable&lt;Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt; * Nullable&lt;Guid&gt; -&gt; Azure.ResourceManager.Synapse.SynapseDatabasePrincipalAssignmentData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseDatabasePrincipalAssignmentData (id, name, resourceType, systemData, principalId, role, tenantId, principalType, tenantName, principalName, provisioningState, aadObjectId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseDatabasePrincipalAssignmentData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="principalId" Type="System.String" />
        <Parameter Name="role" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseDatabasePrincipalRole&gt;" />
        <Parameter Name="tenantId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="principalType" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapsePrincipalType&gt;" />
        <Parameter Name="tenantName" Type="System.String" />
        <Parameter Name="principalName" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt;" />
        <Parameter Name="aadObjectId" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="principalId"> The principal ID assigned to the database principal. It can be a user email, application ID, or security group name. </param>
        <param name="role"> Database principal role. </param>
        <param name="tenantId"> The tenant id of the principal. </param>
        <param name="principalType"> Principal type. </param>
        <param name="tenantName"> The tenant name of the principal. </param>
        <param name="principalName"> The principal name. </param>
        <param name="provisioningState"> The provisioned state of the resource. </param>
        <param name="aadObjectId"> The service principal object id in AAD (Azure active directory). </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseDatabasePrincipalAssignmentData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseDatabasePrincipalAssignmentData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseDataConnectionData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseDataConnectionData SynapseDataConnectionData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.AzureLocation? location = default, string kind = &quot;Unknown&quot;);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseDataConnectionData SynapseDataConnectionData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, string kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseDataConnectionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.Core.AzureLocation},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseDataConnectionData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional kind As String = &quot;Unknown&quot;) As SynapseDataConnectionData" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="static member SynapseDataConnectionData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.Core.AzureLocation&gt; * string -&gt; Azure.ResourceManager.Synapse.SynapseDataConnectionData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseDataConnectionData (id, name, resourceType, systemData, location, kind)" />
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseDataConnectionData SynapseDataConnectionData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.AzureLocation? location = default, string kind = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseDataConnectionData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional kind As String = Nothing) As SynapseDataConnectionData" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseDataConnectionData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="kind" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="location"> Resource location. </param>
        <param name="kind"> Kind of the endpoint for the data connection. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseDataConnectionData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseDataConnectionData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseDataConnectionValidationListResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseDataConnectionValidationListResult SynapseDataConnectionValidationListResult (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseDataConnectionValidationResult&gt; value = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseDataConnectionValidationListResult SynapseDataConnectionValidationListResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Synapse.Models.SynapseDataConnectionValidationResult&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseDataConnectionValidationListResult(System.Collections.Generic.IEnumerable{Azure.ResourceManager.Synapse.Models.SynapseDataConnectionValidationResult})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseDataConnectionValidationListResult (Optional value As IEnumerable(Of SynapseDataConnectionValidationResult) = Nothing) As SynapseDataConnectionValidationListResult" />
      <MemberSignature Language="F#" Value="static member SynapseDataConnectionValidationListResult : seq&lt;Azure.ResourceManager.Synapse.Models.SynapseDataConnectionValidationResult&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseDataConnectionValidationListResult" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseDataConnectionValidationListResult value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseDataConnectionValidationListResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseDataConnectionValidationResult&gt;" />
      </Parameters>
      <Docs>
        <param name="value"> The list of Kusto data connection validation errors. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseDataConnectionValidationListResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseDataConnectionValidationListResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseDataConnectionValidationResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseDataConnectionValidationResult SynapseDataConnectionValidationResult (string errorMessage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseDataConnectionValidationResult SynapseDataConnectionValidationResult(string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseDataConnectionValidationResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseDataConnectionValidationResult (Optional errorMessage As String = Nothing) As SynapseDataConnectionValidationResult" />
      <MemberSignature Language="F#" Value="static member SynapseDataConnectionValidationResult : string -&gt; Azure.ResourceManager.Synapse.Models.SynapseDataConnectionValidationResult" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseDataConnectionValidationResult errorMessage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseDataConnectionValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="errorMessage"> A message which indicates a problem in data connection validation. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseDataConnectionValidationResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseDataConnectionValidationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseDataMaskingPolicyData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseDataMaskingPolicyData SynapseDataMaskingPolicyData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.AzureLocation? location = default, string kind = default, string managedBy = default, Azure.ResourceManager.Synapse.Models.SynapseDataMaskingState? dataMaskingState = default, string exemptPrincipals = default, string applicationPrincipals = default, string maskingLevel = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseDataMaskingPolicyData SynapseDataMaskingPolicyData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, string kind, string managedBy, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseDataMaskingState&gt; dataMaskingState, string exemptPrincipals, string applicationPrincipals, string maskingLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseDataMaskingPolicyData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.Core.AzureLocation},System.String,System.String,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseDataMaskingState},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseDataMaskingPolicyData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional kind As String = Nothing, Optional managedBy As String = Nothing, Optional dataMaskingState As Nullable(Of SynapseDataMaskingState) = Nothing, Optional exemptPrincipals As String = Nothing, Optional applicationPrincipals As String = Nothing, Optional maskingLevel As String = Nothing) As SynapseDataMaskingPolicyData" />
      <MemberSignature Language="F#" Value="static member SynapseDataMaskingPolicyData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.Core.AzureLocation&gt; * string * string * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseDataMaskingState&gt; * string * string * string -&gt; Azure.ResourceManager.Synapse.SynapseDataMaskingPolicyData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseDataMaskingPolicyData (id, name, resourceType, systemData, location, kind, managedBy, dataMaskingState, exemptPrincipals, applicationPrincipals, maskingLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseDataMaskingPolicyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="managedBy" Type="System.String" />
        <Parameter Name="dataMaskingState" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseDataMaskingState&gt;" />
        <Parameter Name="exemptPrincipals" Type="System.String" />
        <Parameter Name="applicationPrincipals" Type="System.String" />
        <Parameter Name="maskingLevel" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="location"> The location of the data masking policy. </param>
        <param name="kind"> The kind of data masking policy. Metadata, used for Azure portal. </param>
        <param name="managedBy"> Fully qualified resource ID of the sql pool. </param>
        <param name="dataMaskingState"> The state of the data masking policy. </param>
        <param name="exemptPrincipals"> The list of the exempt principals. Specifies the semicolon-separated list of database users for which the data masking policy does not apply. The specified users receive data results without masking for all of the database queries. </param>
        <param name="applicationPrincipals"> The list of the application principals. This is a legacy parameter and is no longer used. </param>
        <param name="maskingLevel"> The masking level. This is a legacy parameter and is no longer used. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseDataMaskingPolicyData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseDataMaskingPolicyData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseDataMaskingRuleData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseDataMaskingRuleData SynapseDataMaskingRuleData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.AzureLocation? location = default, string kind = default, string ruleId = default, string aliasName = default, Azure.ResourceManager.Synapse.Models.SynapseDataMaskingRuleState? ruleState = default, string schemaName = default, string tableName = default, string columnName = default, Azure.ResourceManager.Synapse.Models.SynapseDataMaskingFunction? maskingFunction = default, string numberFrom = default, string numberTo = default, string prefixSize = default, string suffixSize = default, string replacementString = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseDataMaskingRuleData SynapseDataMaskingRuleData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, string kind, string ruleId, string aliasName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseDataMaskingRuleState&gt; ruleState, string schemaName, string tableName, string columnName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseDataMaskingFunction&gt; maskingFunction, string numberFrom, string numberTo, string prefixSize, string suffixSize, string replacementString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseDataMaskingRuleData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.Core.AzureLocation},System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseDataMaskingRuleState},System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseDataMaskingFunction},System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseDataMaskingRuleData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional kind As String = Nothing, Optional ruleId As String = Nothing, Optional aliasName As String = Nothing, Optional ruleState As Nullable(Of SynapseDataMaskingRuleState) = Nothing, Optional schemaName As String = Nothing, Optional tableName As String = Nothing, Optional columnName As String = Nothing, Optional maskingFunction As Nullable(Of SynapseDataMaskingFunction) = Nothing, Optional numberFrom As String = Nothing, Optional numberTo As String = Nothing, Optional prefixSize As String = Nothing, Optional suffixSize As String = Nothing, Optional replacementString As String = Nothing) As SynapseDataMaskingRuleData" />
      <MemberSignature Language="F#" Value="static member SynapseDataMaskingRuleData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.Core.AzureLocation&gt; * string * string * string * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseDataMaskingRuleState&gt; * string * string * string * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseDataMaskingFunction&gt; * string * string * string * string * string -&gt; Azure.ResourceManager.Synapse.SynapseDataMaskingRuleData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseDataMaskingRuleData (id, name, resourceType, systemData, location, kind, ruleId, aliasName, ruleState, schemaName, tableName, columnName, maskingFunction, numberFrom, numberTo, prefixSize, suffixSize, replacementString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseDataMaskingRuleData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="ruleId" Type="System.String" />
        <Parameter Name="aliasName" Type="System.String" />
        <Parameter Name="ruleState" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseDataMaskingRuleState&gt;" />
        <Parameter Name="schemaName" Type="System.String" />
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="maskingFunction" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseDataMaskingFunction&gt;" />
        <Parameter Name="numberFrom" Type="System.String" />
        <Parameter Name="numberTo" Type="System.String" />
        <Parameter Name="prefixSize" Type="System.String" />
        <Parameter Name="suffixSize" Type="System.String" />
        <Parameter Name="replacementString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="location"> The location of the data masking rule. </param>
        <param name="kind"> The kind of Data Masking Rule. Metadata, used for Azure portal. </param>
        <param name="ruleId"> The rule Id. </param>
        <param name="aliasName"> The alias name. This is a legacy parameter and is no longer used. </param>
        <param name="ruleState"> The rule state. Used to delete a rule. To delete an existing rule, specify the schemaName, tableName, columnName, maskingFunction, and specify ruleState as disabled. However, if the rule doesn't already exist, the rule will be created with ruleState set to enabled, regardless of the provided value of ruleState. </param>
        <param name="schemaName"> The schema name on which the data masking rule is applied. </param>
        <param name="tableName"> The table name on which the data masking rule is applied. </param>
        <param name="columnName"> The column name on which the data masking rule is applied. </param>
        <param name="maskingFunction"> The masking function that is used for the data masking rule. </param>
        <param name="numberFrom"> The numberFrom property of the masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored. </param>
        <param name="numberTo"> The numberTo property of the data masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored. </param>
        <param name="prefixSize"> If maskingFunction is set to Text, the number of characters to show unmasked in the beginning of the string. Otherwise, this parameter will be ignored. </param>
        <param name="suffixSize"> If maskingFunction is set to Text, the number of characters to show unmasked at the end of the string. Otherwise, this parameter will be ignored. </param>
        <param name="replacementString"> If maskingFunction is set to Text, the character to use for masking the unexposed part of the string. Otherwise, this parameter will be ignored. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseDataMaskingRuleData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseDataMaskingRuleData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseDataSourceCapacity">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseDataSourceCapacity SynapseDataSourceCapacity (Azure.ResourceManager.Synapse.Models.SynapseDataSourceScaleType scaleType = default, int minimum = 0, int maximum = 0, int default = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseDataSourceCapacity SynapseDataSourceCapacity(valuetype Azure.ResourceManager.Synapse.Models.SynapseDataSourceScaleType scaleType, int32 minimum, int32 maximum, int32 default) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseDataSourceCapacity(Azure.ResourceManager.Synapse.Models.SynapseDataSourceScaleType,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseDataSourceCapacity (Optional scaleType As SynapseDataSourceScaleType = Nothing, Optional minimum As Integer = 0, Optional maximum As Integer = 0, Optional default As Integer = 0) As SynapseDataSourceCapacity" />
      <MemberSignature Language="F#" Value="static member SynapseDataSourceCapacity : Azure.ResourceManager.Synapse.Models.SynapseDataSourceScaleType * int * int * int -&gt; Azure.ResourceManager.Synapse.Models.SynapseDataSourceCapacity" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseDataSourceCapacity (scaleType, minimum, maximum, default)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseDataSourceCapacity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleType" Type="Azure.ResourceManager.Synapse.Models.SynapseDataSourceScaleType" />
        <Parameter Name="minimum" Type="System.Int32" />
        <Parameter Name="maximum" Type="System.Int32" />
        <Parameter Name="default" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="scaleType"> Scale type. </param>
        <param name="minimum"> Minimum allowed capacity. </param>
        <param name="maximum"> Maximum allowed capacity. </param>
        <param name="default"> The default capacity that would be used. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseDataSourceCapacity" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseDataSourceCapacity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseDataSourceResourceSku">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseDataSourceResourceSku SynapseDataSourceResourceSku (string resourceType = default, Azure.ResourceManager.Synapse.Models.SynapseDataSourceSku sku = default, Azure.ResourceManager.Synapse.Models.SynapseDataSourceCapacity capacity = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseDataSourceResourceSku SynapseDataSourceResourceSku(string resourceType, class Azure.ResourceManager.Synapse.Models.SynapseDataSourceSku sku, class Azure.ResourceManager.Synapse.Models.SynapseDataSourceCapacity capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseDataSourceResourceSku(System.String,Azure.ResourceManager.Synapse.Models.SynapseDataSourceSku,Azure.ResourceManager.Synapse.Models.SynapseDataSourceCapacity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseDataSourceResourceSku (Optional resourceType As String = Nothing, Optional sku As SynapseDataSourceSku = Nothing, Optional capacity As SynapseDataSourceCapacity = Nothing) As SynapseDataSourceResourceSku" />
      <MemberSignature Language="F#" Value="static member SynapseDataSourceResourceSku : string * Azure.ResourceManager.Synapse.Models.SynapseDataSourceSku * Azure.ResourceManager.Synapse.Models.SynapseDataSourceCapacity -&gt; Azure.ResourceManager.Synapse.Models.SynapseDataSourceResourceSku" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseDataSourceResourceSku (resourceType, sku, capacity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseDataSourceResourceSku</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="sku" Type="Azure.ResourceManager.Synapse.Models.SynapseDataSourceSku" />
        <Parameter Name="capacity" Type="Azure.ResourceManager.Synapse.Models.SynapseDataSourceCapacity" />
      </Parameters>
      <Docs>
        <param name="resourceType"> Resource Namespace and Type. </param>
        <param name="sku"> The SKU details. </param>
        <param name="capacity"> The number of instances of the cluster. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseDataSourceResourceSku" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseDataSourceResourceSku" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseDataWarehouseUserActivityData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityData SynapseDataWarehouseUserActivityData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, int? activeQueriesCount = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityData SynapseDataWarehouseUserActivityData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;int32&gt; activeQueriesCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseDataWarehouseUserActivityData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseDataWarehouseUserActivityData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional activeQueriesCount As Nullable(Of Integer) = Nothing) As SynapseDataWarehouseUserActivityData" />
      <MemberSignature Language="F#" Value="static member SynapseDataWarehouseUserActivityData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;int&gt; -&gt; Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseDataWarehouseUserActivityData (id, name, resourceType, systemData, activeQueriesCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="activeQueriesCount" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="activeQueriesCount"> Count of running and suspended queries. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseDedicatedSqlMinimalTlsSettingData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingData SynapseDedicatedSqlMinimalTlsSettingData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.AzureLocation? location = default, string minimalTlsVersion = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingData SynapseDedicatedSqlMinimalTlsSettingData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, string minimalTlsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseDedicatedSqlMinimalTlsSettingData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.Core.AzureLocation},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseDedicatedSqlMinimalTlsSettingData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional minimalTlsVersion As String = Nothing) As SynapseDedicatedSqlMinimalTlsSettingData" />
      <MemberSignature Language="F#" Value="static member SynapseDedicatedSqlMinimalTlsSettingData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.Core.AzureLocation&gt; * string -&gt; Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseDedicatedSqlMinimalTlsSettingData (id, name, resourceType, systemData, location, minimalTlsVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="minimalTlsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="location"> Resource location. </param>
        <param name="minimalTlsVersion"> The minimal tls version of the sql server. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseEncryptionDetails">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseEncryptionDetails SynapseEncryptionDetails (bool? isDoubleEncryptionEnabled = default, Azure.ResourceManager.Synapse.Models.WorkspaceCustomerManagedKeyDetails cmk = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseEncryptionDetails SynapseEncryptionDetails(valuetype System.Nullable`1&lt;bool&gt; isDoubleEncryptionEnabled, class Azure.ResourceManager.Synapse.Models.WorkspaceCustomerManagedKeyDetails cmk) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseEncryptionDetails(System.Nullable{System.Boolean},Azure.ResourceManager.Synapse.Models.WorkspaceCustomerManagedKeyDetails)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseEncryptionDetails (Optional isDoubleEncryptionEnabled As Nullable(Of Boolean) = Nothing, Optional cmk As WorkspaceCustomerManagedKeyDetails = Nothing) As SynapseEncryptionDetails" />
      <MemberSignature Language="F#" Value="static member SynapseEncryptionDetails : Nullable&lt;bool&gt; * Azure.ResourceManager.Synapse.Models.WorkspaceCustomerManagedKeyDetails -&gt; Azure.ResourceManager.Synapse.Models.SynapseEncryptionDetails" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseEncryptionDetails (isDoubleEncryptionEnabled, cmk)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseEncryptionDetails</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isDoubleEncryptionEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cmk" Type="Azure.ResourceManager.Synapse.Models.WorkspaceCustomerManagedKeyDetails" />
      </Parameters>
      <Docs>
        <param name="isDoubleEncryptionEnabled"> Double Encryption enabled. </param>
        <param name="cmk"> Customer Managed Key Details. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseEncryptionDetails" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseEncryptionDetails" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseEncryptionProtectorData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseEncryptionProtectorData SynapseEncryptionProtectorData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string kind = default, Azure.Core.AzureLocation? location = default, string subregion = default, string serverKeyName = default, Azure.ResourceManager.Synapse.Models.SynapseServerKeyType? serverKeyType = default, Uri uri = default, BinaryData thumbprint = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseEncryptionProtectorData SynapseEncryptionProtectorData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string kind, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, string subregion, string serverKeyName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseServerKeyType&gt; serverKeyType, class System.Uri uri, class System.BinaryData thumbprint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseEncryptionProtectorData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{Azure.Core.AzureLocation},System.String,System.String,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseServerKeyType},System.Uri,System.BinaryData)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseEncryptionProtectorData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional kind As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional subregion As String = Nothing, Optional serverKeyName As String = Nothing, Optional serverKeyType As Nullable(Of SynapseServerKeyType) = Nothing, Optional uri As Uri = Nothing, Optional thumbprint As BinaryData = Nothing) As SynapseEncryptionProtectorData" />
      <MemberSignature Language="F#" Value="static member SynapseEncryptionProtectorData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Nullable&lt;Azure.Core.AzureLocation&gt; * string * string * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseServerKeyType&gt; * Uri * BinaryData -&gt; Azure.ResourceManager.Synapse.SynapseEncryptionProtectorData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseEncryptionProtectorData (id, name, resourceType, systemData, kind, location, subregion, serverKeyName, serverKeyType, uri, thumbprint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseEncryptionProtectorData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="subregion" Type="System.String" />
        <Parameter Name="serverKeyName" Type="System.String" />
        <Parameter Name="serverKeyType" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseServerKeyType&gt;" />
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="thumbprint" Type="System.BinaryData" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="kind"> Kind of encryption protector. This is metadata used for the Azure portal experience. </param>
        <param name="location"> Resource location. </param>
        <param name="subregion"> Subregion of the encryption protector. </param>
        <param name="serverKeyName"> The name of the server key. </param>
        <param name="serverKeyType"> The encryption protector type like 'ServiceManaged', 'AzureKeyVault'. </param>
        <param name="uri"> The URI of the server key. </param>
        <param name="thumbprint"> Thumbprint of the server key. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseEncryptionProtectorData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseEncryptionProtectorData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseEventGridDataConnection">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseEventGridDataConnection SynapseEventGridDataConnection (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.AzureLocation? location = default, Azure.Core.ResourceIdentifier storageAccountResourceId = default, Azure.Core.ResourceIdentifier eventHubResourceId = default, string consumerGroup = default, string tableName = default, string mappingRuleName = default, Azure.ResourceManager.Synapse.Models.SynapseEventGridDataFormat? dataFormat = default, bool? ignoreFirstRecord = default, Azure.ResourceManager.Synapse.Models.SynapseBlobStorageEventType? blobStorageEventType = default, Azure.ResourceManager.Synapse.Models.ResourceProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseEventGridDataConnection SynapseEventGridDataConnection(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class Azure.Core.ResourceIdentifier storageAccountResourceId, class Azure.Core.ResourceIdentifier eventHubResourceId, string consumerGroup, string tableName, string mappingRuleName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseEventGridDataFormat&gt; dataFormat, valuetype System.Nullable`1&lt;bool&gt; ignoreFirstRecord, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseBlobStorageEventType&gt; blobStorageEventType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseEventGridDataConnection(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.Core.AzureLocation},Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseEventGridDataFormat},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseBlobStorageEventType},System.Nullable{Azure.ResourceManager.Synapse.Models.ResourceProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseEventGridDataConnection (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional storageAccountResourceId As ResourceIdentifier = Nothing, Optional eventHubResourceId As ResourceIdentifier = Nothing, Optional consumerGroup As String = Nothing, Optional tableName As String = Nothing, Optional mappingRuleName As String = Nothing, Optional dataFormat As Nullable(Of SynapseEventGridDataFormat) = Nothing, Optional ignoreFirstRecord As Nullable(Of Boolean) = Nothing, Optional blobStorageEventType As Nullable(Of SynapseBlobStorageEventType) = Nothing, Optional provisioningState As Nullable(Of ResourceProvisioningState) = Nothing) As SynapseEventGridDataConnection" />
      <MemberSignature Language="F#" Value="static member SynapseEventGridDataConnection : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.Core.AzureLocation&gt; * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * string * string * string * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseEventGridDataFormat&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseBlobStorageEventType&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseEventGridDataConnection" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseEventGridDataConnection (id, name, resourceType, systemData, location, storageAccountResourceId, eventHubResourceId, consumerGroup, tableName, mappingRuleName, dataFormat, ignoreFirstRecord, blobStorageEventType, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseEventGridDataConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="storageAccountResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="eventHubResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="consumerGroup" Type="System.String" />
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="mappingRuleName" Type="System.String" />
        <Parameter Name="dataFormat" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseEventGridDataFormat&gt;" />
        <Parameter Name="ignoreFirstRecord" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="blobStorageEventType" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseBlobStorageEventType&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="location"> Resource location. </param>
        <param name="storageAccountResourceId"> The resource ID of the storage account where the data resides. </param>
        <param name="eventHubResourceId"> The resource ID where the event grid is configured to send events. </param>
        <param name="consumerGroup"> The event hub consumer group. </param>
        <param name="tableName"> The table where the data should be ingested. Optionally the table information can be added to each message. </param>
        <param name="mappingRuleName"> The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message. </param>
        <param name="dataFormat"> The data format of the message. Optionally the data format can be added to each message. </param>
        <param name="ignoreFirstRecord"> A Boolean value that, if set to true, indicates that ingestion should ignore the first record of every file. </param>
        <param name="blobStorageEventType"> The name of blob storage event type to process. </param>
        <param name="provisioningState"> The provisioned state of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseEventGridDataConnection" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseEventGridDataConnection" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseEventHubDataConnection">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseEventHubDataConnection SynapseEventHubDataConnection (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.AzureLocation? location = default, Azure.Core.ResourceIdentifier eventHubResourceId = default, string consumerGroup = default, string tableName = default, string mappingRuleName = default, Azure.ResourceManager.Synapse.Models.SynapseEventHubDataFormat? dataFormat = default, System.Collections.Generic.IEnumerable&lt;string&gt; eventSystemProperties = default, Azure.ResourceManager.Synapse.Models.KustoPoolCompressionType? compression = default, Azure.ResourceManager.Synapse.Models.ResourceProvisioningState? provisioningState = default, Azure.Core.ResourceIdentifier managedIdentityResourceId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseEventHubDataConnection SynapseEventHubDataConnection(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class Azure.Core.ResourceIdentifier eventHubResourceId, string consumerGroup, string tableName, string mappingRuleName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseEventHubDataFormat&gt; dataFormat, class System.Collections.Generic.IEnumerable`1&lt;string&gt; eventSystemProperties, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.KustoPoolCompressionType&gt; compression, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt; provisioningState, class Azure.Core.ResourceIdentifier managedIdentityResourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseEventHubDataConnection(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.Core.AzureLocation},Azure.Core.ResourceIdentifier,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseEventHubDataFormat},System.Collections.Generic.IEnumerable{System.String},System.Nullable{Azure.ResourceManager.Synapse.Models.KustoPoolCompressionType},System.Nullable{Azure.ResourceManager.Synapse.Models.ResourceProvisioningState},Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseEventHubDataConnection (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional eventHubResourceId As ResourceIdentifier = Nothing, Optional consumerGroup As String = Nothing, Optional tableName As String = Nothing, Optional mappingRuleName As String = Nothing, Optional dataFormat As Nullable(Of SynapseEventHubDataFormat) = Nothing, Optional eventSystemProperties As IEnumerable(Of String) = Nothing, Optional compression As Nullable(Of KustoPoolCompressionType) = Nothing, Optional provisioningState As Nullable(Of ResourceProvisioningState) = Nothing, Optional managedIdentityResourceId As ResourceIdentifier = Nothing) As SynapseEventHubDataConnection" />
      <MemberSignature Language="F#" Value="static member SynapseEventHubDataConnection : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.Core.AzureLocation&gt; * Azure.Core.ResourceIdentifier * string * string * string * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseEventHubDataFormat&gt; * seq&lt;string&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.KustoPoolCompressionType&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt; * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.Models.SynapseEventHubDataConnection" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseEventHubDataConnection (id, name, resourceType, systemData, location, eventHubResourceId, consumerGroup, tableName, mappingRuleName, dataFormat, eventSystemProperties, compression, provisioningState, managedIdentityResourceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseEventHubDataConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="eventHubResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="consumerGroup" Type="System.String" />
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="mappingRuleName" Type="System.String" />
        <Parameter Name="dataFormat" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseEventHubDataFormat&gt;" />
        <Parameter Name="eventSystemProperties" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="compression" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.KustoPoolCompressionType&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt;" />
        <Parameter Name="managedIdentityResourceId" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="location"> Resource location. </param>
        <param name="eventHubResourceId"> The resource ID of the event hub to be used to create a data connection. </param>
        <param name="consumerGroup"> The event hub consumer group. </param>
        <param name="tableName"> The table where the data should be ingested. Optionally the table information can be added to each message. </param>
        <param name="mappingRuleName"> The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message. </param>
        <param name="dataFormat"> The data format of the message. Optionally the data format can be added to each message. </param>
        <param name="eventSystemProperties"> System properties of the event hub. </param>
        <param name="compression"> The event hub messages compression type. </param>
        <param name="provisioningState"> The provisioned state of the resource. </param>
        <param name="managedIdentityResourceId"> The resource ID of a managed identity (system or user assigned) to be used to authenticate with event hub. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseEventHubDataConnection" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseEventHubDataConnection" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseExtendedServerBlobAuditingPolicyData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyData SynapseExtendedServerBlobAuditingPolicyData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string predicateExpression = default, Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyState? state = default, string storageEndpoint = default, string storageAccountAccessKey = default, int? retentionDays = default, System.Collections.Generic.IEnumerable&lt;string&gt; auditActionsAndGroups = default, Guid? storageAccountSubscriptionId = default, bool? isStorageSecondaryKeyInUse = default, bool? isAzureMonitorTargetEnabled = default, int? queueDelayMs = default, bool? isDevopsAuditEnabled = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyData SynapseExtendedServerBlobAuditingPolicyData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string predicateExpression, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyState&gt; state, string storageEndpoint, string storageAccountAccessKey, valuetype System.Nullable`1&lt;int32&gt; retentionDays, class System.Collections.Generic.IEnumerable`1&lt;string&gt; auditActionsAndGroups, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; storageAccountSubscriptionId, valuetype System.Nullable`1&lt;bool&gt; isStorageSecondaryKeyInUse, valuetype System.Nullable`1&lt;bool&gt; isAzureMonitorTargetEnabled, valuetype System.Nullable`1&lt;int32&gt; queueDelayMs, valuetype System.Nullable`1&lt;bool&gt; isDevopsAuditEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseExtendedServerBlobAuditingPolicyData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyState},System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseExtendedServerBlobAuditingPolicyData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional predicateExpression As String = Nothing, Optional state As Nullable(Of SynapseBlobAuditingPolicyState) = Nothing, Optional storageEndpoint As String = Nothing, Optional storageAccountAccessKey As String = Nothing, Optional retentionDays As Nullable(Of Integer) = Nothing, Optional auditActionsAndGroups As IEnumerable(Of String) = Nothing, Optional storageAccountSubscriptionId As Nullable(Of Guid) = Nothing, Optional isStorageSecondaryKeyInUse As Nullable(Of Boolean) = Nothing, Optional isAzureMonitorTargetEnabled As Nullable(Of Boolean) = Nothing, Optional queueDelayMs As Nullable(Of Integer) = Nothing, Optional isDevopsAuditEnabled As Nullable(Of Boolean) = Nothing) As SynapseExtendedServerBlobAuditingPolicyData" />
      <MemberSignature Language="F#" Value="static member SynapseExtendedServerBlobAuditingPolicyData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyState&gt; * string * string * Nullable&lt;int&gt; * seq&lt;string&gt; * Nullable&lt;Guid&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseExtendedServerBlobAuditingPolicyData (id, name, resourceType, systemData, predicateExpression, state, storageEndpoint, storageAccountAccessKey, retentionDays, auditActionsAndGroups, storageAccountSubscriptionId, isStorageSecondaryKeyInUse, isAzureMonitorTargetEnabled, queueDelayMs, isDevopsAuditEnabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="predicateExpression" Type="System.String" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyState&gt;" />
        <Parameter Name="storageEndpoint" Type="System.String" />
        <Parameter Name="storageAccountAccessKey" Type="System.String" />
        <Parameter Name="retentionDays" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="auditActionsAndGroups" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="storageAccountSubscriptionId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="isStorageSecondaryKeyInUse" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isAzureMonitorTargetEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="queueDelayMs" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="isDevopsAuditEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="predicateExpression"> Specifies condition of where clause when creating an audit. </param>
        <param name="state"> Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required. </param>
        <param name="storageEndpoint"> Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required. </param>
        <param name="storageAccountAccessKey">
             Specifies the identifier key of the auditing storage account.
             If state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.
             Prerequisites for using managed identity authentication:
             1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).
             2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.
             For more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)
             </param>
        <param name="retentionDays"> Specifies the number of days to keep in the audit logs in the storage account. </param>
        <param name="auditActionsAndGroups">
             Specifies the Actions-Groups and Actions to audit.
            
             The recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:
            
             BATCH_COMPLETED_GROUP,
             SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
             FAILED_DATABASE_AUTHENTICATION_GROUP.
            
             This above combination is also the set that is configured by default when enabling auditing from the Azure portal.
            
             The supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):
            
             APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
             BACKUP_RESTORE_GROUP
             DATABASE_LOGOUT_GROUP
             DATABASE_OBJECT_CHANGE_GROUP
             DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
             DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
             DATABASE_OPERATION_GROUP
             DATABASE_PERMISSION_CHANGE_GROUP
             DATABASE_PRINCIPAL_CHANGE_GROUP
             DATABASE_PRINCIPAL_IMPERSONATION_GROUP
             DATABASE_ROLE_MEMBER_CHANGE_GROUP
             FAILED_DATABASE_AUTHENTICATION_GROUP
             SCHEMA_OBJECT_ACCESS_GROUP
             SCHEMA_OBJECT_CHANGE_GROUP
             SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
             SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
             SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
             USER_CHANGE_PASSWORD_GROUP
             BATCH_STARTED_GROUP
             BATCH_COMPLETED_GROUP
            
             These are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.
            
             For more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
            
             For Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:
             SELECT
             UPDATE
             INSERT
             DELETE
             EXECUTE
             RECEIVE
             REFERENCES
            
             The general form for defining an action to be audited is:
             {action} ON {object} BY {principal}
            
             Note that &lt;object&gt; in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.
            
             For example:
             SELECT on dbo.myTable by public
             SELECT on DATABASE::myDatabase by public
             SELECT on SCHEMA::mySchema by public
            
             For more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
             </param>
        <param name="storageAccountSubscriptionId"> Specifies the blob storage subscription Id. </param>
        <param name="isStorageSecondaryKeyInUse"> Specifies whether storageAccountAccessKey value is the storage's secondary key. </param>
        <param name="isAzureMonitorTargetEnabled">
             Specifies whether audit events are sent to Azure Monitor.
             In order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.
            
             When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.
             Note that for server level audit you should use the 'master' database as {databaseName}.
            
             Diagnostic Settings URI format:
             PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
            
             For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)
             or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
            
             </param>
        <param name="queueDelayMs">
             Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.
             The default minimum value is 1000 (1 second). The maximum is 2,147,483,647.
             </param>
        <param name="isDevopsAuditEnabled">
             Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.
             In order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true
            
             When using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.
            
             Diagnostic Settings URI format:
             PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
            
             For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)
             or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
            
             </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseExtendedSqlPoolBlobAuditingPolicyData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseExtendedSqlPoolBlobAuditingPolicyData SynapseExtendedSqlPoolBlobAuditingPolicyData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string predicateExpression = default, Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyState? state = default, string storageEndpoint = default, string storageAccountAccessKey = default, int? retentionDays = default, System.Collections.Generic.IEnumerable&lt;string&gt; auditActionsAndGroups = default, Guid? storageAccountSubscriptionId = default, bool? isStorageSecondaryKeyInUse = default, bool? isAzureMonitorTargetEnabled = default, int? queueDelayMs = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseExtendedSqlPoolBlobAuditingPolicyData SynapseExtendedSqlPoolBlobAuditingPolicyData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string predicateExpression, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyState&gt; state, string storageEndpoint, string storageAccountAccessKey, valuetype System.Nullable`1&lt;int32&gt; retentionDays, class System.Collections.Generic.IEnumerable`1&lt;string&gt; auditActionsAndGroups, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; storageAccountSubscriptionId, valuetype System.Nullable`1&lt;bool&gt; isStorageSecondaryKeyInUse, valuetype System.Nullable`1&lt;bool&gt; isAzureMonitorTargetEnabled, valuetype System.Nullable`1&lt;int32&gt; queueDelayMs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseExtendedSqlPoolBlobAuditingPolicyData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyState},System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseExtendedSqlPoolBlobAuditingPolicyData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional predicateExpression As String = Nothing, Optional state As Nullable(Of SynapseBlobAuditingPolicyState) = Nothing, Optional storageEndpoint As String = Nothing, Optional storageAccountAccessKey As String = Nothing, Optional retentionDays As Nullable(Of Integer) = Nothing, Optional auditActionsAndGroups As IEnumerable(Of String) = Nothing, Optional storageAccountSubscriptionId As Nullable(Of Guid) = Nothing, Optional isStorageSecondaryKeyInUse As Nullable(Of Boolean) = Nothing, Optional isAzureMonitorTargetEnabled As Nullable(Of Boolean) = Nothing, Optional queueDelayMs As Nullable(Of Integer) = Nothing) As SynapseExtendedSqlPoolBlobAuditingPolicyData" />
      <MemberSignature Language="F#" Value="static member SynapseExtendedSqlPoolBlobAuditingPolicyData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyState&gt; * string * string * Nullable&lt;int&gt; * seq&lt;string&gt; * Nullable&lt;Guid&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; -&gt; Azure.ResourceManager.Synapse.SynapseExtendedSqlPoolBlobAuditingPolicyData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseExtendedSqlPoolBlobAuditingPolicyData (id, name, resourceType, systemData, predicateExpression, state, storageEndpoint, storageAccountAccessKey, retentionDays, auditActionsAndGroups, storageAccountSubscriptionId, isStorageSecondaryKeyInUse, isAzureMonitorTargetEnabled, queueDelayMs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseExtendedSqlPoolBlobAuditingPolicyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="predicateExpression" Type="System.String" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyState&gt;" />
        <Parameter Name="storageEndpoint" Type="System.String" />
        <Parameter Name="storageAccountAccessKey" Type="System.String" />
        <Parameter Name="retentionDays" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="auditActionsAndGroups" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="storageAccountSubscriptionId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="isStorageSecondaryKeyInUse" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isAzureMonitorTargetEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="queueDelayMs" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="predicateExpression"> Specifies condition of where clause when creating an audit. </param>
        <param name="state"> Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required. </param>
        <param name="storageEndpoint"> Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required. </param>
        <param name="storageAccountAccessKey">
             Specifies the identifier key of the auditing storage account.
             If state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.
             Prerequisites for using managed identity authentication:
             1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).
             2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.
             For more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)
             </param>
        <param name="retentionDays"> Specifies the number of days to keep in the audit logs in the storage account. </param>
        <param name="auditActionsAndGroups">
             Specifies the Actions-Groups and Actions to audit.
            
             The recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:
            
             BATCH_COMPLETED_GROUP,
             SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
             FAILED_DATABASE_AUTHENTICATION_GROUP.
            
             This above combination is also the set that is configured by default when enabling auditing from the Azure portal.
            
             The supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):
            
             APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
             BACKUP_RESTORE_GROUP
             DATABASE_LOGOUT_GROUP
             DATABASE_OBJECT_CHANGE_GROUP
             DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
             DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
             DATABASE_OPERATION_GROUP
             DATABASE_PERMISSION_CHANGE_GROUP
             DATABASE_PRINCIPAL_CHANGE_GROUP
             DATABASE_PRINCIPAL_IMPERSONATION_GROUP
             DATABASE_ROLE_MEMBER_CHANGE_GROUP
             FAILED_DATABASE_AUTHENTICATION_GROUP
             SCHEMA_OBJECT_ACCESS_GROUP
             SCHEMA_OBJECT_CHANGE_GROUP
             SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
             SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
             SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
             USER_CHANGE_PASSWORD_GROUP
             BATCH_STARTED_GROUP
             BATCH_COMPLETED_GROUP
            
             These are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.
            
             For more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
            
             For Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:
             SELECT
             UPDATE
             INSERT
             DELETE
             EXECUTE
             RECEIVE
             REFERENCES
            
             The general form for defining an action to be audited is:
             {action} ON {object} BY {principal}
            
             Note that &lt;object&gt; in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.
            
             For example:
             SELECT on dbo.myTable by public
             SELECT on DATABASE::myDatabase by public
             SELECT on SCHEMA::mySchema by public
            
             For more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
             </param>
        <param name="storageAccountSubscriptionId"> Specifies the blob storage subscription Id. </param>
        <param name="isStorageSecondaryKeyInUse"> Specifies whether storageAccountAccessKey value is the storage's secondary key. </param>
        <param name="isAzureMonitorTargetEnabled">
             Specifies whether audit events are sent to Azure Monitor.
             In order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.
            
             When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.
             Note that for server level audit you should use the 'master' database as {databaseName}.
            
             Diagnostic Settings URI format:
             PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
            
             For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)
             or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
            
             </param>
        <param name="queueDelayMs">
             Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.
             The default minimum value is 1000 (1 second). The maximum is 2,147,483,647.
             </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseExtendedSqlPoolBlobAuditingPolicyData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseExtendedSqlPoolBlobAuditingPolicyData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseFollowerDatabaseDefinition">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseFollowerDatabaseDefinition SynapseFollowerDatabaseDefinition (Azure.Core.ResourceIdentifier kustoPoolResourceId = default, string attachedDatabaseConfigurationName = default, string databaseName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseFollowerDatabaseDefinition SynapseFollowerDatabaseDefinition(class Azure.Core.ResourceIdentifier kustoPoolResourceId, string attachedDatabaseConfigurationName, string databaseName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseFollowerDatabaseDefinition(Azure.Core.ResourceIdentifier,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseFollowerDatabaseDefinition (Optional kustoPoolResourceId As ResourceIdentifier = Nothing, Optional attachedDatabaseConfigurationName As String = Nothing, Optional databaseName As String = Nothing) As SynapseFollowerDatabaseDefinition" />
      <MemberSignature Language="F#" Value="static member SynapseFollowerDatabaseDefinition : Azure.Core.ResourceIdentifier * string * string -&gt; Azure.ResourceManager.Synapse.Models.SynapseFollowerDatabaseDefinition" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseFollowerDatabaseDefinition (kustoPoolResourceId, attachedDatabaseConfigurationName, databaseName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseFollowerDatabaseDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kustoPoolResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="attachedDatabaseConfigurationName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="kustoPoolResourceId"> Resource id of the cluster that follows a database owned by this cluster. </param>
        <param name="attachedDatabaseConfigurationName"> Resource name of the attached database configuration in the follower cluster. </param>
        <param name="databaseName"> The database name owned by this cluster that was followed. * in case following all databases. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseFollowerDatabaseDefinition" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseFollowerDatabaseDefinition" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseGeoBackupPolicyData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseGeoBackupPolicyData SynapseGeoBackupPolicyData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string kind = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.Synapse.Models.SynapseGeoBackupPolicyState state = Azure.ResourceManager.Synapse.Models.SynapseGeoBackupPolicyState.Disabled, string storageType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseGeoBackupPolicyData SynapseGeoBackupPolicyData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string kind, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, valuetype Azure.ResourceManager.Synapse.Models.SynapseGeoBackupPolicyState state, string storageType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseGeoBackupPolicyData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{Azure.Core.AzureLocation},Azure.ResourceManager.Synapse.Models.SynapseGeoBackupPolicyState,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseGeoBackupPolicyData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional kind As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional state As SynapseGeoBackupPolicyState = Azure.ResourceManager.Synapse.Models.SynapseGeoBackupPolicyState.Disabled, Optional storageType As String = Nothing) As SynapseGeoBackupPolicyData" />
      <MemberSignature Language="F#" Value="static member SynapseGeoBackupPolicyData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Nullable&lt;Azure.Core.AzureLocation&gt; * Azure.ResourceManager.Synapse.Models.SynapseGeoBackupPolicyState * string -&gt; Azure.ResourceManager.Synapse.SynapseGeoBackupPolicyData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseGeoBackupPolicyData (id, name, resourceType, systemData, kind, location, state, storageType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseGeoBackupPolicyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="state" Type="Azure.ResourceManager.Synapse.Models.SynapseGeoBackupPolicyState" />
        <Parameter Name="storageType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="kind"> Kind of geo backup policy.  This is metadata used for the Azure portal experience. </param>
        <param name="location"> Backup policy location. </param>
        <param name="state"> The state of the geo backup policy. </param>
        <param name="storageType"> The storage type of the geo backup policy. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseGeoBackupPolicyData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseGeoBackupPolicyData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseGrantSqlControlToManagedIdentity">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseGrantSqlControlToManagedIdentity SynapseGrantSqlControlToManagedIdentity (Azure.ResourceManager.Synapse.Models.SynapseDesiredState? desiredState = default, Azure.ResourceManager.Synapse.Models.SynapseGrantSqlControlToManagedIdentityState? actualState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseGrantSqlControlToManagedIdentity SynapseGrantSqlControlToManagedIdentity(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseDesiredState&gt; desiredState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseGrantSqlControlToManagedIdentityState&gt; actualState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseGrantSqlControlToManagedIdentity(System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseDesiredState},System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseGrantSqlControlToManagedIdentityState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseGrantSqlControlToManagedIdentity (Optional desiredState As Nullable(Of SynapseDesiredState) = Nothing, Optional actualState As Nullable(Of SynapseGrantSqlControlToManagedIdentityState) = Nothing) As SynapseGrantSqlControlToManagedIdentity" />
      <MemberSignature Language="F#" Value="static member SynapseGrantSqlControlToManagedIdentity : Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseDesiredState&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseGrantSqlControlToManagedIdentityState&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseGrantSqlControlToManagedIdentity" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseGrantSqlControlToManagedIdentity (desiredState, actualState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseGrantSqlControlToManagedIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="desiredState" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseDesiredState&gt;" />
        <Parameter Name="actualState" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseGrantSqlControlToManagedIdentityState&gt;" />
      </Parameters>
      <Docs>
        <param name="desiredState"> Desired state. </param>
        <param name="actualState"> Actual state. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseGrantSqlControlToManagedIdentity" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseGrantSqlControlToManagedIdentity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseIntegrationRuntimeAuthKeys">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeAuthKeys SynapseIntegrationRuntimeAuthKeys (string authKey1 = default, string authKey2 = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeAuthKeys SynapseIntegrationRuntimeAuthKeys(string authKey1, string authKey2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIntegrationRuntimeAuthKeys(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseIntegrationRuntimeAuthKeys (Optional authKey1 As String = Nothing, Optional authKey2 As String = Nothing) As SynapseIntegrationRuntimeAuthKeys" />
      <MemberSignature Language="F#" Value="static member SynapseIntegrationRuntimeAuthKeys : string * string -&gt; Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeAuthKeys" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIntegrationRuntimeAuthKeys (authKey1, authKey2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeAuthKeys</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authKey1" Type="System.String" />
        <Parameter Name="authKey2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authKey1"> The primary integration runtime authentication key. </param>
        <param name="authKey2"> The secondary integration runtime authentication key. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeAuthKeys" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeAuthKeys" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseIntegrationRuntimeConnectionInfo">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeConnectionInfo SynapseIntegrationRuntimeConnectionInfo (string serviceToken = default, BinaryData identityCertThumbprint = default, Uri hostServiceUri = default, string version = default, string publicKey = default, bool? isIdentityCertExprired = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,BinaryData&gt; additionalProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeConnectionInfo SynapseIntegrationRuntimeConnectionInfo(string serviceToken, class System.BinaryData identityCertThumbprint, class System.Uri hostServiceUri, string version, string publicKey, valuetype System.Nullable`1&lt;bool&gt; isIdentityCertExprired, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class System.BinaryData&gt; additionalProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIntegrationRuntimeConnectionInfo(System.String,System.BinaryData,System.Uri,System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IReadOnlyDictionary{System.String,System.BinaryData})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseIntegrationRuntimeConnectionInfo (Optional serviceToken As String = Nothing, Optional identityCertThumbprint As BinaryData = Nothing, Optional hostServiceUri As Uri = Nothing, Optional version As String = Nothing, Optional publicKey As String = Nothing, Optional isIdentityCertExprired As Nullable(Of Boolean) = Nothing, Optional additionalProperties As IReadOnlyDictionary(Of String, BinaryData) = Nothing) As SynapseIntegrationRuntimeConnectionInfo" />
      <MemberSignature Language="F#" Value="static member SynapseIntegrationRuntimeConnectionInfo : string * BinaryData * Uri * string * string * Nullable&lt;bool&gt; * System.Collections.Generic.IReadOnlyDictionary&lt;string, BinaryData&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeConnectionInfo" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIntegrationRuntimeConnectionInfo (serviceToken, identityCertThumbprint, hostServiceUri, version, publicKey, isIdentityCertExprired, additionalProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeConnectionInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceToken" Type="System.String" />
        <Parameter Name="identityCertThumbprint" Type="System.BinaryData" />
        <Parameter Name="hostServiceUri" Type="System.Uri" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="publicKey" Type="System.String" />
        <Parameter Name="isIdentityCertExprired" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="additionalProperties" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.BinaryData&gt;" />
      </Parameters>
      <Docs>
        <param name="serviceToken"> The token generated in service. Callers use this token to authenticate to integration runtime. </param>
        <param name="identityCertThumbprint"> The integration runtime SSL certificate thumbprint. Click-Once application uses it to do server validation. </param>
        <param name="hostServiceUri"> The on-premises integration runtime host URL. </param>
        <param name="version"> The integration runtime version. </param>
        <param name="publicKey"> The public key for encrypting a credential when transferring the credential to the integration runtime. </param>
        <param name="isIdentityCertExprired"> Whether the identity certificate is expired. </param>
        <param name="additionalProperties"> Additional Properties. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeConnectionInfo" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeConnectionInfo" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseIntegrationRuntimeData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeData SynapseIntegrationRuntimeData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeProperties properties = default, Azure.ETag? etag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeData SynapseIntegrationRuntimeData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeProperties properties, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIntegrationRuntimeData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeProperties,System.Nullable{Azure.ETag})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseIntegrationRuntimeData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional properties As SynapseIntegrationRuntimeProperties = Nothing, Optional etag As Nullable(Of ETag) = Nothing) As SynapseIntegrationRuntimeData" />
      <MemberSignature Language="F#" Value="static member SynapseIntegrationRuntimeData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeProperties * Nullable&lt;Azure.ETag&gt; -&gt; Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIntegrationRuntimeData (id, name, resourceType, systemData, properties, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="properties" Type="Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeProperties" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="properties">
            Integration runtime properties.
            Please note <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeProperties" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntime" /> and <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSelfHostedIntegrationRuntime" />.
            </param>
        <param name="etag"> Resource Etag. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseIntegrationRuntimeMonitoringResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeMonitoringResult SynapseIntegrationRuntimeMonitoringResult (string name = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeNodeMonitoringResult&gt; nodes = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeMonitoringResult SynapseIntegrationRuntimeMonitoringResult(string name, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeNodeMonitoringResult&gt; nodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIntegrationRuntimeMonitoringResult(System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeNodeMonitoringResult})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseIntegrationRuntimeMonitoringResult (Optional name As String = Nothing, Optional nodes As IEnumerable(Of SynapseIntegrationRuntimeNodeMonitoringResult) = Nothing) As SynapseIntegrationRuntimeMonitoringResult" />
      <MemberSignature Language="F#" Value="static member SynapseIntegrationRuntimeMonitoringResult : string * seq&lt;Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeNodeMonitoringResult&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeMonitoringResult" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIntegrationRuntimeMonitoringResult (name, nodes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeMonitoringResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="nodes" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeNodeMonitoringResult&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> Integration runtime name. </param>
        <param name="nodes"> Integration runtime node monitoring data. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeMonitoringResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeMonitoringResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseIntegrationRuntimeNodeIPAddress">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeNodeIPAddress SynapseIntegrationRuntimeNodeIPAddress (System.Net.IPAddress ipAddress = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeNodeIPAddress SynapseIntegrationRuntimeNodeIPAddress(class System.Net.IPAddress ipAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIntegrationRuntimeNodeIPAddress(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseIntegrationRuntimeNodeIPAddress (Optional ipAddress As IPAddress = Nothing) As SynapseIntegrationRuntimeNodeIPAddress" />
      <MemberSignature Language="F#" Value="static member SynapseIntegrationRuntimeNodeIPAddress : System.Net.IPAddress -&gt; Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeNodeIPAddress" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIntegrationRuntimeNodeIPAddress ipAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeNodeIPAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="ipAddress"> The IP address of self-hosted integration runtime node. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeNodeIPAddress" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeNodeIPAddress" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseIntegrationRuntimeNodeMonitoringResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeNodeMonitoringResult SynapseIntegrationRuntimeNodeMonitoringResult (string nodeName = default, int? availableMemoryInMB = default, int? cpuUtilization = default, int? concurrentJobsLimit = default, int? concurrentJobsRunning = default, int? maxConcurrentJobs = default, float? sentBytes = default, float? receivedBytes = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,BinaryData&gt; additionalProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeNodeMonitoringResult SynapseIntegrationRuntimeNodeMonitoringResult(string nodeName, valuetype System.Nullable`1&lt;int32&gt; availableMemoryInMB, valuetype System.Nullable`1&lt;int32&gt; cpuUtilization, valuetype System.Nullable`1&lt;int32&gt; concurrentJobsLimit, valuetype System.Nullable`1&lt;int32&gt; concurrentJobsRunning, valuetype System.Nullable`1&lt;int32&gt; maxConcurrentJobs, valuetype System.Nullable`1&lt;float32&gt; sentBytes, valuetype System.Nullable`1&lt;float32&gt; receivedBytes, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class System.BinaryData&gt; additionalProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIntegrationRuntimeNodeMonitoringResult(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Single},System.Nullable{System.Single},System.Collections.Generic.IReadOnlyDictionary{System.String,System.BinaryData})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseIntegrationRuntimeNodeMonitoringResult (Optional nodeName As String = Nothing, Optional availableMemoryInMB As Nullable(Of Integer) = Nothing, Optional cpuUtilization As Nullable(Of Integer) = Nothing, Optional concurrentJobsLimit As Nullable(Of Integer) = Nothing, Optional concurrentJobsRunning As Nullable(Of Integer) = Nothing, Optional maxConcurrentJobs As Nullable(Of Integer) = Nothing, Optional sentBytes As Nullable(Of Single) = Nothing, Optional receivedBytes As Nullable(Of Single) = Nothing, Optional additionalProperties As IReadOnlyDictionary(Of String, BinaryData) = Nothing) As SynapseIntegrationRuntimeNodeMonitoringResult" />
      <MemberSignature Language="F#" Value="static member SynapseIntegrationRuntimeNodeMonitoringResult : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;single&gt; * Nullable&lt;single&gt; * System.Collections.Generic.IReadOnlyDictionary&lt;string, BinaryData&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeNodeMonitoringResult" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIntegrationRuntimeNodeMonitoringResult (nodeName, availableMemoryInMB, cpuUtilization, concurrentJobsLimit, concurrentJobsRunning, maxConcurrentJobs, sentBytes, receivedBytes, additionalProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeNodeMonitoringResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="availableMemoryInMB" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cpuUtilization" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="concurrentJobsLimit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="concurrentJobsRunning" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="maxConcurrentJobs" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="sentBytes" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="receivedBytes" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="additionalProperties" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.BinaryData&gt;" />
      </Parameters>
      <Docs>
        <param name="nodeName"> Name of the integration runtime node. </param>
        <param name="availableMemoryInMB"> Available memory (MB) on the integration runtime node. </param>
        <param name="cpuUtilization"> CPU percentage on the integration runtime node. </param>
        <param name="concurrentJobsLimit"> Maximum concurrent jobs on the integration runtime node. </param>
        <param name="concurrentJobsRunning"> The number of jobs currently running on the integration runtime node. </param>
        <param name="maxConcurrentJobs"> The maximum concurrent jobs in this integration runtime. </param>
        <param name="sentBytes"> Sent bytes on the integration runtime node. </param>
        <param name="receivedBytes"> Received bytes on the integration runtime node. </param>
        <param name="additionalProperties"> Additional Properties. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeNodeMonitoringResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeNodeMonitoringResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseIntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint SynapseIntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint (string category = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpoint&gt; endpoints = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint SynapseIntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint(string category, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpoint&gt; endpoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint(System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpoint})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseIntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint (Optional category As String = Nothing, Optional endpoints As IEnumerable(Of SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpoint) = Nothing) As SynapseIntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint" />
      <MemberSignature Language="F#" Value="static member SynapseIntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint : string * seq&lt;Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpoint&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint (category, endpoints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="endpoints" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpoint&gt;" />
      </Parameters>
      <Docs>
        <param name="category"> The category of outbound network dependency. </param>
        <param name="endpoints"> The endpoints for outbound network dependency. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpoint">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpoint SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpoint (string domainName = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpointDetails&gt; endpointDetails = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpoint SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpoint(string domainName, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpointDetails&gt; endpointDetails) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpoint(System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpointDetails})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpoint (Optional domainName As String = Nothing, Optional endpointDetails As IEnumerable(Of SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpointDetails) = Nothing) As SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpoint" />
      <MemberSignature Language="F#" Value="static member SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpoint : string * seq&lt;Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpointDetails&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpoint" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpoint (domainName, endpointDetails)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domainName" Type="System.String" />
        <Parameter Name="endpointDetails" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpointDetails&gt;" />
      </Parameters>
      <Docs>
        <param name="domainName"> The domain name of endpoint. </param>
        <param name="endpointDetails"> The details of endpoint. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpoint" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpoint" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpointDetails">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpointDetails SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpointDetails (int? port = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpointDetails SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpointDetails(valuetype System.Nullable`1&lt;int32&gt; port) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpointDetails(System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpointDetails (Optional port As Nullable(Of Integer) = Nothing) As SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpointDetails" />
      <MemberSignature Language="F#" Value="static member SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpointDetails : Nullable&lt;int&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpointDetails" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpointDetails port" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpointDetails</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="port" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="port"> The port of endpoint. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpointDetails" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeOutboundNetworkDependenciesEndpointDetails" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseIntegrationRuntimeStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeStatus SynapseIntegrationRuntimeStatus (string runtimeType = &quot;Unknown&quot;, string dataFactoryName = default, Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeState? state = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,BinaryData&gt; additionalProperties = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeStatus SynapseIntegrationRuntimeStatus(string runtimeType, string dataFactoryName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeState&gt; state, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class System.BinaryData&gt; additionalProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIntegrationRuntimeStatus(System.String,System.String,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeState},System.Collections.Generic.IReadOnlyDictionary{System.String,System.BinaryData})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseIntegrationRuntimeStatus (Optional runtimeType As String = &quot;Unknown&quot;, Optional dataFactoryName As String = Nothing, Optional state As Nullable(Of SynapseIntegrationRuntimeState) = Nothing, Optional additionalProperties As IReadOnlyDictionary(Of String, BinaryData) = Nothing) As SynapseIntegrationRuntimeStatus" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="static member SynapseIntegrationRuntimeStatus : string * string * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeState&gt; * System.Collections.Generic.IReadOnlyDictionary&lt;string, BinaryData&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeStatus" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIntegrationRuntimeStatus (runtimeType, dataFactoryName, state, additionalProperties)" />
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeStatus SynapseIntegrationRuntimeStatus (string runtimeType = default, string dataFactoryName = default, Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeState? state = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,BinaryData&gt; additionalProperties = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseIntegrationRuntimeStatus (Optional runtimeType As String = Nothing, Optional dataFactoryName As String = Nothing, Optional state As Nullable(Of SynapseIntegrationRuntimeState) = Nothing, Optional additionalProperties As IReadOnlyDictionary(Of String, BinaryData) = Nothing) As SynapseIntegrationRuntimeStatus" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runtimeType" Type="System.String" />
        <Parameter Name="dataFactoryName" Type="System.String" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeState&gt;" />
        <Parameter Name="additionalProperties" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.BinaryData&gt;" />
      </Parameters>
      <Docs>
        <param name="runtimeType"> Type of integration runtime. </param>
        <param name="dataFactoryName"> The workspace name which the integration runtime belong to. </param>
        <param name="state"> The state of integration runtime. </param>
        <param name="additionalProperties"> Additional Properties. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeStatus" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseIntegrationRuntimeStatusResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeStatusResult SynapseIntegrationRuntimeStatusResult (string name = default, Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeStatus properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeStatusResult SynapseIntegrationRuntimeStatusResult(string name, class Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeStatus properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIntegrationRuntimeStatusResult(System.String,Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeStatus)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseIntegrationRuntimeStatusResult (Optional name As String = Nothing, Optional properties As SynapseIntegrationRuntimeStatus = Nothing) As SynapseIntegrationRuntimeStatusResult" />
      <MemberSignature Language="F#" Value="static member SynapseIntegrationRuntimeStatusResult : string * Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeStatus -&gt; Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeStatusResult" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIntegrationRuntimeStatusResult (name, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeStatusResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="properties" Type="Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeStatus" />
      </Parameters>
      <Docs>
        <param name="name"> The integration runtime name. </param>
        <param name="properties">
            Integration runtime properties.
            Please note <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeStatus" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeStatus" /> and <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSelfHostedIntegrationRuntimeStatus" />.
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeStatusResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeStatusResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseIotHubDataConnection">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseIotHubDataConnection SynapseIotHubDataConnection (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.AzureLocation? location = default, Azure.Core.ResourceIdentifier iotHubResourceId = default, string consumerGroup = default, string tableName = default, string mappingRuleName = default, Azure.ResourceManager.Synapse.Models.SynapseIotHubDataFormat? dataFormat = default, System.Collections.Generic.IEnumerable&lt;string&gt; eventSystemProperties = default, string sharedAccessPolicyName = default, Azure.ResourceManager.Synapse.Models.ResourceProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseIotHubDataConnection SynapseIotHubDataConnection(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class Azure.Core.ResourceIdentifier iotHubResourceId, string consumerGroup, string tableName, string mappingRuleName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseIotHubDataFormat&gt; dataFormat, class System.Collections.Generic.IEnumerable`1&lt;string&gt; eventSystemProperties, string sharedAccessPolicyName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIotHubDataConnection(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.Core.AzureLocation},Azure.Core.ResourceIdentifier,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseIotHubDataFormat},System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{Azure.ResourceManager.Synapse.Models.ResourceProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseIotHubDataConnection (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional iotHubResourceId As ResourceIdentifier = Nothing, Optional consumerGroup As String = Nothing, Optional tableName As String = Nothing, Optional mappingRuleName As String = Nothing, Optional dataFormat As Nullable(Of SynapseIotHubDataFormat) = Nothing, Optional eventSystemProperties As IEnumerable(Of String) = Nothing, Optional sharedAccessPolicyName As String = Nothing, Optional provisioningState As Nullable(Of ResourceProvisioningState) = Nothing) As SynapseIotHubDataConnection" />
      <MemberSignature Language="F#" Value="static member SynapseIotHubDataConnection : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.Core.AzureLocation&gt; * Azure.Core.ResourceIdentifier * string * string * string * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseIotHubDataFormat&gt; * seq&lt;string&gt; * string * Nullable&lt;Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseIotHubDataConnection" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIotHubDataConnection (id, name, resourceType, systemData, location, iotHubResourceId, consumerGroup, tableName, mappingRuleName, dataFormat, eventSystemProperties, sharedAccessPolicyName, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseIotHubDataConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="iotHubResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="consumerGroup" Type="System.String" />
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="mappingRuleName" Type="System.String" />
        <Parameter Name="dataFormat" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseIotHubDataFormat&gt;" />
        <Parameter Name="eventSystemProperties" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="sharedAccessPolicyName" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="location"> Resource location. </param>
        <param name="iotHubResourceId"> The resource ID of the Iot hub to be used to create a data connection. </param>
        <param name="consumerGroup"> The iot hub consumer group. </param>
        <param name="tableName"> The table where the data should be ingested. Optionally the table information can be added to each message. </param>
        <param name="mappingRuleName"> The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message. </param>
        <param name="dataFormat"> The data format of the message. Optionally the data format can be added to each message. </param>
        <param name="eventSystemProperties"> System properties of the iot hub. </param>
        <param name="sharedAccessPolicyName"> The name of the share access policy. </param>
        <param name="provisioningState"> The provisioned state of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIotHubDataConnection" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIotHubDataConnection" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseIPFirewallRuleInfoData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoData SynapseIPFirewallRuleInfoData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Net.IPAddress endIPAddress = default, Azure.ResourceManager.Synapse.Models.SynapseProvisioningState? provisioningState = default, System.Net.IPAddress startIPAddress = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoData SynapseIPFirewallRuleInfoData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Net.IPAddress endIPAddress, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseProvisioningState&gt; provisioningState, class System.Net.IPAddress startIPAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIPFirewallRuleInfoData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Net.IPAddress,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseProvisioningState},System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseIPFirewallRuleInfoData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional endIPAddress As IPAddress = Nothing, Optional provisioningState As Nullable(Of SynapseProvisioningState) = Nothing, Optional startIPAddress As IPAddress = Nothing) As SynapseIPFirewallRuleInfoData" />
      <MemberSignature Language="F#" Value="static member SynapseIPFirewallRuleInfoData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Net.IPAddress * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseProvisioningState&gt; * System.Net.IPAddress -&gt; Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIPFirewallRuleInfoData (id, name, resourceType, systemData, endIPAddress, provisioningState, startIPAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="endIPAddress" Type="System.Net.IPAddress" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseProvisioningState&gt;" />
        <Parameter Name="startIPAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="endIPAddress"> The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress. </param>
        <param name="provisioningState"> Resource provisioning state. </param>
        <param name="startIPAddress"> The start IP address of the firewall rule. Must be IPv4 format. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseIPFirewallRuleProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseIPFirewallRuleProperties SynapseIPFirewallRuleProperties (System.Net.IPAddress endIPAddress = default, Azure.ResourceManager.Synapse.Models.SynapseProvisioningState? provisioningState = default, System.Net.IPAddress startIPAddress = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseIPFirewallRuleProperties SynapseIPFirewallRuleProperties(class System.Net.IPAddress endIPAddress, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseProvisioningState&gt; provisioningState, class System.Net.IPAddress startIPAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIPFirewallRuleProperties(System.Net.IPAddress,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseProvisioningState},System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseIPFirewallRuleProperties (Optional endIPAddress As IPAddress = Nothing, Optional provisioningState As Nullable(Of SynapseProvisioningState) = Nothing, Optional startIPAddress As IPAddress = Nothing) As SynapseIPFirewallRuleProperties" />
      <MemberSignature Language="F#" Value="static member SynapseIPFirewallRuleProperties : System.Net.IPAddress * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseProvisioningState&gt; * System.Net.IPAddress -&gt; Azure.ResourceManager.Synapse.Models.SynapseIPFirewallRuleProperties" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseIPFirewallRuleProperties (endIPAddress, provisioningState, startIPAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseIPFirewallRuleProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endIPAddress" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseProvisioningState&gt;" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="startIPAddress" Type="System.Net.IPAddress" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="endIPAddress"> The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress. </param>
        <param name="provisioningState"> Resource provisioning state. </param>
        <param name="startIPAddress"> The start IP address of the firewall rule. Must be IPv4 format. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIPFirewallRuleProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseIPFirewallRuleProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseKeyData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseKeyData SynapseKeyData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, bool? isActiveCmk = default, Uri keyVaultUri = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseKeyData SynapseKeyData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;bool&gt; isActiveCmk, class System.Uri keyVaultUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseKeyData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.Boolean},System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseKeyData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional isActiveCmk As Nullable(Of Boolean) = Nothing, Optional keyVaultUri As Uri = Nothing) As SynapseKeyData" />
      <MemberSignature Language="F#" Value="static member SynapseKeyData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;bool&gt; * Uri -&gt; Azure.ResourceManager.Synapse.SynapseKeyData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseKeyData (id, name, resourceType, systemData, isActiveCmk, keyVaultUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseKeyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="isActiveCmk" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="keyVaultUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="isActiveCmk"> Used to activate the workspace after a customer managed key is provided. </param>
        <param name="keyVaultUri"> The Key Vault Url of the workspace key. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseKeyData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseKeyData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseKustoPoolData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseKustoPoolData SynapseKustoPoolData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.Synapse.Models.SynapseDataSourceSku sku = default, Azure.ETag? etag = default, Azure.ResourceManager.Synapse.Models.KustoPoolState? state = default, Azure.ResourceManager.Synapse.Models.ResourceProvisioningState? provisioningState = default, Uri uri = default, Uri dataIngestionUri = default, string stateReason = default, Azure.ResourceManager.Synapse.Models.SynapseOptimizedAutoscale optimizedAutoscale = default, bool? enableStreamingIngest = default, bool? enablePurge = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseLanguageExtension&gt; languageExtensionsValue = default, Guid? workspaceUid = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseKustoPoolData SynapseKustoPoolData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Synapse.Models.SynapseDataSourceSku sku, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.KustoPoolState&gt; state, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt; provisioningState, class System.Uri uri, class System.Uri dataIngestionUri, string stateReason, class Azure.ResourceManager.Synapse.Models.SynapseOptimizedAutoscale optimizedAutoscale, valuetype System.Nullable`1&lt;bool&gt; enableStreamingIngest, valuetype System.Nullable`1&lt;bool&gt; enablePurge, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Synapse.Models.SynapseLanguageExtension&gt; languageExtensionsValue, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; workspaceUid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseKustoPoolData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Synapse.Models.SynapseDataSourceSku,System.Nullable{Azure.ETag},System.Nullable{Azure.ResourceManager.Synapse.Models.KustoPoolState},System.Nullable{Azure.ResourceManager.Synapse.Models.ResourceProvisioningState},System.Uri,System.Uri,System.String,Azure.ResourceManager.Synapse.Models.SynapseOptimizedAutoscale,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Synapse.Models.SynapseLanguageExtension},System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseKustoPoolData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional sku As SynapseDataSourceSku = Nothing, Optional etag As Nullable(Of ETag) = Nothing, Optional state As Nullable(Of KustoPoolState) = Nothing, Optional provisioningState As Nullable(Of ResourceProvisioningState) = Nothing, Optional uri As Uri = Nothing, Optional dataIngestionUri As Uri = Nothing, Optional stateReason As String = Nothing, Optional optimizedAutoscale As SynapseOptimizedAutoscale = Nothing, Optional enableStreamingIngest As Nullable(Of Boolean) = Nothing, Optional enablePurge As Nullable(Of Boolean) = Nothing, Optional languageExtensionsValue As IEnumerable(Of SynapseLanguageExtension) = Nothing, Optional workspaceUid As Nullable(Of Guid) = Nothing) As SynapseKustoPoolData" />
      <MemberSignature Language="F#" Value="static member SynapseKustoPoolData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.Synapse.Models.SynapseDataSourceSku * Nullable&lt;Azure.ETag&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.KustoPoolState&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt; * Uri * Uri * string * Azure.ResourceManager.Synapse.Models.SynapseOptimizedAutoscale * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * seq&lt;Azure.ResourceManager.Synapse.Models.SynapseLanguageExtension&gt; * Nullable&lt;Guid&gt; -&gt; Azure.ResourceManager.Synapse.SynapseKustoPoolData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseKustoPoolData (id, name, resourceType, systemData, tags, location, sku, etag, state, provisioningState, uri, dataIngestionUri, stateReason, optimizedAutoscale, enableStreamingIngest, enablePurge, languageExtensionsValue, workspaceUid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseKustoPoolData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="sku" Type="Azure.ResourceManager.Synapse.Models.SynapseDataSourceSku" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.KustoPoolState&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt;" />
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="dataIngestionUri" Type="System.Uri" />
        <Parameter Name="stateReason" Type="System.String" />
        <Parameter Name="optimizedAutoscale" Type="Azure.ResourceManager.Synapse.Models.SynapseOptimizedAutoscale" />
        <Parameter Name="enableStreamingIngest" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="enablePurge" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="languageExtensionsValue" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseLanguageExtension&gt;" />
        <Parameter Name="workspaceUid" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="sku"> The SKU of the kusto pool. </param>
        <param name="etag"> A unique read-only string that changes whenever the resource is updated. </param>
        <param name="state"> The state of the resource. </param>
        <param name="provisioningState"> The provisioned state of the resource. </param>
        <param name="uri"> The Kusto Pool URI. </param>
        <param name="dataIngestionUri"> The Kusto Pool data ingestion URI. </param>
        <param name="stateReason"> The reason for the Kusto Pool's current state. </param>
        <param name="optimizedAutoscale"> Optimized auto scale definition. </param>
        <param name="enableStreamingIngest"> A boolean value that indicates if the streaming ingest is enabled. </param>
        <param name="enablePurge"> A boolean value that indicates if the purge operations are enabled. </param>
        <param name="languageExtensionsValue"> List of the Kusto Pool's language extensions. </param>
        <param name="workspaceUid"> The workspace unique identifier. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseKustoPoolData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseKustoPoolData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseKustoPoolPatch">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseKustoPoolPatch SynapseKustoPoolPatch (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.ResourceManager.Synapse.Models.SynapseDataSourceSku sku = default, Azure.ResourceManager.Synapse.Models.KustoPoolState? state = default, Azure.ResourceManager.Synapse.Models.ResourceProvisioningState? provisioningState = default, Uri uri = default, Uri dataIngestionUri = default, string stateReason = default, Azure.ResourceManager.Synapse.Models.SynapseOptimizedAutoscale optimizedAutoscale = default, bool? enableStreamingIngest = default, bool? enablePurge = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseLanguageExtension&gt; languageExtensionsValue = default, Guid? workspaceUid = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseKustoPoolPatch SynapseKustoPoolPatch(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, class Azure.ResourceManager.Synapse.Models.SynapseDataSourceSku sku, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.KustoPoolState&gt; state, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt; provisioningState, class System.Uri uri, class System.Uri dataIngestionUri, string stateReason, class Azure.ResourceManager.Synapse.Models.SynapseOptimizedAutoscale optimizedAutoscale, valuetype System.Nullable`1&lt;bool&gt; enableStreamingIngest, valuetype System.Nullable`1&lt;bool&gt; enablePurge, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Synapse.Models.SynapseLanguageExtension&gt; languageExtensionsValue, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; workspaceUid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseKustoPoolPatch(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.Synapse.Models.SynapseDataSourceSku,System.Nullable{Azure.ResourceManager.Synapse.Models.KustoPoolState},System.Nullable{Azure.ResourceManager.Synapse.Models.ResourceProvisioningState},System.Uri,System.Uri,System.String,Azure.ResourceManager.Synapse.Models.SynapseOptimizedAutoscale,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Synapse.Models.SynapseLanguageExtension},System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseKustoPoolPatch (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional sku As SynapseDataSourceSku = Nothing, Optional state As Nullable(Of KustoPoolState) = Nothing, Optional provisioningState As Nullable(Of ResourceProvisioningState) = Nothing, Optional uri As Uri = Nothing, Optional dataIngestionUri As Uri = Nothing, Optional stateReason As String = Nothing, Optional optimizedAutoscale As SynapseOptimizedAutoscale = Nothing, Optional enableStreamingIngest As Nullable(Of Boolean) = Nothing, Optional enablePurge As Nullable(Of Boolean) = Nothing, Optional languageExtensionsValue As IEnumerable(Of SynapseLanguageExtension) = Nothing, Optional workspaceUid As Nullable(Of Guid) = Nothing) As SynapseKustoPoolPatch" />
      <MemberSignature Language="F#" Value="static member SynapseKustoPoolPatch : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.ResourceManager.Synapse.Models.SynapseDataSourceSku * Nullable&lt;Azure.ResourceManager.Synapse.Models.KustoPoolState&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt; * Uri * Uri * string * Azure.ResourceManager.Synapse.Models.SynapseOptimizedAutoscale * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * seq&lt;Azure.ResourceManager.Synapse.Models.SynapseLanguageExtension&gt; * Nullable&lt;Guid&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseKustoPoolPatch" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseKustoPoolPatch (id, name, resourceType, systemData, tags, sku, state, provisioningState, uri, dataIngestionUri, stateReason, optimizedAutoscale, enableStreamingIngest, enablePurge, languageExtensionsValue, workspaceUid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseKustoPoolPatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="sku" Type="Azure.ResourceManager.Synapse.Models.SynapseDataSourceSku" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.KustoPoolState&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt;" />
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="dataIngestionUri" Type="System.Uri" />
        <Parameter Name="stateReason" Type="System.String" />
        <Parameter Name="optimizedAutoscale" Type="Azure.ResourceManager.Synapse.Models.SynapseOptimizedAutoscale" />
        <Parameter Name="enableStreamingIngest" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="enablePurge" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="languageExtensionsValue" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseLanguageExtension&gt;" />
        <Parameter Name="workspaceUid" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> Resource tags. </param>
        <param name="sku"> The SKU of the kusto pool. </param>
        <param name="state"> The state of the resource. </param>
        <param name="provisioningState"> The provisioned state of the resource. </param>
        <param name="uri"> The Kusto Pool URI. </param>
        <param name="dataIngestionUri"> The Kusto Pool data ingestion URI. </param>
        <param name="stateReason"> The reason for the Kusto Pool's current state. </param>
        <param name="optimizedAutoscale"> Optimized auto scale definition. </param>
        <param name="enableStreamingIngest"> A boolean value that indicates if the streaming ingest is enabled. </param>
        <param name="enablePurge"> A boolean value that indicates if the purge operations are enabled. </param>
        <param name="languageExtensionsValue"> List of the Kusto Pool's language extensions. </param>
        <param name="workspaceUid"> The workspace unique identifier. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseKustoPoolPatch" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseKustoPoolPatch" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseKustoPoolPrivateLinkData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseKustoPoolPrivateLinkData SynapseKustoPoolPrivateLinkData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string groupId = default, System.Collections.Generic.IEnumerable&lt;string&gt; requiredMembers = default, System.Collections.Generic.IEnumerable&lt;string&gt; requiredZoneNames = default, Azure.ResourceManager.Synapse.Models.ResourceProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseKustoPoolPrivateLinkData SynapseKustoPoolPrivateLinkData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string groupId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; requiredMembers, class System.Collections.Generic.IEnumerable`1&lt;string&gt; requiredZoneNames, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseKustoPoolPrivateLinkData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{Azure.ResourceManager.Synapse.Models.ResourceProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseKustoPoolPrivateLinkData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional groupId As String = Nothing, Optional requiredMembers As IEnumerable(Of String) = Nothing, Optional requiredZoneNames As IEnumerable(Of String) = Nothing, Optional provisioningState As Nullable(Of ResourceProvisioningState) = Nothing) As SynapseKustoPoolPrivateLinkData" />
      <MemberSignature Language="F#" Value="static member SynapseKustoPoolPrivateLinkData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseKustoPoolPrivateLinkData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseKustoPoolPrivateLinkData (id, name, resourceType, systemData, groupId, requiredMembers, requiredZoneNames, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseKustoPoolPrivateLinkData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="requiredMembers" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="requiredZoneNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="groupId"> The Private link resources GroupId. </param>
        <param name="requiredMembers"> The private link resource required member names. </param>
        <param name="requiredZoneNames"> The private link resource required zone names. </param>
        <param name="provisioningState"> The provisioned state of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseKustoPoolPrivateLinkData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseKustoPoolPrivateLinkData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseLibraryData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseLibraryData SynapseLibraryData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string namePropertiesName = default, string path = default, string containerName = default, DateTimeOffset? uploadedOn = default, string typePropertiesType = default, string provisioningStatus = default, string creatorId = default, Azure.ETag? etag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseLibraryData SynapseLibraryData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string namePropertiesName, string path, string containerName, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; uploadedOn, string typePropertiesType, string provisioningStatus, string creatorId, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseLibraryData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.String,System.String,System.String,System.Nullable{Azure.ETag})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseLibraryData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional namePropertiesName As String = Nothing, Optional path As String = Nothing, Optional containerName As String = Nothing, Optional uploadedOn As Nullable(Of DateTimeOffset) = Nothing, Optional typePropertiesType As String = Nothing, Optional provisioningStatus As String = Nothing, Optional creatorId As String = Nothing, Optional etag As Nullable(Of ETag) = Nothing) As SynapseLibraryData" />
      <MemberSignature Language="F#" Value="static member SynapseLibraryData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string * string * Nullable&lt;DateTimeOffset&gt; * string * string * string * Nullable&lt;Azure.ETag&gt; -&gt; Azure.ResourceManager.Synapse.SynapseLibraryData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseLibraryData (id, name, resourceType, systemData, namePropertiesName, path, containerName, uploadedOn, typePropertiesType, provisioningStatus, creatorId, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseLibraryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="namePropertiesName" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="uploadedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="typePropertiesType" Type="System.String" />
        <Parameter Name="provisioningStatus" Type="System.String" />
        <Parameter Name="creatorId" Type="System.String" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="namePropertiesName"> Name of the library. </param>
        <param name="path"> Storage blob path of library. </param>
        <param name="containerName"> Storage blob container name. </param>
        <param name="uploadedOn"> The last update time of the library. </param>
        <param name="typePropertiesType"> Type of the library. </param>
        <param name="provisioningStatus"> Provisioning status of the library/package. </param>
        <param name="creatorId"> Creator Id of the library/package. </param>
        <param name="etag"> Resource Etag. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseLibraryData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseLibraryData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseLinkedIntegrationRuntime">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseLinkedIntegrationRuntime SynapseLinkedIntegrationRuntime (string name = default, string subscriptionId = default, string dataFactoryName = default, string dataFactoryLocation = default, DateTimeOffset? createOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseLinkedIntegrationRuntime SynapseLinkedIntegrationRuntime(string name, string subscriptionId, string dataFactoryName, string dataFactoryLocation, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseLinkedIntegrationRuntime(System.String,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseLinkedIntegrationRuntime (Optional name As String = Nothing, Optional subscriptionId As String = Nothing, Optional dataFactoryName As String = Nothing, Optional dataFactoryLocation As String = Nothing, Optional createOn As Nullable(Of DateTimeOffset) = Nothing) As SynapseLinkedIntegrationRuntime" />
      <MemberSignature Language="F#" Value="static member SynapseLinkedIntegrationRuntime : string * string * string * string * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseLinkedIntegrationRuntime" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseLinkedIntegrationRuntime (name, subscriptionId, dataFactoryName, dataFactoryLocation, createOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseLinkedIntegrationRuntime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="dataFactoryName" Type="System.String" />
        <Parameter Name="dataFactoryLocation" Type="System.String" />
        <Parameter Name="createOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the linked integration runtime. </param>
        <param name="subscriptionId"> The subscription ID for which the linked integration runtime belong to. </param>
        <param name="dataFactoryName"> The name of the workspace for which the linked integration runtime belong to. </param>
        <param name="dataFactoryLocation"> The location of the workspace for which the linked integration runtime belong to. </param>
        <param name="createOn"> The creating time of the linked integration runtime. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseLinkedIntegrationRuntime" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseLinkedIntegrationRuntime" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseMaintenanceWindowData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseMaintenanceWindowData SynapseMaintenanceWindowData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseMaintenanceWindowTimeRange&gt; timeRanges = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseMaintenanceWindowData SynapseMaintenanceWindowData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Synapse.Models.SynapseMaintenanceWindowTimeRange&gt; timeRanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseMaintenanceWindowData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Synapse.Models.SynapseMaintenanceWindowTimeRange})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseMaintenanceWindowData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional timeRanges As IEnumerable(Of SynapseMaintenanceWindowTimeRange) = Nothing) As SynapseMaintenanceWindowData" />
      <MemberSignature Language="F#" Value="static member SynapseMaintenanceWindowData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * seq&lt;Azure.ResourceManager.Synapse.Models.SynapseMaintenanceWindowTimeRange&gt; -&gt; Azure.ResourceManager.Synapse.SynapseMaintenanceWindowData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseMaintenanceWindowData (id, name, resourceType, systemData, timeRanges)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseMaintenanceWindowData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="timeRanges" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseMaintenanceWindowTimeRange&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="timeRanges" />
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseMaintenanceWindowData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseMaintenanceWindowData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseMaintenanceWindowOptionData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseMaintenanceWindowOptionData SynapseMaintenanceWindowOptionData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, bool? isEnabled = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseMaintenanceWindowTimeRange&gt; maintenanceWindowCycles = default, int? minDurationInMinutes = default, int? defaultDurationInMinutes = default, int? minCycles = default, int? timeGranularityInMinutes = default, bool? allowMultipleMaintenanceWindowsPerCycle = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseMaintenanceWindowOptionData SynapseMaintenanceWindowOptionData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;bool&gt; isEnabled, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Synapse.Models.SynapseMaintenanceWindowTimeRange&gt; maintenanceWindowCycles, valuetype System.Nullable`1&lt;int32&gt; minDurationInMinutes, valuetype System.Nullable`1&lt;int32&gt; defaultDurationInMinutes, valuetype System.Nullable`1&lt;int32&gt; minCycles, valuetype System.Nullable`1&lt;int32&gt; timeGranularityInMinutes, valuetype System.Nullable`1&lt;bool&gt; allowMultipleMaintenanceWindowsPerCycle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseMaintenanceWindowOptionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Synapse.Models.SynapseMaintenanceWindowTimeRange},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseMaintenanceWindowOptionData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional isEnabled As Nullable(Of Boolean) = Nothing, Optional maintenanceWindowCycles As IEnumerable(Of SynapseMaintenanceWindowTimeRange) = Nothing, Optional minDurationInMinutes As Nullable(Of Integer) = Nothing, Optional defaultDurationInMinutes As Nullable(Of Integer) = Nothing, Optional minCycles As Nullable(Of Integer) = Nothing, Optional timeGranularityInMinutes As Nullable(Of Integer) = Nothing, Optional allowMultipleMaintenanceWindowsPerCycle As Nullable(Of Boolean) = Nothing) As SynapseMaintenanceWindowOptionData" />
      <MemberSignature Language="F#" Value="static member SynapseMaintenanceWindowOptionData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;bool&gt; * seq&lt;Azure.ResourceManager.Synapse.Models.SynapseMaintenanceWindowTimeRange&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.Synapse.SynapseMaintenanceWindowOptionData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseMaintenanceWindowOptionData (id, name, resourceType, systemData, isEnabled, maintenanceWindowCycles, minDurationInMinutes, defaultDurationInMinutes, minCycles, timeGranularityInMinutes, allowMultipleMaintenanceWindowsPerCycle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseMaintenanceWindowOptionData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="isEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="maintenanceWindowCycles" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseMaintenanceWindowTimeRange&gt;" />
        <Parameter Name="minDurationInMinutes" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="defaultDurationInMinutes" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="minCycles" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="timeGranularityInMinutes" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="allowMultipleMaintenanceWindowsPerCycle" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="isEnabled"> Whether maintenance windows are enabled for the database. </param>
        <param name="maintenanceWindowCycles"> Available maintenance cycles e.g. {Saturday, 0, 48*60}, {Wednesday, 0, 24*60}. </param>
        <param name="minDurationInMinutes"> Minimum duration of maintenance window. </param>
        <param name="defaultDurationInMinutes"> Default duration for maintenance window. </param>
        <param name="minCycles"> Minimum number of maintenance windows cycles to be set on the database. </param>
        <param name="timeGranularityInMinutes"> Time granularity in minutes for maintenance windows. </param>
        <param name="allowMultipleMaintenanceWindowsPerCycle"> Whether we allow multiple maintenance windows per cycle. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseMaintenanceWindowOptionData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseMaintenanceWindowOptionData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseManagedIdentitySqlControlSettingData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseManagedIdentitySqlControlSettingData SynapseManagedIdentitySqlControlSettingData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Synapse.Models.SynapseGrantSqlControlToManagedIdentity grantSqlControlToManagedIdentity = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseManagedIdentitySqlControlSettingData SynapseManagedIdentitySqlControlSettingData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.Synapse.Models.SynapseGrantSqlControlToManagedIdentity grantSqlControlToManagedIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseManagedIdentitySqlControlSettingData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Synapse.Models.SynapseGrantSqlControlToManagedIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseManagedIdentitySqlControlSettingData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional grantSqlControlToManagedIdentity As SynapseGrantSqlControlToManagedIdentity = Nothing) As SynapseManagedIdentitySqlControlSettingData" />
      <MemberSignature Language="F#" Value="static member SynapseManagedIdentitySqlControlSettingData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.Synapse.Models.SynapseGrantSqlControlToManagedIdentity -&gt; Azure.ResourceManager.Synapse.SynapseManagedIdentitySqlControlSettingData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseManagedIdentitySqlControlSettingData (id, name, resourceType, systemData, grantSqlControlToManagedIdentity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseManagedIdentitySqlControlSettingData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="grantSqlControlToManagedIdentity" Type="Azure.ResourceManager.Synapse.Models.SynapseGrantSqlControlToManagedIdentity" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="grantSqlControlToManagedIdentity"> Grant sql control to managed identity. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseManagedIdentitySqlControlSettingData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseManagedIdentitySqlControlSettingData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseManagedIntegrationRuntime">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntime SynapseManagedIntegrationRuntime (string description = default, System.Collections.Generic.IDictionary&lt;string,BinaryData&gt; additionalProperties = default, Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeState? state = default, string referenceName = default, string typeManagedVirtualNetworkType = default, string id = default, Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeComputeProperties computeProperties = default, Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeSsisProperties ssisProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntime SynapseManagedIntegrationRuntime(string description, class System.Collections.Generic.IDictionary`2&lt;string, class System.BinaryData&gt; additionalProperties, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeState&gt; state, string referenceName, string typeManagedVirtualNetworkType, string id, class Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeComputeProperties computeProperties, class Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeSsisProperties ssisProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseManagedIntegrationRuntime(System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData},System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeState},System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeComputeProperties,Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeSsisProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseManagedIntegrationRuntime (Optional description As String = Nothing, Optional additionalProperties As IDictionary(Of String, BinaryData) = Nothing, Optional state As Nullable(Of SynapseIntegrationRuntimeState) = Nothing, Optional referenceName As String = Nothing, Optional typeManagedVirtualNetworkType As String = Nothing, Optional id As String = Nothing, Optional computeProperties As SynapseIntegrationRuntimeComputeProperties = Nothing, Optional ssisProperties As SynapseIntegrationRuntimeSsisProperties = Nothing) As SynapseManagedIntegrationRuntime" />
      <MemberSignature Language="F#" Value="static member SynapseManagedIntegrationRuntime : string * System.Collections.Generic.IDictionary&lt;string, BinaryData&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeState&gt; * string * string * string * Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeComputeProperties * Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeSsisProperties -&gt; Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntime" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseManagedIntegrationRuntime (description, additionalProperties, state, referenceName, typeManagedVirtualNetworkType, id, computeProperties, ssisProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="additionalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.BinaryData&gt;" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeState&gt;" />
        <Parameter Name="referenceName" Type="System.String" />
        <Parameter Name="typeManagedVirtualNetworkType" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="computeProperties" Type="Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeComputeProperties" />
        <Parameter Name="ssisProperties" Type="Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeSsisProperties" />
      </Parameters>
      <Docs>
        <param name="description"> Integration runtime description. </param>
        <param name="additionalProperties"> Additional Properties. </param>
        <param name="state"> Integration runtime state, only valid for managed dedicated integration runtime. </param>
        <param name="referenceName"> The reference name of the managed virtual network. </param>
        <param name="typeManagedVirtualNetworkType"> The type of the managed virtual network. </param>
        <param name="id"> The id of the managed virtual network. </param>
        <param name="computeProperties"> The compute resource for managed integration runtime. </param>
        <param name="ssisProperties"> SSIS properties for managed integration runtime. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntime" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntime" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseManagedIntegrationRuntimeError">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeError SynapseManagedIntegrationRuntimeError (DateTimeOffset? time = default, string code = default, System.Collections.Generic.IEnumerable&lt;string&gt; parameters = default, string message = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,BinaryData&gt; additionalProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeError SynapseManagedIntegrationRuntimeError(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; time, string code, class System.Collections.Generic.IEnumerable`1&lt;string&gt; parameters, string message, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class System.BinaryData&gt; additionalProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseManagedIntegrationRuntimeError(System.Nullable{System.DateTimeOffset},System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.BinaryData})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseManagedIntegrationRuntimeError (Optional time As Nullable(Of DateTimeOffset) = Nothing, Optional code As String = Nothing, Optional parameters As IEnumerable(Of String) = Nothing, Optional message As String = Nothing, Optional additionalProperties As IReadOnlyDictionary(Of String, BinaryData) = Nothing) As SynapseManagedIntegrationRuntimeError" />
      <MemberSignature Language="F#" Value="static member SynapseManagedIntegrationRuntimeError : Nullable&lt;DateTimeOffset&gt; * string * seq&lt;string&gt; * string * System.Collections.Generic.IReadOnlyDictionary&lt;string, BinaryData&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeError" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseManagedIntegrationRuntimeError (time, code, parameters, message, additionalProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="code" Type="System.String" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="additionalProperties" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.BinaryData&gt;" />
      </Parameters>
      <Docs>
        <param name="time"> The time when the error occurred. </param>
        <param name="code"> Error code. </param>
        <param name="parameters"> Managed integration runtime error parameters. </param>
        <param name="message"> Error message. </param>
        <param name="additionalProperties"> Additional Properties. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeError" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeError" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseManagedIntegrationRuntimeNode">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeNode SynapseManagedIntegrationRuntimeNode (string nodeId = default, Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeNodeStatus? status = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeError&gt; errors = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,BinaryData&gt; additionalProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeNode SynapseManagedIntegrationRuntimeNode(string nodeId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeNodeStatus&gt; status, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeError&gt; errors, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class System.BinaryData&gt; additionalProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseManagedIntegrationRuntimeNode(System.String,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeNodeStatus},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeError},System.Collections.Generic.IReadOnlyDictionary{System.String,System.BinaryData})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseManagedIntegrationRuntimeNode (Optional nodeId As String = Nothing, Optional status As Nullable(Of SynapseManagedIntegrationRuntimeNodeStatus) = Nothing, Optional errors As IEnumerable(Of SynapseManagedIntegrationRuntimeError) = Nothing, Optional additionalProperties As IReadOnlyDictionary(Of String, BinaryData) = Nothing) As SynapseManagedIntegrationRuntimeNode" />
      <MemberSignature Language="F#" Value="static member SynapseManagedIntegrationRuntimeNode : string * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeNodeStatus&gt; * seq&lt;Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeError&gt; * System.Collections.Generic.IReadOnlyDictionary&lt;string, BinaryData&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeNode" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseManagedIntegrationRuntimeNode (nodeId, status, errors, additionalProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeId" Type="System.String" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeNodeStatus&gt;" />
        <Parameter Name="errors" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeError&gt;" />
        <Parameter Name="additionalProperties" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.BinaryData&gt;" />
      </Parameters>
      <Docs>
        <param name="nodeId"> The managed integration runtime node id. </param>
        <param name="status"> The managed integration runtime node status. </param>
        <param name="errors"> The errors that occurred on this integration runtime node. </param>
        <param name="additionalProperties"> Additional Properties. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeNode" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeNode" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseManagedIntegrationRuntimeOperationResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeOperationResult SynapseManagedIntegrationRuntimeOperationResult (string managedIntegrationRuntimeOperationResultType = default, DateTimeOffset? startOn = default, string result = default, string errorCode = default, System.Collections.Generic.IEnumerable&lt;string&gt; parameters = default, string activityId = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,BinaryData&gt; additionalProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeOperationResult SynapseManagedIntegrationRuntimeOperationResult(string managedIntegrationRuntimeOperationResultType, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startOn, string result, string errorCode, class System.Collections.Generic.IEnumerable`1&lt;string&gt; parameters, string activityId, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class System.BinaryData&gt; additionalProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseManagedIntegrationRuntimeOperationResult(System.String,System.Nullable{System.DateTimeOffset},System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.BinaryData})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseManagedIntegrationRuntimeOperationResult (Optional managedIntegrationRuntimeOperationResultType As String = Nothing, Optional startOn As Nullable(Of DateTimeOffset) = Nothing, Optional result As String = Nothing, Optional errorCode As String = Nothing, Optional parameters As IEnumerable(Of String) = Nothing, Optional activityId As String = Nothing, Optional additionalProperties As IReadOnlyDictionary(Of String, BinaryData) = Nothing) As SynapseManagedIntegrationRuntimeOperationResult" />
      <MemberSignature Language="F#" Value="static member SynapseManagedIntegrationRuntimeOperationResult : string * Nullable&lt;DateTimeOffset&gt; * string * string * seq&lt;string&gt; * string * System.Collections.Generic.IReadOnlyDictionary&lt;string, BinaryData&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeOperationResult" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseManagedIntegrationRuntimeOperationResult (managedIntegrationRuntimeOperationResultType, startOn, result, errorCode, parameters, activityId, additionalProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeOperationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managedIntegrationRuntimeOperationResultType" Type="System.String" />
        <Parameter Name="startOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="result" Type="System.String" />
        <Parameter Name="errorCode" Type="System.String" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="activityId" Type="System.String" />
        <Parameter Name="additionalProperties" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.BinaryData&gt;" />
      </Parameters>
      <Docs>
        <param name="managedIntegrationRuntimeOperationResultType"> The operation type. Could be start or stop. </param>
        <param name="startOn"> The start time of the operation. </param>
        <param name="result"> The operation result. </param>
        <param name="errorCode"> The error code. </param>
        <param name="parameters"> Managed integration runtime error parameters. </param>
        <param name="activityId"> The activity id for the operation request. </param>
        <param name="additionalProperties"> Additional Properties. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeOperationResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeOperationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseManagedIntegrationRuntimeStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeStatus SynapseManagedIntegrationRuntimeStatus (string dataFactoryName = default, Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeState? state = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,BinaryData&gt; additionalProperties = default, DateTimeOffset? createOn = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeNode&gt; nodes = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeError&gt; otherErrors = default, Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeOperationResult lastOperation = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeStatus SynapseManagedIntegrationRuntimeStatus(string dataFactoryName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeState&gt; state, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class System.BinaryData&gt; additionalProperties, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createOn, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeNode&gt; nodes, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeError&gt; otherErrors, class Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeOperationResult lastOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseManagedIntegrationRuntimeStatus(System.String,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeState},System.Collections.Generic.IReadOnlyDictionary{System.String,System.BinaryData},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeNode},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeError},Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeOperationResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseManagedIntegrationRuntimeStatus (Optional dataFactoryName As String = Nothing, Optional state As Nullable(Of SynapseIntegrationRuntimeState) = Nothing, Optional additionalProperties As IReadOnlyDictionary(Of String, BinaryData) = Nothing, Optional createOn As Nullable(Of DateTimeOffset) = Nothing, Optional nodes As IEnumerable(Of SynapseManagedIntegrationRuntimeNode) = Nothing, Optional otherErrors As IEnumerable(Of SynapseManagedIntegrationRuntimeError) = Nothing, Optional lastOperation As SynapseManagedIntegrationRuntimeOperationResult = Nothing) As SynapseManagedIntegrationRuntimeStatus" />
      <MemberSignature Language="F#" Value="static member SynapseManagedIntegrationRuntimeStatus : string * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeState&gt; * System.Collections.Generic.IReadOnlyDictionary&lt;string, BinaryData&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeNode&gt; * seq&lt;Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeError&gt; * Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeOperationResult -&gt; Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeStatus" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseManagedIntegrationRuntimeStatus (dataFactoryName, state, additionalProperties, createOn, nodes, otherErrors, lastOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataFactoryName" Type="System.String" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeState&gt;" />
        <Parameter Name="additionalProperties" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.BinaryData&gt;" />
        <Parameter Name="createOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="nodes" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeNode&gt;" />
        <Parameter Name="otherErrors" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeError&gt;" />
        <Parameter Name="lastOperation" Type="Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeOperationResult" />
      </Parameters>
      <Docs>
        <param name="dataFactoryName"> The workspace name which the integration runtime belong to. </param>
        <param name="state"> The state of integration runtime. </param>
        <param name="additionalProperties"> Additional Properties. </param>
        <param name="createOn"> The time at which the integration runtime was created, in ISO8601 format. </param>
        <param name="nodes"> The list of nodes for managed integration runtime. </param>
        <param name="otherErrors"> The errors that occurred on this integration runtime. </param>
        <param name="lastOperation"> The last operation result that occurred on this integration runtime. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeStatus" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseManagedIntegrationRuntimeStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseMetadataSyncConfigurationData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseMetadataSyncConfigurationData SynapseMetadataSyncConfigurationData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, bool? isEnabled = default, int? syncIntervalInMinutes = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseMetadataSyncConfigurationData SynapseMetadataSyncConfigurationData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;bool&gt; isEnabled, valuetype System.Nullable`1&lt;int32&gt; syncIntervalInMinutes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseMetadataSyncConfigurationData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.Boolean},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseMetadataSyncConfigurationData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional isEnabled As Nullable(Of Boolean) = Nothing, Optional syncIntervalInMinutes As Nullable(Of Integer) = Nothing) As SynapseMetadataSyncConfigurationData" />
      <MemberSignature Language="F#" Value="static member SynapseMetadataSyncConfigurationData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;bool&gt; * Nullable&lt;int&gt; -&gt; Azure.ResourceManager.Synapse.SynapseMetadataSyncConfigurationData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseMetadataSyncConfigurationData (id, name, resourceType, systemData, isEnabled, syncIntervalInMinutes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseMetadataSyncConfigurationData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="isEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="syncIntervalInMinutes" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="isEnabled"> Indicates whether the metadata sync is enabled or disabled. </param>
        <param name="syncIntervalInMinutes"> The Sync Interval in minutes. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseMetadataSyncConfigurationData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseMetadataSyncConfigurationData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapsePrivateEndpointConnectionData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionData SynapsePrivateEndpointConnectionData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.ResourceIdentifier privateEndpointId = default, Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkServiceConnectionState connectionState = default, string provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionData SynapsePrivateEndpointConnectionData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.Core.ResourceIdentifier privateEndpointId, class Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkServiceConnectionState connectionState, string provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapsePrivateEndpointConnectionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.Core.ResourceIdentifier,Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkServiceConnectionState,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapsePrivateEndpointConnectionData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional privateEndpointId As ResourceIdentifier = Nothing, Optional connectionState As SynapsePrivateLinkServiceConnectionState = Nothing, Optional provisioningState As String = Nothing) As SynapsePrivateEndpointConnectionData" />
      <MemberSignature Language="F#" Value="static member SynapsePrivateEndpointConnectionData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.Core.ResourceIdentifier * Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkServiceConnectionState * string -&gt; Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapsePrivateEndpointConnectionData (id, name, resourceType, systemData, privateEndpointId, connectionState, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="privateEndpointId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="connectionState" Type="Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkServiceConnectionState" />
        <Parameter Name="provisioningState" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="privateEndpointId"> The private endpoint which the connection belongs to. </param>
        <param name="connectionState"> Connection state of the private endpoint connection. </param>
        <param name="provisioningState"> Provisioning state of the private endpoint connection. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapsePrivateEndpointConnectionForPrivateLinkHubData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionForPrivateLinkHubData SynapsePrivateEndpointConnectionForPrivateLinkHubData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Synapse.Models.SynapsePrivateEndpointConnectionProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionForPrivateLinkHubData SynapsePrivateEndpointConnectionForPrivateLinkHubData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.Synapse.Models.SynapsePrivateEndpointConnectionProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapsePrivateEndpointConnectionForPrivateLinkHubData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Synapse.Models.SynapsePrivateEndpointConnectionProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapsePrivateEndpointConnectionForPrivateLinkHubData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional properties As SynapsePrivateEndpointConnectionProperties = Nothing) As SynapsePrivateEndpointConnectionForPrivateLinkHubData" />
      <MemberSignature Language="F#" Value="static member SynapsePrivateEndpointConnectionForPrivateLinkHubData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.Synapse.Models.SynapsePrivateEndpointConnectionProperties -&gt; Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionForPrivateLinkHubData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapsePrivateEndpointConnectionForPrivateLinkHubData (id, name, resourceType, systemData, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionForPrivateLinkHubData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="properties" Type="Azure.ResourceManager.Synapse.Models.SynapsePrivateEndpointConnectionProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="properties"> Properties of a private endpoint connection. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionForPrivateLinkHubData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionForPrivateLinkHubData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapsePrivateEndpointConnectionProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapsePrivateEndpointConnectionProperties SynapsePrivateEndpointConnectionProperties (Azure.Core.ResourceIdentifier privateEndpointId = default, Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkServiceConnectionState connectionState = default, string provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapsePrivateEndpointConnectionProperties SynapsePrivateEndpointConnectionProperties(class Azure.Core.ResourceIdentifier privateEndpointId, class Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkServiceConnectionState connectionState, string provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapsePrivateEndpointConnectionProperties(Azure.Core.ResourceIdentifier,Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkServiceConnectionState,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapsePrivateEndpointConnectionProperties (Optional privateEndpointId As ResourceIdentifier = Nothing, Optional connectionState As SynapsePrivateLinkServiceConnectionState = Nothing, Optional provisioningState As String = Nothing) As SynapsePrivateEndpointConnectionProperties" />
      <MemberSignature Language="F#" Value="static member SynapsePrivateEndpointConnectionProperties : Azure.Core.ResourceIdentifier * Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkServiceConnectionState * string -&gt; Azure.ResourceManager.Synapse.Models.SynapsePrivateEndpointConnectionProperties" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapsePrivateEndpointConnectionProperties (privateEndpointId, connectionState, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapsePrivateEndpointConnectionProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateEndpointId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="connectionState" Type="Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkServiceConnectionState" />
        <Parameter Name="provisioningState" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="privateEndpointId"> The private endpoint which the connection belongs to. </param>
        <param name="connectionState"> Connection state of the private endpoint connection. </param>
        <param name="provisioningState"> Provisioning state of the private endpoint connection. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapsePrivateEndpointConnectionProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapsePrivateEndpointConnectionProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapsePrivateLinkHubData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapsePrivateLinkHubData SynapsePrivateLinkHubData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, string provisioningState = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.PrivateEndpointConnectionForPrivateLinkHubBasic&gt; privateEndpointConnections = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapsePrivateLinkHubData SynapsePrivateLinkHubData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, string provisioningState, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Synapse.Models.PrivateEndpointConnectionForPrivateLinkHubBasic&gt; privateEndpointConnections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapsePrivateLinkHubData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Synapse.Models.PrivateEndpointConnectionForPrivateLinkHubBasic})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapsePrivateLinkHubData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional provisioningState As String = Nothing, Optional privateEndpointConnections As IEnumerable(Of PrivateEndpointConnectionForPrivateLinkHubBasic) = Nothing) As SynapsePrivateLinkHubData" />
      <MemberSignature Language="F#" Value="static member SynapsePrivateLinkHubData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * string * seq&lt;Azure.ResourceManager.Synapse.Models.PrivateEndpointConnectionForPrivateLinkHubBasic&gt; -&gt; Azure.ResourceManager.Synapse.SynapsePrivateLinkHubData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapsePrivateLinkHubData (id, name, resourceType, systemData, tags, location, provisioningState, privateEndpointConnections)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapsePrivateLinkHubData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="privateEndpointConnections" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.PrivateEndpointConnectionForPrivateLinkHubBasic&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="provisioningState"> PrivateLinkHub provisioning state. </param>
        <param name="privateEndpointConnections"> List of private endpoint connections. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateLinkHubData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateLinkHubData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapsePrivateLinkResourceData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapsePrivateLinkResourceData SynapsePrivateLinkResourceData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkResourceProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapsePrivateLinkResourceData SynapsePrivateLinkResourceData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkResourceProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapsePrivateLinkResourceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkResourceProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapsePrivateLinkResourceData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional properties As SynapsePrivateLinkResourceProperties = Nothing) As SynapsePrivateLinkResourceData" />
      <MemberSignature Language="F#" Value="static member SynapsePrivateLinkResourceData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkResourceProperties -&gt; Azure.ResourceManager.Synapse.SynapsePrivateLinkResourceData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapsePrivateLinkResourceData (id, name, resourceType, systemData, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapsePrivateLinkResourceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="properties" Type="Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkResourceProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="properties"> The private link resource properties. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateLinkResourceData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateLinkResourceData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapsePrivateLinkResourceProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkResourceProperties SynapsePrivateLinkResourceProperties (string groupId = default, System.Collections.Generic.IEnumerable&lt;string&gt; requiredMembers = default, System.Collections.Generic.IEnumerable&lt;string&gt; requiredZoneNames = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkResourceProperties SynapsePrivateLinkResourceProperties(string groupId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; requiredMembers, class System.Collections.Generic.IEnumerable`1&lt;string&gt; requiredZoneNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapsePrivateLinkResourceProperties(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapsePrivateLinkResourceProperties (Optional groupId As String = Nothing, Optional requiredMembers As IEnumerable(Of String) = Nothing, Optional requiredZoneNames As IEnumerable(Of String) = Nothing) As SynapsePrivateLinkResourceProperties" />
      <MemberSignature Language="F#" Value="static member SynapsePrivateLinkResourceProperties : string * seq&lt;string&gt; * seq&lt;string&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkResourceProperties" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapsePrivateLinkResourceProperties (groupId, requiredMembers, requiredZoneNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkResourceProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="requiredMembers" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="requiredZoneNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="groupId"> The private link resource group id. </param>
        <param name="requiredMembers"> The private link resource required member names. </param>
        <param name="requiredZoneNames"> Required DNS zone names of the the private link resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkResourceProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkResourceProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapsePrivateLinkServiceConnectionState">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkServiceConnectionState SynapsePrivateLinkServiceConnectionState (string status = default, string description = default, string actionsRequired = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkServiceConnectionState SynapsePrivateLinkServiceConnectionState(string status, string description, string actionsRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapsePrivateLinkServiceConnectionState(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapsePrivateLinkServiceConnectionState (Optional status As String = Nothing, Optional description As String = Nothing, Optional actionsRequired As String = Nothing) As SynapsePrivateLinkServiceConnectionState" />
      <MemberSignature Language="F#" Value="static member SynapsePrivateLinkServiceConnectionState : string * string * string -&gt; Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkServiceConnectionState" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapsePrivateLinkServiceConnectionState (status, description, actionsRequired)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkServiceConnectionState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="actionsRequired" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="status"> The private link service connection status. </param>
        <param name="description"> The private link service connection description. </param>
        <param name="actionsRequired"> The actions required for private link service connection. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkServiceConnectionState" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapsePrivateLinkServiceConnectionState" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseReadOnlyFollowingDatabase">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseReadOnlyFollowingDatabase SynapseReadOnlyFollowingDatabase (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.Synapse.Models.ResourceProvisioningState? provisioningState = default, TimeSpan? softDeletePeriod = default, TimeSpan? hotCachePeriod = default, float? statisticsSize = default, string leaderClusterResourceId = default, string attachedDatabaseConfigurationName = default, Azure.ResourceManager.Synapse.Models.SynapsePrincipalsModificationKind? principalsModificationKind = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseReadOnlyFollowingDatabase SynapseReadOnlyFollowingDatabase(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt; provisioningState, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; softDeletePeriod, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; hotCachePeriod, valuetype System.Nullable`1&lt;float32&gt; statisticsSize, string leaderClusterResourceId, string attachedDatabaseConfigurationName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapsePrincipalsModificationKind&gt; principalsModificationKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseReadOnlyFollowingDatabase(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.Core.AzureLocation},System.Nullable{Azure.ResourceManager.Synapse.Models.ResourceProvisioningState},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.Single},System.String,System.String,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapsePrincipalsModificationKind})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseReadOnlyFollowingDatabase (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional provisioningState As Nullable(Of ResourceProvisioningState) = Nothing, Optional softDeletePeriod As Nullable(Of TimeSpan) = Nothing, Optional hotCachePeriod As Nullable(Of TimeSpan) = Nothing, Optional statisticsSize As Nullable(Of Single) = Nothing, Optional leaderClusterResourceId As String = Nothing, Optional attachedDatabaseConfigurationName As String = Nothing, Optional principalsModificationKind As Nullable(Of SynapsePrincipalsModificationKind) = Nothing) As SynapseReadOnlyFollowingDatabase" />
      <MemberSignature Language="F#" Value="static member SynapseReadOnlyFollowingDatabase : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.Core.AzureLocation&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;single&gt; * string * string * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapsePrincipalsModificationKind&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseReadOnlyFollowingDatabase" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseReadOnlyFollowingDatabase (id, name, resourceType, systemData, location, provisioningState, softDeletePeriod, hotCachePeriod, statisticsSize, leaderClusterResourceId, attachedDatabaseConfigurationName, principalsModificationKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseReadOnlyFollowingDatabase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt;" />
        <Parameter Name="softDeletePeriod" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="hotCachePeriod" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="statisticsSize" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="leaderClusterResourceId" Type="System.String" />
        <Parameter Name="attachedDatabaseConfigurationName" Type="System.String" />
        <Parameter Name="principalsModificationKind" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapsePrincipalsModificationKind&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="location"> Resource location. </param>
        <param name="provisioningState"> The provisioned state of the resource. </param>
        <param name="softDeletePeriod"> The time the data should be kept before it stops being accessible to queries in TimeSpan. </param>
        <param name="hotCachePeriod"> The time the data should be kept in cache for fast queries in TimeSpan. </param>
        <param name="statisticsSize"> The statistics of the database. </param>
        <param name="leaderClusterResourceId"> The name of the leader cluster. </param>
        <param name="attachedDatabaseConfigurationName"> The name of the attached database configuration cluster. </param>
        <param name="principalsModificationKind"> The principals modification kind of the database. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseReadOnlyFollowingDatabase" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseReadOnlyFollowingDatabase" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseReadWriteDatabase">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseReadWriteDatabase SynapseReadWriteDatabase (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.Synapse.Models.ResourceProvisioningState? provisioningState = default, TimeSpan? softDeletePeriod = default, TimeSpan? hotCachePeriod = default, float? statisticsSize = default, bool? isFollowed = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseReadWriteDatabase SynapseReadWriteDatabase(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt; provisioningState, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; softDeletePeriod, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; hotCachePeriod, valuetype System.Nullable`1&lt;float32&gt; statisticsSize, valuetype System.Nullable`1&lt;bool&gt; isFollowed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseReadWriteDatabase(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.Core.AzureLocation},System.Nullable{Azure.ResourceManager.Synapse.Models.ResourceProvisioningState},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.Single},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseReadWriteDatabase (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional provisioningState As Nullable(Of ResourceProvisioningState) = Nothing, Optional softDeletePeriod As Nullable(Of TimeSpan) = Nothing, Optional hotCachePeriod As Nullable(Of TimeSpan) = Nothing, Optional statisticsSize As Nullable(Of Single) = Nothing, Optional isFollowed As Nullable(Of Boolean) = Nothing) As SynapseReadWriteDatabase" />
      <MemberSignature Language="F#" Value="static member SynapseReadWriteDatabase : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.Core.AzureLocation&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;single&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseReadWriteDatabase" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseReadWriteDatabase (id, name, resourceType, systemData, location, provisioningState, softDeletePeriod, hotCachePeriod, statisticsSize, isFollowed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseReadWriteDatabase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.ResourceProvisioningState&gt;" />
        <Parameter Name="softDeletePeriod" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="hotCachePeriod" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="statisticsSize" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="isFollowed" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="location"> Resource location. </param>
        <param name="provisioningState"> The provisioned state of the resource. </param>
        <param name="softDeletePeriod"> The time the data should be kept before it stops being accessible to queries in TimeSpan. </param>
        <param name="hotCachePeriod"> The time the data should be kept in cache for fast queries in TimeSpan. </param>
        <param name="statisticsSize"> The statistics of the database. </param>
        <param name="isFollowed"> Indicates whether the database is followed. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseReadWriteDatabase" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseReadWriteDatabase" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseRecommendedSensitivityLabelUpdate">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseRecommendedSensitivityLabelUpdate SynapseRecommendedSensitivityLabelUpdate (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Synapse.Models.SynapseRecommendedSensitivityLabelUpdateKind? op = default, string schema = default, string table = default, string column = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseRecommendedSensitivityLabelUpdate SynapseRecommendedSensitivityLabelUpdate(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseRecommendedSensitivityLabelUpdateKind&gt; op, string schema, string table, string column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseRecommendedSensitivityLabelUpdate(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseRecommendedSensitivityLabelUpdateKind},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseRecommendedSensitivityLabelUpdate (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional op As Nullable(Of SynapseRecommendedSensitivityLabelUpdateKind) = Nothing, Optional schema As String = Nothing, Optional table As String = Nothing, Optional column As String = Nothing) As SynapseRecommendedSensitivityLabelUpdate" />
      <MemberSignature Language="F#" Value="static member SynapseRecommendedSensitivityLabelUpdate : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseRecommendedSensitivityLabelUpdateKind&gt; * string * string * string -&gt; Azure.ResourceManager.Synapse.Models.SynapseRecommendedSensitivityLabelUpdate" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseRecommendedSensitivityLabelUpdate (id, name, resourceType, systemData, op, schema, table, column)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseRecommendedSensitivityLabelUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="op" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseRecommendedSensitivityLabelUpdateKind&gt;" />
        <Parameter Name="schema" Type="System.String" />
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="column" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="op" />
        <param name="schema"> Schema name of the column to update. </param>
        <param name="table"> Table name of the column to update. </param>
        <param name="column"> Column name to update. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseRecommendedSensitivityLabelUpdate" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseRecommendedSensitivityLabelUpdate" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseRecoverableSqlPoolData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolData SynapseRecoverableSqlPoolData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string edition = default, string serviceLevelObjective = default, string elasticPoolName = default, DateTimeOffset? lastAvailableBackupOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolData SynapseRecoverableSqlPoolData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string edition, string serviceLevelObjective, string elasticPoolName, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastAvailableBackupOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseRecoverableSqlPoolData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseRecoverableSqlPoolData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional edition As String = Nothing, Optional serviceLevelObjective As String = Nothing, Optional elasticPoolName As String = Nothing, Optional lastAvailableBackupOn As Nullable(Of DateTimeOffset) = Nothing) As SynapseRecoverableSqlPoolData" />
      <MemberSignature Language="F#" Value="static member SynapseRecoverableSqlPoolData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string * string * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseRecoverableSqlPoolData (id, name, resourceType, systemData, edition, serviceLevelObjective, elasticPoolName, lastAvailableBackupOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="edition" Type="System.String" />
        <Parameter Name="serviceLevelObjective" Type="System.String" />
        <Parameter Name="elasticPoolName" Type="System.String" />
        <Parameter Name="lastAvailableBackupOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="edition"> The edition of the database. </param>
        <param name="serviceLevelObjective"> The service level objective name of the database. </param>
        <param name="elasticPoolName"> The elastic pool name of the database. </param>
        <param name="lastAvailableBackupOn"> The last available backup date of the database (ISO8601 format). </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseReplicationLinkData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseReplicationLinkData SynapseReplicationLinkData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.AzureLocation? location = default, bool? isTerminationAllowed = default, string replicationMode = default, string partnerServer = default, string partnerDatabase = default, Azure.Core.AzureLocation? partnerLocation = default, Azure.ResourceManager.Synapse.Models.SynapseReplicationRole? role = default, Azure.ResourceManager.Synapse.Models.SynapseReplicationRole? partnerRole = default, DateTimeOffset? startOn = default, int? percentComplete = default, Azure.ResourceManager.Synapse.Models.SynapseReplicationState? replicationState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseReplicationLinkData SynapseReplicationLinkData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, valuetype System.Nullable`1&lt;bool&gt; isTerminationAllowed, string replicationMode, string partnerServer, string partnerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; partnerLocation, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseReplicationRole&gt; role, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseReplicationRole&gt; partnerRole, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startOn, valuetype System.Nullable`1&lt;int32&gt; percentComplete, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseReplicationState&gt; replicationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseReplicationLinkData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.Core.AzureLocation},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{Azure.Core.AzureLocation},System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseReplicationRole},System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseReplicationRole},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseReplicationState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseReplicationLinkData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional isTerminationAllowed As Nullable(Of Boolean) = Nothing, Optional replicationMode As String = Nothing, Optional partnerServer As String = Nothing, Optional partnerDatabase As String = Nothing, Optional partnerLocation As Nullable(Of AzureLocation) = Nothing, Optional role As Nullable(Of SynapseReplicationRole) = Nothing, Optional partnerRole As Nullable(Of SynapseReplicationRole) = Nothing, Optional startOn As Nullable(Of DateTimeOffset) = Nothing, Optional percentComplete As Nullable(Of Integer) = Nothing, Optional replicationState As Nullable(Of SynapseReplicationState) = Nothing) As SynapseReplicationLinkData" />
      <MemberSignature Language="F#" Value="static member SynapseReplicationLinkData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.Core.AzureLocation&gt; * Nullable&lt;bool&gt; * string * string * string * Nullable&lt;Azure.Core.AzureLocation&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseReplicationRole&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseReplicationRole&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseReplicationState&gt; -&gt; Azure.ResourceManager.Synapse.SynapseReplicationLinkData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseReplicationLinkData (id, name, resourceType, systemData, location, isTerminationAllowed, replicationMode, partnerServer, partnerDatabase, partnerLocation, role, partnerRole, startOn, percentComplete, replicationState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseReplicationLinkData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="isTerminationAllowed" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="replicationMode" Type="System.String" />
        <Parameter Name="partnerServer" Type="System.String" />
        <Parameter Name="partnerDatabase" Type="System.String" />
        <Parameter Name="partnerLocation" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="role" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseReplicationRole&gt;" />
        <Parameter Name="partnerRole" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseReplicationRole&gt;" />
        <Parameter Name="startOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="percentComplete" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="replicationState" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseReplicationState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="location"> Location of the workspace that contains this firewall rule. </param>
        <param name="isTerminationAllowed"> Legacy value indicating whether termination is allowed.  Currently always returns true. </param>
        <param name="replicationMode"> Replication mode of this replication link. </param>
        <param name="partnerServer"> The name of the workspace hosting the partner Sql pool. </param>
        <param name="partnerDatabase"> The name of the partner Sql pool. </param>
        <param name="partnerLocation"> The Azure Region of the partner Sql pool. </param>
        <param name="role"> The role of the Sql pool in the replication link. </param>
        <param name="partnerRole"> The role of the partner Sql pool in the replication link. </param>
        <param name="startOn"> The start time for the replication link. </param>
        <param name="percentComplete"> The percentage of seeding complete for the replication link. </param>
        <param name="replicationState"> The replication state for the replication link. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseReplicationLinkData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseReplicationLinkData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseRestorableDroppedSqlPoolData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolData SynapseRestorableDroppedSqlPoolData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.AzureLocation? location = default, string databaseName = default, string edition = default, string maxSizeBytes = default, string serviceLevelObjective = default, string elasticPoolName = default, DateTimeOffset? createdOn = default, DateTimeOffset? deletedOn = default, DateTimeOffset? earliestRestoreOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolData SynapseRestorableDroppedSqlPoolData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, string databaseName, string edition, string maxSizeBytes, string serviceLevelObjective, string elasticPoolName, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; deletedOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; earliestRestoreOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseRestorableDroppedSqlPoolData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.Core.AzureLocation},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseRestorableDroppedSqlPoolData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional databaseName As String = Nothing, Optional edition As String = Nothing, Optional maxSizeBytes As String = Nothing, Optional serviceLevelObjective As String = Nothing, Optional elasticPoolName As String = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional deletedOn As Nullable(Of DateTimeOffset) = Nothing, Optional earliestRestoreOn As Nullable(Of DateTimeOffset) = Nothing) As SynapseRestorableDroppedSqlPoolData" />
      <MemberSignature Language="F#" Value="static member SynapseRestorableDroppedSqlPoolData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.Core.AzureLocation&gt; * string * string * string * string * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseRestorableDroppedSqlPoolData (id, name, resourceType, systemData, location, databaseName, edition, maxSizeBytes, serviceLevelObjective, elasticPoolName, createdOn, deletedOn, earliestRestoreOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="edition" Type="System.String" />
        <Parameter Name="maxSizeBytes" Type="System.String" />
        <Parameter Name="serviceLevelObjective" Type="System.String" />
        <Parameter Name="elasticPoolName" Type="System.String" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="deletedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="earliestRestoreOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="location"> The geo-location where the resource lives. </param>
        <param name="databaseName"> The name of the database. </param>
        <param name="edition"> The edition of the database. </param>
        <param name="maxSizeBytes"> The max size in bytes of the database. </param>
        <param name="serviceLevelObjective"> The service level objective name of the database. </param>
        <param name="elasticPoolName"> The elastic pool name of the database. </param>
        <param name="createdOn"> The creation date of the database (ISO8601 format). </param>
        <param name="deletedOn"> The deletion date of the database (ISO8601 format). </param>
        <param name="earliestRestoreOn"> The earliest restore date of the database (ISO8601 format). </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseRestorePointData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseRestorePointData SynapseRestorePointData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.Synapse.Models.SynapseRestorePointType? restorePointType = default, DateTimeOffset? earliestRestoreOn = default, DateTimeOffset? restorePointCreationOn = default, string restorePointLabel = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseRestorePointData SynapseRestorePointData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseRestorePointType&gt; restorePointType, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; earliestRestoreOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; restorePointCreationOn, string restorePointLabel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseRestorePointData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.Core.AzureLocation},System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseRestorePointType},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseRestorePointData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional restorePointType As Nullable(Of SynapseRestorePointType) = Nothing, Optional earliestRestoreOn As Nullable(Of DateTimeOffset) = Nothing, Optional restorePointCreationOn As Nullable(Of DateTimeOffset) = Nothing, Optional restorePointLabel As String = Nothing) As SynapseRestorePointData" />
      <MemberSignature Language="F#" Value="static member SynapseRestorePointData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.Core.AzureLocation&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseRestorePointType&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * string -&gt; Azure.ResourceManager.Synapse.SynapseRestorePointData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseRestorePointData (id, name, resourceType, systemData, location, restorePointType, earliestRestoreOn, restorePointCreationOn, restorePointLabel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseRestorePointData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="restorePointType" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseRestorePointType&gt;" />
        <Parameter Name="earliestRestoreOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="restorePointCreationOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="restorePointLabel" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="location"> Resource location. </param>
        <param name="restorePointType"> The type of restore point. </param>
        <param name="earliestRestoreOn"> The earliest time to which this database can be restored. </param>
        <param name="restorePointCreationOn"> The time the backup was taken. </param>
        <param name="restorePointLabel"> The label of restore point for backup request by user. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseRestorePointData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseRestorePointData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseSelfHostedIntegrationRuntimeNode">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseSelfHostedIntegrationRuntimeNode SynapseSelfHostedIntegrationRuntimeNode (string nodeName = default, string machineName = default, Uri hostServiceUri = default, Azure.ResourceManager.Synapse.Models.SynapseSelfHostedIntegrationRuntimeNodeStatus? status = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; capabilities = default, string versionStatus = default, string version = default, DateTimeOffset? registerOn = default, DateTimeOffset? lastConnectedOn = default, DateTimeOffset? expireOn = default, DateTimeOffset? lastStartedOn = default, DateTimeOffset? lastStopOn = default, Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeUpdateResult? lastUpdateResult = default, DateTimeOffset? lastStartUpdateOn = default, DateTimeOffset? lastEndUpdateOn = default, bool? isActiveDispatcher = default, int? concurrentJobsLimit = default, int? maxConcurrentJobs = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,BinaryData&gt; additionalProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseSelfHostedIntegrationRuntimeNode SynapseSelfHostedIntegrationRuntimeNode(string nodeName, string machineName, class System.Uri hostServiceUri, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseSelfHostedIntegrationRuntimeNodeStatus&gt; status, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; capabilities, string versionStatus, string version, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; registerOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastConnectedOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; expireOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastStartedOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastStopOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeUpdateResult&gt; lastUpdateResult, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastStartUpdateOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastEndUpdateOn, valuetype System.Nullable`1&lt;bool&gt; isActiveDispatcher, valuetype System.Nullable`1&lt;int32&gt; concurrentJobsLimit, valuetype System.Nullable`1&lt;int32&gt; maxConcurrentJobs, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class System.BinaryData&gt; additionalProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSelfHostedIntegrationRuntimeNode(System.String,System.String,System.Uri,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseSelfHostedIntegrationRuntimeNodeStatus},System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeUpdateResult},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IReadOnlyDictionary{System.String,System.BinaryData})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseSelfHostedIntegrationRuntimeNode (Optional nodeName As String = Nothing, Optional machineName As String = Nothing, Optional hostServiceUri As Uri = Nothing, Optional status As Nullable(Of SynapseSelfHostedIntegrationRuntimeNodeStatus) = Nothing, Optional capabilities As IReadOnlyDictionary(Of String, String) = Nothing, Optional versionStatus As String = Nothing, Optional version As String = Nothing, Optional registerOn As Nullable(Of DateTimeOffset) = Nothing, Optional lastConnectedOn As Nullable(Of DateTimeOffset) = Nothing, Optional expireOn As Nullable(Of DateTimeOffset) = Nothing, Optional lastStartedOn As Nullable(Of DateTimeOffset) = Nothing, Optional lastStopOn As Nullable(Of DateTimeOffset) = Nothing, Optional lastUpdateResult As Nullable(Of SynapseIntegrationRuntimeUpdateResult) = Nothing, Optional lastStartUpdateOn As Nullable(Of DateTimeOffset) = Nothing, Optional lastEndUpdateOn As Nullable(Of DateTimeOffset) = Nothing, Optional isActiveDispatcher As Nullable(Of Boolean) = Nothing, Optional concurrentJobsLimit As Nullable(Of Integer) = Nothing, Optional maxConcurrentJobs As Nullable(Of Integer) = Nothing, Optional additionalProperties As IReadOnlyDictionary(Of String, BinaryData) = Nothing) As SynapseSelfHostedIntegrationRuntimeNode" />
      <MemberSignature Language="F#" Value="static member SynapseSelfHostedIntegrationRuntimeNode : string * string * Uri * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseSelfHostedIntegrationRuntimeNodeStatus&gt; * System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; * string * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeUpdateResult&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Collections.Generic.IReadOnlyDictionary&lt;string, BinaryData&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseSelfHostedIntegrationRuntimeNode" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSelfHostedIntegrationRuntimeNode (nodeName, machineName, hostServiceUri, status, capabilities, versionStatus, version, registerOn, lastConnectedOn, expireOn, lastStartedOn, lastStopOn, lastUpdateResult, lastStartUpdateOn, lastEndUpdateOn, isActiveDispatcher, concurrentJobsLimit, maxConcurrentJobs, additionalProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseSelfHostedIntegrationRuntimeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
        <Parameter Name="hostServiceUri" Type="System.Uri" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseSelfHostedIntegrationRuntimeNodeStatus&gt;" />
        <Parameter Name="capabilities" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="versionStatus" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="registerOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="lastConnectedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="expireOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="lastStartedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="lastStopOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="lastUpdateResult" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeUpdateResult&gt;" />
        <Parameter Name="lastStartUpdateOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="lastEndUpdateOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="isActiveDispatcher" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="concurrentJobsLimit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="maxConcurrentJobs" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="additionalProperties" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.BinaryData&gt;" />
      </Parameters>
      <Docs>
        <param name="nodeName"> Name of the integration runtime node. </param>
        <param name="machineName"> Machine name of the integration runtime node. </param>
        <param name="hostServiceUri"> URI for the host machine of the integration runtime. </param>
        <param name="status"> Status of the integration runtime node. </param>
        <param name="capabilities"> The integration runtime capabilities dictionary. </param>
        <param name="versionStatus"> Status of the integration runtime node version. </param>
        <param name="version"> Version of the integration runtime node. </param>
        <param name="registerOn"> The time at which the integration runtime node was registered in ISO8601 format. </param>
        <param name="lastConnectedOn"> The most recent time at which the integration runtime was connected in ISO8601 format. </param>
        <param name="expireOn"> The time at which the integration runtime will expire in ISO8601 format. </param>
        <param name="lastStartedOn"> The time the node last started up. </param>
        <param name="lastStopOn"> The integration runtime node last stop time. </param>
        <param name="lastUpdateResult"> The result of the last integration runtime node update. </param>
        <param name="lastStartUpdateOn"> The last time for the integration runtime node update start. </param>
        <param name="lastEndUpdateOn"> The last time for the integration runtime node update end. </param>
        <param name="isActiveDispatcher"> Indicates whether this node is the active dispatcher for integration runtime requests. </param>
        <param name="concurrentJobsLimit"> Maximum concurrent jobs on the integration runtime node. </param>
        <param name="maxConcurrentJobs"> The maximum concurrent jobs in this integration runtime. </param>
        <param name="additionalProperties"> Additional Properties. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSelfHostedIntegrationRuntimeNode" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSelfHostedIntegrationRuntimeNode" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseSelfHostedIntegrationRuntimeStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseSelfHostedIntegrationRuntimeStatus SynapseSelfHostedIntegrationRuntimeStatus (string dataFactoryName = default, Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeState? state = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,BinaryData&gt; additionalProperties = default, DateTimeOffset? createOn = default, string taskQueueId = default, string nodeCommunicationChannelEncryptionMode = default, Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeInternalChannelEncryptionMode? internalChannelEncryption = default, string version = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseSelfHostedIntegrationRuntimeNode&gt; nodes = default, DateTimeOffset? scheduledUpdateOn = default, string updateDelayOffset = default, string localTimeZoneOffset = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; capabilities = default, System.Collections.Generic.IEnumerable&lt;string&gt; serviceUrls = default, Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeAutoUpdate? autoUpdate = default, string versionStatus = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseLinkedIntegrationRuntime&gt; links = default, string pushedVersion = default, string latestVersion = default, DateTimeOffset? autoUpdateEta = default, string serviceRegion = default, System.Collections.Generic.IEnumerable&lt;string&gt; newerVersions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseSelfHostedIntegrationRuntimeStatus SynapseSelfHostedIntegrationRuntimeStatus(string dataFactoryName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeState&gt; state, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class System.BinaryData&gt; additionalProperties, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createOn, string taskQueueId, string nodeCommunicationChannelEncryptionMode, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeInternalChannelEncryptionMode&gt; internalChannelEncryption, string version, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Synapse.Models.SynapseSelfHostedIntegrationRuntimeNode&gt; nodes, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; scheduledUpdateOn, string updateDelayOffset, string localTimeZoneOffset, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; capabilities, class System.Collections.Generic.IEnumerable`1&lt;string&gt; serviceUrls, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeAutoUpdate&gt; autoUpdate, string versionStatus, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Synapse.Models.SynapseLinkedIntegrationRuntime&gt; links, string pushedVersion, string latestVersion, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; autoUpdateEta, string serviceRegion, class System.Collections.Generic.IEnumerable`1&lt;string&gt; newerVersions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSelfHostedIntegrationRuntimeStatus(System.String,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeState},System.Collections.Generic.IReadOnlyDictionary{System.String,System.BinaryData},System.Nullable{System.DateTimeOffset},System.String,System.String,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeInternalChannelEncryptionMode},System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Synapse.Models.SynapseSelfHostedIntegrationRuntimeNode},System.Nullable{System.DateTimeOffset},System.String,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeAutoUpdate},System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Synapse.Models.SynapseLinkedIntegrationRuntime},System.String,System.String,System.Nullable{System.DateTimeOffset},System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseSelfHostedIntegrationRuntimeStatus (Optional dataFactoryName As String = Nothing, Optional state As Nullable(Of SynapseIntegrationRuntimeState) = Nothing, Optional additionalProperties As IReadOnlyDictionary(Of String, BinaryData) = Nothing, Optional createOn As Nullable(Of DateTimeOffset) = Nothing, Optional taskQueueId As String = Nothing, Optional nodeCommunicationChannelEncryptionMode As String = Nothing, Optional internalChannelEncryption As Nullable(Of SynapseIntegrationRuntimeInternalChannelEncryptionMode) = Nothing, Optional version As String = Nothing, Optional nodes As IEnumerable(Of SynapseSelfHostedIntegrationRuntimeNode) = Nothing, Optional scheduledUpdateOn As Nullable(Of DateTimeOffset) = Nothing, Optional updateDelayOffset As String = Nothing, Optional localTimeZoneOffset As String = Nothing, Optional capabilities As IReadOnlyDictionary(Of String, String) = Nothing, Optional serviceUrls As IEnumerable(Of String) = Nothing, Optional autoUpdate As Nullable(Of SynapseIntegrationRuntimeAutoUpdate) = Nothing, Optional versionStatus As String = Nothing, Optional links As IEnumerable(Of SynapseLinkedIntegrationRuntime) = Nothing, Optional pushedVersion As String = Nothing, Optional latestVersion As String = Nothing, Optional autoUpdateEta As Nullable(Of DateTimeOffset) = Nothing, Optional serviceRegion As String = Nothing, Optional newerVersions As IEnumerable(Of String) = Nothing) As SynapseSelfHostedIntegrationRuntimeStatus" />
      <MemberSignature Language="F#" Value="static member SynapseSelfHostedIntegrationRuntimeStatus : string * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeState&gt; * System.Collections.Generic.IReadOnlyDictionary&lt;string, BinaryData&gt; * Nullable&lt;DateTimeOffset&gt; * string * string * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeInternalChannelEncryptionMode&gt; * string * seq&lt;Azure.ResourceManager.Synapse.Models.SynapseSelfHostedIntegrationRuntimeNode&gt; * Nullable&lt;DateTimeOffset&gt; * string * string * System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; * seq&lt;string&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeAutoUpdate&gt; * string * seq&lt;Azure.ResourceManager.Synapse.Models.SynapseLinkedIntegrationRuntime&gt; * string * string * Nullable&lt;DateTimeOffset&gt; * string * seq&lt;string&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseSelfHostedIntegrationRuntimeStatus" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSelfHostedIntegrationRuntimeStatus (dataFactoryName, state, additionalProperties, createOn, taskQueueId, nodeCommunicationChannelEncryptionMode, internalChannelEncryption, version, nodes, scheduledUpdateOn, updateDelayOffset, localTimeZoneOffset, capabilities, serviceUrls, autoUpdate, versionStatus, links, pushedVersion, latestVersion, autoUpdateEta, serviceRegion, newerVersions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseSelfHostedIntegrationRuntimeStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataFactoryName" Type="System.String" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeState&gt;" />
        <Parameter Name="additionalProperties" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.BinaryData&gt;" />
        <Parameter Name="createOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="taskQueueId" Type="System.String" />
        <Parameter Name="nodeCommunicationChannelEncryptionMode" Type="System.String" />
        <Parameter Name="internalChannelEncryption" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeInternalChannelEncryptionMode&gt;" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="nodes" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseSelfHostedIntegrationRuntimeNode&gt;" />
        <Parameter Name="scheduledUpdateOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="updateDelayOffset" Type="System.String" />
        <Parameter Name="localTimeZoneOffset" Type="System.String" />
        <Parameter Name="capabilities" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="serviceUrls" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="autoUpdate" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseIntegrationRuntimeAutoUpdate&gt;" />
        <Parameter Name="versionStatus" Type="System.String" />
        <Parameter Name="links" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseLinkedIntegrationRuntime&gt;" />
        <Parameter Name="pushedVersion" Type="System.String" />
        <Parameter Name="latestVersion" Type="System.String" />
        <Parameter Name="autoUpdateEta" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="serviceRegion" Type="System.String" />
        <Parameter Name="newerVersions" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="dataFactoryName"> The workspace name which the integration runtime belong to. </param>
        <param name="state"> The state of integration runtime. </param>
        <param name="additionalProperties"> Additional Properties. </param>
        <param name="createOn"> The time at which the integration runtime was created, in ISO8601 format. </param>
        <param name="taskQueueId"> The task queue id of the integration runtime. </param>
        <param name="nodeCommunicationChannelEncryptionMode"> The node communication Channel encryption mode. </param>
        <param name="internalChannelEncryption"> It is used to set the encryption mode for node-node communication channel (when more than 2 self-hosted integration runtime nodes exist). </param>
        <param name="version"> Version of the integration runtime. </param>
        <param name="nodes"> The list of nodes for this integration runtime. </param>
        <param name="scheduledUpdateOn"> The date at which the integration runtime will be scheduled to update, in ISO8601 format. </param>
        <param name="updateDelayOffset"> The time in the date scheduled by service to update the integration runtime, e.g., PT03H is 3 hours. </param>
        <param name="localTimeZoneOffset"> The local time zone offset in hours. </param>
        <param name="capabilities"> Object with additional information about integration runtime capabilities. </param>
        <param name="serviceUrls"> The URLs for the services used in integration runtime backend service. </param>
        <param name="autoUpdate"> Whether Self-hosted integration runtime auto update has been turned on. </param>
        <param name="versionStatus"> Status of the integration runtime version. </param>
        <param name="links"> The list of linked integration runtimes that are created to share with this integration runtime. </param>
        <param name="pushedVersion"> The version that the integration runtime is going to update to. </param>
        <param name="latestVersion"> The latest version on download center. </param>
        <param name="autoUpdateEta"> The estimated time when the self-hosted integration runtime will be updated. </param>
        <param name="serviceRegion"> The service region of the integration runtime. </param>
        <param name="newerVersions"> The newer versions on download center. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSelfHostedIntegrationRuntimeStatus" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSelfHostedIntegrationRuntimeStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseSensitivityLabelData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseSensitivityLabelData SynapseSensitivityLabelData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string managedBy = default, string schemaName = default, string tableName = default, string columnName = default, string labelName = default, Guid? labelId = default, string informationType = default, Guid? informationTypeId = default, bool? isDisabled = default, Azure.ResourceManager.Synapse.Models.SynapseSensitivityLabelRank? rank = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseSensitivityLabelData SynapseSensitivityLabelData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string managedBy, string schemaName, string tableName, string columnName, string labelName, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; labelId, string informationType, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; informationTypeId, valuetype System.Nullable`1&lt;bool&gt; isDisabled, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseSensitivityLabelRank&gt; rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSensitivityLabelData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Guid},System.String,System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseSensitivityLabelRank})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseSensitivityLabelData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional managedBy As String = Nothing, Optional schemaName As String = Nothing, Optional tableName As String = Nothing, Optional columnName As String = Nothing, Optional labelName As String = Nothing, Optional labelId As Nullable(Of Guid) = Nothing, Optional informationType As String = Nothing, Optional informationTypeId As Nullable(Of Guid) = Nothing, Optional isDisabled As Nullable(Of Boolean) = Nothing, Optional rank As Nullable(Of SynapseSensitivityLabelRank) = Nothing) As SynapseSensitivityLabelData" />
      <MemberSignature Language="F#" Value="static member SynapseSensitivityLabelData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string * string * string * string * Nullable&lt;Guid&gt; * string * Nullable&lt;Guid&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseSensitivityLabelRank&gt; -&gt; Azure.ResourceManager.Synapse.SynapseSensitivityLabelData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSensitivityLabelData (id, name, resourceType, systemData, managedBy, schemaName, tableName, columnName, labelName, labelId, informationType, informationTypeId, isDisabled, rank)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseSensitivityLabelData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="managedBy" Type="System.String" />
        <Parameter Name="schemaName" Type="System.String" />
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="labelName" Type="System.String" />
        <Parameter Name="labelId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="informationType" Type="System.String" />
        <Parameter Name="informationTypeId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="isDisabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="rank" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseSensitivityLabelRank&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="managedBy"> managed by. </param>
        <param name="schemaName"> The schema name. </param>
        <param name="tableName"> The table name. </param>
        <param name="columnName"> The column name. </param>
        <param name="labelName"> The label name. </param>
        <param name="labelId"> The label ID. </param>
        <param name="informationType"> The information type. </param>
        <param name="informationTypeId"> The information type ID. </param>
        <param name="isDisabled"> Is sensitivity recommendation disabled. Applicable for recommended sensitivity label only. Specifies whether the sensitivity recommendation on this column is disabled (dismissed) or not. </param>
        <param name="rank" />
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseSensitivityLabelData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseSensitivityLabelData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseSensitivityLabelUpdate">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseSensitivityLabelUpdate SynapseSensitivityLabelUpdate (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Synapse.Models.SynapseSensitivityLabelUpdateKind? op = default, string schema = default, string table = default, string column = default, Azure.ResourceManager.Synapse.SynapseSensitivityLabelData sensitivityLabel = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseSensitivityLabelUpdate SynapseSensitivityLabelUpdate(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseSensitivityLabelUpdateKind&gt; op, string schema, string table, string column, class Azure.ResourceManager.Synapse.SynapseSensitivityLabelData sensitivityLabel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSensitivityLabelUpdate(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseSensitivityLabelUpdateKind},System.String,System.String,System.String,Azure.ResourceManager.Synapse.SynapseSensitivityLabelData)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseSensitivityLabelUpdate (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional op As Nullable(Of SynapseSensitivityLabelUpdateKind) = Nothing, Optional schema As String = Nothing, Optional table As String = Nothing, Optional column As String = Nothing, Optional sensitivityLabel As SynapseSensitivityLabelData = Nothing) As SynapseSensitivityLabelUpdate" />
      <MemberSignature Language="F#" Value="static member SynapseSensitivityLabelUpdate : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseSensitivityLabelUpdateKind&gt; * string * string * string * Azure.ResourceManager.Synapse.SynapseSensitivityLabelData -&gt; Azure.ResourceManager.Synapse.Models.SynapseSensitivityLabelUpdate" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSensitivityLabelUpdate (id, name, resourceType, systemData, op, schema, table, column, sensitivityLabel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseSensitivityLabelUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="op" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseSensitivityLabelUpdateKind&gt;" />
        <Parameter Name="schema" Type="System.String" />
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="column" Type="System.String" />
        <Parameter Name="sensitivityLabel" Type="Azure.ResourceManager.Synapse.SynapseSensitivityLabelData" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="op" />
        <param name="schema"> Schema name of the column to update. </param>
        <param name="table"> Table name of the column to update. </param>
        <param name="column"> Column name to update. </param>
        <param name="sensitivityLabel"> The sensitivity label information to apply on a column. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSensitivityLabelUpdate" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSensitivityLabelUpdate" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseServerBlobAuditingPolicyData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData SynapseServerBlobAuditingPolicyData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyState? state = default, string storageEndpoint = default, string storageAccountAccessKey = default, int? retentionDays = default, System.Collections.Generic.IEnumerable&lt;string&gt; auditActionsAndGroups = default, Guid? storageAccountSubscriptionId = default, bool? isStorageSecondaryKeyInUse = default, bool? isAzureMonitorTargetEnabled = default, int? queueDelayMs = default, bool? isDevopsAuditEnabled = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData SynapseServerBlobAuditingPolicyData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyState&gt; state, string storageEndpoint, string storageAccountAccessKey, valuetype System.Nullable`1&lt;int32&gt; retentionDays, class System.Collections.Generic.IEnumerable`1&lt;string&gt; auditActionsAndGroups, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; storageAccountSubscriptionId, valuetype System.Nullable`1&lt;bool&gt; isStorageSecondaryKeyInUse, valuetype System.Nullable`1&lt;bool&gt; isAzureMonitorTargetEnabled, valuetype System.Nullable`1&lt;int32&gt; queueDelayMs, valuetype System.Nullable`1&lt;bool&gt; isDevopsAuditEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseServerBlobAuditingPolicyData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyState},System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseServerBlobAuditingPolicyData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional state As Nullable(Of SynapseBlobAuditingPolicyState) = Nothing, Optional storageEndpoint As String = Nothing, Optional storageAccountAccessKey As String = Nothing, Optional retentionDays As Nullable(Of Integer) = Nothing, Optional auditActionsAndGroups As IEnumerable(Of String) = Nothing, Optional storageAccountSubscriptionId As Nullable(Of Guid) = Nothing, Optional isStorageSecondaryKeyInUse As Nullable(Of Boolean) = Nothing, Optional isAzureMonitorTargetEnabled As Nullable(Of Boolean) = Nothing, Optional queueDelayMs As Nullable(Of Integer) = Nothing, Optional isDevopsAuditEnabled As Nullable(Of Boolean) = Nothing) As SynapseServerBlobAuditingPolicyData" />
      <MemberSignature Language="F#" Value="static member SynapseServerBlobAuditingPolicyData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyState&gt; * string * string * Nullable&lt;int&gt; * seq&lt;string&gt; * Nullable&lt;Guid&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseServerBlobAuditingPolicyData (id, name, resourceType, systemData, state, storageEndpoint, storageAccountAccessKey, retentionDays, auditActionsAndGroups, storageAccountSubscriptionId, isStorageSecondaryKeyInUse, isAzureMonitorTargetEnabled, queueDelayMs, isDevopsAuditEnabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyState&gt;" />
        <Parameter Name="storageEndpoint" Type="System.String" />
        <Parameter Name="storageAccountAccessKey" Type="System.String" />
        <Parameter Name="retentionDays" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="auditActionsAndGroups" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="storageAccountSubscriptionId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="isStorageSecondaryKeyInUse" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isAzureMonitorTargetEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="queueDelayMs" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="isDevopsAuditEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="state"> Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required. </param>
        <param name="storageEndpoint"> Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required. </param>
        <param name="storageAccountAccessKey">
             Specifies the identifier key of the auditing storage account.
             If state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.
             Prerequisites for using managed identity authentication:
             1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).
             2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.
             For more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)
             </param>
        <param name="retentionDays"> Specifies the number of days to keep in the audit logs in the storage account. </param>
        <param name="auditActionsAndGroups">
             Specifies the Actions-Groups and Actions to audit.
            
             The recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:
            
             BATCH_COMPLETED_GROUP,
             SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
             FAILED_DATABASE_AUTHENTICATION_GROUP.
            
             This above combination is also the set that is configured by default when enabling auditing from the Azure portal.
            
             The supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):
            
             APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
             BACKUP_RESTORE_GROUP
             DATABASE_LOGOUT_GROUP
             DATABASE_OBJECT_CHANGE_GROUP
             DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
             DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
             DATABASE_OPERATION_GROUP
             DATABASE_PERMISSION_CHANGE_GROUP
             DATABASE_PRINCIPAL_CHANGE_GROUP
             DATABASE_PRINCIPAL_IMPERSONATION_GROUP
             DATABASE_ROLE_MEMBER_CHANGE_GROUP
             FAILED_DATABASE_AUTHENTICATION_GROUP
             SCHEMA_OBJECT_ACCESS_GROUP
             SCHEMA_OBJECT_CHANGE_GROUP
             SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
             SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
             SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
             USER_CHANGE_PASSWORD_GROUP
             BATCH_STARTED_GROUP
             BATCH_COMPLETED_GROUP
            
             These are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.
            
             For more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
            
             For Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:
             SELECT
             UPDATE
             INSERT
             DELETE
             EXECUTE
             RECEIVE
             REFERENCES
            
             The general form for defining an action to be audited is:
             {action} ON {object} BY {principal}
            
             Note that &lt;object&gt; in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.
            
             For example:
             SELECT on dbo.myTable by public
             SELECT on DATABASE::myDatabase by public
             SELECT on SCHEMA::mySchema by public
            
             For more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
             </param>
        <param name="storageAccountSubscriptionId"> Specifies the blob storage subscription Id. </param>
        <param name="isStorageSecondaryKeyInUse"> Specifies whether storageAccountAccessKey value is the storage's secondary key. </param>
        <param name="isAzureMonitorTargetEnabled">
             Specifies whether audit events are sent to Azure Monitor.
             In order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.
            
             When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.
             Note that for server level audit you should use the 'master' database as {databaseName}.
            
             Diagnostic Settings URI format:
             PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
            
             For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)
             or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
            
             </param>
        <param name="queueDelayMs">
             Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.
             The default minimum value is 1000 (1 second). The maximum is 2,147,483,647.
             </param>
        <param name="isDevopsAuditEnabled">
             Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.
             In order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true
            
             When using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.
            
             Diagnostic Settings URI format:
             PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
            
             For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)
             or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
            
             </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseServerSecurityAlertPolicyData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyData SynapseServerSecurityAlertPolicyData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Synapse.Models.SynapseSecurityAlertPolicyState? state = default, System.Collections.Generic.IEnumerable&lt;string&gt; disabledAlerts = default, System.Collections.Generic.IEnumerable&lt;string&gt; emailAddresses = default, bool? enableEmailToAccountAdmins = default, string storageEndpoint = default, string storageAccountAccessKey = default, int? retentionDays = default, DateTimeOffset? createdOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyData SynapseServerSecurityAlertPolicyData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseSecurityAlertPolicyState&gt; state, class System.Collections.Generic.IEnumerable`1&lt;string&gt; disabledAlerts, class System.Collections.Generic.IEnumerable`1&lt;string&gt; emailAddresses, valuetype System.Nullable`1&lt;bool&gt; enableEmailToAccountAdmins, string storageEndpoint, string storageAccountAccessKey, valuetype System.Nullable`1&lt;int32&gt; retentionDays, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseServerSecurityAlertPolicyData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseSecurityAlertPolicyState},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseServerSecurityAlertPolicyData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional state As Nullable(Of SynapseSecurityAlertPolicyState) = Nothing, Optional disabledAlerts As IEnumerable(Of String) = Nothing, Optional emailAddresses As IEnumerable(Of String) = Nothing, Optional enableEmailToAccountAdmins As Nullable(Of Boolean) = Nothing, Optional storageEndpoint As String = Nothing, Optional storageAccountAccessKey As String = Nothing, Optional retentionDays As Nullable(Of Integer) = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing) As SynapseServerSecurityAlertPolicyData" />
      <MemberSignature Language="F#" Value="static member SynapseServerSecurityAlertPolicyData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseSecurityAlertPolicyState&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;bool&gt; * string * string * Nullable&lt;int&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseServerSecurityAlertPolicyData (id, name, resourceType, systemData, state, disabledAlerts, emailAddresses, enableEmailToAccountAdmins, storageEndpoint, storageAccountAccessKey, retentionDays, createdOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseSecurityAlertPolicyState&gt;" />
        <Parameter Name="disabledAlerts" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="emailAddresses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="enableEmailToAccountAdmins" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="storageEndpoint" Type="System.String" />
        <Parameter Name="storageAccountAccessKey" Type="System.String" />
        <Parameter Name="retentionDays" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="state"> Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific server. </param>
        <param name="disabledAlerts"> Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action. </param>
        <param name="emailAddresses"> Specifies an array of e-mail addresses to which the alert is sent. </param>
        <param name="enableEmailToAccountAdmins"> Specifies that the alert is sent to the account administrators. </param>
        <param name="storageEndpoint"> Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs. </param>
        <param name="storageAccountAccessKey"> Specifies the identifier key of the Threat Detection audit storage account. </param>
        <param name="retentionDays"> Specifies the number of days to keep in the Threat Detection audit logs. </param>
        <param name="createdOn"> Specifies the UTC creation time of the policy. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseServerUsage">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseServerUsage SynapseServerUsage (string name = default, string resourceName = default, string displayName = default, double? currentValue = default, double? limit = default, string unit = default, DateTimeOffset? nextResetOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseServerUsage SynapseServerUsage(string name, string resourceName, string displayName, valuetype System.Nullable`1&lt;float64&gt; currentValue, valuetype System.Nullable`1&lt;float64&gt; limit, string unit, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; nextResetOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseServerUsage(System.String,System.String,System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseServerUsage (Optional name As String = Nothing, Optional resourceName As String = Nothing, Optional displayName As String = Nothing, Optional currentValue As Nullable(Of Double) = Nothing, Optional limit As Nullable(Of Double) = Nothing, Optional unit As String = Nothing, Optional nextResetOn As Nullable(Of DateTimeOffset) = Nothing) As SynapseServerUsage" />
      <MemberSignature Language="F#" Value="static member SynapseServerUsage : string * string * string * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseServerUsage" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseServerUsage (name, resourceName, displayName, currentValue, limit, unit, nextResetOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseServerUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="currentValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="unit" Type="System.String" />
        <Parameter Name="nextResetOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the server usage metric. </param>
        <param name="resourceName"> The name of the resource. </param>
        <param name="displayName"> The metric display name. </param>
        <param name="currentValue"> The current value of the metric. </param>
        <param name="limit"> The current limit of the metric. </param>
        <param name="unit"> The units of the metric. </param>
        <param name="nextResetOn"> The next reset time for the metric (ISO8601 format). </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseServerUsage" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseServerUsage" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseServerVulnerabilityAssessmentData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentData SynapseServerVulnerabilityAssessmentData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string storageContainerPath = default, string storageContainerSasKey = default, string storageAccountAccessKey = default, Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentRecurringScansProperties recurringScans = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentData SynapseServerVulnerabilityAssessmentData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string storageContainerPath, string storageContainerSasKey, string storageAccountAccessKey, class Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentRecurringScansProperties recurringScans) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseServerVulnerabilityAssessmentData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentRecurringScansProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseServerVulnerabilityAssessmentData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional storageContainerPath As String = Nothing, Optional storageContainerSasKey As String = Nothing, Optional storageAccountAccessKey As String = Nothing, Optional recurringScans As SynapseVulnerabilityAssessmentRecurringScansProperties = Nothing) As SynapseServerVulnerabilityAssessmentData" />
      <MemberSignature Language="F#" Value="static member SynapseServerVulnerabilityAssessmentData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string * string * Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentRecurringScansProperties -&gt; Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseServerVulnerabilityAssessmentData (id, name, resourceType, systemData, storageContainerPath, storageContainerSasKey, storageAccountAccessKey, recurringScans)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="storageContainerPath" Type="System.String" />
        <Parameter Name="storageContainerSasKey" Type="System.String" />
        <Parameter Name="storageAccountAccessKey" Type="System.String" />
        <Parameter Name="recurringScans" Type="Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentRecurringScansProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="storageContainerPath"> A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/). </param>
        <param name="storageContainerSasKey"> A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required. </param>
        <param name="storageAccountAccessKey"> Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required. </param>
        <param name="recurringScans"> The recurring scans settings. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseSparkConfigurationData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseSparkConfigurationData SynapseSparkConfigurationData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string description = default, System.Collections.Generic.IDictionary&lt;string,string&gt; configs = default, System.Collections.Generic.IEnumerable&lt;string&gt; annotations = default, string notes = default, string createdBy = default, DateTimeOffset? createdOn = default, System.Collections.Generic.IDictionary&lt;string,string&gt; configMergeRule = default, Azure.ETag? etag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseSparkConfigurationData SynapseSparkConfigurationData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string description, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; configs, class System.Collections.Generic.IEnumerable`1&lt;string&gt; annotations, string notes, string createdBy, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; configMergeRule, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSparkConfigurationData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Nullable{System.DateTimeOffset},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.ETag})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseSparkConfigurationData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional description As String = Nothing, Optional configs As IDictionary(Of String, String) = Nothing, Optional annotations As IEnumerable(Of String) = Nothing, Optional notes As String = Nothing, Optional createdBy As String = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional configMergeRule As IDictionary(Of String, String) = Nothing, Optional etag As Nullable(Of ETag) = Nothing) As SynapseSparkConfigurationData" />
      <MemberSignature Language="F#" Value="static member SynapseSparkConfigurationData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * seq&lt;string&gt; * string * string * Nullable&lt;DateTimeOffset&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.ETag&gt; -&gt; Azure.ResourceManager.Synapse.SynapseSparkConfigurationData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSparkConfigurationData (id, name, resourceType, systemData, description, configs, annotations, notes, createdBy, createdOn, configMergeRule, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseSparkConfigurationData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="configs" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="annotations" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="notes" Type="System.String" />
        <Parameter Name="createdBy" Type="System.String" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="configMergeRule" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="description"> Description about the SparkConfiguration. </param>
        <param name="configs"> SparkConfiguration configs. </param>
        <param name="annotations"> Annotations for SparkConfiguration. </param>
        <param name="notes"> additional Notes. </param>
        <param name="createdBy"> The identity that created the resource. </param>
        <param name="createdOn"> The timestamp of resource creation. </param>
        <param name="configMergeRule"> SparkConfiguration merge configs. </param>
        <param name="etag"> Resource Etag. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseSparkConfigurationData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseSparkConfigurationData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseSqlPoolBlobAuditingPolicyData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseSqlPoolBlobAuditingPolicyData SynapseSqlPoolBlobAuditingPolicyData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string kind = default, Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyState? state = default, string storageEndpoint = default, string storageAccountAccessKey = default, int? retentionDays = default, System.Collections.Generic.IEnumerable&lt;string&gt; auditActionsAndGroups = default, Guid? storageAccountSubscriptionId = default, bool? isStorageSecondaryKeyInUse = default, bool? isAzureMonitorTargetEnabled = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseSqlPoolBlobAuditingPolicyData SynapseSqlPoolBlobAuditingPolicyData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string kind, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyState&gt; state, string storageEndpoint, string storageAccountAccessKey, valuetype System.Nullable`1&lt;int32&gt; retentionDays, class System.Collections.Generic.IEnumerable`1&lt;string&gt; auditActionsAndGroups, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; storageAccountSubscriptionId, valuetype System.Nullable`1&lt;bool&gt; isStorageSecondaryKeyInUse, valuetype System.Nullable`1&lt;bool&gt; isAzureMonitorTargetEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSqlPoolBlobAuditingPolicyData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyState},System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseSqlPoolBlobAuditingPolicyData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional kind As String = Nothing, Optional state As Nullable(Of SynapseBlobAuditingPolicyState) = Nothing, Optional storageEndpoint As String = Nothing, Optional storageAccountAccessKey As String = Nothing, Optional retentionDays As Nullable(Of Integer) = Nothing, Optional auditActionsAndGroups As IEnumerable(Of String) = Nothing, Optional storageAccountSubscriptionId As Nullable(Of Guid) = Nothing, Optional isStorageSecondaryKeyInUse As Nullable(Of Boolean) = Nothing, Optional isAzureMonitorTargetEnabled As Nullable(Of Boolean) = Nothing) As SynapseSqlPoolBlobAuditingPolicyData" />
      <MemberSignature Language="F#" Value="static member SynapseSqlPoolBlobAuditingPolicyData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyState&gt; * string * string * Nullable&lt;int&gt; * seq&lt;string&gt; * Nullable&lt;Guid&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolBlobAuditingPolicyData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSqlPoolBlobAuditingPolicyData (id, name, resourceType, systemData, kind, state, storageEndpoint, storageAccountAccessKey, retentionDays, auditActionsAndGroups, storageAccountSubscriptionId, isStorageSecondaryKeyInUse, isAzureMonitorTargetEnabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseSqlPoolBlobAuditingPolicyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyState&gt;" />
        <Parameter Name="storageEndpoint" Type="System.String" />
        <Parameter Name="storageAccountAccessKey" Type="System.String" />
        <Parameter Name="retentionDays" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="auditActionsAndGroups" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="storageAccountSubscriptionId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="isStorageSecondaryKeyInUse" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isAzureMonitorTargetEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="kind"> Resource kind. </param>
        <param name="state"> Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required. </param>
        <param name="storageEndpoint"> Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint is required. </param>
        <param name="storageAccountAccessKey"> Specifies the identifier key of the auditing storage account. If state is Enabled and storageEndpoint is specified, storageAccountAccessKey is required. </param>
        <param name="retentionDays"> Specifies the number of days to keep in the audit logs in the storage account. </param>
        <param name="auditActionsAndGroups">
             Specifies the Actions-Groups and Actions to audit.
            
             The recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:
            
             BATCH_COMPLETED_GROUP,
             SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
             FAILED_DATABASE_AUTHENTICATION_GROUP.
            
             This above combination is also the set that is configured by default when enabling auditing from the Azure portal.
            
             The supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):
            
             APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
             BACKUP_RESTORE_GROUP
             DATABASE_LOGOUT_GROUP
             DATABASE_OBJECT_CHANGE_GROUP
             DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
             DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
             DATABASE_OPERATION_GROUP
             DATABASE_PERMISSION_CHANGE_GROUP
             DATABASE_PRINCIPAL_CHANGE_GROUP
             DATABASE_PRINCIPAL_IMPERSONATION_GROUP
             DATABASE_ROLE_MEMBER_CHANGE_GROUP
             FAILED_DATABASE_AUTHENTICATION_GROUP
             SCHEMA_OBJECT_ACCESS_GROUP
             SCHEMA_OBJECT_CHANGE_GROUP
             SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
             SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
             SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
             USER_CHANGE_PASSWORD_GROUP
             BATCH_STARTED_GROUP
             BATCH_COMPLETED_GROUP
            
             These are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.
            
             For more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
            
             For Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:
             SELECT
             UPDATE
             INSERT
             DELETE
             EXECUTE
             RECEIVE
             REFERENCES
            
             The general form for defining an action to be audited is:
             {action} ON {object} BY {principal}
            
             Note that &lt;object&gt; in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.
            
             For example:
             SELECT on dbo.myTable by public
             SELECT on DATABASE::myDatabase by public
             SELECT on SCHEMA::mySchema by public
            
             For more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
             </param>
        <param name="storageAccountSubscriptionId"> Specifies the blob storage subscription Id. </param>
        <param name="isStorageSecondaryKeyInUse"> Specifies whether storageAccountAccessKey value is the storage's secondary key. </param>
        <param name="isAzureMonitorTargetEnabled">
             Specifies whether audit events are sent to Azure Monitor.
             In order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.
            
             When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.
             Note that for server level audit you should use the 'master' database as {databaseName}.
            
             Diagnostic Settings URI format:
             PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
            
             For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)
             or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
            
             </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolBlobAuditingPolicyData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolBlobAuditingPolicyData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseSqlPoolColumnData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseSqlPoolColumnData SynapseSqlPoolColumnData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Synapse.Models.SqlPoolColumnDataType? columnType = default, bool? isComputed = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseSqlPoolColumnData SynapseSqlPoolColumnData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SqlPoolColumnDataType&gt; columnType, valuetype System.Nullable`1&lt;bool&gt; isComputed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSqlPoolColumnData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ResourceManager.Synapse.Models.SqlPoolColumnDataType},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseSqlPoolColumnData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional columnType As Nullable(Of SqlPoolColumnDataType) = Nothing, Optional isComputed As Nullable(Of Boolean) = Nothing) As SynapseSqlPoolColumnData" />
      <MemberSignature Language="F#" Value="static member SynapseSqlPoolColumnData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.ResourceManager.Synapse.Models.SqlPoolColumnDataType&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolColumnData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSqlPoolColumnData (id, name, resourceType, systemData, columnType, isComputed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseSqlPoolColumnData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="columnType" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SqlPoolColumnDataType&gt;" />
        <Parameter Name="isComputed" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="columnType"> The column data type. </param>
        <param name="isComputed"> Indicates whether column value is computed or not. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolColumnData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolColumnData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseSqlPoolConnectionPolicyData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseSqlPoolConnectionPolicyData SynapseSqlPoolConnectionPolicyData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string kind = default, Azure.Core.AzureLocation? location = default, string securityEnabledAccess = default, string proxyDnsName = default, string proxyPort = default, string visibility = default, string useServerDefault = default, string redirectionState = default, string state = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseSqlPoolConnectionPolicyData SynapseSqlPoolConnectionPolicyData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string kind, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, string securityEnabledAccess, string proxyDnsName, string proxyPort, string visibility, string useServerDefault, string redirectionState, string state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSqlPoolConnectionPolicyData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{Azure.Core.AzureLocation},System.String,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseSqlPoolConnectionPolicyData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional kind As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional securityEnabledAccess As String = Nothing, Optional proxyDnsName As String = Nothing, Optional proxyPort As String = Nothing, Optional visibility As String = Nothing, Optional useServerDefault As String = Nothing, Optional redirectionState As String = Nothing, Optional state As String = Nothing) As SynapseSqlPoolConnectionPolicyData" />
      <MemberSignature Language="F#" Value="static member SynapseSqlPoolConnectionPolicyData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Nullable&lt;Azure.Core.AzureLocation&gt; * string * string * string * string * string * string * string -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolConnectionPolicyData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSqlPoolConnectionPolicyData (id, name, resourceType, systemData, kind, location, securityEnabledAccess, proxyDnsName, proxyPort, visibility, useServerDefault, redirectionState, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseSqlPoolConnectionPolicyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="securityEnabledAccess" Type="System.String" />
        <Parameter Name="proxyDnsName" Type="System.String" />
        <Parameter Name="proxyPort" Type="System.String" />
        <Parameter Name="visibility" Type="System.String" />
        <Parameter Name="useServerDefault" Type="System.String" />
        <Parameter Name="redirectionState" Type="System.String" />
        <Parameter Name="state" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="kind"> Resource kind. </param>
        <param name="location"> Resource location. </param>
        <param name="securityEnabledAccess"> The state of security access. </param>
        <param name="proxyDnsName"> The fully qualified host name of the auditing proxy. </param>
        <param name="proxyPort"> The port number of the auditing proxy. </param>
        <param name="visibility"> The visibility of the auditing proxy. </param>
        <param name="useServerDefault"> Whether server default is enabled or disabled. </param>
        <param name="redirectionState"> The state of proxy redirection. </param>
        <param name="state"> The connection policy state. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolConnectionPolicyData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolConnectionPolicyData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseSqlPoolData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseSqlPoolData SynapseSqlPoolData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.Synapse.Models.SynapseSku sku = default, long? maxSizeBytes = default, string collation = default, string sourceDatabaseId = default, string recoverableDatabaseId = default, string provisioningState = default, string status = default, DateTimeOffset? restorePointInTime = default, Azure.ResourceManager.Synapse.Models.SqlPoolCreateMode? createMode = default, DateTimeOffset? createdOn = default, Azure.ResourceManager.Synapse.Models.SqlPoolStorageAccountType? storageAccountType = default, DateTimeOffset? sourceDatabaseDeletionOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseSqlPoolData SynapseSqlPoolData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Synapse.Models.SynapseSku sku, valuetype System.Nullable`1&lt;int64&gt; maxSizeBytes, string collation, string sourceDatabaseId, string recoverableDatabaseId, string provisioningState, string status, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; restorePointInTime, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SqlPoolCreateMode&gt; createMode, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SqlPoolStorageAccountType&gt; storageAccountType, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; sourceDatabaseDeletionOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSqlPoolData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Synapse.Models.SynapseSku,System.Nullable{System.Int64},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Synapse.Models.SqlPoolCreateMode},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Synapse.Models.SqlPoolStorageAccountType},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseSqlPoolData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional sku As SynapseSku = Nothing, Optional maxSizeBytes As Nullable(Of Long) = Nothing, Optional collation As String = Nothing, Optional sourceDatabaseId As String = Nothing, Optional recoverableDatabaseId As String = Nothing, Optional provisioningState As String = Nothing, Optional status As String = Nothing, Optional restorePointInTime As Nullable(Of DateTimeOffset) = Nothing, Optional createMode As Nullable(Of SqlPoolCreateMode) = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional storageAccountType As Nullable(Of SqlPoolStorageAccountType) = Nothing, Optional sourceDatabaseDeletionOn As Nullable(Of DateTimeOffset) = Nothing) As SynapseSqlPoolData" />
      <MemberSignature Language="F#" Value="static member SynapseSqlPoolData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.Synapse.Models.SynapseSku * Nullable&lt;int64&gt; * string * string * string * string * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.SqlPoolCreateMode&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.SqlPoolStorageAccountType&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSqlPoolData (id, name, resourceType, systemData, tags, location, sku, maxSizeBytes, collation, sourceDatabaseId, recoverableDatabaseId, provisioningState, status, restorePointInTime, createMode, createdOn, storageAccountType, sourceDatabaseDeletionOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseSqlPoolData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="sku" Type="Azure.ResourceManager.Synapse.Models.SynapseSku" />
        <Parameter Name="maxSizeBytes" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="collation" Type="System.String" />
        <Parameter Name="sourceDatabaseId" Type="System.String" />
        <Parameter Name="recoverableDatabaseId" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="status" Type="System.String" />
        <Parameter Name="restorePointInTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="createMode" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SqlPoolCreateMode&gt;" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="storageAccountType" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SqlPoolStorageAccountType&gt;" />
        <Parameter Name="sourceDatabaseDeletionOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="sku"> SQL pool SKU. </param>
        <param name="maxSizeBytes"> Maximum size in bytes. </param>
        <param name="collation"> Collation mode. </param>
        <param name="sourceDatabaseId"> Source database to create from. </param>
        <param name="recoverableDatabaseId"> Backup database to restore from. </param>
        <param name="provisioningState"> Resource state. </param>
        <param name="status"> Resource status. </param>
        <param name="restorePointInTime"> Snapshot time to restore. </param>
        <param name="createMode">
             Specifies the mode of sql pool creation.
            
             Default: regular sql pool creation.
            
             PointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.
            
             Recovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.
            
             Restore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.
             </param>
        <param name="createdOn"> Date the SQL pool was created. </param>
        <param name="storageAccountType"> The storage account type used to store backups for this sql pool. </param>
        <param name="sourceDatabaseDeletionOn"> Specifies the time that the sql pool was deleted. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseSqlPoolPatch">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseSqlPoolPatch SynapseSqlPoolPatch (System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.Synapse.Models.SynapseSku sku = default, long? maxSizeBytes = default, string collation = default, string sourceDatabaseId = default, string recoverableDatabaseId = default, string provisioningState = default, string status = default, DateTimeOffset? restorePointInTime = default, Azure.ResourceManager.Synapse.Models.SqlPoolCreateMode? createMode = default, DateTimeOffset? createdOn = default, Azure.ResourceManager.Synapse.Models.SqlPoolStorageAccountType? storageAccountType = default, DateTimeOffset? sourceDatabaseDeletionOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseSqlPoolPatch SynapseSqlPoolPatch(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class Azure.ResourceManager.Synapse.Models.SynapseSku sku, valuetype System.Nullable`1&lt;int64&gt; maxSizeBytes, string collation, string sourceDatabaseId, string recoverableDatabaseId, string provisioningState, string status, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; restorePointInTime, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SqlPoolCreateMode&gt; createMode, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SqlPoolStorageAccountType&gt; storageAccountType, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; sourceDatabaseDeletionOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSqlPoolPatch(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Core.AzureLocation},Azure.ResourceManager.Synapse.Models.SynapseSku,System.Nullable{System.Int64},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Synapse.Models.SqlPoolCreateMode},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Synapse.Models.SqlPoolStorageAccountType},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseSqlPoolPatch (Optional tags As IDictionary(Of String, String) = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional sku As SynapseSku = Nothing, Optional maxSizeBytes As Nullable(Of Long) = Nothing, Optional collation As String = Nothing, Optional sourceDatabaseId As String = Nothing, Optional recoverableDatabaseId As String = Nothing, Optional provisioningState As String = Nothing, Optional status As String = Nothing, Optional restorePointInTime As Nullable(Of DateTimeOffset) = Nothing, Optional createMode As Nullable(Of SqlPoolCreateMode) = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional storageAccountType As Nullable(Of SqlPoolStorageAccountType) = Nothing, Optional sourceDatabaseDeletionOn As Nullable(Of DateTimeOffset) = Nothing) As SynapseSqlPoolPatch" />
      <MemberSignature Language="F#" Value="static member SynapseSqlPoolPatch : System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Core.AzureLocation&gt; * Azure.ResourceManager.Synapse.Models.SynapseSku * Nullable&lt;int64&gt; * string * string * string * string * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.SqlPoolCreateMode&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.SqlPoolStorageAccountType&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseSqlPoolPatch" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSqlPoolPatch (tags, location, sku, maxSizeBytes, collation, sourceDatabaseId, recoverableDatabaseId, provisioningState, status, restorePointInTime, createMode, createdOn, storageAccountType, sourceDatabaseDeletionOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseSqlPoolPatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="sku" Type="Azure.ResourceManager.Synapse.Models.SynapseSku" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="maxSizeBytes" Type="System.Nullable&lt;System.Int64&gt;" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="collation" Type="System.String" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="sourceDatabaseId" Type="System.String" Index="5" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="recoverableDatabaseId" Type="System.String" Index="6" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="provisioningState" Type="System.String" Index="7" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="status" Type="System.String" Index="8" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="restorePointInTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" Index="9" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="createMode" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SqlPoolCreateMode&gt;" Index="10" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" Index="11" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="storageAccountType" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SqlPoolStorageAccountType&gt;" Index="12" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="sourceDatabaseDeletionOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" Index="13" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="tags"> Resource tags. </param>
        <param name="location"> The geo-location where the resource lives. </param>
        <param name="sku"> SQL pool SKU. </param>
        <param name="maxSizeBytes"> Maximum size in bytes. </param>
        <param name="collation"> Collation mode. </param>
        <param name="sourceDatabaseId"> Source database to create from. </param>
        <param name="recoverableDatabaseId"> Backup database to restore from. </param>
        <param name="provisioningState"> Resource state. </param>
        <param name="status"> Resource status. </param>
        <param name="restorePointInTime"> Snapshot time to restore. </param>
        <param name="createMode">
             Specifies the mode of sql pool creation.
            
             Default: regular sql pool creation.
            
             PointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.
            
             Recovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.
            
             Restore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.
             </param>
        <param name="createdOn"> Date the SQL pool was created. </param>
        <param name="storageAccountType"> The storage account type used to store backups for this sql pool. </param>
        <param name="sourceDatabaseDeletionOn"> Specifies the time that the sql pool was deleted. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSqlPoolPatch" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSqlPoolPatch" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseSqlPoolSchemaData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseSqlPoolSchemaData SynapseSqlPoolSchemaData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseSqlPoolSchemaData SynapseSqlPoolSchemaData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSqlPoolSchemaData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseSqlPoolSchemaData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing) As SynapseSqlPoolSchemaData" />
      <MemberSignature Language="F#" Value="static member SynapseSqlPoolSchemaData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolSchemaData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSqlPoolSchemaData (id, name, resourceType, systemData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseSqlPoolSchemaData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolSchemaData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolSchemaData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseSqlPoolSecurityAlertPolicyData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseSqlPoolSecurityAlertPolicyData SynapseSqlPoolSecurityAlertPolicyData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Synapse.Models.SynapseSecurityAlertPolicyState? state = default, System.Collections.Generic.IEnumerable&lt;string&gt; disabledAlerts = default, System.Collections.Generic.IEnumerable&lt;string&gt; emailAddresses = default, bool? enableEmailToAccountAdmins = default, string storageEndpoint = default, string storageAccountAccessKey = default, int? retentionDays = default, DateTimeOffset? createdOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseSqlPoolSecurityAlertPolicyData SynapseSqlPoolSecurityAlertPolicyData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseSecurityAlertPolicyState&gt; state, class System.Collections.Generic.IEnumerable`1&lt;string&gt; disabledAlerts, class System.Collections.Generic.IEnumerable`1&lt;string&gt; emailAddresses, valuetype System.Nullable`1&lt;bool&gt; enableEmailToAccountAdmins, string storageEndpoint, string storageAccountAccessKey, valuetype System.Nullable`1&lt;int32&gt; retentionDays, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSqlPoolSecurityAlertPolicyData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseSecurityAlertPolicyState},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseSqlPoolSecurityAlertPolicyData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional state As Nullable(Of SynapseSecurityAlertPolicyState) = Nothing, Optional disabledAlerts As IEnumerable(Of String) = Nothing, Optional emailAddresses As IEnumerable(Of String) = Nothing, Optional enableEmailToAccountAdmins As Nullable(Of Boolean) = Nothing, Optional storageEndpoint As String = Nothing, Optional storageAccountAccessKey As String = Nothing, Optional retentionDays As Nullable(Of Integer) = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing) As SynapseSqlPoolSecurityAlertPolicyData" />
      <MemberSignature Language="F#" Value="static member SynapseSqlPoolSecurityAlertPolicyData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseSecurityAlertPolicyState&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;bool&gt; * string * string * Nullable&lt;int&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolSecurityAlertPolicyData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSqlPoolSecurityAlertPolicyData (id, name, resourceType, systemData, state, disabledAlerts, emailAddresses, enableEmailToAccountAdmins, storageEndpoint, storageAccountAccessKey, retentionDays, createdOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseSqlPoolSecurityAlertPolicyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseSecurityAlertPolicyState&gt;" />
        <Parameter Name="disabledAlerts" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="emailAddresses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="enableEmailToAccountAdmins" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="storageEndpoint" Type="System.String" />
        <Parameter Name="storageAccountAccessKey" Type="System.String" />
        <Parameter Name="retentionDays" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="state"> Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific Sql pool. </param>
        <param name="disabledAlerts"> Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action. </param>
        <param name="emailAddresses"> Specifies an array of e-mail addresses to which the alert is sent. </param>
        <param name="enableEmailToAccountAdmins"> Specifies that the alert is sent to the account administrators. </param>
        <param name="storageEndpoint"> Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs. </param>
        <param name="storageAccountAccessKey"> Specifies the identifier key of the Threat Detection audit storage account. </param>
        <param name="retentionDays"> Specifies the number of days to keep in the Threat Detection audit logs. </param>
        <param name="createdOn"> Specifies the UTC creation time of the policy. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolSecurityAlertPolicyData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolSecurityAlertPolicyData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseSqlPoolTableData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseSqlPoolTableData SynapseSqlPoolTableData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseSqlPoolTableData SynapseSqlPoolTableData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSqlPoolTableData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseSqlPoolTableData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing) As SynapseSqlPoolTableData" />
      <MemberSignature Language="F#" Value="static member SynapseSqlPoolTableData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolTableData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSqlPoolTableData (id, name, resourceType, systemData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseSqlPoolTableData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolTableData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolTableData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseSqlPoolVulnerabilityAssessmentData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentData SynapseSqlPoolVulnerabilityAssessmentData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string storageContainerPath = default, string storageContainerSasKey = default, string storageAccountAccessKey = default, Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentRecurringScansProperties recurringScans = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentData SynapseSqlPoolVulnerabilityAssessmentData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string storageContainerPath, string storageContainerSasKey, string storageAccountAccessKey, class Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentRecurringScansProperties recurringScans) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSqlPoolVulnerabilityAssessmentData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentRecurringScansProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseSqlPoolVulnerabilityAssessmentData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional storageContainerPath As String = Nothing, Optional storageContainerSasKey As String = Nothing, Optional storageAccountAccessKey As String = Nothing, Optional recurringScans As SynapseVulnerabilityAssessmentRecurringScansProperties = Nothing) As SynapseSqlPoolVulnerabilityAssessmentData" />
      <MemberSignature Language="F#" Value="static member SynapseSqlPoolVulnerabilityAssessmentData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string * string * Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentRecurringScansProperties -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSqlPoolVulnerabilityAssessmentData (id, name, resourceType, systemData, storageContainerPath, storageContainerSasKey, storageAccountAccessKey, recurringScans)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="storageContainerPath" Type="System.String" />
        <Parameter Name="storageContainerSasKey" Type="System.String" />
        <Parameter Name="storageAccountAccessKey" Type="System.String" />
        <Parameter Name="recurringScans" Type="Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentRecurringScansProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="storageContainerPath"> A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level vulnerability assessment policy doesn't set. </param>
        <param name="storageContainerSasKey"> A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required. </param>
        <param name="storageAccountAccessKey"> Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required. </param>
        <param name="recurringScans"> The recurring scans settings. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseSqlPoolVulnerabilityAssessmentRuleBaselineData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentRuleBaselineData SynapseSqlPoolVulnerabilityAssessmentRuleBaselineData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SqlPoolVulnerabilityAssessmentRuleBaselineItem&gt; baselineResults = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentRuleBaselineData SynapseSqlPoolVulnerabilityAssessmentRuleBaselineData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Synapse.Models.SqlPoolVulnerabilityAssessmentRuleBaselineItem&gt; baselineResults) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSqlPoolVulnerabilityAssessmentRuleBaselineData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Synapse.Models.SqlPoolVulnerabilityAssessmentRuleBaselineItem})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseSqlPoolVulnerabilityAssessmentRuleBaselineData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional baselineResults As IEnumerable(Of SqlPoolVulnerabilityAssessmentRuleBaselineItem) = Nothing) As SynapseSqlPoolVulnerabilityAssessmentRuleBaselineData" />
      <MemberSignature Language="F#" Value="static member SynapseSqlPoolVulnerabilityAssessmentRuleBaselineData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * seq&lt;Azure.ResourceManager.Synapse.Models.SqlPoolVulnerabilityAssessmentRuleBaselineItem&gt; -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentRuleBaselineData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSqlPoolVulnerabilityAssessmentRuleBaselineData (id, name, resourceType, systemData, baselineResults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentRuleBaselineData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="baselineResults" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SqlPoolVulnerabilityAssessmentRuleBaselineItem&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="baselineResults"> The rule baseline result. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentRuleBaselineData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentRuleBaselineData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseSsisEnvironment">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseSsisEnvironment SynapseSsisEnvironment (long? id = default, string name = default, string description = default, long? folderId = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseSsisVariable&gt; variables = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseSsisEnvironment SynapseSsisEnvironment(valuetype System.Nullable`1&lt;int64&gt; id, string name, string description, valuetype System.Nullable`1&lt;int64&gt; folderId, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Synapse.Models.SynapseSsisVariable&gt; variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSsisEnvironment(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Synapse.Models.SynapseSsisVariable})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseSsisEnvironment (Optional id As Nullable(Of Long) = Nothing, Optional name As String = Nothing, Optional description As String = Nothing, Optional folderId As Nullable(Of Long) = Nothing, Optional variables As IEnumerable(Of SynapseSsisVariable) = Nothing) As SynapseSsisEnvironment" />
      <MemberSignature Language="F#" Value="static member SynapseSsisEnvironment : Nullable&lt;int64&gt; * string * string * Nullable&lt;int64&gt; * seq&lt;Azure.ResourceManager.Synapse.Models.SynapseSsisVariable&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseSsisEnvironment" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSsisEnvironment (id, name, description, folderId, variables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseSsisEnvironment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="folderId" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseSsisVariable&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> Metadata id. </param>
        <param name="name"> Metadata name. </param>
        <param name="description"> Metadata description. </param>
        <param name="folderId"> Folder id which contains environment. </param>
        <param name="variables"> Variable in environment. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSsisEnvironment" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSsisEnvironment" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseSsisEnvironmentReference">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseSsisEnvironmentReference SynapseSsisEnvironmentReference (long? id = default, string environmentFolderName = default, string environmentName = default, string referenceType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseSsisEnvironmentReference SynapseSsisEnvironmentReference(valuetype System.Nullable`1&lt;int64&gt; id, string environmentFolderName, string environmentName, string referenceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSsisEnvironmentReference(System.Nullable{System.Int64},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseSsisEnvironmentReference (Optional id As Nullable(Of Long) = Nothing, Optional environmentFolderName As String = Nothing, Optional environmentName As String = Nothing, Optional referenceType As String = Nothing) As SynapseSsisEnvironmentReference" />
      <MemberSignature Language="F#" Value="static member SynapseSsisEnvironmentReference : Nullable&lt;int64&gt; * string * string * string -&gt; Azure.ResourceManager.Synapse.Models.SynapseSsisEnvironmentReference" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSsisEnvironmentReference (id, environmentFolderName, environmentName, referenceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseSsisEnvironmentReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="environmentFolderName" Type="System.String" />
        <Parameter Name="environmentName" Type="System.String" />
        <Parameter Name="referenceType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> Environment reference id. </param>
        <param name="environmentFolderName"> Environment folder name. </param>
        <param name="environmentName"> Environment name. </param>
        <param name="referenceType"> Reference type. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSsisEnvironmentReference" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSsisEnvironmentReference" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseSsisFolder">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseSsisFolder SynapseSsisFolder (long? id = default, string name = default, string description = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseSsisFolder SynapseSsisFolder(valuetype System.Nullable`1&lt;int64&gt; id, string name, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSsisFolder(System.Nullable{System.Int64},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseSsisFolder (Optional id As Nullable(Of Long) = Nothing, Optional name As String = Nothing, Optional description As String = Nothing) As SynapseSsisFolder" />
      <MemberSignature Language="F#" Value="static member SynapseSsisFolder : Nullable&lt;int64&gt; * string * string -&gt; Azure.ResourceManager.Synapse.Models.SynapseSsisFolder" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSsisFolder (id, name, description)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseSsisFolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> Metadata id. </param>
        <param name="name"> Metadata name. </param>
        <param name="description"> Metadata description. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSsisFolder" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSsisFolder" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseSsisObjectMetadata">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseSsisObjectMetadata SynapseSsisObjectMetadata (string metadataType = &quot;Unknown&quot;, long? id = default, string name = default, string description = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseSsisObjectMetadata SynapseSsisObjectMetadata(string metadataType, valuetype System.Nullable`1&lt;int64&gt; id, string name, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSsisObjectMetadata(System.String,System.Nullable{System.Int64},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseSsisObjectMetadata (Optional metadataType As String = &quot;Unknown&quot;, Optional id As Nullable(Of Long) = Nothing, Optional name As String = Nothing, Optional description As String = Nothing) As SynapseSsisObjectMetadata" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="static member SynapseSsisObjectMetadata : string * Nullable&lt;int64&gt; * string * string -&gt; Azure.ResourceManager.Synapse.Models.SynapseSsisObjectMetadata" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSsisObjectMetadata (metadataType, id, name, description)" />
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseSsisObjectMetadata SynapseSsisObjectMetadata (string metadataType = default, long? id = default, string name = default, string description = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseSsisObjectMetadata (Optional metadataType As String = Nothing, Optional id As Nullable(Of Long) = Nothing, Optional name As String = Nothing, Optional description As String = Nothing) As SynapseSsisObjectMetadata" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseSsisObjectMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataType" Type="System.String" />
        <Parameter Name="id" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="metadataType"> Type of metadata. </param>
        <param name="id"> Metadata id. </param>
        <param name="name"> Metadata name. </param>
        <param name="description"> Metadata description. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSsisObjectMetadata" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSsisObjectMetadata" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseSsisObjectMetadataStatusResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseSsisObjectMetadataStatusResult SynapseSsisObjectMetadataStatusResult (string status = default, string name = default, string properties = default, string error = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseSsisObjectMetadataStatusResult SynapseSsisObjectMetadataStatusResult(string status, string name, string properties, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSsisObjectMetadataStatusResult(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseSsisObjectMetadataStatusResult (Optional status As String = Nothing, Optional name As String = Nothing, Optional properties As String = Nothing, Optional error As String = Nothing) As SynapseSsisObjectMetadataStatusResult" />
      <MemberSignature Language="F#" Value="static member SynapseSsisObjectMetadataStatusResult : string * string * string * string -&gt; Azure.ResourceManager.Synapse.Models.SynapseSsisObjectMetadataStatusResult" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSsisObjectMetadataStatusResult (status, name, properties, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseSsisObjectMetadataStatusResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="properties" Type="System.String" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="status"> The status of the operation. </param>
        <param name="name"> The operation name. </param>
        <param name="properties"> The operation properties. </param>
        <param name="error"> The operation error message. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSsisObjectMetadataStatusResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSsisObjectMetadataStatusResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseSsisPackage">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseSsisPackage SynapseSsisPackage (long? id = default, string name = default, string description = default, long? folderId = default, long? projectVersion = default, long? projectId = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseSsisParameter&gt; parameters = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseSsisPackage SynapseSsisPackage(valuetype System.Nullable`1&lt;int64&gt; id, string name, string description, valuetype System.Nullable`1&lt;int64&gt; folderId, valuetype System.Nullable`1&lt;int64&gt; projectVersion, valuetype System.Nullable`1&lt;int64&gt; projectId, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Synapse.Models.SynapseSsisParameter&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSsisPackage(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Synapse.Models.SynapseSsisParameter})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseSsisPackage (Optional id As Nullable(Of Long) = Nothing, Optional name As String = Nothing, Optional description As String = Nothing, Optional folderId As Nullable(Of Long) = Nothing, Optional projectVersion As Nullable(Of Long) = Nothing, Optional projectId As Nullable(Of Long) = Nothing, Optional parameters As IEnumerable(Of SynapseSsisParameter) = Nothing) As SynapseSsisPackage" />
      <MemberSignature Language="F#" Value="static member SynapseSsisPackage : Nullable&lt;int64&gt; * string * string * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * seq&lt;Azure.ResourceManager.Synapse.Models.SynapseSsisParameter&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseSsisPackage" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSsisPackage (id, name, description, folderId, projectVersion, projectId, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseSsisPackage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="folderId" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="projectVersion" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="projectId" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseSsisParameter&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> Metadata id. </param>
        <param name="name"> Metadata name. </param>
        <param name="description"> Metadata description. </param>
        <param name="folderId"> Folder id which contains package. </param>
        <param name="projectVersion"> Project version which contains package. </param>
        <param name="projectId"> Project id which contains package. </param>
        <param name="parameters"> Parameters in package. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSsisPackage" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSsisPackage" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseSsisParameter">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseSsisParameter SynapseSsisParameter (long? id = default, string name = default, string description = default, string dataType = default, bool? isRequired = default, bool? isSensitive = default, string designDefaultValue = default, string defaultValue = default, string sensitiveDefaultValue = default, string valueType = default, bool? valueSet = default, string variable = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseSsisParameter SynapseSsisParameter(valuetype System.Nullable`1&lt;int64&gt; id, string name, string description, string dataType, valuetype System.Nullable`1&lt;bool&gt; isRequired, valuetype System.Nullable`1&lt;bool&gt; isSensitive, string designDefaultValue, string defaultValue, string sensitiveDefaultValue, string valueType, valuetype System.Nullable`1&lt;bool&gt; valueSet, string variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSsisParameter(System.Nullable{System.Int64},System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseSsisParameter (Optional id As Nullable(Of Long) = Nothing, Optional name As String = Nothing, Optional description As String = Nothing, Optional dataType As String = Nothing, Optional isRequired As Nullable(Of Boolean) = Nothing, Optional isSensitive As Nullable(Of Boolean) = Nothing, Optional designDefaultValue As String = Nothing, Optional defaultValue As String = Nothing, Optional sensitiveDefaultValue As String = Nothing, Optional valueType As String = Nothing, Optional valueSet As Nullable(Of Boolean) = Nothing, Optional variable As String = Nothing) As SynapseSsisParameter" />
      <MemberSignature Language="F#" Value="static member SynapseSsisParameter : Nullable&lt;int64&gt; * string * string * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * string * string * string * Nullable&lt;bool&gt; * string -&gt; Azure.ResourceManager.Synapse.Models.SynapseSsisParameter" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSsisParameter (id, name, description, dataType, isRequired, isSensitive, designDefaultValue, defaultValue, sensitiveDefaultValue, valueType, valueSet, variable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseSsisParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="dataType" Type="System.String" />
        <Parameter Name="isRequired" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isSensitive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="designDefaultValue" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.String" />
        <Parameter Name="sensitiveDefaultValue" Type="System.String" />
        <Parameter Name="valueType" Type="System.String" />
        <Parameter Name="valueSet" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="variable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> Parameter id. </param>
        <param name="name"> Parameter name. </param>
        <param name="description"> Parameter description. </param>
        <param name="dataType"> Parameter type. </param>
        <param name="isRequired"> Whether parameter is required. </param>
        <param name="isSensitive"> Whether parameter is sensitive. </param>
        <param name="designDefaultValue"> Design default value of parameter. </param>
        <param name="defaultValue"> Default value of parameter. </param>
        <param name="sensitiveDefaultValue"> Default sensitive value of parameter. </param>
        <param name="valueType"> Parameter value type. </param>
        <param name="valueSet"> Parameter value set. </param>
        <param name="variable"> Parameter reference variable. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSsisParameter" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSsisParameter" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseSsisProject">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseSsisProject SynapseSsisProject (long? id = default, string name = default, string description = default, long? folderId = default, long? version = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseSsisEnvironmentReference&gt; environmentRefs = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseSsisParameter&gt; parameters = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseSsisProject SynapseSsisProject(valuetype System.Nullable`1&lt;int64&gt; id, string name, string description, valuetype System.Nullable`1&lt;int64&gt; folderId, valuetype System.Nullable`1&lt;int64&gt; version, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Synapse.Models.SynapseSsisEnvironmentReference&gt; environmentRefs, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Synapse.Models.SynapseSsisParameter&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSsisProject(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Synapse.Models.SynapseSsisEnvironmentReference},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Synapse.Models.SynapseSsisParameter})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseSsisProject (Optional id As Nullable(Of Long) = Nothing, Optional name As String = Nothing, Optional description As String = Nothing, Optional folderId As Nullable(Of Long) = Nothing, Optional version As Nullable(Of Long) = Nothing, Optional environmentRefs As IEnumerable(Of SynapseSsisEnvironmentReference) = Nothing, Optional parameters As IEnumerable(Of SynapseSsisParameter) = Nothing) As SynapseSsisProject" />
      <MemberSignature Language="F#" Value="static member SynapseSsisProject : Nullable&lt;int64&gt; * string * string * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * seq&lt;Azure.ResourceManager.Synapse.Models.SynapseSsisEnvironmentReference&gt; * seq&lt;Azure.ResourceManager.Synapse.Models.SynapseSsisParameter&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseSsisProject" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSsisProject (id, name, description, folderId, version, environmentRefs, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseSsisProject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="folderId" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="version" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="environmentRefs" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseSsisEnvironmentReference&gt;" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseSsisParameter&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> Metadata id. </param>
        <param name="name"> Metadata name. </param>
        <param name="description"> Metadata description. </param>
        <param name="folderId"> Folder id which contains project. </param>
        <param name="version"> Project version. </param>
        <param name="environmentRefs"> Environment reference in project. </param>
        <param name="parameters"> Parameters in project. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSsisProject" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSsisProject" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseSsisVariable">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseSsisVariable SynapseSsisVariable (long? id = default, string name = default, string description = default, string dataType = default, bool? isSensitive = default, string value = default, string sensitiveValue = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseSsisVariable SynapseSsisVariable(valuetype System.Nullable`1&lt;int64&gt; id, string name, string description, string dataType, valuetype System.Nullable`1&lt;bool&gt; isSensitive, string value, string sensitiveValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSsisVariable(System.Nullable{System.Int64},System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseSsisVariable (Optional id As Nullable(Of Long) = Nothing, Optional name As String = Nothing, Optional description As String = Nothing, Optional dataType As String = Nothing, Optional isSensitive As Nullable(Of Boolean) = Nothing, Optional value As String = Nothing, Optional sensitiveValue As String = Nothing) As SynapseSsisVariable" />
      <MemberSignature Language="F#" Value="static member SynapseSsisVariable : Nullable&lt;int64&gt; * string * string * string * Nullable&lt;bool&gt; * string * string -&gt; Azure.ResourceManager.Synapse.Models.SynapseSsisVariable" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseSsisVariable (id, name, description, dataType, isSensitive, value, sensitiveValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseSsisVariable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="dataType" Type="System.String" />
        <Parameter Name="isSensitive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="sensitiveValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> Variable id. </param>
        <param name="name"> Variable name. </param>
        <param name="description"> Variable description. </param>
        <param name="dataType"> Variable type. </param>
        <param name="isSensitive"> Whether variable is sensitive. </param>
        <param name="value"> Variable value. </param>
        <param name="sensitiveValue"> Variable sensitive value. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSsisVariable" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSsisVariable" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseTransparentDataEncryptionData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseTransparentDataEncryptionData SynapseTransparentDataEncryptionData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.Synapse.Models.SynapseTransparentDataEncryptionStatus? status = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseTransparentDataEncryptionData SynapseTransparentDataEncryptionData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseTransparentDataEncryptionStatus&gt; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseTransparentDataEncryptionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.Core.AzureLocation},System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseTransparentDataEncryptionStatus})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseTransparentDataEncryptionData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional status As Nullable(Of SynapseTransparentDataEncryptionStatus) = Nothing) As SynapseTransparentDataEncryptionData" />
      <MemberSignature Language="F#" Value="static member SynapseTransparentDataEncryptionData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.Core.AzureLocation&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseTransparentDataEncryptionStatus&gt; -&gt; Azure.ResourceManager.Synapse.SynapseTransparentDataEncryptionData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseTransparentDataEncryptionData (id, name, resourceType, systemData, location, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseTransparentDataEncryptionData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseTransparentDataEncryptionStatus&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="location"> Resource location. </param>
        <param name="status"> The status of the database transparent data encryption. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseTransparentDataEncryptionData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseTransparentDataEncryptionData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseVulnerabilityAssessmentScanError">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentScanError SynapseVulnerabilityAssessmentScanError (string code = default, string message = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentScanError SynapseVulnerabilityAssessmentScanError(string code, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseVulnerabilityAssessmentScanError(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseVulnerabilityAssessmentScanError (Optional code As String = Nothing, Optional message As String = Nothing) As SynapseVulnerabilityAssessmentScanError" />
      <MemberSignature Language="F#" Value="static member SynapseVulnerabilityAssessmentScanError : string * string -&gt; Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentScanError" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseVulnerabilityAssessmentScanError (code, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentScanError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="code"> The error code. </param>
        <param name="message"> The error message. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentScanError" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentScanError" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseVulnerabilityAssessmentScanRecordData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseVulnerabilityAssessmentScanRecordData SynapseVulnerabilityAssessmentScanRecordData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string scanId = default, Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentScanTriggerType? triggerType = default, Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentScanState? state = default, DateTimeOffset? startOn = default, DateTimeOffset? endOn = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentScanError&gt; errors = default, string storageContainerPath = default, int? numberOfFailedSecurityChecks = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseVulnerabilityAssessmentScanRecordData SynapseVulnerabilityAssessmentScanRecordData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string scanId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentScanTriggerType&gt; triggerType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentScanState&gt; state, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endOn, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentScanError&gt; errors, string storageContainerPath, valuetype System.Nullable`1&lt;int32&gt; numberOfFailedSecurityChecks) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseVulnerabilityAssessmentScanRecordData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentScanTriggerType},System.Nullable{Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentScanState},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentScanError},System.String,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseVulnerabilityAssessmentScanRecordData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional scanId As String = Nothing, Optional triggerType As Nullable(Of SynapseVulnerabilityAssessmentScanTriggerType) = Nothing, Optional state As Nullable(Of SynapseVulnerabilityAssessmentScanState) = Nothing, Optional startOn As Nullable(Of DateTimeOffset) = Nothing, Optional endOn As Nullable(Of DateTimeOffset) = Nothing, Optional errors As IEnumerable(Of SynapseVulnerabilityAssessmentScanError) = Nothing, Optional storageContainerPath As String = Nothing, Optional numberOfFailedSecurityChecks As Nullable(Of Integer) = Nothing) As SynapseVulnerabilityAssessmentScanRecordData" />
      <MemberSignature Language="F#" Value="static member SynapseVulnerabilityAssessmentScanRecordData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentScanTriggerType&gt; * Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentScanState&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentScanError&gt; * string * Nullable&lt;int&gt; -&gt; Azure.ResourceManager.Synapse.SynapseVulnerabilityAssessmentScanRecordData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseVulnerabilityAssessmentScanRecordData (id, name, resourceType, systemData, scanId, triggerType, state, startOn, endOn, errors, storageContainerPath, numberOfFailedSecurityChecks)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseVulnerabilityAssessmentScanRecordData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="scanId" Type="System.String" />
        <Parameter Name="triggerType" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentScanTriggerType&gt;" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentScanState&gt;" />
        <Parameter Name="startOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="errors" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentScanError&gt;" />
        <Parameter Name="storageContainerPath" Type="System.String" />
        <Parameter Name="numberOfFailedSecurityChecks" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="scanId"> The scan ID. </param>
        <param name="triggerType"> The scan trigger type. </param>
        <param name="state"> The scan status. </param>
        <param name="startOn"> The scan start time (UTC). </param>
        <param name="endOn"> The scan end time (UTC). </param>
        <param name="errors"> The scan errors. </param>
        <param name="storageContainerPath"> The scan results storage container path. </param>
        <param name="numberOfFailedSecurityChecks"> The number of failed security checks. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseVulnerabilityAssessmentScanRecordData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseVulnerabilityAssessmentScanRecordData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseWorkloadClassifierData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseWorkloadClassifierData SynapseWorkloadClassifierData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string memberName = default, string label = default, string context = default, string startTime = default, string endTime = default, string importance = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseWorkloadClassifierData SynapseWorkloadClassifierData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string memberName, string label, string context, string startTime, string endTime, string importance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseWorkloadClassifierData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseWorkloadClassifierData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional memberName As String = Nothing, Optional label As String = Nothing, Optional context As String = Nothing, Optional startTime As String = Nothing, Optional endTime As String = Nothing, Optional importance As String = Nothing) As SynapseWorkloadClassifierData" />
      <MemberSignature Language="F#" Value="static member SynapseWorkloadClassifierData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string * string * string * string * string -&gt; Azure.ResourceManager.Synapse.SynapseWorkloadClassifierData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseWorkloadClassifierData (id, name, resourceType, systemData, memberName, label, context, startTime, endTime, importance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseWorkloadClassifierData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="startTime" Type="System.String" />
        <Parameter Name="endTime" Type="System.String" />
        <Parameter Name="importance" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="memberName"> The workload classifier member name. </param>
        <param name="label"> The workload classifier label. </param>
        <param name="context"> The workload classifier context. </param>
        <param name="startTime"> The workload classifier start time for classification. </param>
        <param name="endTime"> The workload classifier end time for classification. </param>
        <param name="importance"> The workload classifier importance. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkloadClassifierData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkloadClassifierData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseWorkloadGroupData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseWorkloadGroupData SynapseWorkloadGroupData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, int? minResourcePercent = default, int? maxResourcePercent = default, double? minResourcePercentPerRequest = default, double? maxResourcePercentPerRequest = default, string importance = default, int? queryExecutionTimeout = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseWorkloadGroupData SynapseWorkloadGroupData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;int32&gt; minResourcePercent, valuetype System.Nullable`1&lt;int32&gt; maxResourcePercent, valuetype System.Nullable`1&lt;float64&gt; minResourcePercentPerRequest, valuetype System.Nullable`1&lt;float64&gt; maxResourcePercentPerRequest, string importance, valuetype System.Nullable`1&lt;int32&gt; queryExecutionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseWorkloadGroupData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseWorkloadGroupData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional minResourcePercent As Nullable(Of Integer) = Nothing, Optional maxResourcePercent As Nullable(Of Integer) = Nothing, Optional minResourcePercentPerRequest As Nullable(Of Double) = Nothing, Optional maxResourcePercentPerRequest As Nullable(Of Double) = Nothing, Optional importance As String = Nothing, Optional queryExecutionTimeout As Nullable(Of Integer) = Nothing) As SynapseWorkloadGroupData" />
      <MemberSignature Language="F#" Value="static member SynapseWorkloadGroupData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;int&gt; -&gt; Azure.ResourceManager.Synapse.SynapseWorkloadGroupData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseWorkloadGroupData (id, name, resourceType, systemData, minResourcePercent, maxResourcePercent, minResourcePercentPerRequest, maxResourcePercentPerRequest, importance, queryExecutionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseWorkloadGroupData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="minResourcePercent" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="maxResourcePercent" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="minResourcePercentPerRequest" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxResourcePercentPerRequest" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="importance" Type="System.String" />
        <Parameter Name="queryExecutionTimeout" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="minResourcePercent"> The workload group minimum percentage resource. </param>
        <param name="maxResourcePercent"> The workload group cap percentage resource. </param>
        <param name="minResourcePercentPerRequest"> The workload group request minimum grant percentage. </param>
        <param name="maxResourcePercentPerRequest"> The workload group request maximum grant percentage. </param>
        <param name="importance"> The workload group importance level. </param>
        <param name="queryExecutionTimeout"> The workload group query execution timeout. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkloadGroupData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkloadGroupData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseWorkspaceAadAdminInfoData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseWorkspaceAadAdminInfoData SynapseWorkspaceAadAdminInfoData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Guid? tenantId = default, string login = default, string administratorType = default, string sid = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseWorkspaceAadAdminInfoData SynapseWorkspaceAadAdminInfoData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; tenantId, string login, string administratorType, string sid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseWorkspaceAadAdminInfoData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.Guid},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseWorkspaceAadAdminInfoData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tenantId As Nullable(Of Guid) = Nothing, Optional login As String = Nothing, Optional administratorType As String = Nothing, Optional sid As String = Nothing) As SynapseWorkspaceAadAdminInfoData" />
      <MemberSignature Language="F#" Value="static member SynapseWorkspaceAadAdminInfoData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Guid&gt; * string * string * string -&gt; Azure.ResourceManager.Synapse.SynapseWorkspaceAadAdminInfoData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseWorkspaceAadAdminInfoData (id, name, resourceType, systemData, tenantId, login, administratorType, sid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseWorkspaceAadAdminInfoData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tenantId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="login" Type="System.String" />
        <Parameter Name="administratorType" Type="System.String" />
        <Parameter Name="sid" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tenantId"> Tenant ID of the workspace active directory administrator. </param>
        <param name="login"> Login of the workspace active directory administrator. </param>
        <param name="administratorType"> Workspace active directory administrator type. </param>
        <param name="sid"> Object ID of the workspace active directory administrator. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceAadAdminInfoData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceAadAdminInfoData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseWorkspaceData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapseWorkspaceData SynapseWorkspaceData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, Azure.ResourceManager.Synapse.Models.SynapseDataLakeStorageAccountDetails defaultDataLakeStorage = default, string sqlAdministratorLoginPassword = default, string managedResourceGroupName = default, string provisioningState = default, string sqlAdministratorLogin = default, string virtualNetworkComputeSubnetId = default, System.Collections.Generic.IDictionary&lt;string,string&gt; connectivityEndpoints = default, string managedVirtualNetwork = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionData&gt; privateEndpointConnections = default, Azure.ResourceManager.Synapse.Models.SynapseEncryptionDetails encryption = default, Guid? workspaceUid = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,BinaryData&gt; extraProperties = default, Azure.ResourceManager.Synapse.Models.SynapseManagedVirtualNetworkSettings managedVirtualNetworkSettings = default, Azure.ResourceManager.Synapse.Models.SynapseWorkspaceRepositoryConfiguration workspaceRepositoryConfiguration = default, Azure.Core.ResourceIdentifier purviewResourceId = default, Azure.Core.ResourceIdentifier adlaResourceId = default, Azure.ResourceManager.Synapse.Models.WorkspacePublicNetworkAccess? publicNetworkAccess = default, Guid? initialWorkspaceAdminObjectId = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,BinaryData&gt; settings = default, bool? isAadOnlyAuthenticationEnabled = default, bool? isTrustedServiceBypassEnabled = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapseWorkspaceData SynapseWorkspaceData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, class Azure.ResourceManager.Synapse.Models.SynapseDataLakeStorageAccountDetails defaultDataLakeStorage, string sqlAdministratorLoginPassword, string managedResourceGroupName, string provisioningState, string sqlAdministratorLogin, string virtualNetworkComputeSubnetId, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; connectivityEndpoints, string managedVirtualNetwork, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionData&gt; privateEndpointConnections, class Azure.ResourceManager.Synapse.Models.SynapseEncryptionDetails encryption, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; workspaceUid, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class System.BinaryData&gt; extraProperties, class Azure.ResourceManager.Synapse.Models.SynapseManagedVirtualNetworkSettings managedVirtualNetworkSettings, class Azure.ResourceManager.Synapse.Models.SynapseWorkspaceRepositoryConfiguration workspaceRepositoryConfiguration, class Azure.Core.ResourceIdentifier purviewResourceId, class Azure.Core.ResourceIdentifier adlaResourceId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.WorkspacePublicNetworkAccess&gt; publicNetworkAccess, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; initialWorkspaceAdminObjectId, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class System.BinaryData&gt; settings, valuetype System.Nullable`1&lt;bool&gt; isAadOnlyAuthenticationEnabled, valuetype System.Nullable`1&lt;bool&gt; isTrustedServiceBypassEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseWorkspaceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Models.ManagedServiceIdentity,Azure.ResourceManager.Synapse.Models.SynapseDataLakeStorageAccountDetails,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionData},Azure.ResourceManager.Synapse.Models.SynapseEncryptionDetails,System.Nullable{System.Guid},System.Collections.Generic.IReadOnlyDictionary{System.String,System.BinaryData},Azure.ResourceManager.Synapse.Models.SynapseManagedVirtualNetworkSettings,Azure.ResourceManager.Synapse.Models.SynapseWorkspaceRepositoryConfiguration,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.Synapse.Models.WorkspacePublicNetworkAccess},System.Nullable{System.Guid},System.Collections.Generic.IReadOnlyDictionary{System.String,System.BinaryData},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseWorkspaceData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional defaultDataLakeStorage As SynapseDataLakeStorageAccountDetails = Nothing, Optional sqlAdministratorLoginPassword As String = Nothing, Optional managedResourceGroupName As String = Nothing, Optional provisioningState As String = Nothing, Optional sqlAdministratorLogin As String = Nothing, Optional virtualNetworkComputeSubnetId As String = Nothing, Optional connectivityEndpoints As IDictionary(Of String, String) = Nothing, Optional managedVirtualNetwork As String = Nothing, Optional privateEndpointConnections As IEnumerable(Of SynapsePrivateEndpointConnectionData) = Nothing, Optional encryption As SynapseEncryptionDetails = Nothing, Optional workspaceUid As Nullable(Of Guid) = Nothing, Optional extraProperties As IReadOnlyDictionary(Of String, BinaryData) = Nothing, Optional managedVirtualNetworkSettings As SynapseManagedVirtualNetworkSettings = Nothing, Optional workspaceRepositoryConfiguration As SynapseWorkspaceRepositoryConfiguration = Nothing, Optional purviewResourceId As ResourceIdentifier = Nothing, Optional adlaResourceId As ResourceIdentifier = Nothing, Optional publicNetworkAccess As Nullable(Of WorkspacePublicNetworkAccess) = Nothing, Optional initialWorkspaceAdminObjectId As Nullable(Of Guid) = Nothing, Optional settings As IReadOnlyDictionary(Of String, BinaryData) = Nothing, Optional isAadOnlyAuthenticationEnabled As Nullable(Of Boolean) = Nothing, Optional isTrustedServiceBypassEnabled As Nullable(Of Boolean) = Nothing) As SynapseWorkspaceData" />
      <MemberSignature Language="F#" Value="static member SynapseWorkspaceData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.Models.ManagedServiceIdentity * Azure.ResourceManager.Synapse.Models.SynapseDataLakeStorageAccountDetails * string * string * string * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * seq&lt;Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionData&gt; * Azure.ResourceManager.Synapse.Models.SynapseEncryptionDetails * Nullable&lt;Guid&gt; * System.Collections.Generic.IReadOnlyDictionary&lt;string, BinaryData&gt; * Azure.ResourceManager.Synapse.Models.SynapseManagedVirtualNetworkSettings * Azure.ResourceManager.Synapse.Models.SynapseWorkspaceRepositoryConfiguration * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * Nullable&lt;Azure.ResourceManager.Synapse.Models.WorkspacePublicNetworkAccess&gt; * Nullable&lt;Guid&gt; * System.Collections.Generic.IReadOnlyDictionary&lt;string, BinaryData&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.Synapse.SynapseWorkspaceData" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseWorkspaceData (id, name, resourceType, systemData, tags, location, identity, defaultDataLakeStorage, sqlAdministratorLoginPassword, managedResourceGroupName, provisioningState, sqlAdministratorLogin, virtualNetworkComputeSubnetId, connectivityEndpoints, managedVirtualNetwork, privateEndpointConnections, encryption, workspaceUid, extraProperties, managedVirtualNetworkSettings, workspaceRepositoryConfiguration, purviewResourceId, adlaResourceId, publicNetworkAccess, initialWorkspaceAdminObjectId, settings, isAadOnlyAuthenticationEnabled, isTrustedServiceBypassEnabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseWorkspaceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="defaultDataLakeStorage" Type="Azure.ResourceManager.Synapse.Models.SynapseDataLakeStorageAccountDetails" />
        <Parameter Name="sqlAdministratorLoginPassword" Type="System.String" />
        <Parameter Name="managedResourceGroupName" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="sqlAdministratorLogin" Type="System.String" />
        <Parameter Name="virtualNetworkComputeSubnetId" Type="System.String" />
        <Parameter Name="connectivityEndpoints" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="managedVirtualNetwork" Type="System.String" />
        <Parameter Name="privateEndpointConnections" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionData&gt;" />
        <Parameter Name="encryption" Type="Azure.ResourceManager.Synapse.Models.SynapseEncryptionDetails" />
        <Parameter Name="workspaceUid" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="extraProperties" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.BinaryData&gt;" />
        <Parameter Name="managedVirtualNetworkSettings" Type="Azure.ResourceManager.Synapse.Models.SynapseManagedVirtualNetworkSettings" />
        <Parameter Name="workspaceRepositoryConfiguration" Type="Azure.ResourceManager.Synapse.Models.SynapseWorkspaceRepositoryConfiguration" />
        <Parameter Name="purviewResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="adlaResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="publicNetworkAccess" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.WorkspacePublicNetworkAccess&gt;" />
        <Parameter Name="initialWorkspaceAdminObjectId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="settings" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.BinaryData&gt;" />
        <Parameter Name="isAadOnlyAuthenticationEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isTrustedServiceBypassEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="identity"> Identity of the workspace. Current supported identity types: None, SystemAssigned, SystemAssigned,UserAssigned. </param>
        <param name="defaultDataLakeStorage"> Workspace default data lake storage account details. </param>
        <param name="sqlAdministratorLoginPassword"> SQL administrator login password. </param>
        <param name="managedResourceGroupName"> Workspace managed resource group. The resource group name uniquely identifies the resource group within the user subscriptionId. The resource group name must be no longer than 90 characters long, and must be alphanumeric characters (Char.IsLetterOrDigit()) and '-', '_', '(', ')' and'.'. Note that the name cannot end with '.'. </param>
        <param name="provisioningState"> Resource provisioning state. </param>
        <param name="sqlAdministratorLogin"> Login for workspace SQL active directory administrator. </param>
        <param name="virtualNetworkComputeSubnetId"> Virtual Network profile. </param>
        <param name="connectivityEndpoints"> Connectivity endpoints. </param>
        <param name="managedVirtualNetwork"> Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user. </param>
        <param name="privateEndpointConnections"> Private endpoint connections to the workspace. </param>
        <param name="encryption"> The encryption details of the workspace. </param>
        <param name="workspaceUid"> The workspace unique identifier. </param>
        <param name="extraProperties"> Workspace level configs and feature flags. </param>
        <param name="managedVirtualNetworkSettings"> Managed Virtual Network Settings. </param>
        <param name="workspaceRepositoryConfiguration"> Git integration settings. </param>
        <param name="purviewResourceId"> Purview Configuration. </param>
        <param name="adlaResourceId"> The ADLA resource ID. </param>
        <param name="publicNetworkAccess"> Enable or Disable public network access to workspace. </param>
        <param name="initialWorkspaceAdminObjectId"> Initial workspace AAD admin properties for a CSP subscription. </param>
        <param name="settings"> Workspace settings. </param>
        <param name="isAadOnlyAuthenticationEnabled"> Enable or Disable AzureADOnlyAuthentication on All Workspace subresource. </param>
        <param name="isTrustedServiceBypassEnabled"> Is trustedServiceBypassEnabled for the workspace. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseWorkspacePatch">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.SynapseWorkspacePatch SynapseWorkspacePatch (System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, string sqlAdministratorLoginPassword = default, Azure.ResourceManager.Synapse.Models.SynapseManagedVirtualNetworkSettings managedVirtualNetworkSettings = default, Azure.ResourceManager.Synapse.Models.SynapseWorkspaceRepositoryConfiguration workspaceRepositoryConfiguration = default, Azure.Core.ResourceIdentifier purviewResourceId = default, string provisioningState = default, Azure.ResourceManager.Synapse.Models.SynapseEncryptionDetails encryption = default, Azure.ResourceManager.Synapse.Models.WorkspacePublicNetworkAccess? publicNetworkAccess = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.SynapseWorkspacePatch SynapseWorkspacePatch(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, string sqlAdministratorLoginPassword, class Azure.ResourceManager.Synapse.Models.SynapseManagedVirtualNetworkSettings managedVirtualNetworkSettings, class Azure.ResourceManager.Synapse.Models.SynapseWorkspaceRepositoryConfiguration workspaceRepositoryConfiguration, class Azure.Core.ResourceIdentifier purviewResourceId, string provisioningState, class Azure.ResourceManager.Synapse.Models.SynapseEncryptionDetails encryption, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.WorkspacePublicNetworkAccess&gt; publicNetworkAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseWorkspacePatch(System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.Models.ManagedServiceIdentity,System.String,Azure.ResourceManager.Synapse.Models.SynapseManagedVirtualNetworkSettings,Azure.ResourceManager.Synapse.Models.SynapseWorkspaceRepositoryConfiguration,Azure.Core.ResourceIdentifier,System.String,Azure.ResourceManager.Synapse.Models.SynapseEncryptionDetails,System.Nullable{Azure.ResourceManager.Synapse.Models.WorkspacePublicNetworkAccess})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseWorkspacePatch (Optional tags As IDictionary(Of String, String) = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional sqlAdministratorLoginPassword As String = Nothing, Optional managedVirtualNetworkSettings As SynapseManagedVirtualNetworkSettings = Nothing, Optional workspaceRepositoryConfiguration As SynapseWorkspaceRepositoryConfiguration = Nothing, Optional purviewResourceId As ResourceIdentifier = Nothing, Optional provisioningState As String = Nothing, Optional encryption As SynapseEncryptionDetails = Nothing, Optional publicNetworkAccess As Nullable(Of WorkspacePublicNetworkAccess) = Nothing) As SynapseWorkspacePatch" />
      <MemberSignature Language="F#" Value="static member SynapseWorkspacePatch : System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.ResourceManager.Models.ManagedServiceIdentity * string * Azure.ResourceManager.Synapse.Models.SynapseManagedVirtualNetworkSettings * Azure.ResourceManager.Synapse.Models.SynapseWorkspaceRepositoryConfiguration * Azure.Core.ResourceIdentifier * string * Azure.ResourceManager.Synapse.Models.SynapseEncryptionDetails * Nullable&lt;Azure.ResourceManager.Synapse.Models.WorkspacePublicNetworkAccess&gt; -&gt; Azure.ResourceManager.Synapse.Models.SynapseWorkspacePatch" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.SynapseWorkspacePatch (tags, identity, sqlAdministratorLoginPassword, managedVirtualNetworkSettings, workspaceRepositoryConfiguration, purviewResourceId, provisioningState, encryption, publicNetworkAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseWorkspacePatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="sqlAdministratorLoginPassword" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="managedVirtualNetworkSettings" Type="Azure.ResourceManager.Synapse.Models.SynapseManagedVirtualNetworkSettings" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="workspaceRepositoryConfiguration" Type="Azure.ResourceManager.Synapse.Models.SynapseWorkspaceRepositoryConfiguration" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="purviewResourceId" Type="Azure.Core.ResourceIdentifier" Index="5" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="provisioningState" Type="System.String" Index="6" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="encryption" Type="Azure.ResourceManager.Synapse.Models.SynapseEncryptionDetails" Index="7" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="publicNetworkAccess" Type="System.Nullable&lt;Azure.ResourceManager.Synapse.Models.WorkspacePublicNetworkAccess&gt;" Index="8" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="tags"> Resource tags. </param>
        <param name="identity"> The identity of the workspace. Current supported identity types: None, SystemAssigned, SystemAssigned,UserAssigned. </param>
        <param name="sqlAdministratorLoginPassword"> SQL administrator login password. </param>
        <param name="managedVirtualNetworkSettings"> Managed Virtual Network Settings. </param>
        <param name="workspaceRepositoryConfiguration"> Git integration settings. </param>
        <param name="purviewResourceId"> Purview Configuration. </param>
        <param name="provisioningState"> Resource provisioning state. </param>
        <param name="encryption"> The encryption details of the workspace. </param>
        <param name="publicNetworkAccess"> Enable or Disable public network access to workspace. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseWorkspacePatch" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseWorkspacePatch" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkspaceCustomerManagedKeyDetails">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.Models.WorkspaceCustomerManagedKeyDetails WorkspaceCustomerManagedKeyDetails (string status = default, Azure.ResourceManager.Synapse.Models.SynapseWorkspaceKeyDetails key = default, Azure.ResourceManager.Synapse.Models.KekIdentityProperties kekIdentity = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.Models.WorkspaceCustomerManagedKeyDetails WorkspaceCustomerManagedKeyDetails(string status, class Azure.ResourceManager.Synapse.Models.SynapseWorkspaceKeyDetails key, class Azure.ResourceManager.Synapse.Models.KekIdentityProperties kekIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.WorkspaceCustomerManagedKeyDetails(System.String,Azure.ResourceManager.Synapse.Models.SynapseWorkspaceKeyDetails,Azure.ResourceManager.Synapse.Models.KekIdentityProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WorkspaceCustomerManagedKeyDetails (Optional status As String = Nothing, Optional key As SynapseWorkspaceKeyDetails = Nothing, Optional kekIdentity As KekIdentityProperties = Nothing) As WorkspaceCustomerManagedKeyDetails" />
      <MemberSignature Language="F#" Value="static member WorkspaceCustomerManagedKeyDetails : string * Azure.ResourceManager.Synapse.Models.SynapseWorkspaceKeyDetails * Azure.ResourceManager.Synapse.Models.KekIdentityProperties -&gt; Azure.ResourceManager.Synapse.Models.WorkspaceCustomerManagedKeyDetails" Usage="Azure.ResourceManager.Synapse.Models.ArmSynapseModelFactory.WorkspaceCustomerManagedKeyDetails (status, key, kekIdentity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.WorkspaceCustomerManagedKeyDetails</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="System.String" />
        <Parameter Name="key" Type="Azure.ResourceManager.Synapse.Models.SynapseWorkspaceKeyDetails" />
        <Parameter Name="kekIdentity" Type="Azure.ResourceManager.Synapse.Models.KekIdentityProperties" />
      </Parameters>
      <Docs>
        <param name="status"> The customer managed key status on the workspace. </param>
        <param name="key"> The key object of the workspace. </param>
        <param name="kekIdentity"> Key encryption key. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.Models.WorkspaceCustomerManagedKeyDetails" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Synapse.Models.WorkspaceCustomerManagedKeyDetails" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
