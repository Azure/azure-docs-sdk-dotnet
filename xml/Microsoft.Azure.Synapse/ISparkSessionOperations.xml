<Type Name="ISparkSessionOperations" FullName="Microsoft.Azure.Synapse.ISparkSessionOperations">
  <TypeSignature Language="C#" Value="public interface ISparkSessionOperations" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISparkSessionOperations" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Synapse.ISparkSessionOperations" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISparkSessionOperations" />
  <TypeSignature Language="F#" Value="type ISparkSessionOperations = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Synapse</AssemblyName>
    <AssemblyVersion>0.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateStatementWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Synapse.Models.LivyStatementResponseBody&gt;&gt; CreateStatementWithHttpMessagesAsync (string workspaceName, string sparkPoolName, int sessionId, Microsoft.Azure.Synapse.Models.LivyStatementRequestBody livyRequest, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse`1&lt;class Microsoft.Azure.Synapse.Models.LivyStatementResponseBody&gt;&gt; CreateStatementWithHttpMessagesAsync(string workspaceName, string sparkPoolName, int32 sessionId, class Microsoft.Azure.Synapse.Models.LivyStatementRequestBody livyRequest, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Synapse.ISparkSessionOperations.CreateStatementWithHttpMessagesAsync(System.String,System.String,System.Int32,Microsoft.Azure.Synapse.Models.LivyStatementRequestBody,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateStatementWithHttpMessagesAsync (workspaceName As String, sparkPoolName As String, sessionId As Integer, livyRequest As LivyStatementRequestBody, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of LivyStatementResponseBody))" />
      <MemberSignature Language="F#" Value="abstract member CreateStatementWithHttpMessagesAsync : string * string * int * Microsoft.Azure.Synapse.Models.LivyStatementRequestBody * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Synapse.Models.LivyStatementResponseBody&gt;&gt;" Usage="iSparkSessionOperations.CreateStatementWithHttpMessagesAsync (workspaceName, sparkPoolName, sessionId, livyRequest, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Synapse</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Synapse.Models.LivyStatementResponseBody&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workspaceName" Type="System.String" />
        <Parameter Name="sparkPoolName" Type="System.String" />
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="livyRequest" Type="Microsoft.Azure.Synapse.Models.LivyStatementRequestBody" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="workspaceName">To be added.</param>
        <param name="sparkPoolName">To be added.</param>
        <param name="sessionId">To be added.</param>
        <param name="livyRequest">To be added.</param>
        <param name="customHeaders">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Synapse.Models.ExtendedLivySessionResponse&gt;&gt; CreateWithHttpMessagesAsync (string workspaceName, string sparkPoolName, Microsoft.Azure.Synapse.Models.ExtendedLivySessionRequest livyRequest, bool? detailed = default, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse`1&lt;class Microsoft.Azure.Synapse.Models.ExtendedLivySessionResponse&gt;&gt; CreateWithHttpMessagesAsync(string workspaceName, string sparkPoolName, class Microsoft.Azure.Synapse.Models.ExtendedLivySessionRequest livyRequest, valuetype System.Nullable`1&lt;bool&gt; detailed, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Synapse.ISparkSessionOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Synapse.Models.ExtendedLivySessionRequest,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWithHttpMessagesAsync (workspaceName As String, sparkPoolName As String, livyRequest As ExtendedLivySessionRequest, Optional detailed As Nullable(Of Boolean) = Nothing, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of ExtendedLivySessionResponse))" />
      <MemberSignature Language="F#" Value="abstract member CreateWithHttpMessagesAsync : string * string * Microsoft.Azure.Synapse.Models.ExtendedLivySessionRequest * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Synapse.Models.ExtendedLivySessionResponse&gt;&gt;" Usage="iSparkSessionOperations.CreateWithHttpMessagesAsync (workspaceName, sparkPoolName, livyRequest, detailed, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Synapse</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Synapse.Models.ExtendedLivySessionResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workspaceName" Type="System.String" />
        <Parameter Name="sparkPoolName" Type="System.String" />
        <Parameter Name="livyRequest" Type="Microsoft.Azure.Synapse.Models.ExtendedLivySessionRequest" />
        <Parameter Name="detailed" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="workspaceName">To be added.</param>
        <param name="sparkPoolName">To be added.</param>
        <param name="livyRequest">To be added.</param>
        <param name="detailed">To be added.</param>
        <param name="customHeaders">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteStatementWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Synapse.Models.LivyStatementCancellationResponse&gt;&gt; DeleteStatementWithHttpMessagesAsync (string workspaceName, string sparkPoolName, int sessionId, int statementId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse`1&lt;class Microsoft.Azure.Synapse.Models.LivyStatementCancellationResponse&gt;&gt; DeleteStatementWithHttpMessagesAsync(string workspaceName, string sparkPoolName, int32 sessionId, int32 statementId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Synapse.ISparkSessionOperations.DeleteStatementWithHttpMessagesAsync(System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteStatementWithHttpMessagesAsync (workspaceName As String, sparkPoolName As String, sessionId As Integer, statementId As Integer, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of LivyStatementCancellationResponse))" />
      <MemberSignature Language="F#" Value="abstract member DeleteStatementWithHttpMessagesAsync : string * string * int * int * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Synapse.Models.LivyStatementCancellationResponse&gt;&gt;" Usage="iSparkSessionOperations.DeleteStatementWithHttpMessagesAsync (workspaceName, sparkPoolName, sessionId, statementId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Synapse</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Synapse.Models.LivyStatementCancellationResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workspaceName" Type="System.String" />
        <Parameter Name="sparkPoolName" Type="System.String" />
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="statementId" Type="System.Int32" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="workspaceName">To be added.</param>
        <param name="sparkPoolName">To be added.</param>
        <param name="sessionId">To be added.</param>
        <param name="statementId">To be added.</param>
        <param name="customHeaders">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&gt; DeleteWithHttpMessagesAsync (string workspaceName, string sparkPoolName, int sessionId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse&gt; DeleteWithHttpMessagesAsync(string workspaceName, string sparkPoolName, int32 sessionId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Synapse.ISparkSessionOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteWithHttpMessagesAsync (workspaceName As String, sparkPoolName As String, sessionId As Integer, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member DeleteWithHttpMessagesAsync : string * string * int * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&gt;" Usage="iSparkSessionOperations.DeleteWithHttpMessagesAsync (workspaceName, sparkPoolName, sessionId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Synapse</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workspaceName" Type="System.String" />
        <Parameter Name="sparkPoolName" Type="System.String" />
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="workspaceName">To be added.</param>
        <param name="sparkPoolName">To be added.</param>
        <param name="sessionId">To be added.</param>
        <param name="customHeaders">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStatementWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Synapse.Models.LivyStatementResponseBody&gt;&gt; GetStatementWithHttpMessagesAsync (string workspaceName, string sparkPoolName, int sessionId, int statementId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse`1&lt;class Microsoft.Azure.Synapse.Models.LivyStatementResponseBody&gt;&gt; GetStatementWithHttpMessagesAsync(string workspaceName, string sparkPoolName, int32 sessionId, int32 statementId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Synapse.ISparkSessionOperations.GetStatementWithHttpMessagesAsync(System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStatementWithHttpMessagesAsync (workspaceName As String, sparkPoolName As String, sessionId As Integer, statementId As Integer, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of LivyStatementResponseBody))" />
      <MemberSignature Language="F#" Value="abstract member GetStatementWithHttpMessagesAsync : string * string * int * int * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Synapse.Models.LivyStatementResponseBody&gt;&gt;" Usage="iSparkSessionOperations.GetStatementWithHttpMessagesAsync (workspaceName, sparkPoolName, sessionId, statementId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Synapse</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Synapse.Models.LivyStatementResponseBody&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workspaceName" Type="System.String" />
        <Parameter Name="sparkPoolName" Type="System.String" />
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="statementId" Type="System.Int32" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="workspaceName">To be added.</param>
        <param name="sparkPoolName">To be added.</param>
        <param name="sessionId">To be added.</param>
        <param name="statementId">To be added.</param>
        <param name="customHeaders">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Synapse.Models.ExtendedLivySessionResponse&gt;&gt; GetWithHttpMessagesAsync (string workspaceName, string sparkPoolName, int sessionId, bool? detailed = default, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse`1&lt;class Microsoft.Azure.Synapse.Models.ExtendedLivySessionResponse&gt;&gt; GetWithHttpMessagesAsync(string workspaceName, string sparkPoolName, int32 sessionId, valuetype System.Nullable`1&lt;bool&gt; detailed, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Synapse.ISparkSessionOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Int32,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWithHttpMessagesAsync (workspaceName As String, sparkPoolName As String, sessionId As Integer, Optional detailed As Nullable(Of Boolean) = Nothing, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of ExtendedLivySessionResponse))" />
      <MemberSignature Language="F#" Value="abstract member GetWithHttpMessagesAsync : string * string * int * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Synapse.Models.ExtendedLivySessionResponse&gt;&gt;" Usage="iSparkSessionOperations.GetWithHttpMessagesAsync (workspaceName, sparkPoolName, sessionId, detailed, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Synapse</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Synapse.Models.ExtendedLivySessionResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workspaceName" Type="System.String" />
        <Parameter Name="sparkPoolName" Type="System.String" />
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="detailed" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="workspaceName">To be added.</param>
        <param name="sparkPoolName">To be added.</param>
        <param name="sessionId">To be added.</param>
        <param name="detailed">To be added.</param>
        <param name="customHeaders">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListStatementsWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Synapse.Models.LivyStatementsResponseBody&gt;&gt; ListStatementsWithHttpMessagesAsync (string workspaceName, string sparkPoolName, int sessionId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse`1&lt;class Microsoft.Azure.Synapse.Models.LivyStatementsResponseBody&gt;&gt; ListStatementsWithHttpMessagesAsync(string workspaceName, string sparkPoolName, int32 sessionId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Synapse.ISparkSessionOperations.ListStatementsWithHttpMessagesAsync(System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListStatementsWithHttpMessagesAsync (workspaceName As String, sparkPoolName As String, sessionId As Integer, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of LivyStatementsResponseBody))" />
      <MemberSignature Language="F#" Value="abstract member ListStatementsWithHttpMessagesAsync : string * string * int * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Synapse.Models.LivyStatementsResponseBody&gt;&gt;" Usage="iSparkSessionOperations.ListStatementsWithHttpMessagesAsync (workspaceName, sparkPoolName, sessionId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Synapse</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Synapse.Models.LivyStatementsResponseBody&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workspaceName" Type="System.String" />
        <Parameter Name="sparkPoolName" Type="System.String" />
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="workspaceName">To be added.</param>
        <param name="sparkPoolName">To be added.</param>
        <param name="sessionId">To be added.</param>
        <param name="customHeaders">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Synapse.Models.ExtendedLivyListSessionResponse&gt;&gt; ListWithHttpMessagesAsync (string workspaceName, string sparkPoolName, int? fromParameter = default, int? size = default, bool? detailed = default, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse`1&lt;class Microsoft.Azure.Synapse.Models.ExtendedLivyListSessionResponse&gt;&gt; ListWithHttpMessagesAsync(string workspaceName, string sparkPoolName, valuetype System.Nullable`1&lt;int32&gt; fromParameter, valuetype System.Nullable`1&lt;int32&gt; size, valuetype System.Nullable`1&lt;bool&gt; detailed, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Synapse.ISparkSessionOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListWithHttpMessagesAsync (workspaceName As String, sparkPoolName As String, Optional fromParameter As Nullable(Of Integer) = Nothing, Optional size As Nullable(Of Integer) = Nothing, Optional detailed As Nullable(Of Boolean) = Nothing, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of ExtendedLivyListSessionResponse))" />
      <MemberSignature Language="F#" Value="abstract member ListWithHttpMessagesAsync : string * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Synapse.Models.ExtendedLivyListSessionResponse&gt;&gt;" Usage="iSparkSessionOperations.ListWithHttpMessagesAsync (workspaceName, sparkPoolName, fromParameter, size, detailed, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Synapse</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Synapse.Models.ExtendedLivyListSessionResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workspaceName" Type="System.String" />
        <Parameter Name="sparkPoolName" Type="System.String" />
        <Parameter Name="fromParameter" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="size" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="detailed" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="workspaceName">To be added.</param>
        <param name="sparkPoolName">To be added.</param>
        <param name="fromParameter">To be added.</param>
        <param name="size">To be added.</param>
        <param name="detailed">To be added.</param>
        <param name="customHeaders">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTimeoutWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&gt; ResetTimeoutWithHttpMessagesAsync (string workspaceName, string sparkPoolName, int sessionId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse&gt; ResetTimeoutWithHttpMessagesAsync(string workspaceName, string sparkPoolName, int32 sessionId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Synapse.ISparkSessionOperations.ResetTimeoutWithHttpMessagesAsync(System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResetTimeoutWithHttpMessagesAsync (workspaceName As String, sparkPoolName As String, sessionId As Integer, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member ResetTimeoutWithHttpMessagesAsync : string * string * int * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&gt;" Usage="iSparkSessionOperations.ResetTimeoutWithHttpMessagesAsync (workspaceName, sparkPoolName, sessionId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Synapse</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workspaceName" Type="System.String" />
        <Parameter Name="sparkPoolName" Type="System.String" />
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="workspaceName">To be added.</param>
        <param name="sparkPoolName">To be added.</param>
        <param name="sessionId">To be added.</param>
        <param name="customHeaders">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
