<Type Name="MapsRenderingClient" FullName="Azure.Maps.Rendering.MapsRenderingClient">
  <TypeSignature Language="C#" Value="public class MapsRenderingClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MapsRenderingClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Maps.Rendering.MapsRenderingClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MapsRenderingClient" />
  <TypeSignature Language="F#" Value="type MapsRenderingClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Maps.Rendering</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The Render service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MapsRenderingClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of MapsRenderingClient. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MapsRenderingClient (Azure.AzureKeyCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.AzureKeyCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.#ctor(Azure.AzureKeyCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (credential As AzureKeyCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Maps.Rendering.MapsRenderingClient : Azure.AzureKeyCredential -&gt; Azure.Maps.Rendering.MapsRenderingClient" Usage="new Azure.Maps.Rendering.MapsRenderingClient credential" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
      </Parameters>
      <Docs>
        <param name="credential"> Shared key credential used to authenticate to an Azure Maps Render Service. </param>
        <summary> Initializes a new instance of MapsRenderingClient. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MapsRenderingClient (Azure.AzureSasCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.AzureSasCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.#ctor(Azure.AzureSasCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (credential As AzureSasCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Maps.Rendering.MapsRenderingClient : Azure.AzureSasCredential -&gt; Azure.Maps.Rendering.MapsRenderingClient" Usage="new Azure.Maps.Rendering.MapsRenderingClient credential" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="credential" Type="Azure.AzureSasCredential" />
      </Parameters>
      <Docs>
        <param name="credential"> The Shared Access Signature credential used to connect to Azure. This signature
            can be constructed using the <see cref="T:Azure.AzureSasCredential" />.</param>
        <summary> Initializes a new instance of MapsRenderingClient. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MapsRenderingClient (Azure.AzureKeyCredential credential, Azure.Maps.Rendering.MapsRenderingClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.AzureKeyCredential credential, class Azure.Maps.Rendering.MapsRenderingClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.#ctor(Azure.AzureKeyCredential,Azure.Maps.Rendering.MapsRenderingClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (credential As AzureKeyCredential, options As MapsRenderingClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Maps.Rendering.MapsRenderingClient : Azure.AzureKeyCredential * Azure.Maps.Rendering.MapsRenderingClientOptions -&gt; Azure.Maps.Rendering.MapsRenderingClient" Usage="new Azure.Maps.Rendering.MapsRenderingClient (credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
        <Parameter Name="options" Type="Azure.Maps.Rendering.MapsRenderingClientOptions" />
      </Parameters>
      <Docs>
        <param name="credential"> Shared key credential used to authenticate to an Azure Maps Render Service. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of MapsRenderingClient. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MapsRenderingClient (Azure.AzureSasCredential credential, Azure.Maps.Rendering.MapsRenderingClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.AzureSasCredential credential, class Azure.Maps.Rendering.MapsRenderingClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.#ctor(Azure.AzureSasCredential,Azure.Maps.Rendering.MapsRenderingClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (credential As AzureSasCredential, options As MapsRenderingClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Maps.Rendering.MapsRenderingClient : Azure.AzureSasCredential * Azure.Maps.Rendering.MapsRenderingClientOptions -&gt; Azure.Maps.Rendering.MapsRenderingClient" Usage="new Azure.Maps.Rendering.MapsRenderingClient (credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="credential" Type="Azure.AzureSasCredential" />
        <Parameter Name="options" Type="Azure.Maps.Rendering.MapsRenderingClientOptions" />
      </Parameters>
      <Docs>
        <param name="credential"> The Shared Access Signature credential used to connect to Azure. This signature
            can be constructed using the <see cref="T:Azure.AzureSasCredential" />.</param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of MapsRenderingClient. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MapsRenderingClient (Azure.Core.TokenCredential credential, string clientId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Core.TokenCredential credential, string clientId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.#ctor(Azure.Core.TokenCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (credential As TokenCredential, clientId As String)" />
      <MemberSignature Language="F#" Value="new Azure.Maps.Rendering.MapsRenderingClient : Azure.Core.TokenCredential * string -&gt; Azure.Maps.Rendering.MapsRenderingClient" Usage="new Azure.Maps.Rendering.MapsRenderingClient (credential, clientId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="clientId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential"> A credential used to authenticate to an Azure Maps Render Service. </param>
        <param name="clientId"> Specifies which account is intended for usage in conjunction with the Microsoft Entra ID security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Microsoft Entra ID security in Azure Maps see the following <see href="https://aka.ms/amauthdetails">articles</see> for guidance. </param>
        <summary> Initializes a new instance of MapsRenderingClient. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MapsRenderingClient (Azure.Core.TokenCredential credential, string clientId, Azure.Maps.Rendering.MapsRenderingClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Core.TokenCredential credential, string clientId, class Azure.Maps.Rendering.MapsRenderingClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.#ctor(Azure.Core.TokenCredential,System.String,Azure.Maps.Rendering.MapsRenderingClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (credential As TokenCredential, clientId As String, options As MapsRenderingClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Maps.Rendering.MapsRenderingClient : Azure.Core.TokenCredential * string * Azure.Maps.Rendering.MapsRenderingClientOptions -&gt; Azure.Maps.Rendering.MapsRenderingClient" Usage="new Azure.Maps.Rendering.MapsRenderingClient (credential, clientId, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="options" Type="Azure.Maps.Rendering.MapsRenderingClientOptions" />
      </Parameters>
      <Docs>
        <param name="credential"> A credential used to authenticate to an Azure Maps Render Service. </param>
        <param name="clientId"> Specifies which account is intended for usage in conjunction with the Microsoft Entra ID security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Microsoft Entra ID security in Azure Maps see the following <see href="https://aka.ms/amauthdetails">articles</see> for guidance. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of MapsRenderingClient. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCopyrightCaption">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Maps.Rendering.CopyrightCaption&gt; GetCopyrightCaption (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Maps.Rendering.CopyrightCaption&gt; GetCopyrightCaption(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.GetCopyrightCaption(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCopyrightCaption (Optional cancellationToken As CancellationToken = Nothing) As Response(Of CopyrightCaption)" />
      <MemberSignature Language="F#" Value="abstract member GetCopyrightCaption : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Maps.Rendering.CopyrightCaption&gt;&#xA;override this.GetCopyrightCaption : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Maps.Rendering.CopyrightCaption&gt;" Usage="mapsRenderingClient.GetCopyrightCaption cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Maps.Rendering.CopyrightCaption&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Serve copyright information for Render Tile service.
            In addition to basic copyright for the whole map, API is serving specific groups of copyrights for some countries.
            As an alternative to copyrights for map request, one can receive captions
            for displaying the map provider information on the map.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCopyrightCaptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Maps.Rendering.CopyrightCaption&gt;&gt; GetCopyrightCaptionAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Maps.Rendering.CopyrightCaption&gt;&gt; GetCopyrightCaptionAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.GetCopyrightCaptionAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCopyrightCaptionAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CopyrightCaption))" />
      <MemberSignature Language="F#" Value="abstract member GetCopyrightCaptionAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Maps.Rendering.CopyrightCaption&gt;&gt;&#xA;override this.GetCopyrightCaptionAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Maps.Rendering.CopyrightCaption&gt;&gt;" Usage="mapsRenderingClient.GetCopyrightCaptionAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Maps.Rendering.CopyrightCaption&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Serve copyright information for Render Tile service.
            In addition to basic copyright for the whole map, API is serving specific groups of copyrights for some countries.
            As an alternative to copyrights for map request, one can receive captions
            for displaying the map provider information on the map.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCopyrightForTile">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Maps.Rendering.RenderCopyright&gt; GetCopyrightForTile (Azure.Maps.Rendering.MapTileIndex mapTileIndex, bool includeText = true, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Maps.Rendering.RenderCopyright&gt; GetCopyrightForTile(class Azure.Maps.Rendering.MapTileIndex mapTileIndex, bool includeText, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.GetCopyrightForTile(Azure.Maps.Rendering.MapTileIndex,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCopyrightForTile (mapTileIndex As MapTileIndex, Optional includeText As Boolean = true, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RenderCopyright)" />
      <MemberSignature Language="F#" Value="abstract member GetCopyrightForTile : Azure.Maps.Rendering.MapTileIndex * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Maps.Rendering.RenderCopyright&gt;&#xA;override this.GetCopyrightForTile : Azure.Maps.Rendering.MapTileIndex * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Maps.Rendering.RenderCopyright&gt;" Usage="mapsRenderingClient.GetCopyrightForTile (mapTileIndex, includeText, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Maps.Rendering.RenderCopyright&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapTileIndex" Type="Azure.Maps.Rendering.MapTileIndex" />
        <Parameter Name="includeText" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mapTileIndex">
            Zoom level, and coordinate of the tile on zoom grid.
            The value of X and Y coordinate in <c>renderTileIndex</c> must be in the range [0, (2^zoom)-1]].
            Please see <see href="https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid">Zoom Levels and Tile Grid</see> for details.
            </param>
        <param name="includeText"> Boolean value to include or exclude textual data from response. If <c>false</c>, only images and country names will be in response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Serve copyright information for Render Tile  service. In addition to basic copyright for the whole map, API is serving  specific groups of copyrights for some countries.
            Returns the copyright information for a given tile. To obtain the copyright information for a particular tile, the request should specify the tile's zoom level and x and y coordinates (see: Zoom Levels and Tile Grid).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="mapTileIndex" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCopyrightForTileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Maps.Rendering.RenderCopyright&gt;&gt; GetCopyrightForTileAsync (Azure.Maps.Rendering.MapTileIndex mapTileIndex, bool includeText = true, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Maps.Rendering.RenderCopyright&gt;&gt; GetCopyrightForTileAsync(class Azure.Maps.Rendering.MapTileIndex mapTileIndex, bool includeText, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.GetCopyrightForTileAsync(Azure.Maps.Rendering.MapTileIndex,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCopyrightForTileAsync (mapTileIndex As MapTileIndex, Optional includeText As Boolean = true, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RenderCopyright))" />
      <MemberSignature Language="F#" Value="abstract member GetCopyrightForTileAsync : Azure.Maps.Rendering.MapTileIndex * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Maps.Rendering.RenderCopyright&gt;&gt;&#xA;override this.GetCopyrightForTileAsync : Azure.Maps.Rendering.MapTileIndex * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Maps.Rendering.RenderCopyright&gt;&gt;" Usage="mapsRenderingClient.GetCopyrightForTileAsync (mapTileIndex, includeText, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Maps.Rendering.RenderCopyright&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapTileIndex" Type="Azure.Maps.Rendering.MapTileIndex" />
        <Parameter Name="includeText" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mapTileIndex">
            Zoom level, and coordinate of the tile on zoom grid.
            The value of X and Y coordinate in <c>renderTileIndex</c> must be in the range [0, (2^zoom)-1]].
            Please see <see href="https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid">Zoom Levels and Tile Grid</see> for details.
            </param>
        <param name="includeText"> Boolean value to include or exclude textual data from response. If <c>false</c>, only images and country names will be in response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Serve copyright information for Render Tile  service. In addition to basic copyright for the whole map, API is serving  specific groups of copyrights for some countries.
            Returns the copyright information for a given tile. To obtain the copyright information for a particular tile, the request should specify the tile's zoom level and x and y coordinates (see: Zoom Levels and Tile Grid).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="mapTileIndex" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCopyrightForWorld">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Maps.Rendering.RenderCopyright&gt; GetCopyrightForWorld (bool includeText = true, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Maps.Rendering.RenderCopyright&gt; GetCopyrightForWorld(bool includeText, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.GetCopyrightForWorld(System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCopyrightForWorld (Optional includeText As Boolean = true, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RenderCopyright)" />
      <MemberSignature Language="F#" Value="abstract member GetCopyrightForWorld : bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Maps.Rendering.RenderCopyright&gt;&#xA;override this.GetCopyrightForWorld : bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Maps.Rendering.RenderCopyright&gt;" Usage="mapsRenderingClient.GetCopyrightForWorld (includeText, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Maps.Rendering.RenderCopyright&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeText" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="includeText"> Boolean value to include or exclude textual data from response. If <c>false</c>, only images and country names will be in response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Serve copyright information for Render Tile  service. In addition to basic copyright for the whole map, API is serving  specific groups of copyrights for some countries.
            Returns the copyright information for the world. To obtain the default copyright information for the whole world, do not specify a tile or bounding box.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCopyrightForWorldAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Maps.Rendering.RenderCopyright&gt;&gt; GetCopyrightForWorldAsync (bool includeText = true, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Maps.Rendering.RenderCopyright&gt;&gt; GetCopyrightForWorldAsync(bool includeText, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.GetCopyrightForWorldAsync(System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCopyrightForWorldAsync (Optional includeText As Boolean = true, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RenderCopyright))" />
      <MemberSignature Language="F#" Value="abstract member GetCopyrightForWorldAsync : bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Maps.Rendering.RenderCopyright&gt;&gt;&#xA;override this.GetCopyrightForWorldAsync : bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Maps.Rendering.RenderCopyright&gt;&gt;" Usage="mapsRenderingClient.GetCopyrightForWorldAsync (includeText, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Maps.Rendering.RenderCopyright&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeText" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="includeText"> Boolean value to include or exclude textual data from response. If <c>false</c>, only images and country names will be in response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Serve copyright information for Render Tile  service. In addition to basic copyright for the whole map, API is serving  specific groups of copyrights for some countries.
            Returns the copyright information for the world. To obtain the default copyright information for the whole world, do not specify a tile or bounding box.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCopyrightFromBoundingBox">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Maps.Rendering.RenderCopyright&gt; GetCopyrightFromBoundingBox (Azure.Core.GeoJson.GeoBoundingBox geoBoundingBox, bool includeText = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Maps.Rendering.RenderCopyright&gt; GetCopyrightFromBoundingBox(class Azure.Core.GeoJson.GeoBoundingBox geoBoundingBox, bool includeText, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.GetCopyrightFromBoundingBox(Azure.Core.GeoJson.GeoBoundingBox,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCopyrightFromBoundingBox (geoBoundingBox As GeoBoundingBox, Optional includeText As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RenderCopyright)" />
      <MemberSignature Language="F#" Value="abstract member GetCopyrightFromBoundingBox : Azure.Core.GeoJson.GeoBoundingBox * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Maps.Rendering.RenderCopyright&gt;&#xA;override this.GetCopyrightFromBoundingBox : Azure.Core.GeoJson.GeoBoundingBox * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Maps.Rendering.RenderCopyright&gt;" Usage="mapsRenderingClient.GetCopyrightFromBoundingBox (geoBoundingBox, includeText, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Maps.Rendering.RenderCopyright&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geoBoundingBox" Type="Azure.Core.GeoJson.GeoBoundingBox" />
        <Parameter Name="includeText" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="geoBoundingBox"> Minimum coordinates (west, south, east, north) of bounding box in latitude longitude coordinate system. E.g. <c>GeoBoundingBox(4.84228, 52.41064, 4,84923, 52.41762)</c>. </param>
        <param name="includeText"> Boolean value to include or exclude textual data from response. Iㄑ<c>false</c>, only images and country names will be in response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns copyright information for a given bounding box. Bounding-box requests should specify the minimum and maximum longitude and latitude (EPSG-3857) coordinates
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="geoBoundingBox" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCopyrightFromBoundingBoxAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Maps.Rendering.RenderCopyright&gt;&gt; GetCopyrightFromBoundingBoxAsync (Azure.Core.GeoJson.GeoBoundingBox geoBoundingBox, bool includeText = true, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Maps.Rendering.RenderCopyright&gt;&gt; GetCopyrightFromBoundingBoxAsync(class Azure.Core.GeoJson.GeoBoundingBox geoBoundingBox, bool includeText, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.GetCopyrightFromBoundingBoxAsync(Azure.Core.GeoJson.GeoBoundingBox,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCopyrightFromBoundingBoxAsync (geoBoundingBox As GeoBoundingBox, Optional includeText As Boolean = true, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RenderCopyright))" />
      <MemberSignature Language="F#" Value="abstract member GetCopyrightFromBoundingBoxAsync : Azure.Core.GeoJson.GeoBoundingBox * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Maps.Rendering.RenderCopyright&gt;&gt;&#xA;override this.GetCopyrightFromBoundingBoxAsync : Azure.Core.GeoJson.GeoBoundingBox * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Maps.Rendering.RenderCopyright&gt;&gt;" Usage="mapsRenderingClient.GetCopyrightFromBoundingBoxAsync (geoBoundingBox, includeText, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Maps.Rendering.RenderCopyright&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geoBoundingBox" Type="Azure.Core.GeoJson.GeoBoundingBox" />
        <Parameter Name="includeText" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="geoBoundingBox"> Minimum coordinates (west, south, east, north) of bounding box in latitude longitude coordinate system. E.g. <c>GeoBoundingBox(4.84228, 52.41064, 4,84923, 52.41762)</c>. </param>
        <param name="includeText"> Boolean value to include or exclude textual data from response. If <c>false</c>, only images and country names will be in response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns copyright information for a given bounding box. Bounding-box requests should specify the minimum and maximum longitude and latitude (EPSG-3857) coordinates
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="geoBoundingBox" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMapCopyrightAttribution">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt; GetMapCopyrightAttribution (Azure.Maps.Rendering.MapTileSetId tileSetId, Azure.Core.GeoJson.GeoBoundingBox boundingBox, int? zoom = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;string&gt;&gt; GetMapCopyrightAttribution(valuetype Azure.Maps.Rendering.MapTileSetId tileSetId, class Azure.Core.GeoJson.GeoBoundingBox boundingBox, valuetype System.Nullable`1&lt;int32&gt; zoom, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.GetMapCopyrightAttribution(Azure.Maps.Rendering.MapTileSetId,Azure.Core.GeoJson.GeoBoundingBox,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMapCopyrightAttribution (tileSetId As MapTileSetId, boundingBox As GeoBoundingBox, Optional zoom As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IReadOnlyList(Of String))" />
      <MemberSignature Language="F#" Value="abstract member GetMapCopyrightAttribution : Azure.Maps.Rendering.MapTileSetId * Azure.Core.GeoJson.GeoBoundingBox * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;&#xA;override this.GetMapCopyrightAttribution : Azure.Maps.Rendering.MapTileSetId * Azure.Core.GeoJson.GeoBoundingBox * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;" Usage="mapsRenderingClient.GetMapCopyrightAttribution (tileSetId, boundingBox, zoom, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tileSetId" Type="Azure.Maps.Rendering.MapTileSetId" />
        <Parameter Name="boundingBox" Type="Azure.Core.GeoJson.GeoBoundingBox" />
        <Parameter Name="zoom" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tileSetId"> A tileset is a collection of raster or vector data broken up into a uniform grid of square tiles at preset zoom levels. Every tileset has a <see cref="T:Azure.Maps.Rendering.MapTileSetId" /> to use when making requests. The <see cref="T:Azure.Maps.Rendering.MapTileSetId" /> for tilesets created using <see href="https://aka.ms/amcreator">Azure Maps Creator</see> are generated through the <see href="https://docs.microsoft.com/rest/api/maps-creator/tileset">Tileset Create API</see>. The ready-to-use tilesets supplied by Azure Maps are listed below. For example, <c>microsoft.base</c>. </param>
        <param name="zoom"> Zoom level for the desired map attribution. Available values are 0 to 22. </param>
        <param name="boundingBox"> The <see cref="T:Azure.Core.GeoJson.GeoBoundingBox" /> that represents the rectangular area of a bounding box. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The Get Map Attribution API allows users to request map copyright attribution information for a section of a tileset.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tileSetId" /> or <paramref name="boundingBox" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMapCopyrightAttributionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;&gt; GetMapCopyrightAttributionAsync (Azure.Maps.Rendering.MapTileSetId tileSetId, Azure.Core.GeoJson.GeoBoundingBox boundingBox, int? zoom = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;string&gt;&gt;&gt; GetMapCopyrightAttributionAsync(valuetype Azure.Maps.Rendering.MapTileSetId tileSetId, class Azure.Core.GeoJson.GeoBoundingBox boundingBox, valuetype System.Nullable`1&lt;int32&gt; zoom, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.GetMapCopyrightAttributionAsync(Azure.Maps.Rendering.MapTileSetId,Azure.Core.GeoJson.GeoBoundingBox,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMapCopyrightAttributionAsync (tileSetId As MapTileSetId, boundingBox As GeoBoundingBox, Optional zoom As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IReadOnlyList(Of String)))" />
      <MemberSignature Language="F#" Value="abstract member GetMapCopyrightAttributionAsync : Azure.Maps.Rendering.MapTileSetId * Azure.Core.GeoJson.GeoBoundingBox * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;&gt;&#xA;override this.GetMapCopyrightAttributionAsync : Azure.Maps.Rendering.MapTileSetId * Azure.Core.GeoJson.GeoBoundingBox * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;&gt;" Usage="mapsRenderingClient.GetMapCopyrightAttributionAsync (tileSetId, boundingBox, zoom, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;System.String&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tileSetId" Type="Azure.Maps.Rendering.MapTileSetId" />
        <Parameter Name="boundingBox" Type="Azure.Core.GeoJson.GeoBoundingBox" />
        <Parameter Name="zoom" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tileSetId"> A tileset is a collection of raster or vector data broken up into a uniform grid of square tiles at preset zoom levels. Every tileset has a <see cref="T:Azure.Maps.Rendering.MapTileSetId" /> to use when making requests. The <see cref="T:Azure.Maps.Rendering.MapTileSetId" /> for tilesets created using <see href="https://aka.ms/amcreator">Azure Maps Creator</see> are generated through the <see href="https://docs.microsoft.com/rest/api/maps-creator/tileset">Tileset Create API</see>. The ready-to-use tilesets supplied by Azure Maps are listed below. For example, <c>microsoft.base</c>. </param>
        <param name="zoom"> Zoom level for the desired map attribution. Available values are 0 to 22. </param>
        <param name="boundingBox"> The <see cref="T:Azure.Core.GeoJson.GeoBoundingBox" /> that represents the rectangular area of a bounding box. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The Get Map Attribution API allows users to request map copyright attribution information for a section of a tileset.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tileSetId" /> or <paramref name="boundingBox" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMapStateTile">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.IO.Stream&gt; GetMapStateTile (string stateSetId, Azure.Maps.Rendering.MapTileIndex mapTileIndex, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.IO.Stream&gt; GetMapStateTile(string stateSetId, class Azure.Maps.Rendering.MapTileIndex mapTileIndex, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.GetMapStateTile(System.String,Azure.Maps.Rendering.MapTileIndex,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMapStateTile (stateSetId As String, mapTileIndex As MapTileIndex, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Stream)" />
      <MemberSignature Language="F#" Value="abstract member GetMapStateTile : string * Azure.Maps.Rendering.MapTileIndex * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.IO.Stream&gt;&#xA;override this.GetMapStateTile : string * Azure.Maps.Rendering.MapTileIndex * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.IO.Stream&gt;" Usage="mapsRenderingClient.GetMapStateTile (stateSetId, mapTileIndex, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSetId" Type="System.String" />
        <Parameter Name="mapTileIndex" Type="Azure.Maps.Rendering.MapTileIndex" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="stateSetId"> The state set id. </param>
        <param name="mapTileIndex">
            Zoom level, and coordinate of the tile on zoom grid.
            The value of X and Y coordinate in <c>mapTileIndex</c> must be in the range [0, (2^zoom)-1].
            Please see <see href="https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid">Zoom Levels and Tile Grid</see> for details.
            </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetches state tiles in vector format typically to be integrated into indoor maps module of map control or SDK. The map control will call this API after user turns on dynamic styling (see <see href="https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid">Zoom Levels and Tile Grid</see>)
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stateSetId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMapStateTileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt; GetMapStateTileAsync (string stateSetId, Azure.Maps.Rendering.MapTileIndex mapTileIndex, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.IO.Stream&gt;&gt; GetMapStateTileAsync(string stateSetId, class Azure.Maps.Rendering.MapTileIndex mapTileIndex, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.GetMapStateTileAsync(System.String,Azure.Maps.Rendering.MapTileIndex,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMapStateTileAsync (stateSetId As String, mapTileIndex As MapTileIndex, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Stream))" />
      <MemberSignature Language="F#" Value="abstract member GetMapStateTileAsync : string * Azure.Maps.Rendering.MapTileIndex * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt;&#xA;override this.GetMapStateTileAsync : string * Azure.Maps.Rendering.MapTileIndex * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt;" Usage="mapsRenderingClient.GetMapStateTileAsync (stateSetId, mapTileIndex, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSetId" Type="System.String" />
        <Parameter Name="mapTileIndex" Type="Azure.Maps.Rendering.MapTileIndex" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="stateSetId"> The state set id for indoor map. </param>
        <param name="mapTileIndex">
            Zoom level, and coordinate of the tile on zoom grid.
            The value of X and Y coordinate in <c>mapTileIndex</c> must be in the range [0, (2^zoom)-1].
            Please see <see href="https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid">Zoom Levels and Tile Grid</see> for details.
            </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetches state tiles in vector format typically to be integrated into indoor maps module of map control or SDK. The map control will call this API after user turns on dynamic styling (see <see href="https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid">Zoom Levels and Tile Grid</see>)
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stateSetId" /> or <paramref name="mapTileIndex" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMapStaticImage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.IO.Stream&gt; GetMapStaticImage (Azure.Maps.Rendering.GetMapStaticImageOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.IO.Stream&gt; GetMapStaticImage(class Azure.Maps.Rendering.GetMapStaticImageOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.GetMapStaticImage(Azure.Maps.Rendering.GetMapStaticImageOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMapStaticImage (options As GetMapStaticImageOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Stream)" />
      <MemberSignature Language="F#" Value="abstract member GetMapStaticImage : Azure.Maps.Rendering.GetMapStaticImageOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.IO.Stream&gt;&#xA;override this.GetMapStaticImage : Azure.Maps.Rendering.GetMapStaticImageOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.IO.Stream&gt;" Usage="mapsRenderingClient.GetMapStaticImage (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Maps.Rendering.GetMapStaticImageOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> The options for configuring the static image. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The API renders a user-defined, rectangular image containing a map section using a zoom level. If you are deciding when to use the static image service over the map tile service, you may want to consider how you would like to interact with the rendered map. If the map contents will be relatively unchanging, a static map is a good choice. If you want to support a lot of zooming, panning and changing of the map content, the map tile service would be a better choice.
            The service also provides Image Composition functionality to get a static image back with additional data.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMapStaticImageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt; GetMapStaticImageAsync (Azure.Maps.Rendering.GetMapStaticImageOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.IO.Stream&gt;&gt; GetMapStaticImageAsync(class Azure.Maps.Rendering.GetMapStaticImageOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.GetMapStaticImageAsync(Azure.Maps.Rendering.GetMapStaticImageOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMapStaticImageAsync (options As GetMapStaticImageOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Stream))" />
      <MemberSignature Language="F#" Value="abstract member GetMapStaticImageAsync : Azure.Maps.Rendering.GetMapStaticImageOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt;&#xA;override this.GetMapStaticImageAsync : Azure.Maps.Rendering.GetMapStaticImageOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt;" Usage="mapsRenderingClient.GetMapStaticImageAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Maps.Rendering.GetMapStaticImageOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> The options for configuring the static image. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The API renders a user-defined, rectangular image containing a map section using a zoom level. If you are deciding when to use the static image service over the map tile service, you may want to consider how you would like to interact with the rendered map. If the map contents will be relatively unchanging, a static map is a good choice. If you want to support a lot of zooming, panning and changing of the map content, the map tile service would be a better choice.
            The service also provides Image Composition functionality to get a static image back with additional data.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMapTile">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.IO.Stream&gt; GetMapTile (Azure.Maps.Rendering.GetMapTileOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.IO.Stream&gt; GetMapTile(class Azure.Maps.Rendering.GetMapTileOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.GetMapTile(Azure.Maps.Rendering.GetMapTileOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMapTile (options As GetMapTileOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Stream)" />
      <MemberSignature Language="F#" Value="abstract member GetMapTile : Azure.Maps.Rendering.GetMapTileOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.IO.Stream&gt;&#xA;override this.GetMapTile : Azure.Maps.Rendering.GetMapTileOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.IO.Stream&gt;" Usage="mapsRenderingClient.GetMapTile (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Maps.Rendering.GetMapTileOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> The options for configuring the static image. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetches map tiles in vector or raster format typically to be integrated into a new map control or SDK. By default, Azure uses vector map tiles for its web map control (see <see href="https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid">Zoom Levels and Tile Grid</see>)
            Note: Weather tiles are only available via <see href="https://aka.ms/AzureMapsWeatherTiles">Get Map Tile V2 API</see>. We recommend to start to use the new <see href="https://aka.ms/GetMapTileV2">Get Map Tile V2 API</see>.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="options" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMapTileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt; GetMapTileAsync (Azure.Maps.Rendering.GetMapTileOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.IO.Stream&gt;&gt; GetMapTileAsync(class Azure.Maps.Rendering.GetMapTileOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.GetMapTileAsync(Azure.Maps.Rendering.GetMapTileOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMapTileAsync (options As GetMapTileOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Stream))" />
      <MemberSignature Language="F#" Value="abstract member GetMapTileAsync : Azure.Maps.Rendering.GetMapTileOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt;&#xA;override this.GetMapTileAsync : Azure.Maps.Rendering.GetMapTileOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt;" Usage="mapsRenderingClient.GetMapTileAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Maps.Rendering.GetMapTileOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> The options for configuring the static image. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetches map tiles in vector or raster format typically to be integrated into a new map control or SDK. By default, Azure uses vector map tiles for its web map control (see <see href="https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid">Zoom Levels and Tile Grid</see>)
            Note: Weather tiles are only available via <see href="https://aka.ms/AzureMapsWeatherTiles">Get Map Tile V2 API</see>. We recommend to start to use the new <see href="https://aka.ms/GetMapTileV2">Get Map Tile V2 API</see>.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="options" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMapTileSet">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Maps.Rendering.MapTileSet&gt; GetMapTileSet (Azure.Maps.Rendering.MapTileSetId tileSetId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Maps.Rendering.MapTileSet&gt; GetMapTileSet(valuetype Azure.Maps.Rendering.MapTileSetId tileSetId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.GetMapTileSet(Azure.Maps.Rendering.MapTileSetId,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMapTileSet (tileSetId As MapTileSetId, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MapTileSet)" />
      <MemberSignature Language="F#" Value="abstract member GetMapTileSet : Azure.Maps.Rendering.MapTileSetId * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Maps.Rendering.MapTileSet&gt;&#xA;override this.GetMapTileSet : Azure.Maps.Rendering.MapTileSetId * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Maps.Rendering.MapTileSet&gt;" Usage="mapsRenderingClient.GetMapTileSet (tileSetId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Maps.Rendering.MapTileSet&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tileSetId" Type="Azure.Maps.Rendering.MapTileSetId" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tileSetId"> A tileset is a collection of raster or vector data broken up into a uniform grid of square tiles at preset zoom levels. Every tileset has a <see cref="T:Azure.Maps.Rendering.MapTileSetId" /> to use when making requests. The <see cref="T:Azure.Maps.Rendering.MapTileSetId" /> for tilesets created using <see href="https://aka.ms/amcreator">Azure Maps Creator</see> are generated through the <see href="https://docs.microsoft.com/rest/api/maps-creator/tileset">Tileset Create API</see>. The ready-to-use tilesets supplied by Azure Maps are listed below. For example, <c>microsoft.base</c>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The Get Map Tileset API allows users to request metadata for a tileset.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tileSetId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMapTileSetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Maps.Rendering.MapTileSet&gt;&gt; GetMapTileSetAsync (Azure.Maps.Rendering.MapTileSetId tileSetId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Maps.Rendering.MapTileSet&gt;&gt; GetMapTileSetAsync(valuetype Azure.Maps.Rendering.MapTileSetId tileSetId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.GetMapTileSetAsync(Azure.Maps.Rendering.MapTileSetId,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMapTileSetAsync (tileSetId As MapTileSetId, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MapTileSet))" />
      <MemberSignature Language="F#" Value="abstract member GetMapTileSetAsync : Azure.Maps.Rendering.MapTileSetId * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Maps.Rendering.MapTileSet&gt;&gt;&#xA;override this.GetMapTileSetAsync : Azure.Maps.Rendering.MapTileSetId * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Maps.Rendering.MapTileSet&gt;&gt;" Usage="mapsRenderingClient.GetMapTileSetAsync (tileSetId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Maps.Rendering.MapTileSet&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tileSetId" Type="Azure.Maps.Rendering.MapTileSetId" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tileSetId"> A tileset is a collection of raster or vector data broken up into a uniform grid of square tiles at preset zoom levels. Every tileset has a <see cref="T:Azure.Maps.Rendering.MapTileSetId" /> to use when making requests. The <see cref="T:Azure.Maps.Rendering.MapTileSetId" /> for tilesets created using <see href="https://aka.ms/amcreator">Azure Maps Creator</see> are generated through the <see href="https://docs.microsoft.com/rest/api/maps-creator/tileset">Tileset Create API</see>. The ready-to-use tilesets supplied by Azure Maps are listed below. For example, <c>microsoft.base</c>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The Get Map Tileset API allows users to request metadata for a tileset.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tileSetId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="PositionToTileXY">
      <MemberSignature Language="C#" Value="public static Azure.Maps.Rendering.MapTileIndex PositionToTileXY (Azure.Core.GeoJson.GeoPosition position, int zoom, int tileSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Maps.Rendering.MapTileIndex PositionToTileXY(valuetype Azure.Core.GeoJson.GeoPosition position, int32 zoom, int32 tileSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.PositionToTileXY(Azure.Core.GeoJson.GeoPosition,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PositionToTileXY (position As GeoPosition, zoom As Integer, tileSize As Integer) As MapTileIndex" />
      <MemberSignature Language="F#" Value="static member PositionToTileXY : Azure.Core.GeoJson.GeoPosition * int * int -&gt; Azure.Maps.Rendering.MapTileIndex" Usage="Azure.Maps.Rendering.MapsRenderingClient.PositionToTileXY (position, zoom, tileSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Maps.Rendering.MapTileIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Azure.Core.GeoJson.GeoPosition" />
        <Parameter Name="zoom" Type="System.Int32" />
        <Parameter Name="tileSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">Position coordinate in the format of GeoPosition</param>
        <param name="zoom">Zoom level</param>
        <param name="tileSize">The size of the tiles in the tile pyramid.</param>
        <summary>
            Calculates the XY tile coordinates that a coordinate falls into for a specific zoom level.
            </summary>
        <returns>A tile index contains the tile X, Y index and zoom level.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TileXYToBoundingBox">
      <MemberSignature Language="C#" Value="public static Azure.Core.GeoJson.GeoBoundingBox TileXYToBoundingBox (Azure.Maps.Rendering.MapTileIndex mapTileIndex, int tileSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.GeoJson.GeoBoundingBox TileXYToBoundingBox(class Azure.Maps.Rendering.MapTileIndex mapTileIndex, int32 tileSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Rendering.MapsRenderingClient.TileXYToBoundingBox(Azure.Maps.Rendering.MapTileIndex,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TileXYToBoundingBox (mapTileIndex As MapTileIndex, tileSize As Integer) As GeoBoundingBox" />
      <MemberSignature Language="F#" Value="static member TileXYToBoundingBox : Azure.Maps.Rendering.MapTileIndex * int -&gt; Azure.Core.GeoJson.GeoBoundingBox" Usage="Azure.Maps.Rendering.MapsRenderingClient.TileXYToBoundingBox (mapTileIndex, tileSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Rendering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.GeoJson.GeoBoundingBox</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapTileIndex" Type="Azure.Maps.Rendering.MapTileIndex" />
        <Parameter Name="tileSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mapTileIndex">Tile X, Y coordinate and zoom level</param>
        <param name="tileSize">The size of the tiles in the tile pyramid.</param>
        <summary>
            Calculates the bounding box of a tile.
            </summary>
        <returns>A bounding box of the tile defined as an array of numbers in the format of GeoBoundingBox.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
