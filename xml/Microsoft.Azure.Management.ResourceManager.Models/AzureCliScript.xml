<Type Name="AzureCliScript" FullName="Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript">
  <TypeSignature Language="C#" Value="public class AzureCliScript : Microsoft.Azure.Management.ResourceManager.Models.DeploymentScript" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AzureCliScript extends Microsoft.Azure.Management.ResourceManager.Models.DeploymentScript" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript" />
  <TypeSignature Language="VB.NET" Value="Public Class AzureCliScript&#xA;Inherits DeploymentScript" />
  <TypeSignature Language="F#" Value="type AzureCliScript = class&#xA;    inherit DeploymentScript" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Management.ResourceManager.Models.DeploymentScript</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.Rest.Serialization.JsonTransformation]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.Rest.Serialization.JsonTransformation&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Newtonsoft.Json.JsonObject("AzureCLI")]</AttributeName>
      <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonObject("AzureCLI")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Object model for the Azure CLI script.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AzureCliScript ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the AzureCliScript class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AzureCliScript (string location, TimeSpan retentionInterval, string azCliVersion, string id = default, string name = default, string type = default, Microsoft.Azure.Management.ResourceManager.Models.ManagedServiceIdentity identity = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Microsoft.Azure.Management.ResourceManager.Models.SystemData systemData = default, Microsoft.Azure.Management.ResourceManager.Models.ContainerConfiguration containerSettings = default, Microsoft.Azure.Management.ResourceManager.Models.StorageAccountConfiguration storageAccountSettings = default, string cleanupPreference = default, string provisioningState = default, Microsoft.Azure.Management.ResourceManager.Models.ScriptStatus status = default, System.Collections.Generic.IDictionary&lt;string,object&gt; outputs = default, string primaryScriptUri = default, System.Collections.Generic.IList&lt;string&gt; supportingScriptUris = default, string scriptContent = default, string arguments = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ResourceManager.Models.EnvironmentVariable&gt; environmentVariables = default, string forceUpdateTag = default, TimeSpan? timeout = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string location, valuetype System.TimeSpan retentionInterval, string azCliVersion, string id, string name, string type, class Microsoft.Azure.Management.ResourceManager.Models.ManagedServiceIdentity identity, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, class Microsoft.Azure.Management.ResourceManager.Models.SystemData systemData, class Microsoft.Azure.Management.ResourceManager.Models.ContainerConfiguration containerSettings, class Microsoft.Azure.Management.ResourceManager.Models.StorageAccountConfiguration storageAccountSettings, string cleanupPreference, string provisioningState, class Microsoft.Azure.Management.ResourceManager.Models.ScriptStatus status, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; outputs, string primaryScriptUri, class System.Collections.Generic.IList`1&lt;string&gt; supportingScriptUris, string scriptContent, string arguments, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ResourceManager.Models.EnvironmentVariable&gt; environmentVariables, string forceUpdateTag, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.#ctor(System.String,System.TimeSpan,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ManagedServiceIdentity,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.ResourceManager.Models.SystemData,Microsoft.Azure.Management.ResourceManager.Models.ContainerConfiguration,Microsoft.Azure.Management.ResourceManager.Models.StorageAccountConfiguration,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScriptStatus,System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Collections.Generic.IList{System.String},System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.EnvironmentVariable},System.String,System.Nullable{System.TimeSpan})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (location As String, retentionInterval As TimeSpan, azCliVersion As String, Optional id As String = Nothing, Optional name As String = Nothing, Optional type As String = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional systemData As SystemData = Nothing, Optional containerSettings As ContainerConfiguration = Nothing, Optional storageAccountSettings As StorageAccountConfiguration = Nothing, Optional cleanupPreference As String = Nothing, Optional provisioningState As String = Nothing, Optional status As ScriptStatus = Nothing, Optional outputs As IDictionary(Of String, Object) = Nothing, Optional primaryScriptUri As String = Nothing, Optional supportingScriptUris As IList(Of String) = Nothing, Optional scriptContent As String = Nothing, Optional arguments As String = Nothing, Optional environmentVariables As IList(Of EnvironmentVariable) = Nothing, Optional forceUpdateTag As String = Nothing, Optional timeout As Nullable(Of TimeSpan) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript : string * TimeSpan * string * string * string * string * Microsoft.Azure.Management.ResourceManager.Models.ManagedServiceIdentity * System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Azure.Management.ResourceManager.Models.SystemData * Microsoft.Azure.Management.ResourceManager.Models.ContainerConfiguration * Microsoft.Azure.Management.ResourceManager.Models.StorageAccountConfiguration * string * string * Microsoft.Azure.Management.ResourceManager.Models.ScriptStatus * System.Collections.Generic.IDictionary&lt;string, obj&gt; * string * System.Collections.Generic.IList&lt;string&gt; * string * string * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ResourceManager.Models.EnvironmentVariable&gt; * string * Nullable&lt;TimeSpan&gt; -&gt; Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript" Usage="new Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript (location, retentionInterval, azCliVersion, id, name, type, identity, tags, systemData, containerSettings, storageAccountSettings, cleanupPreference, provisioningState, status, outputs, primaryScriptUri, supportingScriptUris, scriptContent, arguments, environmentVariables, forceUpdateTag, timeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="location" Type="System.String" />
        <Parameter Name="retentionInterval" Type="System.TimeSpan" />
        <Parameter Name="azCliVersion" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="identity" Type="Microsoft.Azure.Management.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="systemData" Type="Microsoft.Azure.Management.ResourceManager.Models.SystemData" />
        <Parameter Name="containerSettings" Type="Microsoft.Azure.Management.ResourceManager.Models.ContainerConfiguration" />
        <Parameter Name="storageAccountSettings" Type="Microsoft.Azure.Management.ResourceManager.Models.StorageAccountConfiguration" />
        <Parameter Name="cleanupPreference" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="status" Type="Microsoft.Azure.Management.ResourceManager.Models.ScriptStatus" />
        <Parameter Name="outputs" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="primaryScriptUri" Type="System.String" />
        <Parameter Name="supportingScriptUris" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="scriptContent" Type="System.String" />
        <Parameter Name="arguments" Type="System.String" />
        <Parameter Name="environmentVariables" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ResourceManager.Models.EnvironmentVariable&gt;" />
        <Parameter Name="forceUpdateTag" Type="System.String" />
        <Parameter Name="timeout" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="location">The location of the ACI and the storage
            account for the deployment script.</param>
        <param name="retentionInterval">Interval for which the service
            retains the script resource after it reaches a terminal state.
            Resource will be deleted when this duration expires. Duration is
            based on ISO 8601 pattern (for example P7D means one week).</param>
        <param name="azCliVersion">Azure CLI module version to be
            used.</param>
        <param name="id">String Id used to locate any resource on
            Azure.</param>
        <param name="name">Name of this resource.</param>
        <param name="type">Type of this resource.</param>
        <param name="identity">Optional property. Managed identity to be
            used for this deployment script. Currently, only user-assigned MSI
            is supported.</param>
        <param name="tags">Resource tags.</param>
        <param name="systemData">The system metadata related to this
            resource.</param>
        <param name="containerSettings">Container settings.</param>
        <param name="storageAccountSettings">Storage Account
            settings.</param>
        <param name="cleanupPreference">The clean up preference when the
            script execution gets in a terminal state. Default setting is
            'Always'. Possible values include: 'Always', 'OnSuccess',
            'OnExpiration'</param>
        <param name="provisioningState">State of the script execution. This
            only appears in the response. Possible values include: 'Creating',
            'ProvisioningResources', 'Running', 'Succeeded', 'Failed',
            'Canceled'</param>
        <param name="status">Contains the results of script
            execution.</param>
        <param name="outputs">List of script outputs.</param>
        <param name="primaryScriptUri">Uri for the script. This is the
            entry point for the external script.</param>
        <param name="supportingScriptUris">Supporting files for the
            external script.</param>
        <param name="scriptContent">Script body.</param>
        <param name="arguments">Command line arguments to pass to the
            script. Arguments are separated by spaces. ex: -Name blue*
            -Location 'West US 2' </param>
        <param name="environmentVariables">The environment variables to
            pass over to the script.</param>
        <param name="forceUpdateTag">Gets or sets how the deployment script
            should be forced to execute even if the script resource has not
            changed. Can be current time stamp or a GUID.</param>
        <param name="timeout">Maximum allowed script execution time
            specified in ISO 8601 format. Default value is PT1H</param>
        <summary>
            Initializes a new instance of the AzureCliScript class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public string Arguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Arguments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public Property Arguments As String" />
      <MemberSignature Language="F#" Value="member this.Arguments : string with get, set" Usage="Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.arguments")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.arguments")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets command line arguments to pass to the script.
            Arguments are separated by spaces. ex: -Name blue* -Location 'West
            US 2'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AzCliVersion">
      <MemberSignature Language="C#" Value="public string AzCliVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AzCliVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.AzCliVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property AzCliVersion As String" />
      <MemberSignature Language="F#" Value="member this.AzCliVersion : string with get, set" Usage="Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.AzCliVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.azCliVersion")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.azCliVersion")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets azure CLI module version to be used.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanupPreference">
      <MemberSignature Language="C#" Value="public string CleanupPreference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CleanupPreference" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.CleanupPreference" />
      <MemberSignature Language="VB.NET" Value="Public Property CleanupPreference As String" />
      <MemberSignature Language="F#" Value="member this.CleanupPreference : string with get, set" Usage="Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.CleanupPreference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.cleanupPreference")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.cleanupPreference")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the clean up preference when the script execution gets
            in a terminal state. Default setting is 'Always'. Possible values
            include: 'Always', 'OnSuccess', 'OnExpiration'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerSettings">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ResourceManager.Models.ContainerConfiguration ContainerSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ResourceManager.Models.ContainerConfiguration ContainerSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.ContainerSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property ContainerSettings As ContainerConfiguration" />
      <MemberSignature Language="F#" Value="member this.ContainerSettings : Microsoft.Azure.Management.ResourceManager.Models.ContainerConfiguration with get, set" Usage="Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.ContainerSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.containerSettings")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.containerSettings")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ResourceManager.Models.ContainerConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets container settings.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvironmentVariables">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ResourceManager.Models.EnvironmentVariable&gt; EnvironmentVariables { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ResourceManager.Models.EnvironmentVariable&gt; EnvironmentVariables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.EnvironmentVariables" />
      <MemberSignature Language="VB.NET" Value="Public Property EnvironmentVariables As IList(Of EnvironmentVariable)" />
      <MemberSignature Language="F#" Value="member this.EnvironmentVariables : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ResourceManager.Models.EnvironmentVariable&gt; with get, set" Usage="Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.EnvironmentVariables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.environmentVariables")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.environmentVariables")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ResourceManager.Models.EnvironmentVariable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the environment variables to pass over to the script.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceUpdateTag">
      <MemberSignature Language="C#" Value="public string ForceUpdateTag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ForceUpdateTag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.ForceUpdateTag" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceUpdateTag As String" />
      <MemberSignature Language="F#" Value="member this.ForceUpdateTag : string with get, set" Usage="Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.ForceUpdateTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.forceUpdateTag")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.forceUpdateTag")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets how the deployment script should be forced to execute
            even if the script resource has not changed. Can be current time
            stamp or a GUID.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outputs">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; Outputs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Outputs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.Outputs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Outputs As IDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="member this.Outputs : System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.Outputs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.outputs")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.outputs")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets list of script outputs.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryScriptUri">
      <MemberSignature Language="C#" Value="public string PrimaryScriptUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrimaryScriptUri" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.PrimaryScriptUri" />
      <MemberSignature Language="VB.NET" Value="Public Property PrimaryScriptUri As String" />
      <MemberSignature Language="F#" Value="member this.PrimaryScriptUri : string with get, set" Usage="Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.PrimaryScriptUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.primaryScriptUri")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.primaryScriptUri")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets uri for the script. This is the entry point for the
            external script.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvisioningState">
      <MemberSignature Language="C#" Value="public string ProvisioningState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProvisioningState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.ProvisioningState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProvisioningState As String" />
      <MemberSignature Language="F#" Value="member this.ProvisioningState : string" Usage="Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.ProvisioningState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.provisioningState")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.provisioningState")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets state of the script execution. This only appears in the
            response. Possible values include: 'Creating',
            'ProvisioningResources', 'Running', 'Succeeded', 'Failed',
            'Canceled'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetentionInterval">
      <MemberSignature Language="C#" Value="public TimeSpan RetentionInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RetentionInterval" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.RetentionInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property RetentionInterval As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.RetentionInterval : TimeSpan with get, set" Usage="Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.RetentionInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.retentionInterval")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.retentionInterval")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets interval for which the service retains the script
            resource after it reaches a terminal state. Resource will be
            deleted when this duration expires. Duration is based on ISO 8601
            pattern (for example P7D means one week).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptContent">
      <MemberSignature Language="C#" Value="public string ScriptContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScriptContent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.ScriptContent" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptContent As String" />
      <MemberSignature Language="F#" Value="member this.ScriptContent : string with get, set" Usage="Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.ScriptContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.scriptContent")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.scriptContent")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets script body.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ResourceManager.Models.ScriptStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ResourceManager.Models.ScriptStatus Status" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As ScriptStatus" />
      <MemberSignature Language="F#" Value="member this.Status : Microsoft.Azure.Management.ResourceManager.Models.ScriptStatus" Usage="Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.status")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.status")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ResourceManager.Models.ScriptStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets contains the results of script execution.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccountSettings">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ResourceManager.Models.StorageAccountConfiguration StorageAccountSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ResourceManager.Models.StorageAccountConfiguration StorageAccountSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.StorageAccountSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property StorageAccountSettings As StorageAccountConfiguration" />
      <MemberSignature Language="F#" Value="member this.StorageAccountSettings : Microsoft.Azure.Management.ResourceManager.Models.StorageAccountConfiguration with get, set" Usage="Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.StorageAccountSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.storageAccountSettings")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.storageAccountSettings")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ResourceManager.Models.StorageAccountConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets storage Account settings.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportingScriptUris">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; SupportingScriptUris { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; SupportingScriptUris" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.SupportingScriptUris" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportingScriptUris As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.SupportingScriptUris : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.SupportingScriptUris" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.supportingScriptUris")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.supportingScriptUris")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets supporting files for the external script.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public TimeSpan? Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; Timeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Nullable(Of TimeSpan)" />
      <MemberSignature Language="F#" Value="member this.Timeout : Nullable&lt;TimeSpan&gt; with get, set" Usage="Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.timeout")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.timeout")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets maximum allowed script execution time specified in ISO
            8601 format. Default value is PT1H
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate ()" />
      <MemberSignature Language="F#" Value="override this.Validate : unit -&gt; unit" Usage="azureCliScript.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
