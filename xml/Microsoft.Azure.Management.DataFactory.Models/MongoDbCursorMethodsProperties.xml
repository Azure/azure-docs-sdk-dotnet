<Type Name="MongoDbCursorMethodsProperties" FullName="Microsoft.Azure.Management.DataFactory.Models.MongoDbCursorMethodsProperties">
  <TypeSignature Language="C#" Value="public class MongoDbCursorMethodsProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MongoDbCursorMethodsProperties extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.DataFactory.Models.MongoDbCursorMethodsProperties" />
  <TypeSignature Language="VB.NET" Value="Public Class MongoDbCursorMethodsProperties" />
  <TypeSignature Language="F#" Value="type MongoDbCursorMethodsProperties = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Cursor methods for Mongodb query
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MongoDbCursorMethodsProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataFactory.Models.MongoDbCursorMethodsProperties.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the MongoDbCursorMethodsProperties
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MongoDbCursorMethodsProperties (System.Collections.Generic.IDictionary&lt;string,object&gt; additionalProperties = default, object project = default, object sort = default, object skip = default, object limit = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; additionalProperties, object project, object sort, object skip, object limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataFactory.Models.MongoDbCursorMethodsProperties.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional additionalProperties As IDictionary(Of String, Object) = Nothing, Optional project As Object = Nothing, Optional sort As Object = Nothing, Optional skip As Object = Nothing, Optional limit As Object = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.DataFactory.Models.MongoDbCursorMethodsProperties : System.Collections.Generic.IDictionary&lt;string, obj&gt; * obj * obj * obj * obj -&gt; Microsoft.Azure.Management.DataFactory.Models.MongoDbCursorMethodsProperties" Usage="new Microsoft.Azure.Management.DataFactory.Models.MongoDbCursorMethodsProperties (additionalProperties, project, sort, skip, limit)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="additionalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="project" Type="System.Object" />
        <Parameter Name="sort" Type="System.Object" />
        <Parameter Name="skip" Type="System.Object" />
        <Parameter Name="limit" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="additionalProperties">Unmatched properties from the
            message are deserialized this collection</param>
        <param name="project">Specifies the fields to return in the
            documents that match the query filter. To return all fields in the
            matching documents, omit this parameter. Type: string (or
            Expression with resultType string).</param>
        <param name="sort">Specifies the order in which the query returns
            matching documents. Type: string (or Expression with resultType
            string). Type: string (or Expression with resultType
            string).</param>
        <param name="skip">Specifies the how many documents skipped and
            where MongoDB begins returning results. This approach may be useful
            in implementing paginated results. Type: integer (or Expression
            with resultType integer).</param>
        <param name="limit">Specifies the maximum number of documents the
            server returns. limit() is analogous to the LIMIT statement in a
            SQL database. Type: integer (or Expression with resultType
            integer).</param>
        <summary>
            Initializes a new instance of the MongoDbCursorMethodsProperties
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdditionalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; AdditionalProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; AdditionalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataFactory.Models.MongoDbCursorMethodsProperties.AdditionalProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property AdditionalProperties As IDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="member this.AdditionalProperties : System.Collections.Generic.IDictionary&lt;string, obj&gt; with get, set" Usage="Microsoft.Azure.Management.DataFactory.Models.MongoDbCursorMethodsProperties.AdditionalProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonExtensionData]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonExtensionData&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets unmatched properties from the message are deserialized
            this collection
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Limit">
      <MemberSignature Language="C#" Value="public object Limit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Limit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataFactory.Models.MongoDbCursorMethodsProperties.Limit" />
      <MemberSignature Language="VB.NET" Value="Public Property Limit As Object" />
      <MemberSignature Language="F#" Value="member this.Limit : obj with get, set" Usage="Microsoft.Azure.Management.DataFactory.Models.MongoDbCursorMethodsProperties.Limit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="limit")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="limit")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets specifies the maximum number of documents the server
            returns. limit() is analogous to the LIMIT statement in a SQL
            database. Type: integer (or Expression with resultType integer).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public object Project { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Project" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataFactory.Models.MongoDbCursorMethodsProperties.Project" />
      <MemberSignature Language="VB.NET" Value="Public Property Project As Object" />
      <MemberSignature Language="F#" Value="member this.Project : obj with get, set" Usage="Microsoft.Azure.Management.DataFactory.Models.MongoDbCursorMethodsProperties.Project" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="project")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="project")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets specifies the fields to return in the documents that
            match the query filter. To return all fields in the matching
            documents, omit this parameter. Type: string (or Expression with
            resultType string).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public object Skip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Skip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataFactory.Models.MongoDbCursorMethodsProperties.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Property Skip As Object" />
      <MemberSignature Language="F#" Value="member this.Skip : obj with get, set" Usage="Microsoft.Azure.Management.DataFactory.Models.MongoDbCursorMethodsProperties.Skip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="skip")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="skip")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets specifies the how many documents skipped and where
            MongoDB begins returning results. This approach may be useful in
            implementing paginated results. Type: integer (or Expression with
            resultType integer).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public object Sort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Sort" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataFactory.Models.MongoDbCursorMethodsProperties.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Property Sort As Object" />
      <MemberSignature Language="F#" Value="member this.Sort : obj with get, set" Usage="Microsoft.Azure.Management.DataFactory.Models.MongoDbCursorMethodsProperties.Sort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="sort")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="sort")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets specifies the order in which the query returns
            matching documents. Type: string (or Expression with resultType
            string). Type: string (or Expression with resultType string).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
