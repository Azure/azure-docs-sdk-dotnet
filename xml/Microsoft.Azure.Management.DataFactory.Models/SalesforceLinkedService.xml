<Type Name="SalesforceLinkedService" FullName="Microsoft.Azure.Management.DataFactory.Models.SalesforceLinkedService">
  <TypeSignature Language="C#" Value="public class SalesforceLinkedService : Microsoft.Azure.Management.DataFactory.Models.LinkedService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SalesforceLinkedService extends Microsoft.Azure.Management.DataFactory.Models.LinkedService" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.DataFactory.Models.SalesforceLinkedService" />
  <TypeSignature Language="VB.NET" Value="Public Class SalesforceLinkedService&#xA;Inherits LinkedService" />
  <TypeSignature Language="F#" Value="type SalesforceLinkedService = class&#xA;    inherit LinkedService" />
  <TypeSignature Language="C++ CLI" Value="public ref class SalesforceLinkedService : Microsoft::Azure::Management::DataFactory::Models::LinkedService" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class SalesforceLinkedService : Microsoft::Azure::Management::DataFactory::Models::LinkedService" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
    <AssemblyVersion>0.2.0.0</AssemblyVersion>
    <AssemblyVersion>0.3.0.0</AssemblyVersion>
    <AssemblyVersion>0.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Management.DataFactory.Models.LinkedService</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.Rest.Serialization.JsonTransformation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Newtonsoft.Json.JsonObject("Salesforce")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Linked service for Salesforce.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SalesforceLinkedService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataFactory.Models.SalesforceLinkedService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SalesforceLinkedService();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; SalesforceLinkedService();" />
      <MemberSignature Language="C++ WINRT" Value=" SalesforceLinkedService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the SalesforceLinkedService class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SalesforceLinkedService (System.Collections.Generic.IDictionary&lt;string,object&gt; additionalProperties = null, Microsoft.Azure.Management.DataFactory.Models.IntegrationRuntimeReference connectVia = null, string description = null, object environmentUrl = null, object username = null, Microsoft.Azure.Management.DataFactory.Models.SecretBase password = null, Microsoft.Azure.Management.DataFactory.Models.SecretBase securityToken = null, object encryptedCredential = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; additionalProperties, class Microsoft.Azure.Management.DataFactory.Models.IntegrationRuntimeReference connectVia, string description, object environmentUrl, object username, class Microsoft.Azure.Management.DataFactory.Models.SecretBase password, class Microsoft.Azure.Management.DataFactory.Models.SecretBase securityToken, object encryptedCredential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataFactory.Models.SalesforceLinkedService.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.Azure.Management.DataFactory.Models.IntegrationRuntimeReference,System.String,System.Object,System.Object,Microsoft.Azure.Management.DataFactory.Models.SecretBase,Microsoft.Azure.Management.DataFactory.Models.SecretBase,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional additionalProperties As IDictionary(Of String, Object) = null, Optional connectVia As IntegrationRuntimeReference = null, Optional description As String = null, Optional environmentUrl As Object = null, Optional username As Object = null, Optional password As SecretBase = null, Optional securityToken As SecretBase = null, Optional encryptedCredential As Object = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.DataFactory.Models.SalesforceLinkedService : System.Collections.Generic.IDictionary&lt;string, obj&gt; * Microsoft.Azure.Management.DataFactory.Models.IntegrationRuntimeReference * string * obj * obj * Microsoft.Azure.Management.DataFactory.Models.SecretBase * Microsoft.Azure.Management.DataFactory.Models.SecretBase * obj -&gt; Microsoft.Azure.Management.DataFactory.Models.SalesforceLinkedService" Usage="new Microsoft.Azure.Management.DataFactory.Models.SalesforceLinkedService (additionalProperties, connectVia, description, environmentUrl, username, password, securityToken, encryptedCredential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="additionalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="connectVia" Type="Microsoft.Azure.Management.DataFactory.Models.IntegrationRuntimeReference" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="environmentUrl" Type="System.Object" />
        <Parameter Name="username" Type="System.Object" />
        <Parameter Name="password" Type="Microsoft.Azure.Management.DataFactory.Models.SecretBase" />
        <Parameter Name="securityToken" Type="Microsoft.Azure.Management.DataFactory.Models.SecretBase" />
        <Parameter Name="encryptedCredential" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="additionalProperties">Unmatched properties from the
            message are deserialized this collection</param>
        <param name="connectVia">The integration runtime reference.</param>
        <param name="description">Linked service description.</param>
        <param name="environmentUrl">The URL of Salesforce instance.
            Default is 'https://login.salesforce.com'. To copy data from
            sandbox, specify 'https://test.salesforce.com'. To copy data from
            custom domain, specify, for example,
            'https://[domain].my.salesforce.com'. Type: string (or Expression
            with resultType string).</param>
        <param name="username">The username for Basic authentication of the
            Salesforce instance. Type: string (or Expression with resultType
            string).</param>
        <param name="password">The password for Basic authentication of the
            Salesforce instance.</param>
        <param name="securityToken">The security token is required to
            remotely access Salesforce instance.</param>
        <param name="encryptedCredential">The encrypted credential used for
            authentication. Credentials are encrypted using the integration
            runtime credential manager. Type: string (or Expression with
            resultType string).</param>
        <summary>
            Initializes a new instance of the SalesforceLinkedService class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptedCredential">
      <MemberSignature Language="C#" Value="public object EncryptedCredential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EncryptedCredential" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataFactory.Models.SalesforceLinkedService.EncryptedCredential" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptedCredential As Object" />
      <MemberSignature Language="F#" Value="member this.EncryptedCredential : obj with get, set" Usage="Microsoft.Azure.Management.DataFactory.Models.SalesforceLinkedService.EncryptedCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ EncryptedCredential { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::Object ^ EncryptedCredential { Platform::Object ^ get(); void set(Platform::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="typeProperties.encryptedCredential")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the encrypted credential used for authentication.
            Credentials are encrypted using the integration runtime credential
            manager. Type: string (or Expression with resultType string).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvironmentUrl">
      <MemberSignature Language="C#" Value="public object EnvironmentUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EnvironmentUrl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataFactory.Models.SalesforceLinkedService.EnvironmentUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property EnvironmentUrl As Object" />
      <MemberSignature Language="F#" Value="member this.EnvironmentUrl : obj with get, set" Usage="Microsoft.Azure.Management.DataFactory.Models.SalesforceLinkedService.EnvironmentUrl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ EnvironmentUrl { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::Object ^ EnvironmentUrl { Platform::Object ^ get(); void set(Platform::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="typeProperties.environmentUrl")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the URL of Salesforce instance. Default is
            'https://login.salesforce.com'. To copy data from sandbox, specify
            'https://test.salesforce.com'. To copy data from custom domain,
            specify, for example, 'https://[domain].my.salesforce.com'. Type:
            string (or Expression with resultType string).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.DataFactory.Models.SecretBase Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.DataFactory.Models.SecretBase Password" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataFactory.Models.SalesforceLinkedService.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As SecretBase" />
      <MemberSignature Language="F#" Value="member this.Password : Microsoft.Azure.Management.DataFactory.Models.SecretBase with get, set" Usage="Microsoft.Azure.Management.DataFactory.Models.SalesforceLinkedService.Password" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Azure::Management::DataFactory::Models::SecretBase ^ Password { Microsoft::Azure::Management::DataFactory::Models::SecretBase ^ get(); void set(Microsoft::Azure::Management::DataFactory::Models::SecretBase ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="typeProperties.password")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.DataFactory.Models.SecretBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the password for Basic authentication of the
            Salesforce instance.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityToken">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.DataFactory.Models.SecretBase SecurityToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.DataFactory.Models.SecretBase SecurityToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataFactory.Models.SalesforceLinkedService.SecurityToken" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityToken As SecretBase" />
      <MemberSignature Language="F#" Value="member this.SecurityToken : Microsoft.Azure.Management.DataFactory.Models.SecretBase with get, set" Usage="Microsoft.Azure.Management.DataFactory.Models.SalesforceLinkedService.SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Azure::Management::DataFactory::Models::SecretBase ^ SecurityToken { Microsoft::Azure::Management::DataFactory::Models::SecretBase ^ get(); void set(Microsoft::Azure::Management::DataFactory::Models::SecretBase ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="typeProperties.securityToken")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.DataFactory.Models.SecretBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the security token is required to remotely access
            Salesforce instance.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Username">
      <MemberSignature Language="C#" Value="public object Username { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Username" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataFactory.Models.SalesforceLinkedService.Username" />
      <MemberSignature Language="VB.NET" Value="Public Property Username As Object" />
      <MemberSignature Language="F#" Value="member this.Username : obj with get, set" Usage="Microsoft.Azure.Management.DataFactory.Models.SalesforceLinkedService.Username" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Username { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::Object ^ Username { Platform::Object ^ get(); void set(Platform::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="typeProperties.username")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the username for Basic authentication of the
            Salesforce instance. Type: string (or Expression with resultType
            string).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataFactory.Models.SalesforceLinkedService.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate ()" />
      <MemberSignature Language="F#" Value="override this.Validate : unit -&gt; unit" Usage="salesforceLinkedService.Validate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override void Validate();" />
      <MemberSignature Language="C++ WINRT" Value=" override void Validate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>