<Type Name="CertificateConfiguration" FullName="Microsoft.Azure.Management.ApiManagement.Models.CertificateConfiguration">
  <TypeSignature Language="C#" Value="public class CertificateConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CertificateConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ApiManagement.Models.CertificateConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class CertificateConfiguration" />
  <TypeSignature Language="F#" Value="type CertificateConfiguration = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Certificate configuration which consist of non-trusted intermediates
            and root certificates.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CertificateConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ApiManagement.Models.CertificateConfiguration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the CertificateConfiguration class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CertificateConfiguration (string storeName, string encodedCertificate = null, string certificatePassword = null, Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation certificate = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string storeName, string encodedCertificate, string certificatePassword, class Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ApiManagement.Models.CertificateConfiguration.#ctor(System.String,System.String,System.String,Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (storeName As String, Optional encodedCertificate As String = null, Optional certificatePassword As String = null, Optional certificate As CertificateInformation = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.ApiManagement.Models.CertificateConfiguration : string * string * string * Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation -&gt; Microsoft.Azure.Management.ApiManagement.Models.CertificateConfiguration" Usage="new Microsoft.Azure.Management.ApiManagement.Models.CertificateConfiguration (storeName, encodedCertificate, certificatePassword, certificate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storeName" Type="System.String" />
        <Parameter Name="encodedCertificate" Type="System.String" />
        <Parameter Name="certificatePassword" Type="System.String" />
        <Parameter Name="certificate" Type="Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation" />
      </Parameters>
      <Docs>
        <param name="storeName">The
            System.Security.Cryptography.x509certificates.Storename certificate
            store location. Only Root and CertificateAuthority are valid
            locations. Possible values include: 'CertificateAuthority',
            'Root'</param>
        <param name="encodedCertificate">Base64 Encoded
            certificate.</param>
        <param name="certificatePassword">Certificate Password.</param>
        <param name="certificate">Certificate information.</param>
        <summary>
            Initializes a new instance of the CertificateConfiguration class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation Certificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation Certificate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ApiManagement.Models.CertificateConfiguration.Certificate" />
      <MemberSignature Language="VB.NET" Value="Public Property Certificate As CertificateInformation" />
      <MemberSignature Language="F#" Value="member this.Certificate : Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation with get, set" Usage="Microsoft.Azure.Management.ApiManagement.Models.CertificateConfiguration.Certificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="certificate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets certificate information.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificatePassword">
      <MemberSignature Language="C#" Value="public string CertificatePassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CertificatePassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ApiManagement.Models.CertificateConfiguration.CertificatePassword" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificatePassword As String" />
      <MemberSignature Language="F#" Value="member this.CertificatePassword : string with get, set" Usage="Microsoft.Azure.Management.ApiManagement.Models.CertificateConfiguration.CertificatePassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="certificatePassword")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets certificate Password.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodedCertificate">
      <MemberSignature Language="C#" Value="public string EncodedCertificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncodedCertificate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ApiManagement.Models.CertificateConfiguration.EncodedCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Property EncodedCertificate As String" />
      <MemberSignature Language="F#" Value="member this.EncodedCertificate : string with get, set" Usage="Microsoft.Azure.Management.ApiManagement.Models.CertificateConfiguration.EncodedCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="encodedCertificate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets base64 Encoded certificate.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreName">
      <MemberSignature Language="C#" Value="public string StoreName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StoreName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ApiManagement.Models.CertificateConfiguration.StoreName" />
      <MemberSignature Language="VB.NET" Value="Public Property StoreName As String" />
      <MemberSignature Language="F#" Value="member this.StoreName : string with get, set" Usage="Microsoft.Azure.Management.ApiManagement.Models.CertificateConfiguration.StoreName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="storeName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the
            System.Security.Cryptography.x509certificates.Storename certificate
            store location. Only Root and CertificateAuthority are valid
            locations. Possible values include: 'CertificateAuthority', 'Root'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ApiManagement.Models.CertificateConfiguration.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="certificateConfiguration.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>