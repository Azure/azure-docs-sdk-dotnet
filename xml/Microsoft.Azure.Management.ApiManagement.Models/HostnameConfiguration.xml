<Type Name="HostnameConfiguration" FullName="Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration">
  <TypeSignature Language="C#" Value="public class HostnameConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HostnameConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class HostnameConfiguration" />
  <TypeSignature Language="F#" Value="type HostnameConfiguration = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Custom hostname configuration.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostnameConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the HostnameConfiguration class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostnameConfiguration (Microsoft.Azure.Management.ApiManagement.Models.HostnameType type, string hostName, string keyVaultId = null, string encodedCertificate = null, string certificatePassword = null, Nullable&lt;bool&gt; defaultSslBinding = null, Nullable&lt;bool&gt; negotiateClientCertificate = null, Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation certificate = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.Azure.Management.ApiManagement.Models.HostnameType type, string hostName, string keyVaultId, string encodedCertificate, string certificatePassword, valuetype System.Nullable`1&lt;bool&gt; defaultSslBinding, valuetype System.Nullable`1&lt;bool&gt; negotiateClientCertificate, class Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.#ctor(Microsoft.Azure.Management.ApiManagement.Models.HostnameType,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As HostnameType, hostName As String, Optional keyVaultId As String = null, Optional encodedCertificate As String = null, Optional certificatePassword As String = null, Optional defaultSslBinding As Nullable(Of Boolean) = null, Optional negotiateClientCertificate As Nullable(Of Boolean) = null, Optional certificate As CertificateInformation = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration : Microsoft.Azure.Management.ApiManagement.Models.HostnameType * string * string * string * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation -&gt; Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration" Usage="new Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration (type, hostName, keyVaultId, encodedCertificate, certificatePassword, defaultSslBinding, negotiateClientCertificate, certificate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.Azure.Management.ApiManagement.Models.HostnameType" />
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="keyVaultId" Type="System.String" />
        <Parameter Name="encodedCertificate" Type="System.String" />
        <Parameter Name="certificatePassword" Type="System.String" />
        <Parameter Name="defaultSslBinding" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="negotiateClientCertificate" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="certificate" Type="Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation" />
      </Parameters>
      <Docs>
        <param name="type">Hostname type. Possible values include: 'Proxy',
            'Portal', 'Management', 'Scm'</param>
        <param name="hostName">Hostname to configure on the Api Management
            service.</param>
        <param name="keyVaultId">Url to the KeyVault Secret containing the
            Ssl Certificate. If absolute Url containing version is provided,
            auto-update of ssl certificate will not work. This requires Api
            Management service to be configured with MSI. The secret should be
            of type *application/x-pkcs12*</param>
        <param name="encodedCertificate">Base64 Encoded
            certificate.</param>
        <param name="certificatePassword">Certificate Password.</param>
        <param name="defaultSslBinding">Specify true to setup the
            certificate associated with this Hostname as the Default SSL
            Certificate. If a client does not send the SNI header, then this
            will be the certificate that will be challenged. The property is
            useful if a service has multiple custom hostname enabled and it
            needs to decide on the default ssl certificate. The setting only
            applied to Proxy Hostname Type.</param>
        <param name="negotiateClientCertificate">Specify true to always
            negotiate client certificate on the hostname. Default Value is
            false.</param>
        <param name="certificate">Certificate information.</param>
        <summary>
            Initializes a new instance of the HostnameConfiguration class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation Certificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation Certificate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.Certificate" />
      <MemberSignature Language="VB.NET" Value="Public Property Certificate As CertificateInformation" />
      <MemberSignature Language="F#" Value="member this.Certificate : Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation with get, set" Usage="Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.Certificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="certificate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets certificate information.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificatePassword">
      <MemberSignature Language="C#" Value="public string CertificatePassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CertificatePassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.CertificatePassword" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificatePassword As String" />
      <MemberSignature Language="F#" Value="member this.CertificatePassword : string with get, set" Usage="Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.CertificatePassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="certificatePassword")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets certificate Password.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSslBinding">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; DefaultSslBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; DefaultSslBinding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.DefaultSslBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSslBinding As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.DefaultSslBinding : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.DefaultSslBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="defaultSslBinding")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets specify true to setup the certificate associated with
            this Hostname as the Default SSL Certificate. If a client does not
            send the SNI header, then this will be the certificate that will be
            challenged. The property is useful if a service has multiple custom
            hostname enabled and it needs to decide on the default ssl
            certificate. The setting only applied to Proxy Hostname Type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodedCertificate">
      <MemberSignature Language="C#" Value="public string EncodedCertificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncodedCertificate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.EncodedCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Property EncodedCertificate As String" />
      <MemberSignature Language="F#" Value="member this.EncodedCertificate : string with get, set" Usage="Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.EncodedCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="encodedCertificate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets base64 Encoded certificate.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostName">
      <MemberSignature Language="C#" Value="public string HostName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HostName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.HostName" />
      <MemberSignature Language="VB.NET" Value="Public Property HostName As String" />
      <MemberSignature Language="F#" Value="member this.HostName : string with get, set" Usage="Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.HostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="hostName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets hostname to configure on the Api Management service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyVaultId">
      <MemberSignature Language="C#" Value="public string KeyVaultId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyVaultId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.KeyVaultId" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyVaultId As String" />
      <MemberSignature Language="F#" Value="member this.KeyVaultId : string with get, set" Usage="Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.KeyVaultId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="keyVaultId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets url to the KeyVault Secret containing the Ssl
            Certificate. If absolute Url containing version is provided,
            auto-update of ssl certificate will not work. This requires Api
            Management service to be configured with MSI. The secret should be
            of type *application/x-pkcs12*
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NegotiateClientCertificate">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; NegotiateClientCertificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; NegotiateClientCertificate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.NegotiateClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Property NegotiateClientCertificate As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.NegotiateClientCertificate : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.NegotiateClientCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="negotiateClientCertificate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets specify true to always negotiate client certificate on
            the hostname. Default Value is false.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ApiManagement.Models.HostnameType Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Azure.Management.ApiManagement.Models.HostnameType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As HostnameType" />
      <MemberSignature Language="F#" Value="member this.Type : Microsoft.Azure.Management.ApiManagement.Models.HostnameType with get, set" Usage="Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="type")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ApiManagement.Models.HostnameType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets hostname type. Possible values include: 'Proxy',
            'Portal', 'Management', 'Scm'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="hostnameConfiguration.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>