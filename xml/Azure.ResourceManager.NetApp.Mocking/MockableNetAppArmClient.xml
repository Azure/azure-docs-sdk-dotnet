<Type Name="MockableNetAppArmClient" FullName="Azure.ResourceManager.NetApp.Mocking.MockableNetAppArmClient">
  <TypeSignature Language="C#" Value="public class MockableNetAppArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableNetAppArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.NetApp.Mocking.MockableNetAppArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableNetAppArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableNetAppArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
    <AssemblyVersion>1.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableNetAppArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.NetApp.Mocking.MockableNetAppArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCapacityPoolResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.NetApp.CapacityPoolResource GetCapacityPoolResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.NetApp.CapacityPoolResource GetCapacityPoolResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppArmClient.GetCapacityPoolResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCapacityPoolResource (id As ResourceIdentifier) As CapacityPoolResource" />
      <MemberSignature Language="F#" Value="abstract member GetCapacityPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.CapacityPoolResource&#xA;override this.GetCapacityPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.CapacityPoolResource" Usage="mockableNetAppArmClient.GetCapacityPoolResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NetApp.CapacityPoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NetApp.CapacityPoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NetApp.CapacityPoolResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.NetApp.CapacityPoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NetApp.CapacityPoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetAppAccountBackupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.NetApp.NetAppAccountBackupResource GetNetAppAccountBackupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.NetApp.NetAppAccountBackupResource GetNetAppAccountBackupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppArmClient.GetNetAppAccountBackupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetAppAccountBackupResource (id As ResourceIdentifier) As NetAppAccountBackupResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetAppAccountBackupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.NetAppAccountBackupResource&#xA;override this.GetNetAppAccountBackupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.NetAppAccountBackupResource" Usage="mockableNetAppArmClient.GetNetAppAccountBackupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NetApp.NetAppAccountBackupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NetApp.NetAppAccountBackupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NetApp.NetAppAccountBackupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.NetApp.NetAppAccountBackupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NetApp.NetAppAccountBackupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetAppAccountResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.NetApp.NetAppAccountResource GetNetAppAccountResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.NetApp.NetAppAccountResource GetNetAppAccountResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppArmClient.GetNetAppAccountResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetAppAccountResource (id As ResourceIdentifier) As NetAppAccountResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetAppAccountResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.NetAppAccountResource&#xA;override this.GetNetAppAccountResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.NetAppAccountResource" Usage="mockableNetAppArmClient.GetNetAppAccountResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NetApp.NetAppAccountResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NetApp.NetAppAccountResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NetApp.NetAppAccountResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.NetApp.NetAppAccountResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NetApp.NetAppAccountResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetAppBackupPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.NetApp.NetAppBackupPolicyResource GetNetAppBackupPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.NetApp.NetAppBackupPolicyResource GetNetAppBackupPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppArmClient.GetNetAppBackupPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetAppBackupPolicyResource (id As ResourceIdentifier) As NetAppBackupPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetAppBackupPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.NetAppBackupPolicyResource&#xA;override this.GetNetAppBackupPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.NetAppBackupPolicyResource" Usage="mockableNetAppArmClient.GetNetAppBackupPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NetApp.NetAppBackupPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NetApp.NetAppBackupPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NetApp.NetAppBackupPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.NetApp.NetAppBackupPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NetApp.NetAppBackupPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetAppBackupVaultBackupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.NetApp.NetAppBackupVaultBackupResource GetNetAppBackupVaultBackupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.NetApp.NetAppBackupVaultBackupResource GetNetAppBackupVaultBackupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppArmClient.GetNetAppBackupVaultBackupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetAppBackupVaultBackupResource (id As ResourceIdentifier) As NetAppBackupVaultBackupResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetAppBackupVaultBackupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.NetAppBackupVaultBackupResource&#xA;override this.GetNetAppBackupVaultBackupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.NetAppBackupVaultBackupResource" Usage="mockableNetAppArmClient.GetNetAppBackupVaultBackupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NetApp.NetAppBackupVaultBackupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NetApp.NetAppBackupVaultBackupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NetApp.NetAppBackupVaultBackupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.NetApp.NetAppBackupVaultBackupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NetApp.NetAppBackupVaultBackupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetAppBackupVaultResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.NetApp.NetAppBackupVaultResource GetNetAppBackupVaultResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.NetApp.NetAppBackupVaultResource GetNetAppBackupVaultResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppArmClient.GetNetAppBackupVaultResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetAppBackupVaultResource (id As ResourceIdentifier) As NetAppBackupVaultResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetAppBackupVaultResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.NetAppBackupVaultResource&#xA;override this.GetNetAppBackupVaultResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.NetAppBackupVaultResource" Usage="mockableNetAppArmClient.GetNetAppBackupVaultResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NetApp.NetAppBackupVaultResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NetApp.NetAppBackupVaultResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NetApp.NetAppBackupVaultResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.NetApp.NetAppBackupVaultResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NetApp.NetAppBackupVaultResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetAppSubvolumeInfoResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.NetApp.NetAppSubvolumeInfoResource GetNetAppSubvolumeInfoResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.NetApp.NetAppSubvolumeInfoResource GetNetAppSubvolumeInfoResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppArmClient.GetNetAppSubvolumeInfoResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetAppSubvolumeInfoResource (id As ResourceIdentifier) As NetAppSubvolumeInfoResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetAppSubvolumeInfoResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.NetAppSubvolumeInfoResource&#xA;override this.GetNetAppSubvolumeInfoResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.NetAppSubvolumeInfoResource" Usage="mockableNetAppArmClient.GetNetAppSubvolumeInfoResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NetApp.NetAppSubvolumeInfoResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NetApp.NetAppSubvolumeInfoResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NetApp.NetAppSubvolumeInfoResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.NetApp.NetAppSubvolumeInfoResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NetApp.NetAppSubvolumeInfoResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetAppVolumeBackupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.NetApp.NetAppVolumeBackupResource GetNetAppVolumeBackupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.NetApp.NetAppVolumeBackupResource GetNetAppVolumeBackupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppArmClient.GetNetAppVolumeBackupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetAppVolumeBackupResource (id As ResourceIdentifier) As NetAppVolumeBackupResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetAppVolumeBackupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.NetAppVolumeBackupResource&#xA;override this.GetNetAppVolumeBackupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.NetAppVolumeBackupResource" Usage="mockableNetAppArmClient.GetNetAppVolumeBackupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NetApp.NetAppVolumeBackupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NetApp.NetAppVolumeBackupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NetApp.NetAppVolumeBackupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.NetApp.NetAppVolumeBackupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NetApp.NetAppVolumeBackupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetAppVolumeGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.NetApp.NetAppVolumeGroupResource GetNetAppVolumeGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.NetApp.NetAppVolumeGroupResource GetNetAppVolumeGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppArmClient.GetNetAppVolumeGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetAppVolumeGroupResource (id As ResourceIdentifier) As NetAppVolumeGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetAppVolumeGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.NetAppVolumeGroupResource&#xA;override this.GetNetAppVolumeGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.NetAppVolumeGroupResource" Usage="mockableNetAppArmClient.GetNetAppVolumeGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NetApp.NetAppVolumeGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NetApp.NetAppVolumeGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NetApp.NetAppVolumeGroupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.NetApp.NetAppVolumeGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NetApp.NetAppVolumeGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetAppVolumeQuotaRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.NetApp.NetAppVolumeQuotaRuleResource GetNetAppVolumeQuotaRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.NetApp.NetAppVolumeQuotaRuleResource GetNetAppVolumeQuotaRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppArmClient.GetNetAppVolumeQuotaRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetAppVolumeQuotaRuleResource (id As ResourceIdentifier) As NetAppVolumeQuotaRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetAppVolumeQuotaRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.NetAppVolumeQuotaRuleResource&#xA;override this.GetNetAppVolumeQuotaRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.NetAppVolumeQuotaRuleResource" Usage="mockableNetAppArmClient.GetNetAppVolumeQuotaRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NetApp.NetAppVolumeQuotaRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NetApp.NetAppVolumeQuotaRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NetApp.NetAppVolumeQuotaRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.NetApp.NetAppVolumeQuotaRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NetApp.NetAppVolumeQuotaRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetAppVolumeResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.NetApp.NetAppVolumeResource GetNetAppVolumeResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.NetApp.NetAppVolumeResource GetNetAppVolumeResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppArmClient.GetNetAppVolumeResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetAppVolumeResource (id As ResourceIdentifier) As NetAppVolumeResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetAppVolumeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.NetAppVolumeResource&#xA;override this.GetNetAppVolumeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.NetAppVolumeResource" Usage="mockableNetAppArmClient.GetNetAppVolumeResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NetApp.NetAppVolumeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NetApp.NetAppVolumeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NetApp.NetAppVolumeResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.NetApp.NetAppVolumeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NetApp.NetAppVolumeResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetAppVolumeSnapshotResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.NetApp.NetAppVolumeSnapshotResource GetNetAppVolumeSnapshotResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.NetApp.NetAppVolumeSnapshotResource GetNetAppVolumeSnapshotResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppArmClient.GetNetAppVolumeSnapshotResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetAppVolumeSnapshotResource (id As ResourceIdentifier) As NetAppVolumeSnapshotResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetAppVolumeSnapshotResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.NetAppVolumeSnapshotResource&#xA;override this.GetNetAppVolumeSnapshotResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.NetAppVolumeSnapshotResource" Usage="mockableNetAppArmClient.GetNetAppVolumeSnapshotResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NetApp.NetAppVolumeSnapshotResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NetApp.NetAppVolumeSnapshotResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NetApp.NetAppVolumeSnapshotResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.NetApp.NetAppVolumeSnapshotResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NetApp.NetAppVolumeSnapshotResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegionInfoResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.NetApp.RegionInfoResource GetRegionInfoResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.NetApp.RegionInfoResource GetRegionInfoResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppArmClient.GetRegionInfoResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRegionInfoResource (id As ResourceIdentifier) As RegionInfoResource" />
      <MemberSignature Language="F#" Value="abstract member GetRegionInfoResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.RegionInfoResource&#xA;override this.GetRegionInfoResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.RegionInfoResource" Usage="mockableNetAppArmClient.GetRegionInfoResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NetApp.RegionInfoResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NetApp.RegionInfoResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NetApp.RegionInfoResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation)" /> to create a <see cref="T:Azure.ResourceManager.NetApp.RegionInfoResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NetApp.RegionInfoResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSnapshotPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.NetApp.SnapshotPolicyResource GetSnapshotPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.NetApp.SnapshotPolicyResource GetSnapshotPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppArmClient.GetSnapshotPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSnapshotPolicyResource (id As ResourceIdentifier) As SnapshotPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetSnapshotPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.SnapshotPolicyResource&#xA;override this.GetSnapshotPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NetApp.SnapshotPolicyResource" Usage="mockableNetAppArmClient.GetSnapshotPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NetApp.SnapshotPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NetApp.SnapshotPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NetApp.SnapshotPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.NetApp.SnapshotPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NetApp.SnapshotPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
