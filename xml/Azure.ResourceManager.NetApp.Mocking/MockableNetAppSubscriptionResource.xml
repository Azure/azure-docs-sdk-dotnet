<Type Name="MockableNetAppSubscriptionResource" FullName="Azure.ResourceManager.NetApp.Mocking.MockableNetAppSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableNetAppSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableNetAppSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.NetApp.Mocking.MockableNetAppSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableNetAppSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableNetAppSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
    <AssemblyVersion>1.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableNetAppSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.NetApp.Mocking.MockableNetAppSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckNetAppFilePathAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt; CheckNetAppFilePathAvailability (Azure.Core.AzureLocation location, Azure.ResourceManager.NetApp.Models.NetAppFilePathAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt; CheckNetAppFilePathAvailability(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.NetApp.Models.NetAppFilePathAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppSubscriptionResource.CheckNetAppFilePathAvailability(Azure.Core.AzureLocation,Azure.ResourceManager.NetApp.Models.NetAppFilePathAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckNetAppFilePathAvailability (location As AzureLocation, content As NetAppFilePathAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NetAppCheckAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckNetAppFilePathAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.NetApp.Models.NetAppFilePathAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt;&#xA;override this.CheckNetAppFilePathAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.NetApp.Models.NetAppFilePathAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt;" Usage="mockableNetAppSubscriptionResource.CheckNetAppFilePathAvailability (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.NetApp.Models.NetAppFilePathAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> File path availability request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check if a file path is available.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/checkFilePathAvailability</description></item><item><term>Operation Id</term><description>NetAppResource_CheckFilePathAvailability</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckNetAppFilePathAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt;&gt; CheckNetAppFilePathAvailabilityAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.NetApp.Models.NetAppFilePathAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt;&gt; CheckNetAppFilePathAvailabilityAsync(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.NetApp.Models.NetAppFilePathAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppSubscriptionResource.CheckNetAppFilePathAvailabilityAsync(Azure.Core.AzureLocation,Azure.ResourceManager.NetApp.Models.NetAppFilePathAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckNetAppFilePathAvailabilityAsync (location As AzureLocation, content As NetAppFilePathAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NetAppCheckAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckNetAppFilePathAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.NetApp.Models.NetAppFilePathAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt;&gt;&#xA;override this.CheckNetAppFilePathAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.NetApp.Models.NetAppFilePathAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt;&gt;" Usage="mockableNetAppSubscriptionResource.CheckNetAppFilePathAvailabilityAsync (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.NetApp.Models.NetAppFilePathAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> File path availability request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check if a file path is available.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/checkFilePathAvailability</description></item><item><term>Operation Id</term><description>NetAppResource_CheckFilePathAvailability</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckNetAppNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt; CheckNetAppNameAvailability (Azure.Core.AzureLocation location, Azure.ResourceManager.NetApp.Models.NetAppNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt; CheckNetAppNameAvailability(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.NetApp.Models.NetAppNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppSubscriptionResource.CheckNetAppNameAvailability(Azure.Core.AzureLocation,Azure.ResourceManager.NetApp.Models.NetAppNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckNetAppNameAvailability (location As AzureLocation, content As NetAppNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NetAppCheckAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckNetAppNameAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.NetApp.Models.NetAppNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt;&#xA;override this.CheckNetAppNameAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.NetApp.Models.NetAppNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt;" Usage="mockableNetAppSubscriptionResource.CheckNetAppNameAvailability (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.NetApp.Models.NetAppNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> Name availability request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check if a resource name is available.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/checkNameAvailability</description></item><item><term>Operation Id</term><description>NetAppResource_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckNetAppNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt;&gt; CheckNetAppNameAvailabilityAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.NetApp.Models.NetAppNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt;&gt; CheckNetAppNameAvailabilityAsync(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.NetApp.Models.NetAppNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppSubscriptionResource.CheckNetAppNameAvailabilityAsync(Azure.Core.AzureLocation,Azure.ResourceManager.NetApp.Models.NetAppNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckNetAppNameAvailabilityAsync (location As AzureLocation, content As NetAppNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NetAppCheckAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckNetAppNameAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.NetApp.Models.NetAppNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt;&gt;&#xA;override this.CheckNetAppNameAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.NetApp.Models.NetAppNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt;&gt;" Usage="mockableNetAppSubscriptionResource.CheckNetAppNameAvailabilityAsync (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.NetApp.Models.NetAppNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> Name availability request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check if a resource name is available.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/checkNameAvailability</description></item><item><term>Operation Id</term><description>NetAppResource_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckNetAppQuotaAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt; CheckNetAppQuotaAvailability (Azure.Core.AzureLocation location, Azure.ResourceManager.NetApp.Models.NetAppQuotaAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt; CheckNetAppQuotaAvailability(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.NetApp.Models.NetAppQuotaAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppSubscriptionResource.CheckNetAppQuotaAvailability(Azure.Core.AzureLocation,Azure.ResourceManager.NetApp.Models.NetAppQuotaAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckNetAppQuotaAvailability (location As AzureLocation, content As NetAppQuotaAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NetAppCheckAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckNetAppQuotaAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.NetApp.Models.NetAppQuotaAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt;&#xA;override this.CheckNetAppQuotaAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.NetApp.Models.NetAppQuotaAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt;" Usage="mockableNetAppSubscriptionResource.CheckNetAppQuotaAvailability (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.NetApp.Models.NetAppQuotaAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> Quota availability request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check if a quota is available.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/checkQuotaAvailability</description></item><item><term>Operation Id</term><description>NetAppResource_CheckQuotaAvailability</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckNetAppQuotaAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt;&gt; CheckNetAppQuotaAvailabilityAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.NetApp.Models.NetAppQuotaAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt;&gt; CheckNetAppQuotaAvailabilityAsync(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.NetApp.Models.NetAppQuotaAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppSubscriptionResource.CheckNetAppQuotaAvailabilityAsync(Azure.Core.AzureLocation,Azure.ResourceManager.NetApp.Models.NetAppQuotaAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckNetAppQuotaAvailabilityAsync (location As AzureLocation, content As NetAppQuotaAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NetAppCheckAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckNetAppQuotaAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.NetApp.Models.NetAppQuotaAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt;&gt;&#xA;override this.CheckNetAppQuotaAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.NetApp.Models.NetAppQuotaAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt;&gt;" Usage="mockableNetAppSubscriptionResource.CheckNetAppQuotaAvailabilityAsync (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppCheckAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.NetApp.Models.NetAppQuotaAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> Quota availability request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check if a quota is available.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/checkQuotaAvailability</description></item><item><term>Operation Id</term><description>NetAppResource_CheckQuotaAvailability</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNetAppAccounts">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.NetApp.NetAppAccountResource&gt; GetNetAppAccounts (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.NetApp.NetAppAccountResource&gt; GetNetAppAccounts(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppSubscriptionResource.GetNetAppAccounts(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetAppAccounts (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of NetAppAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNetAppAccounts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.NetApp.NetAppAccountResource&gt;&#xA;override this.GetNetAppAccounts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.NetApp.NetAppAccountResource&gt;" Usage="mockableNetAppSubscriptionResource.GetNetAppAccounts cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.NetApp.NetAppAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List and describe all NetApp accounts in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/netAppAccounts</description></item><item><term>Operation Id</term><description>Accounts_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NetApp.NetAppAccountResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.NetApp.NetAppAccountResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetAppAccountsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.NetApp.NetAppAccountResource&gt; GetNetAppAccountsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.NetApp.NetAppAccountResource&gt; GetNetAppAccountsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppSubscriptionResource.GetNetAppAccountsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetAppAccountsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of NetAppAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNetAppAccountsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.NetApp.NetAppAccountResource&gt;&#xA;override this.GetNetAppAccountsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.NetApp.NetAppAccountResource&gt;" Usage="mockableNetAppSubscriptionResource.GetNetAppAccountsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.NetApp.NetAppAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List and describe all NetApp accounts in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/netAppAccounts</description></item><item><term>Operation Id</term><description>Accounts_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NetApp.NetAppAccountResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.NetApp.NetAppAccountResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetAppQuotaLimit">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppSubscriptionQuotaItem&gt; GetNetAppQuotaLimit (Azure.Core.AzureLocation location, string quotaLimitName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.NetApp.Models.NetAppSubscriptionQuotaItem&gt; GetNetAppQuotaLimit(valuetype Azure.Core.AzureLocation location, string quotaLimitName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppSubscriptionResource.GetNetAppQuotaLimit(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetAppQuotaLimit (location As AzureLocation, quotaLimitName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NetAppSubscriptionQuotaItem)" />
      <MemberSignature Language="F#" Value="abstract member GetNetAppQuotaLimit : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppSubscriptionQuotaItem&gt;&#xA;override this.GetNetAppQuotaLimit : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppSubscriptionQuotaItem&gt;" Usage="mockableNetAppSubscriptionResource.GetNetAppQuotaLimit (location, quotaLimitName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppSubscriptionQuotaItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="quotaLimitName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="quotaLimitName"> The name of the Quota Limit. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the default and current subscription quota limit
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/quotaLimits/{quotaLimitName}</description></item><item><term>Operation Id</term><description>NetAppResourceQuotaLimits_Get</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="quotaLimitName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="quotaLimitName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNetAppQuotaLimitAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppSubscriptionQuotaItem&gt;&gt; GetNetAppQuotaLimitAsync (Azure.Core.AzureLocation location, string quotaLimitName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.NetApp.Models.NetAppSubscriptionQuotaItem&gt;&gt; GetNetAppQuotaLimitAsync(valuetype Azure.Core.AzureLocation location, string quotaLimitName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppSubscriptionResource.GetNetAppQuotaLimitAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetAppQuotaLimitAsync (location As AzureLocation, quotaLimitName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NetAppSubscriptionQuotaItem))" />
      <MemberSignature Language="F#" Value="abstract member GetNetAppQuotaLimitAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppSubscriptionQuotaItem&gt;&gt;&#xA;override this.GetNetAppQuotaLimitAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppSubscriptionQuotaItem&gt;&gt;" Usage="mockableNetAppSubscriptionResource.GetNetAppQuotaLimitAsync (location, quotaLimitName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppSubscriptionQuotaItem&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="quotaLimitName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="quotaLimitName"> The name of the Quota Limit. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the default and current subscription quota limit
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/quotaLimits/{quotaLimitName}</description></item><item><term>Operation Id</term><description>NetAppResourceQuotaLimits_Get</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="quotaLimitName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="quotaLimitName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNetAppQuotaLimits">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.NetApp.Models.NetAppSubscriptionQuotaItem&gt; GetNetAppQuotaLimits (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.NetApp.Models.NetAppSubscriptionQuotaItem&gt; GetNetAppQuotaLimits(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppSubscriptionResource.GetNetAppQuotaLimits(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetAppQuotaLimits (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of NetAppSubscriptionQuotaItem)" />
      <MemberSignature Language="F#" Value="abstract member GetNetAppQuotaLimits : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.NetApp.Models.NetAppSubscriptionQuotaItem&gt;&#xA;override this.GetNetAppQuotaLimits : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.NetApp.Models.NetAppSubscriptionQuotaItem&gt;" Usage="mockableNetAppSubscriptionResource.GetNetAppQuotaLimits (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.NetApp.Models.NetAppSubscriptionQuotaItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the default and current limits for quotas
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/quotaLimits</description></item><item><term>Operation Id</term><description>NetAppResourceQuotaLimits_List</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.NetApp.Models.NetAppSubscriptionQuotaItem" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetAppQuotaLimitsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.NetApp.Models.NetAppSubscriptionQuotaItem&gt; GetNetAppQuotaLimitsAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.NetApp.Models.NetAppSubscriptionQuotaItem&gt; GetNetAppQuotaLimitsAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppSubscriptionResource.GetNetAppQuotaLimitsAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetAppQuotaLimitsAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of NetAppSubscriptionQuotaItem)" />
      <MemberSignature Language="F#" Value="abstract member GetNetAppQuotaLimitsAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.NetApp.Models.NetAppSubscriptionQuotaItem&gt;&#xA;override this.GetNetAppQuotaLimitsAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.NetApp.Models.NetAppSubscriptionQuotaItem&gt;" Usage="mockableNetAppSubscriptionResource.GetNetAppQuotaLimitsAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.NetApp.Models.NetAppSubscriptionQuotaItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the default and current limits for quotas
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/quotaLimits</description></item><item><term>Operation Id</term><description>NetAppResourceQuotaLimits_List</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.NetApp.Models.NetAppSubscriptionQuotaItem" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegionInfoResource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.NetApp.RegionInfoResource&gt; GetRegionInfoResource (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.NetApp.RegionInfoResource&gt; GetRegionInfoResource(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppSubscriptionResource.GetRegionInfoResource(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRegionInfoResource (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RegionInfoResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRegionInfoResource : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.NetApp.RegionInfoResource&gt;&#xA;override this.GetRegionInfoResource : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.NetApp.RegionInfoResource&gt;" Usage="mockableNetAppSubscriptionResource.GetRegionInfoResource (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.NetApp.RegionInfoResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Provides storage to network proximity and logical zone mapping information.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/regionInfos/default</description></item><item><term>Operation Id</term><description>NetAppResourceRegionInfos_Get</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NetApp.RegionInfoResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegionInfoResourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.RegionInfoResource&gt;&gt; GetRegionInfoResourceAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.NetApp.RegionInfoResource&gt;&gt; GetRegionInfoResourceAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppSubscriptionResource.GetRegionInfoResourceAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRegionInfoResourceAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RegionInfoResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRegionInfoResourceAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.RegionInfoResource&gt;&gt;&#xA;override this.GetRegionInfoResourceAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.RegionInfoResource&gt;&gt;" Usage="mockableNetAppSubscriptionResource.GetRegionInfoResourceAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.RegionInfoResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Provides storage to network proximity and logical zone mapping information.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/regionInfos/default</description></item><item><term>Operation Id</term><description>NetAppResourceRegionInfos_Get</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NetApp.RegionInfoResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegionInfoResources">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.NetApp.RegionInfoResourceCollection GetRegionInfoResources (Azure.Core.AzureLocation location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.NetApp.RegionInfoResourceCollection GetRegionInfoResources(valuetype Azure.Core.AzureLocation location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppSubscriptionResource.GetRegionInfoResources(Azure.Core.AzureLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRegionInfoResources (location As AzureLocation) As RegionInfoResourceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetRegionInfoResources : Azure.Core.AzureLocation -&gt; Azure.ResourceManager.NetApp.RegionInfoResourceCollection&#xA;override this.GetRegionInfoResources : Azure.Core.AzureLocation -&gt; Azure.ResourceManager.NetApp.RegionInfoResourceCollection" Usage="mockableNetAppSubscriptionResource.GetRegionInfoResources location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NetApp.RegionInfoResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <summary> Gets a collection of RegionInfoResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of RegionInfoResources and their operations over a RegionInfoResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryNetworkSiblingSetNetAppResource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetworkSiblingSet&gt; QueryNetworkSiblingSetNetAppResource (Azure.Core.AzureLocation location, Azure.ResourceManager.NetApp.Models.QueryNetworkSiblingSetContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.NetApp.Models.NetworkSiblingSet&gt; QueryNetworkSiblingSetNetAppResource(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.NetApp.Models.QueryNetworkSiblingSetContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppSubscriptionResource.QueryNetworkSiblingSetNetAppResource(Azure.Core.AzureLocation,Azure.ResourceManager.NetApp.Models.QueryNetworkSiblingSetContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryNetworkSiblingSetNetAppResource (location As AzureLocation, content As QueryNetworkSiblingSetContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NetworkSiblingSet)" />
      <MemberSignature Language="F#" Value="abstract member QueryNetworkSiblingSetNetAppResource : Azure.Core.AzureLocation * Azure.ResourceManager.NetApp.Models.QueryNetworkSiblingSetContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetworkSiblingSet&gt;&#xA;override this.QueryNetworkSiblingSetNetAppResource : Azure.Core.AzureLocation * Azure.ResourceManager.NetApp.Models.QueryNetworkSiblingSetContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetworkSiblingSet&gt;" Usage="mockableNetAppSubscriptionResource.QueryNetworkSiblingSetNetAppResource (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetworkSiblingSet&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.NetApp.Models.QueryNetworkSiblingSetContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> Network sibling set to query. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get details of the specified network sibling set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/queryNetworkSiblingSet</description></item><item><term>Operation Id</term><description>NetAppResource_QueryNetworkSiblingSet</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="QueryNetworkSiblingSetNetAppResourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetworkSiblingSet&gt;&gt; QueryNetworkSiblingSetNetAppResourceAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.NetApp.Models.QueryNetworkSiblingSetContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.NetApp.Models.NetworkSiblingSet&gt;&gt; QueryNetworkSiblingSetNetAppResourceAsync(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.NetApp.Models.QueryNetworkSiblingSetContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppSubscriptionResource.QueryNetworkSiblingSetNetAppResourceAsync(Azure.Core.AzureLocation,Azure.ResourceManager.NetApp.Models.QueryNetworkSiblingSetContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryNetworkSiblingSetNetAppResourceAsync (location As AzureLocation, content As QueryNetworkSiblingSetContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NetworkSiblingSet))" />
      <MemberSignature Language="F#" Value="abstract member QueryNetworkSiblingSetNetAppResourceAsync : Azure.Core.AzureLocation * Azure.ResourceManager.NetApp.Models.QueryNetworkSiblingSetContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetworkSiblingSet&gt;&gt;&#xA;override this.QueryNetworkSiblingSetNetAppResourceAsync : Azure.Core.AzureLocation * Azure.ResourceManager.NetApp.Models.QueryNetworkSiblingSetContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetworkSiblingSet&gt;&gt;" Usage="mockableNetAppSubscriptionResource.QueryNetworkSiblingSetNetAppResourceAsync (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetworkSiblingSet&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.NetApp.Models.QueryNetworkSiblingSetContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> Network sibling set to query. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get details of the specified network sibling set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/queryNetworkSiblingSet</description></item><item><term>Operation Id</term><description>NetAppResource_QueryNetworkSiblingSet</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="QueryRegionInfoNetAppResource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppRegionInfo&gt; QueryRegionInfoNetAppResource (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.NetApp.Models.NetAppRegionInfo&gt; QueryRegionInfoNetAppResource(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppSubscriptionResource.QueryRegionInfoNetAppResource(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryRegionInfoNetAppResource (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NetAppRegionInfo)" />
      <MemberSignature Language="F#" Value="abstract member QueryRegionInfoNetAppResource : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppRegionInfo&gt;&#xA;override this.QueryRegionInfoNetAppResource : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppRegionInfo&gt;" Usage="mockableNetAppSubscriptionResource.QueryRegionInfoNetAppResource (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppRegionInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Provides storage to network proximity and logical zone mapping information.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/regionInfo</description></item><item><term>Operation Id</term><description>NetAppResource_QueryRegionInfo</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryRegionInfoNetAppResourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppRegionInfo&gt;&gt; QueryRegionInfoNetAppResourceAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.NetApp.Models.NetAppRegionInfo&gt;&gt; QueryRegionInfoNetAppResourceAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppSubscriptionResource.QueryRegionInfoNetAppResourceAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryRegionInfoNetAppResourceAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NetAppRegionInfo))" />
      <MemberSignature Language="F#" Value="abstract member QueryRegionInfoNetAppResourceAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppRegionInfo&gt;&gt;&#xA;override this.QueryRegionInfoNetAppResourceAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppRegionInfo&gt;&gt;" Usage="mockableNetAppSubscriptionResource.QueryRegionInfoNetAppResourceAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NetApp.Models.NetAppRegionInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Provides storage to network proximity and logical zone mapping information.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/regionInfo</description></item><item><term>Operation Id</term><description>NetAppResource_QueryRegionInfo</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateNetworkSiblingSetNetAppResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.NetApp.Models.NetworkSiblingSet&gt; UpdateNetworkSiblingSetNetAppResource (Azure.WaitUntil waitUntil, Azure.Core.AzureLocation location, Azure.ResourceManager.NetApp.Models.UpdateNetworkSiblingSetContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.NetApp.Models.NetworkSiblingSet&gt; UpdateNetworkSiblingSetNetAppResource(valuetype Azure.WaitUntil waitUntil, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.NetApp.Models.UpdateNetworkSiblingSetContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppSubscriptionResource.UpdateNetworkSiblingSetNetAppResource(Azure.WaitUntil,Azure.Core.AzureLocation,Azure.ResourceManager.NetApp.Models.UpdateNetworkSiblingSetContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateNetworkSiblingSetNetAppResource (waitUntil As WaitUntil, location As AzureLocation, content As UpdateNetworkSiblingSetContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of NetworkSiblingSet)" />
      <MemberSignature Language="F#" Value="abstract member UpdateNetworkSiblingSetNetAppResource : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.NetApp.Models.UpdateNetworkSiblingSetContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.NetApp.Models.NetworkSiblingSet&gt;&#xA;override this.UpdateNetworkSiblingSetNetAppResource : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.NetApp.Models.UpdateNetworkSiblingSetContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.NetApp.Models.NetworkSiblingSet&gt;" Usage="mockableNetAppSubscriptionResource.UpdateNetworkSiblingSetNetAppResource (waitUntil, location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.NetApp.Models.NetworkSiblingSet&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.NetApp.Models.UpdateNetworkSiblingSetContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> Update for the specified network sibling set. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Update the network features of the specified network sibling set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/updateNetworkSiblingSet</description></item><item><term>Operation Id</term><description>NetAppResource_UpdateNetworkSiblingSet</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateNetworkSiblingSetNetAppResourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.NetApp.Models.NetworkSiblingSet&gt;&gt; UpdateNetworkSiblingSetNetAppResourceAsync (Azure.WaitUntil waitUntil, Azure.Core.AzureLocation location, Azure.ResourceManager.NetApp.Models.UpdateNetworkSiblingSetContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.NetApp.Models.NetworkSiblingSet&gt;&gt; UpdateNetworkSiblingSetNetAppResourceAsync(valuetype Azure.WaitUntil waitUntil, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.NetApp.Models.UpdateNetworkSiblingSetContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Mocking.MockableNetAppSubscriptionResource.UpdateNetworkSiblingSetNetAppResourceAsync(Azure.WaitUntil,Azure.Core.AzureLocation,Azure.ResourceManager.NetApp.Models.UpdateNetworkSiblingSetContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateNetworkSiblingSetNetAppResourceAsync (waitUntil As WaitUntil, location As AzureLocation, content As UpdateNetworkSiblingSetContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of NetworkSiblingSet))" />
      <MemberSignature Language="F#" Value="abstract member UpdateNetworkSiblingSetNetAppResourceAsync : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.NetApp.Models.UpdateNetworkSiblingSetContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.NetApp.Models.NetworkSiblingSet&gt;&gt;&#xA;override this.UpdateNetworkSiblingSetNetAppResourceAsync : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.NetApp.Models.UpdateNetworkSiblingSetContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.NetApp.Models.NetworkSiblingSet&gt;&gt;" Usage="mockableNetAppSubscriptionResource.UpdateNetworkSiblingSetNetAppResourceAsync (waitUntil, location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.NetApp.Models.NetworkSiblingSet&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.NetApp.Models.UpdateNetworkSiblingSetContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> Update for the specified network sibling set. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Update the network features of the specified network sibling set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/updateNetworkSiblingSet</description></item><item><term>Operation Id</term><description>NetAppResource_UpdateNetworkSiblingSet</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
