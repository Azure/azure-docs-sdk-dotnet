<Type Name="IWithCapture" FullName="Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IWithCapture">
  <TypeSignature Language="C#" Value="public interface IWithCapture : Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWithCapture implements class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IWithCapture" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWithCapture&#xA;Implements IBeta" />
  <TypeSignature Language="F#" Value="type IWithCapture = interface&#xA;    interface IBeta" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.71</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            The stage of the event hub update allowing to configure data capture.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="WithDataCaptureDisabled">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate WithDataCaptureDisabled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate WithDataCaptureDisabled() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IWithCapture.WithDataCaptureDisabled" />
      <MemberSignature Language="VB.NET" Value="Public Function WithDataCaptureDisabled () As IUpdate" />
      <MemberSignature Language="F#" Value="abstract member WithDataCaptureDisabled : unit -&gt; Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate" Usage="iWithCapture.WithDataCaptureDisabled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Specifies that data capture should be disabled for the event hub.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Next stage of the event hub update.</return>
      </Docs>
    </Member>
    <Member MemberName="WithDataCaptureEnabled">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate WithDataCaptureEnabled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate WithDataCaptureEnabled() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IWithCapture.WithDataCaptureEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Function WithDataCaptureEnabled () As IUpdate" />
      <MemberSignature Language="F#" Value="abstract member WithDataCaptureEnabled : unit -&gt; Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate" Usage="iWithCapture.WithDataCaptureEnabled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Specifies that data capture should be enabled for the event hub.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Next stage of the event hub update.</return>
      </Docs>
    </Member>
    <Member MemberName="WithDataCaptureFileNameFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate WithDataCaptureFileNameFormat (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate WithDataCaptureFileNameFormat(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IWithCapture.WithDataCaptureFileNameFormat(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithDataCaptureFileNameFormat (format As String) As IUpdate" />
      <MemberSignature Language="F#" Value="abstract member WithDataCaptureFileNameFormat : string -&gt; Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate" Usage="iWithCapture.WithDataCaptureFileNameFormat format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">The file name format.</param>
        <summary>
            Specifies the format of the file containing captured data.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Next stage of the event hub update.</return>
      </Docs>
    </Member>
    <Member MemberName="WithDataCaptureSkipEmptyArchives">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate WithDataCaptureSkipEmptyArchives (bool skipEmptyArchives);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate WithDataCaptureSkipEmptyArchives(bool skipEmptyArchives) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IWithCapture.WithDataCaptureSkipEmptyArchives(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithDataCaptureSkipEmptyArchives (skipEmptyArchives As Boolean) As IUpdate" />
      <MemberSignature Language="F#" Value="abstract member WithDataCaptureSkipEmptyArchives : bool -&gt; Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate" Usage="iWithCapture.WithDataCaptureSkipEmptyArchives skipEmptyArchives" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipEmptyArchives" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="skipEmptyArchives">The skipEmptyArchives value to set.</param>
        <summary>
             Specified the capture whether to Skip Empty Archives.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Next stage of the event hub update.</return>
      </Docs>
    </Member>
    <Member MemberName="WithDataCaptureWindowSizeInMB">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate WithDataCaptureWindowSizeInMB (int sizeInMB);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate WithDataCaptureWindowSizeInMB(int32 sizeInMB) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IWithCapture.WithDataCaptureWindowSizeInMB(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithDataCaptureWindowSizeInMB (sizeInMB As Integer) As IUpdate" />
      <MemberSignature Language="F#" Value="abstract member WithDataCaptureWindowSizeInMB : int -&gt; Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate" Usage="iWithCapture.WithDataCaptureWindowSizeInMB sizeInMB" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizeInMB" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sizeInMB">Window size in MB.</param>
        <summary>
            Specifies the capture window size in MB.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Next stage of the event hub update.</return>
      </Docs>
    </Member>
    <Member MemberName="WithDataCaptureWindowSizeInSeconds">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate WithDataCaptureWindowSizeInSeconds (int sizeInSeconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate WithDataCaptureWindowSizeInSeconds(int32 sizeInSeconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IWithCapture.WithDataCaptureWindowSizeInSeconds(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithDataCaptureWindowSizeInSeconds (sizeInSeconds As Integer) As IUpdate" />
      <MemberSignature Language="F#" Value="abstract member WithDataCaptureWindowSizeInSeconds : int -&gt; Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate" Usage="iWithCapture.WithDataCaptureWindowSizeInSeconds sizeInSeconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizeInSeconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sizeInSeconds">Window size in seconds.</param>
        <summary>
            Specifies the capture window size in seconds.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Next stage of the event hub update.</return>
      </Docs>
    </Member>
    <Member MemberName="WithExistingStorageAccountForCapturedData">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate WithExistingStorageAccountForCapturedData (Microsoft.Azure.Management.Storage.Fluent.IStorageAccount storageAccount, string containerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate WithExistingStorageAccountForCapturedData(class Microsoft.Azure.Management.Storage.Fluent.IStorageAccount storageAccount, string containerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IWithCapture.WithExistingStorageAccountForCapturedData(Microsoft.Azure.Management.Storage.Fluent.IStorageAccount,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithExistingStorageAccountForCapturedData (storageAccount As IStorageAccount, containerName As String) As IUpdate" />
      <MemberSignature Language="F#" Value="abstract member WithExistingStorageAccountForCapturedData : Microsoft.Azure.Management.Storage.Fluent.IStorageAccount * string -&gt; Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate" Usage="iWithCapture.WithExistingStorageAccountForCapturedData (storageAccount, containerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storageAccount" Type="Microsoft.Azure.Management.Storage.Fluent.IStorageAccount" />
        <Parameter Name="containerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storageAccount">Storage account.</param>
        <param name="containerName">An existing or new container to store the files containing captured data.</param>
        <summary>
            Specifies an existing storage account to store the captured data when data capturing is enabled.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Next stage of the event hub update.</return>
      </Docs>
    </Member>
    <Member MemberName="WithExistingStorageAccountForCapturedData">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate WithExistingStorageAccountForCapturedData (string storageAccountId, string containerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate WithExistingStorageAccountForCapturedData(string storageAccountId, string containerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IWithCapture.WithExistingStorageAccountForCapturedData(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithExistingStorageAccountForCapturedData (storageAccountId As String, containerName As String) As IUpdate" />
      <MemberSignature Language="F#" Value="abstract member WithExistingStorageAccountForCapturedData : string * string -&gt; Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate" Usage="iWithCapture.WithExistingStorageAccountForCapturedData (storageAccountId, containerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storageAccountId" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storageAccountId">Storage account arm id.</param>
        <param name="containerName">An existing or new container to store the files containing captured data.</param>
        <summary>
            Specifies an existing storage account to store the captured data when data capturing is enabled.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Next stage of the event hub update.</return>
      </Docs>
    </Member>
    <Member MemberName="WithNewStorageAccountForCapturedData">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate WithNewStorageAccountForCapturedData (Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable&lt;Microsoft.Azure.Management.Storage.Fluent.IStorageAccount&gt; storageAccountCreatable, string containerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate WithNewStorageAccountForCapturedData(class Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable`1&lt;class Microsoft.Azure.Management.Storage.Fluent.IStorageAccount&gt; storageAccountCreatable, string containerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IWithCapture.WithNewStorageAccountForCapturedData(Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable{Microsoft.Azure.Management.Storage.Fluent.IStorageAccount},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithNewStorageAccountForCapturedData (storageAccountCreatable As ICreatable(Of IStorageAccount), containerName As String) As IUpdate" />
      <MemberSignature Language="F#" Value="abstract member WithNewStorageAccountForCapturedData : Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable&lt;Microsoft.Azure.Management.Storage.Fluent.IStorageAccount&gt; * string -&gt; Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate" Usage="iWithCapture.WithNewStorageAccountForCapturedData (storageAccountCreatable, containerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storageAccountCreatable" Type="Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable&lt;Microsoft.Azure.Management.Storage.Fluent.IStorageAccount&gt;" />
        <Parameter Name="containerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storageAccountCreatable">Creatable storage account definition.</param>
        <param name="containerName">Container to store the files containing captured data.</param>
        <summary>
            Specifies a new storage account to store the captured data when data capturing is enabled.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Next stage of the event hub update.</return>
      </Docs>
    </Member>
  </Members>
</Type>
