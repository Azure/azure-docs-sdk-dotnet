<Type Name="MockableAnalysisSubscriptionResource" FullName="Azure.ResourceManager.Analysis.Mocking.MockableAnalysisSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableAnalysisSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableAnalysisSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Analysis.Mocking.MockableAnalysisSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableAnalysisSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableAnalysisSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Analysis</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableAnalysisSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Analysis.Mocking.MockableAnalysisSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Analysis</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Analysis.Mocking.MockableAnalysisSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAnalysisServerNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Analysis.Models.AnalysisServerNameAvailabilityResult&gt; CheckAnalysisServerNameAvailability (Azure.Core.AzureLocation location, Azure.ResourceManager.Analysis.Models.AnalysisServerNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Analysis.Models.AnalysisServerNameAvailabilityResult&gt; CheckAnalysisServerNameAvailability(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Analysis.Models.AnalysisServerNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Analysis.Mocking.MockableAnalysisSubscriptionResource.CheckAnalysisServerNameAvailability(Azure.Core.AzureLocation,Azure.ResourceManager.Analysis.Models.AnalysisServerNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckAnalysisServerNameAvailability (location As AzureLocation, content As AnalysisServerNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AnalysisServerNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckAnalysisServerNameAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.Analysis.Models.AnalysisServerNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Analysis.Models.AnalysisServerNameAvailabilityResult&gt;&#xA;override this.CheckAnalysisServerNameAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.Analysis.Models.AnalysisServerNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Analysis.Models.AnalysisServerNameAvailabilityResult&gt;" Usage="mockableAnalysisSubscriptionResource.CheckAnalysisServerNameAvailability (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Analysis</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Analysis.Models.AnalysisServerNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.Analysis.Models.AnalysisServerNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The region name which the operation will lookup into. </param>
        <param name="content"> Contains the information used to provision the Analysis Services server. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the name availability in the target location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AnalysisServices/locations/{location}/checkNameAvailability</description></item><item><term>Operation Id</term><description>Servers_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2017-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Analysis.AnalysisServerResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckAnalysisServerNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Analysis.Models.AnalysisServerNameAvailabilityResult&gt;&gt; CheckAnalysisServerNameAvailabilityAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.Analysis.Models.AnalysisServerNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Analysis.Models.AnalysisServerNameAvailabilityResult&gt;&gt; CheckAnalysisServerNameAvailabilityAsync(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Analysis.Models.AnalysisServerNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Analysis.Mocking.MockableAnalysisSubscriptionResource.CheckAnalysisServerNameAvailabilityAsync(Azure.Core.AzureLocation,Azure.ResourceManager.Analysis.Models.AnalysisServerNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckAnalysisServerNameAvailabilityAsync (location As AzureLocation, content As AnalysisServerNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AnalysisServerNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckAnalysisServerNameAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.Analysis.Models.AnalysisServerNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Analysis.Models.AnalysisServerNameAvailabilityResult&gt;&gt;&#xA;override this.CheckAnalysisServerNameAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.Analysis.Models.AnalysisServerNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Analysis.Models.AnalysisServerNameAvailabilityResult&gt;&gt;" Usage="mockableAnalysisSubscriptionResource.CheckAnalysisServerNameAvailabilityAsync (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Analysis</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Analysis.Models.AnalysisServerNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.Analysis.Models.AnalysisServerNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The region name which the operation will lookup into. </param>
        <param name="content"> Contains the information used to provision the Analysis Services server. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the name availability in the target location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AnalysisServices/locations/{location}/checkNameAvailability</description></item><item><term>Operation Id</term><description>Servers_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2017-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Analysis.AnalysisServerResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAnalysisServers">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Analysis.AnalysisServerResource&gt; GetAnalysisServers (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Analysis.AnalysisServerResource&gt; GetAnalysisServers(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Analysis.Mocking.MockableAnalysisSubscriptionResource.GetAnalysisServers(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAnalysisServers (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AnalysisServerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAnalysisServers : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Analysis.AnalysisServerResource&gt;&#xA;override this.GetAnalysisServers : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Analysis.AnalysisServerResource&gt;" Usage="mockableAnalysisSubscriptionResource.GetAnalysisServers cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Analysis</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Analysis.AnalysisServerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the Analysis Services servers for the given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AnalysisServices/servers</description></item><item><term>Operation Id</term><description>Servers_List</description></item><item><term>Default Api Version</term><description>2017-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Analysis.AnalysisServerResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Analysis.AnalysisServerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnalysisServersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Analysis.AnalysisServerResource&gt; GetAnalysisServersAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Analysis.AnalysisServerResource&gt; GetAnalysisServersAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Analysis.Mocking.MockableAnalysisSubscriptionResource.GetAnalysisServersAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAnalysisServersAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AnalysisServerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAnalysisServersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Analysis.AnalysisServerResource&gt;&#xA;override this.GetAnalysisServersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Analysis.AnalysisServerResource&gt;" Usage="mockableAnalysisSubscriptionResource.GetAnalysisServersAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Analysis</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Analysis.AnalysisServerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the Analysis Services servers for the given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AnalysisServices/servers</description></item><item><term>Operation Id</term><description>Servers_List</description></item><item><term>Default Api Version</term><description>2017-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Analysis.AnalysisServerResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Analysis.AnalysisServerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEligibleSkus">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Analysis.Models.AnalysisResourceSku&gt; GetEligibleSkus (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Analysis.Models.AnalysisResourceSku&gt; GetEligibleSkus(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Analysis.Mocking.MockableAnalysisSubscriptionResource.GetEligibleSkus(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEligibleSkus (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AnalysisResourceSku)" />
      <MemberSignature Language="F#" Value="abstract member GetEligibleSkus : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Analysis.Models.AnalysisResourceSku&gt;&#xA;override this.GetEligibleSkus : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Analysis.Models.AnalysisResourceSku&gt;" Usage="mockableAnalysisSubscriptionResource.GetEligibleSkus cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Analysis</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Analysis.Models.AnalysisResourceSku&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists eligible SKUs for Analysis Services resource provider.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AnalysisServices/skus</description></item><item><term>Operation Id</term><description>Servers_ListSkusForNew</description></item><item><term>Default Api Version</term><description>2017-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Analysis.AnalysisServerResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Analysis.Models.AnalysisResourceSku" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEligibleSkusAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Analysis.Models.AnalysisResourceSku&gt; GetEligibleSkusAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Analysis.Models.AnalysisResourceSku&gt; GetEligibleSkusAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Analysis.Mocking.MockableAnalysisSubscriptionResource.GetEligibleSkusAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEligibleSkusAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AnalysisResourceSku)" />
      <MemberSignature Language="F#" Value="abstract member GetEligibleSkusAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Analysis.Models.AnalysisResourceSku&gt;&#xA;override this.GetEligibleSkusAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Analysis.Models.AnalysisResourceSku&gt;" Usage="mockableAnalysisSubscriptionResource.GetEligibleSkusAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Analysis</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Analysis.Models.AnalysisResourceSku&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists eligible SKUs for Analysis Services resource provider.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AnalysisServices/skus</description></item><item><term>Operation Id</term><description>Servers_ListSkusForNew</description></item><item><term>Default Api Version</term><description>2017-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Analysis.AnalysisServerResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Analysis.Models.AnalysisResourceSku" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
