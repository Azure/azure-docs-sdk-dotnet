<Type Name="MockableAnalysisResourceGroupResource" FullName="Azure.ResourceManager.Analysis.Mocking.MockableAnalysisResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableAnalysisResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableAnalysisResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Analysis.Mocking.MockableAnalysisResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableAnalysisResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableAnalysisResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Analysis</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableAnalysisResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Analysis.Mocking.MockableAnalysisResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Analysis</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Analysis.Mocking.MockableAnalysisResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnalysisServer">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Analysis.AnalysisServerResource&gt; GetAnalysisServer (string serverName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Analysis.AnalysisServerResource&gt; GetAnalysisServer(string serverName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Analysis.Mocking.MockableAnalysisResourceGroupResource.GetAnalysisServer(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAnalysisServer (serverName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AnalysisServerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAnalysisServer : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Analysis.AnalysisServerResource&gt;&#xA;override this.GetAnalysisServer : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Analysis.AnalysisServerResource&gt;" Usage="mockableAnalysisResourceGroupResource.GetAnalysisServer (serverName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Analysis</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Analysis.AnalysisServerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="serverName"> The name of the Analysis Services server. It must be a minimum of 3 characters, and a maximum of 63. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets details about the specified Analysis Services server.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}</description></item><item><term>Operation Id</term><description>Servers_GetDetails</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serverName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAnalysisServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Analysis.AnalysisServerResource&gt;&gt; GetAnalysisServerAsync (string serverName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Analysis.AnalysisServerResource&gt;&gt; GetAnalysisServerAsync(string serverName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Analysis.Mocking.MockableAnalysisResourceGroupResource.GetAnalysisServerAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAnalysisServerAsync (serverName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AnalysisServerResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAnalysisServerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Analysis.AnalysisServerResource&gt;&gt;&#xA;override this.GetAnalysisServerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Analysis.AnalysisServerResource&gt;&gt;" Usage="mockableAnalysisResourceGroupResource.GetAnalysisServerAsync (serverName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Analysis</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Analysis.AnalysisServerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="serverName"> The name of the Analysis Services server. It must be a minimum of 3 characters, and a maximum of 63. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets details about the specified Analysis Services server.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AnalysisServices/servers/{serverName}</description></item><item><term>Operation Id</term><description>Servers_GetDetails</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serverName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAnalysisServers">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Analysis.AnalysisServerCollection GetAnalysisServers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Analysis.AnalysisServerCollection GetAnalysisServers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Analysis.Mocking.MockableAnalysisResourceGroupResource.GetAnalysisServers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAnalysisServers () As AnalysisServerCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAnalysisServers : unit -&gt; Azure.ResourceManager.Analysis.AnalysisServerCollection&#xA;override this.GetAnalysisServers : unit -&gt; Azure.ResourceManager.Analysis.AnalysisServerCollection" Usage="mockableAnalysisResourceGroupResource.GetAnalysisServers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Analysis</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Analysis.AnalysisServerCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AnalysisServerResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of AnalysisServerResources and their operations over a AnalysisServerResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
