<Type Name="RouteInstruction" FullName="Azure.Maps.Routing.Models.RouteInstruction">
  <TypeSignature Language="C#" Value="public class RouteInstruction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RouteInstruction extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Maps.Routing.Models.RouteInstruction" />
  <TypeSignature Language="VB.NET" Value="Public Class RouteInstruction" />
  <TypeSignature Language="F#" Value="type RouteInstruction = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Maps.Routing</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A set of attributes describing a maneuver, e.g. 'Turn right', 'Keep left', 'Take the ferry', 'Take the motorway', 'Arrive'. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CombinedMessage">
      <MemberSignature Language="C#" Value="public string CombinedMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CombinedMessage" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Routing.Models.RouteInstruction.CombinedMessage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CombinedMessage As String" />
      <MemberSignature Language="F#" Value="member this.CombinedMessage : string" Usage="Azure.Maps.Routing.Models.RouteInstruction.CombinedMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             A human-readable message for the maneuver combined with the message from the next instruction. Sometimes it is possible to combine two successive instructions into a single instruction making it easier to follow. When this is the case the possibleCombineWithNext flag will be true. For example:
            
             ```
             10. Turn left onto Einsteinweg/A10/E22 towards Ring Amsterdam
             11. Follow Einsteinweg/A10/E22 towards Ring Amsterdam
             ```
            
             The possibleCombineWithNext flag on instruction 10 is true. This indicates to the clients of coded guidance that it can be combined with instruction 11. The instructions will be combined automatically for clients requesting human-readable guidance. The combinedMessage field contains the combined message:
            
             ```
             Turn left onto Einsteinweg/A10/E22 towards Ring Amsterdam
             then follow Einsteinweg/A10/E22 towards Ring Amsterdam.
             ```
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CountryCode">
      <MemberSignature Language="C#" Value="public string CountryCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CountryCode" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Routing.Models.RouteInstruction.CountryCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CountryCode As String" />
      <MemberSignature Language="F#" Value="member this.CountryCode : string" Usage="Azure.Maps.Routing.Models.RouteInstruction.CountryCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> 3-character [ISO 3166-1](https://www.iso.org/iso-3166-country-codes.html) alpha-3 country code. E.g. USA. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrivingSide">
      <MemberSignature Language="C#" Value="public Azure.Maps.Routing.Models.DrivingSide? DrivingSide { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.Maps.Routing.Models.DrivingSide&gt; DrivingSide" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Routing.Models.RouteInstruction.DrivingSide" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DrivingSide As Nullable(Of DrivingSide)" />
      <MemberSignature Language="F#" Value="member this.DrivingSide : Nullable&lt;Azure.Maps.Routing.Models.DrivingSide&gt;" Usage="Azure.Maps.Routing.Models.RouteInstruction.DrivingSide" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.Maps.Routing.Models.DrivingSide&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Indicates left-hand vs. right-hand side driving at the point of the maneuver. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitNumber">
      <MemberSignature Language="C#" Value="public string ExitNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExitNumber" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Routing.Models.RouteInstruction.ExitNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExitNumber As String" />
      <MemberSignature Language="F#" Value="member this.ExitNumber : string" Usage="Azure.Maps.Routing.Models.RouteInstruction.ExitNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The number(s) of a highway exit taken by the current maneuver. If an exit has multiple exit numbers, they will be separated by "," and possibly aggregated by "-", e.g., "10, 13-15". </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstructionType">
      <MemberSignature Language="C#" Value="public Azure.Maps.Routing.Models.GuidanceInstructionType? InstructionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.Maps.Routing.Models.GuidanceInstructionType&gt; InstructionType" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Routing.Models.RouteInstruction.InstructionType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstructionType As Nullable(Of GuidanceInstructionType)" />
      <MemberSignature Language="F#" Value="member this.InstructionType : Nullable&lt;Azure.Maps.Routing.Models.GuidanceInstructionType&gt;" Usage="Azure.Maps.Routing.Models.RouteInstruction.InstructionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.Maps.Routing.Models.GuidanceInstructionType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Type of the instruction, e.g., turn or change of road form. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JunctionType">
      <MemberSignature Language="C#" Value="public Azure.Maps.Routing.Models.JunctionType? JunctionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.Maps.Routing.Models.JunctionType&gt; JunctionType" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Routing.Models.RouteInstruction.JunctionType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JunctionType As Nullable(Of JunctionType)" />
      <MemberSignature Language="F#" Value="member this.JunctionType : Nullable&lt;Azure.Maps.Routing.Models.JunctionType&gt;" Usage="Azure.Maps.Routing.Models.RouteInstruction.JunctionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.Maps.Routing.Models.JunctionType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The type of the junction where the maneuver takes place. For larger roundabouts, two separate instructions are generated for entering and leaving the roundabout. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Maneuver">
      <MemberSignature Language="C#" Value="public Azure.Maps.Routing.Models.GuidanceManeuver? Maneuver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.Maps.Routing.Models.GuidanceManeuver&gt; Maneuver" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Routing.Models.RouteInstruction.Maneuver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Maneuver As Nullable(Of GuidanceManeuver)" />
      <MemberSignature Language="F#" Value="member this.Maneuver : Nullable&lt;Azure.Maps.Routing.Models.GuidanceManeuver&gt;" Usage="Azure.Maps.Routing.Models.RouteInstruction.Maneuver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.Maps.Routing.Models.GuidanceManeuver&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A code identifying the maneuver. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Routing.Models.RouteInstruction.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As String" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="Azure.Maps.Routing.Models.RouteInstruction.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A human-readable message for the maneuver. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point">
      <MemberSignature Language="C#" Value="public Azure.Core.GeoJson.GeoPosition Point { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.Core.GeoJson.GeoPosition Point" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Routing.Models.RouteInstruction.Point" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Point As GeoPosition" />
      <MemberSignature Language="F#" Value="member this.Point : Azure.Core.GeoJson.GeoPosition" Usage="Azure.Maps.Routing.Models.RouteInstruction.Point" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.GeoJson.GeoPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A location represented as a latitude and longitude. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointIndex">
      <MemberSignature Language="C#" Value="public int? PointIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; PointIndex" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Routing.Models.RouteInstruction.PointIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PointIndex As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.PointIndex : Nullable&lt;int&gt;" Usage="Azure.Maps.Routing.Models.RouteInstruction.PointIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The index of the point in the list of polyline "points" corresponding to the point of the instruction. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PossibleCombineWithNext">
      <MemberSignature Language="C#" Value="public bool? PossibleCombineWithNext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; PossibleCombineWithNext" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Routing.Models.RouteInstruction.PossibleCombineWithNext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PossibleCombineWithNext As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.PossibleCombineWithNext : Nullable&lt;bool&gt;" Usage="Azure.Maps.Routing.Models.RouteInstruction.PossibleCombineWithNext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> It is possible to optionally combine the instruction with the next one. This can be used to build messages like "Turn left and then turn right". </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoadNumbers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;string&gt; RoadNumbers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; RoadNumbers" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Routing.Models.RouteInstruction.RoadNumbers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoadNumbers As IReadOnlyList(Of String)" />
      <MemberSignature Language="F#" Value="member this.RoadNumbers : System.Collections.Generic.IReadOnlyList&lt;string&gt;" Usage="Azure.Maps.Routing.Models.RouteInstruction.RoadNumbers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The road number(s) of the next significant road segment(s) after the maneuver, or of the road(s) to be followed. Example: ["E34", "N205"]. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundaboutExitNumber">
      <MemberSignature Language="C#" Value="public long? RoundaboutExitNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; RoundaboutExitNumber" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Routing.Models.RouteInstruction.RoundaboutExitNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoundaboutExitNumber As Nullable(Of Long)" />
      <MemberSignature Language="F#" Value="member this.RoundaboutExitNumber : Nullable&lt;int64&gt;" Usage="Azure.Maps.Routing.Models.RouteInstruction.RoundaboutExitNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> This indicates which exit to take at a roundabout. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteOffsetInMeters">
      <MemberSignature Language="C#" Value="public int? RouteOffsetInMeters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; RouteOffsetInMeters" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Routing.Models.RouteInstruction.RouteOffsetInMeters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RouteOffsetInMeters As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.RouteOffsetInMeters : Nullable&lt;int&gt;" Usage="Azure.Maps.Routing.Models.RouteInstruction.RouteOffsetInMeters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Distance from the start of the route to the point of the instruction. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignpostText">
      <MemberSignature Language="C#" Value="public string SignpostText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignpostText" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Routing.Models.RouteInstruction.SignpostText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignpostText As String" />
      <MemberSignature Language="F#" Value="member this.SignpostText : string" Usage="Azure.Maps.Routing.Models.RouteInstruction.SignpostText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The text on a signpost which is most relevant to the maneuver, or to the direction that should be followed. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateCode">
      <MemberSignature Language="C#" Value="public string StateCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StateCode" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Routing.Models.RouteInstruction.StateCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StateCode As String" />
      <MemberSignature Language="F#" Value="member this.StateCode : string" Usage="Azure.Maps.Routing.Models.RouteInstruction.StateCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A subdivision (e.g., state) of the country, represented by the second part of an [ISO 3166-2](https://www.iso.org/standard/63546.html) code. This is only available for some countries/regions like the US, Canada, and Mexico. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Street">
      <MemberSignature Language="C#" Value="public string Street { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Street" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Routing.Models.RouteInstruction.Street" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Street As String" />
      <MemberSignature Language="F#" Value="member this.Street : string" Usage="Azure.Maps.Routing.Models.RouteInstruction.Street" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Street name of the next significant road segment after the maneuver, or of the street that should be followed. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TravelTimeInSeconds">
      <MemberSignature Language="C#" Value="public int? TravelTimeInSeconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; TravelTimeInSeconds" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Routing.Models.RouteInstruction.TravelTimeInSeconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TravelTimeInSeconds As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.TravelTimeInSeconds : Nullable&lt;int&gt;" Usage="Azure.Maps.Routing.Models.RouteInstruction.TravelTimeInSeconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Estimated travel time up to the point corresponding to routeOffsetInMeters. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TurnAngleInDegrees">
      <MemberSignature Language="C#" Value="public int? TurnAngleInDegrees { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; TurnAngleInDegrees" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Routing.Models.RouteInstruction.TurnAngleInDegrees" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TurnAngleInDegrees As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.TurnAngleInDegrees : Nullable&lt;int&gt;" Usage="Azure.Maps.Routing.Models.RouteInstruction.TurnAngleInDegrees" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Indicates the direction of an instruction. If junctionType indicates a turn instruction:
            
               * 180 = U-turn
               * [-179, -1] = Left turn
               * 0 = Straight on (a '0 degree' turn)
               * [1, 179] = Right turn
            
             If junctionType indicates a bifurcation instruction:
            
               * &lt;0 - keep left
               * \&gt;0 - keep right
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
