<Type Name="IRedisCachePremium" FullName="Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium">
  <TypeSignature Language="C#" Value="public interface IRedisCachePremium : Microsoft.Azure.Management.Redis.Fluent.IRedisCache, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IGroupableResource&lt;Microsoft.Azure.Management.Redis.Fluent.IRedisManager,Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner&lt;Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.Redis.Fluent.IRedisManager&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IRefreshable&lt;Microsoft.Azure.Management.Redis.Fluent.IRedisCache&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IUpdatable&lt;Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IUpdate&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRedisCachePremium implements class Microsoft.Azure.Management.Redis.Fluent.IRedisCache, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IGroupableResource`2&lt;class Microsoft.Azure.Management.Redis.Fluent.IRedisManager, class Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner`1&lt;class Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager`1&lt;class Microsoft.Azure.Management.Redis.Fluent.IRedisManager&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasName, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasResourceGroup, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IResource, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IIndexable, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IRefreshable`1&lt;class Microsoft.Azure.Management.Redis.Fluent.IRedisCache&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IUpdatable`1&lt;class Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IUpdate&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Redis.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Redis.Fluent.IRedisCache</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IGroupableResource&lt;Microsoft.Azure.Management.Redis.Fluent.IRedisManager,Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner&lt;Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.Redis.Fluent.IRedisManager&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IRefreshable&lt;Microsoft.Azure.Management.Redis.Fluent.IRedisCache&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IUpdatable&lt;Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IUpdate&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An immutable client-side representation of an Azure Redis cache with Premium SKU.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DeletePatchSchedule">
      <MemberSignature Language="C#" Value="public void DeletePatchSchedule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeletePatchSchedule() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium.DeletePatchSchedule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.Redis.Fluent</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Deletes the patching schedule for Redis Cache.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportData">
      <MemberSignature Language="C#" Value="public void ExportData (string containerSASUrl, string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportData(string containerSASUrl, string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium.ExportData(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.Redis.Fluent</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containerSASUrl" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="containerSASUrl">Container name to export to.</param>
        <param name="prefix">Prefix to use for exported files.</param>
        <summary>
            Export data from Redis Cache.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportData">
      <MemberSignature Language="C#" Value="public void ExportData (string containerSASUrl, string prefix, string fileFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportData(string containerSASUrl, string prefix, string fileFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium.ExportData(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.Redis.Fluent</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containerSASUrl" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="fileFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="containerSASUrl">Container name to export to.</param>
        <param name="prefix">Prefix to use for exported files.</param>
        <param name="fileFormat">Specifies file format.</param>
        <summary>
            Export data from Redis Cache.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceReboot">
      <MemberSignature Language="C#" Value="public void ForceReboot (string rebootType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForceReboot(string rebootType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium.ForceReboot(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.Redis.Fluent</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rebootType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rebootType">
            Specifies which Redis node(s) to reboot. Depending on this value data loss is
            possible. Possible values include: 'PrimaryNode', 'SecondaryNode', 'AllNodes'.
            </param>
        <summary>
            Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceReboot">
      <MemberSignature Language="C#" Value="public void ForceReboot (string rebootType, int shardId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForceReboot(string rebootType, int32 shardId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium.ForceReboot(System.String,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.Redis.Fluent</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rebootType" Type="System.String" />
        <Parameter Name="shardId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rebootType">
            Specifies which Redis node(s) to reboot. Depending on this value data loss is
            possible. Possible values include: 'PrimaryNode', 'SecondaryNode', 'AllNodes'.
            </param>
        <param name="shardId">In case of cluster cache, this specifies shard id which should be rebooted.</param>
        <summary>
            Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportData">
      <MemberSignature Language="C#" Value="public void ImportData (System.Collections.Generic.IList&lt;string&gt; files);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportData(class System.Collections.Generic.IList`1&lt;string&gt; files) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium.ImportData(System.Collections.Generic.IList{System.String})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.Redis.Fluent</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="files" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="files">Files to import.</param>
        <summary>
            Import data into Redis Cache.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportData">
      <MemberSignature Language="C#" Value="public void ImportData (System.Collections.Generic.IList&lt;string&gt; files, string fileFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportData(class System.Collections.Generic.IList`1&lt;string&gt; files, string fileFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium.ImportData(System.Collections.Generic.IList{System.String},System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.Redis.Fluent</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="files" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="fileFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="files">Files to import.</param>
        <param name="fileFormat">Specifies file format.</param>
        <summary>
            Import data into Redis Cache.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListPatchSchedules">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry&gt; ListPatchSchedules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry&gt; ListPatchSchedules() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium.ListPatchSchedules" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.Redis.Fluent</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the patching schedule for Redis Cache.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>List of patch schedules for current Redis Cache.</return>
      </Docs>
    </Member>
  </Members>
</Type>