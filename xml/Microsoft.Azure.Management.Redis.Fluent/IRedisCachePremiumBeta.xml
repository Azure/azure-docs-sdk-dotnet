<Type Name="IRedisCachePremiumBeta" FullName="Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremiumBeta">
  <TypeSignature Language="C#" Value="public interface IRedisCachePremiumBeta : Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRedisCachePremiumBeta implements class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremiumBeta" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRedisCachePremiumBeta&#xA;Implements IBeta" />
  <TypeSignature Language="F#" Value="type IRedisCachePremiumBeta = interface&#xA;    interface IBeta" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Redis.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An immutable client-side representation of an Azure Redis cache with Premium SKU.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddLinkedServer">
      <MemberSignature Language="C#" Value="public string AddLinkedServer (string linkedRedisCacheId, string linkedServerLocation, Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string AddLinkedServer(string linkedRedisCacheId, string linkedServerLocation, valuetype Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremiumBeta.AddLinkedServer(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddLinkedServer (linkedRedisCacheId As String, linkedServerLocation As String, role As ReplicationRole) As String" />
      <MemberSignature Language="F#" Value="abstract member AddLinkedServer : string * string * Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole -&gt; string" Usage="iRedisCachePremiumBeta.AddLinkedServer (linkedRedisCacheId, linkedServerLocation, role)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Redis.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkedRedisCacheId" Type="System.String" />
        <Parameter Name="linkedServerLocation" Type="System.String" />
        <Parameter Name="role" Type="Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole" />
      </Parameters>
      <Docs>
        <param name="linkedRedisCacheId">The resource Id of the Redis instance to link with.</param>
        <param name="linkedServerLocation">The location of the linked Redis instance.</param>
        <param name="role">The role of the linked server.</param>
        <summary>
            Adds a linked server to the current Redis cache instance.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Name of the linked server.</return>
      </Docs>
    </Member>
    <Member MemberName="AddLinkedServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; AddLinkedServerAsync (string linkedRedisCacheId, string linkedServerLocation, Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole role, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; AddLinkedServerAsync(string linkedRedisCacheId, string linkedServerLocation, valuetype Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole role, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremiumBeta.AddLinkedServerAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddLinkedServerAsync : string * string * Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="iRedisCachePremiumBeta.AddLinkedServerAsync (linkedRedisCacheId, linkedServerLocation, role, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Redis.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkedRedisCacheId" Type="System.String" />
        <Parameter Name="linkedServerLocation" Type="System.String" />
        <Parameter Name="role" Type="Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="linkedRedisCacheId">The resource Id of the Redis instance to link with.</param>
        <param name="linkedServerLocation">The location of the linked Redis instance.</param>
        <param name="role">The role of the linked server.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Adds a linked server to the current Redis cache instance.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Name of the linked server.</return>
      </Docs>
    </Member>
    <Member MemberName="GetLinkedServerRole">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole GetLinkedServerRole (string linkedServerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole GetLinkedServerRole(string linkedServerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremiumBeta.GetLinkedServerRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLinkedServerRole (linkedServerName As String) As ReplicationRole" />
      <MemberSignature Language="F#" Value="abstract member GetLinkedServerRole : string -&gt; Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole" Usage="iRedisCachePremiumBeta.GetLinkedServerRole linkedServerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Redis.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkedServerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="linkedServerName">The name of the linked server.</param>
        <summary>
            Gets the role for the linked server of the current Redis cache instance.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The role of the linked server.</return>
      </Docs>
    </Member>
    <Member MemberName="GetLinkedServerRoleAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole&gt; GetLinkedServerRoleAsync (string linkedServerName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole&gt; GetLinkedServerRoleAsync(string linkedServerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremiumBeta.GetLinkedServerRoleAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetLinkedServerRoleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole&gt;" Usage="iRedisCachePremiumBeta.GetLinkedServerRoleAsync (linkedServerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Redis.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkedServerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="linkedServerName">The name of the linked server.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Gets the role for the linked server of the current Redis cache instance.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The role of the linked server.</return>
      </Docs>
    </Member>
    <Member MemberName="ListLinkedServers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;string,Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole&gt; ListLinkedServers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, valuetype Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole&gt; ListLinkedServers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremiumBeta.ListLinkedServers" />
      <MemberSignature Language="VB.NET" Value="Public Function ListLinkedServers () As IReadOnlyDictionary(Of String, ReplicationRole)" />
      <MemberSignature Language="F#" Value="abstract member ListLinkedServers : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;string, Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole&gt;" Usage="iRedisCachePremiumBeta.ListLinkedServers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Redis.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the list of linked servers associated with this redis cache.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The Roles of the linked servers, indexed by name.</return>
      </Docs>
    </Member>
    <Member MemberName="ListLinkedServersAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyDictionary&lt;string,Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole&gt;&gt; ListLinkedServersAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, valuetype Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole&gt;&gt; ListLinkedServersAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremiumBeta.ListLinkedServersAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ListLinkedServersAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyDictionary&lt;string, Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole&gt;&gt;" Usage="iRedisCachePremiumBeta.ListLinkedServersAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Redis.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyDictionary&lt;System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Gets the list of linked servers associated with this redis cache.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The Roles of the linked servers, indexed by name.</return>
      </Docs>
    </Member>
    <Member MemberName="PatchSchedules">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry&gt; PatchSchedules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry&gt; PatchSchedules" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremiumBeta.PatchSchedules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PatchSchedules As IReadOnlyList(Of ScheduleEntry)" />
      <MemberSignature Language="F#" Value="member this.PatchSchedules : System.Collections.Generic.IReadOnlyList&lt;Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry&gt;" Usage="Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremiumBeta.PatchSchedules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Redis.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets List of patch schedules for current Redis Cache.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLinkedServer">
      <MemberSignature Language="C#" Value="public void RemoveLinkedServer (string linkedServerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveLinkedServer(string linkedServerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremiumBeta.RemoveLinkedServer(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveLinkedServer (linkedServerName As String)" />
      <MemberSignature Language="F#" Value="abstract member RemoveLinkedServer : string -&gt; unit" Usage="iRedisCachePremiumBeta.RemoveLinkedServer linkedServerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Redis.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkedServerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="linkedServerName">The name of the linked server.</param>
        <summary>
            Removes the linked server from the current Redis cache instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLinkedServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RemoveLinkedServerAsync (string linkedServerName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoveLinkedServerAsync(string linkedServerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremiumBeta.RemoveLinkedServerAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RemoveLinkedServerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iRedisCachePremiumBeta.RemoveLinkedServerAsync (linkedServerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Redis.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkedServerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="linkedServerName">The name of the linked server.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Removes the linked server from the current Redis cache instance.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>