<Type Name="MockableWorkloadMonitorResourceGroupResource" FullName="Azure.ResourceManager.WorkloadMonitor.Mocking.MockableWorkloadMonitorResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableWorkloadMonitorResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableWorkloadMonitorResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.WorkloadMonitor.Mocking.MockableWorkloadMonitorResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableWorkloadMonitorResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableWorkloadMonitorResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.WorkloadMonitor</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableWorkloadMonitorResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadMonitor.Mocking.MockableWorkloadMonitorResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadMonitor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadMonitor.Mocking.MockableWorkloadMonitorResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHealthMonitor">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource&gt; GetHealthMonitor (string providerName, string resourceCollectionName, string resourceName, string monitorId, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource&gt; GetHealthMonitor(string providerName, string resourceCollectionName, string resourceName, string monitorId, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadMonitor.Mocking.MockableWorkloadMonitorResourceGroupResource.GetHealthMonitor(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHealthMonitor (providerName As String, resourceCollectionName As String, resourceName As String, monitorId As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of HealthMonitorResource)" />
      <MemberSignature Language="F#" Value="abstract member GetHealthMonitor : string * string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource&gt;&#xA;override this.GetHealthMonitor : string * string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource&gt;" Usage="mockableWorkloadMonitorResourceGroupResource.GetHealthMonitor (providerName, resourceCollectionName, resourceName, monitorId, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadMonitor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="resourceCollectionName" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="monitorId" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="providerName"> The provider name (ex: Microsoft.Compute for virtual machines). </param>
        <param name="resourceCollectionName"> The resource collection name (ex: virtualMachines for virtual machines). </param>
        <param name="resourceName"> The name of the virtual machine. </param>
        <param name="monitorId"> The monitor Id of the virtual machine. </param>
        <param name="expand"> Optionally expand the monitorâ€™s evidence and/or configuration. Example: $expand=evidence,configuration. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the current health status of a monitor of a virtual machine. Optional parameter: $expand (retrieve the monitor's evidence and configuration).
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerName}/{resourceCollectionName}/{resourceName}/providers/Microsoft.WorkloadMonitor/monitors/{monitorId}</description></item><item><term>Operation Id</term><description>HealthMonitors_Get</description></item><item><term>Default Api Version</term><description>2020-01-13-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerName" />, <paramref name="resourceCollectionName" />, <paramref name="resourceName" /> or <paramref name="monitorId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerName" />, <paramref name="resourceCollectionName" />, <paramref name="resourceName" /> or <paramref name="monitorId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHealthMonitorAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource&gt;&gt; GetHealthMonitorAsync (string providerName, string resourceCollectionName, string resourceName, string monitorId, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource&gt;&gt; GetHealthMonitorAsync(string providerName, string resourceCollectionName, string resourceName, string monitorId, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadMonitor.Mocking.MockableWorkloadMonitorResourceGroupResource.GetHealthMonitorAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHealthMonitorAsync (providerName As String, resourceCollectionName As String, resourceName As String, monitorId As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of HealthMonitorResource))" />
      <MemberSignature Language="F#" Value="abstract member GetHealthMonitorAsync : string * string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource&gt;&gt;&#xA;override this.GetHealthMonitorAsync : string * string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource&gt;&gt;" Usage="mockableWorkloadMonitorResourceGroupResource.GetHealthMonitorAsync (providerName, resourceCollectionName, resourceName, monitorId, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadMonitor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="resourceCollectionName" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="monitorId" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="providerName"> The provider name (ex: Microsoft.Compute for virtual machines). </param>
        <param name="resourceCollectionName"> The resource collection name (ex: virtualMachines for virtual machines). </param>
        <param name="resourceName"> The name of the virtual machine. </param>
        <param name="monitorId"> The monitor Id of the virtual machine. </param>
        <param name="expand"> Optionally expand the monitorâ€™s evidence and/or configuration. Example: $expand=evidence,configuration. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the current health status of a monitor of a virtual machine. Optional parameter: $expand (retrieve the monitor's evidence and configuration).
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerName}/{resourceCollectionName}/{resourceName}/providers/Microsoft.WorkloadMonitor/monitors/{monitorId}</description></item><item><term>Operation Id</term><description>HealthMonitors_Get</description></item><item><term>Default Api Version</term><description>2020-01-13-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerName" />, <paramref name="resourceCollectionName" />, <paramref name="resourceName" /> or <paramref name="monitorId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerName" />, <paramref name="resourceCollectionName" />, <paramref name="resourceName" /> or <paramref name="monitorId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHealthMonitors">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.WorkloadMonitor.HealthMonitorCollection GetHealthMonitors (string providerName, string resourceCollectionName, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.WorkloadMonitor.HealthMonitorCollection GetHealthMonitors(string providerName, string resourceCollectionName, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadMonitor.Mocking.MockableWorkloadMonitorResourceGroupResource.GetHealthMonitors(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHealthMonitors (providerName As String, resourceCollectionName As String, resourceName As String) As HealthMonitorCollection" />
      <MemberSignature Language="F#" Value="abstract member GetHealthMonitors : string * string * string -&gt; Azure.ResourceManager.WorkloadMonitor.HealthMonitorCollection&#xA;override this.GetHealthMonitors : string * string * string -&gt; Azure.ResourceManager.WorkloadMonitor.HealthMonitorCollection" Usage="mockableWorkloadMonitorResourceGroupResource.GetHealthMonitors (providerName, resourceCollectionName, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadMonitor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.WorkloadMonitor.HealthMonitorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="resourceCollectionName" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName"> The provider name (ex: Microsoft.Compute for virtual machines). </param>
        <param name="resourceCollectionName"> The resource collection name (ex: virtualMachines for virtual machines). </param>
        <param name="resourceName"> The name of the virtual machine. </param>
        <summary> Gets a collection of HealthMonitorResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of HealthMonitorResources and their operations over a HealthMonitorResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerName" />, <paramref name="resourceCollectionName" /> or <paramref name="resourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerName" />, <paramref name="resourceCollectionName" /> or <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
