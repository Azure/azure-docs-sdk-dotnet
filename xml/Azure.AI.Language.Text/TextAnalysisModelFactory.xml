<Type Name="TextAnalysisModelFactory" FullName="Azure.AI.Language.Text.TextAnalysisModelFactory">
  <TypeSignature Language="C#" Value="public static class TextAnalysisModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TextAnalysisModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.Language.Text.TextAnalysisModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class TextAnalysisModelFactory" />
  <TypeSignature Language="F#" Value="type TextAnalysisModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.Language.Text</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AbstractiveSummarizationOperationResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.AbstractiveSummarizationOperationResult AbstractiveSummarizationOperationResult (DateTimeOffset lastUpdateDateTime = default, Azure.AI.Language.Text.TextActionState status = default, string name = default, Azure.AI.Language.Text.AbstractiveSummarizationResult results = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.AbstractiveSummarizationOperationResult AbstractiveSummarizationOperationResult(valuetype System.DateTimeOffset lastUpdateDateTime, valuetype Azure.AI.Language.Text.TextActionState status, string name, class Azure.AI.Language.Text.AbstractiveSummarizationResult results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.AbstractiveSummarizationOperationResult(System.DateTimeOffset,Azure.AI.Language.Text.TextActionState,System.String,Azure.AI.Language.Text.AbstractiveSummarizationResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AbstractiveSummarizationOperationResult (Optional lastUpdateDateTime As DateTimeOffset = Nothing, Optional status As TextActionState = Nothing, Optional name As String = Nothing, Optional results As AbstractiveSummarizationResult = Nothing) As AbstractiveSummarizationOperationResult" />
      <MemberSignature Language="F#" Value="static member AbstractiveSummarizationOperationResult : DateTimeOffset * Azure.AI.Language.Text.TextActionState * string * Azure.AI.Language.Text.AbstractiveSummarizationResult -&gt; Azure.AI.Language.Text.AbstractiveSummarizationOperationResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.AbstractiveSummarizationOperationResult (lastUpdateDateTime, status, name, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.AbstractiveSummarizationOperationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastUpdateDateTime" Type="System.DateTimeOffset" />
        <Parameter Name="status" Type="Azure.AI.Language.Text.TextActionState" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="results" Type="Azure.AI.Language.Text.AbstractiveSummarizationResult" />
      </Parameters>
      <Docs>
        <param name="lastUpdateDateTime"> The last updated time in UTC for the task. </param>
        <param name="status"> The status of the task at the mentioned last update time. </param>
        <param name="name"> task name. </param>
        <param name="results"> Results of the task. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.AbstractiveSummarizationOperationResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.AbstractiveSummarizationOperationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbstractiveSummarizationResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.AbstractiveSummarizationResult AbstractiveSummarizationResult (System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentError&gt; errors = default, Azure.AI.Language.Text.RequestStatistics statistics = default, string modelVersion = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.AbstractiveSummaryActionResult&gt; documents = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.AbstractiveSummarizationResult AbstractiveSummarizationResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DocumentError&gt; errors, class Azure.AI.Language.Text.RequestStatistics statistics, string modelVersion, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.AbstractiveSummaryActionResult&gt; documents) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.AbstractiveSummarizationResult(System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DocumentError},Azure.AI.Language.Text.RequestStatistics,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.AbstractiveSummaryActionResult})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AbstractiveSummarizationResult (Optional errors As IEnumerable(Of DocumentError) = Nothing, Optional statistics As RequestStatistics = Nothing, Optional modelVersion As String = Nothing, Optional documents As IEnumerable(Of AbstractiveSummaryActionResult) = Nothing) As AbstractiveSummarizationResult" />
      <MemberSignature Language="F#" Value="static member AbstractiveSummarizationResult : seq&lt;Azure.AI.Language.Text.DocumentError&gt; * Azure.AI.Language.Text.RequestStatistics * string * seq&lt;Azure.AI.Language.Text.AbstractiveSummaryActionResult&gt; -&gt; Azure.AI.Language.Text.AbstractiveSummarizationResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.AbstractiveSummarizationResult (errors, statistics, modelVersion, documents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.AbstractiveSummarizationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errors" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentError&gt;" />
        <Parameter Name="statistics" Type="Azure.AI.Language.Text.RequestStatistics" />
        <Parameter Name="modelVersion" Type="System.String" />
        <Parameter Name="documents" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.AbstractiveSummaryActionResult&gt;" />
      </Parameters>
      <Docs>
        <param name="errors"> Errors by document id. </param>
        <param name="statistics"> if showStats=true was specified in the request this field will contain information about the request payload. </param>
        <param name="modelVersion"> This field indicates which model is used for scoring. </param>
        <param name="documents"> Response by document. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.AbstractiveSummarizationResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.AbstractiveSummarizationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbstractiveSummary">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.AbstractiveSummary AbstractiveSummary (string text = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.SummaryContext&gt; contexts = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.AbstractiveSummary AbstractiveSummary(string text, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.SummaryContext&gt; contexts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.AbstractiveSummary(System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.SummaryContext})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AbstractiveSummary (Optional text As String = Nothing, Optional contexts As IEnumerable(Of SummaryContext) = Nothing) As AbstractiveSummary" />
      <MemberSignature Language="F#" Value="static member AbstractiveSummary : string * seq&lt;Azure.AI.Language.Text.SummaryContext&gt; -&gt; Azure.AI.Language.Text.AbstractiveSummary" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.AbstractiveSummary (text, contexts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.AbstractiveSummary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="contexts" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.SummaryContext&gt;" />
      </Parameters>
      <Docs>
        <param name="text"> The text of the summary. </param>
        <param name="contexts"> The context list of the summary. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.AbstractiveSummary" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.AbstractiveSummary" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbstractiveSummaryActionResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.AbstractiveSummaryActionResult AbstractiveSummaryActionResult (string id = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentWarning&gt; warnings = default, Azure.AI.Language.Text.DocumentStatistics statistics = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.AbstractiveSummary&gt; summaries = default, Azure.AI.Language.Text.DetectedLanguage detectedLanguage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.AbstractiveSummaryActionResult AbstractiveSummaryActionResult(string id, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DocumentWarning&gt; warnings, class Azure.AI.Language.Text.DocumentStatistics statistics, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.AbstractiveSummary&gt; summaries, class Azure.AI.Language.Text.DetectedLanguage detectedLanguage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.AbstractiveSummaryActionResult(System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DocumentWarning},Azure.AI.Language.Text.DocumentStatistics,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.AbstractiveSummary},Azure.AI.Language.Text.DetectedLanguage)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AbstractiveSummaryActionResult (Optional id As String = Nothing, Optional warnings As IEnumerable(Of DocumentWarning) = Nothing, Optional statistics As DocumentStatistics = Nothing, Optional summaries As IEnumerable(Of AbstractiveSummary) = Nothing, Optional detectedLanguage As DetectedLanguage = Nothing) As AbstractiveSummaryActionResult" />
      <MemberSignature Language="F#" Value="static member AbstractiveSummaryActionResult : string * seq&lt;Azure.AI.Language.Text.DocumentWarning&gt; * Azure.AI.Language.Text.DocumentStatistics * seq&lt;Azure.AI.Language.Text.AbstractiveSummary&gt; * Azure.AI.Language.Text.DetectedLanguage -&gt; Azure.AI.Language.Text.AbstractiveSummaryActionResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.AbstractiveSummaryActionResult (id, warnings, statistics, summaries, detectedLanguage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.AbstractiveSummaryActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="warnings" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentWarning&gt;" />
        <Parameter Name="statistics" Type="Azure.AI.Language.Text.DocumentStatistics" />
        <Parameter Name="summaries" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.AbstractiveSummary&gt;" />
        <Parameter Name="detectedLanguage" Type="Azure.AI.Language.Text.DetectedLanguage" />
      </Parameters>
      <Docs>
        <param name="id"> Unique, non-empty document identifier. </param>
        <param name="warnings"> Warnings encountered while processing document. </param>
        <param name="statistics"> if showStats=true was specified in the request this field will contain information about the document payload. </param>
        <param name="summaries"> A list of abstractive summaries. </param>
        <param name="detectedLanguage"> If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.AbstractiveSummaryActionResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.AbstractiveSummaryActionResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AgeMetadata">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.AgeMetadata AgeMetadata (double value = 0, Azure.AI.Language.Text.AgeUnit unit = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.AgeMetadata AgeMetadata(float64 value, valuetype Azure.AI.Language.Text.AgeUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.AgeMetadata(System.Double,Azure.AI.Language.Text.AgeUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AgeMetadata (Optional value As Double = 0, Optional unit As AgeUnit = Nothing) As AgeMetadata" />
      <MemberSignature Language="F#" Value="static member AgeMetadata : double * Azure.AI.Language.Text.AgeUnit -&gt; Azure.AI.Language.Text.AgeMetadata" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.AgeMetadata (value, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.AgeMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="unit" Type="Azure.AI.Language.Text.AgeUnit" />
      </Parameters>
      <Docs>
        <param name="value"> The numeric value that the extracted text denotes. </param>
        <param name="unit"> Unit of measure for age. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.AgeMetadata" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.AgeMetadata" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnalyzeTextEntitiesResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.AnalyzeTextEntitiesResult AnalyzeTextEntitiesResult (Azure.AI.Language.Text.EntitiesWithMetadataAutoResult results = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.AnalyzeTextEntitiesResult AnalyzeTextEntitiesResult(class Azure.AI.Language.Text.EntitiesWithMetadataAutoResult results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.AnalyzeTextEntitiesResult(Azure.AI.Language.Text.EntitiesWithMetadataAutoResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnalyzeTextEntitiesResult (Optional results As EntitiesWithMetadataAutoResult = Nothing) As AnalyzeTextEntitiesResult" />
      <MemberSignature Language="F#" Value="static member AnalyzeTextEntitiesResult : Azure.AI.Language.Text.EntitiesWithMetadataAutoResult -&gt; Azure.AI.Language.Text.AnalyzeTextEntitiesResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.AnalyzeTextEntitiesResult results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.AnalyzeTextEntitiesResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="Azure.AI.Language.Text.EntitiesWithMetadataAutoResult" />
      </Parameters>
      <Docs>
        <param name="results"> Results for entity recognition. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.AnalyzeTextEntitiesResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.AnalyzeTextEntitiesResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnalyzeTextEntityLinkingResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.AnalyzeTextEntityLinkingResult AnalyzeTextEntityLinkingResult (Azure.AI.Language.Text.EntityLinkingResult results = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.AnalyzeTextEntityLinkingResult AnalyzeTextEntityLinkingResult(class Azure.AI.Language.Text.EntityLinkingResult results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.AnalyzeTextEntityLinkingResult(Azure.AI.Language.Text.EntityLinkingResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnalyzeTextEntityLinkingResult (Optional results As EntityLinkingResult = Nothing) As AnalyzeTextEntityLinkingResult" />
      <MemberSignature Language="F#" Value="static member AnalyzeTextEntityLinkingResult : Azure.AI.Language.Text.EntityLinkingResult -&gt; Azure.AI.Language.Text.AnalyzeTextEntityLinkingResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.AnalyzeTextEntityLinkingResult results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.AnalyzeTextEntityLinkingResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="Azure.AI.Language.Text.EntityLinkingResult" />
      </Parameters>
      <Docs>
        <param name="results"> Entity linking result. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.AnalyzeTextEntityLinkingResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.AnalyzeTextEntityLinkingResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnalyzeTextError">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.AnalyzeTextError AnalyzeTextError (Azure.AI.Language.Text.AnalyzeTextErrorCode code = default, string message = default, string target = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.AnalyzeTextError&gt; details = default, Azure.AI.Language.Text.InnerErrorModel innererror = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.AnalyzeTextError AnalyzeTextError(valuetype Azure.AI.Language.Text.AnalyzeTextErrorCode code, string message, string target, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.AnalyzeTextError&gt; details, class Azure.AI.Language.Text.InnerErrorModel innererror) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.AnalyzeTextError(Azure.AI.Language.Text.AnalyzeTextErrorCode,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.AnalyzeTextError},Azure.AI.Language.Text.InnerErrorModel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnalyzeTextError (Optional code As AnalyzeTextErrorCode = Nothing, Optional message As String = Nothing, Optional target As String = Nothing, Optional details As IEnumerable(Of AnalyzeTextError) = Nothing, Optional innererror As InnerErrorModel = Nothing) As AnalyzeTextError" />
      <MemberSignature Language="F#" Value="static member AnalyzeTextError : Azure.AI.Language.Text.AnalyzeTextErrorCode * string * string * seq&lt;Azure.AI.Language.Text.AnalyzeTextError&gt; * Azure.AI.Language.Text.InnerErrorModel -&gt; Azure.AI.Language.Text.AnalyzeTextError" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.AnalyzeTextError (code, message, target, details, innererror)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.AnalyzeTextError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="Azure.AI.Language.Text.AnalyzeTextErrorCode" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="details" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.AnalyzeTextError&gt;" />
        <Parameter Name="innererror" Type="Azure.AI.Language.Text.InnerErrorModel" />
      </Parameters>
      <Docs>
        <param name="code"> One of a server-defined set of error codes. </param>
        <param name="message"> A human-readable representation of the error. </param>
        <param name="target"> The target of the error. </param>
        <param name="details"> An array of details about specific errors that led to this reported error. </param>
        <param name="innererror"> An object containing more specific information than the current object about the error. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.AnalyzeTextError" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.AnalyzeTextError" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnalyzeTextKeyPhraseResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.AnalyzeTextKeyPhraseResult AnalyzeTextKeyPhraseResult (Azure.AI.Language.Text.KeyPhraseResult results = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.AnalyzeTextKeyPhraseResult AnalyzeTextKeyPhraseResult(class Azure.AI.Language.Text.KeyPhraseResult results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.AnalyzeTextKeyPhraseResult(Azure.AI.Language.Text.KeyPhraseResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnalyzeTextKeyPhraseResult (Optional results As KeyPhraseResult = Nothing) As AnalyzeTextKeyPhraseResult" />
      <MemberSignature Language="F#" Value="static member AnalyzeTextKeyPhraseResult : Azure.AI.Language.Text.KeyPhraseResult -&gt; Azure.AI.Language.Text.AnalyzeTextKeyPhraseResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.AnalyzeTextKeyPhraseResult results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.AnalyzeTextKeyPhraseResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="Azure.AI.Language.Text.KeyPhraseResult" />
      </Parameters>
      <Docs>
        <param name="results"> The list of Key phrase extraction results. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.AnalyzeTextKeyPhraseResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.AnalyzeTextKeyPhraseResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnalyzeTextLanguageDetectionResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.AnalyzeTextLanguageDetectionResult AnalyzeTextLanguageDetectionResult (Azure.AI.Language.Text.LanguageDetectionResult results = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.AnalyzeTextLanguageDetectionResult AnalyzeTextLanguageDetectionResult(class Azure.AI.Language.Text.LanguageDetectionResult results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.AnalyzeTextLanguageDetectionResult(Azure.AI.Language.Text.LanguageDetectionResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnalyzeTextLanguageDetectionResult (Optional results As LanguageDetectionResult = Nothing) As AnalyzeTextLanguageDetectionResult" />
      <MemberSignature Language="F#" Value="static member AnalyzeTextLanguageDetectionResult : Azure.AI.Language.Text.LanguageDetectionResult -&gt; Azure.AI.Language.Text.AnalyzeTextLanguageDetectionResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.AnalyzeTextLanguageDetectionResult results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.AnalyzeTextLanguageDetectionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="Azure.AI.Language.Text.LanguageDetectionResult" />
      </Parameters>
      <Docs>
        <param name="results"> Contains the language detection results. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.AnalyzeTextLanguageDetectionResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.AnalyzeTextLanguageDetectionResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnalyzeTextOperationResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.AnalyzeTextOperationResult AnalyzeTextOperationResult (DateTimeOffset lastUpdateDateTime = default, Azure.AI.Language.Text.TextActionState status = default, string name = default, string kind = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.AnalyzeTextOperationResult AnalyzeTextOperationResult(valuetype System.DateTimeOffset lastUpdateDateTime, valuetype Azure.AI.Language.Text.TextActionState status, string name, string kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.AnalyzeTextOperationResult(System.DateTimeOffset,Azure.AI.Language.Text.TextActionState,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnalyzeTextOperationResult (Optional lastUpdateDateTime As DateTimeOffset = Nothing, Optional status As TextActionState = Nothing, Optional name As String = Nothing, Optional kind As String = Nothing) As AnalyzeTextOperationResult" />
      <MemberSignature Language="F#" Value="static member AnalyzeTextOperationResult : DateTimeOffset * Azure.AI.Language.Text.TextActionState * string * string -&gt; Azure.AI.Language.Text.AnalyzeTextOperationResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.AnalyzeTextOperationResult (lastUpdateDateTime, status, name, kind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.AnalyzeTextOperationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastUpdateDateTime" Type="System.DateTimeOffset" />
        <Parameter Name="status" Type="Azure.AI.Language.Text.TextActionState" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="kind" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="lastUpdateDateTime"> The last updated time in UTC for the task. </param>
        <param name="status"> The status of the task at the mentioned last update time. </param>
        <param name="name"> task name. </param>
        <param name="kind"> Kind of the task. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.AnalyzeTextOperationResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.AnalyzeTextOperationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnalyzeTextOperationState">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.AnalyzeTextOperationState AnalyzeTextOperationState (string displayName = default, DateTimeOffset createdAt = default, DateTimeOffset? expiresOn = default, Guid jobId = default, DateTimeOffset lastUpdatedAt = default, Azure.AI.Language.Text.TextActionState status = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.AnalyzeTextError&gt; errors = default, string nextLink = default, Azure.AI.Language.Text.TextActions actions = default, Azure.AI.Language.Text.RequestStatistics statistics = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.AnalyzeTextOperationState AnalyzeTextOperationState(string displayName, valuetype System.DateTimeOffset createdAt, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; expiresOn, valuetype System.Guid jobId, valuetype System.DateTimeOffset lastUpdatedAt, valuetype Azure.AI.Language.Text.TextActionState status, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.AnalyzeTextError&gt; errors, string nextLink, class Azure.AI.Language.Text.TextActions actions, class Azure.AI.Language.Text.RequestStatistics statistics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.AnalyzeTextOperationState(System.String,System.DateTimeOffset,System.Nullable{System.DateTimeOffset},System.Guid,System.DateTimeOffset,Azure.AI.Language.Text.TextActionState,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.AnalyzeTextError},System.String,Azure.AI.Language.Text.TextActions,Azure.AI.Language.Text.RequestStatistics)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnalyzeTextOperationState (Optional displayName As String = Nothing, Optional createdAt As DateTimeOffset = Nothing, Optional expiresOn As Nullable(Of DateTimeOffset) = Nothing, Optional jobId As Guid = Nothing, Optional lastUpdatedAt As DateTimeOffset = Nothing, Optional status As TextActionState = Nothing, Optional errors As IEnumerable(Of AnalyzeTextError) = Nothing, Optional nextLink As String = Nothing, Optional actions As TextActions = Nothing, Optional statistics As RequestStatistics = Nothing) As AnalyzeTextOperationState" />
      <MemberSignature Language="F#" Value="static member AnalyzeTextOperationState : string * DateTimeOffset * Nullable&lt;DateTimeOffset&gt; * Guid * DateTimeOffset * Azure.AI.Language.Text.TextActionState * seq&lt;Azure.AI.Language.Text.AnalyzeTextError&gt; * string * Azure.AI.Language.Text.TextActions * Azure.AI.Language.Text.RequestStatistics -&gt; Azure.AI.Language.Text.AnalyzeTextOperationState" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.AnalyzeTextOperationState (displayName, createdAt, expiresOn, jobId, lastUpdatedAt, status, errors, nextLink, actions, statistics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.AnalyzeTextOperationState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="createdAt" Type="System.DateTimeOffset" />
        <Parameter Name="expiresOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="jobId" Type="System.Guid" />
        <Parameter Name="lastUpdatedAt" Type="System.DateTimeOffset" />
        <Parameter Name="status" Type="Azure.AI.Language.Text.TextActionState" />
        <Parameter Name="errors" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.AnalyzeTextError&gt;" />
        <Parameter Name="nextLink" Type="System.String" />
        <Parameter Name="actions" Type="Azure.AI.Language.Text.TextActions" />
        <Parameter Name="statistics" Type="Azure.AI.Language.Text.RequestStatistics" />
      </Parameters>
      <Docs>
        <param name="displayName"> display name. </param>
        <param name="createdAt"> Date and time job created. </param>
        <param name="expiresOn"> Date and time job expires. </param>
        <param name="jobId"> job ID. </param>
        <param name="lastUpdatedAt"> last updated date and time. </param>
        <param name="status"> status. </param>
        <param name="errors"> errors. </param>
        <param name="nextLink"> next link. </param>
        <param name="actions"> List of tasks. </param>
        <param name="statistics"> if showStats=true was specified in the request this field will contain information about the request payload. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.AnalyzeTextOperationState" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.AnalyzeTextOperationState" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnalyzeTextPiiResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.AnalyzeTextPiiResult AnalyzeTextPiiResult (Azure.AI.Language.Text.PiiResult results = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.AnalyzeTextPiiResult AnalyzeTextPiiResult(class Azure.AI.Language.Text.PiiResult results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.AnalyzeTextPiiResult(Azure.AI.Language.Text.PiiResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnalyzeTextPiiResult (Optional results As PiiResult = Nothing) As AnalyzeTextPiiResult" />
      <MemberSignature Language="F#" Value="static member AnalyzeTextPiiResult : Azure.AI.Language.Text.PiiResult -&gt; Azure.AI.Language.Text.AnalyzeTextPiiResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.AnalyzeTextPiiResult results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.AnalyzeTextPiiResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="Azure.AI.Language.Text.PiiResult" />
      </Parameters>
      <Docs>
        <param name="results"> The list of pii results. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.AnalyzeTextPiiResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.AnalyzeTextPiiResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnalyzeTextSentimentResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.AnalyzeTextSentimentResult AnalyzeTextSentimentResult (Azure.AI.Language.Text.SentimentResult results = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.AnalyzeTextSentimentResult AnalyzeTextSentimentResult(class Azure.AI.Language.Text.SentimentResult results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.AnalyzeTextSentimentResult(Azure.AI.Language.Text.SentimentResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnalyzeTextSentimentResult (Optional results As SentimentResult = Nothing) As AnalyzeTextSentimentResult" />
      <MemberSignature Language="F#" Value="static member AnalyzeTextSentimentResult : Azure.AI.Language.Text.SentimentResult -&gt; Azure.AI.Language.Text.AnalyzeTextSentimentResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.AnalyzeTextSentimentResult results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.AnalyzeTextSentimentResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="Azure.AI.Language.Text.SentimentResult" />
      </Parameters>
      <Docs>
        <param name="results"> The sentiment analysis results. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.AnalyzeTextSentimentResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.AnalyzeTextSentimentResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreaMetadata">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.AreaMetadata AreaMetadata (double value = 0, Azure.AI.Language.Text.AreaUnit unit = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.AreaMetadata AreaMetadata(float64 value, valuetype Azure.AI.Language.Text.AreaUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.AreaMetadata(System.Double,Azure.AI.Language.Text.AreaUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AreaMetadata (Optional value As Double = 0, Optional unit As AreaUnit = Nothing) As AreaMetadata" />
      <MemberSignature Language="F#" Value="static member AreaMetadata : double * Azure.AI.Language.Text.AreaUnit -&gt; Azure.AI.Language.Text.AreaMetadata" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.AreaMetadata (value, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.AreaMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="unit" Type="Azure.AI.Language.Text.AreaUnit" />
      </Parameters>
      <Docs>
        <param name="value"> The numeric value that the extracted text denotes. </param>
        <param name="unit"> Unit of measure for area. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.AreaMetadata" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.AreaMetadata" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassificationActionResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.ClassificationActionResult ClassificationActionResult (string id = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentWarning&gt; warnings = default, Azure.AI.Language.Text.DocumentStatistics statistics = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.ClassificationResult&gt; class = default, Azure.AI.Language.Text.DetectedLanguage detectedLanguage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.ClassificationActionResult ClassificationActionResult(string id, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DocumentWarning&gt; warnings, class Azure.AI.Language.Text.DocumentStatistics statistics, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.ClassificationResult&gt; class, class Azure.AI.Language.Text.DetectedLanguage detectedLanguage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.ClassificationActionResult(System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DocumentWarning},Azure.AI.Language.Text.DocumentStatistics,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.ClassificationResult},Azure.AI.Language.Text.DetectedLanguage)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClassificationActionResult (Optional id As String = Nothing, Optional warnings As IEnumerable(Of DocumentWarning) = Nothing, Optional statistics As DocumentStatistics = Nothing, Optional class As IEnumerable(Of ClassificationResult) = Nothing, Optional detectedLanguage As DetectedLanguage = Nothing) As ClassificationActionResult" />
      <MemberSignature Language="F#" Value="static member ClassificationActionResult : string * seq&lt;Azure.AI.Language.Text.DocumentWarning&gt; * Azure.AI.Language.Text.DocumentStatistics * seq&lt;Azure.AI.Language.Text.ClassificationResult&gt; * Azure.AI.Language.Text.DetectedLanguage -&gt; Azure.AI.Language.Text.ClassificationActionResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.ClassificationActionResult (id, warnings, statistics, class, detectedLanguage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.ClassificationActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="warnings" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentWarning&gt;" />
        <Parameter Name="statistics" Type="Azure.AI.Language.Text.DocumentStatistics" />
        <Parameter Name="class" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.ClassificationResult&gt;" />
        <Parameter Name="detectedLanguage" Type="Azure.AI.Language.Text.DetectedLanguage" />
      </Parameters>
      <Docs>
        <param name="id"> Unique, non-empty document identifier. </param>
        <param name="warnings"> Warnings encountered while processing document. </param>
        <param name="statistics"> if showStats=true was specified in the request this field will contain information about the document payload. </param>
        <param name="class"> Contains the classification doc results for all docs. </param>
        <param name="detectedLanguage"> If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.ClassificationActionResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.ClassificationActionResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassificationResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.ClassificationResult ClassificationResult (string category = default, double confidenceScore = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.ClassificationResult ClassificationResult(string category, float64 confidenceScore) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.ClassificationResult(System.String,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClassificationResult (Optional category As String = Nothing, Optional confidenceScore As Double = 0) As ClassificationResult" />
      <MemberSignature Language="F#" Value="static member ClassificationResult : string * double -&gt; Azure.AI.Language.Text.ClassificationResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.ClassificationResult (category, confidenceScore)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.ClassificationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="confidenceScore" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="category"> Classification type. </param>
        <param name="confidenceScore"> Confidence score between 0 and 1 of the recognized class. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.ClassificationResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.ClassificationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrencyMetadata">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.CurrencyMetadata CurrencyMetadata (double value = 0, string unit = default, string iso4217 = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.CurrencyMetadata CurrencyMetadata(float64 value, string unit, string iso4217) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.CurrencyMetadata(System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CurrencyMetadata (Optional value As Double = 0, Optional unit As String = Nothing, Optional iso4217 As String = Nothing) As CurrencyMetadata" />
      <MemberSignature Language="F#" Value="static member CurrencyMetadata : double * string * string -&gt; Azure.AI.Language.Text.CurrencyMetadata" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.CurrencyMetadata (value, unit, iso4217)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.CurrencyMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="unit" Type="System.String" />
        <Parameter Name="iso4217" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"> The numeric value that the extracted text denotes. </param>
        <param name="unit"> Currency unit. </param>
        <param name="iso4217"> The alphabetic code based on another ISO standard, ISO 3166, which lists the codes for country names. The first two letters of the ISO 4217 three-letter code are the same as the code for the country name, and, where possible, the third letter corresponds to the first letter of the currency name. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.CurrencyMetadata" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.CurrencyMetadata" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomEntitiesActionContent">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.CustomEntitiesActionContent CustomEntitiesActionContent (bool? loggingOptOut = default, string projectName = default, string deploymentName = default, Azure.AI.Language.Text.StringIndexType? stringIndexType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.CustomEntitiesActionContent CustomEntitiesActionContent(valuetype System.Nullable`1&lt;bool&gt; loggingOptOut, string projectName, string deploymentName, valuetype System.Nullable`1&lt;valuetype Azure.AI.Language.Text.StringIndexType&gt; stringIndexType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.CustomEntitiesActionContent(System.Nullable{System.Boolean},System.String,System.String,System.Nullable{Azure.AI.Language.Text.StringIndexType})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CustomEntitiesActionContent (Optional loggingOptOut As Nullable(Of Boolean) = Nothing, Optional projectName As String = Nothing, Optional deploymentName As String = Nothing, Optional stringIndexType As Nullable(Of StringIndexType) = Nothing) As CustomEntitiesActionContent" />
      <MemberSignature Language="F#" Value="static member CustomEntitiesActionContent : Nullable&lt;bool&gt; * string * string * Nullable&lt;Azure.AI.Language.Text.StringIndexType&gt; -&gt; Azure.AI.Language.Text.CustomEntitiesActionContent" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.CustomEntitiesActionContent (loggingOptOut, projectName, deploymentName, stringIndexType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.CustomEntitiesActionContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggingOptOut" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="projectName" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="stringIndexType" Type="System.Nullable&lt;Azure.AI.Language.Text.StringIndexType&gt;" />
      </Parameters>
      <Docs>
        <param name="loggingOptOut"> logging opt out. </param>
        <param name="projectName"> This field indicates the project name for the model. </param>
        <param name="deploymentName"> This field indicates the deployment name for the model. </param>
        <param name="stringIndexType"> Optional parameter to provide the string index type used to interpret string offsets. Defaults to TextElements (Graphemes). </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.CustomEntitiesActionContent" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.CustomEntitiesActionContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomEntitiesResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.CustomEntitiesResult CustomEntitiesResult (System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentError&gt; errors = default, Azure.AI.Language.Text.RequestStatistics statistics = default, string projectName = default, string deploymentName = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.CustomEntityActionResult&gt; documents = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.CustomEntitiesResult CustomEntitiesResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DocumentError&gt; errors, class Azure.AI.Language.Text.RequestStatistics statistics, string projectName, string deploymentName, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.CustomEntityActionResult&gt; documents) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.CustomEntitiesResult(System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DocumentError},Azure.AI.Language.Text.RequestStatistics,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.CustomEntityActionResult})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CustomEntitiesResult (Optional errors As IEnumerable(Of DocumentError) = Nothing, Optional statistics As RequestStatistics = Nothing, Optional projectName As String = Nothing, Optional deploymentName As String = Nothing, Optional documents As IEnumerable(Of CustomEntityActionResult) = Nothing) As CustomEntitiesResult" />
      <MemberSignature Language="F#" Value="static member CustomEntitiesResult : seq&lt;Azure.AI.Language.Text.DocumentError&gt; * Azure.AI.Language.Text.RequestStatistics * string * string * seq&lt;Azure.AI.Language.Text.CustomEntityActionResult&gt; -&gt; Azure.AI.Language.Text.CustomEntitiesResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.CustomEntitiesResult (errors, statistics, projectName, deploymentName, documents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.CustomEntitiesResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errors" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentError&gt;" />
        <Parameter Name="statistics" Type="Azure.AI.Language.Text.RequestStatistics" />
        <Parameter Name="projectName" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="documents" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.CustomEntityActionResult&gt;" />
      </Parameters>
      <Docs>
        <param name="errors"> Errors by document id. </param>
        <param name="statistics"> if showStats=true was specified in the request this field will contain information about the request payload. </param>
        <param name="projectName"> This field indicates the project name for the model. </param>
        <param name="deploymentName"> This field indicates the deployment name for the model. </param>
        <param name="documents"> Enumeration of the document results. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.CustomEntitiesResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.CustomEntitiesResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomEntityActionResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.CustomEntityActionResult CustomEntityActionResult (string id = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentWarning&gt; warnings = default, Azure.AI.Language.Text.DocumentStatistics statistics = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.NamedEntity&gt; entities = default, Azure.AI.Language.Text.DetectedLanguage detectedLanguage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.CustomEntityActionResult CustomEntityActionResult(string id, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DocumentWarning&gt; warnings, class Azure.AI.Language.Text.DocumentStatistics statistics, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.NamedEntity&gt; entities, class Azure.AI.Language.Text.DetectedLanguage detectedLanguage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.CustomEntityActionResult(System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DocumentWarning},Azure.AI.Language.Text.DocumentStatistics,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.NamedEntity},Azure.AI.Language.Text.DetectedLanguage)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CustomEntityActionResult (Optional id As String = Nothing, Optional warnings As IEnumerable(Of DocumentWarning) = Nothing, Optional statistics As DocumentStatistics = Nothing, Optional entities As IEnumerable(Of NamedEntity) = Nothing, Optional detectedLanguage As DetectedLanguage = Nothing) As CustomEntityActionResult" />
      <MemberSignature Language="F#" Value="static member CustomEntityActionResult : string * seq&lt;Azure.AI.Language.Text.DocumentWarning&gt; * Azure.AI.Language.Text.DocumentStatistics * seq&lt;Azure.AI.Language.Text.NamedEntity&gt; * Azure.AI.Language.Text.DetectedLanguage -&gt; Azure.AI.Language.Text.CustomEntityActionResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.CustomEntityActionResult (id, warnings, statistics, entities, detectedLanguage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.CustomEntityActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="warnings" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentWarning&gt;" />
        <Parameter Name="statistics" Type="Azure.AI.Language.Text.DocumentStatistics" />
        <Parameter Name="entities" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.NamedEntity&gt;" />
        <Parameter Name="detectedLanguage" Type="Azure.AI.Language.Text.DetectedLanguage" />
      </Parameters>
      <Docs>
        <param name="id"> Unique, non-empty document identifier. </param>
        <param name="warnings"> Warnings encountered while processing document. </param>
        <param name="statistics"> if showStats=true was specified in the request this field will contain information about the document payload. </param>
        <param name="entities"> Recognized entities in the document. </param>
        <param name="detectedLanguage"> If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.CustomEntityActionResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.CustomEntityActionResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomEntityRecognitionOperationResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.CustomEntityRecognitionOperationResult CustomEntityRecognitionOperationResult (DateTimeOffset lastUpdateDateTime = default, Azure.AI.Language.Text.TextActionState status = default, string name = default, Azure.AI.Language.Text.CustomEntitiesResult results = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.CustomEntityRecognitionOperationResult CustomEntityRecognitionOperationResult(valuetype System.DateTimeOffset lastUpdateDateTime, valuetype Azure.AI.Language.Text.TextActionState status, string name, class Azure.AI.Language.Text.CustomEntitiesResult results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.CustomEntityRecognitionOperationResult(System.DateTimeOffset,Azure.AI.Language.Text.TextActionState,System.String,Azure.AI.Language.Text.CustomEntitiesResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CustomEntityRecognitionOperationResult (Optional lastUpdateDateTime As DateTimeOffset = Nothing, Optional status As TextActionState = Nothing, Optional name As String = Nothing, Optional results As CustomEntitiesResult = Nothing) As CustomEntityRecognitionOperationResult" />
      <MemberSignature Language="F#" Value="static member CustomEntityRecognitionOperationResult : DateTimeOffset * Azure.AI.Language.Text.TextActionState * string * Azure.AI.Language.Text.CustomEntitiesResult -&gt; Azure.AI.Language.Text.CustomEntityRecognitionOperationResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.CustomEntityRecognitionOperationResult (lastUpdateDateTime, status, name, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.CustomEntityRecognitionOperationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastUpdateDateTime" Type="System.DateTimeOffset" />
        <Parameter Name="status" Type="Azure.AI.Language.Text.TextActionState" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="results" Type="Azure.AI.Language.Text.CustomEntitiesResult" />
      </Parameters>
      <Docs>
        <param name="lastUpdateDateTime"> The last updated time in UTC for the task. </param>
        <param name="status"> The status of the task at the mentioned last update time. </param>
        <param name="name"> task name. </param>
        <param name="results"> List of results. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.CustomEntityRecognitionOperationResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.CustomEntityRecognitionOperationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomLabelClassificationResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.CustomLabelClassificationResult CustomLabelClassificationResult (System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentError&gt; errors = default, Azure.AI.Language.Text.RequestStatistics statistics = default, string projectName = default, string deploymentName = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.ClassificationActionResult&gt; documents = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.CustomLabelClassificationResult CustomLabelClassificationResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DocumentError&gt; errors, class Azure.AI.Language.Text.RequestStatistics statistics, string projectName, string deploymentName, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.ClassificationActionResult&gt; documents) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.CustomLabelClassificationResult(System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DocumentError},Azure.AI.Language.Text.RequestStatistics,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.ClassificationActionResult})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CustomLabelClassificationResult (Optional errors As IEnumerable(Of DocumentError) = Nothing, Optional statistics As RequestStatistics = Nothing, Optional projectName As String = Nothing, Optional deploymentName As String = Nothing, Optional documents As IEnumerable(Of ClassificationActionResult) = Nothing) As CustomLabelClassificationResult" />
      <MemberSignature Language="F#" Value="static member CustomLabelClassificationResult : seq&lt;Azure.AI.Language.Text.DocumentError&gt; * Azure.AI.Language.Text.RequestStatistics * string * string * seq&lt;Azure.AI.Language.Text.ClassificationActionResult&gt; -&gt; Azure.AI.Language.Text.CustomLabelClassificationResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.CustomLabelClassificationResult (errors, statistics, projectName, deploymentName, documents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.CustomLabelClassificationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errors" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentError&gt;" />
        <Parameter Name="statistics" Type="Azure.AI.Language.Text.RequestStatistics" />
        <Parameter Name="projectName" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="documents" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.ClassificationActionResult&gt;" />
      </Parameters>
      <Docs>
        <param name="errors"> Errors by document id. </param>
        <param name="statistics"> if showStats=true was specified in the request this field will contain information about the request payload. </param>
        <param name="projectName"> This field indicates the project name for the model. </param>
        <param name="deploymentName"> This field indicates the deployment name for the model. </param>
        <param name="documents"> Response by document. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.CustomLabelClassificationResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.CustomLabelClassificationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomMultiLabelClassificationActionContent">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.CustomMultiLabelClassificationActionContent CustomMultiLabelClassificationActionContent (bool? loggingOptOut = default, string projectName = default, string deploymentName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.CustomMultiLabelClassificationActionContent CustomMultiLabelClassificationActionContent(valuetype System.Nullable`1&lt;bool&gt; loggingOptOut, string projectName, string deploymentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.CustomMultiLabelClassificationActionContent(System.Nullable{System.Boolean},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CustomMultiLabelClassificationActionContent (Optional loggingOptOut As Nullable(Of Boolean) = Nothing, Optional projectName As String = Nothing, Optional deploymentName As String = Nothing) As CustomMultiLabelClassificationActionContent" />
      <MemberSignature Language="F#" Value="static member CustomMultiLabelClassificationActionContent : Nullable&lt;bool&gt; * string * string -&gt; Azure.AI.Language.Text.CustomMultiLabelClassificationActionContent" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.CustomMultiLabelClassificationActionContent (loggingOptOut, projectName, deploymentName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.CustomMultiLabelClassificationActionContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggingOptOut" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="projectName" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="loggingOptOut"> logging opt out. </param>
        <param name="projectName"> This field indicates the project name for the model. </param>
        <param name="deploymentName"> This field indicates the deployment name for the model. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.CustomMultiLabelClassificationActionContent" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.CustomMultiLabelClassificationActionContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomMultiLabelClassificationOperationResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.CustomMultiLabelClassificationOperationResult CustomMultiLabelClassificationOperationResult (DateTimeOffset lastUpdateDateTime = default, Azure.AI.Language.Text.TextActionState status = default, string name = default, Azure.AI.Language.Text.CustomLabelClassificationResult results = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.CustomMultiLabelClassificationOperationResult CustomMultiLabelClassificationOperationResult(valuetype System.DateTimeOffset lastUpdateDateTime, valuetype Azure.AI.Language.Text.TextActionState status, string name, class Azure.AI.Language.Text.CustomLabelClassificationResult results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.CustomMultiLabelClassificationOperationResult(System.DateTimeOffset,Azure.AI.Language.Text.TextActionState,System.String,Azure.AI.Language.Text.CustomLabelClassificationResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CustomMultiLabelClassificationOperationResult (Optional lastUpdateDateTime As DateTimeOffset = Nothing, Optional status As TextActionState = Nothing, Optional name As String = Nothing, Optional results As CustomLabelClassificationResult = Nothing) As CustomMultiLabelClassificationOperationResult" />
      <MemberSignature Language="F#" Value="static member CustomMultiLabelClassificationOperationResult : DateTimeOffset * Azure.AI.Language.Text.TextActionState * string * Azure.AI.Language.Text.CustomLabelClassificationResult -&gt; Azure.AI.Language.Text.CustomMultiLabelClassificationOperationResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.CustomMultiLabelClassificationOperationResult (lastUpdateDateTime, status, name, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.CustomMultiLabelClassificationOperationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastUpdateDateTime" Type="System.DateTimeOffset" />
        <Parameter Name="status" Type="Azure.AI.Language.Text.TextActionState" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="results" Type="Azure.AI.Language.Text.CustomLabelClassificationResult" />
      </Parameters>
      <Docs>
        <param name="lastUpdateDateTime"> The last updated time in UTC for the task. </param>
        <param name="status"> The status of the task at the mentioned last update time. </param>
        <param name="name"> task name. </param>
        <param name="results"> List of results. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.CustomMultiLabelClassificationOperationResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.CustomMultiLabelClassificationOperationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomSingleLabelClassificationActionContent">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.CustomSingleLabelClassificationActionContent CustomSingleLabelClassificationActionContent (bool? loggingOptOut = default, string projectName = default, string deploymentName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.CustomSingleLabelClassificationActionContent CustomSingleLabelClassificationActionContent(valuetype System.Nullable`1&lt;bool&gt; loggingOptOut, string projectName, string deploymentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.CustomSingleLabelClassificationActionContent(System.Nullable{System.Boolean},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CustomSingleLabelClassificationActionContent (Optional loggingOptOut As Nullable(Of Boolean) = Nothing, Optional projectName As String = Nothing, Optional deploymentName As String = Nothing) As CustomSingleLabelClassificationActionContent" />
      <MemberSignature Language="F#" Value="static member CustomSingleLabelClassificationActionContent : Nullable&lt;bool&gt; * string * string -&gt; Azure.AI.Language.Text.CustomSingleLabelClassificationActionContent" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.CustomSingleLabelClassificationActionContent (loggingOptOut, projectName, deploymentName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.CustomSingleLabelClassificationActionContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggingOptOut" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="projectName" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="loggingOptOut"> logging opt out. </param>
        <param name="projectName"> This field indicates the project name for the model. </param>
        <param name="deploymentName"> This field indicates the deployment name for the model. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.CustomSingleLabelClassificationActionContent" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.CustomSingleLabelClassificationActionContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomSingleLabelClassificationOperationResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.CustomSingleLabelClassificationOperationResult CustomSingleLabelClassificationOperationResult (DateTimeOffset lastUpdateDateTime = default, Azure.AI.Language.Text.TextActionState status = default, string name = default, Azure.AI.Language.Text.CustomLabelClassificationResult results = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.CustomSingleLabelClassificationOperationResult CustomSingleLabelClassificationOperationResult(valuetype System.DateTimeOffset lastUpdateDateTime, valuetype Azure.AI.Language.Text.TextActionState status, string name, class Azure.AI.Language.Text.CustomLabelClassificationResult results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.CustomSingleLabelClassificationOperationResult(System.DateTimeOffset,Azure.AI.Language.Text.TextActionState,System.String,Azure.AI.Language.Text.CustomLabelClassificationResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CustomSingleLabelClassificationOperationResult (Optional lastUpdateDateTime As DateTimeOffset = Nothing, Optional status As TextActionState = Nothing, Optional name As String = Nothing, Optional results As CustomLabelClassificationResult = Nothing) As CustomSingleLabelClassificationOperationResult" />
      <MemberSignature Language="F#" Value="static member CustomSingleLabelClassificationOperationResult : DateTimeOffset * Azure.AI.Language.Text.TextActionState * string * Azure.AI.Language.Text.CustomLabelClassificationResult -&gt; Azure.AI.Language.Text.CustomSingleLabelClassificationOperationResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.CustomSingleLabelClassificationOperationResult (lastUpdateDateTime, status, name, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.CustomSingleLabelClassificationOperationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastUpdateDateTime" Type="System.DateTimeOffset" />
        <Parameter Name="status" Type="Azure.AI.Language.Text.TextActionState" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="results" Type="Azure.AI.Language.Text.CustomLabelClassificationResult" />
      </Parameters>
      <Docs>
        <param name="lastUpdateDateTime"> The last updated time in UTC for the task. </param>
        <param name="status"> The status of the task at the mentioned last update time. </param>
        <param name="name"> task name. </param>
        <param name="results"> List of results. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.CustomSingleLabelClassificationOperationResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.CustomSingleLabelClassificationOperationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DateMetadata">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.DateMetadata DateMetadata (System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DateValue&gt; dates = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.DateMetadata DateMetadata(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DateValue&gt; dates) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.DateMetadata(System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DateValue})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateMetadata (Optional dates As IEnumerable(Of DateValue) = Nothing) As DateMetadata" />
      <MemberSignature Language="F#" Value="static member DateMetadata : seq&lt;Azure.AI.Language.Text.DateValue&gt; -&gt; Azure.AI.Language.Text.DateMetadata" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.DateMetadata dates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.DateMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dates" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DateValue&gt;" />
      </Parameters>
      <Docs>
        <param name="dates"> List of date values. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.DateMetadata" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.DateMetadata" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DateTimeMetadata">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.DateTimeMetadata DateTimeMetadata (System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DateValue&gt; dates = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.DateTimeMetadata DateTimeMetadata(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DateValue&gt; dates) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.DateTimeMetadata(System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DateValue})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateTimeMetadata (Optional dates As IEnumerable(Of DateValue) = Nothing) As DateTimeMetadata" />
      <MemberSignature Language="F#" Value="static member DateTimeMetadata : seq&lt;Azure.AI.Language.Text.DateValue&gt; -&gt; Azure.AI.Language.Text.DateTimeMetadata" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.DateTimeMetadata dates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.DateTimeMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dates" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DateValue&gt;" />
      </Parameters>
      <Docs>
        <param name="dates"> List of date values. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.DateTimeMetadata" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.DateTimeMetadata" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DateValue">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.DateValue DateValue (string timex = default, string value = default, Azure.AI.Language.Text.TemporalModifier? modifier = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.DateValue DateValue(string timex, string value, valuetype System.Nullable`1&lt;valuetype Azure.AI.Language.Text.TemporalModifier&gt; modifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.DateValue(System.String,System.String,System.Nullable{Azure.AI.Language.Text.TemporalModifier})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateValue (Optional timex As String = Nothing, Optional value As String = Nothing, Optional modifier As Nullable(Of TemporalModifier) = Nothing) As DateValue" />
      <MemberSignature Language="F#" Value="static member DateValue : string * string * Nullable&lt;Azure.AI.Language.Text.TemporalModifier&gt; -&gt; Azure.AI.Language.Text.DateValue" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.DateValue (timex, value, modifier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.DateValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timex" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="modifier" Type="System.Nullable&lt;Azure.AI.Language.Text.TemporalModifier&gt;" />
      </Parameters>
      <Docs>
        <param name="timex"> An extended ISO 8601 date/time representation as described in (https://github.com/Microsoft/Recognizers-Text/blob/master/Patterns/English/English-DateTime.yaml). </param>
        <param name="value"> The actual time that the extracted text denote. </param>
        <param name="modifier"> Modifier for datetime to indicate point of reference like before, after etc. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.DateValue" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.DateValue" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectedLanguage">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.DetectedLanguage DetectedLanguage (string name = default, string iso6391Name = default, double confidenceScore = 0, Azure.AI.Language.Text.ScriptKind? scriptName = default, Azure.AI.Language.Text.ScriptCode? scriptIso15924Code = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.DetectedLanguage DetectedLanguage(string name, string iso6391Name, float64 confidenceScore, valuetype System.Nullable`1&lt;valuetype Azure.AI.Language.Text.ScriptKind&gt; scriptName, valuetype System.Nullable`1&lt;valuetype Azure.AI.Language.Text.ScriptCode&gt; scriptIso15924Code) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.DetectedLanguage(System.String,System.String,System.Double,System.Nullable{Azure.AI.Language.Text.ScriptKind},System.Nullable{Azure.AI.Language.Text.ScriptCode})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DetectedLanguage (Optional name As String = Nothing, Optional iso6391Name As String = Nothing, Optional confidenceScore As Double = 0, Optional scriptName As Nullable(Of ScriptKind) = Nothing, Optional scriptIso15924Code As Nullable(Of ScriptCode) = Nothing) As DetectedLanguage" />
      <MemberSignature Language="F#" Value="static member DetectedLanguage : string * string * double * Nullable&lt;Azure.AI.Language.Text.ScriptKind&gt; * Nullable&lt;Azure.AI.Language.Text.ScriptCode&gt; -&gt; Azure.AI.Language.Text.DetectedLanguage" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.DetectedLanguage (name, iso6391Name, confidenceScore, scriptName, scriptIso15924Code)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.DetectedLanguage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="iso6391Name" Type="System.String" />
        <Parameter Name="confidenceScore" Type="System.Double" />
        <Parameter Name="scriptName" Type="System.Nullable&lt;Azure.AI.Language.Text.ScriptKind&gt;" />
        <Parameter Name="scriptIso15924Code" Type="System.Nullable&lt;Azure.AI.Language.Text.ScriptCode&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> Long name of a detected language (e.g. English, French). </param>
        <param name="iso6391Name"> A two letter representation of the detected language according to the ISO 639-1 standard (e.g. en, fr). </param>
        <param name="confidenceScore"> A confidence score between 0 and 1. Scores close to 1 indicate 100% certainty that the identified language is true. </param>
        <param name="scriptName"> Identifies the script name of the input document according to the ISO 15924 standard. </param>
        <param name="scriptIso15924Code"> Identifies the script code of the input document according to the ISO 15924 standard. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.DetectedLanguage" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.DetectedLanguage" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentError">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.DocumentError DocumentError (string id = default, Azure.AI.Language.Text.AnalyzeTextError error = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.DocumentError DocumentError(string id, class Azure.AI.Language.Text.AnalyzeTextError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.DocumentError(System.String,Azure.AI.Language.Text.AnalyzeTextError)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DocumentError (Optional id As String = Nothing, Optional error As AnalyzeTextError = Nothing) As DocumentError" />
      <MemberSignature Language="F#" Value="static member DocumentError : string * Azure.AI.Language.Text.AnalyzeTextError -&gt; Azure.AI.Language.Text.DocumentError" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.DocumentError (id, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.DocumentError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="error" Type="Azure.AI.Language.Text.AnalyzeTextError" />
      </Parameters>
      <Docs>
        <param name="id"> The ID of the input document. </param>
        <param name="error"> Error encountered. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.DocumentError" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.DocumentError" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentStatistics">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.DocumentStatistics DocumentStatistics (int charactersCount = 0, int transactionsCount = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.DocumentStatistics DocumentStatistics(int32 charactersCount, int32 transactionsCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.DocumentStatistics(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DocumentStatistics (Optional charactersCount As Integer = 0, Optional transactionsCount As Integer = 0) As DocumentStatistics" />
      <MemberSignature Language="F#" Value="static member DocumentStatistics : int * int -&gt; Azure.AI.Language.Text.DocumentStatistics" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.DocumentStatistics (charactersCount, transactionsCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.DocumentStatistics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charactersCount" Type="System.Int32" />
        <Parameter Name="transactionsCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charactersCount"> Number of text elements recognized in the document. </param>
        <param name="transactionsCount"> Number of transactions for the document. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.DocumentStatistics" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.DocumentStatistics" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentWarning">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.DocumentWarning DocumentWarning (Azure.AI.Language.Text.WarningCode code = default, string message = default, string targetRef = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.DocumentWarning DocumentWarning(valuetype Azure.AI.Language.Text.WarningCode code, string message, string targetRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.DocumentWarning(Azure.AI.Language.Text.WarningCode,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DocumentWarning (Optional code As WarningCode = Nothing, Optional message As String = Nothing, Optional targetRef As String = Nothing) As DocumentWarning" />
      <MemberSignature Language="F#" Value="static member DocumentWarning : Azure.AI.Language.Text.WarningCode * string * string -&gt; Azure.AI.Language.Text.DocumentWarning" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.DocumentWarning (code, message, targetRef)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.DocumentWarning</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="Azure.AI.Language.Text.WarningCode" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="targetRef" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="code"> Warning code. </param>
        <param name="message"> Warning message. </param>
        <param name="targetRef"> A JSON pointer reference indicating the target object. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.DocumentWarning" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.DocumentWarning" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntitiesResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.EntitiesResult EntitiesResult (System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentError&gt; errors = default, Azure.AI.Language.Text.RequestStatistics statistics = default, string modelVersion = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.EntityActionResultWithMetadata&gt; documents = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.EntitiesResult EntitiesResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DocumentError&gt; errors, class Azure.AI.Language.Text.RequestStatistics statistics, string modelVersion, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.EntityActionResultWithMetadata&gt; documents) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.EntitiesResult(System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DocumentError},Azure.AI.Language.Text.RequestStatistics,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.EntityActionResultWithMetadata})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntitiesResult (Optional errors As IEnumerable(Of DocumentError) = Nothing, Optional statistics As RequestStatistics = Nothing, Optional modelVersion As String = Nothing, Optional documents As IEnumerable(Of EntityActionResultWithMetadata) = Nothing) As EntitiesResult" />
      <MemberSignature Language="F#" Value="static member EntitiesResult : seq&lt;Azure.AI.Language.Text.DocumentError&gt; * Azure.AI.Language.Text.RequestStatistics * string * seq&lt;Azure.AI.Language.Text.EntityActionResultWithMetadata&gt; -&gt; Azure.AI.Language.Text.EntitiesResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.EntitiesResult (errors, statistics, modelVersion, documents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.EntitiesResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errors" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentError&gt;" />
        <Parameter Name="statistics" Type="Azure.AI.Language.Text.RequestStatistics" />
        <Parameter Name="modelVersion" Type="System.String" />
        <Parameter Name="documents" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.EntityActionResultWithMetadata&gt;" />
      </Parameters>
      <Docs>
        <param name="errors"> Errors by document id. </param>
        <param name="statistics"> if showStats=true was specified in the request this field will contain information about the request payload. </param>
        <param name="modelVersion"> This field indicates which model is used for scoring. </param>
        <param name="documents"> Response by document. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.EntitiesResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.EntitiesResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntitiesWithMetadataAutoResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.EntitiesWithMetadataAutoResult EntitiesWithMetadataAutoResult (System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentError&gt; errors = default, Azure.AI.Language.Text.RequestStatistics statistics = default, string modelVersion = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.EntityActionResult&gt; documents = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.EntitiesWithMetadataAutoResult EntitiesWithMetadataAutoResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DocumentError&gt; errors, class Azure.AI.Language.Text.RequestStatistics statistics, string modelVersion, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.EntityActionResult&gt; documents) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.EntitiesWithMetadataAutoResult(System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DocumentError},Azure.AI.Language.Text.RequestStatistics,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.EntityActionResult})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntitiesWithMetadataAutoResult (Optional errors As IEnumerable(Of DocumentError) = Nothing, Optional statistics As RequestStatistics = Nothing, Optional modelVersion As String = Nothing, Optional documents As IEnumerable(Of EntityActionResult) = Nothing) As EntitiesWithMetadataAutoResult" />
      <MemberSignature Language="F#" Value="static member EntitiesWithMetadataAutoResult : seq&lt;Azure.AI.Language.Text.DocumentError&gt; * Azure.AI.Language.Text.RequestStatistics * string * seq&lt;Azure.AI.Language.Text.EntityActionResult&gt; -&gt; Azure.AI.Language.Text.EntitiesWithMetadataAutoResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.EntitiesWithMetadataAutoResult (errors, statistics, modelVersion, documents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.EntitiesWithMetadataAutoResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errors" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentError&gt;" />
        <Parameter Name="statistics" Type="Azure.AI.Language.Text.RequestStatistics" />
        <Parameter Name="modelVersion" Type="System.String" />
        <Parameter Name="documents" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.EntityActionResult&gt;" />
      </Parameters>
      <Docs>
        <param name="errors"> Errors by document id. </param>
        <param name="statistics"> if showStats=true was specified in the request this field will contain information about the request payload. </param>
        <param name="modelVersion"> This field indicates which model is used for scoring. </param>
        <param name="documents"> Response by document. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.EntitiesWithMetadataAutoResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.EntitiesWithMetadataAutoResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityActionResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.EntityActionResult EntityActionResult (string id = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentWarning&gt; warnings = default, Azure.AI.Language.Text.DocumentStatistics statistics = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.NamedEntityWithMetadata&gt; entities = default, Azure.AI.Language.Text.DetectedLanguage detectedLanguage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.EntityActionResult EntityActionResult(string id, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DocumentWarning&gt; warnings, class Azure.AI.Language.Text.DocumentStatistics statistics, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.NamedEntityWithMetadata&gt; entities, class Azure.AI.Language.Text.DetectedLanguage detectedLanguage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.EntityActionResult(System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DocumentWarning},Azure.AI.Language.Text.DocumentStatistics,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.NamedEntityWithMetadata},Azure.AI.Language.Text.DetectedLanguage)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityActionResult (Optional id As String = Nothing, Optional warnings As IEnumerable(Of DocumentWarning) = Nothing, Optional statistics As DocumentStatistics = Nothing, Optional entities As IEnumerable(Of NamedEntityWithMetadata) = Nothing, Optional detectedLanguage As DetectedLanguage = Nothing) As EntityActionResult" />
      <MemberSignature Language="F#" Value="static member EntityActionResult : string * seq&lt;Azure.AI.Language.Text.DocumentWarning&gt; * Azure.AI.Language.Text.DocumentStatistics * seq&lt;Azure.AI.Language.Text.NamedEntityWithMetadata&gt; * Azure.AI.Language.Text.DetectedLanguage -&gt; Azure.AI.Language.Text.EntityActionResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.EntityActionResult (id, warnings, statistics, entities, detectedLanguage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.EntityActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="warnings" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentWarning&gt;" />
        <Parameter Name="statistics" Type="Azure.AI.Language.Text.DocumentStatistics" />
        <Parameter Name="entities" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.NamedEntityWithMetadata&gt;" />
        <Parameter Name="detectedLanguage" Type="Azure.AI.Language.Text.DetectedLanguage" />
      </Parameters>
      <Docs>
        <param name="id"> Unique, non-empty document identifier. </param>
        <param name="warnings"> Warnings encountered while processing document. </param>
        <param name="statistics"> if showStats=true was specified in the request this field will contain information about the document payload. </param>
        <param name="entities"> Recognized entities in the document. </param>
        <param name="detectedLanguage"> If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.EntityActionResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.EntityActionResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityActionResultWithMetadata">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.EntityActionResultWithMetadata EntityActionResultWithMetadata (string id = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentWarning&gt; warnings = default, Azure.AI.Language.Text.DocumentStatistics statistics = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.NamedEntityWithMetadata&gt; entities = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.EntityActionResultWithMetadata EntityActionResultWithMetadata(string id, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DocumentWarning&gt; warnings, class Azure.AI.Language.Text.DocumentStatistics statistics, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.NamedEntityWithMetadata&gt; entities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.EntityActionResultWithMetadata(System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DocumentWarning},Azure.AI.Language.Text.DocumentStatistics,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.NamedEntityWithMetadata})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityActionResultWithMetadata (Optional id As String = Nothing, Optional warnings As IEnumerable(Of DocumentWarning) = Nothing, Optional statistics As DocumentStatistics = Nothing, Optional entities As IEnumerable(Of NamedEntityWithMetadata) = Nothing) As EntityActionResultWithMetadata" />
      <MemberSignature Language="F#" Value="static member EntityActionResultWithMetadata : string * seq&lt;Azure.AI.Language.Text.DocumentWarning&gt; * Azure.AI.Language.Text.DocumentStatistics * seq&lt;Azure.AI.Language.Text.NamedEntityWithMetadata&gt; -&gt; Azure.AI.Language.Text.EntityActionResultWithMetadata" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.EntityActionResultWithMetadata (id, warnings, statistics, entities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.EntityActionResultWithMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="warnings" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentWarning&gt;" />
        <Parameter Name="statistics" Type="Azure.AI.Language.Text.DocumentStatistics" />
        <Parameter Name="entities" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.NamedEntityWithMetadata&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> Unique, non-empty document identifier. </param>
        <param name="warnings"> Warnings encountered while processing document. </param>
        <param name="statistics"> if showStats=true was specified in the request this field will contain information about the document payload. </param>
        <param name="entities"> Recognized entities in the document. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.EntityActionResultWithMetadata" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.EntityActionResultWithMetadata" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityLinkingActionResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.EntityLinkingActionResult EntityLinkingActionResult (string id = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentWarning&gt; warnings = default, Azure.AI.Language.Text.DocumentStatistics statistics = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.LinkedEntity&gt; entities = default, Azure.AI.Language.Text.DetectedLanguage detectedLanguage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.EntityLinkingActionResult EntityLinkingActionResult(string id, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DocumentWarning&gt; warnings, class Azure.AI.Language.Text.DocumentStatistics statistics, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.LinkedEntity&gt; entities, class Azure.AI.Language.Text.DetectedLanguage detectedLanguage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.EntityLinkingActionResult(System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DocumentWarning},Azure.AI.Language.Text.DocumentStatistics,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.LinkedEntity},Azure.AI.Language.Text.DetectedLanguage)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityLinkingActionResult (Optional id As String = Nothing, Optional warnings As IEnumerable(Of DocumentWarning) = Nothing, Optional statistics As DocumentStatistics = Nothing, Optional entities As IEnumerable(Of LinkedEntity) = Nothing, Optional detectedLanguage As DetectedLanguage = Nothing) As EntityLinkingActionResult" />
      <MemberSignature Language="F#" Value="static member EntityLinkingActionResult : string * seq&lt;Azure.AI.Language.Text.DocumentWarning&gt; * Azure.AI.Language.Text.DocumentStatistics * seq&lt;Azure.AI.Language.Text.LinkedEntity&gt; * Azure.AI.Language.Text.DetectedLanguage -&gt; Azure.AI.Language.Text.EntityLinkingActionResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.EntityLinkingActionResult (id, warnings, statistics, entities, detectedLanguage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.EntityLinkingActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="warnings" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentWarning&gt;" />
        <Parameter Name="statistics" Type="Azure.AI.Language.Text.DocumentStatistics" />
        <Parameter Name="entities" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.LinkedEntity&gt;" />
        <Parameter Name="detectedLanguage" Type="Azure.AI.Language.Text.DetectedLanguage" />
      </Parameters>
      <Docs>
        <param name="id"> Unique, non-empty document identifier. </param>
        <param name="warnings"> Warnings encountered while processing document. </param>
        <param name="statistics"> if showStats=true was specified in the request this field will contain information about the document payload. </param>
        <param name="entities"> Recognized well known entities in the document. </param>
        <param name="detectedLanguage"> If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.EntityLinkingActionResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.EntityLinkingActionResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityLinkingMatch">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.EntityLinkingMatch EntityLinkingMatch (double confidenceScore = 0, string text = default, int offset = 0, int length = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.EntityLinkingMatch EntityLinkingMatch(float64 confidenceScore, string text, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.EntityLinkingMatch(System.Double,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityLinkingMatch (Optional confidenceScore As Double = 0, Optional text As String = Nothing, Optional offset As Integer = 0, Optional length As Integer = 0) As EntityLinkingMatch" />
      <MemberSignature Language="F#" Value="static member EntityLinkingMatch : double * string * int * int -&gt; Azure.AI.Language.Text.EntityLinkingMatch" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.EntityLinkingMatch (confidenceScore, text, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.EntityLinkingMatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="confidenceScore" Type="System.Double" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="confidenceScore"> If a well known item is recognized, a decimal number denoting the confidence level between 0 and 1 will be returned. </param>
        <param name="text"> Entity text as appears in the request. </param>
        <param name="offset"> Start position for the entity match text. </param>
        <param name="length"> Length for the entity match text. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.EntityLinkingMatch" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.EntityLinkingMatch" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityLinkingOperationResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.EntityLinkingOperationResult EntityLinkingOperationResult (DateTimeOffset lastUpdateDateTime = default, Azure.AI.Language.Text.TextActionState status = default, string name = default, Azure.AI.Language.Text.EntityLinkingResult results = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.EntityLinkingOperationResult EntityLinkingOperationResult(valuetype System.DateTimeOffset lastUpdateDateTime, valuetype Azure.AI.Language.Text.TextActionState status, string name, class Azure.AI.Language.Text.EntityLinkingResult results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.EntityLinkingOperationResult(System.DateTimeOffset,Azure.AI.Language.Text.TextActionState,System.String,Azure.AI.Language.Text.EntityLinkingResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityLinkingOperationResult (Optional lastUpdateDateTime As DateTimeOffset = Nothing, Optional status As TextActionState = Nothing, Optional name As String = Nothing, Optional results As EntityLinkingResult = Nothing) As EntityLinkingOperationResult" />
      <MemberSignature Language="F#" Value="static member EntityLinkingOperationResult : DateTimeOffset * Azure.AI.Language.Text.TextActionState * string * Azure.AI.Language.Text.EntityLinkingResult -&gt; Azure.AI.Language.Text.EntityLinkingOperationResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.EntityLinkingOperationResult (lastUpdateDateTime, status, name, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.EntityLinkingOperationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastUpdateDateTime" Type="System.DateTimeOffset" />
        <Parameter Name="status" Type="Azure.AI.Language.Text.TextActionState" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="results" Type="Azure.AI.Language.Text.EntityLinkingResult" />
      </Parameters>
      <Docs>
        <param name="lastUpdateDateTime"> The last updated time in UTC for the task. </param>
        <param name="status"> The status of the task at the mentioned last update time. </param>
        <param name="name"> task name. </param>
        <param name="results"> Entity linking result. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.EntityLinkingOperationResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.EntityLinkingOperationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityLinkingResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.EntityLinkingResult EntityLinkingResult (System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentError&gt; errors = default, Azure.AI.Language.Text.RequestStatistics statistics = default, string modelVersion = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.EntityLinkingActionResult&gt; documents = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.EntityLinkingResult EntityLinkingResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DocumentError&gt; errors, class Azure.AI.Language.Text.RequestStatistics statistics, string modelVersion, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.EntityLinkingActionResult&gt; documents) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.EntityLinkingResult(System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DocumentError},Azure.AI.Language.Text.RequestStatistics,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.EntityLinkingActionResult})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityLinkingResult (Optional errors As IEnumerable(Of DocumentError) = Nothing, Optional statistics As RequestStatistics = Nothing, Optional modelVersion As String = Nothing, Optional documents As IEnumerable(Of EntityLinkingActionResult) = Nothing) As EntityLinkingResult" />
      <MemberSignature Language="F#" Value="static member EntityLinkingResult : seq&lt;Azure.AI.Language.Text.DocumentError&gt; * Azure.AI.Language.Text.RequestStatistics * string * seq&lt;Azure.AI.Language.Text.EntityLinkingActionResult&gt; -&gt; Azure.AI.Language.Text.EntityLinkingResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.EntityLinkingResult (errors, statistics, modelVersion, documents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.EntityLinkingResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errors" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentError&gt;" />
        <Parameter Name="statistics" Type="Azure.AI.Language.Text.RequestStatistics" />
        <Parameter Name="modelVersion" Type="System.String" />
        <Parameter Name="documents" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.EntityLinkingActionResult&gt;" />
      </Parameters>
      <Docs>
        <param name="errors"> Errors by document id. </param>
        <param name="statistics"> if showStats=true was specified in the request this field will contain information about the request payload. </param>
        <param name="modelVersion"> This field indicates which model is used for scoring. </param>
        <param name="documents"> Response by document. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.EntityLinkingResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.EntityLinkingResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityRecognitionOperationResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.EntityRecognitionOperationResult EntityRecognitionOperationResult (DateTimeOffset lastUpdateDateTime = default, Azure.AI.Language.Text.TextActionState status = default, string name = default, Azure.AI.Language.Text.EntitiesResult results = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.EntityRecognitionOperationResult EntityRecognitionOperationResult(valuetype System.DateTimeOffset lastUpdateDateTime, valuetype Azure.AI.Language.Text.TextActionState status, string name, class Azure.AI.Language.Text.EntitiesResult results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.EntityRecognitionOperationResult(System.DateTimeOffset,Azure.AI.Language.Text.TextActionState,System.String,Azure.AI.Language.Text.EntitiesResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityRecognitionOperationResult (Optional lastUpdateDateTime As DateTimeOffset = Nothing, Optional status As TextActionState = Nothing, Optional name As String = Nothing, Optional results As EntitiesResult = Nothing) As EntityRecognitionOperationResult" />
      <MemberSignature Language="F#" Value="static member EntityRecognitionOperationResult : DateTimeOffset * Azure.AI.Language.Text.TextActionState * string * Azure.AI.Language.Text.EntitiesResult -&gt; Azure.AI.Language.Text.EntityRecognitionOperationResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.EntityRecognitionOperationResult (lastUpdateDateTime, status, name, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.EntityRecognitionOperationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastUpdateDateTime" Type="System.DateTimeOffset" />
        <Parameter Name="status" Type="Azure.AI.Language.Text.TextActionState" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="results" Type="Azure.AI.Language.Text.EntitiesResult" />
      </Parameters>
      <Docs>
        <param name="lastUpdateDateTime"> The last updated time in UTC for the task. </param>
        <param name="status"> The status of the task at the mentioned last update time. </param>
        <param name="name"> task name. </param>
        <param name="results"> Results for the task. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.EntityRecognitionOperationResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.EntityRecognitionOperationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTag">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.EntityTag EntityTag (string name = default, double? confidenceScore = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.EntityTag EntityTag(string name, valuetype System.Nullable`1&lt;float64&gt; confidenceScore) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.EntityTag(System.String,System.Nullable{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityTag (Optional name As String = Nothing, Optional confidenceScore As Nullable(Of Double) = Nothing) As EntityTag" />
      <MemberSignature Language="F#" Value="static member EntityTag : string * Nullable&lt;double&gt; -&gt; Azure.AI.Language.Text.EntityTag" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.EntityTag (name, confidenceScore)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.EntityTag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="confidenceScore" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the tag. Entity Tag names will be unique globally. </param>
        <param name="confidenceScore"> Detection score between 0 and 1 of the extracted entity. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.EntityTag" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.EntityTag" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractedSummaryActionResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.ExtractedSummaryActionResult ExtractedSummaryActionResult (string id = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentWarning&gt; warnings = default, Azure.AI.Language.Text.DocumentStatistics statistics = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.ExtractedSummarySentence&gt; sentences = default, Azure.AI.Language.Text.DetectedLanguage detectedLanguage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.ExtractedSummaryActionResult ExtractedSummaryActionResult(string id, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DocumentWarning&gt; warnings, class Azure.AI.Language.Text.DocumentStatistics statistics, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.ExtractedSummarySentence&gt; sentences, class Azure.AI.Language.Text.DetectedLanguage detectedLanguage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.ExtractedSummaryActionResult(System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DocumentWarning},Azure.AI.Language.Text.DocumentStatistics,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.ExtractedSummarySentence},Azure.AI.Language.Text.DetectedLanguage)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExtractedSummaryActionResult (Optional id As String = Nothing, Optional warnings As IEnumerable(Of DocumentWarning) = Nothing, Optional statistics As DocumentStatistics = Nothing, Optional sentences As IEnumerable(Of ExtractedSummarySentence) = Nothing, Optional detectedLanguage As DetectedLanguage = Nothing) As ExtractedSummaryActionResult" />
      <MemberSignature Language="F#" Value="static member ExtractedSummaryActionResult : string * seq&lt;Azure.AI.Language.Text.DocumentWarning&gt; * Azure.AI.Language.Text.DocumentStatistics * seq&lt;Azure.AI.Language.Text.ExtractedSummarySentence&gt; * Azure.AI.Language.Text.DetectedLanguage -&gt; Azure.AI.Language.Text.ExtractedSummaryActionResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.ExtractedSummaryActionResult (id, warnings, statistics, sentences, detectedLanguage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.ExtractedSummaryActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="warnings" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentWarning&gt;" />
        <Parameter Name="statistics" Type="Azure.AI.Language.Text.DocumentStatistics" />
        <Parameter Name="sentences" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.ExtractedSummarySentence&gt;" />
        <Parameter Name="detectedLanguage" Type="Azure.AI.Language.Text.DetectedLanguage" />
      </Parameters>
      <Docs>
        <param name="id"> Unique, non-empty document identifier. </param>
        <param name="warnings"> Warnings encountered while processing document. </param>
        <param name="statistics"> if showStats=true was specified in the request this field will contain information about the document payload. </param>
        <param name="sentences"> Specifies the the extracted sentences from the input document. </param>
        <param name="detectedLanguage"> If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.ExtractedSummaryActionResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.ExtractedSummaryActionResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractedSummarySentence">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.ExtractedSummarySentence ExtractedSummarySentence (string text = default, double rankScore = 0, int offset = 0, int length = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.ExtractedSummarySentence ExtractedSummarySentence(string text, float64 rankScore, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.ExtractedSummarySentence(System.String,System.Double,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExtractedSummarySentence (Optional text As String = Nothing, Optional rankScore As Double = 0, Optional offset As Integer = 0, Optional length As Integer = 0) As ExtractedSummarySentence" />
      <MemberSignature Language="F#" Value="static member ExtractedSummarySentence : string * double * int * int -&gt; Azure.AI.Language.Text.ExtractedSummarySentence" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.ExtractedSummarySentence (text, rankScore, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.ExtractedSummarySentence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="rankScore" Type="System.Double" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text"> The extracted sentence text. </param>
        <param name="rankScore"> A double value representing the relevance of the sentence within the summary. Higher values indicate higher importance. </param>
        <param name="offset"> The sentence offset from the start of the document, based on the value of the parameter StringIndexType. </param>
        <param name="length"> The length of the sentence. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.ExtractedSummarySentence" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.ExtractedSummarySentence" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractiveSummarizationOperationResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.ExtractiveSummarizationOperationResult ExtractiveSummarizationOperationResult (DateTimeOffset lastUpdateDateTime = default, Azure.AI.Language.Text.TextActionState status = default, string name = default, Azure.AI.Language.Text.ExtractiveSummarizationResult results = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.ExtractiveSummarizationOperationResult ExtractiveSummarizationOperationResult(valuetype System.DateTimeOffset lastUpdateDateTime, valuetype Azure.AI.Language.Text.TextActionState status, string name, class Azure.AI.Language.Text.ExtractiveSummarizationResult results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.ExtractiveSummarizationOperationResult(System.DateTimeOffset,Azure.AI.Language.Text.TextActionState,System.String,Azure.AI.Language.Text.ExtractiveSummarizationResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExtractiveSummarizationOperationResult (Optional lastUpdateDateTime As DateTimeOffset = Nothing, Optional status As TextActionState = Nothing, Optional name As String = Nothing, Optional results As ExtractiveSummarizationResult = Nothing) As ExtractiveSummarizationOperationResult" />
      <MemberSignature Language="F#" Value="static member ExtractiveSummarizationOperationResult : DateTimeOffset * Azure.AI.Language.Text.TextActionState * string * Azure.AI.Language.Text.ExtractiveSummarizationResult -&gt; Azure.AI.Language.Text.ExtractiveSummarizationOperationResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.ExtractiveSummarizationOperationResult (lastUpdateDateTime, status, name, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.ExtractiveSummarizationOperationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastUpdateDateTime" Type="System.DateTimeOffset" />
        <Parameter Name="status" Type="Azure.AI.Language.Text.TextActionState" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="results" Type="Azure.AI.Language.Text.ExtractiveSummarizationResult" />
      </Parameters>
      <Docs>
        <param name="lastUpdateDateTime"> The last updated time in UTC for the task. </param>
        <param name="status"> The status of the task at the mentioned last update time. </param>
        <param name="name"> task name. </param>
        <param name="results"> Results of the task. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.ExtractiveSummarizationOperationResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.ExtractiveSummarizationOperationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractiveSummarizationResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.ExtractiveSummarizationResult ExtractiveSummarizationResult (System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentError&gt; errors = default, Azure.AI.Language.Text.RequestStatistics statistics = default, string modelVersion = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.ExtractedSummaryActionResult&gt; documents = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.ExtractiveSummarizationResult ExtractiveSummarizationResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DocumentError&gt; errors, class Azure.AI.Language.Text.RequestStatistics statistics, string modelVersion, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.ExtractedSummaryActionResult&gt; documents) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.ExtractiveSummarizationResult(System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DocumentError},Azure.AI.Language.Text.RequestStatistics,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.ExtractedSummaryActionResult})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExtractiveSummarizationResult (Optional errors As IEnumerable(Of DocumentError) = Nothing, Optional statistics As RequestStatistics = Nothing, Optional modelVersion As String = Nothing, Optional documents As IEnumerable(Of ExtractedSummaryActionResult) = Nothing) As ExtractiveSummarizationResult" />
      <MemberSignature Language="F#" Value="static member ExtractiveSummarizationResult : seq&lt;Azure.AI.Language.Text.DocumentError&gt; * Azure.AI.Language.Text.RequestStatistics * string * seq&lt;Azure.AI.Language.Text.ExtractedSummaryActionResult&gt; -&gt; Azure.AI.Language.Text.ExtractiveSummarizationResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.ExtractiveSummarizationResult (errors, statistics, modelVersion, documents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.ExtractiveSummarizationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errors" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentError&gt;" />
        <Parameter Name="statistics" Type="Azure.AI.Language.Text.RequestStatistics" />
        <Parameter Name="modelVersion" Type="System.String" />
        <Parameter Name="documents" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.ExtractedSummaryActionResult&gt;" />
      </Parameters>
      <Docs>
        <param name="errors"> Errors by document id. </param>
        <param name="statistics"> if showStats=true was specified in the request this field will contain information about the request payload. </param>
        <param name="modelVersion"> This field indicates which model is used for scoring. </param>
        <param name="documents"> Response by document. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.ExtractiveSummarizationResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.ExtractiveSummarizationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FhirBundle">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.FhirBundle FhirBundle (System.Collections.Generic.IReadOnlyDictionary&lt;string,BinaryData&gt; additionalProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.FhirBundle FhirBundle(class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class System.BinaryData&gt; additionalProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.FhirBundle(System.Collections.Generic.IReadOnlyDictionary{System.String,System.BinaryData})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FhirBundle (Optional additionalProperties As IReadOnlyDictionary(Of String, BinaryData) = Nothing) As FhirBundle" />
      <MemberSignature Language="F#" Value="static member FhirBundle : System.Collections.Generic.IReadOnlyDictionary&lt;string, BinaryData&gt; -&gt; Azure.AI.Language.Text.FhirBundle" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.FhirBundle additionalProperties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.FhirBundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="additionalProperties" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.BinaryData&gt;" />
      </Parameters>
      <Docs>
        <param name="additionalProperties"> Additional Properties. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.FhirBundle" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.FhirBundle" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HealthcareActionResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.HealthcareActionResult HealthcareActionResult (string id = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentWarning&gt; warnings = default, Azure.AI.Language.Text.DocumentStatistics statistics = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.HealthcareEntity&gt; entities = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.HealthcareRelation&gt; relations = default, Azure.AI.Language.Text.FhirBundle fhirBundle = default, Azure.AI.Language.Text.DetectedLanguage detectedLanguage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.HealthcareActionResult HealthcareActionResult(string id, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DocumentWarning&gt; warnings, class Azure.AI.Language.Text.DocumentStatistics statistics, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.HealthcareEntity&gt; entities, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.HealthcareRelation&gt; relations, class Azure.AI.Language.Text.FhirBundle fhirBundle, class Azure.AI.Language.Text.DetectedLanguage detectedLanguage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.HealthcareActionResult(System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DocumentWarning},Azure.AI.Language.Text.DocumentStatistics,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.HealthcareEntity},System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.HealthcareRelation},Azure.AI.Language.Text.FhirBundle,Azure.AI.Language.Text.DetectedLanguage)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HealthcareActionResult (Optional id As String = Nothing, Optional warnings As IEnumerable(Of DocumentWarning) = Nothing, Optional statistics As DocumentStatistics = Nothing, Optional entities As IEnumerable(Of HealthcareEntity) = Nothing, Optional relations As IEnumerable(Of HealthcareRelation) = Nothing, Optional fhirBundle As FhirBundle = Nothing, Optional detectedLanguage As DetectedLanguage = Nothing) As HealthcareActionResult" />
      <MemberSignature Language="F#" Value="static member HealthcareActionResult : string * seq&lt;Azure.AI.Language.Text.DocumentWarning&gt; * Azure.AI.Language.Text.DocumentStatistics * seq&lt;Azure.AI.Language.Text.HealthcareEntity&gt; * seq&lt;Azure.AI.Language.Text.HealthcareRelation&gt; * Azure.AI.Language.Text.FhirBundle * Azure.AI.Language.Text.DetectedLanguage -&gt; Azure.AI.Language.Text.HealthcareActionResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.HealthcareActionResult (id, warnings, statistics, entities, relations, fhirBundle, detectedLanguage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.HealthcareActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="warnings" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentWarning&gt;" />
        <Parameter Name="statistics" Type="Azure.AI.Language.Text.DocumentStatistics" />
        <Parameter Name="entities" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.HealthcareEntity&gt;" />
        <Parameter Name="relations" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.HealthcareRelation&gt;" />
        <Parameter Name="fhirBundle" Type="Azure.AI.Language.Text.FhirBundle" />
        <Parameter Name="detectedLanguage" Type="Azure.AI.Language.Text.DetectedLanguage" />
      </Parameters>
      <Docs>
        <param name="id"> Unique, non-empty document identifier. </param>
        <param name="warnings"> Warnings encountered while processing document. </param>
        <param name="statistics"> if showStats=true was specified in the request this field will contain information about the document payload. </param>
        <param name="entities"> Healthcare entities. </param>
        <param name="relations"> Healthcare entity relations. </param>
        <param name="fhirBundle"> JSON bundle containing a FHIR compatible object for consumption in other Healthcare tools. For additional information see https://www.hl7.org/fhir/overview.html. </param>
        <param name="detectedLanguage"> If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.HealthcareActionResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.HealthcareActionResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HealthcareAssertion">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.HealthcareAssertion HealthcareAssertion (Azure.AI.Language.Text.HealthcareAssertionConditionality? conditionality = default, Azure.AI.Language.Text.HealthcareAssertionCertainty? certainty = default, Azure.AI.Language.Text.HealthcareAssertionAssociation? association = default, Azure.AI.Language.Text.HealthcareAssertionTemporality? temporality = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.HealthcareAssertion HealthcareAssertion(valuetype System.Nullable`1&lt;valuetype Azure.AI.Language.Text.HealthcareAssertionConditionality&gt; conditionality, valuetype System.Nullable`1&lt;valuetype Azure.AI.Language.Text.HealthcareAssertionCertainty&gt; certainty, valuetype System.Nullable`1&lt;valuetype Azure.AI.Language.Text.HealthcareAssertionAssociation&gt; association, valuetype System.Nullable`1&lt;valuetype Azure.AI.Language.Text.HealthcareAssertionTemporality&gt; temporality) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.HealthcareAssertion(System.Nullable{Azure.AI.Language.Text.HealthcareAssertionConditionality},System.Nullable{Azure.AI.Language.Text.HealthcareAssertionCertainty},System.Nullable{Azure.AI.Language.Text.HealthcareAssertionAssociation},System.Nullable{Azure.AI.Language.Text.HealthcareAssertionTemporality})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HealthcareAssertion (Optional conditionality As Nullable(Of HealthcareAssertionConditionality) = Nothing, Optional certainty As Nullable(Of HealthcareAssertionCertainty) = Nothing, Optional association As Nullable(Of HealthcareAssertionAssociation) = Nothing, Optional temporality As Nullable(Of HealthcareAssertionTemporality) = Nothing) As HealthcareAssertion" />
      <MemberSignature Language="F#" Value="static member HealthcareAssertion : Nullable&lt;Azure.AI.Language.Text.HealthcareAssertionConditionality&gt; * Nullable&lt;Azure.AI.Language.Text.HealthcareAssertionCertainty&gt; * Nullable&lt;Azure.AI.Language.Text.HealthcareAssertionAssociation&gt; * Nullable&lt;Azure.AI.Language.Text.HealthcareAssertionTemporality&gt; -&gt; Azure.AI.Language.Text.HealthcareAssertion" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.HealthcareAssertion (conditionality, certainty, association, temporality)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.HealthcareAssertion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conditionality" Type="System.Nullable&lt;Azure.AI.Language.Text.HealthcareAssertionConditionality&gt;" />
        <Parameter Name="certainty" Type="System.Nullable&lt;Azure.AI.Language.Text.HealthcareAssertionCertainty&gt;" />
        <Parameter Name="association" Type="System.Nullable&lt;Azure.AI.Language.Text.HealthcareAssertionAssociation&gt;" />
        <Parameter Name="temporality" Type="System.Nullable&lt;Azure.AI.Language.Text.HealthcareAssertionTemporality&gt;" />
      </Parameters>
      <Docs>
        <param name="conditionality"> Describes any conditionality on the entity. </param>
        <param name="certainty"> Describes the entities certainty and polarity. </param>
        <param name="association"> Describes if the entity is the subject of the text or if it describes someone else. </param>
        <param name="temporality"> Describes temporal information regarding the entity. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.HealthcareAssertion" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.HealthcareAssertion" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HealthcareEntity">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.HealthcareEntity HealthcareEntity (string text = default, Azure.AI.Language.Text.HealthcareEntityCategory category = default, string subcategory = default, int offset = 0, int length = 0, double confidenceScore = 0, Azure.AI.Language.Text.HealthcareAssertion assertion = default, string name = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.HealthcareEntityLink&gt; links = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.HealthcareEntity HealthcareEntity(string text, valuetype Azure.AI.Language.Text.HealthcareEntityCategory category, string subcategory, int32 offset, int32 length, float64 confidenceScore, class Azure.AI.Language.Text.HealthcareAssertion assertion, string name, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.HealthcareEntityLink&gt; links) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.HealthcareEntity(System.String,Azure.AI.Language.Text.HealthcareEntityCategory,System.String,System.Int32,System.Int32,System.Double,Azure.AI.Language.Text.HealthcareAssertion,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.HealthcareEntityLink})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HealthcareEntity (Optional text As String = Nothing, Optional category As HealthcareEntityCategory = Nothing, Optional subcategory As String = Nothing, Optional offset As Integer = 0, Optional length As Integer = 0, Optional confidenceScore As Double = 0, Optional assertion As HealthcareAssertion = Nothing, Optional name As String = Nothing, Optional links As IEnumerable(Of HealthcareEntityLink) = Nothing) As HealthcareEntity" />
      <MemberSignature Language="F#" Value="static member HealthcareEntity : string * Azure.AI.Language.Text.HealthcareEntityCategory * string * int * int * double * Azure.AI.Language.Text.HealthcareAssertion * string * seq&lt;Azure.AI.Language.Text.HealthcareEntityLink&gt; -&gt; Azure.AI.Language.Text.HealthcareEntity" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.HealthcareEntity (text, category, subcategory, offset, length, confidenceScore, assertion, name, links)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.HealthcareEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="category" Type="Azure.AI.Language.Text.HealthcareEntityCategory" />
        <Parameter Name="subcategory" Type="System.String" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="confidenceScore" Type="System.Double" />
        <Parameter Name="assertion" Type="Azure.AI.Language.Text.HealthcareAssertion" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="links" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.HealthcareEntityLink&gt;" />
      </Parameters>
      <Docs>
        <param name="text"> Entity text as appears in the request. </param>
        <param name="category"> Healthcare Entity Category. </param>
        <param name="subcategory"> (Optional) Entity sub type. </param>
        <param name="offset"> Start position for the entity text. Use of different 'stringIndexType' values can affect the offset returned. </param>
        <param name="length"> Length for the entity text. Use of different 'stringIndexType' values can affect the length returned. </param>
        <param name="confidenceScore"> Confidence score between 0 and 1 of the extracted entity. </param>
        <param name="assertion"> Assertion of the entity. </param>
        <param name="name"> Preferred name for the entity. Example: 'histologically' would have a 'name' of 'histologic'. </param>
        <param name="links"> Entity references in known data sources. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.HealthcareEntity" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.HealthcareEntity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HealthcareEntityLink">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.HealthcareEntityLink HealthcareEntityLink (string dataSource = default, string id = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.HealthcareEntityLink HealthcareEntityLink(string dataSource, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.HealthcareEntityLink(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HealthcareEntityLink (Optional dataSource As String = Nothing, Optional id As String = Nothing) As HealthcareEntityLink" />
      <MemberSignature Language="F#" Value="static member HealthcareEntityLink : string * string -&gt; Azure.AI.Language.Text.HealthcareEntityLink" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.HealthcareEntityLink (dataSource, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.HealthcareEntityLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource"> Entity Catalog. Examples include: UMLS, CHV, MSH, etc. </param>
        <param name="id"> Entity id in the given source catalog. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.HealthcareEntityLink" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.HealthcareEntityLink" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HealthcareOperationResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.HealthcareOperationResult HealthcareOperationResult (DateTimeOffset lastUpdateDateTime = default, Azure.AI.Language.Text.TextActionState status = default, string name = default, Azure.AI.Language.Text.HealthcareResult results = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.HealthcareOperationResult HealthcareOperationResult(valuetype System.DateTimeOffset lastUpdateDateTime, valuetype Azure.AI.Language.Text.TextActionState status, string name, class Azure.AI.Language.Text.HealthcareResult results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.HealthcareOperationResult(System.DateTimeOffset,Azure.AI.Language.Text.TextActionState,System.String,Azure.AI.Language.Text.HealthcareResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HealthcareOperationResult (Optional lastUpdateDateTime As DateTimeOffset = Nothing, Optional status As TextActionState = Nothing, Optional name As String = Nothing, Optional results As HealthcareResult = Nothing) As HealthcareOperationResult" />
      <MemberSignature Language="F#" Value="static member HealthcareOperationResult : DateTimeOffset * Azure.AI.Language.Text.TextActionState * string * Azure.AI.Language.Text.HealthcareResult -&gt; Azure.AI.Language.Text.HealthcareOperationResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.HealthcareOperationResult (lastUpdateDateTime, status, name, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.HealthcareOperationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastUpdateDateTime" Type="System.DateTimeOffset" />
        <Parameter Name="status" Type="Azure.AI.Language.Text.TextActionState" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="results" Type="Azure.AI.Language.Text.HealthcareResult" />
      </Parameters>
      <Docs>
        <param name="lastUpdateDateTime"> The last updated time in UTC for the task. </param>
        <param name="status"> The status of the task at the mentioned last update time. </param>
        <param name="name"> task name. </param>
        <param name="results"> Results of the task. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.HealthcareOperationResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.HealthcareOperationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HealthcareRelation">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.HealthcareRelation HealthcareRelation (Azure.AI.Language.Text.RelationType relationType = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.HealthcareRelationEntity&gt; entities = default, double? confidenceScore = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.HealthcareRelation HealthcareRelation(valuetype Azure.AI.Language.Text.RelationType relationType, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.HealthcareRelationEntity&gt; entities, valuetype System.Nullable`1&lt;float64&gt; confidenceScore) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.HealthcareRelation(Azure.AI.Language.Text.RelationType,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.HealthcareRelationEntity},System.Nullable{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HealthcareRelation (Optional relationType As RelationType = Nothing, Optional entities As IEnumerable(Of HealthcareRelationEntity) = Nothing, Optional confidenceScore As Nullable(Of Double) = Nothing) As HealthcareRelation" />
      <MemberSignature Language="F#" Value="static member HealthcareRelation : Azure.AI.Language.Text.RelationType * seq&lt;Azure.AI.Language.Text.HealthcareRelationEntity&gt; * Nullable&lt;double&gt; -&gt; Azure.AI.Language.Text.HealthcareRelation" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.HealthcareRelation (relationType, entities, confidenceScore)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.HealthcareRelation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationType" Type="Azure.AI.Language.Text.RelationType" />
        <Parameter Name="entities" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.HealthcareRelationEntity&gt;" />
        <Parameter Name="confidenceScore" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="relationType"> Type of relation. Examples include: `DosageOfMedication` or 'FrequencyOfMedication', etc. </param>
        <param name="entities"> The entities in the relation. </param>
        <param name="confidenceScore"> Confidence score between 0 and 1 of the extracted relation. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.HealthcareRelation" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.HealthcareRelation" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HealthcareRelationEntity">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.HealthcareRelationEntity HealthcareRelationEntity (string ref = default, string role = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.HealthcareRelationEntity HealthcareRelationEntity(string ref, string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.HealthcareRelationEntity(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HealthcareRelationEntity (Optional ref As String = Nothing, Optional role As String = Nothing) As HealthcareRelationEntity" />
      <MemberSignature Language="F#" Value="static member HealthcareRelationEntity : string * string -&gt; Azure.AI.Language.Text.HealthcareRelationEntity" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.HealthcareRelationEntity (ref, role)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.HealthcareRelationEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ref" Type="System.String" />
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ref"> Reference link object, using a JSON pointer RFC 6901 (URI Fragment Identifier Representation), pointing to the entity . </param>
        <param name="role"> Role of entity in the relationship. For example: 'CD20-positive diffuse large B-cell lymphoma' has the following entities with their roles in parenthesis:  CD20 (GeneOrProtein), Positive (Expression), diffuse large B-cell lymphoma (Diagnosis). </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.HealthcareRelationEntity" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.HealthcareRelationEntity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HealthcareResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.HealthcareResult HealthcareResult (System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentError&gt; errors = default, Azure.AI.Language.Text.RequestStatistics statistics = default, string modelVersion = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.HealthcareActionResult&gt; documents = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.HealthcareResult HealthcareResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DocumentError&gt; errors, class Azure.AI.Language.Text.RequestStatistics statistics, string modelVersion, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.HealthcareActionResult&gt; documents) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.HealthcareResult(System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DocumentError},Azure.AI.Language.Text.RequestStatistics,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.HealthcareActionResult})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HealthcareResult (Optional errors As IEnumerable(Of DocumentError) = Nothing, Optional statistics As RequestStatistics = Nothing, Optional modelVersion As String = Nothing, Optional documents As IEnumerable(Of HealthcareActionResult) = Nothing) As HealthcareResult" />
      <MemberSignature Language="F#" Value="static member HealthcareResult : seq&lt;Azure.AI.Language.Text.DocumentError&gt; * Azure.AI.Language.Text.RequestStatistics * string * seq&lt;Azure.AI.Language.Text.HealthcareActionResult&gt; -&gt; Azure.AI.Language.Text.HealthcareResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.HealthcareResult (errors, statistics, modelVersion, documents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.HealthcareResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errors" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentError&gt;" />
        <Parameter Name="statistics" Type="Azure.AI.Language.Text.RequestStatistics" />
        <Parameter Name="modelVersion" Type="System.String" />
        <Parameter Name="documents" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.HealthcareActionResult&gt;" />
      </Parameters>
      <Docs>
        <param name="errors"> Errors by document id. </param>
        <param name="statistics"> if showStats=true was specified in the request this field will contain information about the request payload. </param>
        <param name="modelVersion"> This field indicates which model is used for scoring. </param>
        <param name="documents"> List of result objects for the processed Healthcare documents. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.HealthcareResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.HealthcareResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InformationMetadata">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.InformationMetadata InformationMetadata (double value = 0, Azure.AI.Language.Text.InformationUnit unit = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.InformationMetadata InformationMetadata(float64 value, valuetype Azure.AI.Language.Text.InformationUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.InformationMetadata(System.Double,Azure.AI.Language.Text.InformationUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InformationMetadata (Optional value As Double = 0, Optional unit As InformationUnit = Nothing) As InformationMetadata" />
      <MemberSignature Language="F#" Value="static member InformationMetadata : double * Azure.AI.Language.Text.InformationUnit -&gt; Azure.AI.Language.Text.InformationMetadata" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.InformationMetadata (value, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.InformationMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="unit" Type="Azure.AI.Language.Text.InformationUnit" />
      </Parameters>
      <Docs>
        <param name="value"> The numeric value that the extracted text denotes. </param>
        <param name="unit"> Unit of measure for information. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.InformationMetadata" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.InformationMetadata" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerErrorModel">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.InnerErrorModel InnerErrorModel (Azure.AI.Language.Text.InnerErrorCode code = default, string message = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; details = default, string target = default, Azure.AI.Language.Text.InnerErrorModel innererror = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.InnerErrorModel InnerErrorModel(valuetype Azure.AI.Language.Text.InnerErrorCode code, string message, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; details, string target, class Azure.AI.Language.Text.InnerErrorModel innererror) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.InnerErrorModel(Azure.AI.Language.Text.InnerErrorCode,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.String,Azure.AI.Language.Text.InnerErrorModel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InnerErrorModel (Optional code As InnerErrorCode = Nothing, Optional message As String = Nothing, Optional details As IReadOnlyDictionary(Of String, String) = Nothing, Optional target As String = Nothing, Optional innererror As InnerErrorModel = Nothing) As InnerErrorModel" />
      <MemberSignature Language="F#" Value="static member InnerErrorModel : Azure.AI.Language.Text.InnerErrorCode * string * System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; * string * Azure.AI.Language.Text.InnerErrorModel -&gt; Azure.AI.Language.Text.InnerErrorModel" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.InnerErrorModel (code, message, details, target, innererror)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.InnerErrorModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="Azure.AI.Language.Text.InnerErrorCode" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="details" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="innererror" Type="Azure.AI.Language.Text.InnerErrorModel" />
      </Parameters>
      <Docs>
        <param name="code"> One of a server-defined set of error codes. </param>
        <param name="message"> Error message. </param>
        <param name="details"> Error details. </param>
        <param name="target"> Error target. </param>
        <param name="innererror"> An object containing more specific information than the current object about the error. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.InnerErrorModel" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.InnerErrorModel" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPhraseExtractionOperationResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.KeyPhraseExtractionOperationResult KeyPhraseExtractionOperationResult (DateTimeOffset lastUpdateDateTime = default, Azure.AI.Language.Text.TextActionState status = default, string name = default, Azure.AI.Language.Text.KeyPhraseResult results = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.KeyPhraseExtractionOperationResult KeyPhraseExtractionOperationResult(valuetype System.DateTimeOffset lastUpdateDateTime, valuetype Azure.AI.Language.Text.TextActionState status, string name, class Azure.AI.Language.Text.KeyPhraseResult results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.KeyPhraseExtractionOperationResult(System.DateTimeOffset,Azure.AI.Language.Text.TextActionState,System.String,Azure.AI.Language.Text.KeyPhraseResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyPhraseExtractionOperationResult (Optional lastUpdateDateTime As DateTimeOffset = Nothing, Optional status As TextActionState = Nothing, Optional name As String = Nothing, Optional results As KeyPhraseResult = Nothing) As KeyPhraseExtractionOperationResult" />
      <MemberSignature Language="F#" Value="static member KeyPhraseExtractionOperationResult : DateTimeOffset * Azure.AI.Language.Text.TextActionState * string * Azure.AI.Language.Text.KeyPhraseResult -&gt; Azure.AI.Language.Text.KeyPhraseExtractionOperationResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.KeyPhraseExtractionOperationResult (lastUpdateDateTime, status, name, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.KeyPhraseExtractionOperationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastUpdateDateTime" Type="System.DateTimeOffset" />
        <Parameter Name="status" Type="Azure.AI.Language.Text.TextActionState" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="results" Type="Azure.AI.Language.Text.KeyPhraseResult" />
      </Parameters>
      <Docs>
        <param name="lastUpdateDateTime"> The last updated time in UTC for the task. </param>
        <param name="status"> The status of the task at the mentioned last update time. </param>
        <param name="name"> task name. </param>
        <param name="results"> The list of Key phrase extraction results. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.KeyPhraseExtractionOperationResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.KeyPhraseExtractionOperationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPhraseResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.KeyPhraseResult KeyPhraseResult (System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentError&gt; errors = default, Azure.AI.Language.Text.RequestStatistics statistics = default, string modelVersion = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.KeyPhrasesActionResult&gt; documents = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.KeyPhraseResult KeyPhraseResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DocumentError&gt; errors, class Azure.AI.Language.Text.RequestStatistics statistics, string modelVersion, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.KeyPhrasesActionResult&gt; documents) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.KeyPhraseResult(System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DocumentError},Azure.AI.Language.Text.RequestStatistics,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.KeyPhrasesActionResult})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyPhraseResult (Optional errors As IEnumerable(Of DocumentError) = Nothing, Optional statistics As RequestStatistics = Nothing, Optional modelVersion As String = Nothing, Optional documents As IEnumerable(Of KeyPhrasesActionResult) = Nothing) As KeyPhraseResult" />
      <MemberSignature Language="F#" Value="static member KeyPhraseResult : seq&lt;Azure.AI.Language.Text.DocumentError&gt; * Azure.AI.Language.Text.RequestStatistics * string * seq&lt;Azure.AI.Language.Text.KeyPhrasesActionResult&gt; -&gt; Azure.AI.Language.Text.KeyPhraseResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.KeyPhraseResult (errors, statistics, modelVersion, documents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.KeyPhraseResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errors" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentError&gt;" />
        <Parameter Name="statistics" Type="Azure.AI.Language.Text.RequestStatistics" />
        <Parameter Name="modelVersion" Type="System.String" />
        <Parameter Name="documents" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.KeyPhrasesActionResult&gt;" />
      </Parameters>
      <Docs>
        <param name="errors"> Errors by document id. </param>
        <param name="statistics"> if showStats=true was specified in the request this field will contain information about the request payload. </param>
        <param name="modelVersion"> This field indicates which model is used for scoring. </param>
        <param name="documents"> Response by document. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.KeyPhraseResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.KeyPhraseResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPhrasesActionResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.KeyPhrasesActionResult KeyPhrasesActionResult (string id = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentWarning&gt; warnings = default, Azure.AI.Language.Text.DocumentStatistics statistics = default, System.Collections.Generic.IEnumerable&lt;string&gt; keyPhrases = default, Azure.AI.Language.Text.DetectedLanguage detectedLanguage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.KeyPhrasesActionResult KeyPhrasesActionResult(string id, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DocumentWarning&gt; warnings, class Azure.AI.Language.Text.DocumentStatistics statistics, class System.Collections.Generic.IEnumerable`1&lt;string&gt; keyPhrases, class Azure.AI.Language.Text.DetectedLanguage detectedLanguage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.KeyPhrasesActionResult(System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DocumentWarning},Azure.AI.Language.Text.DocumentStatistics,System.Collections.Generic.IEnumerable{System.String},Azure.AI.Language.Text.DetectedLanguage)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyPhrasesActionResult (Optional id As String = Nothing, Optional warnings As IEnumerable(Of DocumentWarning) = Nothing, Optional statistics As DocumentStatistics = Nothing, Optional keyPhrases As IEnumerable(Of String) = Nothing, Optional detectedLanguage As DetectedLanguage = Nothing) As KeyPhrasesActionResult" />
      <MemberSignature Language="F#" Value="static member KeyPhrasesActionResult : string * seq&lt;Azure.AI.Language.Text.DocumentWarning&gt; * Azure.AI.Language.Text.DocumentStatistics * seq&lt;string&gt; * Azure.AI.Language.Text.DetectedLanguage -&gt; Azure.AI.Language.Text.KeyPhrasesActionResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.KeyPhrasesActionResult (id, warnings, statistics, keyPhrases, detectedLanguage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.KeyPhrasesActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="warnings" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentWarning&gt;" />
        <Parameter Name="statistics" Type="Azure.AI.Language.Text.DocumentStatistics" />
        <Parameter Name="keyPhrases" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="detectedLanguage" Type="Azure.AI.Language.Text.DetectedLanguage" />
      </Parameters>
      <Docs>
        <param name="id"> Unique, non-empty document identifier. </param>
        <param name="warnings"> Warnings encountered while processing document. </param>
        <param name="statistics"> if showStats=true was specified in the request this field will contain information about the document payload. </param>
        <param name="keyPhrases"> A list of representative words or phrases. The number of key phrases returned is proportional to the number of words in the input document. </param>
        <param name="detectedLanguage"> If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.KeyPhrasesActionResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.KeyPhrasesActionResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageDetectionDocumentResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.LanguageDetectionDocumentResult LanguageDetectionDocumentResult (string id = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentWarning&gt; warnings = default, Azure.AI.Language.Text.DocumentStatistics statistics = default, Azure.AI.Language.Text.DetectedLanguage detectedLanguage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.LanguageDetectionDocumentResult LanguageDetectionDocumentResult(string id, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DocumentWarning&gt; warnings, class Azure.AI.Language.Text.DocumentStatistics statistics, class Azure.AI.Language.Text.DetectedLanguage detectedLanguage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.LanguageDetectionDocumentResult(System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DocumentWarning},Azure.AI.Language.Text.DocumentStatistics,Azure.AI.Language.Text.DetectedLanguage)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LanguageDetectionDocumentResult (Optional id As String = Nothing, Optional warnings As IEnumerable(Of DocumentWarning) = Nothing, Optional statistics As DocumentStatistics = Nothing, Optional detectedLanguage As DetectedLanguage = Nothing) As LanguageDetectionDocumentResult" />
      <MemberSignature Language="F#" Value="static member LanguageDetectionDocumentResult : string * seq&lt;Azure.AI.Language.Text.DocumentWarning&gt; * Azure.AI.Language.Text.DocumentStatistics * Azure.AI.Language.Text.DetectedLanguage -&gt; Azure.AI.Language.Text.LanguageDetectionDocumentResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.LanguageDetectionDocumentResult (id, warnings, statistics, detectedLanguage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.LanguageDetectionDocumentResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="warnings" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentWarning&gt;" />
        <Parameter Name="statistics" Type="Azure.AI.Language.Text.DocumentStatistics" />
        <Parameter Name="detectedLanguage" Type="Azure.AI.Language.Text.DetectedLanguage" />
      </Parameters>
      <Docs>
        <param name="id"> Unique, non-empty document identifier. </param>
        <param name="warnings"> Warnings encountered while processing document. </param>
        <param name="statistics"> if showStats=true was specified in the request this field will contain information about the document payload. </param>
        <param name="detectedLanguage"> Detected Language. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.LanguageDetectionDocumentResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.LanguageDetectionDocumentResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageDetectionResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.LanguageDetectionResult LanguageDetectionResult (System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentError&gt; errors = default, Azure.AI.Language.Text.RequestStatistics statistics = default, string modelVersion = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.LanguageDetectionDocumentResult&gt; documents = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.LanguageDetectionResult LanguageDetectionResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DocumentError&gt; errors, class Azure.AI.Language.Text.RequestStatistics statistics, string modelVersion, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.LanguageDetectionDocumentResult&gt; documents) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.LanguageDetectionResult(System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DocumentError},Azure.AI.Language.Text.RequestStatistics,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.LanguageDetectionDocumentResult})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LanguageDetectionResult (Optional errors As IEnumerable(Of DocumentError) = Nothing, Optional statistics As RequestStatistics = Nothing, Optional modelVersion As String = Nothing, Optional documents As IEnumerable(Of LanguageDetectionDocumentResult) = Nothing) As LanguageDetectionResult" />
      <MemberSignature Language="F#" Value="static member LanguageDetectionResult : seq&lt;Azure.AI.Language.Text.DocumentError&gt; * Azure.AI.Language.Text.RequestStatistics * string * seq&lt;Azure.AI.Language.Text.LanguageDetectionDocumentResult&gt; -&gt; Azure.AI.Language.Text.LanguageDetectionResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.LanguageDetectionResult (errors, statistics, modelVersion, documents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.LanguageDetectionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errors" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentError&gt;" />
        <Parameter Name="statistics" Type="Azure.AI.Language.Text.RequestStatistics" />
        <Parameter Name="modelVersion" Type="System.String" />
        <Parameter Name="documents" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.LanguageDetectionDocumentResult&gt;" />
      </Parameters>
      <Docs>
        <param name="errors"> Errors by document id. </param>
        <param name="statistics"> if showStats=true was specified in the request this field will contain information about the request payload. </param>
        <param name="modelVersion"> This field indicates which model is used for scoring. </param>
        <param name="documents"> Enumeration of language detection results for each input document. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.LanguageDetectionResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.LanguageDetectionResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageInput">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.LanguageInput LanguageInput (string id = default, string text = default, string countryHint = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.LanguageInput LanguageInput(string id, string text, string countryHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.LanguageInput(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LanguageInput (Optional id As String = Nothing, Optional text As String = Nothing, Optional countryHint As String = Nothing) As LanguageInput" />
      <MemberSignature Language="F#" Value="static member LanguageInput : string * string * string -&gt; Azure.AI.Language.Text.LanguageInput" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.LanguageInput (id, text, countryHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.LanguageInput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="countryHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> A unique, non-empty document identifier. </param>
        <param name="text"> The input text to process. </param>
        <param name="countryHint"> The country hint to help with language detection of the text. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.LanguageInput" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.LanguageInput" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LengthMetadata">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.LengthMetadata LengthMetadata (double value = 0, Azure.AI.Language.Text.LengthUnit unit = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.LengthMetadata LengthMetadata(float64 value, valuetype Azure.AI.Language.Text.LengthUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.LengthMetadata(System.Double,Azure.AI.Language.Text.LengthUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LengthMetadata (Optional value As Double = 0, Optional unit As LengthUnit = Nothing) As LengthMetadata" />
      <MemberSignature Language="F#" Value="static member LengthMetadata : double * Azure.AI.Language.Text.LengthUnit -&gt; Azure.AI.Language.Text.LengthMetadata" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.LengthMetadata (value, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.LengthMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="unit" Type="Azure.AI.Language.Text.LengthUnit" />
      </Parameters>
      <Docs>
        <param name="value"> The numeric value that the extracted text denotes. </param>
        <param name="unit"> Unit of measure for length. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.LengthMetadata" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.LengthMetadata" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkedEntity">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.LinkedEntity LinkedEntity (string name = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.EntityLinkingMatch&gt; matches = default, string language = default, string id = default, string url = default, string dataSource = default, string bingId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.LinkedEntity LinkedEntity(string name, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.EntityLinkingMatch&gt; matches, string language, string id, string url, string dataSource, string bingId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.LinkedEntity(System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.EntityLinkingMatch},System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LinkedEntity (Optional name As String = Nothing, Optional matches As IEnumerable(Of EntityLinkingMatch) = Nothing, Optional language As String = Nothing, Optional id As String = Nothing, Optional url As String = Nothing, Optional dataSource As String = Nothing, Optional bingId As String = Nothing) As LinkedEntity" />
      <MemberSignature Language="F#" Value="static member LinkedEntity : string * seq&lt;Azure.AI.Language.Text.EntityLinkingMatch&gt; * string * string * string * string * string -&gt; Azure.AI.Language.Text.LinkedEntity" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.LinkedEntity (name, matches, language, id, url, dataSource, bingId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.LinkedEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="matches" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.EntityLinkingMatch&gt;" />
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="dataSource" Type="System.String" />
        <Parameter Name="bingId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"> Entity Linking formal name. </param>
        <param name="matches"> List of instances this entity appears in the text. </param>
        <param name="language"> Language used in the data source. </param>
        <param name="id"> Unique identifier of the recognized entity from the data source. </param>
        <param name="url"> URL for the entity's page from the data source. </param>
        <param name="dataSource"> Data source used to extract entity linking, such as Wiki/Bing etc. </param>
        <param name="bingId"> Bing Entity Search API unique identifier of the recognized entity. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.LinkedEntity" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.LinkedEntity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiLanguageInput">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.MultiLanguageInput MultiLanguageInput (string id = default, string text = default, string language = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.MultiLanguageInput MultiLanguageInput(string id, string text, string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.MultiLanguageInput(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiLanguageInput (Optional id As String = Nothing, Optional text As String = Nothing, Optional language As String = Nothing) As MultiLanguageInput" />
      <MemberSignature Language="F#" Value="static member MultiLanguageInput : string * string * string -&gt; Azure.AI.Language.Text.MultiLanguageInput" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.MultiLanguageInput (id, text, language)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.MultiLanguageInput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> A unique, non-empty document identifier. </param>
        <param name="text"> The input text to process. </param>
        <param name="language"> (Optional) This is the 2 letter ISO 639-1 representation of a language. For example, use \"en\" for English; \"es\" for Spanish etc. If not set, use \"en\" for English as default. (Following only applies to 2023-04-15-preview and above) For Auto Language Detection, use \"auto\". If not set, use \"en\" for English as default. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.MultiLanguageInput" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.MultiLanguageInput" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamedEntity">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.NamedEntity NamedEntity (string text = default, string category = default, string subcategory = default, int offset = 0, int length = 0, double confidenceScore = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.NamedEntity NamedEntity(string text, string category, string subcategory, int32 offset, int32 length, float64 confidenceScore) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.NamedEntity(System.String,System.String,System.String,System.Int32,System.Int32,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NamedEntity (Optional text As String = Nothing, Optional category As String = Nothing, Optional subcategory As String = Nothing, Optional offset As Integer = 0, Optional length As Integer = 0, Optional confidenceScore As Double = 0) As NamedEntity" />
      <MemberSignature Language="F#" Value="static member NamedEntity : string * string * string * int * int * double -&gt; Azure.AI.Language.Text.NamedEntity" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.NamedEntity (text, category, subcategory, offset, length, confidenceScore)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.NamedEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="subcategory" Type="System.String" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="confidenceScore" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="text"> Entity text as appears in the request. </param>
        <param name="category"> Entity type. </param>
        <param name="subcategory"> (Optional) Entity sub type. </param>
        <param name="offset"> Start position for the entity text. Use of different 'stringIndexType' values can affect the offset returned. </param>
        <param name="length"> Length for the entity text. Use of different 'stringIndexType' values can affect the length returned. </param>
        <param name="confidenceScore"> Confidence score between 0 and 1 of the extracted entity. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.NamedEntity" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.NamedEntity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamedEntityWithMetadata">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.NamedEntityWithMetadata NamedEntityWithMetadata (string text = default, string category = default, string subcategory = default, int offset = 0, int length = 0, double confidenceScore = 0, string type = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.EntityTag&gt; tags = default, Azure.AI.Language.Text.BaseMetadata metadata = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.NamedEntityWithMetadata NamedEntityWithMetadata(string text, string category, string subcategory, int32 offset, int32 length, float64 confidenceScore, string type, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.EntityTag&gt; tags, class Azure.AI.Language.Text.BaseMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.NamedEntityWithMetadata(System.String,System.String,System.String,System.Int32,System.Int32,System.Double,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.EntityTag},Azure.AI.Language.Text.BaseMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NamedEntityWithMetadata (Optional text As String = Nothing, Optional category As String = Nothing, Optional subcategory As String = Nothing, Optional offset As Integer = 0, Optional length As Integer = 0, Optional confidenceScore As Double = 0, Optional type As String = Nothing, Optional tags As IEnumerable(Of EntityTag) = Nothing, Optional metadata As BaseMetadata = Nothing) As NamedEntityWithMetadata" />
      <MemberSignature Language="F#" Value="static member NamedEntityWithMetadata : string * string * string * int * int * double * string * seq&lt;Azure.AI.Language.Text.EntityTag&gt; * Azure.AI.Language.Text.BaseMetadata -&gt; Azure.AI.Language.Text.NamedEntityWithMetadata" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.NamedEntityWithMetadata (text, category, subcategory, offset, length, confidenceScore, type, tags, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.NamedEntityWithMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="subcategory" Type="System.String" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="confidenceScore" Type="System.Double" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.EntityTag&gt;" />
        <Parameter Name="metadata" Type="Azure.AI.Language.Text.BaseMetadata" />
      </Parameters>
      <Docs>
        <param name="text"> Entity text as appears in the request. </param>
        <param name="category"> Entity type. </param>
        <param name="subcategory"> (Optional) Entity sub type. </param>
        <param name="offset"> Start position for the entity text. Use of different 'stringIndexType' values can affect the offset returned. </param>
        <param name="length"> Length for the entity text. Use of different 'stringIndexType' values can affect the length returned. </param>
        <param name="confidenceScore"> Confidence score between 0 and 1 of the extracted entity. </param>
        <param name="type"> An entity type is the lowest (or finest) granularity at which the entity has been detected. The type maps to the specific metadata attributes associated with the entity detected. </param>
        <param name="tags"> List of entity tags. Tags are to express some similarities/affinity between entities. </param>
        <param name="metadata">
            The entity metadata object.
            Please note <see cref="T:Azure.AI.Language.Text.BaseMetadata" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.AI.Language.Text.AgeMetadata" />, <see cref="T:Azure.AI.Language.Text.AreaMetadata" />, <see cref="T:Azure.AI.Language.Text.CurrencyMetadata" />, <see cref="T:Azure.AI.Language.Text.DateMetadata" />, <see cref="T:Azure.AI.Language.Text.DateTimeMetadata" />, <see cref="T:Azure.AI.Language.Text.InformationMetadata" />, <see cref="T:Azure.AI.Language.Text.LengthMetadata" />, <see cref="T:Azure.AI.Language.Text.NumberMetadata" />, <see cref="T:Azure.AI.Language.Text.NumericRangeMetadata" />, <see cref="T:Azure.AI.Language.Text.OrdinalMetadata" />, <see cref="T:Azure.AI.Language.Text.SpeedMetadata" />, <see cref="T:Azure.AI.Language.Text.TemperatureMetadata" />, <see cref="T:Azure.AI.Language.Text.TemporalSetMetadata" />, <see cref="T:Azure.AI.Language.Text.TemporalSpanMetadata" />, <see cref="T:Azure.AI.Language.Text.TimeMetadata" />, <see cref="T:Azure.AI.Language.Text.VolumeMetadata" /> and <see cref="T:Azure.AI.Language.Text.WeightMetadata" />.
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.NamedEntityWithMetadata" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.NamedEntityWithMetadata" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberMetadata">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.NumberMetadata NumberMetadata (Azure.AI.Language.Text.NumberKind numberKind = default, double value = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.NumberMetadata NumberMetadata(valuetype Azure.AI.Language.Text.NumberKind numberKind, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.NumberMetadata(Azure.AI.Language.Text.NumberKind,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NumberMetadata (Optional numberKind As NumberKind = Nothing, Optional value As Double = 0) As NumberMetadata" />
      <MemberSignature Language="F#" Value="static member NumberMetadata : Azure.AI.Language.Text.NumberKind * double -&gt; Azure.AI.Language.Text.NumberMetadata" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.NumberMetadata (numberKind, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.NumberMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberKind" Type="Azure.AI.Language.Text.NumberKind" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="numberKind"> Kind of the number type. </param>
        <param name="value"> A numeric representation of what the extracted text denotes. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.NumberMetadata" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.NumberMetadata" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumericRangeMetadata">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.NumericRangeMetadata NumericRangeMetadata (Azure.AI.Language.Text.RangeKind rangeKind = default, double minimum = 0, double maximum = 0, Azure.AI.Language.Text.RangeInclusivity? rangeInclusivity = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.NumericRangeMetadata NumericRangeMetadata(valuetype Azure.AI.Language.Text.RangeKind rangeKind, float64 minimum, float64 maximum, valuetype System.Nullable`1&lt;valuetype Azure.AI.Language.Text.RangeInclusivity&gt; rangeInclusivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.NumericRangeMetadata(Azure.AI.Language.Text.RangeKind,System.Double,System.Double,System.Nullable{Azure.AI.Language.Text.RangeInclusivity})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NumericRangeMetadata (Optional rangeKind As RangeKind = Nothing, Optional minimum As Double = 0, Optional maximum As Double = 0, Optional rangeInclusivity As Nullable(Of RangeInclusivity) = Nothing) As NumericRangeMetadata" />
      <MemberSignature Language="F#" Value="static member NumericRangeMetadata : Azure.AI.Language.Text.RangeKind * double * double * Nullable&lt;Azure.AI.Language.Text.RangeInclusivity&gt; -&gt; Azure.AI.Language.Text.NumericRangeMetadata" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.NumericRangeMetadata (rangeKind, minimum, maximum, rangeInclusivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.NumericRangeMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rangeKind" Type="Azure.AI.Language.Text.RangeKind" />
        <Parameter Name="minimum" Type="System.Double" />
        <Parameter Name="maximum" Type="System.Double" />
        <Parameter Name="rangeInclusivity" Type="System.Nullable&lt;Azure.AI.Language.Text.RangeInclusivity&gt;" />
      </Parameters>
      <Docs>
        <param name="rangeKind"> Kind of numeric ranges supported - like Number, Speed, etc. </param>
        <param name="minimum"> The beginning value of  the interval. </param>
        <param name="maximum"> The ending value of the interval. </param>
        <param name="rangeInclusivity"> The inclusiveness of this range. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.NumericRangeMetadata" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.NumericRangeMetadata" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrdinalMetadata">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.OrdinalMetadata OrdinalMetadata (string offset = default, Azure.AI.Language.Text.RelativeTo relativeTo = default, string value = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.OrdinalMetadata OrdinalMetadata(string offset, valuetype Azure.AI.Language.Text.RelativeTo relativeTo, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.OrdinalMetadata(System.String,Azure.AI.Language.Text.RelativeTo,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrdinalMetadata (Optional offset As String = Nothing, Optional relativeTo As RelativeTo = Nothing, Optional value As String = Nothing) As OrdinalMetadata" />
      <MemberSignature Language="F#" Value="static member OrdinalMetadata : string * Azure.AI.Language.Text.RelativeTo * string -&gt; Azure.AI.Language.Text.OrdinalMetadata" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.OrdinalMetadata (offset, relativeTo, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.OrdinalMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.String" />
        <Parameter Name="relativeTo" Type="Azure.AI.Language.Text.RelativeTo" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="offset"> The offset with respect to the reference (e.g., offset = -1 indicates the second to last). </param>
        <param name="relativeTo"> The reference point that the ordinal number denotes. </param>
        <param name="value"> A simple arithmetic expression that the ordinal denotes. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.OrdinalMetadata" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.OrdinalMetadata" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PiiActionResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.PiiActionResult PiiActionResult (string id = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentWarning&gt; warnings = default, Azure.AI.Language.Text.DocumentStatistics statistics = default, string redactedText = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.PiiEntity&gt; entities = default, Azure.AI.Language.Text.DetectedLanguage detectedLanguage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.PiiActionResult PiiActionResult(string id, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DocumentWarning&gt; warnings, class Azure.AI.Language.Text.DocumentStatistics statistics, string redactedText, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.PiiEntity&gt; entities, class Azure.AI.Language.Text.DetectedLanguage detectedLanguage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.PiiActionResult(System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DocumentWarning},Azure.AI.Language.Text.DocumentStatistics,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.PiiEntity},Azure.AI.Language.Text.DetectedLanguage)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PiiActionResult (Optional id As String = Nothing, Optional warnings As IEnumerable(Of DocumentWarning) = Nothing, Optional statistics As DocumentStatistics = Nothing, Optional redactedText As String = Nothing, Optional entities As IEnumerable(Of PiiEntity) = Nothing, Optional detectedLanguage As DetectedLanguage = Nothing) As PiiActionResult" />
      <MemberSignature Language="F#" Value="static member PiiActionResult : string * seq&lt;Azure.AI.Language.Text.DocumentWarning&gt; * Azure.AI.Language.Text.DocumentStatistics * string * seq&lt;Azure.AI.Language.Text.PiiEntity&gt; * Azure.AI.Language.Text.DetectedLanguage -&gt; Azure.AI.Language.Text.PiiActionResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.PiiActionResult (id, warnings, statistics, redactedText, entities, detectedLanguage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.PiiActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="warnings" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentWarning&gt;" />
        <Parameter Name="statistics" Type="Azure.AI.Language.Text.DocumentStatistics" />
        <Parameter Name="redactedText" Type="System.String" />
        <Parameter Name="entities" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.PiiEntity&gt;" />
        <Parameter Name="detectedLanguage" Type="Azure.AI.Language.Text.DetectedLanguage" />
      </Parameters>
      <Docs>
        <param name="id"> Unique, non-empty document identifier. </param>
        <param name="warnings"> Warnings encountered while processing document. </param>
        <param name="statistics"> if showStats=true was specified in the request this field will contain information about the document payload. </param>
        <param name="redactedText"> Returns redacted text. </param>
        <param name="entities"> Recognized entities in the document. </param>
        <param name="detectedLanguage"> If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.PiiActionResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.PiiActionResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PiiEntity">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.PiiEntity PiiEntity (string text = default, string category = default, string subcategory = default, int offset = 0, int length = 0, double confidenceScore = 0, string type = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.EntityTag&gt; tags = default, string mask = default, int? maskOffset = default, int? maskLength = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.PiiEntity PiiEntity(string text, string category, string subcategory, int32 offset, int32 length, float64 confidenceScore, string type, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.EntityTag&gt; tags, string mask, valuetype System.Nullable`1&lt;int32&gt; maskOffset, valuetype System.Nullable`1&lt;int32&gt; maskLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.PiiEntity(System.String,System.String,System.String,System.Int32,System.Int32,System.Double,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.EntityTag},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PiiEntity (Optional text As String = Nothing, Optional category As String = Nothing, Optional subcategory As String = Nothing, Optional offset As Integer = 0, Optional length As Integer = 0, Optional confidenceScore As Double = 0, Optional type As String = Nothing, Optional tags As IEnumerable(Of EntityTag) = Nothing, Optional mask As String = Nothing, Optional maskOffset As Nullable(Of Integer) = Nothing, Optional maskLength As Nullable(Of Integer) = Nothing) As PiiEntity" />
      <MemberSignature Language="F#" Value="static member PiiEntity : string * string * string * int * int * double * string * seq&lt;Azure.AI.Language.Text.EntityTag&gt; * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; -&gt; Azure.AI.Language.Text.PiiEntity" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.PiiEntity (text, category, subcategory, offset, length, confidenceScore, type, tags, mask, maskOffset, maskLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.PiiEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="subcategory" Type="System.String" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="confidenceScore" Type="System.Double" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.EntityTag&gt;" />
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="maskOffset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="maskLength" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="text"> Entity text as appears in the request. </param>
        <param name="category"> Entity type. </param>
        <param name="subcategory"> (Optional) Entity sub type. </param>
        <param name="offset"> Start position for the entity text. Use of different 'stringIndexType' values can affect the offset returned. </param>
        <param name="length"> Length for the entity text. Use of different 'stringIndexType' values can affect the length returned. </param>
        <param name="confidenceScore"> Confidence score between 0 and 1 of the extracted entity. </param>
        <param name="type"> An entity type is the lowest (or finest) granularity at which the entity has been detected. The type maps to the specific metadata attributes associated with the entity detected. </param>
        <param name="tags"> List of entity tags. Tags are to express some similarities/affinity between entities. </param>
        <param name="mask"> Optional field which will be returned only when using the redaction policy kind “MaskWithEntityType”.  This field will contain the exact mask text used to mask the PII entity in the original text. </param>
        <param name="maskOffset"> Start position of masked text in the redacted text when using the redaction policy kind “MaskWithEntityType”. </param>
        <param name="maskLength"> The length of the masked text. Will be present when using the redaction policy kind “MaskWithEntityType”. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.PiiEntity" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.PiiEntity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PiiEntityRecognitionOperationResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.PiiEntityRecognitionOperationResult PiiEntityRecognitionOperationResult (DateTimeOffset lastUpdateDateTime = default, Azure.AI.Language.Text.TextActionState status = default, string name = default, Azure.AI.Language.Text.PiiResult results = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.PiiEntityRecognitionOperationResult PiiEntityRecognitionOperationResult(valuetype System.DateTimeOffset lastUpdateDateTime, valuetype Azure.AI.Language.Text.TextActionState status, string name, class Azure.AI.Language.Text.PiiResult results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.PiiEntityRecognitionOperationResult(System.DateTimeOffset,Azure.AI.Language.Text.TextActionState,System.String,Azure.AI.Language.Text.PiiResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PiiEntityRecognitionOperationResult (Optional lastUpdateDateTime As DateTimeOffset = Nothing, Optional status As TextActionState = Nothing, Optional name As String = Nothing, Optional results As PiiResult = Nothing) As PiiEntityRecognitionOperationResult" />
      <MemberSignature Language="F#" Value="static member PiiEntityRecognitionOperationResult : DateTimeOffset * Azure.AI.Language.Text.TextActionState * string * Azure.AI.Language.Text.PiiResult -&gt; Azure.AI.Language.Text.PiiEntityRecognitionOperationResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.PiiEntityRecognitionOperationResult (lastUpdateDateTime, status, name, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.PiiEntityRecognitionOperationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastUpdateDateTime" Type="System.DateTimeOffset" />
        <Parameter Name="status" Type="Azure.AI.Language.Text.TextActionState" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="results" Type="Azure.AI.Language.Text.PiiResult" />
      </Parameters>
      <Docs>
        <param name="lastUpdateDateTime"> The last updated time in UTC for the task. </param>
        <param name="status"> The status of the task at the mentioned last update time. </param>
        <param name="name"> task name. </param>
        <param name="results"> The list of pii results. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.PiiEntityRecognitionOperationResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.PiiEntityRecognitionOperationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PiiResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.PiiResult PiiResult (System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentError&gt; errors = default, Azure.AI.Language.Text.RequestStatistics statistics = default, string modelVersion = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.PiiActionResult&gt; documents = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.PiiResult PiiResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DocumentError&gt; errors, class Azure.AI.Language.Text.RequestStatistics statistics, string modelVersion, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.PiiActionResult&gt; documents) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.PiiResult(System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DocumentError},Azure.AI.Language.Text.RequestStatistics,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.PiiActionResult})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PiiResult (Optional errors As IEnumerable(Of DocumentError) = Nothing, Optional statistics As RequestStatistics = Nothing, Optional modelVersion As String = Nothing, Optional documents As IEnumerable(Of PiiActionResult) = Nothing) As PiiResult" />
      <MemberSignature Language="F#" Value="static member PiiResult : seq&lt;Azure.AI.Language.Text.DocumentError&gt; * Azure.AI.Language.Text.RequestStatistics * string * seq&lt;Azure.AI.Language.Text.PiiActionResult&gt; -&gt; Azure.AI.Language.Text.PiiResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.PiiResult (errors, statistics, modelVersion, documents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.PiiResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errors" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentError&gt;" />
        <Parameter Name="statistics" Type="Azure.AI.Language.Text.RequestStatistics" />
        <Parameter Name="modelVersion" Type="System.String" />
        <Parameter Name="documents" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.PiiActionResult&gt;" />
      </Parameters>
      <Docs>
        <param name="errors"> Errors by document id. </param>
        <param name="statistics"> if showStats=true was specified in the request this field will contain information about the request payload. </param>
        <param name="modelVersion"> This field indicates which model is used for scoring. </param>
        <param name="documents"> Response by document. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.PiiResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.PiiResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestStatistics">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.RequestStatistics RequestStatistics (int documentsCount = 0, int validDocumentsCount = 0, int erroneousDocumentsCount = 0, long transactionsCount = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.RequestStatistics RequestStatistics(int32 documentsCount, int32 validDocumentsCount, int32 erroneousDocumentsCount, int64 transactionsCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.RequestStatistics(System.Int32,System.Int32,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RequestStatistics (Optional documentsCount As Integer = 0, Optional validDocumentsCount As Integer = 0, Optional erroneousDocumentsCount As Integer = 0, Optional transactionsCount As Long = 0) As RequestStatistics" />
      <MemberSignature Language="F#" Value="static member RequestStatistics : int * int * int * int64 -&gt; Azure.AI.Language.Text.RequestStatistics" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.RequestStatistics (documentsCount, validDocumentsCount, erroneousDocumentsCount, transactionsCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.RequestStatistics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentsCount" Type="System.Int32" />
        <Parameter Name="validDocumentsCount" Type="System.Int32" />
        <Parameter Name="erroneousDocumentsCount" Type="System.Int32" />
        <Parameter Name="transactionsCount" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="documentsCount"> Number of documents submitted in the request. </param>
        <param name="validDocumentsCount"> Number of valid documents. This excludes empty, over-size limit or non-supported languages documents. </param>
        <param name="erroneousDocumentsCount"> Number of invalid documents. This includes empty, over-size limit or non-supported languages documents. </param>
        <param name="transactionsCount"> Number of transactions for the request. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.RequestStatistics" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.RequestStatistics" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SentenceAssessment">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.SentenceAssessment SentenceAssessment (Azure.AI.Language.Text.TokenSentiment sentiment = Azure.AI.Language.Text.TokenSentiment.Positive, Azure.AI.Language.Text.TargetConfidenceScoreLabel confidenceScores = default, int offset = 0, int length = 0, string text = default, bool isNegated = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.SentenceAssessment SentenceAssessment(valuetype Azure.AI.Language.Text.TokenSentiment sentiment, class Azure.AI.Language.Text.TargetConfidenceScoreLabel confidenceScores, int32 offset, int32 length, string text, bool isNegated) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.SentenceAssessment(Azure.AI.Language.Text.TokenSentiment,Azure.AI.Language.Text.TargetConfidenceScoreLabel,System.Int32,System.Int32,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SentenceAssessment (Optional sentiment As TokenSentiment = Azure.AI.Language.Text.TokenSentiment.Positive, Optional confidenceScores As TargetConfidenceScoreLabel = Nothing, Optional offset As Integer = 0, Optional length As Integer = 0, Optional text As String = Nothing, Optional isNegated As Boolean = false) As SentenceAssessment" />
      <MemberSignature Language="F#" Value="static member SentenceAssessment : Azure.AI.Language.Text.TokenSentiment * Azure.AI.Language.Text.TargetConfidenceScoreLabel * int * int * string * bool -&gt; Azure.AI.Language.Text.SentenceAssessment" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.SentenceAssessment (sentiment, confidenceScores, offset, length, text, isNegated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.SentenceAssessment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sentiment" Type="Azure.AI.Language.Text.TokenSentiment" />
        <Parameter Name="confidenceScores" Type="Azure.AI.Language.Text.TargetConfidenceScoreLabel" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="isNegated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sentiment"> The sentiment of the sentence. </param>
        <param name="confidenceScores"> Represents the confidence scores across all sentiment classes: positive and negative. </param>
        <param name="offset"> The target offset from the start of the sentence. </param>
        <param name="length"> The length of the target. </param>
        <param name="text"> The target text detected. </param>
        <param name="isNegated"> The indicator representing if the assessment is negated. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.SentenceAssessment" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.SentenceAssessment" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SentenceSentiment">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.SentenceSentiment SentenceSentiment (string text = default, Azure.AI.Language.Text.SentenceSentimentValue sentiment = Azure.AI.Language.Text.SentenceSentimentValue.Positive, Azure.AI.Language.Text.SentimentConfidenceScores confidenceScores = default, int offset = 0, int length = 0, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.SentenceTarget&gt; targets = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.SentenceAssessment&gt; assessments = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.SentenceSentiment SentenceSentiment(string text, valuetype Azure.AI.Language.Text.SentenceSentimentValue sentiment, class Azure.AI.Language.Text.SentimentConfidenceScores confidenceScores, int32 offset, int32 length, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.SentenceTarget&gt; targets, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.SentenceAssessment&gt; assessments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.SentenceSentiment(System.String,Azure.AI.Language.Text.SentenceSentimentValue,Azure.AI.Language.Text.SentimentConfidenceScores,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.SentenceTarget},System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.SentenceAssessment})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SentenceSentiment (Optional text As String = Nothing, Optional sentiment As SentenceSentimentValue = Azure.AI.Language.Text.SentenceSentimentValue.Positive, Optional confidenceScores As SentimentConfidenceScores = Nothing, Optional offset As Integer = 0, Optional length As Integer = 0, Optional targets As IEnumerable(Of SentenceTarget) = Nothing, Optional assessments As IEnumerable(Of SentenceAssessment) = Nothing) As SentenceSentiment" />
      <MemberSignature Language="F#" Value="static member SentenceSentiment : string * Azure.AI.Language.Text.SentenceSentimentValue * Azure.AI.Language.Text.SentimentConfidenceScores * int * int * seq&lt;Azure.AI.Language.Text.SentenceTarget&gt; * seq&lt;Azure.AI.Language.Text.SentenceAssessment&gt; -&gt; Azure.AI.Language.Text.SentenceSentiment" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.SentenceSentiment (text, sentiment, confidenceScores, offset, length, targets, assessments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.SentenceSentiment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="sentiment" Type="Azure.AI.Language.Text.SentenceSentimentValue" />
        <Parameter Name="confidenceScores" Type="Azure.AI.Language.Text.SentimentConfidenceScores" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="targets" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.SentenceTarget&gt;" />
        <Parameter Name="assessments" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.SentenceAssessment&gt;" />
      </Parameters>
      <Docs>
        <param name="text"> The sentence text. </param>
        <param name="sentiment"> The predicted Sentiment for the sentence. </param>
        <param name="confidenceScores"> The sentiment confidence score between 0 and 1 for the sentence for all classes. </param>
        <param name="offset"> The target offset from the start of the sentence. </param>
        <param name="length"> The length of the target. </param>
        <param name="targets"> The array of sentence targets for the sentence. </param>
        <param name="assessments"> The array of assessments for the sentence. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.SentenceSentiment" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.SentenceSentiment" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SentenceTarget">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.SentenceTarget SentenceTarget (Azure.AI.Language.Text.TokenSentiment sentiment = Azure.AI.Language.Text.TokenSentiment.Positive, Azure.AI.Language.Text.TargetConfidenceScoreLabel confidenceScores = default, int offset = 0, int length = 0, string text = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.TargetRelation&gt; relations = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.SentenceTarget SentenceTarget(valuetype Azure.AI.Language.Text.TokenSentiment sentiment, class Azure.AI.Language.Text.TargetConfidenceScoreLabel confidenceScores, int32 offset, int32 length, string text, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.TargetRelation&gt; relations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.SentenceTarget(Azure.AI.Language.Text.TokenSentiment,Azure.AI.Language.Text.TargetConfidenceScoreLabel,System.Int32,System.Int32,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.TargetRelation})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SentenceTarget (Optional sentiment As TokenSentiment = Azure.AI.Language.Text.TokenSentiment.Positive, Optional confidenceScores As TargetConfidenceScoreLabel = Nothing, Optional offset As Integer = 0, Optional length As Integer = 0, Optional text As String = Nothing, Optional relations As IEnumerable(Of TargetRelation) = Nothing) As SentenceTarget" />
      <MemberSignature Language="F#" Value="static member SentenceTarget : Azure.AI.Language.Text.TokenSentiment * Azure.AI.Language.Text.TargetConfidenceScoreLabel * int * int * string * seq&lt;Azure.AI.Language.Text.TargetRelation&gt; -&gt; Azure.AI.Language.Text.SentenceTarget" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.SentenceTarget (sentiment, confidenceScores, offset, length, text, relations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.SentenceTarget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sentiment" Type="Azure.AI.Language.Text.TokenSentiment" />
        <Parameter Name="confidenceScores" Type="Azure.AI.Language.Text.TargetConfidenceScoreLabel" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="relations" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.TargetRelation&gt;" />
      </Parameters>
      <Docs>
        <param name="sentiment"> The sentiment of the sentence. </param>
        <param name="confidenceScores"> Represents the confidence scores across all sentiment classes: positive and negative. </param>
        <param name="offset"> The target offset from the start of the sentence. </param>
        <param name="length"> The length of the target. </param>
        <param name="text"> The target text detected. </param>
        <param name="relations"> The array of either assessment or target objects which is related to the target. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.SentenceTarget" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.SentenceTarget" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SentimentActionResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.SentimentActionResult SentimentActionResult (string id = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentWarning&gt; warnings = default, Azure.AI.Language.Text.DocumentStatistics statistics = default, Azure.AI.Language.Text.DocumentSentiment sentiment = Azure.AI.Language.Text.DocumentSentiment.Positive, Azure.AI.Language.Text.SentimentConfidenceScores confidenceScores = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.SentenceSentiment&gt; sentences = default, Azure.AI.Language.Text.DetectedLanguage detectedLanguage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.SentimentActionResult SentimentActionResult(string id, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DocumentWarning&gt; warnings, class Azure.AI.Language.Text.DocumentStatistics statistics, valuetype Azure.AI.Language.Text.DocumentSentiment sentiment, class Azure.AI.Language.Text.SentimentConfidenceScores confidenceScores, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.SentenceSentiment&gt; sentences, class Azure.AI.Language.Text.DetectedLanguage detectedLanguage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.SentimentActionResult(System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DocumentWarning},Azure.AI.Language.Text.DocumentStatistics,Azure.AI.Language.Text.DocumentSentiment,Azure.AI.Language.Text.SentimentConfidenceScores,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.SentenceSentiment},Azure.AI.Language.Text.DetectedLanguage)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SentimentActionResult (Optional id As String = Nothing, Optional warnings As IEnumerable(Of DocumentWarning) = Nothing, Optional statistics As DocumentStatistics = Nothing, Optional sentiment As DocumentSentiment = Azure.AI.Language.Text.DocumentSentiment.Positive, Optional confidenceScores As SentimentConfidenceScores = Nothing, Optional sentences As IEnumerable(Of SentenceSentiment) = Nothing, Optional detectedLanguage As DetectedLanguage = Nothing) As SentimentActionResult" />
      <MemberSignature Language="F#" Value="static member SentimentActionResult : string * seq&lt;Azure.AI.Language.Text.DocumentWarning&gt; * Azure.AI.Language.Text.DocumentStatistics * Azure.AI.Language.Text.DocumentSentiment * Azure.AI.Language.Text.SentimentConfidenceScores * seq&lt;Azure.AI.Language.Text.SentenceSentiment&gt; * Azure.AI.Language.Text.DetectedLanguage -&gt; Azure.AI.Language.Text.SentimentActionResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.SentimentActionResult (id, warnings, statistics, sentiment, confidenceScores, sentences, detectedLanguage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.SentimentActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="warnings" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentWarning&gt;" />
        <Parameter Name="statistics" Type="Azure.AI.Language.Text.DocumentStatistics" />
        <Parameter Name="sentiment" Type="Azure.AI.Language.Text.DocumentSentiment" />
        <Parameter Name="confidenceScores" Type="Azure.AI.Language.Text.SentimentConfidenceScores" />
        <Parameter Name="sentences" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.SentenceSentiment&gt;" />
        <Parameter Name="detectedLanguage" Type="Azure.AI.Language.Text.DetectedLanguage" />
      </Parameters>
      <Docs>
        <param name="id"> Unique, non-empty document identifier. </param>
        <param name="warnings"> Warnings encountered while processing document. </param>
        <param name="statistics"> if showStats=true was specified in the request this field will contain information about the document payload. </param>
        <param name="sentiment"> Predicted sentiment for document (Negative, Neutral, Positive, or Mixed). </param>
        <param name="confidenceScores"> The sentiment confidence score between 0 and 1 for the sentence for all classes. </param>
        <param name="sentences"> The document's sentences sentiment. </param>
        <param name="detectedLanguage"> If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.SentimentActionResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.SentimentActionResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SentimentConfidenceScores">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.SentimentConfidenceScores SentimentConfidenceScores (double positive = 0, double neutral = 0, double negative = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.SentimentConfidenceScores SentimentConfidenceScores(float64 positive, float64 neutral, float64 negative) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.SentimentConfidenceScores(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SentimentConfidenceScores (Optional positive As Double = 0, Optional neutral As Double = 0, Optional negative As Double = 0) As SentimentConfidenceScores" />
      <MemberSignature Language="F#" Value="static member SentimentConfidenceScores : double * double * double -&gt; Azure.AI.Language.Text.SentimentConfidenceScores" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.SentimentConfidenceScores (positive, neutral, negative)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.SentimentConfidenceScores</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="positive" Type="System.Double" />
        <Parameter Name="neutral" Type="System.Double" />
        <Parameter Name="negative" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="positive"> Confidence score for positive sentiment. </param>
        <param name="neutral"> Confidence score for neutral sentiment. </param>
        <param name="negative"> Confidence score for negative sentiment. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.SentimentConfidenceScores" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.SentimentConfidenceScores" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SentimentOperationResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.SentimentOperationResult SentimentOperationResult (DateTimeOffset lastUpdateDateTime = default, Azure.AI.Language.Text.TextActionState status = default, string name = default, Azure.AI.Language.Text.SentimentResult results = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.SentimentOperationResult SentimentOperationResult(valuetype System.DateTimeOffset lastUpdateDateTime, valuetype Azure.AI.Language.Text.TextActionState status, string name, class Azure.AI.Language.Text.SentimentResult results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.SentimentOperationResult(System.DateTimeOffset,Azure.AI.Language.Text.TextActionState,System.String,Azure.AI.Language.Text.SentimentResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SentimentOperationResult (Optional lastUpdateDateTime As DateTimeOffset = Nothing, Optional status As TextActionState = Nothing, Optional name As String = Nothing, Optional results As SentimentResult = Nothing) As SentimentOperationResult" />
      <MemberSignature Language="F#" Value="static member SentimentOperationResult : DateTimeOffset * Azure.AI.Language.Text.TextActionState * string * Azure.AI.Language.Text.SentimentResult -&gt; Azure.AI.Language.Text.SentimentOperationResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.SentimentOperationResult (lastUpdateDateTime, status, name, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.SentimentOperationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastUpdateDateTime" Type="System.DateTimeOffset" />
        <Parameter Name="status" Type="Azure.AI.Language.Text.TextActionState" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="results" Type="Azure.AI.Language.Text.SentimentResult" />
      </Parameters>
      <Docs>
        <param name="lastUpdateDateTime"> The last updated time in UTC for the task. </param>
        <param name="status"> The status of the task at the mentioned last update time. </param>
        <param name="name"> task name. </param>
        <param name="results"> The sentiment analysis results. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.SentimentOperationResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.SentimentOperationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SentimentResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.SentimentResult SentimentResult (System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentError&gt; errors = default, Azure.AI.Language.Text.RequestStatistics statistics = default, string modelVersion = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.SentimentActionResult&gt; documents = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.SentimentResult SentimentResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DocumentError&gt; errors, class Azure.AI.Language.Text.RequestStatistics statistics, string modelVersion, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.SentimentActionResult&gt; documents) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.SentimentResult(System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DocumentError},Azure.AI.Language.Text.RequestStatistics,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.SentimentActionResult})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SentimentResult (Optional errors As IEnumerable(Of DocumentError) = Nothing, Optional statistics As RequestStatistics = Nothing, Optional modelVersion As String = Nothing, Optional documents As IEnumerable(Of SentimentActionResult) = Nothing) As SentimentResult" />
      <MemberSignature Language="F#" Value="static member SentimentResult : seq&lt;Azure.AI.Language.Text.DocumentError&gt; * Azure.AI.Language.Text.RequestStatistics * string * seq&lt;Azure.AI.Language.Text.SentimentActionResult&gt; -&gt; Azure.AI.Language.Text.SentimentResult" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.SentimentResult (errors, statistics, modelVersion, documents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.SentimentResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errors" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DocumentError&gt;" />
        <Parameter Name="statistics" Type="Azure.AI.Language.Text.RequestStatistics" />
        <Parameter Name="modelVersion" Type="System.String" />
        <Parameter Name="documents" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.SentimentActionResult&gt;" />
      </Parameters>
      <Docs>
        <param name="errors"> Errors by document id. </param>
        <param name="statistics"> if showStats=true was specified in the request this field will contain information about the request payload. </param>
        <param name="modelVersion"> This field indicates which model is used for scoring. </param>
        <param name="documents"> The sentiment analysis results for each document in the input. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.SentimentResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.SentimentResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeedMetadata">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.SpeedMetadata SpeedMetadata (double value = 0, Azure.AI.Language.Text.SpeedUnit unit = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.SpeedMetadata SpeedMetadata(float64 value, valuetype Azure.AI.Language.Text.SpeedUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.SpeedMetadata(System.Double,Azure.AI.Language.Text.SpeedUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SpeedMetadata (Optional value As Double = 0, Optional unit As SpeedUnit = Nothing) As SpeedMetadata" />
      <MemberSignature Language="F#" Value="static member SpeedMetadata : double * Azure.AI.Language.Text.SpeedUnit -&gt; Azure.AI.Language.Text.SpeedMetadata" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.SpeedMetadata (value, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.SpeedMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="unit" Type="Azure.AI.Language.Text.SpeedUnit" />
      </Parameters>
      <Docs>
        <param name="value"> The numeric value that the extracted text denotes. </param>
        <param name="unit"> Unit of measure for speed. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.SpeedMetadata" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.SpeedMetadata" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SummaryContext">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.SummaryContext SummaryContext (int offset = 0, int length = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.SummaryContext SummaryContext(int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.SummaryContext(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SummaryContext (Optional offset As Integer = 0, Optional length As Integer = 0) As SummaryContext" />
      <MemberSignature Language="F#" Value="static member SummaryContext : int * int -&gt; Azure.AI.Language.Text.SummaryContext" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.SummaryContext (offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.SummaryContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset"> Start position for the context. Use of different 'stringIndexType' values can affect the offset returned. </param>
        <param name="length"> The length of the context. Use of different 'stringIndexType' values can affect the length returned. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.SummaryContext" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.SummaryContext" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetConfidenceScoreLabel">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.TargetConfidenceScoreLabel TargetConfidenceScoreLabel (double positive = 0, double negative = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.TargetConfidenceScoreLabel TargetConfidenceScoreLabel(float64 positive, float64 negative) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.TargetConfidenceScoreLabel(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TargetConfidenceScoreLabel (Optional positive As Double = 0, Optional negative As Double = 0) As TargetConfidenceScoreLabel" />
      <MemberSignature Language="F#" Value="static member TargetConfidenceScoreLabel : double * double -&gt; Azure.AI.Language.Text.TargetConfidenceScoreLabel" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.TargetConfidenceScoreLabel (positive, negative)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.TargetConfidenceScoreLabel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="positive" Type="System.Double" />
        <Parameter Name="negative" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="positive"> Confidence score for positive sentiment. </param>
        <param name="negative"> Confidence score for negative sentiment. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.TargetConfidenceScoreLabel" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.TargetConfidenceScoreLabel" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetRelation">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.TargetRelation TargetRelation (string ref = default, Azure.AI.Language.Text.TargetRelationType relationType = Azure.AI.Language.Text.TargetRelationType.Assessment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.TargetRelation TargetRelation(string ref, valuetype Azure.AI.Language.Text.TargetRelationType relationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.TargetRelation(System.String,Azure.AI.Language.Text.TargetRelationType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TargetRelation (Optional ref As String = Nothing, Optional relationType As TargetRelationType = Azure.AI.Language.Text.TargetRelationType.Assessment) As TargetRelation" />
      <MemberSignature Language="F#" Value="static member TargetRelation : string * Azure.AI.Language.Text.TargetRelationType -&gt; Azure.AI.Language.Text.TargetRelation" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.TargetRelation (ref, relationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.TargetRelation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ref" Type="System.String" />
        <Parameter Name="relationType" Type="Azure.AI.Language.Text.TargetRelationType" />
      </Parameters>
      <Docs>
        <param name="ref"> The JSON pointer indicating the linked object. </param>
        <param name="relationType"> The type related to the target. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.TargetRelation" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.TargetRelation" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemperatureMetadata">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.TemperatureMetadata TemperatureMetadata (double value = 0, Azure.AI.Language.Text.TemperatureUnit unit = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.TemperatureMetadata TemperatureMetadata(float64 value, valuetype Azure.AI.Language.Text.TemperatureUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.TemperatureMetadata(System.Double,Azure.AI.Language.Text.TemperatureUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TemperatureMetadata (Optional value As Double = 0, Optional unit As TemperatureUnit = Nothing) As TemperatureMetadata" />
      <MemberSignature Language="F#" Value="static member TemperatureMetadata : double * Azure.AI.Language.Text.TemperatureUnit -&gt; Azure.AI.Language.Text.TemperatureMetadata" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.TemperatureMetadata (value, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.TemperatureMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="unit" Type="Azure.AI.Language.Text.TemperatureUnit" />
      </Parameters>
      <Docs>
        <param name="value"> The numeric value that the extracted text denotes. </param>
        <param name="unit"> Unit of measure for temperature. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.TemperatureMetadata" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.TemperatureMetadata" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemporalSetMetadata">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.TemporalSetMetadata TemporalSetMetadata (System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DateValue&gt; dates = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.TemporalSetMetadata TemporalSetMetadata(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DateValue&gt; dates) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.TemporalSetMetadata(System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DateValue})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TemporalSetMetadata (Optional dates As IEnumerable(Of DateValue) = Nothing) As TemporalSetMetadata" />
      <MemberSignature Language="F#" Value="static member TemporalSetMetadata : seq&lt;Azure.AI.Language.Text.DateValue&gt; -&gt; Azure.AI.Language.Text.TemporalSetMetadata" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.TemporalSetMetadata dates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.TemporalSetMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dates" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DateValue&gt;" />
      </Parameters>
      <Docs>
        <param name="dates"> List of date values. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.TemporalSetMetadata" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.TemporalSetMetadata" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemporalSpanMetadata">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.TemporalSpanMetadata TemporalSpanMetadata (System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.TemporalSpanValues&gt; spanValues = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.TemporalSpanMetadata TemporalSpanMetadata(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.TemporalSpanValues&gt; spanValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.TemporalSpanMetadata(System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.TemporalSpanValues})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TemporalSpanMetadata (Optional spanValues As IEnumerable(Of TemporalSpanValues) = Nothing) As TemporalSpanMetadata" />
      <MemberSignature Language="F#" Value="static member TemporalSpanMetadata : seq&lt;Azure.AI.Language.Text.TemporalSpanValues&gt; -&gt; Azure.AI.Language.Text.TemporalSpanMetadata" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.TemporalSpanMetadata spanValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.TemporalSpanMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spanValues" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.TemporalSpanValues&gt;" />
      </Parameters>
      <Docs>
        <param name="spanValues"> List of temporal spans detected. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.TemporalSpanMetadata" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.TemporalSpanMetadata" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemporalSpanValues">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.TemporalSpanValues TemporalSpanValues (string begin = default, string end = default, string duration = default, Azure.AI.Language.Text.TemporalModifier? modifier = default, string timex = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.TemporalSpanValues TemporalSpanValues(string begin, string end, string duration, valuetype System.Nullable`1&lt;valuetype Azure.AI.Language.Text.TemporalModifier&gt; modifier, string timex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.TemporalSpanValues(System.String,System.String,System.String,System.Nullable{Azure.AI.Language.Text.TemporalModifier},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TemporalSpanValues (Optional begin As String = Nothing, Optional end As String = Nothing, Optional duration As String = Nothing, Optional modifier As Nullable(Of TemporalModifier) = Nothing, Optional timex As String = Nothing) As TemporalSpanValues" />
      <MemberSignature Language="F#" Value="static member TemporalSpanValues : string * string * string * Nullable&lt;Azure.AI.Language.Text.TemporalModifier&gt; * string -&gt; Azure.AI.Language.Text.TemporalSpanValues" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.TemporalSpanValues (begin, end, duration, modifier, timex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.TemporalSpanValues</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="begin" Type="System.String" />
        <Parameter Name="end" Type="System.String" />
        <Parameter Name="duration" Type="System.String" />
        <Parameter Name="modifier" Type="System.Nullable&lt;Azure.AI.Language.Text.TemporalModifier&gt;" />
        <Parameter Name="timex" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="begin"> Start value for the span. </param>
        <param name="end"> End value for the span. </param>
        <param name="duration"> An optional duration value formatted based on the ISO 8601 (https://en.wikipedia.org/wiki/ISO_8601#Durations). </param>
        <param name="modifier"> Modifier for datetime to indicate point of reference like before, after etc. </param>
        <param name="timex"> An optional triplet containing the beginning, the end, and the duration all stated as ISO 8601 formatted strings. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.TemporalSpanValues" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.TemporalSpanValues" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextActions">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.TextActions TextActions (int completed = 0, int failed = 0, int inProgress = 0, int total = 0, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.AnalyzeTextOperationResult&gt; items = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.TextActions TextActions(int32 completed, int32 failed, int32 inProgress, int32 total, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.AnalyzeTextOperationResult&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.TextActions(System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.AnalyzeTextOperationResult})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TextActions (Optional completed As Integer = 0, Optional failed As Integer = 0, Optional inProgress As Integer = 0, Optional total As Integer = 0, Optional items As IEnumerable(Of AnalyzeTextOperationResult) = Nothing) As TextActions" />
      <MemberSignature Language="F#" Value="static member TextActions : int * int * int * int * seq&lt;Azure.AI.Language.Text.AnalyzeTextOperationResult&gt; -&gt; Azure.AI.Language.Text.TextActions" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.TextActions (completed, failed, inProgress, total, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.TextActions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completed" Type="System.Int32" />
        <Parameter Name="failed" Type="System.Int32" />
        <Parameter Name="inProgress" Type="System.Int32" />
        <Parameter Name="total" Type="System.Int32" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.AnalyzeTextOperationResult&gt;" />
      </Parameters>
      <Docs>
        <param name="completed"> Count of completed tasks. </param>
        <param name="failed"> Count of failed tasks. </param>
        <param name="inProgress"> Count of inprogress tasks. </param>
        <param name="total"> Count of total tasks. </param>
        <param name="items">
            Enumerable of Analyze text job results.
            Please note <see cref="T:Azure.AI.Language.Text.AnalyzeTextOperationResult" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.AI.Language.Text.AbstractiveSummarizationOperationResult" />, <see cref="T:Azure.AI.Language.Text.CustomEntityRecognitionOperationResult" />, <see cref="T:Azure.AI.Language.Text.CustomMultiLabelClassificationOperationResult" />, <see cref="T:Azure.AI.Language.Text.CustomSingleLabelClassificationOperationResult" />, <see cref="T:Azure.AI.Language.Text.EntityLinkingOperationResult" />, <see cref="T:Azure.AI.Language.Text.EntityRecognitionOperationResult" />, <see cref="T:Azure.AI.Language.Text.ExtractiveSummarizationOperationResult" />, <see cref="T:Azure.AI.Language.Text.HealthcareOperationResult" />, <see cref="T:Azure.AI.Language.Text.KeyPhraseExtractionOperationResult" />, <see cref="T:Azure.AI.Language.Text.PiiEntityRecognitionOperationResult" /> and <see cref="T:Azure.AI.Language.Text.SentimentOperationResult" />.
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.TextActions" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.TextActions" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeMetadata">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.TimeMetadata TimeMetadata (System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DateValue&gt; dates = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.TimeMetadata TimeMetadata(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Text.DateValue&gt; dates) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.TimeMetadata(System.Collections.Generic.IEnumerable{Azure.AI.Language.Text.DateValue})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TimeMetadata (Optional dates As IEnumerable(Of DateValue) = Nothing) As TimeMetadata" />
      <MemberSignature Language="F#" Value="static member TimeMetadata : seq&lt;Azure.AI.Language.Text.DateValue&gt; -&gt; Azure.AI.Language.Text.TimeMetadata" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.TimeMetadata dates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.TimeMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dates" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Text.DateValue&gt;" />
      </Parameters>
      <Docs>
        <param name="dates"> List of date values. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.TimeMetadata" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.TimeMetadata" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VolumeMetadata">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.VolumeMetadata VolumeMetadata (double value = 0, Azure.AI.Language.Text.VolumeUnit unit = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.VolumeMetadata VolumeMetadata(float64 value, valuetype Azure.AI.Language.Text.VolumeUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.VolumeMetadata(System.Double,Azure.AI.Language.Text.VolumeUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolumeMetadata (Optional value As Double = 0, Optional unit As VolumeUnit = Nothing) As VolumeMetadata" />
      <MemberSignature Language="F#" Value="static member VolumeMetadata : double * Azure.AI.Language.Text.VolumeUnit -&gt; Azure.AI.Language.Text.VolumeMetadata" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.VolumeMetadata (value, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.VolumeMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="unit" Type="Azure.AI.Language.Text.VolumeUnit" />
      </Parameters>
      <Docs>
        <param name="value"> The numeric value that the extracted text denotes. </param>
        <param name="unit"> Unit of measure for volume. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.VolumeMetadata" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.VolumeMetadata" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeightMetadata">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Text.WeightMetadata WeightMetadata (double value = 0, Azure.AI.Language.Text.WeightUnit unit = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Text.WeightMetadata WeightMetadata(float64 value, valuetype Azure.AI.Language.Text.WeightUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.TextAnalysisModelFactory.WeightMetadata(System.Double,Azure.AI.Language.Text.WeightUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WeightMetadata (Optional value As Double = 0, Optional unit As WeightUnit = Nothing) As WeightMetadata" />
      <MemberSignature Language="F#" Value="static member WeightMetadata : double * Azure.AI.Language.Text.WeightUnit -&gt; Azure.AI.Language.Text.WeightMetadata" Usage="Azure.AI.Language.Text.TextAnalysisModelFactory.WeightMetadata (value, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.WeightMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="unit" Type="Azure.AI.Language.Text.WeightUnit" />
      </Parameters>
      <Docs>
        <param name="value"> The numeric value that the extracted text denotes. </param>
        <param name="unit"> Unit of measure for weight. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.WeightMetadata" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Text.WeightMetadata" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
