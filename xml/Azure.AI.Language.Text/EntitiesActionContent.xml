<Type Name="EntitiesActionContent" FullName="Azure.AI.Language.Text.EntitiesActionContent">
  <TypeSignature Language="C#" Value="public class EntitiesActionContent : System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntitiesActionContent extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.AI.Language.Text.EntitiesActionContent&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.AI.Language.Text.EntitiesActionContent&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.Language.Text.EntitiesActionContent" />
  <TypeSignature Language="VB.NET" Value="Public Class EntitiesActionContent&#xA;Implements IJsonModel(Of EntitiesActionContent), IPersistableModel(Of EntitiesActionContent)" />
  <TypeSignature Language="F#" Value="type EntitiesActionContent = class&#xA;    interface IJsonModel&lt;EntitiesActionContent&gt;&#xA;    interface IPersistableModel&lt;EntitiesActionContent&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.Language.Text</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Supported parameters for an Entity Recognition task. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntitiesActionContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.EntitiesActionContent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Text.EntitiesActionContent" />. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exclusions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.AI.Language.Text.EntityCategory&gt; Exclusions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Azure.AI.Language.Text.EntityCategory&gt; Exclusions" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.Text.EntitiesActionContent.Exclusions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exclusions As IList(Of EntityCategory)" />
      <MemberSignature Language="F#" Value="member this.Exclusions : System.Collections.Generic.IList&lt;Azure.AI.Language.Text.EntityCategory&gt;" Usage="Azure.AI.Language.Text.EntitiesActionContent.Exclusions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.AI.Language.Text.EntityCategory&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> (Optional) request parameter that filters out any entities that are included the excludeList. When a user specifies an excludeList, they cannot get a prediction returned with an entity in that list. We will apply inclusionList before exclusionList. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inclusions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.AI.Language.Text.EntityCategory&gt; Inclusions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Azure.AI.Language.Text.EntityCategory&gt; Inclusions" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.Text.EntitiesActionContent.Inclusions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Inclusions As IList(Of EntityCategory)" />
      <MemberSignature Language="F#" Value="member this.Inclusions : System.Collections.Generic.IList&lt;Azure.AI.Language.Text.EntityCategory&gt;" Usage="Azure.AI.Language.Text.EntitiesActionContent.Inclusions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.AI.Language.Text.EntityCategory&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> (Optional) request parameter that limits the output to the requested entity types included in this list. We will apply inclusionList before exclusionList. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InferenceOptions">
      <MemberSignature Language="C#" Value="public Azure.AI.Language.Text.EntityInferenceConfig InferenceOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.Language.Text.EntityInferenceConfig InferenceOptions" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.Text.EntitiesActionContent.InferenceOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property InferenceOptions As EntityInferenceConfig" />
      <MemberSignature Language="F#" Value="member this.InferenceOptions : Azure.AI.Language.Text.EntityInferenceConfig with get, set" Usage="Azure.AI.Language.Text.EntitiesActionContent.InferenceOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.EntityInferenceConfig</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> (Optional) request parameter that allows the user to provide settings for running the inference. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JsonModelWriteCore">
      <MemberSignature Language="C#" Value="protected virtual void JsonModelWriteCore (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void JsonModelWriteCore(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.EntitiesActionContent.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub JsonModelWriteCore (writer As Utf8JsonWriter, options As ModelReaderWriterOptions)" />
      <MemberSignature Language="F#" Value="abstract member JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="entitiesActionContent.JsonModelWriteCore (writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer"> The JSON writer. </param>
        <param name="options"> The client options for reading and writing models. </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoggingOptOut">
      <MemberSignature Language="C#" Value="public bool? LoggingOptOut { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; LoggingOptOut" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.Text.EntitiesActionContent.LoggingOptOut" />
      <MemberSignature Language="VB.NET" Value="Public Property LoggingOptOut As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.LoggingOptOut : Nullable&lt;bool&gt; with get, set" Usage="Azure.AI.Language.Text.EntitiesActionContent.LoggingOptOut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> logging opt out. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelVersion">
      <MemberSignature Language="C#" Value="public string ModelVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ModelVersion" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.Text.EntitiesActionContent.ModelVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property ModelVersion As String" />
      <MemberSignature Language="F#" Value="member this.ModelVersion : string with get, set" Usage="Azure.AI.Language.Text.EntitiesActionContent.ModelVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> model version. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OverlapPolicy">
      <MemberSignature Language="C#" Value="public Azure.AI.Language.Text.EntityOverlapPolicy OverlapPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.Language.Text.EntityOverlapPolicy OverlapPolicy" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.Text.EntitiesActionContent.OverlapPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property OverlapPolicy As EntityOverlapPolicy" />
      <MemberSignature Language="F#" Value="member this.OverlapPolicy : Azure.AI.Language.Text.EntityOverlapPolicy with get, set" Usage="Azure.AI.Language.Text.EntitiesActionContent.OverlapPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.EntityOverlapPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            (Optional) describes the type of overlap policy to apply to the ner output.
            Please note <see cref="T:Azure.AI.Language.Text.EntityOverlapPolicy" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.AI.Language.Text.AllowOverlapEntityPolicyType" /> and <see cref="T:Azure.AI.Language.Text.MatchLongestEntityPolicyType" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringIndexType">
      <MemberSignature Language="C#" Value="public Azure.AI.Language.Text.StringIndexType? StringIndexType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.AI.Language.Text.StringIndexType&gt; StringIndexType" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.Text.EntitiesActionContent.StringIndexType" />
      <MemberSignature Language="VB.NET" Value="Public Property StringIndexType As Nullable(Of StringIndexType)" />
      <MemberSignature Language="F#" Value="member this.StringIndexType : Nullable&lt;Azure.AI.Language.Text.StringIndexType&gt; with get, set" Usage="Azure.AI.Language.Text.EntitiesActionContent.StringIndexType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.AI.Language.Text.StringIndexType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> (Optional) parameter to provide the string index type used to interpret string offsets. Defaults to TextElements (Graphemes). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.Language.Text.EntitiesActionContent IJsonModel&lt;EntitiesActionContent&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.Language.Text.EntitiesActionContent System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.EntitiesActionContent.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#Language#Text#EntitiesActionContent&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As EntitiesActionContent Implements IJsonModel(Of EntitiesActionContent).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Language.Text.EntitiesActionContent&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Language.Text.EntitiesActionContent" Usage="entitiesActionContent.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.EntitiesActionContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;EntitiesActionContent&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.EntitiesActionContent.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#Language#Text#EntitiesActionContent&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of EntitiesActionContent).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="entitiesActionContent.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.Language.Text.EntitiesActionContent IPersistableModel&lt;EntitiesActionContent&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.Language.Text.EntitiesActionContent System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.EntitiesActionContent.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Language#Text#EntitiesActionContent&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As EntitiesActionContent Implements IPersistableModel(Of EntitiesActionContent).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Language.Text.EntitiesActionContent&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Language.Text.EntitiesActionContent" Usage="entitiesActionContent.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Text.EntitiesActionContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;EntitiesActionContent&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.EntitiesActionContent.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Language#Text#EntitiesActionContent&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of EntitiesActionContent).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="entitiesActionContent.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;EntitiesActionContent&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Text.EntitiesActionContent.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Language#Text#EntitiesActionContent&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of EntitiesActionContent).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="entitiesActionContent.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Text.EntitiesActionContent&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
