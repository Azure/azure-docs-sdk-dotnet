<Type Name="TransferManager" FullName="Azure.Storage.DataMovement.TransferManager">
  <TypeSignature Language="C#" Value="public class TransferManager : IAsyncDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TransferManager extends System.Object implements class System.IAsyncDisposable" />
  <TypeSignature Language="DocId" Value="T:Azure.Storage.DataMovement.TransferManager" />
  <TypeSignature Language="VB.NET" Value="Public Class TransferManager&#xA;Implements IAsyncDisposable" />
  <TypeSignature Language="F#" Value="type TransferManager = class&#xA;    interface IAsyncDisposable" />
  <AssemblyInfo>
    <AssemblyName>Azure.Storage.DataMovement</AssemblyName>
    <AssemblyVersion>12.0.0.0</AssemblyVersion>
    <AssemblyVersion>12.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            The main class for starting and controlling all types of transfers.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TransferManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.DataMovement.TransferManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.DataMovement</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Protected constructor for mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransferManager (Azure.Storage.DataMovement.TransferManagerOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Storage.DataMovement.TransferManagerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.DataMovement.TransferManager.#ctor(Azure.Storage.DataMovement.TransferManagerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional options As TransferManagerOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.DataMovement.TransferManager : Azure.Storage.DataMovement.TransferManagerOptions -&gt; Azure.Storage.DataMovement.TransferManager" Usage="new Azure.Storage.DataMovement.TransferManager options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.DataMovement</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="Azure.Storage.DataMovement.TransferManagerOptions" />
      </Parameters>
      <Docs>
        <param name="options">Options that will apply to all transfers started by this TransferManager.</param>
        <summary>
            Constructor to create a TransferManager.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResumableTransfersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IAsyncEnumerable&lt;Azure.Storage.DataMovement.DataTransferProperties&gt; GetResumableTransfersAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerable`1&lt;class Azure.Storage.DataMovement.DataTransferProperties&gt; GetResumableTransfersAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.DataMovement.TransferManager.GetResumableTransfersAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResumableTransfersAsync () As IAsyncEnumerable(Of DataTransferProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetResumableTransfersAsync : unit -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.Storage.DataMovement.DataTransferProperties&gt;&#xA;override this.GetResumableTransfersAsync : unit -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.Storage.DataMovement.DataTransferProperties&gt;" Usage="transferManager.GetResumableTransfersAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.DataMovement</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Azure.Storage.DataMovement.TransferManager+&lt;GetResumableTransfersAsync&gt;d__19))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Azure.Storage.DataMovement.TransferManager+&lt;GetResumableTransfersAsync&gt;d__19))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;Azure.Storage.DataMovement.DataTransferProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Lists all the transfers stored in the checkpointer that can be resumed.
            </summary>
        <returns>
            List of <see cref="T:Azure.Storage.DataMovement.DataTransferProperties" /> objects that can be used to rebuild resources
            to resume with.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResumableTransfersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IAsyncEnumerable&lt;Azure.Storage.DataMovement.TransferProperties&gt; GetResumableTransfersAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerable`1&lt;class Azure.Storage.DataMovement.TransferProperties&gt; GetResumableTransfersAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.DataMovement.TransferManager.GetResumableTransfersAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResumableTransfersAsync (Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of TransferProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetResumableTransfersAsync : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.Storage.DataMovement.TransferProperties&gt;&#xA;override this.GetResumableTransfersAsync : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.Storage.DataMovement.TransferProperties&gt;" Usage="transferManager.GetResumableTransfersAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.DataMovement</AssemblyName>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Azure.Storage.DataMovement.TransferManager+&lt;GetResumableTransfersAsync&gt;d__19))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Azure.Storage.DataMovement.TransferManager+&lt;GetResumableTransfersAsync&gt;d__19))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;Azure.Storage.DataMovement.TransferProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.EnumeratorCancellation]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.EnumeratorCancellation&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            Lists all the transfers stored in the checkpointer that can be resumed.
            </summary>
        <returns>
            List of <see cref="T:Azure.Storage.DataMovement.TransferProperties" /> objects that can be used to rebuild resources
            to resume with.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransfersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IAsyncEnumerable&lt;Azure.Storage.DataMovement.DataTransfer&gt; GetTransfersAsync (params Azure.Storage.DataMovement.DataTransferStatus[] filterByStatus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerable`1&lt;class Azure.Storage.DataMovement.DataTransfer&gt; GetTransfersAsync(class Azure.Storage.DataMovement.DataTransferStatus[] filterByStatus) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.DataMovement.TransferManager.GetTransfersAsync(Azure.Storage.DataMovement.DataTransferStatus[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTransfersAsync (ParamArray filterByStatus As DataTransferStatus()) As IAsyncEnumerable(Of DataTransfer)" />
      <MemberSignature Language="F#" Value="abstract member GetTransfersAsync : Azure.Storage.DataMovement.DataTransferStatus[] -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.Storage.DataMovement.DataTransfer&gt;&#xA;override this.GetTransfersAsync : Azure.Storage.DataMovement.DataTransferStatus[] -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.Storage.DataMovement.DataTransfer&gt;" Usage="transferManager.GetTransfersAsync filterByStatus" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.DataMovement</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Azure.Storage.DataMovement.TransferManager+&lt;GetTransfersAsync&gt;d__18))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Azure.Storage.DataMovement.TransferManager+&lt;GetTransfersAsync&gt;d__18))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;Azure.Storage.DataMovement.DataTransfer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterByStatus" Type="Azure.Storage.DataMovement.DataTransferStatus[]" Index="0" FrameworkAlternate="azure-dotnet-preview">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="filterByStatus">
             If specified, the returned list of transfers will have only have the transfers
             of which match the status specified.
            
             If not specified or specified to <see cref="F:Azure.Storage.DataMovement.DataTransferState.None" />,
             all transfers will be returned regardless of status.
             </param>
        <summary>
             Gets the current transfers stored in the <see cref="T:Azure.Storage.DataMovement.TransferManager" />.
             </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransfersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IAsyncEnumerable&lt;Azure.Storage.DataMovement.TransferOperation&gt; GetTransfersAsync (System.Collections.Generic.ICollection&lt;Azure.Storage.DataMovement.TransferStatus&gt; filterByStatus = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerable`1&lt;class Azure.Storage.DataMovement.TransferOperation&gt; GetTransfersAsync(class System.Collections.Generic.ICollection`1&lt;class Azure.Storage.DataMovement.TransferStatus&gt; filterByStatus, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.DataMovement.TransferManager.GetTransfersAsync(System.Collections.Generic.ICollection{Azure.Storage.DataMovement.TransferStatus},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTransfersAsync (Optional filterByStatus As ICollection(Of TransferStatus) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of TransferOperation)" />
      <MemberSignature Language="F#" Value="abstract member GetTransfersAsync : System.Collections.Generic.ICollection&lt;Azure.Storage.DataMovement.TransferStatus&gt; * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.Storage.DataMovement.TransferOperation&gt;&#xA;override this.GetTransfersAsync : System.Collections.Generic.ICollection&lt;Azure.Storage.DataMovement.TransferStatus&gt; * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.Storage.DataMovement.TransferOperation&gt;" Usage="transferManager.GetTransfersAsync (filterByStatus, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.DataMovement</AssemblyName>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Azure.Storage.DataMovement.TransferManager+&lt;GetTransfersAsync&gt;d__18))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Azure.Storage.DataMovement.TransferManager+&lt;GetTransfersAsync&gt;d__18))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;Azure.Storage.DataMovement.TransferOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterByStatus" Type="System.Collections.Generic.ICollection&lt;Azure.Storage.DataMovement.TransferStatus&gt;" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.EnumeratorCancellation]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.EnumeratorCancellation&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="filterByStatus">
             If specified, the returned list of transfers will have only have the transfers
             of which match the status specified.
            
             If not specified or specified to <see cref="F:Azure.Storage.DataMovement.TransferState.None" />,
             all transfers will be returned regardless of status.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             Gets the current transfers stored in the <see cref="T:Azure.Storage.DataMovement.TransferManager" />.
             </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PauseTransferAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task PauseTransferAsync (string transferId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task PauseTransferAsync(string transferId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.DataMovement.TransferManager.PauseTransferAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PauseTransferAsync (transferId As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member PauseTransferAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.PauseTransferAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="transferManager.PauseTransferAsync (transferId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.DataMovement</AssemblyName>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transferId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="transferId">The id of the transfer to pause.</param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be canceled.
            </param>
        <summary>
            Attempts to pause the transfer of the respective id.
            </summary>
        <returns>
            Return true once the transfer has been successfully paused or false if the transfer
            was already completed.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PauseTransferIfRunningAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task PauseTransferIfRunningAsync (string transferId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task PauseTransferIfRunningAsync(string transferId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.DataMovement.TransferManager.PauseTransferIfRunningAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PauseTransferIfRunningAsync (transferId As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member PauseTransferIfRunningAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.PauseTransferIfRunningAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="transferManager.PauseTransferIfRunningAsync (transferId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.DataMovement</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transferId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="transferId">The id of the transfer to pause.</param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be canceled.
            </param>
        <summary>
            Attempts to pause the transfer of the respective id.
            </summary>
        <returns>
            Return true once the transfer has been successfully paused or false if the transfer
            was already completed.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeAllTransfersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Azure.Storage.DataMovement.DataTransfer&gt;&gt; ResumeAllTransfersAsync (Azure.Storage.DataMovement.DataTransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Azure.Storage.DataMovement.DataTransfer&gt;&gt; ResumeAllTransfersAsync(class Azure.Storage.DataMovement.DataTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.DataMovement.TransferManager.ResumeAllTransfersAsync(Azure.Storage.DataMovement.DataTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResumeAllTransfersAsync (Optional transferOptions As DataTransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of DataTransfer))" />
      <MemberSignature Language="F#" Value="abstract member ResumeAllTransfersAsync : Azure.Storage.DataMovement.DataTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Azure.Storage.DataMovement.DataTransfer&gt;&gt;&#xA;override this.ResumeAllTransfersAsync : Azure.Storage.DataMovement.DataTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Azure.Storage.DataMovement.DataTransfer&gt;&gt;" Usage="transferManager.ResumeAllTransfersAsync (transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.DataMovement</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Azure.Storage.DataMovement.DataTransfer&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transferOptions" Type="Azure.Storage.DataMovement.DataTransferOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="transferOptions">
            Options to apply to each resumed transfer.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            Resumes all the transfers stored in the checkpointer that can be resumed.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeAllTransfersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Azure.Storage.DataMovement.TransferOperation&gt;&gt; ResumeAllTransfersAsync (Azure.Storage.DataMovement.TransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Azure.Storage.DataMovement.TransferOperation&gt;&gt; ResumeAllTransfersAsync(class Azure.Storage.DataMovement.TransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.DataMovement.TransferManager.ResumeAllTransfersAsync(Azure.Storage.DataMovement.TransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResumeAllTransfersAsync (Optional transferOptions As TransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of TransferOperation))" />
      <MemberSignature Language="F#" Value="abstract member ResumeAllTransfersAsync : Azure.Storage.DataMovement.TransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Azure.Storage.DataMovement.TransferOperation&gt;&gt;&#xA;override this.ResumeAllTransfersAsync : Azure.Storage.DataMovement.TransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Azure.Storage.DataMovement.TransferOperation&gt;&gt;" Usage="transferManager.ResumeAllTransfersAsync (transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.DataMovement</AssemblyName>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Azure.Storage.DataMovement.TransferOperation&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transferOptions" Type="Azure.Storage.DataMovement.TransferOptions" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="transferOptions">
            Options to apply to each resumed transfer.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            Resumes all the transfers stored in the checkpointer that can be resumed.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeTransferAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Storage.DataMovement.DataTransfer&gt; ResumeTransferAsync (string transferId, Azure.Storage.DataMovement.DataTransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Storage.DataMovement.DataTransfer&gt; ResumeTransferAsync(string transferId, class Azure.Storage.DataMovement.DataTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.DataMovement.TransferManager.ResumeTransferAsync(System.String,Azure.Storage.DataMovement.DataTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResumeTransferAsync (transferId As String, Optional transferOptions As DataTransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DataTransfer)" />
      <MemberSignature Language="F#" Value="abstract member ResumeTransferAsync : string * Azure.Storage.DataMovement.DataTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Storage.DataMovement.DataTransfer&gt;&#xA;override this.ResumeTransferAsync : string * Azure.Storage.DataMovement.DataTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Storage.DataMovement.DataTransfer&gt;" Usage="transferManager.ResumeTransferAsync (transferId, transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.DataMovement</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Storage.DataMovement.DataTransfer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transferId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="transferOptions" Type="Azure.Storage.DataMovement.DataTransferOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="transferId">The transfer ID of the transfer attempting to be resumed.</param>
        <param name="transferOptions">Options specific to this transfer.</param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            Resumes a transfer that has been paused or is in a completed state with failed or skipped transfers.
            </summary>
        <returns>Returns a <see cref="T:Azure.Storage.DataMovement.DataTransfer" /> for tracking this transfer.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeTransferAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Storage.DataMovement.TransferOperation&gt; ResumeTransferAsync (string transferId, Azure.Storage.DataMovement.TransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Storage.DataMovement.TransferOperation&gt; ResumeTransferAsync(string transferId, class Azure.Storage.DataMovement.TransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.DataMovement.TransferManager.ResumeTransferAsync(System.String,Azure.Storage.DataMovement.TransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResumeTransferAsync (transferId As String, Optional transferOptions As TransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TransferOperation)" />
      <MemberSignature Language="F#" Value="abstract member ResumeTransferAsync : string * Azure.Storage.DataMovement.TransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Storage.DataMovement.TransferOperation&gt;&#xA;override this.ResumeTransferAsync : string * Azure.Storage.DataMovement.TransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Storage.DataMovement.TransferOperation&gt;" Usage="transferManager.ResumeTransferAsync (transferId, transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.DataMovement</AssemblyName>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Storage.DataMovement.TransferOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transferId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="transferOptions" Type="Azure.Storage.DataMovement.TransferOptions" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="transferId">The transfer ID of the transfer attempting to be resumed.</param>
        <param name="transferOptions">Options specific to this transfer.</param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            Resumes a transfer that has been paused or is in a completed state with failed or skipped transfers.
            </summary>
        <returns>Returns a <see cref="T:Azure.Storage.DataMovement.TransferOperation" /> for tracking this transfer.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTransferAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Storage.DataMovement.DataTransfer&gt; StartTransferAsync (Azure.Storage.DataMovement.StorageResource sourceResource, Azure.Storage.DataMovement.StorageResource destinationResource, Azure.Storage.DataMovement.DataTransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Storage.DataMovement.DataTransfer&gt; StartTransferAsync(class Azure.Storage.DataMovement.StorageResource sourceResource, class Azure.Storage.DataMovement.StorageResource destinationResource, class Azure.Storage.DataMovement.DataTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.DataMovement.TransferManager.StartTransferAsync(Azure.Storage.DataMovement.StorageResource,Azure.Storage.DataMovement.StorageResource,Azure.Storage.DataMovement.DataTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartTransferAsync (sourceResource As StorageResource, destinationResource As StorageResource, Optional transferOptions As DataTransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DataTransfer)" />
      <MemberSignature Language="F#" Value="abstract member StartTransferAsync : Azure.Storage.DataMovement.StorageResource * Azure.Storage.DataMovement.StorageResource * Azure.Storage.DataMovement.DataTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Storage.DataMovement.DataTransfer&gt;&#xA;override this.StartTransferAsync : Azure.Storage.DataMovement.StorageResource * Azure.Storage.DataMovement.StorageResource * Azure.Storage.DataMovement.DataTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Storage.DataMovement.DataTransfer&gt;" Usage="transferManager.StartTransferAsync (sourceResource, destinationResource, transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.DataMovement</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Storage.DataMovement.DataTransfer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceResource" Type="Azure.Storage.DataMovement.StorageResource" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="destinationResource" Type="Azure.Storage.DataMovement.StorageResource" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="transferOptions" Type="Azure.Storage.DataMovement.DataTransferOptions" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="sourceResource">A <see cref="T:Azure.Storage.DataMovement.StorageResource" /> representing the source.</param>
        <param name="destinationResource">A <see cref="T:Azure.Storage.DataMovement.StorageResource" /> representing the destination.</param>
        <param name="transferOptions">Options specific to this transfer.</param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            Starts a transfer from the given source resource to the given destination resource.
            </summary>
        <returns>Returns a <see cref="T:Azure.Storage.DataMovement.DataTransfer" /> for tracking this transfer.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTransferAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Storage.DataMovement.TransferOperation&gt; StartTransferAsync (Azure.Storage.DataMovement.StorageResource sourceResource, Azure.Storage.DataMovement.StorageResource destinationResource, Azure.Storage.DataMovement.TransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Storage.DataMovement.TransferOperation&gt; StartTransferAsync(class Azure.Storage.DataMovement.StorageResource sourceResource, class Azure.Storage.DataMovement.StorageResource destinationResource, class Azure.Storage.DataMovement.TransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.DataMovement.TransferManager.StartTransferAsync(Azure.Storage.DataMovement.StorageResource,Azure.Storage.DataMovement.StorageResource,Azure.Storage.DataMovement.TransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartTransferAsync (sourceResource As StorageResource, destinationResource As StorageResource, Optional transferOptions As TransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TransferOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartTransferAsync : Azure.Storage.DataMovement.StorageResource * Azure.Storage.DataMovement.StorageResource * Azure.Storage.DataMovement.TransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Storage.DataMovement.TransferOperation&gt;&#xA;override this.StartTransferAsync : Azure.Storage.DataMovement.StorageResource * Azure.Storage.DataMovement.StorageResource * Azure.Storage.DataMovement.TransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Storage.DataMovement.TransferOperation&gt;" Usage="transferManager.StartTransferAsync (sourceResource, destinationResource, transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.DataMovement</AssemblyName>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Storage.DataMovement.TransferOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceResource" Type="Azure.Storage.DataMovement.StorageResource" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="destinationResource" Type="Azure.Storage.DataMovement.StorageResource" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="transferOptions" Type="Azure.Storage.DataMovement.TransferOptions" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="sourceResource">A <see cref="T:Azure.Storage.DataMovement.StorageResource" /> representing the source.</param>
        <param name="destinationResource">A <see cref="T:Azure.Storage.DataMovement.StorageResource" /> representing the destination.</param>
        <param name="transferOptions">Options specific to this transfer.</param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            Starts a transfer from the given source resource to the given destination resource.
            Ensure <see cref="T:Azure.Storage.DataMovement.StorageResource" /> instances are built with <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/storage/Azure.Storage.DataMovement/README.md#permissions">appropriate permissions</see>.
            </summary>
        <returns>Returns a <see cref="T:Azure.Storage.DataMovement.TransferOperation" /> for tracking this transfer.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IAsyncDisposable.DisposeAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.ValueTask IAsyncDisposable.DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask System.IAsyncDisposable.DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.DataMovement.TransferManager.System#IAsyncDisposable#DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Function DisposeAsync () As ValueTask Implements IAsyncDisposable.DisposeAsync" />
      <MemberSignature Language="F#" Value="abstract member System.IAsyncDisposable.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.System.IAsyncDisposable.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="transferManager.System.IAsyncDisposable.DisposeAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IAsyncDisposable.DisposeAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.DataMovement</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Disposes.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.ValueTask" /> of disposing the <see cref="T:Azure.Storage.DataMovement.TransferManager" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException" />
      </Docs>
    </Member>
  </Members>
</Type>
