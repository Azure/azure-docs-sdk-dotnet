<Type Name="PipelineTopology" FullName="Microsoft.Azure.Management.VideoAnalyzer.Models.PipelineTopology">
  <TypeSignature Language="C#" Value="public class PipelineTopology : Microsoft.Azure.Management.VideoAnalyzer.Models.ProxyResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PipelineTopology extends Microsoft.Azure.Management.VideoAnalyzer.Models.ProxyResource" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.VideoAnalyzer.Models.PipelineTopology" />
  <TypeSignature Language="VB.NET" Value="Public Class PipelineTopology&#xA;Inherits ProxyResource" />
  <TypeSignature Language="F#" Value="type PipelineTopology = class&#xA;    inherit ProxyResource" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.VideoAnalyzer</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Management.VideoAnalyzer.Models.ProxyResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.Rest.Serialization.JsonTransformation]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.Rest.Serialization.JsonTransformation&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
             Pipeline topology describes the processing steps to be applied when
             processing content for a particular outcome. The topology should be
             defined according to the scenario to be achieved and can be reused
             across many pipeline instances which share the same processing
             characteristics. For instance, a pipeline topology which captures
             content from a RTSP camera and archives the content can be reused
             across many different cameras, as long as the same processing is to be
             applied across all the cameras. Individual instance properties can be
             defined through the use of user-defined parameters, which allow for a
             topology to be parameterized. This allows  individual pipelines refer
             to different values, such as individual cameras' RTSP endpoints and
             credentials. Overall a topology is composed of the following:
            
             - Parameters: list of user defined parameters that can be references
             across the topology nodes.
             - Sources: list of one or more data sources nodes such as an RTSP
             source which allows for content to be ingested from cameras.
             - Processors: list of nodes which perform data analysis or
             transformations.
             - Sinks: list of one or more data sinks which allow for data to be
             stored or exported to other destinations.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PipelineTopology ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.VideoAnalyzer.Models.PipelineTopology.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.VideoAnalyzer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the PipelineTopology class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PipelineTopology (System.Collections.Generic.IList&lt;Microsoft.Azure.Management.VideoAnalyzer.Models.SourceNodeBase&gt; sources, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.VideoAnalyzer.Models.SinkNodeBase&gt; sinks, Microsoft.Azure.Management.VideoAnalyzer.Models.Kind kind, Microsoft.Azure.Management.VideoAnalyzer.Models.Sku sku, string id = default, string name = default, string type = default, Microsoft.Azure.Management.VideoAnalyzer.Models.SystemData systemData = default, string description = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.VideoAnalyzer.Models.ParameterDeclaration&gt; parameters = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.VideoAnalyzer.Models.ProcessorNodeBase&gt; processors = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.VideoAnalyzer.Models.SourceNodeBase&gt; sources, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.VideoAnalyzer.Models.SinkNodeBase&gt; sinks, valuetype Microsoft.Azure.Management.VideoAnalyzer.Models.Kind kind, class Microsoft.Azure.Management.VideoAnalyzer.Models.Sku sku, string id, string name, string type, class Microsoft.Azure.Management.VideoAnalyzer.Models.SystemData systemData, string description, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.VideoAnalyzer.Models.ParameterDeclaration&gt; parameters, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.VideoAnalyzer.Models.ProcessorNodeBase&gt; processors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.VideoAnalyzer.Models.PipelineTopology.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.VideoAnalyzer.Models.SourceNodeBase},System.Collections.Generic.IList{Microsoft.Azure.Management.VideoAnalyzer.Models.SinkNodeBase},Microsoft.Azure.Management.VideoAnalyzer.Models.Kind,Microsoft.Azure.Management.VideoAnalyzer.Models.Sku,System.String,System.String,System.String,Microsoft.Azure.Management.VideoAnalyzer.Models.SystemData,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.VideoAnalyzer.Models.ParameterDeclaration},System.Collections.Generic.IList{Microsoft.Azure.Management.VideoAnalyzer.Models.ProcessorNodeBase})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sources As IList(Of SourceNodeBase), sinks As IList(Of SinkNodeBase), kind As Kind, sku As Sku, Optional id As String = Nothing, Optional name As String = Nothing, Optional type As String = Nothing, Optional systemData As SystemData = Nothing, Optional description As String = Nothing, Optional parameters As IList(Of ParameterDeclaration) = Nothing, Optional processors As IList(Of ProcessorNodeBase) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.VideoAnalyzer.Models.PipelineTopology : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.VideoAnalyzer.Models.SourceNodeBase&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.VideoAnalyzer.Models.SinkNodeBase&gt; * Microsoft.Azure.Management.VideoAnalyzer.Models.Kind * Microsoft.Azure.Management.VideoAnalyzer.Models.Sku * string * string * string * Microsoft.Azure.Management.VideoAnalyzer.Models.SystemData * string * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.VideoAnalyzer.Models.ParameterDeclaration&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.VideoAnalyzer.Models.ProcessorNodeBase&gt; -&gt; Microsoft.Azure.Management.VideoAnalyzer.Models.PipelineTopology" Usage="new Microsoft.Azure.Management.VideoAnalyzer.Models.PipelineTopology (sources, sinks, kind, sku, id, name, type, systemData, description, parameters, processors)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.VideoAnalyzer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sources" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.VideoAnalyzer.Models.SourceNodeBase&gt;" />
        <Parameter Name="sinks" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.VideoAnalyzer.Models.SinkNodeBase&gt;" />
        <Parameter Name="kind" Type="Microsoft.Azure.Management.VideoAnalyzer.Models.Kind" />
        <Parameter Name="sku" Type="Microsoft.Azure.Management.VideoAnalyzer.Models.Sku" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="systemData" Type="Microsoft.Azure.Management.VideoAnalyzer.Models.SystemData" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.VideoAnalyzer.Models.ParameterDeclaration&gt;" />
        <Parameter Name="processors" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.VideoAnalyzer.Models.ProcessorNodeBase&gt;" />
      </Parameters>
      <Docs>
        <param name="sources">List of the topology source nodes. Source
            nodes enable external data to be ingested by the pipeline.</param>
        <param name="sinks">List of the topology sink nodes. Sink nodes
            allow pipeline data to be stored or exported.</param>
        <param name="kind">Topology kind. Possible values include: 'Live',
            'Batch'</param>
        <param name="sku">Describes the properties of a SKU.</param>
        <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        <param name="name">The name of the resource</param>
        <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
        <param name="systemData">Azure Resource Manager metadata containing
            createdBy and modifiedBy information.</param>
        <param name="description">An optional description of the pipeline
            topology. It is recommended that the expected use of the topology
            to be described here.</param>
        <param name="parameters">List of the topology parameter
            declarations. Parameters declared here can be referenced throughout
            the topology nodes through the use of "${PARAMETER_NAME}" string
            pattern. Parameters can have optional default values and can later
            be defined in individual instances of the pipeline.</param>
        <param name="processors">List of the topology processor nodes.
            Processor nodes enable pipeline data to be analyzed, processed or
            transformed.</param>
        <summary>
            Initializes a new instance of the PipelineTopology class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.VideoAnalyzer.Models.PipelineTopology.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="Microsoft.Azure.Management.VideoAnalyzer.Models.PipelineTopology.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.VideoAnalyzer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.description")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.description")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets an optional description of the pipeline topology. It
            is recommended that the expected use of the topology to be
            described here.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Kind">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.VideoAnalyzer.Models.Kind Kind { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Azure.Management.VideoAnalyzer.Models.Kind Kind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.VideoAnalyzer.Models.PipelineTopology.Kind" />
      <MemberSignature Language="VB.NET" Value="Public Property Kind As Kind" />
      <MemberSignature Language="F#" Value="member this.Kind : Microsoft.Azure.Management.VideoAnalyzer.Models.Kind with get, set" Usage="Microsoft.Azure.Management.VideoAnalyzer.Models.PipelineTopology.Kind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.VideoAnalyzer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="kind")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="kind")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.VideoAnalyzer.Models.Kind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets topology kind. Possible values include: 'Live',
            'Batch'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.VideoAnalyzer.Models.ParameterDeclaration&gt; Parameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.VideoAnalyzer.Models.ParameterDeclaration&gt; Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.VideoAnalyzer.Models.PipelineTopology.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Property Parameters As IList(Of ParameterDeclaration)" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.VideoAnalyzer.Models.ParameterDeclaration&gt; with get, set" Usage="Microsoft.Azure.Management.VideoAnalyzer.Models.PipelineTopology.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.VideoAnalyzer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.parameters")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.parameters")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.VideoAnalyzer.Models.ParameterDeclaration&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets list of the topology parameter declarations.
            Parameters declared here can be referenced throughout the topology
            nodes through the use of "${PARAMETER_NAME}" string pattern.
            Parameters can have optional default values and can later be
            defined in individual instances of the pipeline.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Processors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.VideoAnalyzer.Models.ProcessorNodeBase&gt; Processors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.VideoAnalyzer.Models.ProcessorNodeBase&gt; Processors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.VideoAnalyzer.Models.PipelineTopology.Processors" />
      <MemberSignature Language="VB.NET" Value="Public Property Processors As IList(Of ProcessorNodeBase)" />
      <MemberSignature Language="F#" Value="member this.Processors : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.VideoAnalyzer.Models.ProcessorNodeBase&gt; with get, set" Usage="Microsoft.Azure.Management.VideoAnalyzer.Models.PipelineTopology.Processors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.VideoAnalyzer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.processors")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.processors")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.VideoAnalyzer.Models.ProcessorNodeBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets list of the topology processor nodes. Processor nodes
            enable pipeline data to be analyzed, processed or transformed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sinks">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.VideoAnalyzer.Models.SinkNodeBase&gt; Sinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.VideoAnalyzer.Models.SinkNodeBase&gt; Sinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.VideoAnalyzer.Models.PipelineTopology.Sinks" />
      <MemberSignature Language="VB.NET" Value="Public Property Sinks As IList(Of SinkNodeBase)" />
      <MemberSignature Language="F#" Value="member this.Sinks : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.VideoAnalyzer.Models.SinkNodeBase&gt; with get, set" Usage="Microsoft.Azure.Management.VideoAnalyzer.Models.PipelineTopology.Sinks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.VideoAnalyzer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.sinks")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.sinks")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.VideoAnalyzer.Models.SinkNodeBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets list of the topology sink nodes. Sink nodes allow
            pipeline data to be stored or exported.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sku">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.VideoAnalyzer.Models.Sku Sku { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.VideoAnalyzer.Models.Sku Sku" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.VideoAnalyzer.Models.PipelineTopology.Sku" />
      <MemberSignature Language="VB.NET" Value="Public Property Sku As Sku" />
      <MemberSignature Language="F#" Value="member this.Sku : Microsoft.Azure.Management.VideoAnalyzer.Models.Sku with get, set" Usage="Microsoft.Azure.Management.VideoAnalyzer.Models.PipelineTopology.Sku" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.VideoAnalyzer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="sku")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="sku")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.VideoAnalyzer.Models.Sku</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets describes the properties of a SKU.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sources">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.VideoAnalyzer.Models.SourceNodeBase&gt; Sources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.VideoAnalyzer.Models.SourceNodeBase&gt; Sources" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.VideoAnalyzer.Models.PipelineTopology.Sources" />
      <MemberSignature Language="VB.NET" Value="Public Property Sources As IList(Of SourceNodeBase)" />
      <MemberSignature Language="F#" Value="member this.Sources : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.VideoAnalyzer.Models.SourceNodeBase&gt; with get, set" Usage="Microsoft.Azure.Management.VideoAnalyzer.Models.PipelineTopology.Sources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.VideoAnalyzer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.sources")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.sources")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.VideoAnalyzer.Models.SourceNodeBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets list of the topology source nodes. Source nodes enable
            external data to be ingested by the pipeline.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.VideoAnalyzer.Models.PipelineTopology.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="pipelineTopology.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.VideoAnalyzer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
