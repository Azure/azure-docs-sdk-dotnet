<Type Name="TlsEndpoint" FullName="Microsoft.Azure.Management.VideoAnalyzer.Models.TlsEndpoint">
  <TypeSignature Language="C#" Value="public class TlsEndpoint : Microsoft.Azure.Management.VideoAnalyzer.Models.EndpointBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TlsEndpoint extends Microsoft.Azure.Management.VideoAnalyzer.Models.EndpointBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.VideoAnalyzer.Models.TlsEndpoint" />
  <TypeSignature Language="VB.NET" Value="Public Class TlsEndpoint&#xA;Inherits EndpointBase" />
  <TypeSignature Language="F#" Value="type TlsEndpoint = class&#xA;    inherit EndpointBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.VideoAnalyzer</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Management.VideoAnalyzer.Models.EndpointBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Newtonsoft.Json.JsonObject("#Microsoft.VideoAnalyzer.TlsEndpoint")]</AttributeName>
      <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonObject("#Microsoft.VideoAnalyzer.TlsEndpoint")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            TLS endpoint describes an endpoint that the pipeline can connect to
            over TLS transport (data is encrypted in transit).
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TlsEndpoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.VideoAnalyzer.Models.TlsEndpoint.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.VideoAnalyzer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the TlsEndpoint class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TlsEndpoint (Microsoft.Azure.Management.VideoAnalyzer.Models.CredentialsBase credentials, string url, Microsoft.Azure.Management.VideoAnalyzer.Models.TunnelBase tunnel = default, Microsoft.Azure.Management.VideoAnalyzer.Models.CertificateSource trustedCertificates = default, Microsoft.Azure.Management.VideoAnalyzer.Models.TlsValidationOptions validationOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Azure.Management.VideoAnalyzer.Models.CredentialsBase credentials, string url, class Microsoft.Azure.Management.VideoAnalyzer.Models.TunnelBase tunnel, class Microsoft.Azure.Management.VideoAnalyzer.Models.CertificateSource trustedCertificates, class Microsoft.Azure.Management.VideoAnalyzer.Models.TlsValidationOptions validationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.VideoAnalyzer.Models.TlsEndpoint.#ctor(Microsoft.Azure.Management.VideoAnalyzer.Models.CredentialsBase,System.String,Microsoft.Azure.Management.VideoAnalyzer.Models.TunnelBase,Microsoft.Azure.Management.VideoAnalyzer.Models.CertificateSource,Microsoft.Azure.Management.VideoAnalyzer.Models.TlsValidationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (credentials As CredentialsBase, url As String, Optional tunnel As TunnelBase = Nothing, Optional trustedCertificates As CertificateSource = Nothing, Optional validationOptions As TlsValidationOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.VideoAnalyzer.Models.TlsEndpoint : Microsoft.Azure.Management.VideoAnalyzer.Models.CredentialsBase * string * Microsoft.Azure.Management.VideoAnalyzer.Models.TunnelBase * Microsoft.Azure.Management.VideoAnalyzer.Models.CertificateSource * Microsoft.Azure.Management.VideoAnalyzer.Models.TlsValidationOptions -&gt; Microsoft.Azure.Management.VideoAnalyzer.Models.TlsEndpoint" Usage="new Microsoft.Azure.Management.VideoAnalyzer.Models.TlsEndpoint (credentials, url, tunnel, trustedCertificates, validationOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.VideoAnalyzer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="credentials" Type="Microsoft.Azure.Management.VideoAnalyzer.Models.CredentialsBase" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="tunnel" Type="Microsoft.Azure.Management.VideoAnalyzer.Models.TunnelBase" />
        <Parameter Name="trustedCertificates" Type="Microsoft.Azure.Management.VideoAnalyzer.Models.CertificateSource" />
        <Parameter Name="validationOptions" Type="Microsoft.Azure.Management.VideoAnalyzer.Models.TlsValidationOptions" />
      </Parameters>
      <Docs>
        <param name="credentials">Credentials to be presented to the
            endpoint.</param>
        <param name="url">The endpoint URL for Video Analyzer to connect
            to.</param>
        <param name="tunnel">Describes the tunnel through which Video
            Analyzer can connect to the endpoint URL. This is an optional
            property, typically used when the endpoint is behind a
            firewall.</param>
        <param name="trustedCertificates">List of trusted certificate
            authorities when authenticating a TLS connection. A null list
            designates that Azure Video Analyzer's list of trusted authorities
            should be used.</param>
        <param name="validationOptions">Validation options to use when
            authenticating a TLS connection. By default, strict validation is
            used.</param>
        <summary>
            Initializes a new instance of the TlsEndpoint class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrustedCertificates">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.VideoAnalyzer.Models.CertificateSource TrustedCertificates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.VideoAnalyzer.Models.CertificateSource TrustedCertificates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.VideoAnalyzer.Models.TlsEndpoint.TrustedCertificates" />
      <MemberSignature Language="VB.NET" Value="Public Property TrustedCertificates As CertificateSource" />
      <MemberSignature Language="F#" Value="member this.TrustedCertificates : Microsoft.Azure.Management.VideoAnalyzer.Models.CertificateSource with get, set" Usage="Microsoft.Azure.Management.VideoAnalyzer.Models.TlsEndpoint.TrustedCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.VideoAnalyzer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="trustedCertificates")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="trustedCertificates")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.VideoAnalyzer.Models.CertificateSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets list of trusted certificate authorities when
            authenticating a TLS connection. A null list designates that Azure
            Video Analyzer's list of trusted authorities should be used.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.VideoAnalyzer.Models.TlsEndpoint.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate ()" />
      <MemberSignature Language="F#" Value="override this.Validate : unit -&gt; unit" Usage="tlsEndpoint.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.VideoAnalyzer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidationOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.VideoAnalyzer.Models.TlsValidationOptions ValidationOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.VideoAnalyzer.Models.TlsValidationOptions ValidationOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.VideoAnalyzer.Models.TlsEndpoint.ValidationOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationOptions As TlsValidationOptions" />
      <MemberSignature Language="F#" Value="member this.ValidationOptions : Microsoft.Azure.Management.VideoAnalyzer.Models.TlsValidationOptions with get, set" Usage="Microsoft.Azure.Management.VideoAnalyzer.Models.TlsEndpoint.ValidationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.VideoAnalyzer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="validationOptions")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="validationOptions")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.VideoAnalyzer.Models.TlsValidationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets validation options to use when authenticating a TLS
            connection. By default, strict validation is used.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
