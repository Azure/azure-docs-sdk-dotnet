<Type Name="BlobChangeFeedModelFactory" FullName="Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedModelFactory">
  <TypeSignature Language="C#" Value="public static class BlobChangeFeedModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BlobChangeFeedModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class BlobChangeFeedModelFactory" />
  <TypeSignature Language="F#" Value="type BlobChangeFeedModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Storage.Blobs.ChangeFeed</AssemblyName>
    <AssemblyVersion>12.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            BlobChangeFeedModelFactory for building mock objects.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BlobChangeFeedEvent">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedEvent BlobChangeFeedEvent (string topic, string subject, Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedEventType eventType, DateTimeOffset eventTime, Guid id, Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedEventData eventData, long dataVersion, string metadataVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedEvent BlobChangeFeedEvent(string topic, string subject, valuetype Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedEventType eventType, valuetype System.DateTimeOffset eventTime, valuetype System.Guid id, class Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedEventData eventData, int64 dataVersion, string metadataVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedModelFactory.BlobChangeFeedEvent(System.String,System.String,Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedEventType,System.DateTimeOffset,System.Guid,Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedEventData,System.Int64,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobChangeFeedEvent (topic As String, subject As String, eventType As BlobChangeFeedEventType, eventTime As DateTimeOffset, id As Guid, eventData As BlobChangeFeedEventData, dataVersion As Long, metadataVersion As String) As BlobChangeFeedEvent" />
      <MemberSignature Language="F#" Value="static member BlobChangeFeedEvent : string * string * Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedEventType * DateTimeOffset * Guid * Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedEventData * int64 * string -&gt; Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedEvent" Usage="Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedModelFactory.BlobChangeFeedEvent (topic, subject, eventType, eventTime, id, eventData, dataVersion, metadataVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs.ChangeFeed</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topic" Type="System.String" />
        <Parameter Name="subject" Type="System.String" />
        <Parameter Name="eventType" Type="Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedEventType" />
        <Parameter Name="eventTime" Type="System.DateTimeOffset" />
        <Parameter Name="id" Type="System.Guid" />
        <Parameter Name="eventData" Type="Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedEventData" />
        <Parameter Name="dataVersion" Type="System.Int64" />
        <Parameter Name="metadataVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="topic">To be added.</param>
        <param name="subject">To be added.</param>
        <param name="eventType">To be added.</param>
        <param name="eventTime">To be added.</param>
        <param name="id">To be added.</param>
        <param name="eventData">To be added.</param>
        <param name="dataVersion">To be added.</param>
        <param name="metadataVersion">To be added.</param>
        <summary>
            Creates a new BlobChangeFeedEvent instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobChangeFeedEventAsyncOperationInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.ChangeFeed.BlobOperationResult BlobChangeFeedEventAsyncOperationInfo (Azure.Storage.Blobs.Models.AccessTier? destinationAccessTier, bool wasAsyncOperation, string copyId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.ChangeFeed.BlobOperationResult BlobChangeFeedEventAsyncOperationInfo(valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.AccessTier&gt; destinationAccessTier, bool wasAsyncOperation, string copyId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedModelFactory.BlobChangeFeedEventAsyncOperationInfo(System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobChangeFeedEventAsyncOperationInfo (destinationAccessTier As Nullable(Of AccessTier), wasAsyncOperation As Boolean, copyId As String) As BlobOperationResult" />
      <MemberSignature Language="F#" Value="static member BlobChangeFeedEventAsyncOperationInfo : Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt; * bool * string -&gt; Azure.Storage.Blobs.ChangeFeed.BlobOperationResult" Usage="Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedModelFactory.BlobChangeFeedEventAsyncOperationInfo (destinationAccessTier, wasAsyncOperation, copyId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs.ChangeFeed</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.ChangeFeed.BlobOperationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationAccessTier" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt;" />
        <Parameter Name="wasAsyncOperation" Type="System.Boolean" />
        <Parameter Name="copyId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destinationAccessTier">To be added.</param>
        <param name="wasAsyncOperation">To be added.</param>
        <param name="copyId">To be added.</param>
        <summary>
            Creates a BlobChangeFeedEventAsyncOperationInfo for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobChangeFeedEventData">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedEventData BlobChangeFeedEventData (string blobOperationName, string clientRequestId, Guid requestId, Azure.ETag eTag, string contentType, long contentLength, Azure.Storage.Blobs.Models.BlobType blobType, string blobVersion, string containerVersion, Azure.Storage.Blobs.Models.AccessTier? blobAccessTier, long contentOffset, Uri destinationUri, Uri sourceUri, Uri uri, bool recursive, string sequencer, Azure.Storage.Blobs.ChangeFeed.ChangeFeedEventPreviousInfo previousInfo, string snapshot, System.Collections.Generic.Dictionary&lt;string,Azure.Storage.Blobs.ChangeFeed.BlobPropertyChange&gt; updatedBlobProperties, Azure.Storage.Blobs.ChangeFeed.BlobOperationResult asyncOperationInfo, Azure.Storage.Blobs.ChangeFeed.BlobTagsChange updatedBlobTags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedEventData BlobChangeFeedEventData(string blobOperationName, string clientRequestId, valuetype System.Guid requestId, valuetype Azure.ETag eTag, string contentType, int64 contentLength, valuetype Azure.Storage.Blobs.Models.BlobType blobType, string blobVersion, string containerVersion, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.AccessTier&gt; blobAccessTier, int64 contentOffset, class System.Uri destinationUri, class System.Uri sourceUri, class System.Uri uri, bool recursive, string sequencer, class Azure.Storage.Blobs.ChangeFeed.ChangeFeedEventPreviousInfo previousInfo, string snapshot, class System.Collections.Generic.Dictionary`2&lt;string, class Azure.Storage.Blobs.ChangeFeed.BlobPropertyChange&gt; updatedBlobProperties, class Azure.Storage.Blobs.ChangeFeed.BlobOperationResult asyncOperationInfo, class Azure.Storage.Blobs.ChangeFeed.BlobTagsChange updatedBlobTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedModelFactory.BlobChangeFeedEventData(System.String,System.String,System.Guid,Azure.ETag,System.String,System.Int64,Azure.Storage.Blobs.Models.BlobType,System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Int64,System.Uri,System.Uri,System.Uri,System.Boolean,System.String,Azure.Storage.Blobs.ChangeFeed.ChangeFeedEventPreviousInfo,System.String,System.Collections.Generic.Dictionary{System.String,Azure.Storage.Blobs.ChangeFeed.BlobPropertyChange},Azure.Storage.Blobs.ChangeFeed.BlobOperationResult,Azure.Storage.Blobs.ChangeFeed.BlobTagsChange)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobChangeFeedEventData (blobOperationName As String, clientRequestId As String, requestId As Guid, eTag As ETag, contentType As String, contentLength As Long, blobType As BlobType, blobVersion As String, containerVersion As String, blobAccessTier As Nullable(Of AccessTier), contentOffset As Long, destinationUri As Uri, sourceUri As Uri, uri As Uri, recursive As Boolean, sequencer As String, previousInfo As ChangeFeedEventPreviousInfo, snapshot As String, updatedBlobProperties As Dictionary(Of String, BlobPropertyChange), asyncOperationInfo As BlobOperationResult, updatedBlobTags As BlobTagsChange) As BlobChangeFeedEventData" />
      <MemberSignature Language="F#" Value="static member BlobChangeFeedEventData : string * string * Guid * Azure.ETag * string * int64 * Azure.Storage.Blobs.Models.BlobType * string * string * Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt; * int64 * Uri * Uri * Uri * bool * string * Azure.Storage.Blobs.ChangeFeed.ChangeFeedEventPreviousInfo * string * System.Collections.Generic.Dictionary&lt;string, Azure.Storage.Blobs.ChangeFeed.BlobPropertyChange&gt; * Azure.Storage.Blobs.ChangeFeed.BlobOperationResult * Azure.Storage.Blobs.ChangeFeed.BlobTagsChange -&gt; Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedEventData" Usage="Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedModelFactory.BlobChangeFeedEventData (blobOperationName, clientRequestId, requestId, eTag, contentType, contentLength, blobType, blobVersion, containerVersion, blobAccessTier, contentOffset, destinationUri, sourceUri, uri, recursive, sequencer, previousInfo, snapshot, updatedBlobProperties, asyncOperationInfo, updatedBlobTags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs.ChangeFeed</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedEventData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blobOperationName" Type="System.String" />
        <Parameter Name="clientRequestId" Type="System.String" />
        <Parameter Name="requestId" Type="System.Guid" />
        <Parameter Name="eTag" Type="Azure.ETag" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="contentLength" Type="System.Int64" />
        <Parameter Name="blobType" Type="Azure.Storage.Blobs.Models.BlobType" />
        <Parameter Name="blobVersion" Type="System.String" />
        <Parameter Name="containerVersion" Type="System.String" />
        <Parameter Name="blobAccessTier" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt;" />
        <Parameter Name="contentOffset" Type="System.Int64" />
        <Parameter Name="destinationUri" Type="System.Uri" />
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="recursive" Type="System.Boolean" />
        <Parameter Name="sequencer" Type="System.String" />
        <Parameter Name="previousInfo" Type="Azure.Storage.Blobs.ChangeFeed.ChangeFeedEventPreviousInfo" />
        <Parameter Name="snapshot" Type="System.String" />
        <Parameter Name="updatedBlobProperties" Type="System.Collections.Generic.Dictionary&lt;System.String,Azure.Storage.Blobs.ChangeFeed.BlobPropertyChange&gt;" />
        <Parameter Name="asyncOperationInfo" Type="Azure.Storage.Blobs.ChangeFeed.BlobOperationResult" />
        <Parameter Name="updatedBlobTags" Type="Azure.Storage.Blobs.ChangeFeed.BlobTagsChange" />
      </Parameters>
      <Docs>
        <param name="blobOperationName">To be added.</param>
        <param name="clientRequestId">To be added.</param>
        <param name="requestId">To be added.</param>
        <param name="eTag">To be added.</param>
        <param name="contentType">To be added.</param>
        <param name="contentLength">To be added.</param>
        <param name="blobType">To be added.</param>
        <param name="blobVersion">To be added.</param>
        <param name="containerVersion">To be added.</param>
        <param name="blobAccessTier">To be added.</param>
        <param name="contentOffset">To be added.</param>
        <param name="destinationUri">To be added.</param>
        <param name="sourceUri">To be added.</param>
        <param name="uri">To be added.</param>
        <param name="recursive">To be added.</param>
        <param name="sequencer">To be added.</param>
        <param name="previousInfo">To be added.</param>
        <param name="snapshot">To be added.</param>
        <param name="updatedBlobProperties">To be added.</param>
        <param name="asyncOperationInfo">To be added.</param>
        <param name="updatedBlobTags">To be added.</param>
        <summary>
            Creates a new BlobChangeFeedEventData instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobChangeFeedEventUpdatedBlobProperty">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.ChangeFeed.BlobPropertyChange BlobChangeFeedEventUpdatedBlobProperty (string propertyName, string previousValue, string newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.ChangeFeed.BlobPropertyChange BlobChangeFeedEventUpdatedBlobProperty(string propertyName, string previousValue, string newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedModelFactory.BlobChangeFeedEventUpdatedBlobProperty(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobChangeFeedEventUpdatedBlobProperty (propertyName As String, previousValue As String, newValue As String) As BlobPropertyChange" />
      <MemberSignature Language="F#" Value="static member BlobChangeFeedEventUpdatedBlobProperty : string * string * string -&gt; Azure.Storage.Blobs.ChangeFeed.BlobPropertyChange" Usage="Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedModelFactory.BlobChangeFeedEventUpdatedBlobProperty (propertyName, previousValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs.ChangeFeed</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.ChangeFeed.BlobPropertyChange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="previousValue" Type="System.String" />
        <Parameter Name="newValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="previousValue">To be added.</param>
        <param name="newValue">To be added.</param>
        <summary>
            Creates a BlobChangeFeedEventUpdatedBlobProperty for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobChangeFeedEventUpdatedBlobTags">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.ChangeFeed.BlobTagsChange BlobChangeFeedEventUpdatedBlobTags (System.Collections.Generic.Dictionary&lt;string,string&gt; previousTags, System.Collections.Generic.Dictionary&lt;string,string&gt; newTags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.ChangeFeed.BlobTagsChange BlobChangeFeedEventUpdatedBlobTags(class System.Collections.Generic.Dictionary`2&lt;string, string&gt; previousTags, class System.Collections.Generic.Dictionary`2&lt;string, string&gt; newTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedModelFactory.BlobChangeFeedEventUpdatedBlobTags(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobChangeFeedEventUpdatedBlobTags (previousTags As Dictionary(Of String, String), newTags As Dictionary(Of String, String)) As BlobTagsChange" />
      <MemberSignature Language="F#" Value="static member BlobChangeFeedEventUpdatedBlobTags : System.Collections.Generic.Dictionary&lt;string, string&gt; * System.Collections.Generic.Dictionary&lt;string, string&gt; -&gt; Azure.Storage.Blobs.ChangeFeed.BlobTagsChange" Usage="Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedModelFactory.BlobChangeFeedEventUpdatedBlobTags (previousTags, newTags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs.ChangeFeed</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.ChangeFeed.BlobTagsChange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previousTags" Type="System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="newTags" Type="System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="previousTags">To be added.</param>
        <param name="newTags">To be added.</param>
        <summary>
            Creates a BlobChangeFeedEventUpdatedBlobTags for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeFeedEventPreviousInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.ChangeFeed.ChangeFeedEventPreviousInfo ChangeFeedEventPreviousInfo (string softDeleteSnapshot, bool wasBlobSoftDeleted, string blobVersion, string lastVersion, Azure.Storage.Blobs.Models.AccessTier? previousTier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.ChangeFeed.ChangeFeedEventPreviousInfo ChangeFeedEventPreviousInfo(string softDeleteSnapshot, bool wasBlobSoftDeleted, string blobVersion, string lastVersion, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.AccessTier&gt; previousTier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedModelFactory.ChangeFeedEventPreviousInfo(System.String,System.Boolean,System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.AccessTier})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ChangeFeedEventPreviousInfo (softDeleteSnapshot As String, wasBlobSoftDeleted As Boolean, blobVersion As String, lastVersion As String, previousTier As Nullable(Of AccessTier)) As ChangeFeedEventPreviousInfo" />
      <MemberSignature Language="F#" Value="static member ChangeFeedEventPreviousInfo : string * bool * string * string * Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt; -&gt; Azure.Storage.Blobs.ChangeFeed.ChangeFeedEventPreviousInfo" Usage="Azure.Storage.Blobs.ChangeFeed.BlobChangeFeedModelFactory.ChangeFeedEventPreviousInfo (softDeleteSnapshot, wasBlobSoftDeleted, blobVersion, lastVersion, previousTier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs.ChangeFeed</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.ChangeFeed.ChangeFeedEventPreviousInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="softDeleteSnapshot" Type="System.String" />
        <Parameter Name="wasBlobSoftDeleted" Type="System.Boolean" />
        <Parameter Name="blobVersion" Type="System.String" />
        <Parameter Name="lastVersion" Type="System.String" />
        <Parameter Name="previousTier" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt;" />
      </Parameters>
      <Docs>
        <param name="softDeleteSnapshot">To be added.</param>
        <param name="wasBlobSoftDeleted">To be added.</param>
        <param name="blobVersion">To be added.</param>
        <param name="lastVersion">To be added.</param>
        <param name="previousTier">To be added.</param>
        <summary>
            Creates a ChangeFeedEventPreviousInfo for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
