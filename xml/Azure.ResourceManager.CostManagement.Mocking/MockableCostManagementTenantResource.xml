<Type Name="MockableCostManagementTenantResource" FullName="Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource">
  <TypeSignature Language="C#" Value="public class MockableCostManagementTenantResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableCostManagementTenantResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableCostManagementTenantResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableCostManagementTenantResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to TenantResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableCostManagementTenantResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ByBillingAccountIdGenerateReservationDetailsReport">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt; ByBillingAccountIdGenerateReservationDetailsReport (Azure.WaitUntil waitUntil, string billingAccountId, string startDate, string endDate, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.OperationStatus&gt; ByBillingAccountIdGenerateReservationDetailsReport(valuetype Azure.WaitUntil waitUntil, string billingAccountId, string startDate, string endDate, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.ByBillingAccountIdGenerateReservationDetailsReport(Azure.WaitUntil,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ByBillingAccountIdGenerateReservationDetailsReport (waitUntil As WaitUntil, billingAccountId As String, startDate As String, endDate As String, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of OperationStatus)" />
      <MemberSignature Language="F#" Value="abstract member ByBillingAccountIdGenerateReservationDetailsReport : Azure.WaitUntil * string * string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;&#xA;override this.ByBillingAccountIdGenerateReservationDetailsReport : Azure.WaitUntil * string * string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;" Usage="mockableCostManagementTenantResource.ByBillingAccountIdGenerateReservationDetailsReport (waitUntil, billingAccountId, startDate, endDate, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="startDate" Type="System.String" />
        <Parameter Name="endDate" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="billingAccountId"> Enrollment ID (Legacy BillingAccount ID). </param>
        <param name="startDate"> Start Date. </param>
        <param name="endDate"> End Date. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Generates the reservations details report for provided date range asynchronously based on enrollment id. The Reservation usage details can be viewed only by certain enterprise roles. For more details on the roles see, https://docs.microsoft.com/en-us/azure/cost-management-billing/manage/understand-ea-roles#usage-and-costs-access-by-role
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/generateReservationDetailsReport</description></item><item><term>Operation Id</term><description>GenerateReservationDetailsReport_ByBillingAccountId</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="billingAccountId" />, <paramref name="startDate" /> or <paramref name="endDate" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ByBillingAccountIdGenerateReservationDetailsReportAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;&gt; ByBillingAccountIdGenerateReservationDetailsReportAsync (Azure.WaitUntil waitUntil, string billingAccountId, string startDate, string endDate, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;&gt; ByBillingAccountIdGenerateReservationDetailsReportAsync(valuetype Azure.WaitUntil waitUntil, string billingAccountId, string startDate, string endDate, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.ByBillingAccountIdGenerateReservationDetailsReportAsync(Azure.WaitUntil,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ByBillingAccountIdGenerateReservationDetailsReportAsync (waitUntil As WaitUntil, billingAccountId As String, startDate As String, endDate As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of OperationStatus))" />
      <MemberSignature Language="F#" Value="abstract member ByBillingAccountIdGenerateReservationDetailsReportAsync : Azure.WaitUntil * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;&gt;&#xA;override this.ByBillingAccountIdGenerateReservationDetailsReportAsync : Azure.WaitUntil * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;&gt;" Usage="mockableCostManagementTenantResource.ByBillingAccountIdGenerateReservationDetailsReportAsync (waitUntil, billingAccountId, startDate, endDate, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="startDate" Type="System.String" />
        <Parameter Name="endDate" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="billingAccountId"> Enrollment ID (Legacy BillingAccount ID). </param>
        <param name="startDate"> Start Date. </param>
        <param name="endDate"> End Date. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Generates the reservations details report for provided date range asynchronously based on enrollment id. The Reservation usage details can be viewed only by certain enterprise roles. For more details on the roles see, https://docs.microsoft.com/en-us/azure/cost-management-billing/manage/understand-ea-roles#usage-and-costs-access-by-role
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/generateReservationDetailsReport</description></item><item><term>Operation Id</term><description>GenerateReservationDetailsReport_ByBillingAccountId</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="billingAccountId" />, <paramref name="startDate" /> or <paramref name="endDate" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ByBillingProfileIdGenerateReservationDetailsReport">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt; ByBillingProfileIdGenerateReservationDetailsReport (Azure.WaitUntil waitUntil, string billingAccountId, string billingProfileId, string startDate, string endDate, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.OperationStatus&gt; ByBillingProfileIdGenerateReservationDetailsReport(valuetype Azure.WaitUntil waitUntil, string billingAccountId, string billingProfileId, string startDate, string endDate, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.ByBillingProfileIdGenerateReservationDetailsReport(Azure.WaitUntil,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ByBillingProfileIdGenerateReservationDetailsReport (waitUntil As WaitUntil, billingAccountId As String, billingProfileId As String, startDate As String, endDate As String, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of OperationStatus)" />
      <MemberSignature Language="F#" Value="abstract member ByBillingProfileIdGenerateReservationDetailsReport : Azure.WaitUntil * string * string * string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;&#xA;override this.ByBillingProfileIdGenerateReservationDetailsReport : Azure.WaitUntil * string * string * string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;" Usage="mockableCostManagementTenantResource.ByBillingProfileIdGenerateReservationDetailsReport (waitUntil, billingAccountId, billingProfileId, startDate, endDate, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="billingProfileId" Type="System.String" />
        <Parameter Name="startDate" Type="System.String" />
        <Parameter Name="endDate" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="billingAccountId"> Billing account ID. </param>
        <param name="billingProfileId"> Billing profile ID. </param>
        <param name="startDate"> Start Date. </param>
        <param name="endDate"> End Date. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Generates the reservations details report for provided date range asynchronously by billing profile. The Reservation usage details can be viewed by only certain enterprise roles by default. For more details on the roles see, https://docs.microsoft.com/en-us/azure/cost-management-billing/reservations/reservation-utilization#view-utilization-in-the-azure-portal-with-azure-rbac-access
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.CostManagement/generateReservationDetailsReport</description></item><item><term>Operation Id</term><description>GenerateReservationDetailsReport_ByBillingProfileId</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> or <paramref name="billingProfileId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="billingAccountId" />, <paramref name="billingProfileId" />, <paramref name="startDate" /> or <paramref name="endDate" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ByBillingProfileIdGenerateReservationDetailsReportAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;&gt; ByBillingProfileIdGenerateReservationDetailsReportAsync (Azure.WaitUntil waitUntil, string billingAccountId, string billingProfileId, string startDate, string endDate, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;&gt; ByBillingProfileIdGenerateReservationDetailsReportAsync(valuetype Azure.WaitUntil waitUntil, string billingAccountId, string billingProfileId, string startDate, string endDate, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.ByBillingProfileIdGenerateReservationDetailsReportAsync(Azure.WaitUntil,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ByBillingProfileIdGenerateReservationDetailsReportAsync (waitUntil As WaitUntil, billingAccountId As String, billingProfileId As String, startDate As String, endDate As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of OperationStatus))" />
      <MemberSignature Language="F#" Value="abstract member ByBillingProfileIdGenerateReservationDetailsReportAsync : Azure.WaitUntil * string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;&gt;&#xA;override this.ByBillingProfileIdGenerateReservationDetailsReportAsync : Azure.WaitUntil * string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;&gt;" Usage="mockableCostManagementTenantResource.ByBillingProfileIdGenerateReservationDetailsReportAsync (waitUntil, billingAccountId, billingProfileId, startDate, endDate, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="billingProfileId" Type="System.String" />
        <Parameter Name="startDate" Type="System.String" />
        <Parameter Name="endDate" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="billingAccountId"> Billing account ID. </param>
        <param name="billingProfileId"> Billing profile ID. </param>
        <param name="startDate"> Start Date. </param>
        <param name="endDate"> End Date. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Generates the reservations details report for provided date range asynchronously by billing profile. The Reservation usage details can be viewed by only certain enterprise roles by default. For more details on the roles see, https://docs.microsoft.com/en-us/azure/cost-management-billing/reservations/reservation-utilization#view-utilization-in-the-azure-portal-with-azure-rbac-access
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.CostManagement/generateReservationDetailsReport</description></item><item><term>Operation Id</term><description>GenerateReservationDetailsReport_ByBillingProfileId</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> or <paramref name="billingProfileId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="billingAccountId" />, <paramref name="billingProfileId" />, <paramref name="startDate" /> or <paramref name="endDate" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ByExternalCloudProviderTypeDimensions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt; ByExternalCloudProviderTypeDimensions (Azure.ResourceManager.CostManagement.Models.TenantResourceByExternalCloudProviderTypeDimensionsOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt; ByExternalCloudProviderTypeDimensions(class Azure.ResourceManager.CostManagement.Models.TenantResourceByExternalCloudProviderTypeDimensionsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.ByExternalCloudProviderTypeDimensions(Azure.ResourceManager.CostManagement.Models.TenantResourceByExternalCloudProviderTypeDimensionsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ByExternalCloudProviderTypeDimensions (options As TenantResourceByExternalCloudProviderTypeDimensionsOptions, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of CostManagementDimension)" />
      <MemberSignature Language="F#" Value="abstract member ByExternalCloudProviderTypeDimensions : Azure.ResourceManager.CostManagement.Models.TenantResourceByExternalCloudProviderTypeDimensionsOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt;&#xA;override this.ByExternalCloudProviderTypeDimensions : Azure.ResourceManager.CostManagement.Models.TenantResourceByExternalCloudProviderTypeDimensionsOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt;" Usage="mockableCostManagementTenantResource.ByExternalCloudProviderTypeDimensions (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.ResourceManager.CostManagement.Models.TenantResourceByExternalCloudProviderTypeDimensionsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the dimensions by the external cloud provider type.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/dimensions</description></item><item><term>Operation Id</term><description>Dimensions_ByExternalCloudProviderType</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.CostManagement.Models.CostManagementDimension" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="options" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ByExternalCloudProviderTypeDimensionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt; ByExternalCloudProviderTypeDimensionsAsync (Azure.ResourceManager.CostManagement.Models.TenantResourceByExternalCloudProviderTypeDimensionsOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt; ByExternalCloudProviderTypeDimensionsAsync(class Azure.ResourceManager.CostManagement.Models.TenantResourceByExternalCloudProviderTypeDimensionsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.ByExternalCloudProviderTypeDimensionsAsync(Azure.ResourceManager.CostManagement.Models.TenantResourceByExternalCloudProviderTypeDimensionsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ByExternalCloudProviderTypeDimensionsAsync (options As TenantResourceByExternalCloudProviderTypeDimensionsOptions, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of CostManagementDimension)" />
      <MemberSignature Language="F#" Value="abstract member ByExternalCloudProviderTypeDimensionsAsync : Azure.ResourceManager.CostManagement.Models.TenantResourceByExternalCloudProviderTypeDimensionsOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt;&#xA;override this.ByExternalCloudProviderTypeDimensionsAsync : Azure.ResourceManager.CostManagement.Models.TenantResourceByExternalCloudProviderTypeDimensionsOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt;" Usage="mockableCostManagementTenantResource.ByExternalCloudProviderTypeDimensionsAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.ResourceManager.CostManagement.Models.TenantResourceByExternalCloudProviderTypeDimensionsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the dimensions by the external cloud provider type.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/dimensions</description></item><item><term>Operation Id</term><description>Dimensions_ByExternalCloudProviderType</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.CostManagement.Models.CostManagementDimension" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="options" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckCostManagementNameAvailabilityByScheduledAction">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt; CheckCostManagementNameAvailabilityByScheduledAction (Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt; CheckCostManagementNameAvailabilityByScheduledAction(class Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.CheckCostManagementNameAvailabilityByScheduledAction(Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckCostManagementNameAvailabilityByScheduledAction (content As CostManagementNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CostManagementNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckCostManagementNameAvailabilityByScheduledAction : Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt;&#xA;override this.CheckCostManagementNameAvailabilityByScheduledAction : Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt;" Usage="mockableCostManagementTenantResource.CheckCostManagementNameAvailabilityByScheduledAction (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Scheduled action to be created or updated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks availability and correctness of the name for a scheduled action.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/checkNameAvailability</description></item><item><term>Operation Id</term><description>ScheduledActions_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckCostManagementNameAvailabilityByScheduledActionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt;&gt; CheckCostManagementNameAvailabilityByScheduledActionAsync (Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt;&gt; CheckCostManagementNameAvailabilityByScheduledActionAsync(class Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.CheckCostManagementNameAvailabilityByScheduledActionAsync(Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckCostManagementNameAvailabilityByScheduledActionAsync (content As CostManagementNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CostManagementNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckCostManagementNameAvailabilityByScheduledActionAsync : Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt;&gt;&#xA;override this.CheckCostManagementNameAvailabilityByScheduledActionAsync : Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt;&gt;" Usage="mockableCostManagementTenantResource.CheckCostManagementNameAvailabilityByScheduledActionAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Scheduled action to be created or updated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks availability and correctness of the name for a scheduled action.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/checkNameAvailability</description></item><item><term>Operation Id</term><description>ScheduledActions_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadByBillingProfilePriceSheet">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt; DownloadByBillingProfilePriceSheet (Azure.WaitUntil waitUntil, string billingAccountName, string billingProfileName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.DownloadURL&gt; DownloadByBillingProfilePriceSheet(valuetype Azure.WaitUntil waitUntil, string billingAccountName, string billingProfileName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.DownloadByBillingProfilePriceSheet(Azure.WaitUntil,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadByBillingProfilePriceSheet (waitUntil As WaitUntil, billingAccountName As String, billingProfileName As String, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of DownloadURL)" />
      <MemberSignature Language="F#" Value="abstract member DownloadByBillingProfilePriceSheet : Azure.WaitUntil * string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;&#xA;override this.DownloadByBillingProfilePriceSheet : Azure.WaitUntil * string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;" Usage="mockableCostManagementTenantResource.DownloadByBillingProfilePriceSheet (waitUntil, billingAccountName, billingProfileName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="billingAccountName" Type="System.String" />
        <Parameter Name="billingProfileName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="billingAccountName"> The ID that uniquely identifies a billing account. </param>
        <param name="billingProfileName"> The ID that uniquely identifies a billing profile. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a URL to download the current month's pricesheet for a billing profile. The operation is supported for billing accounts with agreement type Microsoft Partner Agreement or Microsoft Customer Agreement.Due to Azure product growth, the Azure price sheet download experience in this preview version will be updated from a single csv file to a Zip file containing multiple csv files, each with max 200k records.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/providers/Microsoft.CostManagement/pricesheets/default/download</description></item><item><term>Operation Id</term><description>PriceSheet_DownloadByBillingProfile</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountName" /> or <paramref name="billingProfileName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="billingAccountName" /> or <paramref name="billingProfileName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadByBillingProfilePriceSheetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;&gt; DownloadByBillingProfilePriceSheetAsync (Azure.WaitUntil waitUntil, string billingAccountName, string billingProfileName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;&gt; DownloadByBillingProfilePriceSheetAsync(valuetype Azure.WaitUntil waitUntil, string billingAccountName, string billingProfileName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.DownloadByBillingProfilePriceSheetAsync(Azure.WaitUntil,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadByBillingProfilePriceSheetAsync (waitUntil As WaitUntil, billingAccountName As String, billingProfileName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of DownloadURL))" />
      <MemberSignature Language="F#" Value="abstract member DownloadByBillingProfilePriceSheetAsync : Azure.WaitUntil * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;&gt;&#xA;override this.DownloadByBillingProfilePriceSheetAsync : Azure.WaitUntil * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;&gt;" Usage="mockableCostManagementTenantResource.DownloadByBillingProfilePriceSheetAsync (waitUntil, billingAccountName, billingProfileName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="billingAccountName" Type="System.String" />
        <Parameter Name="billingProfileName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="billingAccountName"> The ID that uniquely identifies a billing account. </param>
        <param name="billingProfileName"> The ID that uniquely identifies a billing profile. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a URL to download the current month's pricesheet for a billing profile. The operation is supported for billing accounts with agreement type Microsoft Partner Agreement or Microsoft Customer Agreement.Due to Azure product growth, the Azure price sheet download experience in this preview version will be updated from a single csv file to a Zip file containing multiple csv files, each with max 200k records.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/providers/Microsoft.CostManagement/pricesheets/default/download</description></item><item><term>Operation Id</term><description>PriceSheet_DownloadByBillingProfile</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountName" /> or <paramref name="billingProfileName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="billingAccountName" /> or <paramref name="billingProfileName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadPriceSheet">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt; DownloadPriceSheet (Azure.WaitUntil waitUntil, string billingAccountName, string billingProfileName, string invoiceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.DownloadURL&gt; DownloadPriceSheet(valuetype Azure.WaitUntil waitUntil, string billingAccountName, string billingProfileName, string invoiceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.DownloadPriceSheet(Azure.WaitUntil,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadPriceSheet (waitUntil As WaitUntil, billingAccountName As String, billingProfileName As String, invoiceName As String, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of DownloadURL)" />
      <MemberSignature Language="F#" Value="abstract member DownloadPriceSheet : Azure.WaitUntil * string * string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;&#xA;override this.DownloadPriceSheet : Azure.WaitUntil * string * string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;" Usage="mockableCostManagementTenantResource.DownloadPriceSheet (waitUntil, billingAccountName, billingProfileName, invoiceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="billingAccountName" Type="System.String" />
        <Parameter Name="billingProfileName" Type="System.String" />
        <Parameter Name="invoiceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="billingAccountName"> The ID that uniquely identifies a billing account. </param>
        <param name="billingProfileName"> The ID that uniquely identifies a billing profile. </param>
        <param name="invoiceName"> The ID that uniquely identifies an invoice. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a URL to download the pricesheet for an invoice. The operation is supported for billing accounts with agreement type Microsoft Partner Agreement or Microsoft Customer Agreement.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoices/{invoiceName}/providers/Microsoft.CostManagement/pricesheets/default/download</description></item><item><term>Operation Id</term><description>PriceSheet_Download</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountName" />, <paramref name="billingProfileName" /> or <paramref name="invoiceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="billingAccountName" />, <paramref name="billingProfileName" /> or <paramref name="invoiceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadPriceSheetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;&gt; DownloadPriceSheetAsync (Azure.WaitUntil waitUntil, string billingAccountName, string billingProfileName, string invoiceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;&gt; DownloadPriceSheetAsync(valuetype Azure.WaitUntil waitUntil, string billingAccountName, string billingProfileName, string invoiceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.DownloadPriceSheetAsync(Azure.WaitUntil,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadPriceSheetAsync (waitUntil As WaitUntil, billingAccountName As String, billingProfileName As String, invoiceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of DownloadURL))" />
      <MemberSignature Language="F#" Value="abstract member DownloadPriceSheetAsync : Azure.WaitUntil * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;&gt;&#xA;override this.DownloadPriceSheetAsync : Azure.WaitUntil * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;&gt;" Usage="mockableCostManagementTenantResource.DownloadPriceSheetAsync (waitUntil, billingAccountName, billingProfileName, invoiceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="billingAccountName" Type="System.String" />
        <Parameter Name="billingProfileName" Type="System.String" />
        <Parameter Name="invoiceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="billingAccountName"> The ID that uniquely identifies a billing account. </param>
        <param name="billingProfileName"> The ID that uniquely identifies a billing profile. </param>
        <param name="invoiceName"> The ID that uniquely identifies an invoice. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a URL to download the pricesheet for an invoice. The operation is supported for billing accounts with agreement type Microsoft Partner Agreement or Microsoft Customer Agreement.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoices/{invoiceName}/providers/Microsoft.CostManagement/pricesheets/default/download</description></item><item><term>Operation Id</term><description>PriceSheet_Download</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountName" />, <paramref name="billingProfileName" /> or <paramref name="invoiceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="billingAccountName" />, <paramref name="billingProfileName" /> or <paramref name="invoiceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExternalCloudProviderUsageForecast">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.ForecastResult&gt; ExternalCloudProviderUsageForecast (Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType externalCloudProviderType, string externalCloudProviderId, Azure.ResourceManager.CostManagement.Models.ForecastDefinition forecastDefinition, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.Models.ForecastResult&gt; ExternalCloudProviderUsageForecast(valuetype Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType externalCloudProviderType, string externalCloudProviderId, class Azure.ResourceManager.CostManagement.Models.ForecastDefinition forecastDefinition, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.ExternalCloudProviderUsageForecast(Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType,System.String,Azure.ResourceManager.CostManagement.Models.ForecastDefinition,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExternalCloudProviderUsageForecast (externalCloudProviderType As ExternalCloudProviderType, externalCloudProviderId As String, forecastDefinition As ForecastDefinition, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ForecastResult)" />
      <MemberSignature Language="F#" Value="abstract member ExternalCloudProviderUsageForecast : Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType * string * Azure.ResourceManager.CostManagement.Models.ForecastDefinition * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.ForecastResult&gt;&#xA;override this.ExternalCloudProviderUsageForecast : Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType * string * Azure.ResourceManager.CostManagement.Models.ForecastDefinition * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.ForecastResult&gt;" Usage="mockableCostManagementTenantResource.ExternalCloudProviderUsageForecast (externalCloudProviderType, externalCloudProviderId, forecastDefinition, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.ForecastResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="externalCloudProviderType" Type="Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType" />
        <Parameter Name="externalCloudProviderId" Type="System.String" />
        <Parameter Name="forecastDefinition" Type="Azure.ResourceManager.CostManagement.Models.ForecastDefinition" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="externalCloudProviderType"> The external cloud provider type associated with dimension/query operations. This includes 'externalSubscriptions' for linked account and 'externalBillingAccounts' for consolidated account. </param>
        <param name="externalCloudProviderId"> This can be '{externalSubscriptionId}' for linked account or '{externalBillingAccountId}' for consolidated account used with dimension/query operations. </param>
        <param name="forecastDefinition"> Parameters supplied to the CreateOrUpdate Forecast Config operation. </param>
        <param name="filter"> May be used to filter forecasts by properties/usageDate (Utc time), properties/chargeType or properties/grain. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the forecast charges for external cloud provider type defined.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/forecast</description></item><item><term>Operation Id</term><description>Forecast_ExternalCloudProviderUsage</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="externalCloudProviderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="externalCloudProviderId" /> or <paramref name="forecastDefinition" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExternalCloudProviderUsageForecastAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.ForecastResult&gt;&gt; ExternalCloudProviderUsageForecastAsync (Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType externalCloudProviderType, string externalCloudProviderId, Azure.ResourceManager.CostManagement.Models.ForecastDefinition forecastDefinition, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.Models.ForecastResult&gt;&gt; ExternalCloudProviderUsageForecastAsync(valuetype Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType externalCloudProviderType, string externalCloudProviderId, class Azure.ResourceManager.CostManagement.Models.ForecastDefinition forecastDefinition, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.ExternalCloudProviderUsageForecastAsync(Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType,System.String,Azure.ResourceManager.CostManagement.Models.ForecastDefinition,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExternalCloudProviderUsageForecastAsync (externalCloudProviderType As ExternalCloudProviderType, externalCloudProviderId As String, forecastDefinition As ForecastDefinition, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ForecastResult))" />
      <MemberSignature Language="F#" Value="abstract member ExternalCloudProviderUsageForecastAsync : Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType * string * Azure.ResourceManager.CostManagement.Models.ForecastDefinition * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.ForecastResult&gt;&gt;&#xA;override this.ExternalCloudProviderUsageForecastAsync : Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType * string * Azure.ResourceManager.CostManagement.Models.ForecastDefinition * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.ForecastResult&gt;&gt;" Usage="mockableCostManagementTenantResource.ExternalCloudProviderUsageForecastAsync (externalCloudProviderType, externalCloudProviderId, forecastDefinition, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.ForecastResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="externalCloudProviderType" Type="Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType" />
        <Parameter Name="externalCloudProviderId" Type="System.String" />
        <Parameter Name="forecastDefinition" Type="Azure.ResourceManager.CostManagement.Models.ForecastDefinition" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="externalCloudProviderType"> The external cloud provider type associated with dimension/query operations. This includes 'externalSubscriptions' for linked account and 'externalBillingAccounts' for consolidated account. </param>
        <param name="externalCloudProviderId"> This can be '{externalSubscriptionId}' for linked account or '{externalBillingAccountId}' for consolidated account used with dimension/query operations. </param>
        <param name="forecastDefinition"> Parameters supplied to the CreateOrUpdate Forecast Config operation. </param>
        <param name="filter"> May be used to filter forecasts by properties/usageDate (Utc time), properties/chargeType or properties/grain. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the forecast charges for external cloud provider type defined.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/forecast</description></item><item><term>Operation Id</term><description>Forecast_ExternalCloudProviderUsage</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="externalCloudProviderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="externalCloudProviderId" /> or <paramref name="forecastDefinition" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScope">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt; GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScope (Azure.WaitUntil waitUntil, string savingsPlanOrderId, string savingsPlanId, Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt; GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScope(valuetype Azure.WaitUntil waitUntil, string savingsPlanOrderId, string savingsPlanId, class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScope(Azure.WaitUntil,System.String,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScope (waitUntil As WaitUntil, savingsPlanOrderId As String, savingsPlanId As String, content As BenefitUtilizationSummariesContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of BenefitUtilizationSummariesOperationStatus)" />
      <MemberSignature Language="F#" Value="abstract member GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScope : Azure.WaitUntil * string * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&#xA;override this.GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScope : Azure.WaitUntil * string * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;" Usage="mockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScope (waitUntil, savingsPlanOrderId, savingsPlanId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="savingsPlanOrderId" Type="System.String" />
        <Parameter Name="savingsPlanId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="savingsPlanOrderId"> Savings plan order ID. </param>
        <param name="savingsPlanId"> Savings plan ID. </param>
        <param name="content"> Async Benefit Utilization Summary report to be created. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers generation of a benefit utilization summaries report for the provided savings plan.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.BillingBenefits/savingsPlanOrders/{savingsPlanOrderId}/savingsPlans/{savingsPlanId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport</description></item><item><term>Operation Id</term><description>SavingsPlanScope_GenerateBenefitUtilizationSummariesReportAsync</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savingsPlanOrderId" /> or <paramref name="savingsPlanId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="savingsPlanOrderId" />, <paramref name="savingsPlanId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt; GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScopeAsync (Azure.WaitUntil waitUntil, string savingsPlanOrderId, string savingsPlanId, Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt; GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScopeAsync(valuetype Azure.WaitUntil waitUntil, string savingsPlanOrderId, string savingsPlanId, class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScopeAsync(Azure.WaitUntil,System.String,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScopeAsync (waitUntil As WaitUntil, savingsPlanOrderId As String, savingsPlanId As String, content As BenefitUtilizationSummariesContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of BenefitUtilizationSummariesOperationStatus))" />
      <MemberSignature Language="F#" Value="abstract member GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScopeAsync : Azure.WaitUntil * string * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;&#xA;override this.GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScopeAsync : Azure.WaitUntil * string * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;" Usage="mockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScopeAsync (waitUntil, savingsPlanOrderId, savingsPlanId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="savingsPlanOrderId" Type="System.String" />
        <Parameter Name="savingsPlanId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="savingsPlanOrderId"> Savings plan order ID. </param>
        <param name="savingsPlanId"> Savings plan ID. </param>
        <param name="content"> Async Benefit Utilization Summary report to be created. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers generation of a benefit utilization summaries report for the provided savings plan.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.BillingBenefits/savingsPlanOrders/{savingsPlanOrderId}/savingsPlans/{savingsPlanId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport</description></item><item><term>Operation Id</term><description>SavingsPlanScope_GenerateBenefitUtilizationSummariesReportAsync</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savingsPlanOrderId" /> or <paramref name="savingsPlanId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="savingsPlanOrderId" />, <paramref name="savingsPlanId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateBenefitUtilizationSummariesReportBillingAccountScope">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt; GenerateBenefitUtilizationSummariesReportBillingAccountScope (Azure.WaitUntil waitUntil, string billingAccountId, Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt; GenerateBenefitUtilizationSummariesReportBillingAccountScope(valuetype Azure.WaitUntil waitUntil, string billingAccountId, class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportBillingAccountScope(Azure.WaitUntil,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateBenefitUtilizationSummariesReportBillingAccountScope (waitUntil As WaitUntil, billingAccountId As String, content As BenefitUtilizationSummariesContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of BenefitUtilizationSummariesOperationStatus)" />
      <MemberSignature Language="F#" Value="abstract member GenerateBenefitUtilizationSummariesReportBillingAccountScope : Azure.WaitUntil * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&#xA;override this.GenerateBenefitUtilizationSummariesReportBillingAccountScope : Azure.WaitUntil * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;" Usage="mockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportBillingAccountScope (waitUntil, billingAccountId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="billingAccountId"> Billing account ID. </param>
        <param name="content"> Async Benefit Utilization Summary report to be created. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers generation of a benefit utilization summaries report for the provided billing account. This API supports only enrollment accounts.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport</description></item><item><term>Operation Id</term><description>BillingAccountScope_GenerateBenefitUtilizationSummariesReport</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="billingAccountId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateBenefitUtilizationSummariesReportBillingAccountScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt; GenerateBenefitUtilizationSummariesReportBillingAccountScopeAsync (Azure.WaitUntil waitUntil, string billingAccountId, Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt; GenerateBenefitUtilizationSummariesReportBillingAccountScopeAsync(valuetype Azure.WaitUntil waitUntil, string billingAccountId, class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportBillingAccountScopeAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateBenefitUtilizationSummariesReportBillingAccountScopeAsync (waitUntil As WaitUntil, billingAccountId As String, content As BenefitUtilizationSummariesContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of BenefitUtilizationSummariesOperationStatus))" />
      <MemberSignature Language="F#" Value="abstract member GenerateBenefitUtilizationSummariesReportBillingAccountScopeAsync : Azure.WaitUntil * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;&#xA;override this.GenerateBenefitUtilizationSummariesReportBillingAccountScopeAsync : Azure.WaitUntil * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;" Usage="mockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportBillingAccountScopeAsync (waitUntil, billingAccountId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="billingAccountId"> Billing account ID. </param>
        <param name="content"> Async Benefit Utilization Summary report to be created. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers generation of a benefit utilization summaries report for the provided billing account. This API supports only enrollment accounts.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport</description></item><item><term>Operation Id</term><description>BillingAccountScope_GenerateBenefitUtilizationSummariesReport</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="billingAccountId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateBenefitUtilizationSummariesReportBillingProfileScope">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt; GenerateBenefitUtilizationSummariesReportBillingProfileScope (Azure.WaitUntil waitUntil, string billingAccountId, string billingProfileId, Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt; GenerateBenefitUtilizationSummariesReportBillingProfileScope(valuetype Azure.WaitUntil waitUntil, string billingAccountId, string billingProfileId, class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportBillingProfileScope(Azure.WaitUntil,System.String,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateBenefitUtilizationSummariesReportBillingProfileScope (waitUntil As WaitUntil, billingAccountId As String, billingProfileId As String, content As BenefitUtilizationSummariesContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of BenefitUtilizationSummariesOperationStatus)" />
      <MemberSignature Language="F#" Value="abstract member GenerateBenefitUtilizationSummariesReportBillingProfileScope : Azure.WaitUntil * string * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&#xA;override this.GenerateBenefitUtilizationSummariesReportBillingProfileScope : Azure.WaitUntil * string * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;" Usage="mockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportBillingProfileScope (waitUntil, billingAccountId, billingProfileId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="billingProfileId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="billingAccountId"> Billing account ID. </param>
        <param name="billingProfileId"> Billing profile ID. </param>
        <param name="content"> Async Benefit Utilization Summary report to be created. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers generation of a benefit utilization summaries report for the provided billing account and billing profile.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport</description></item><item><term>Operation Id</term><description>BillingProfileScope_GenerateBenefitUtilizationSummariesReport</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> or <paramref name="billingProfileId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="billingAccountId" />, <paramref name="billingProfileId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateBenefitUtilizationSummariesReportBillingProfileScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt; GenerateBenefitUtilizationSummariesReportBillingProfileScopeAsync (Azure.WaitUntil waitUntil, string billingAccountId, string billingProfileId, Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt; GenerateBenefitUtilizationSummariesReportBillingProfileScopeAsync(valuetype Azure.WaitUntil waitUntil, string billingAccountId, string billingProfileId, class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportBillingProfileScopeAsync(Azure.WaitUntil,System.String,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateBenefitUtilizationSummariesReportBillingProfileScopeAsync (waitUntil As WaitUntil, billingAccountId As String, billingProfileId As String, content As BenefitUtilizationSummariesContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of BenefitUtilizationSummariesOperationStatus))" />
      <MemberSignature Language="F#" Value="abstract member GenerateBenefitUtilizationSummariesReportBillingProfileScopeAsync : Azure.WaitUntil * string * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;&#xA;override this.GenerateBenefitUtilizationSummariesReportBillingProfileScopeAsync : Azure.WaitUntil * string * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;" Usage="mockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportBillingProfileScopeAsync (waitUntil, billingAccountId, billingProfileId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="billingProfileId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="billingAccountId"> Billing account ID. </param>
        <param name="billingProfileId"> Billing profile ID. </param>
        <param name="content"> Async Benefit Utilization Summary report to be created. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers generation of a benefit utilization summaries report for the provided billing account and billing profile.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport</description></item><item><term>Operation Id</term><description>BillingProfileScope_GenerateBenefitUtilizationSummariesReport</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> or <paramref name="billingProfileId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="billingAccountId" />, <paramref name="billingProfileId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateBenefitUtilizationSummariesReportReservationOrderScope">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt; GenerateBenefitUtilizationSummariesReportReservationOrderScope (Azure.WaitUntil waitUntil, string reservationOrderId, Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt; GenerateBenefitUtilizationSummariesReportReservationOrderScope(valuetype Azure.WaitUntil waitUntil, string reservationOrderId, class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportReservationOrderScope(Azure.WaitUntil,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateBenefitUtilizationSummariesReportReservationOrderScope (waitUntil As WaitUntil, reservationOrderId As String, content As BenefitUtilizationSummariesContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of BenefitUtilizationSummariesOperationStatus)" />
      <MemberSignature Language="F#" Value="abstract member GenerateBenefitUtilizationSummariesReportReservationOrderScope : Azure.WaitUntil * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&#xA;override this.GenerateBenefitUtilizationSummariesReportReservationOrderScope : Azure.WaitUntil * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;" Usage="mockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportReservationOrderScope (waitUntil, reservationOrderId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="reservationOrderId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="reservationOrderId"> Reservation Order ID. </param>
        <param name="content"> Async Benefit Utilization Summary report to be created. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers generation of a benefit utilization summaries report for the provided reservation order.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport</description></item><item><term>Operation Id</term><description>ReservationOrderScope_GenerateBenefitUtilizationSummariesReport</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="reservationOrderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reservationOrderId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateBenefitUtilizationSummariesReportReservationOrderScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt; GenerateBenefitUtilizationSummariesReportReservationOrderScopeAsync (Azure.WaitUntil waitUntil, string reservationOrderId, Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt; GenerateBenefitUtilizationSummariesReportReservationOrderScopeAsync(valuetype Azure.WaitUntil waitUntil, string reservationOrderId, class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportReservationOrderScopeAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateBenefitUtilizationSummariesReportReservationOrderScopeAsync (waitUntil As WaitUntil, reservationOrderId As String, content As BenefitUtilizationSummariesContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of BenefitUtilizationSummariesOperationStatus))" />
      <MemberSignature Language="F#" Value="abstract member GenerateBenefitUtilizationSummariesReportReservationOrderScopeAsync : Azure.WaitUntil * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;&#xA;override this.GenerateBenefitUtilizationSummariesReportReservationOrderScopeAsync : Azure.WaitUntil * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;" Usage="mockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportReservationOrderScopeAsync (waitUntil, reservationOrderId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="reservationOrderId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="reservationOrderId"> Reservation Order ID. </param>
        <param name="content"> Async Benefit Utilization Summary report to be created. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers generation of a benefit utilization summaries report for the provided reservation order.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport</description></item><item><term>Operation Id</term><description>ReservationOrderScope_GenerateBenefitUtilizationSummariesReport</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="reservationOrderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reservationOrderId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateBenefitUtilizationSummariesReportReservationScope">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt; GenerateBenefitUtilizationSummariesReportReservationScope (Azure.WaitUntil waitUntil, string reservationOrderId, string reservationId, Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt; GenerateBenefitUtilizationSummariesReportReservationScope(valuetype Azure.WaitUntil waitUntil, string reservationOrderId, string reservationId, class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportReservationScope(Azure.WaitUntil,System.String,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateBenefitUtilizationSummariesReportReservationScope (waitUntil As WaitUntil, reservationOrderId As String, reservationId As String, content As BenefitUtilizationSummariesContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of BenefitUtilizationSummariesOperationStatus)" />
      <MemberSignature Language="F#" Value="abstract member GenerateBenefitUtilizationSummariesReportReservationScope : Azure.WaitUntil * string * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&#xA;override this.GenerateBenefitUtilizationSummariesReportReservationScope : Azure.WaitUntil * string * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;" Usage="mockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportReservationScope (waitUntil, reservationOrderId, reservationId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="reservationOrderId" Type="System.String" />
        <Parameter Name="reservationId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="reservationOrderId"> Reservation Order ID. </param>
        <param name="reservationId"> Reservation ID. </param>
        <param name="content"> Async Benefit Utilization Summary report to be created. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers generation of a benefit utilization summaries report for the provided reservation.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/reservations/{reservationId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport</description></item><item><term>Operation Id</term><description>ReservationScope_GenerateBenefitUtilizationSummariesReport</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="reservationOrderId" /> or <paramref name="reservationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reservationOrderId" />, <paramref name="reservationId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateBenefitUtilizationSummariesReportReservationScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt; GenerateBenefitUtilizationSummariesReportReservationScopeAsync (Azure.WaitUntil waitUntil, string reservationOrderId, string reservationId, Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt; GenerateBenefitUtilizationSummariesReportReservationScopeAsync(valuetype Azure.WaitUntil waitUntil, string reservationOrderId, string reservationId, class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportReservationScopeAsync(Azure.WaitUntil,System.String,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateBenefitUtilizationSummariesReportReservationScopeAsync (waitUntil As WaitUntil, reservationOrderId As String, reservationId As String, content As BenefitUtilizationSummariesContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of BenefitUtilizationSummariesOperationStatus))" />
      <MemberSignature Language="F#" Value="abstract member GenerateBenefitUtilizationSummariesReportReservationScopeAsync : Azure.WaitUntil * string * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;&#xA;override this.GenerateBenefitUtilizationSummariesReportReservationScopeAsync : Azure.WaitUntil * string * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;" Usage="mockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportReservationScopeAsync (waitUntil, reservationOrderId, reservationId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="reservationOrderId" Type="System.String" />
        <Parameter Name="reservationId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="reservationOrderId"> Reservation Order ID. </param>
        <param name="reservationId"> Reservation ID. </param>
        <param name="content"> Async Benefit Utilization Summary report to be created. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers generation of a benefit utilization summaries report for the provided reservation.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/reservations/{reservationId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport</description></item><item><term>Operation Id</term><description>ReservationScope_GenerateBenefitUtilizationSummariesReport</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="reservationOrderId" /> or <paramref name="reservationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reservationOrderId" />, <paramref name="reservationId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScope">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt; GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScope (Azure.WaitUntil waitUntil, string savingsPlanOrderId, Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt; GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScope(valuetype Azure.WaitUntil waitUntil, string savingsPlanOrderId, class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScope(Azure.WaitUntil,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScope (waitUntil As WaitUntil, savingsPlanOrderId As String, content As BenefitUtilizationSummariesContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of BenefitUtilizationSummariesOperationStatus)" />
      <MemberSignature Language="F#" Value="abstract member GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScope : Azure.WaitUntil * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&#xA;override this.GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScope : Azure.WaitUntil * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;" Usage="mockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScope (waitUntil, savingsPlanOrderId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="savingsPlanOrderId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="savingsPlanOrderId"> Savings plan order ID. </param>
        <param name="content"> Async Benefit Utilization Summary report to be created. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers generation of a benefit utilization summaries report for the provided savings plan order.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.BillingBenefits/savingsPlanOrders/{savingsPlanOrderId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport</description></item><item><term>Operation Id</term><description>SavingsPlanOrderScope_GenerateBenefitUtilizationSummariesReport</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savingsPlanOrderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="savingsPlanOrderId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt; GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScopeAsync (Azure.WaitUntil waitUntil, string savingsPlanOrderId, Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt; GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScopeAsync(valuetype Azure.WaitUntil waitUntil, string savingsPlanOrderId, class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScopeAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScopeAsync (waitUntil As WaitUntil, savingsPlanOrderId As String, content As BenefitUtilizationSummariesContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of BenefitUtilizationSummariesOperationStatus))" />
      <MemberSignature Language="F#" Value="abstract member GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScopeAsync : Azure.WaitUntil * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;&#xA;override this.GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScopeAsync : Azure.WaitUntil * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;" Usage="mockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScopeAsync (waitUntil, savingsPlanOrderId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="savingsPlanOrderId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="savingsPlanOrderId"> Savings plan order ID. </param>
        <param name="content"> Async Benefit Utilization Summary report to be created. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers generation of a benefit utilization summaries report for the provided savings plan order.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.BillingBenefits/savingsPlanOrders/{savingsPlanOrderId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport</description></item><item><term>Operation Id</term><description>SavingsPlanOrderScope_GenerateBenefitUtilizationSummariesReport</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savingsPlanOrderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="savingsPlanOrderId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllTenantsCostManagementViews">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CostManagement.TenantsCostManagementViewsCollection GetAllTenantsCostManagementViews ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CostManagement.TenantsCostManagementViewsCollection GetAllTenantsCostManagementViews() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetAllTenantsCostManagementViews" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllTenantsCostManagementViews () As TenantsCostManagementViewsCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAllTenantsCostManagementViews : unit -&gt; Azure.ResourceManager.CostManagement.TenantsCostManagementViewsCollection&#xA;override this.GetAllTenantsCostManagementViews : unit -&gt; Azure.ResourceManager.CostManagement.TenantsCostManagementViewsCollection" Usage="mockableCostManagementTenantResource.GetAllTenantsCostManagementViews " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CostManagement.TenantsCostManagementViewsCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of TenantsCostManagementViewsResources in the TenantResource. </summary>
        <returns> An object representing collection of TenantsCostManagementViewsResources and their operations over a TenantsCostManagementViewsResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBenefitUtilizationSummariesByBillingAccountId">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesByBillingAccountId (string billingAccountId, Azure.ResourceManager.CostManagement.Models.GrainContent? grainParameter = default, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesByBillingAccountId(string billingAccountId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.CostManagement.Models.GrainContent&gt; grainParameter, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetBenefitUtilizationSummariesByBillingAccountId(System.String,System.Nullable{Azure.ResourceManager.CostManagement.Models.GrainContent},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBenefitUtilizationSummariesByBillingAccountId (billingAccountId As String, Optional grainParameter As Nullable(Of GrainContent) = Nothing, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of BenefitUtilizationSummary)" />
      <MemberSignature Language="F#" Value="abstract member GetBenefitUtilizationSummariesByBillingAccountId : string * Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;&#xA;override this.GetBenefitUtilizationSummariesByBillingAccountId : string * Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;" Usage="mockableCostManagementTenantResource.GetBenefitUtilizationSummariesByBillingAccountId (billingAccountId, grainParameter, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="grainParameter" Type="System.Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt;" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="billingAccountId"> Billing account ID. </param>
        <param name="grainParameter"> Grain. </param>
        <param name="filter"> Supports filtering by properties/benefitId, properties/benefitOrderId and properties/usageDate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists savings plan utilization summaries for the enterprise agreement scope. Supported at grain values: 'Daily' and 'Monthly'.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries</description></item><item><term>Operation Id</term><description>BenefitUtilizationSummaries_ListByBillingAccountId</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="billingAccountId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBenefitUtilizationSummariesByBillingAccountIdAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesByBillingAccountIdAsync (string billingAccountId, Azure.ResourceManager.CostManagement.Models.GrainContent? grainParameter = default, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesByBillingAccountIdAsync(string billingAccountId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.CostManagement.Models.GrainContent&gt; grainParameter, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetBenefitUtilizationSummariesByBillingAccountIdAsync(System.String,System.Nullable{Azure.ResourceManager.CostManagement.Models.GrainContent},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBenefitUtilizationSummariesByBillingAccountIdAsync (billingAccountId As String, Optional grainParameter As Nullable(Of GrainContent) = Nothing, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of BenefitUtilizationSummary)" />
      <MemberSignature Language="F#" Value="abstract member GetBenefitUtilizationSummariesByBillingAccountIdAsync : string * Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;&#xA;override this.GetBenefitUtilizationSummariesByBillingAccountIdAsync : string * Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;" Usage="mockableCostManagementTenantResource.GetBenefitUtilizationSummariesByBillingAccountIdAsync (billingAccountId, grainParameter, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="grainParameter" Type="System.Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt;" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="billingAccountId"> Billing account ID. </param>
        <param name="grainParameter"> Grain. </param>
        <param name="filter"> Supports filtering by properties/benefitId, properties/benefitOrderId and properties/usageDate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists savings plan utilization summaries for the enterprise agreement scope. Supported at grain values: 'Daily' and 'Monthly'.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries</description></item><item><term>Operation Id</term><description>BenefitUtilizationSummaries_ListByBillingAccountId</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="billingAccountId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBenefitUtilizationSummariesByBillingProfileId">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesByBillingProfileId (string billingAccountId, string billingProfileId, Azure.ResourceManager.CostManagement.Models.GrainContent? grainParameter = default, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesByBillingProfileId(string billingAccountId, string billingProfileId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.CostManagement.Models.GrainContent&gt; grainParameter, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetBenefitUtilizationSummariesByBillingProfileId(System.String,System.String,System.Nullable{Azure.ResourceManager.CostManagement.Models.GrainContent},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBenefitUtilizationSummariesByBillingProfileId (billingAccountId As String, billingProfileId As String, Optional grainParameter As Nullable(Of GrainContent) = Nothing, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of BenefitUtilizationSummary)" />
      <MemberSignature Language="F#" Value="abstract member GetBenefitUtilizationSummariesByBillingProfileId : string * string * Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;&#xA;override this.GetBenefitUtilizationSummariesByBillingProfileId : string * string * Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;" Usage="mockableCostManagementTenantResource.GetBenefitUtilizationSummariesByBillingProfileId (billingAccountId, billingProfileId, grainParameter, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="billingProfileId" Type="System.String" />
        <Parameter Name="grainParameter" Type="System.Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt;" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="billingAccountId"> Billing account ID. </param>
        <param name="billingProfileId"> Billing profile ID. </param>
        <param name="grainParameter"> Grain. </param>
        <param name="filter"> Supports filtering by properties/benefitId, properties/benefitOrderId and properties/usageDate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists savings plan utilization summaries for billing profile. Supported at grain values: 'Daily' and 'Monthly'.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries</description></item><item><term>Operation Id</term><description>BenefitUtilizationSummaries_ListByBillingProfileId</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> or <paramref name="billingProfileId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="billingAccountId" /> or <paramref name="billingProfileId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBenefitUtilizationSummariesByBillingProfileIdAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesByBillingProfileIdAsync (string billingAccountId, string billingProfileId, Azure.ResourceManager.CostManagement.Models.GrainContent? grainParameter = default, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesByBillingProfileIdAsync(string billingAccountId, string billingProfileId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.CostManagement.Models.GrainContent&gt; grainParameter, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetBenefitUtilizationSummariesByBillingProfileIdAsync(System.String,System.String,System.Nullable{Azure.ResourceManager.CostManagement.Models.GrainContent},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBenefitUtilizationSummariesByBillingProfileIdAsync (billingAccountId As String, billingProfileId As String, Optional grainParameter As Nullable(Of GrainContent) = Nothing, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of BenefitUtilizationSummary)" />
      <MemberSignature Language="F#" Value="abstract member GetBenefitUtilizationSummariesByBillingProfileIdAsync : string * string * Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;&#xA;override this.GetBenefitUtilizationSummariesByBillingProfileIdAsync : string * string * Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;" Usage="mockableCostManagementTenantResource.GetBenefitUtilizationSummariesByBillingProfileIdAsync (billingAccountId, billingProfileId, grainParameter, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="billingProfileId" Type="System.String" />
        <Parameter Name="grainParameter" Type="System.Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt;" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="billingAccountId"> Billing account ID. </param>
        <param name="billingProfileId"> Billing profile ID. </param>
        <param name="grainParameter"> Grain. </param>
        <param name="filter"> Supports filtering by properties/benefitId, properties/benefitOrderId and properties/usageDate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists savings plan utilization summaries for billing profile. Supported at grain values: 'Daily' and 'Monthly'.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries</description></item><item><term>Operation Id</term><description>BenefitUtilizationSummaries_ListByBillingProfileId</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> or <paramref name="billingProfileId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="billingAccountId" /> or <paramref name="billingProfileId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBenefitUtilizationSummariesBySavingsPlanId">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesBySavingsPlanId (string savingsPlanOrderId, string savingsPlanId, string filter = default, Azure.ResourceManager.CostManagement.Models.GrainContent? grainParameter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesBySavingsPlanId(string savingsPlanOrderId, string savingsPlanId, string filter, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.CostManagement.Models.GrainContent&gt; grainParameter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetBenefitUtilizationSummariesBySavingsPlanId(System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.CostManagement.Models.GrainContent},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBenefitUtilizationSummariesBySavingsPlanId (savingsPlanOrderId As String, savingsPlanId As String, Optional filter As String = Nothing, Optional grainParameter As Nullable(Of GrainContent) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of BenefitUtilizationSummary)" />
      <MemberSignature Language="F#" Value="abstract member GetBenefitUtilizationSummariesBySavingsPlanId : string * string * string * Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;&#xA;override this.GetBenefitUtilizationSummariesBySavingsPlanId : string * string * string * Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;" Usage="mockableCostManagementTenantResource.GetBenefitUtilizationSummariesBySavingsPlanId (savingsPlanOrderId, savingsPlanId, filter, grainParameter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savingsPlanOrderId" Type="System.String" />
        <Parameter Name="savingsPlanId" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="grainParameter" Type="System.Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="savingsPlanOrderId"> Savings plan order ID. </param>
        <param name="savingsPlanId"> Savings plan ID. </param>
        <param name="filter"> Supports filtering by properties/usageDate. </param>
        <param name="grainParameter"> Grain. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the savings plan utilization summaries for daily or monthly grain.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.BillingBenefits/savingsPlanOrders/{savingsPlanOrderId}/savingsPlans/{savingsPlanId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries</description></item><item><term>Operation Id</term><description>BenefitUtilizationSummaries_ListBySavingsPlanId</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savingsPlanOrderId" /> or <paramref name="savingsPlanId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="savingsPlanOrderId" /> or <paramref name="savingsPlanId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBenefitUtilizationSummariesBySavingsPlanIdAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesBySavingsPlanIdAsync (string savingsPlanOrderId, string savingsPlanId, string filter = default, Azure.ResourceManager.CostManagement.Models.GrainContent? grainParameter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesBySavingsPlanIdAsync(string savingsPlanOrderId, string savingsPlanId, string filter, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.CostManagement.Models.GrainContent&gt; grainParameter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetBenefitUtilizationSummariesBySavingsPlanIdAsync(System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.CostManagement.Models.GrainContent},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBenefitUtilizationSummariesBySavingsPlanIdAsync (savingsPlanOrderId As String, savingsPlanId As String, Optional filter As String = Nothing, Optional grainParameter As Nullable(Of GrainContent) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of BenefitUtilizationSummary)" />
      <MemberSignature Language="F#" Value="abstract member GetBenefitUtilizationSummariesBySavingsPlanIdAsync : string * string * string * Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;&#xA;override this.GetBenefitUtilizationSummariesBySavingsPlanIdAsync : string * string * string * Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;" Usage="mockableCostManagementTenantResource.GetBenefitUtilizationSummariesBySavingsPlanIdAsync (savingsPlanOrderId, savingsPlanId, filter, grainParameter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savingsPlanOrderId" Type="System.String" />
        <Parameter Name="savingsPlanId" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="grainParameter" Type="System.Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="savingsPlanOrderId"> Savings plan order ID. </param>
        <param name="savingsPlanId"> Savings plan ID. </param>
        <param name="filter"> Supports filtering by properties/usageDate. </param>
        <param name="grainParameter"> Grain. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the savings plan utilization summaries for daily or monthly grain.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.BillingBenefits/savingsPlanOrders/{savingsPlanOrderId}/savingsPlans/{savingsPlanId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries</description></item><item><term>Operation Id</term><description>BenefitUtilizationSummaries_ListBySavingsPlanId</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savingsPlanOrderId" /> or <paramref name="savingsPlanId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="savingsPlanOrderId" /> or <paramref name="savingsPlanId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBenefitUtilizationSummariesBySavingsPlanOrder">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesBySavingsPlanOrder (string savingsPlanOrderId, string filter = default, Azure.ResourceManager.CostManagement.Models.GrainContent? grainParameter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesBySavingsPlanOrder(string savingsPlanOrderId, string filter, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.CostManagement.Models.GrainContent&gt; grainParameter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetBenefitUtilizationSummariesBySavingsPlanOrder(System.String,System.String,System.Nullable{Azure.ResourceManager.CostManagement.Models.GrainContent},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBenefitUtilizationSummariesBySavingsPlanOrder (savingsPlanOrderId As String, Optional filter As String = Nothing, Optional grainParameter As Nullable(Of GrainContent) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of BenefitUtilizationSummary)" />
      <MemberSignature Language="F#" Value="abstract member GetBenefitUtilizationSummariesBySavingsPlanOrder : string * string * Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;&#xA;override this.GetBenefitUtilizationSummariesBySavingsPlanOrder : string * string * Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;" Usage="mockableCostManagementTenantResource.GetBenefitUtilizationSummariesBySavingsPlanOrder (savingsPlanOrderId, filter, grainParameter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savingsPlanOrderId" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="grainParameter" Type="System.Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="savingsPlanOrderId"> Savings plan order ID. </param>
        <param name="filter"> Supports filtering by properties/usageDate. </param>
        <param name="grainParameter"> Grain. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the savings plan utilization summaries for daily or monthly grain.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.BillingBenefits/savingsPlanOrders/{savingsPlanOrderId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries</description></item><item><term>Operation Id</term><description>BenefitUtilizationSummaries_ListBySavingsPlanOrder</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savingsPlanOrderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="savingsPlanOrderId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBenefitUtilizationSummariesBySavingsPlanOrderAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesBySavingsPlanOrderAsync (string savingsPlanOrderId, string filter = default, Azure.ResourceManager.CostManagement.Models.GrainContent? grainParameter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesBySavingsPlanOrderAsync(string savingsPlanOrderId, string filter, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.CostManagement.Models.GrainContent&gt; grainParameter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetBenefitUtilizationSummariesBySavingsPlanOrderAsync(System.String,System.String,System.Nullable{Azure.ResourceManager.CostManagement.Models.GrainContent},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBenefitUtilizationSummariesBySavingsPlanOrderAsync (savingsPlanOrderId As String, Optional filter As String = Nothing, Optional grainParameter As Nullable(Of GrainContent) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of BenefitUtilizationSummary)" />
      <MemberSignature Language="F#" Value="abstract member GetBenefitUtilizationSummariesBySavingsPlanOrderAsync : string * string * Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;&#xA;override this.GetBenefitUtilizationSummariesBySavingsPlanOrderAsync : string * string * Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;" Usage="mockableCostManagementTenantResource.GetBenefitUtilizationSummariesBySavingsPlanOrderAsync (savingsPlanOrderId, filter, grainParameter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savingsPlanOrderId" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="grainParameter" Type="System.Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="savingsPlanOrderId"> Savings plan order ID. </param>
        <param name="filter"> Supports filtering by properties/usageDate. </param>
        <param name="grainParameter"> Grain. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the savings plan utilization summaries for daily or monthly grain.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.BillingBenefits/savingsPlanOrders/{savingsPlanOrderId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries</description></item><item><term>Operation Id</term><description>BenefitUtilizationSummaries_ListBySavingsPlanOrder</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savingsPlanOrderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="savingsPlanOrderId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCostManagementAlerts">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt; GetCostManagementAlerts (Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType externalCloudProviderType, string externalCloudProviderId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt; GetCostManagementAlerts(valuetype Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType externalCloudProviderType, string externalCloudProviderId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetCostManagementAlerts(Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCostManagementAlerts (externalCloudProviderType As ExternalCloudProviderType, externalCloudProviderId As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of CostManagementAlertResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCostManagementAlerts : Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt;&#xA;override this.GetCostManagementAlerts : Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt;" Usage="mockableCostManagementTenantResource.GetCostManagementAlerts (externalCloudProviderType, externalCloudProviderId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="externalCloudProviderType" Type="Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType" />
        <Parameter Name="externalCloudProviderId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="externalCloudProviderType"> The external cloud provider type associated with dimension/query operations. This includes 'externalSubscriptions' for linked account and 'externalBillingAccounts' for consolidated account. </param>
        <param name="externalCloudProviderId"> This can be '{externalSubscriptionId}' for linked account or '{externalBillingAccountId}' for consolidated account used with dimension/query operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the Alerts for external cloud provider type defined.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/alerts</description></item><item><term>Operation Id</term><description>Alerts_ListExternal</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CostManagement.CostManagementAlertResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.CostManagement.CostManagementAlertResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="externalCloudProviderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="externalCloudProviderId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCostManagementAlertsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt; GetCostManagementAlertsAsync (Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType externalCloudProviderType, string externalCloudProviderId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt; GetCostManagementAlertsAsync(valuetype Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType externalCloudProviderType, string externalCloudProviderId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetCostManagementAlertsAsync(Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCostManagementAlertsAsync (externalCloudProviderType As ExternalCloudProviderType, externalCloudProviderId As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of CostManagementAlertResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCostManagementAlertsAsync : Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt;&#xA;override this.GetCostManagementAlertsAsync : Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt;" Usage="mockableCostManagementTenantResource.GetCostManagementAlertsAsync (externalCloudProviderType, externalCloudProviderId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="externalCloudProviderType" Type="Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType" />
        <Parameter Name="externalCloudProviderId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="externalCloudProviderType"> The external cloud provider type associated with dimension/query operations. This includes 'externalSubscriptions' for linked account and 'externalBillingAccounts' for consolidated account. </param>
        <param name="externalCloudProviderId"> This can be '{externalSubscriptionId}' for linked account or '{externalBillingAccountId}' for consolidated account used with dimension/query operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the Alerts for external cloud provider type defined.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/alerts</description></item><item><term>Operation Id</term><description>Alerts_ListExternal</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CostManagement.CostManagementAlertResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.CostManagement.CostManagementAlertResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="externalCloudProviderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="externalCloudProviderId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantScheduledAction">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantScheduledActionResource&gt; GetTenantScheduledAction (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.TenantScheduledActionResource&gt; GetTenantScheduledAction(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetTenantScheduledAction(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantScheduledAction (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TenantScheduledActionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetTenantScheduledAction : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantScheduledActionResource&gt;&#xA;override this.GetTenantScheduledAction : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantScheduledActionResource&gt;" Usage="mockableCostManagementTenantResource.GetTenantScheduledAction (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantScheduledActionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> Scheduled action name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the private scheduled action by name.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/scheduledActions/{name}</description></item><item><term>Operation Id</term><description>ScheduledActions_Get</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CostManagement.TenantScheduledActionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantScheduledActionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantScheduledActionResource&gt;&gt; GetTenantScheduledActionAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.TenantScheduledActionResource&gt;&gt; GetTenantScheduledActionAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetTenantScheduledActionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantScheduledActionAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TenantScheduledActionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetTenantScheduledActionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantScheduledActionResource&gt;&gt;&#xA;override this.GetTenantScheduledActionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantScheduledActionResource&gt;&gt;" Usage="mockableCostManagementTenantResource.GetTenantScheduledActionAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantScheduledActionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> Scheduled action name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the private scheduled action by name.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/scheduledActions/{name}</description></item><item><term>Operation Id</term><description>ScheduledActions_Get</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CostManagement.TenantScheduledActionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantScheduledActions">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CostManagement.TenantScheduledActionCollection GetTenantScheduledActions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CostManagement.TenantScheduledActionCollection GetTenantScheduledActions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetTenantScheduledActions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantScheduledActions () As TenantScheduledActionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetTenantScheduledActions : unit -&gt; Azure.ResourceManager.CostManagement.TenantScheduledActionCollection&#xA;override this.GetTenantScheduledActions : unit -&gt; Azure.ResourceManager.CostManagement.TenantScheduledActionCollection" Usage="mockableCostManagementTenantResource.GetTenantScheduledActions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CostManagement.TenantScheduledActionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of TenantScheduledActionResources in the TenantResource. </summary>
        <returns> An object representing collection of TenantScheduledActionResources and their operations over a TenantScheduledActionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTenantsCostManagementViews">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource&gt; GetTenantsCostManagementViews (string viewName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource&gt; GetTenantsCostManagementViews(string viewName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetTenantsCostManagementViews(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantsCostManagementViews (viewName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TenantsCostManagementViewsResource)" />
      <MemberSignature Language="F#" Value="abstract member GetTenantsCostManagementViews : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource&gt;&#xA;override this.GetTenantsCostManagementViews : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource&gt;" Usage="mockableCostManagementTenantResource.GetTenantsCostManagementViews (viewName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="viewName"> View name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the view by view name.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/views/{viewName}</description></item><item><term>Operation Id</term><description>Views_Get</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="viewName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantsCostManagementViewsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource&gt;&gt; GetTenantsCostManagementViewsAsync (string viewName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource&gt;&gt; GetTenantsCostManagementViewsAsync(string viewName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetTenantsCostManagementViewsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantsCostManagementViewsAsync (viewName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TenantsCostManagementViewsResource))" />
      <MemberSignature Language="F#" Value="abstract member GetTenantsCostManagementViewsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource&gt;&gt;&#xA;override this.GetTenantsCostManagementViewsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource&gt;&gt;" Usage="mockableCostManagementTenantResource.GetTenantsCostManagementViewsAsync (viewName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="viewName"> View name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the view by view name.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/views/{viewName}</description></item><item><term>Operation Id</term><description>Views_Get</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="viewName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="UsageByExternalCloudProviderTypeQuery">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.QueryResult&gt; UsageByExternalCloudProviderTypeQuery (Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType externalCloudProviderType, string externalCloudProviderId, Azure.ResourceManager.CostManagement.Models.QueryDefinition queryDefinition, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.Models.QueryResult&gt; UsageByExternalCloudProviderTypeQuery(valuetype Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType externalCloudProviderType, string externalCloudProviderId, class Azure.ResourceManager.CostManagement.Models.QueryDefinition queryDefinition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.UsageByExternalCloudProviderTypeQuery(Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType,System.String,Azure.ResourceManager.CostManagement.Models.QueryDefinition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UsageByExternalCloudProviderTypeQuery (externalCloudProviderType As ExternalCloudProviderType, externalCloudProviderId As String, queryDefinition As QueryDefinition, Optional cancellationToken As CancellationToken = Nothing) As Response(Of QueryResult)" />
      <MemberSignature Language="F#" Value="abstract member UsageByExternalCloudProviderTypeQuery : Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType * string * Azure.ResourceManager.CostManagement.Models.QueryDefinition * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.QueryResult&gt;&#xA;override this.UsageByExternalCloudProviderTypeQuery : Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType * string * Azure.ResourceManager.CostManagement.Models.QueryDefinition * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.QueryResult&gt;" Usage="mockableCostManagementTenantResource.UsageByExternalCloudProviderTypeQuery (externalCloudProviderType, externalCloudProviderId, queryDefinition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.QueryResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="externalCloudProviderType" Type="Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType" />
        <Parameter Name="externalCloudProviderId" Type="System.String" />
        <Parameter Name="queryDefinition" Type="Azure.ResourceManager.CostManagement.Models.QueryDefinition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="externalCloudProviderType"> The external cloud provider type associated with dimension/query operations. This includes 'externalSubscriptions' for linked account and 'externalBillingAccounts' for consolidated account. </param>
        <param name="externalCloudProviderId"> This can be '{externalSubscriptionId}' for linked account or '{externalBillingAccountId}' for consolidated account used with dimension/query operations. </param>
        <param name="queryDefinition"> Parameters supplied to the CreateOrUpdate Query Config operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Query the usage data for external cloud provider type defined.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/query</description></item><item><term>Operation Id</term><description>Query_UsageByExternalCloudProviderType</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="externalCloudProviderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="externalCloudProviderId" /> or <paramref name="queryDefinition" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UsageByExternalCloudProviderTypeQueryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.QueryResult&gt;&gt; UsageByExternalCloudProviderTypeQueryAsync (Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType externalCloudProviderType, string externalCloudProviderId, Azure.ResourceManager.CostManagement.Models.QueryDefinition queryDefinition, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.Models.QueryResult&gt;&gt; UsageByExternalCloudProviderTypeQueryAsync(valuetype Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType externalCloudProviderType, string externalCloudProviderId, class Azure.ResourceManager.CostManagement.Models.QueryDefinition queryDefinition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.UsageByExternalCloudProviderTypeQueryAsync(Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType,System.String,Azure.ResourceManager.CostManagement.Models.QueryDefinition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UsageByExternalCloudProviderTypeQueryAsync (externalCloudProviderType As ExternalCloudProviderType, externalCloudProviderId As String, queryDefinition As QueryDefinition, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of QueryResult))" />
      <MemberSignature Language="F#" Value="abstract member UsageByExternalCloudProviderTypeQueryAsync : Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType * string * Azure.ResourceManager.CostManagement.Models.QueryDefinition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.QueryResult&gt;&gt;&#xA;override this.UsageByExternalCloudProviderTypeQueryAsync : Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType * string * Azure.ResourceManager.CostManagement.Models.QueryDefinition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.QueryResult&gt;&gt;" Usage="mockableCostManagementTenantResource.UsageByExternalCloudProviderTypeQueryAsync (externalCloudProviderType, externalCloudProviderId, queryDefinition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.QueryResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="externalCloudProviderType" Type="Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType" />
        <Parameter Name="externalCloudProviderId" Type="System.String" />
        <Parameter Name="queryDefinition" Type="Azure.ResourceManager.CostManagement.Models.QueryDefinition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="externalCloudProviderType"> The external cloud provider type associated with dimension/query operations. This includes 'externalSubscriptions' for linked account and 'externalBillingAccounts' for consolidated account. </param>
        <param name="externalCloudProviderId"> This can be '{externalSubscriptionId}' for linked account or '{externalBillingAccountId}' for consolidated account used with dimension/query operations. </param>
        <param name="queryDefinition"> Parameters supplied to the CreateOrUpdate Query Config operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Query the usage data for external cloud provider type defined.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/query</description></item><item><term>Operation Id</term><description>Query_UsageByExternalCloudProviderType</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="externalCloudProviderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="externalCloudProviderId" /> or <paramref name="queryDefinition" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
