<Type Name="QueryContext" FullName="Microsoft.Azure.CognitiveServices.Search.AutoSuggest.Models.QueryContext">
  <TypeSignature Language="C#" Value="public class QueryContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.CognitiveServices.Search.AutoSuggest.Models.QueryContext" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryContext" />
  <TypeSignature Language="F#" Value="type QueryContext = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.CognitiveServices.Search.AutoSuggest</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Defines the query context that Bing used for the request.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Search.AutoSuggest.Models.QueryContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.AutoSuggest</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the QueryContext class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryContext (string originalQuery, string alteredQuery = default, string alterationOverrideQuery = default, bool? adultIntent = default, bool? askUserForLocation = default, bool? isTransactional = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string originalQuery, string alteredQuery, string alterationOverrideQuery, valuetype System.Nullable`1&lt;bool&gt; adultIntent, valuetype System.Nullable`1&lt;bool&gt; askUserForLocation, valuetype System.Nullable`1&lt;bool&gt; isTransactional) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Search.AutoSuggest.Models.QueryContext.#ctor(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (originalQuery As String, Optional alteredQuery As String = Nothing, Optional alterationOverrideQuery As String = Nothing, Optional adultIntent As Nullable(Of Boolean) = Nothing, Optional askUserForLocation As Nullable(Of Boolean) = Nothing, Optional isTransactional As Nullable(Of Boolean) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.CognitiveServices.Search.AutoSuggest.Models.QueryContext : string * string * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; Microsoft.Azure.CognitiveServices.Search.AutoSuggest.Models.QueryContext" Usage="new Microsoft.Azure.CognitiveServices.Search.AutoSuggest.Models.QueryContext (originalQuery, alteredQuery, alterationOverrideQuery, adultIntent, askUserForLocation, isTransactional)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.AutoSuggest</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="originalQuery" Type="System.String" />
        <Parameter Name="alteredQuery" Type="System.String" />
        <Parameter Name="alterationOverrideQuery" Type="System.String" />
        <Parameter Name="adultIntent" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="askUserForLocation" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isTransactional" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="isTransactional">To be added.</param>
        <param name="originalQuery">The query string as specified in the
            request.</param>
        <param name="alteredQuery">The query string used by Bing to perform
            the query. Bing uses the altered query string if the original query
            string contained spelling mistakes. For example, if the query
            string is "saling downwind", the altered query string will be
            "sailing downwind". This field is included only if the original
            query string contains a spelling mistake.</param>
        <param name="alterationOverrideQuery">The query string to use to
            force Bing to use the original string. For example, if the query
            string is "saling downwind", the override query string will be
            "+saling downwind". Remember to encode the query string which
            results in "%2Bsaling+downwind". This field is included only if the
            original query string contains a spelling mistake.</param>
        <param name="adultIntent">A Boolean value that indicates whether
            the specified query has adult intent. The value is true if the
            query has adult intent; otherwise, false.</param>
        <param name="askUserForLocation">A Boolean value that indicates
            whether Bing requires the user's location to provide accurate
            results. If you specified the user's location by using the
            X-MSEdge-ClientIP and X-Search-Location headers, you can ignore
            this field. For location aware queries, such as "today's weather"
            or "restaurants near me" that need the user's location to provide
            accurate results, this field is set to true. For location aware
            queries that include the location (for example, "Seattle weather"),
            this field is set to false. This field is also set to false for
            queries that are not location aware, such as "best
            sellers".</param>
        <summary>
            Initializes a new instance of the QueryContext class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdultIntent">
      <MemberSignature Language="C#" Value="public bool? AdultIntent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; AdultIntent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.Search.AutoSuggest.Models.QueryContext.AdultIntent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdultIntent As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.AdultIntent : Nullable&lt;bool&gt;" Usage="Microsoft.Azure.CognitiveServices.Search.AutoSuggest.Models.QueryContext.AdultIntent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.AutoSuggest</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="adultIntent")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="adultIntent")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a Boolean value that indicates whether the specified query has
            adult intent. The value is true if the query has adult intent;
            otherwise, false.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlterationOverrideQuery">
      <MemberSignature Language="C#" Value="public string AlterationOverrideQuery { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AlterationOverrideQuery" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.Search.AutoSuggest.Models.QueryContext.AlterationOverrideQuery" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlterationOverrideQuery As String" />
      <MemberSignature Language="F#" Value="member this.AlterationOverrideQuery : string" Usage="Microsoft.Azure.CognitiveServices.Search.AutoSuggest.Models.QueryContext.AlterationOverrideQuery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.AutoSuggest</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="alterationOverrideQuery")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="alterationOverrideQuery")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the query string to use to force Bing to use the original
            string. For example, if the query string is "saling downwind", the
            override query string will be "+saling downwind". Remember to
            encode the query string which results in "%2Bsaling+downwind". This
            field is included only if the original query string contains a
            spelling mistake.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlteredQuery">
      <MemberSignature Language="C#" Value="public string AlteredQuery { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AlteredQuery" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.Search.AutoSuggest.Models.QueryContext.AlteredQuery" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlteredQuery As String" />
      <MemberSignature Language="F#" Value="member this.AlteredQuery : string" Usage="Microsoft.Azure.CognitiveServices.Search.AutoSuggest.Models.QueryContext.AlteredQuery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.AutoSuggest</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="alteredQuery")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="alteredQuery")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the query string used by Bing to perform the query. Bing uses
            the altered query string if the original query string contained
            spelling mistakes. For example, if the query string is "saling
            downwind", the altered query string will be "sailing downwind".
            This field is included only if the original query string contains a
            spelling mistake.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AskUserForLocation">
      <MemberSignature Language="C#" Value="public bool? AskUserForLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; AskUserForLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.Search.AutoSuggest.Models.QueryContext.AskUserForLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AskUserForLocation As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.AskUserForLocation : Nullable&lt;bool&gt;" Usage="Microsoft.Azure.CognitiveServices.Search.AutoSuggest.Models.QueryContext.AskUserForLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.AutoSuggest</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="askUserForLocation")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="askUserForLocation")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a Boolean value that indicates whether Bing requires the
            user's location to provide accurate results. If you specified the
            user's location by using the X-MSEdge-ClientIP and
            X-Search-Location headers, you can ignore this field. For location
            aware queries, such as "today's weather" or "restaurants near me"
            that need the user's location to provide accurate results, this
            field is set to true. For location aware queries that include the
            location (for example, "Seattle weather"), this field is set to
            false. This field is also set to false for queries that are not
            location aware, such as "best sellers".
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTransactional">
      <MemberSignature Language="C#" Value="public bool? IsTransactional { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsTransactional" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.Search.AutoSuggest.Models.QueryContext.IsTransactional" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTransactional As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsTransactional : Nullable&lt;bool&gt;" Usage="Microsoft.Azure.CognitiveServices.Search.AutoSuggest.Models.QueryContext.IsTransactional" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.AutoSuggest</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="isTransactional")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="isTransactional")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary />
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalQuery">
      <MemberSignature Language="C#" Value="public string OriginalQuery { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalQuery" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.Search.AutoSuggest.Models.QueryContext.OriginalQuery" />
      <MemberSignature Language="VB.NET" Value="Public Property OriginalQuery As String" />
      <MemberSignature Language="F#" Value="member this.OriginalQuery : string with get, set" Usage="Microsoft.Azure.CognitiveServices.Search.AutoSuggest.Models.QueryContext.OriginalQuery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.AutoSuggest</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="originalQuery")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="originalQuery")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the query string as specified in the request.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Search.AutoSuggest.Models.QueryContext.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="queryContext.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.AutoSuggest</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
