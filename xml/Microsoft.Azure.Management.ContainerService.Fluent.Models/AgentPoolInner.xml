<Type Name="AgentPoolInner" FullName="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner">
  <TypeSignature Language="C#" Value="public class AgentPoolInner : Microsoft.Azure.Management.ResourceManager.Fluent.SubResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AgentPoolInner extends Microsoft.Azure.Management.ResourceManager.Fluent.SubResource" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner" />
  <TypeSignature Language="VB.NET" Value="Public Class AgentPoolInner&#xA;Inherits SubResource" />
  <TypeSignature Language="F#" Value="type AgentPoolInner = class&#xA;    inherit SubResource" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.69</AssemblyVersion>
    <AssemblyVersion>1.0.0.70</AssemblyVersion>
    <AssemblyVersion>1.0.0.71</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Management.ResourceManager.Fluent.SubResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.Rest.Serialization.JsonTransformation]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.Rest.Serialization.JsonTransformation&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Agent Pool.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AgentPoolInner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the AgentPoolInner class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AgentPoolInner (string id = default, int? count = default, Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceVMSizeTypes vmSize = default, int? osDiskSizeGB = default, Microsoft.Azure.Management.ContainerService.Fluent.Models.OSDiskType osDiskType = default, Microsoft.Azure.Management.ContainerService.Fluent.Models.KubeletDiskType kubeletDiskType = default, string vnetSubnetID = default, string podSubnetID = default, int? maxPods = default, Microsoft.Azure.Management.ContainerService.Fluent.Models.OSType osType = default, int? maxCount = default, int? minCount = default, bool? enableAutoScaling = default, Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolType agentPoolType = default, Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolMode mode = default, string orchestratorVersion = default, string nodeImageVersion = default, Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolUpgradeSettings upgradeSettings = default, string provisioningState = default, Microsoft.Azure.Management.ContainerService.Fluent.Models.PowerState powerState = default, System.Collections.Generic.IList&lt;string&gt; availabilityZones = default, bool? enableNodePublicIP = default, Microsoft.Azure.Management.ContainerService.Fluent.Models.ScaleSetPriority scaleSetPriority = default, Microsoft.Azure.Management.ContainerService.Fluent.Models.ScaleSetEvictionPolicy scaleSetEvictionPolicy = default, double? spotMaxPrice = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, System.Collections.Generic.IDictionary&lt;string,string&gt; nodeLabels = default, System.Collections.Generic.IList&lt;string&gt; nodeTaints = default, string proximityPlacementGroupID = default, Microsoft.Azure.Management.ContainerService.Fluent.Models.KubeletConfig kubeletConfig = default, Microsoft.Azure.Management.ContainerService.Fluent.Models.LinuxOSConfig linuxOSConfig = default, bool? enableEncryptionAtHost = default, string name = default, string type = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id, valuetype System.Nullable`1&lt;int32&gt; count, class Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceVMSizeTypes vmSize, valuetype System.Nullable`1&lt;int32&gt; osDiskSizeGB, class Microsoft.Azure.Management.ContainerService.Fluent.Models.OSDiskType osDiskType, class Microsoft.Azure.Management.ContainerService.Fluent.Models.KubeletDiskType kubeletDiskType, string vnetSubnetID, string podSubnetID, valuetype System.Nullable`1&lt;int32&gt; maxPods, class Microsoft.Azure.Management.ContainerService.Fluent.Models.OSType osType, valuetype System.Nullable`1&lt;int32&gt; maxCount, valuetype System.Nullable`1&lt;int32&gt; minCount, valuetype System.Nullable`1&lt;bool&gt; enableAutoScaling, class Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolType agentPoolType, class Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolMode mode, string orchestratorVersion, string nodeImageVersion, class Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolUpgradeSettings upgradeSettings, string provisioningState, class Microsoft.Azure.Management.ContainerService.Fluent.Models.PowerState powerState, class System.Collections.Generic.IList`1&lt;string&gt; availabilityZones, valuetype System.Nullable`1&lt;bool&gt; enableNodePublicIP, class Microsoft.Azure.Management.ContainerService.Fluent.Models.ScaleSetPriority scaleSetPriority, class Microsoft.Azure.Management.ContainerService.Fluent.Models.ScaleSetEvictionPolicy scaleSetEvictionPolicy, valuetype System.Nullable`1&lt;float64&gt; spotMaxPrice, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; nodeLabels, class System.Collections.Generic.IList`1&lt;string&gt; nodeTaints, string proximityPlacementGroupID, class Microsoft.Azure.Management.ContainerService.Fluent.Models.KubeletConfig kubeletConfig, class Microsoft.Azure.Management.ContainerService.Fluent.Models.LinuxOSConfig linuxOSConfig, valuetype System.Nullable`1&lt;bool&gt; enableEncryptionAtHost, string name, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.#ctor(System.String,System.Nullable{System.Int32},Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceVMSizeTypes,System.Nullable{System.Int32},Microsoft.Azure.Management.ContainerService.Fluent.Models.OSDiskType,Microsoft.Azure.Management.ContainerService.Fluent.Models.KubeletDiskType,System.String,System.String,System.Nullable{System.Int32},Microsoft.Azure.Management.ContainerService.Fluent.Models.OSType,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolType,Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolMode,System.String,System.String,Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolUpgradeSettings,System.String,Microsoft.Azure.Management.ContainerService.Fluent.Models.PowerState,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},Microsoft.Azure.Management.ContainerService.Fluent.Models.ScaleSetPriority,Microsoft.Azure.Management.ContainerService.Fluent.Models.ScaleSetEvictionPolicy,System.Nullable{System.Double},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{System.String},System.String,Microsoft.Azure.Management.ContainerService.Fluent.Models.KubeletConfig,Microsoft.Azure.Management.ContainerService.Fluent.Models.LinuxOSConfig,System.Nullable{System.Boolean},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional id As String = Nothing, Optional count As Nullable(Of Integer) = Nothing, Optional vmSize As ContainerServiceVMSizeTypes = Nothing, Optional osDiskSizeGB As Nullable(Of Integer) = Nothing, Optional osDiskType As OSDiskType = Nothing, Optional kubeletDiskType As KubeletDiskType = Nothing, Optional vnetSubnetID As String = Nothing, Optional podSubnetID As String = Nothing, Optional maxPods As Nullable(Of Integer) = Nothing, Optional osType As OSType = Nothing, Optional maxCount As Nullable(Of Integer) = Nothing, Optional minCount As Nullable(Of Integer) = Nothing, Optional enableAutoScaling As Nullable(Of Boolean) = Nothing, Optional agentPoolType As AgentPoolType = Nothing, Optional mode As AgentPoolMode = Nothing, Optional orchestratorVersion As String = Nothing, Optional nodeImageVersion As String = Nothing, Optional upgradeSettings As AgentPoolUpgradeSettings = Nothing, Optional provisioningState As String = Nothing, Optional powerState As PowerState = Nothing, Optional availabilityZones As IList(Of String) = Nothing, Optional enableNodePublicIP As Nullable(Of Boolean) = Nothing, Optional scaleSetPriority As ScaleSetPriority = Nothing, Optional scaleSetEvictionPolicy As ScaleSetEvictionPolicy = Nothing, Optional spotMaxPrice As Nullable(Of Double) = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional nodeLabels As IDictionary(Of String, String) = Nothing, Optional nodeTaints As IList(Of String) = Nothing, Optional proximityPlacementGroupID As String = Nothing, Optional kubeletConfig As KubeletConfig = Nothing, Optional linuxOSConfig As LinuxOSConfig = Nothing, Optional enableEncryptionAtHost As Nullable(Of Boolean) = Nothing, Optional name As String = Nothing, Optional type As String = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner : string * Nullable&lt;int&gt; * Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceVMSizeTypes * Nullable&lt;int&gt; * Microsoft.Azure.Management.ContainerService.Fluent.Models.OSDiskType * Microsoft.Azure.Management.ContainerService.Fluent.Models.KubeletDiskType * string * string * Nullable&lt;int&gt; * Microsoft.Azure.Management.ContainerService.Fluent.Models.OSType * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolType * Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolMode * string * string * Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolUpgradeSettings * string * Microsoft.Azure.Management.ContainerService.Fluent.Models.PowerState * System.Collections.Generic.IList&lt;string&gt; * Nullable&lt;bool&gt; * Microsoft.Azure.Management.ContainerService.Fluent.Models.ScaleSetPriority * Microsoft.Azure.Management.ContainerService.Fluent.Models.ScaleSetEvictionPolicy * Nullable&lt;double&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IList&lt;string&gt; * string * Microsoft.Azure.Management.ContainerService.Fluent.Models.KubeletConfig * Microsoft.Azure.Management.ContainerService.Fluent.Models.LinuxOSConfig * Nullable&lt;bool&gt; * string * string -&gt; Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner" Usage="new Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner (id, count, vmSize, osDiskSizeGB, osDiskType, kubeletDiskType, vnetSubnetID, podSubnetID, maxPods, osType, maxCount, minCount, enableAutoScaling, agentPoolType, mode, orchestratorVersion, nodeImageVersion, upgradeSettings, provisioningState, powerState, availabilityZones, enableNodePublicIP, scaleSetPriority, scaleSetEvictionPolicy, spotMaxPrice, tags, nodeLabels, nodeTaints, proximityPlacementGroupID, kubeletConfig, linuxOSConfig, enableEncryptionAtHost, name, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="count" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="vmSize" Type="Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceVMSizeTypes" />
        <Parameter Name="osDiskSizeGB" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="osDiskType" Type="Microsoft.Azure.Management.ContainerService.Fluent.Models.OSDiskType" />
        <Parameter Name="kubeletDiskType" Type="Microsoft.Azure.Management.ContainerService.Fluent.Models.KubeletDiskType" />
        <Parameter Name="vnetSubnetID" Type="System.String" />
        <Parameter Name="podSubnetID" Type="System.String" />
        <Parameter Name="maxPods" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="osType" Type="Microsoft.Azure.Management.ContainerService.Fluent.Models.OSType" />
        <Parameter Name="maxCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="minCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="enableAutoScaling" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="agentPoolType" Type="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolType" />
        <Parameter Name="mode" Type="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolMode" />
        <Parameter Name="orchestratorVersion" Type="System.String" />
        <Parameter Name="nodeImageVersion" Type="System.String" />
        <Parameter Name="upgradeSettings" Type="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolUpgradeSettings" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="powerState" Type="Microsoft.Azure.Management.ContainerService.Fluent.Models.PowerState" />
        <Parameter Name="availabilityZones" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="enableNodePublicIP" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="scaleSetPriority" Type="Microsoft.Azure.Management.ContainerService.Fluent.Models.ScaleSetPriority" />
        <Parameter Name="scaleSetEvictionPolicy" Type="Microsoft.Azure.Management.ContainerService.Fluent.Models.ScaleSetEvictionPolicy" />
        <Parameter Name="spotMaxPrice" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="nodeLabels" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="nodeTaints" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="proximityPlacementGroupID" Type="System.String" />
        <Parameter Name="kubeletConfig" Type="Microsoft.Azure.Management.ContainerService.Fluent.Models.KubeletConfig" />
        <Parameter Name="linuxOSConfig" Type="Microsoft.Azure.Management.ContainerService.Fluent.Models.LinuxOSConfig" />
        <Parameter Name="enableEncryptionAtHost" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <param name="count">Number of agents (VMs) to host docker
            containers. Allowed values must be in the range of 0 to 100
            (inclusive) for user pools and in the range of 1 to 100 (inclusive)
            for system pools. The default value is 1.</param>
        <param name="vmSize">Size of agent VMs. Possible values include:
            'Standard_A1', 'Standard_A10', 'Standard_A11', 'Standard_A1_v2',
            'Standard_A2', 'Standard_A2_v2', 'Standard_A2m_v2', 'Standard_A3',
            'Standard_A4', 'Standard_A4_v2', 'Standard_A4m_v2', 'Standard_A5',
            'Standard_A6', 'Standard_A7', 'Standard_A8', 'Standard_A8_v2',
            'Standard_A8m_v2', 'Standard_A9', 'Standard_B2ms', 'Standard_B2s',
            'Standard_B4ms', 'Standard_B8ms', 'Standard_D1', 'Standard_D11',
            'Standard_D11_v2', 'Standard_D11_v2_Promo', 'Standard_D12',
            'Standard_D12_v2', 'Standard_D12_v2_Promo', 'Standard_D13',
            'Standard_D13_v2', 'Standard_D13_v2_Promo', 'Standard_D14',
            'Standard_D14_v2', 'Standard_D14_v2_Promo', 'Standard_D15_v2',
            'Standard_D16_v3', 'Standard_D16s_v3', 'Standard_D1_v2',
            'Standard_D2', 'Standard_D2_v2', 'Standard_D2_v2_Promo',
            'Standard_D2_v3', 'Standard_D2s_v3', 'Standard_D3',
            'Standard_D32_v3', 'Standard_D32s_v3', 'Standard_D3_v2',
            'Standard_D3_v2_Promo', 'Standard_D4', 'Standard_D4_v2',
            'Standard_D4_v2_Promo', 'Standard_D4_v3', 'Standard_D4s_v3',
            'Standard_D5_v2', 'Standard_D5_v2_Promo', 'Standard_D64_v3',
            'Standard_D64s_v3', 'Standard_D8_v3', 'Standard_D8s_v3',
            'Standard_DS1', 'Standard_DS11', 'Standard_DS11_v2',
            'Standard_DS11_v2_Promo', 'Standard_DS12', 'Standard_DS12_v2',
            'Standard_DS12_v2_Promo', 'Standard_DS13', 'Standard_DS13-2_v2',
            'Standard_DS13-4_v2', 'Standard_DS13_v2', 'Standard_DS13_v2_Promo',
            'Standard_DS14', 'Standard_DS14-4_v2', 'Standard_DS14-8_v2',
            'Standard_DS14_v2', 'Standard_DS14_v2_Promo', 'Standard_DS15_v2',
            'Standard_DS1_v2', 'Standard_DS2', 'Standard_DS2_v2',
            'Standard_DS2_v2_Promo', 'Standard_DS3', 'Standard_DS3_v2',
            'Standard_DS3_v2_Promo', 'Standard_DS4', 'Standard_DS4_v2',
            'Standard_DS4_v2_Promo', 'Standard_DS5_v2',
            'Standard_DS5_v2_Promo', 'Standard_E16_v3', 'Standard_E16s_v3',
            'Standard_E2_v3', 'Standard_E2s_v3', 'Standard_E32-16s_v3',
            'Standard_E32-8s_v3', 'Standard_E32_v3', 'Standard_E32s_v3',
            'Standard_E4_v3', 'Standard_E4s_v3', 'Standard_E64-16s_v3',
            'Standard_E64-32s_v3', 'Standard_E64_v3', 'Standard_E64s_v3',
            'Standard_E8_v3', 'Standard_E8s_v3', 'Standard_F1', 'Standard_F16',
            'Standard_F16s', 'Standard_F16s_v2', 'Standard_F1s', 'Standard_F2',
            'Standard_F2s', 'Standard_F2s_v2', 'Standard_F32s_v2',
            'Standard_F4', 'Standard_F4s', 'Standard_F4s_v2',
            'Standard_F64s_v2', 'Standard_F72s_v2', 'Standard_F8',
            'Standard_F8s', 'Standard_F8s_v2', 'Standard_G1', 'Standard_G2',
            'Standard_G3', 'Standard_G4', 'Standard_G5', 'Standard_GS1',
            'Standard_GS2', 'Standard_GS3', 'Standard_GS4', 'Standard_GS4-4',
            'Standard_GS4-8', 'Standard_GS5', 'Standard_GS5-16',
            'Standard_GS5-8', 'Standard_H16', 'Standard_H16m',
            'Standard_H16mr', 'Standard_H16r', 'Standard_H8', 'Standard_H8m',
            'Standard_L16s', 'Standard_L32s', 'Standard_L4s', 'Standard_L8s',
            'Standard_M128-32ms', 'Standard_M128-64ms', 'Standard_M128ms',
            'Standard_M128s', 'Standard_M64-16ms', 'Standard_M64-32ms',
            'Standard_M64ms', 'Standard_M64s', 'Standard_NC12',
            'Standard_NC12s_v2', 'Standard_NC12s_v3', 'Standard_NC24',
            'Standard_NC24r', 'Standard_NC24rs_v2', 'Standard_NC24rs_v3',
            'Standard_NC24s_v2', 'Standard_NC24s_v3', 'Standard_NC6',
            'Standard_NC6s_v2', 'Standard_NC6s_v3', 'Standard_ND12s',
            'Standard_ND24rs', 'Standard_ND24s', 'Standard_ND6s',
            'Standard_NV12', 'Standard_NV24', 'Standard_NV6'</param>
        <param name="osDiskSizeGB">OS Disk Size in GB to be used to specify
            the disk size for every machine in this master/agent pool. If you
            specify 0, it will apply the default osDisk size according to the
            vmSize specified.</param>
        <param name="osDiskType">OS disk type to be used for machines in a
            given agent pool. Allowed values are 'Ephemeral' and 'Managed'.
            Defaults to 'Managed'. May not be changed after creation. Possible
            values include: 'Managed', 'Ephemeral'</param>
        <param name="kubeletDiskType">KubeletDiskType determines the
            placement of emptyDir volumes, container runtime data root, and
            Kubelet ephemeral storage. Currently allows one value, OS,
            resulting in Kubelet using the OS disk for data. Possible values
            include: 'OS'</param>
        <param name="vnetSubnetID">VNet SubnetID specifies the VNet's
            subnet identifier for nodes and maybe pods</param>
        <param name="podSubnetID">Pod SubnetID specifies the VNet's subnet
            identifier for pods.</param>
        <param name="maxPods">Maximum number of pods that can run on a
            node.</param>
        <param name="osType">OsType to be used to specify os type. Choose
            from Linux and Windows. Default to Linux. Possible values include:
            'Linux', 'Windows'</param>
        <param name="maxCount">Maximum number of nodes for
            auto-scaling</param>
        <param name="minCount">Minimum number of nodes for
            auto-scaling</param>
        <param name="enableAutoScaling">Whether to enable
            auto-scaler</param>
        <param name="agentPoolType">AgentPoolType represents types of an
            agent pool. Possible values include: 'VirtualMachineScaleSets',
            'AvailabilitySet'</param>
        <param name="mode">AgentPoolMode represents mode of an agent pool.
            Possible values include: 'System', 'User'</param>
        <param name="orchestratorVersion">Version of orchestrator specified
            when creating the managed cluster.</param>
        <param name="nodeImageVersion">Version of node image</param>
        <param name="upgradeSettings">Settings for upgrading the
            agentpool</param>
        <param name="provisioningState">The current deployment or
            provisioning state, which only appears in the response.</param>
        <param name="powerState">Describes whether the Agent Pool is
            Running or Stopped</param>
        <param name="availabilityZones">Availability zones for nodes. Must
            use VirtualMachineScaleSets AgentPoolType.</param>
        <param name="enableNodePublicIP">Enable public IP for nodes</param>
        <param name="scaleSetPriority">ScaleSetPriority to be used to
            specify virtual machine scale set priority. Default to regular.
            Possible values include: 'Spot', 'Regular'</param>
        <param name="scaleSetEvictionPolicy">ScaleSetEvictionPolicy to be
            used to specify eviction policy for Spot virtual machine scale set.
            Default to Delete. Possible values include: 'Delete',
            'Deallocate'</param>
        <param name="spotMaxPrice">SpotMaxPrice to be used to specify the
            maximum price you are willing to pay in US Dollars. Possible values
            are any decimal value greater than zero or -1 which indicates
            default price to be up-to on-demand.</param>
        <param name="tags">Agent pool tags to be persisted on the agent
            pool virtual machine scale set.</param>
        <param name="nodeLabels">Agent pool node labels to be persisted
            across all nodes in agent pool.</param>
        <param name="nodeTaints">Taints added to new nodes during node pool
            create and scale. For example, key=value:NoSchedule.</param>
        <param name="proximityPlacementGroupID">The ID for Proximity
            Placement Group.</param>
        <param name="kubeletConfig">KubeletConfig specifies the
            configuration of kubelet on agent nodes.</param>
        <param name="linuxOSConfig">LinuxOSConfig specifies the OS
            configuration of linux agent nodes.</param>
        <param name="enableEncryptionAtHost">Whether to enable
            EncryptionAtHost</param>
        <param name="name">The name of the resource that is unique within a
            resource group. This name can be used to access the
            resource.</param>
        <param name="type">Resource type</param>
        <summary>
            Initializes a new instance of the AgentPoolInner class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AgentPoolType">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolType AgentPoolType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolType AgentPoolType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.AgentPoolType" />
      <MemberSignature Language="VB.NET" Value="Public Property AgentPoolType As AgentPoolType" />
      <MemberSignature Language="F#" Value="member this.AgentPoolType : Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolType with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.AgentPoolType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.type")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.type")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets agentPoolType represents types of an agent pool.
            Possible values include: 'VirtualMachineScaleSets',
            'AvailabilitySet'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailabilityZones">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; AvailabilityZones { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; AvailabilityZones" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.AvailabilityZones" />
      <MemberSignature Language="VB.NET" Value="Public Property AvailabilityZones As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.AvailabilityZones : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.AvailabilityZones" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.availabilityZones")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.availabilityZones")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets availability zones for nodes. Must use
            VirtualMachineScaleSets AgentPoolType.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int? Count { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.Count" />
      <MemberSignature Language="VB.NET" Value="Public Property Count As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Count : Nullable&lt;int&gt; with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.count")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.count")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets number of agents (VMs) to host docker containers.
            Allowed values must be in the range of 0 to 100 (inclusive) for
            user pools and in the range of 1 to 100 (inclusive) for system
            pools. The default value is 1.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoScaling">
      <MemberSignature Language="C#" Value="public bool? EnableAutoScaling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; EnableAutoScaling" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.EnableAutoScaling" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoScaling As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.EnableAutoScaling : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.EnableAutoScaling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.enableAutoScaling")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.enableAutoScaling")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets whether to enable auto-scaler
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEncryptionAtHost">
      <MemberSignature Language="C#" Value="public bool? EnableEncryptionAtHost { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; EnableEncryptionAtHost" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.EnableEncryptionAtHost" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableEncryptionAtHost As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.EnableEncryptionAtHost : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.EnableEncryptionAtHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.enableEncryptionAtHost")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.enableEncryptionAtHost")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets whether to enable EncryptionAtHost
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableNodePublicIP">
      <MemberSignature Language="C#" Value="public bool? EnableNodePublicIP { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; EnableNodePublicIP" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.EnableNodePublicIP" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableNodePublicIP As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.EnableNodePublicIP : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.EnableNodePublicIP" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.enableNodePublicIP")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.enableNodePublicIP")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets enable public IP for nodes
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KubeletConfig">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ContainerService.Fluent.Models.KubeletConfig KubeletConfig { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ContainerService.Fluent.Models.KubeletConfig KubeletConfig" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.KubeletConfig" />
      <MemberSignature Language="VB.NET" Value="Public Property KubeletConfig As KubeletConfig" />
      <MemberSignature Language="F#" Value="member this.KubeletConfig : Microsoft.Azure.Management.ContainerService.Fluent.Models.KubeletConfig with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.KubeletConfig" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.kubeletConfig")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.kubeletConfig")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ContainerService.Fluent.Models.KubeletConfig</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets kubeletConfig specifies the configuration of kubelet
            on agent nodes.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KubeletDiskType">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ContainerService.Fluent.Models.KubeletDiskType KubeletDiskType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ContainerService.Fluent.Models.KubeletDiskType KubeletDiskType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.KubeletDiskType" />
      <MemberSignature Language="VB.NET" Value="Public Property KubeletDiskType As KubeletDiskType" />
      <MemberSignature Language="F#" Value="member this.KubeletDiskType : Microsoft.Azure.Management.ContainerService.Fluent.Models.KubeletDiskType with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.KubeletDiskType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.kubeletDiskType")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.kubeletDiskType")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ContainerService.Fluent.Models.KubeletDiskType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets kubeletDiskType determines the placement of emptyDir
            volumes, container runtime data root, and Kubelet ephemeral
            storage. Currently allows one value, OS, resulting in Kubelet using
            the OS disk for data. Possible values include: 'OS'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinuxOSConfig">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ContainerService.Fluent.Models.LinuxOSConfig LinuxOSConfig { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ContainerService.Fluent.Models.LinuxOSConfig LinuxOSConfig" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.LinuxOSConfig" />
      <MemberSignature Language="VB.NET" Value="Public Property LinuxOSConfig As LinuxOSConfig" />
      <MemberSignature Language="F#" Value="member this.LinuxOSConfig : Microsoft.Azure.Management.ContainerService.Fluent.Models.LinuxOSConfig with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.LinuxOSConfig" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.linuxOSConfig")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.linuxOSConfig")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ContainerService.Fluent.Models.LinuxOSConfig</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets linuxOSConfig specifies the OS configuration of linux
            agent nodes.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCount">
      <MemberSignature Language="C#" Value="public int? MaxCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MaxCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.MaxCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCount As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MaxCount : Nullable&lt;int&gt; with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.MaxCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.maxCount")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.maxCount")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets maximum number of nodes for auto-scaling
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPods">
      <MemberSignature Language="C#" Value="public int? MaxPods { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MaxPods" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.MaxPods" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPods As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MaxPods : Nullable&lt;int&gt; with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.MaxPods" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.maxPods")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.maxPods")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets maximum number of pods that can run on a node.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinCount">
      <MemberSignature Language="C#" Value="public int? MinCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MinCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.MinCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MinCount As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MinCount : Nullable&lt;int&gt; with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.MinCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.minCount")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.minCount")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets minimum number of nodes for auto-scaling
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolMode Mode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As AgentPoolMode" />
      <MemberSignature Language="F#" Value="member this.Mode : Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolMode with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.mode")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.mode")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets agentPoolMode represents mode of an agent pool.
            Possible values include: 'System', 'User'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="name")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="name")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the resource that is unique within a resource
            group. This name can be used to access the resource.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeImageVersion">
      <MemberSignature Language="C#" Value="public string NodeImageVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NodeImageVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.NodeImageVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NodeImageVersion As String" />
      <MemberSignature Language="F#" Value="member this.NodeImageVersion : string" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.NodeImageVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.nodeImageVersion")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.nodeImageVersion")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets version of node image
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeLabels">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; NodeLabels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; NodeLabels" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.NodeLabels" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeLabels As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.NodeLabels : System.Collections.Generic.IDictionary&lt;string, string&gt; with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.NodeLabels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.nodeLabels")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.nodeLabels")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets agent pool node labels to be persisted across all
            nodes in agent pool.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeTaints">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; NodeTaints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; NodeTaints" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.NodeTaints" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeTaints As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.NodeTaints : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.NodeTaints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.nodeTaints")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.nodeTaints")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets taints added to new nodes during node pool create and
            scale. For example, key=value:NoSchedule.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrchestratorVersion">
      <MemberSignature Language="C#" Value="public string OrchestratorVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrchestratorVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.OrchestratorVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property OrchestratorVersion As String" />
      <MemberSignature Language="F#" Value="member this.OrchestratorVersion : string with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.OrchestratorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.orchestratorVersion")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.orchestratorVersion")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets version of orchestrator specified when creating the
            managed cluster.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OsDiskSizeGB">
      <MemberSignature Language="C#" Value="public int? OsDiskSizeGB { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; OsDiskSizeGB" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.OsDiskSizeGB" />
      <MemberSignature Language="VB.NET" Value="Public Property OsDiskSizeGB As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.OsDiskSizeGB : Nullable&lt;int&gt; with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.OsDiskSizeGB" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.osDiskSizeGB")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.osDiskSizeGB")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets OS Disk Size in GB to be used to specify the disk size
            for every machine in this master/agent pool. If you specify 0, it
            will apply the default osDisk size according to the vmSize
            specified.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OsDiskType">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ContainerService.Fluent.Models.OSDiskType OsDiskType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ContainerService.Fluent.Models.OSDiskType OsDiskType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.OsDiskType" />
      <MemberSignature Language="VB.NET" Value="Public Property OsDiskType As OSDiskType" />
      <MemberSignature Language="F#" Value="member this.OsDiskType : Microsoft.Azure.Management.ContainerService.Fluent.Models.OSDiskType with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.OsDiskType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.osDiskType")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.osDiskType")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ContainerService.Fluent.Models.OSDiskType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets OS disk type to be used for machines in a given agent
            pool. Allowed values are 'Ephemeral' and 'Managed'. Defaults to
            'Managed'. May not be changed after creation. Possible values
            include: 'Managed', 'Ephemeral'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OsType">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ContainerService.Fluent.Models.OSType OsType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ContainerService.Fluent.Models.OSType OsType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.OsType" />
      <MemberSignature Language="VB.NET" Value="Public Property OsType As OSType" />
      <MemberSignature Language="F#" Value="member this.OsType : Microsoft.Azure.Management.ContainerService.Fluent.Models.OSType with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.OsType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.osType")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.osType")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ContainerService.Fluent.Models.OSType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets osType to be used to specify os type. Choose from
            Linux and Windows. Default to Linux. Possible values include:
            'Linux', 'Windows'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PodSubnetID">
      <MemberSignature Language="C#" Value="public string PodSubnetID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PodSubnetID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.PodSubnetID" />
      <MemberSignature Language="VB.NET" Value="Public Property PodSubnetID As String" />
      <MemberSignature Language="F#" Value="member this.PodSubnetID : string with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.PodSubnetID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.podSubnetID")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.podSubnetID")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets pod SubnetID specifies the VNet's subnet identifier
            for pods.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PowerState">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ContainerService.Fluent.Models.PowerState PowerState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ContainerService.Fluent.Models.PowerState PowerState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.PowerState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PowerState As PowerState" />
      <MemberSignature Language="F#" Value="member this.PowerState : Microsoft.Azure.Management.ContainerService.Fluent.Models.PowerState" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.PowerState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.powerState")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.powerState")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ContainerService.Fluent.Models.PowerState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets describes whether the Agent Pool is Running or Stopped
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvisioningState">
      <MemberSignature Language="C#" Value="public string ProvisioningState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProvisioningState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.ProvisioningState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProvisioningState As String" />
      <MemberSignature Language="F#" Value="member this.ProvisioningState : string" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.ProvisioningState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.provisioningState")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.provisioningState")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the current deployment or provisioning state, which only
            appears in the response.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProximityPlacementGroupID">
      <MemberSignature Language="C#" Value="public string ProximityPlacementGroupID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProximityPlacementGroupID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.ProximityPlacementGroupID" />
      <MemberSignature Language="VB.NET" Value="Public Property ProximityPlacementGroupID As String" />
      <MemberSignature Language="F#" Value="member this.ProximityPlacementGroupID : string with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.ProximityPlacementGroupID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.proximityPlacementGroupID")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.proximityPlacementGroupID")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the ID for Proximity Placement Group.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleSetEvictionPolicy">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ContainerService.Fluent.Models.ScaleSetEvictionPolicy ScaleSetEvictionPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ContainerService.Fluent.Models.ScaleSetEvictionPolicy ScaleSetEvictionPolicy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.ScaleSetEvictionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property ScaleSetEvictionPolicy As ScaleSetEvictionPolicy" />
      <MemberSignature Language="F#" Value="member this.ScaleSetEvictionPolicy : Microsoft.Azure.Management.ContainerService.Fluent.Models.ScaleSetEvictionPolicy with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.ScaleSetEvictionPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.scaleSetEvictionPolicy")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.scaleSetEvictionPolicy")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ContainerService.Fluent.Models.ScaleSetEvictionPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets scaleSetEvictionPolicy to be used to specify eviction
            policy for Spot virtual machine scale set. Default to Delete.
            Possible values include: 'Delete', 'Deallocate'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleSetPriority">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ContainerService.Fluent.Models.ScaleSetPriority ScaleSetPriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ContainerService.Fluent.Models.ScaleSetPriority ScaleSetPriority" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.ScaleSetPriority" />
      <MemberSignature Language="VB.NET" Value="Public Property ScaleSetPriority As ScaleSetPriority" />
      <MemberSignature Language="F#" Value="member this.ScaleSetPriority : Microsoft.Azure.Management.ContainerService.Fluent.Models.ScaleSetPriority with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.ScaleSetPriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.scaleSetPriority")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.scaleSetPriority")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ContainerService.Fluent.Models.ScaleSetPriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets scaleSetPriority to be used to specify virtual machine
            scale set priority. Default to regular. Possible values include:
            'Spot', 'Regular'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpotMaxPrice">
      <MemberSignature Language="C#" Value="public double? SpotMaxPrice { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; SpotMaxPrice" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.SpotMaxPrice" />
      <MemberSignature Language="VB.NET" Value="Public Property SpotMaxPrice As Nullable(Of Double)" />
      <MemberSignature Language="F#" Value="member this.SpotMaxPrice : Nullable&lt;double&gt; with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.SpotMaxPrice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.spotMaxPrice")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.spotMaxPrice")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets spotMaxPrice to be used to specify the maximum price
            you are willing to pay in US Dollars. Possible values are any
            decimal value greater than zero or -1 which indicates default price
            to be up-to on-demand.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tags">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Tags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Tags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.Tags" />
      <MemberSignature Language="VB.NET" Value="Public Property Tags As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.Tags : System.Collections.Generic.IDictionary&lt;string, string&gt; with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.Tags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.tags")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.tags")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets agent pool tags to be persisted on the agent pool
            virtual machine scale set.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" />
      <MemberSignature Language="F#" Value="member this.Type : string" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="type")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="type")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets resource type
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpgradeSettings">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolUpgradeSettings UpgradeSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolUpgradeSettings UpgradeSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.UpgradeSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property UpgradeSettings As AgentPoolUpgradeSettings" />
      <MemberSignature Language="F#" Value="member this.UpgradeSettings : Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolUpgradeSettings with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.UpgradeSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.upgradeSettings")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.upgradeSettings")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolUpgradeSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets settings for upgrading the agentpool
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="agentPoolInner.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
    <Member MemberName="VmSize">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceVMSizeTypes VmSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceVMSizeTypes VmSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.VmSize" />
      <MemberSignature Language="VB.NET" Value="Public Property VmSize As ContainerServiceVMSizeTypes" />
      <MemberSignature Language="F#" Value="member this.VmSize : Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceVMSizeTypes with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.VmSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.vmSize")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.vmSize")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceVMSizeTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets size of agent VMs. Possible values include:
            'Standard_A1', 'Standard_A10', 'Standard_A11', 'Standard_A1_v2',
            'Standard_A2', 'Standard_A2_v2', 'Standard_A2m_v2', 'Standard_A3',
            'Standard_A4', 'Standard_A4_v2', 'Standard_A4m_v2', 'Standard_A5',
            'Standard_A6', 'Standard_A7', 'Standard_A8', 'Standard_A8_v2',
            'Standard_A8m_v2', 'Standard_A9', 'Standard_B2ms', 'Standard_B2s',
            'Standard_B4ms', 'Standard_B8ms', 'Standard_D1', 'Standard_D11',
            'Standard_D11_v2', 'Standard_D11_v2_Promo', 'Standard_D12',
            'Standard_D12_v2', 'Standard_D12_v2_Promo', 'Standard_D13',
            'Standard_D13_v2', 'Standard_D13_v2_Promo', 'Standard_D14',
            'Standard_D14_v2', 'Standard_D14_v2_Promo', 'Standard_D15_v2',
            'Standard_D16_v3', 'Standard_D16s_v3', 'Standard_D1_v2',
            'Standard_D2', 'Standard_D2_v2', 'Standard_D2_v2_Promo',
            'Standard_D2_v3', 'Standard_D2s_v3', 'Standard_D3',
            'Standard_D32_v3', 'Standard_D32s_v3', 'Standard_D3_v2',
            'Standard_D3_v2_Promo', 'Standard_D4', 'Standard_D4_v2',
            'Standard_D4_v2_Promo', 'Standard_D4_v3', 'Standard_D4s_v3',
            'Standard_D5_v2', 'Standard_D5_v2_Promo', 'Standard_D64_v3',
            'Standard_D64s_v3', 'Standard_D8_v3', 'Standard_D8s_v3',
            'Standard_DS1', 'Standard_DS11', 'Standard_DS11_v2',
            'Standard_DS11_v2_Promo', 'Standard_DS12', 'Standard_DS12_v2',
            'Standard_DS12_v2_Promo', 'Standard_DS13', 'Standard_DS13-2_v2',
            'Standard_DS13-4_v2', 'Standard_DS13_v2', 'Standard_DS13_v2_Promo',
            'Standard_DS14', 'Standard_DS14-4_v2', 'Standard_DS14-8_v2',
            'Standard_DS14_v2', 'Standard_DS14_v2_Promo', 'Standard_DS15_v2',
            'Standard_DS1_v2', 'Standard_DS2', 'Standard_DS2_v2',
            'Standard_DS2_v2_Promo', 'Standard_DS3', 'Standard_DS3_v2',
            'Standard_DS3_v2_Promo', 'Standard_DS4', 'Standard_DS4_v2',
            'Standard_DS4_v2_Promo', 'Standard_DS5_v2',
            'Standard_DS5_v2_Promo', 'Standard_E16_v3', 'Standard_E16s_v3',
            'Standard_E2_v3', 'Standard_E2s_v3', 'Standard_E32-16s_v3',
            'Standard_E32-8s_v3', 'Standard_E32_v3', 'Standard_E32s_v3',
            'Standard_E4_v3', 'Standard_E4s_v3', 'Standard_E64-16s_v3',
            'Standard_E64-32s_v3', 'Standard_E64_v3', 'Standard_E64s_v3',
            'Standard_E8_v3', 'Standard_E8s_v3', 'Standard_F1', 'Standard_F16',
            'Standard_F16s', 'Standard_F16s_v2', 'Standard_F1s', 'Standard_F2',
            'Standard_F2s', 'Standard_F2s_v2', 'Standard_F32s_v2',
            'Standard_F4', 'Standard_F4s', 'Standard_F4s_v2',
            'Standard_F64s_v2', 'Standard_F72s_v2', 'Standard_F8',
            'Standard_F8s', 'Standard_F8s_v2', 'Standard_G1', 'Standard_G2',
            'Standard_G3', 'Standard_G4', 'Standard_G5', 'Standard_GS1',
            'Standard_GS2', 'Standard_GS3', 'Standard_GS4', 'Standard_GS4-4',
            'Standard_GS4-8', 'Standard_GS5', 'Standard_GS5-16',
            'Standard_GS5-8', 'Standard_H16', 'Standard_H16m',
            'Standard_H16mr', 'Standard_H16r', 'Standard_H8', 'Standard_H8m',
            'Standard_L16s', 'Standard_L32s', 'Standard_L4s', 'Standard_L8s',
            'Standard_M128-32ms', 'Standard_M128-64ms', 'Standard_M128ms',
            'Standard_M128s', 'Standard_M64-16ms', 'Standard_M64-32ms',
            'Standard_M64ms', 'Standard_M64s', 'Standard_NC12',
            'Standard_NC12s_v2', 'Standard_NC12s_v3', 'Standard_NC24',
            'Standard_NC24r', 'Standard_NC24rs_v2', 'Standard_NC24rs_v3',
            'Standard_NC24s_v2', 'Standard_NC24s_v3', 'Standard_NC6',
            'Standard_NC6s_v2', 'Standard_NC6s_v3', 'Standard_ND12s',
            'Standard_ND24rs', 'Standard_ND24s', 'Standard_ND6s',
            'Standard_NV12', 'Standard_NV24', 'Standard_NV6'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VnetSubnetID">
      <MemberSignature Language="C#" Value="public string VnetSubnetID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VnetSubnetID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.VnetSubnetID" />
      <MemberSignature Language="VB.NET" Value="Public Property VnetSubnetID As String" />
      <MemberSignature Language="F#" Value="member this.VnetSubnetID : string with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.AgentPoolInner.VnetSubnetID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.69</AssemblyVersion>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.vnetSubnetID")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.vnetSubnetID")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets vNet SubnetID specifies the VNet's subnet identifier
            for nodes and maybe pods
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
