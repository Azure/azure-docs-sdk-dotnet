<Type Name="ContainerServiceAgentPoolProfile" FullName="Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile">
  <TypeSignature Language="C#" Value="public class ContainerServiceAgentPoolProfile" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContainerServiceAgentPoolProfile extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile" />
  <TypeSignature Language="VB.NET" Value="Public Class ContainerServiceAgentPoolProfile" />
  <TypeSignature Language="F#" Value="type ContainerServiceAgentPoolProfile = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Profile for the container service agent pool.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContainerServiceAgentPoolProfile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the ContainerServiceAgentPoolProfile
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContainerServiceAgentPoolProfile (string name, string vmSize, Nullable&lt;int&gt; count = null, Nullable&lt;int&gt; osDiskSizeGB = null, string dnsPrefix = null, string fqdn = null, System.Collections.Generic.IList&lt;Nullable&lt;int&gt;&gt; ports = null, string storageProfile = null, string vnetSubnetID = null, string osType = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string vmSize, valuetype System.Nullable`1&lt;int32&gt; count, valuetype System.Nullable`1&lt;int32&gt; osDiskSizeGB, string dnsPrefix, string fqdn, class System.Collections.Generic.IList`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; ports, string storageProfile, string vnetSubnetID, string osType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.IList{System.Nullable{System.Int32}},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, vmSize As String, Optional count As Nullable(Of Integer) = null, Optional osDiskSizeGB As Nullable(Of Integer) = null, Optional dnsPrefix As String = null, Optional fqdn As String = null, Optional ports As IList(Of Nullable(Of Integer)) = null, Optional storageProfile As String = null, Optional vnetSubnetID As String = null, Optional osType As String = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile : string * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * string * System.Collections.Generic.IList&lt;Nullable&lt;int&gt;&gt; * string * string * string -&gt; Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile" Usage="new Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile (name, vmSize, count, osDiskSizeGB, dnsPrefix, fqdn, ports, storageProfile, vnetSubnetID, osType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="vmSize" Type="System.String" />
        <Parameter Name="count" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="osDiskSizeGB" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="dnsPrefix" Type="System.String" />
        <Parameter Name="fqdn" Type="System.String" />
        <Parameter Name="ports" Type="System.Collections.Generic.IList&lt;System.Nullable&lt;System.Int32&gt;&gt;" />
        <Parameter Name="storageProfile" Type="System.String" />
        <Parameter Name="vnetSubnetID" Type="System.String" />
        <Parameter Name="osType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Unique name of the agent pool profile in the
            context of the subscription and resource group.</param>
        <param name="vmSize">Size of agent VMs. Possible values include:
            'Standard_A1', 'Standard_A10', 'Standard_A11', 'Standard_A1_v2',
            'Standard_A2', 'Standard_A2_v2', 'Standard_A2m_v2', 'Standard_A3',
            'Standard_A4', 'Standard_A4_v2', 'Standard_A4m_v2', 'Standard_A5',
            'Standard_A6', 'Standard_A7', 'Standard_A8', 'Standard_A8_v2',
            'Standard_A8m_v2', 'Standard_A9', 'Standard_B2ms', 'Standard_B2s',
            'Standard_B4ms', 'Standard_B8ms', 'Standard_D1', 'Standard_D11',
            'Standard_D11_v2', 'Standard_D11_v2_Promo', 'Standard_D12',
            'Standard_D12_v2', 'Standard_D12_v2_Promo', 'Standard_D13',
            'Standard_D13_v2', 'Standard_D13_v2_Promo', 'Standard_D14',
            'Standard_D14_v2', 'Standard_D14_v2_Promo', 'Standard_D15_v2',
            'Standard_D16_v3', 'Standard_D16s_v3', 'Standard_D1_v2',
            'Standard_D2', 'Standard_D2_v2', 'Standard_D2_v2_Promo',
            'Standard_D2_v3', 'Standard_D2s_v3', 'Standard_D3',
            'Standard_D32_v3', 'Standard_D32s_v3', 'Standard_D3_v2',
            'Standard_D3_v2_Promo', 'Standard_D4', 'Standard_D4_v2',
            'Standard_D4_v2_Promo', 'Standard_D4_v3', 'Standard_D4s_v3',
            'Standard_D5_v2', 'Standard_D5_v2_Promo', 'Standard_D64_v3',
            'Standard_D64s_v3', 'Standard_D8_v3', 'Standard_D8s_v3',
            'Standard_DS1', 'Standard_DS11', 'Standard_DS11_v2',
            'Standard_DS11_v2_Promo', 'Standard_DS12', 'Standard_DS12_v2',
            'Standard_DS12_v2_Promo', 'Standard_DS13', 'Standard_DS13-2_v2',
            'Standard_DS13-4_v2', 'Standard_DS13_v2', 'Standard_DS13_v2_Promo',
            'Standard_DS14', 'Standard_DS14-4_v2', 'Standard_DS14-8_v2',
            'Standard_DS14_v2', 'Standard_DS14_v2_Promo', 'Standard_DS15_v2',
            'Standard_DS1_v2', 'Standard_DS2', 'Standard_DS2_v2',
            'Standard_DS2_v2_Promo', 'Standard_DS3', 'Standard_DS3_v2',
            'Standard_DS3_v2_Promo', 'Standard_DS4', 'Standard_DS4_v2',
            'Standard_DS4_v2_Promo', 'Standard_DS5_v2',
            'Standard_DS5_v2_Promo', 'Standard_E16_v3', 'Standard_E16s_v3',
            'Standard_E2_v3', 'Standard_E2s_v3', 'Standard_E32-16s_v3',
            'Standard_E32-8s_v3', 'Standard_E32_v3', 'Standard_E32s_v3',
            'Standard_E4_v3', 'Standard_E4s_v3', 'Standard_E64-16s_v3',
            'Standard_E64-32s_v3', 'Standard_E64_v3', 'Standard_E64s_v3',
            'Standard_E8_v3', 'Standard_E8s_v3', 'Standard_F1', 'Standard_F16',
            'Standard_F16s', 'Standard_F16s_v2', 'Standard_F1s', 'Standard_F2',
            'Standard_F2s', 'Standard_F2s_v2', 'Standard_F32s_v2',
            'Standard_F4', 'Standard_F4s', 'Standard_F4s_v2',
            'Standard_F64s_v2', 'Standard_F72s_v2', 'Standard_F8',
            'Standard_F8s', 'Standard_F8s_v2', 'Standard_G1', 'Standard_G2',
            'Standard_G3', 'Standard_G4', 'Standard_G5', 'Standard_GS1',
            'Standard_GS2', 'Standard_GS3', 'Standard_GS4', 'Standard_GS4-4',
            'Standard_GS4-8', 'Standard_GS5', 'Standard_GS5-16',
            'Standard_GS5-8', 'Standard_H16', 'Standard_H16m',
            'Standard_H16mr', 'Standard_H16r', 'Standard_H8', 'Standard_H8m',
            'Standard_L16s', 'Standard_L32s', 'Standard_L4s', 'Standard_L8s',
            'Standard_M128-32ms', 'Standard_M128-64ms', 'Standard_M128ms',
            'Standard_M128s', 'Standard_M64-16ms', 'Standard_M64-32ms',
            'Standard_M64ms', 'Standard_M64s', 'Standard_NC12',
            'Standard_NC12s_v2', 'Standard_NC12s_v3', 'Standard_NC24',
            'Standard_NC24r', 'Standard_NC24rs_v2', 'Standard_NC24rs_v3',
            'Standard_NC24s_v2', 'Standard_NC24s_v3', 'Standard_NC6',
            'Standard_NC6s_v2', 'Standard_NC6s_v3', 'Standard_ND12s',
            'Standard_ND24rs', 'Standard_ND24s', 'Standard_ND6s',
            'Standard_NV12', 'Standard_NV24', 'Standard_NV6'</param>
        <param name="count">Number of agents (VMs) to host docker
            containers. Allowed values must be in the range of 1 to 100
            (inclusive). The default value is 1. </param>
        <param name="osDiskSizeGB">OS Disk Size in GB to be used to specify
            the disk size for every machine in this master/agent pool. If you
            specify 0, it will apply the default osDisk size according to the
            vmSize specified.</param>
        <param name="dnsPrefix">DNS prefix to be used to create the FQDN
            for the agent pool.</param>
        <param name="fqdn">FDQN for the agent pool.</param>
        <param name="ports">Ports number array used to expose on this agent
            pool. The default opened ports are different based on your choice
            of orchestrator.</param>
        <param name="storageProfile">Storage profile specifies what kind of
            storage used. Choose from StorageAccount and ManagedDisks. Leave it
            empty, we will choose for you based on the orchestrator choice.
            Possible values include: 'StorageAccount', 'ManagedDisks'</param>
        <param name="vnetSubnetID">VNet SubnetID specifies the vnet's
            subnet identifier.</param>
        <param name="osType">OsType to be used to specify os type. Choose
            from Linux and Windows. Default to Linux. Possible values include:
            'Linux', 'Windows'</param>
        <summary>
            Initializes a new instance of the ContainerServiceAgentPoolProfile
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; Count { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile.Count" />
      <MemberSignature Language="VB.NET" Value="Public Property Count As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Count : Nullable&lt;int&gt; with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="count")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets number of agents (VMs) to host docker containers.
            Allowed values must be in the range of 1 to 100 (inclusive). The
            default value is 1.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DnsPrefix">
      <MemberSignature Language="C#" Value="public string DnsPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DnsPrefix" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile.DnsPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property DnsPrefix As String" />
      <MemberSignature Language="F#" Value="member this.DnsPrefix : string with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile.DnsPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="dnsPrefix")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets DNS prefix to be used to create the FQDN for the agent
            pool.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fqdn">
      <MemberSignature Language="C#" Value="public string Fqdn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Fqdn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile.Fqdn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Fqdn As String" />
      <MemberSignature Language="F#" Value="member this.Fqdn : string" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile.Fqdn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="fqdn")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets FDQN for the agent pool.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="name")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets unique name of the agent pool profile in the context
            of the subscription and resource group.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OsDiskSizeGB">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; OsDiskSizeGB { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; OsDiskSizeGB" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile.OsDiskSizeGB" />
      <MemberSignature Language="VB.NET" Value="Public Property OsDiskSizeGB As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.OsDiskSizeGB : Nullable&lt;int&gt; with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile.OsDiskSizeGB" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="osDiskSizeGB")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets OS Disk Size in GB to be used to specify the disk size
            for every machine in this master/agent pool. If you specify 0, it
            will apply the default osDisk size according to the vmSize
            specified.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OsType">
      <MemberSignature Language="C#" Value="public string OsType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OsType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile.OsType" />
      <MemberSignature Language="VB.NET" Value="Public Property OsType As String" />
      <MemberSignature Language="F#" Value="member this.OsType : string with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile.OsType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="osType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets osType to be used to specify os type. Choose from
            Linux and Windows. Default to Linux. Possible values include:
            'Linux', 'Windows'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Nullable&lt;int&gt;&gt; Ports { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; Ports" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile.Ports" />
      <MemberSignature Language="VB.NET" Value="Public Property Ports As IList(Of Nullable(Of Integer))" />
      <MemberSignature Language="F#" Value="member this.Ports : System.Collections.Generic.IList&lt;Nullable&lt;int&gt;&gt; with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile.Ports" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="ports")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Nullable&lt;System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets ports number array used to expose on this agent pool.
            The default opened ports are different based on your choice of
            orchestrator.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageProfile">
      <MemberSignature Language="C#" Value="public string StorageProfile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StorageProfile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile.StorageProfile" />
      <MemberSignature Language="VB.NET" Value="Public Property StorageProfile As String" />
      <MemberSignature Language="F#" Value="member this.StorageProfile : string with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile.StorageProfile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="storageProfile")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets storage profile specifies what kind of storage used.
            Choose from StorageAccount and ManagedDisks. Leave it empty, we
            will choose for you based on the orchestrator choice. Possible
            values include: 'StorageAccount', 'ManagedDisks'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="containerServiceAgentPoolProfile.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
    <Member MemberName="VmSize">
      <MemberSignature Language="C#" Value="public string VmSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VmSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile.VmSize" />
      <MemberSignature Language="VB.NET" Value="Public Property VmSize As String" />
      <MemberSignature Language="F#" Value="member this.VmSize : string with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile.VmSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="vmSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets size of agent VMs. Possible values include:
            'Standard_A1', 'Standard_A10', 'Standard_A11', 'Standard_A1_v2',
            'Standard_A2', 'Standard_A2_v2', 'Standard_A2m_v2', 'Standard_A3',
            'Standard_A4', 'Standard_A4_v2', 'Standard_A4m_v2', 'Standard_A5',
            'Standard_A6', 'Standard_A7', 'Standard_A8', 'Standard_A8_v2',
            'Standard_A8m_v2', 'Standard_A9', 'Standard_B2ms', 'Standard_B2s',
            'Standard_B4ms', 'Standard_B8ms', 'Standard_D1', 'Standard_D11',
            'Standard_D11_v2', 'Standard_D11_v2_Promo', 'Standard_D12',
            'Standard_D12_v2', 'Standard_D12_v2_Promo', 'Standard_D13',
            'Standard_D13_v2', 'Standard_D13_v2_Promo', 'Standard_D14',
            'Standard_D14_v2', 'Standard_D14_v2_Promo', 'Standard_D15_v2',
            'Standard_D16_v3', 'Standard_D16s_v3', 'Standard_D1_v2',
            'Standard_D2', 'Standard_D2_v2', 'Standard_D2_v2_Promo',
            'Standard_D2_v3', 'Standard_D2s_v3', 'Standard_D3',
            'Standard_D32_v3', 'Standard_D32s_v3', 'Standard_D3_v2',
            'Standard_D3_v2_Promo', 'Standard_D4', 'Standard_D4_v2',
            'Standard_D4_v2_Promo', 'Standard_D4_v3', 'Standard_D4s_v3',
            'Standard_D5_v2', 'Standard_D5_v2_Promo', 'Standard_D64_v3',
            'Standard_D64s_v3', 'Standard_D8_v3', 'Standard_D8s_v3',
            'Standard_DS1', 'Standard_DS11', 'Standard_DS11_v2',
            'Standard_DS11_v2_Promo', 'Standard_DS12', 'Standard_DS12_v2',
            'Standard_DS12_v2_Promo', 'Standard_DS13', 'Standard_DS13-2_v2',
            'Standard_DS13-4_v2', 'Standard_DS13_v2', 'Standard_DS13_v2_Promo',
            'Standard_DS14', 'Standard_DS14-4_v2', 'Standard_DS14-8_v2',
            'Standard_DS14_v2', 'Standard_DS14_v2_Promo', 'Standard_DS15_v2',
            'Standard_DS1_v2', 'Standard_DS2', 'Standard_DS2_v2',
            'Standard_DS2_v2_Promo', 'Standard_DS3', 'Standard_DS3_v2',
            'Standard_DS3_v2_Promo', 'Standard_DS4', 'Standard_DS4_v2',
            'Standard_DS4_v2_Promo', 'Standard_DS5_v2',
            'Standard_DS5_v2_Promo', 'Standard_E16_v3', 'Standard_E16s_v3',
            'Standard_E2_v3', 'Standard_E2s_v3', 'Standard_E32-16s_v3',
            'Standard_E32-8s_v3', 'Standard_E32_v3', 'Standard_E32s_v3',
            'Standard_E4_v3', 'Standard_E4s_v3', 'Standard_E64-16s_v3',
            'Standard_E64-32s_v3', 'Standard_E64_v3', 'Standard_E64s_v3',
            'Standard_E8_v3', 'Standard_E8s_v3', 'Standard_F1', 'Standard_F16',
            'Standard_F16s', 'Standard_F16s_v2', 'Standard_F1s', 'Standard_F2',
            'Standard_F2s', 'Standard_F2s_v2', 'Standard_F32s_v2',
            'Standard_F4', 'Standard_F4s', 'Standard_F4s_v2',
            'Standard_F64s_v2', 'Standard_F72s_v2', 'Standard_F8',
            'Standard_F8s', 'Standard_F8s_v2', 'Standard_G1', 'Standard_G2',
            'Standard_G3', 'Standard_G4', 'Standard_G5', 'Standard_GS1',
            'Standard_GS2', 'Standard_GS3', 'Standard_GS4', 'Standard_GS4-4',
            'Standard_GS4-8', 'Standard_GS5', 'Standard_GS5-16',
            'Standard_GS5-8', 'Standard_H16', 'Standard_H16m',
            'Standard_H16mr', 'Standard_H16r', 'Standard_H8', 'Standard_H8m',
            'Standard_L16s', 'Standard_L32s', 'Standard_L4s', 'Standard_L8s',
            'Standard_M128-32ms', 'Standard_M128-64ms', 'Standard_M128ms',
            'Standard_M128s', 'Standard_M64-16ms', 'Standard_M64-32ms',
            'Standard_M64ms', 'Standard_M64s', 'Standard_NC12',
            'Standard_NC12s_v2', 'Standard_NC12s_v3', 'Standard_NC24',
            'Standard_NC24r', 'Standard_NC24rs_v2', 'Standard_NC24rs_v3',
            'Standard_NC24s_v2', 'Standard_NC24s_v3', 'Standard_NC6',
            'Standard_NC6s_v2', 'Standard_NC6s_v3', 'Standard_ND12s',
            'Standard_ND24rs', 'Standard_ND24s', 'Standard_ND6s',
            'Standard_NV12', 'Standard_NV24', 'Standard_NV6'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VnetSubnetID">
      <MemberSignature Language="C#" Value="public string VnetSubnetID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VnetSubnetID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile.VnetSubnetID" />
      <MemberSignature Language="VB.NET" Value="Public Property VnetSubnetID As String" />
      <MemberSignature Language="F#" Value="member this.VnetSubnetID : string with get, set" Usage="Microsoft.Azure.Management.ContainerService.Fluent.Models.ContainerServiceAgentPoolProfile.VnetSubnetID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="vnetSubnetID")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets vNet SubnetID specifies the vnet's subnet identifier.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>