<Type Name="RollingUpgradeMonitoringPolicy" FullName="System.Fabric.Description.RollingUpgradeMonitoringPolicy">
  <TypeSignature Language="C#" Value="public class RollingUpgradeMonitoringPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RollingUpgradeMonitoringPolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Fabric.Description.RollingUpgradeMonitoringPolicy" />
  <AssemblyInfo>
    <AssemblyName>System.Fabric</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>255.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Represents a class to encapsulate a rolling upgrade monitoring policy.</para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RollingUpgradeMonitoringPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Description.RollingUpgradeMonitoringPolicy.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <para>Initializes a new instance of the <see cref="T:System.Fabric.Description.RollingUpgradeMonitoringPolicy" /> class.</para>
        </summary>
        <remarks>
          <para>The initialization sets the properties of the <see cref="T:System.Fabric.Description.RollingUpgradeMonitoringPolicy" /> class with the following defaults.</para>
          <para>Property</para>
          <para>Default value</para>
          <list type="table">
            <item>
              <term>
                <para>
                  <see cref="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.FailureAction" />
                </para>
              </term>
              <description>
                <para>
                  <see cref="F:System.Fabric.UpgradeFailureAction.Invalid" />
                </para>
                <para>This value must be changed or a <see cref="T:System.ArgumentException" /> will be thrown before the upgrade begins.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckWaitDuration" />
                </para>
              </term>
              <description>
                <para>
                  <see cref="F:System.TimeSpan.Zero" />
                </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckStableDuration" />
                </para>
              </term>
              <description>
                <para>
                  <see cref="T:System.TimeSpan" /> value that defaults to 120 seconds.
                    </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckRetryTimeout" />
                </para>
              </term>
              <description>
                <para>600 seconds</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeDomainTimeout" />
                </para>
              </term>
              <description>
                <para>TimeSpan.FromSeconds(uint.MaxValue)</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeTimeout" />
                </para>
              </term>
              <description>
                <para>TimeSpan.FromSeconds(uint.MaxValue)</para>
              </description>
            </item>
          </list>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FailureAction">
      <MemberSignature Language="C#" Value="public System.Fabric.UpgradeFailureAction FailureAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Fabric.UpgradeFailureAction FailureAction" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.FailureAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.UpgradeFailureAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets or sets the action to take if an upgrade fails. The default is <see cref="F:System.Fabric.UpgradeFailureAction.Invalid" />.</para>
        </summary>
        <value>
          <para>The action to take if an upgrade fails.</para>
        </value>
        <remarks>
          <para>The <see cref="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.FailureAction" /> property must be changed from the default 
            of <see cref="F:System.Fabric.UpgradeFailureAction.Invalid" /> or a <see cref="T:System.ArgumentException" /> will be thrown before the upgrade begins.</para>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <para>The <see cref="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.FailureAction" /> property is set to 
            <see cref="F:System.Fabric.UpgradeFailureAction.Invalid" />.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HealthCheckRetryTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan HealthCheckRetryTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan HealthCheckRetryTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckRetryTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets or sets the length of time that health checks can fail continuously before the upgrade fails and the action specified by <see cref="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.FailureAction" /> occurs.</para>
        </summary>
        <value>
          <para>The length of time that health checks can fail continuously.</para>
        </value>
        <remarks>
          <para>The default is 600 seconds. Setting <see cref="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckRetryTimeout" /> 
            to <see cref="F:System.TimeSpan.Zero" /> will result in only a single health check.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HealthCheckStableDuration">
      <MemberSignature Language="C#" Value="public TimeSpan HealthCheckStableDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan HealthCheckStableDuration" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckStableDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets or sets the length of time that health checks must pass continuously before the upgrade proceeds 
            to the next upgrade domain.</para>
        </summary>
        <value>
          <para>The length of time that health checks must pass continuously.</para>
        </value>
        <remarks>
          <para>The default is 120 seconds.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HealthCheckWaitDuration">
      <MemberSignature Language="C#" Value="public TimeSpan HealthCheckWaitDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan HealthCheckWaitDuration" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckWaitDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets or sets the length of time to wait after completing an upgrade domain before performing health checks.</para>
        </summary>
        <value>
          <para>The length of time to wait after completing an upgrade domain before performing health checks.</para>
        </value>
        <remarks>
          <para>The default is <see cref="F:System.TimeSpan.Zero" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpgradeDomainTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan UpgradeDomainTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan UpgradeDomainTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeDomainTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets or sets the length of time that the processing of any upgrade domain can take before the upgrade fails and the action specified by <see cref="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.FailureAction" /> occurs.</para>
        </summary>
        <value>
          <para>The timeout for any upgrade domain.</para>
        </value>
        <remarks>
          <para>The default is TimeSpan.FromSeconds(uint.MaxValue).</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpgradeTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan UpgradeTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan UpgradeTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets or sets the length of time that the overall upgrade can take before the upgrade fails and the action specified by <see cref="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.FailureAction" /> occurs.</para>
        </summary>
        <value>
          <para>The upgrade timeout.</para>
        </value>
        <remarks>
          <para>The default is TimeSpan.FromSeconds(uint.MaxValue).</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>