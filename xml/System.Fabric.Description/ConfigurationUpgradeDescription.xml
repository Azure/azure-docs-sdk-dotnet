<Type Name="ConfigurationUpgradeDescription" FullName="System.Fabric.Description.ConfigurationUpgradeDescription">
  <TypeSignature Language="C#" Value="public sealed class ConfigurationUpgradeDescription" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConfigurationUpgradeDescription extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Fabric.Description.ConfigurationUpgradeDescription" />
  <AssemblyInfo>
    <AssemblyName>System.Fabric</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>255.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Represents a class to encapsulate parameters describing a Service Fabric cluster configuration upgrade.</para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigurationUpgradeDescription ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Description.ConfigurationUpgradeDescription.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <para>Initializes a new instance of the <see cref="T:System.Fabric.Description.ConfigurationUpgradeDescription" /> class.</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterConfiguration">
      <MemberSignature Language="C#" Value="public string ClusterConfiguration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClusterConfiguration" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Description.ConfigurationUpgradeDescription.ClusterConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This is the cluster configuration that will be applied to cluster.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HealthCheckRetryTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan HealthCheckRetryTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan HealthCheckRetryTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Description.ConfigurationUpgradeDescription.HealthCheckRetryTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets or sets the length of time between attempts to perform a health check if the application or cluster is not healthy.</para>
        </summary>
        <value>
          <para>The length of time between attempts to perform a health checks if the application or cluster is not healthy.</para>
        </value>
        <remarks>
          <para>To prevent a retry of the health check, set the <see cref="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckRetryTimeout" /> 
            property value to <see cref="F:System.TimeSpan.Zero" />. The default is <see cref="F:System.TimeSpan.Zero" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HealthCheckStableDuration">
      <MemberSignature Language="C#" Value="public TimeSpan HealthCheckStableDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan HealthCheckStableDuration" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Description.ConfigurationUpgradeDescription.HealthCheckStableDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets or sets the length of time that the application or cluster must remain healthy before the health check passes and the upgrade proceeds 
            to the next Upgrade Domain.</para>
        </summary>
        <value>
          <para>The length of time that the application or cluster must remain healthy.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HealthCheckWaitDuration">
      <MemberSignature Language="C#" Value="public TimeSpan HealthCheckWaitDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan HealthCheckWaitDuration" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Description.ConfigurationUpgradeDescription.HealthCheckWaitDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets or sets the length of time to wait after completing an upgrade domain before starting the health check process.</para>
        </summary>
        <value>
          <para>The length of time to wait after completing an upgrade domain before starting the health checks process.</para>
        </value>
        <remarks>
          <para>To use an infinite wait for the health check, set the <see cref="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckWaitDuration" /> 
            property value to <see cref="F:System.TimeSpan.Zero" />. The default is <see cref="F:System.TimeSpan.Zero" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPercentDeltaUnhealthyNodes">
      <MemberSignature Language="C#" Value="public byte MaxPercentDeltaUnhealthyNodes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 MaxPercentDeltaUnhealthyNodes" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Description.ConfigurationUpgradeDescription.MaxPercentDeltaUnhealthyNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets or sets the maximum allowed percentage of nodes health degradation allowed during cluster upgrades.
            </para>
        </summary>
        <value>
          <para>The maximum allowed percentage of delta health degradation. Allowed values are integer values from zero to 100.</para>
        </value>
        <remarks>The delta is 
            measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation. 
            The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated 
            limits. The default value is 10%.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>The specified value was outside the range of integer values from zero to 100.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaxPercentUnhealthyApplications">
      <MemberSignature Language="C#" Value="public byte MaxPercentUnhealthyApplications { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 MaxPercentUnhealthyApplications" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Description.ConfigurationUpgradeDescription.MaxPercentUnhealthyApplications" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the maximum allowed percentage of unhealthy applications from the <see cref="T:System.Fabric.Health.ClusterHealthPolicy" />.</para>
        </summary>
        <value>
          <para>The maximum allowed percentage of unhealthy applications.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPercentUnhealthyNodes">
      <MemberSignature Language="C#" Value="public byte MaxPercentUnhealthyNodes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 MaxPercentUnhealthyNodes" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Description.ConfigurationUpgradeDescription.MaxPercentUnhealthyNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets or sets the maximum allowed percentage of unhealthy nodes.</para>
        </summary>
        <value>
          <para>The maximum allowed percentage of unhealthy nodes. Allowed values are integer values from zero to 100.</para>
        </value>
        <remarks>
          <para>
            The percentage represents the maximum tolerated percentage of nodes that can be unhealthy 
            before the cluster is considered in error. If the percentage is respected but there is at least one unhealthy node,
            the health is evaluated as Warning.
            This is calculated by dividing the number of unhealthy nodes
            over the total number of nodes in the cluster.
            The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage: zero.
            </para>
          <para>In large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.</para>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>The specified value was outside the range of integer values from zero to 100.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaxPercentUpgradeDomainDeltaUnhealthyNodes">
      <MemberSignature Language="C#" Value="public byte MaxPercentUpgradeDomainDeltaUnhealthyNodes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 MaxPercentUpgradeDomainDeltaUnhealthyNodes" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Description.ConfigurationUpgradeDescription.MaxPercentUpgradeDomainDeltaUnhealthyNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets or sets the maximum allowed percentage of upgrade domain nodes health degradation 
            allowed during cluster upgrades.</para>
        </summary>
        <value>
          <para>The maximum allowed percentage of upgrade domain delta health degradation. Allowed values are integer values from zero to 100.</para>
        </value>
        <remarks>The delta 
            is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the 
            time of the health evaluation. The check is performed after every upgrade domain upgrade completion for all completed upgrade domains 
            to make sure the state of the upgrade domains is within tolerated limits. The default value is 15%.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>The specified value was outside the range of integer values from zero to 100.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Description.ConfigurationUpgradeDescription.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets a string representation of the ConfigurationUpgradeDescription.
            </summary>
        <returns>A string representation of the ConfigurationUpgradeDescription.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpgradeDomainTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan UpgradeDomainTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan UpgradeDomainTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Description.ConfigurationUpgradeDescription.UpgradeDomainTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets or sets the timeout for the upgrade domain.</para>
        </summary>
        <value>
          <para>The timeout for the upgrade domain.</para>
        </value>
        <remarks>
          <para>The default is TimeSpan.FromSeconds(uint.MaxValue).</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpgradeTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan UpgradeTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan UpgradeTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Description.ConfigurationUpgradeDescription.UpgradeTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets or sets the upgrade timeout.</para>
        </summary>
        <value>
          <para>The upgrade timeout.</para>
        </value>
        <remarks>
          <para>The default is TimeSpan.FromSeconds(uint.MaxValue).</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>