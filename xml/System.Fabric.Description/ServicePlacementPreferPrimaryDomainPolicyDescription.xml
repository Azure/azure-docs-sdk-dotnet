<Type Name="ServicePlacementPreferPrimaryDomainPolicyDescription" FullName="System.Fabric.Description.ServicePlacementPreferPrimaryDomainPolicyDescription">
  <TypeSignature Language="C#" Value="public sealed class ServicePlacementPreferPrimaryDomainPolicyDescription : System.Fabric.Description.ServicePlacementPolicyDescription" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServicePlacementPreferPrimaryDomainPolicyDescription extends System.Fabric.Description.ServicePlacementPolicyDescription" />
  <TypeSignature Language="DocId" Value="T:System.Fabric.Description.ServicePlacementPreferPrimaryDomainPolicyDescription" />
  <AssemblyInfo>
    <AssemblyName>System.Fabric</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>255.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Fabric.Description.ServicePlacementPolicyDescription</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Represents a <see cref="T:System.Fabric.Description.ServicePlacementPolicyDescription" /> which indicates that the service’s Primary replicas 
            should optimally be placed in a particular domain.</para>
    </summary>
    <remarks>
      <para>This constraint is usually used with fault domains in scenarios where the Service Fabric cluster is geographically distributed in order to 
            indicate that a service’s primary replica should be located in a particular fault domain, which in geo-distributed scenarios usually aligns with 
            regional or datacenter boundaries. Note that since this is an optimization it is possible that the Primary replica may not end up located in this 
            domain due to failures, capacity limits, or other constraints.</para>
    </remarks>
    <example>
      <code>
            //create the service placement policy
            ServicePlacementPreferPrimaryDomainPolicyDescription placementPolicy = new ServicePlacementPreferPrimaryDomainPolicyDescription();
            placementPolicy.DomainName = @"fd:\Datacenter1";
            
            //add it to the Stateful Service Description
            StatefulServiceDescription ssd = new StatefulServiceDescription();
            ssd.PlacementPolicies.Add(placementPolicy);</code>
    </example>
    <example>
      <code>
            //create the service placement policy
            ServicePlacementPreferPrimaryDomainPolicyDescription placementPolicy = new ServicePlacementPreferPrimaryDomainPolicyDescription();
            placementPolicy.DomainName = @"fd:\Datacenter1";
            
            //add it to the Stateful Service Description
            StatefulServiceDescription ssd = new StatefulServiceDescription();
            ssd.PlacementPolicies.Add(placementPolicy);</code>
    </example>
    <example>
      <code>
            //create the service placement policy
            ServicePlacementPreferPrimaryDomainPolicyDescription placementPolicy = new ServicePlacementPreferPrimaryDomainPolicyDescription();
            placementPolicy.DomainName = @"fd:\Datacenter1";
            
            //add it to the Stateful Service Description
            StatefulServiceDescription ssd = new StatefulServiceDescription();
            ssd.PlacementPolicies.Add(placementPolicy);</code>
    </example>
    <example>
      <code>
            //create the service placement policy
            ServicePlacementPreferPrimaryDomainPolicyDescription placementPolicy = new ServicePlacementPreferPrimaryDomainPolicyDescription();
            placementPolicy.DomainName = @"fd:\Datacenter1";
            
            //add it to the Stateful Service Description
            StatefulServiceDescription ssd = new StatefulServiceDescription();
            ssd.PlacementPolicies.Add(placementPolicy);</code>
    </example>
    <example>
      <code>
            //create the service placement policy
            ServicePlacementPreferPrimaryDomainPolicyDescription placementPolicy = new ServicePlacementPreferPrimaryDomainPolicyDescription();
            placementPolicy.DomainName = @"fd:\Datacenter1";
            
            //add it to the Stateful Service Description
            StatefulServiceDescription ssd = new StatefulServiceDescription();
            ssd.PlacementPolicies.Add(placementPolicy);</code>
    </example>
    <example>
      <code>
            //create the service placement policy
            ServicePlacementPreferPrimaryDomainPolicyDescription placementPolicy = new ServicePlacementPreferPrimaryDomainPolicyDescription();
            placementPolicy.DomainName = @"fd:\Datacenter1";
            
            //add it to the Stateful Service Description
            StatefulServiceDescription ssd = new StatefulServiceDescription();
            ssd.PlacementPolicies.Add(placementPolicy);</code>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServicePlacementPreferPrimaryDomainPolicyDescription ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Description.ServicePlacementPreferPrimaryDomainPolicyDescription.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <para>initializing a new instance of the <see cref="T:System.Fabric.Description.ServicePlacementPreferPrimaryDomainPolicyDescription" /> class.</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DomainName">
      <MemberSignature Language="C#" Value="public string DomainName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DomainName" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Description.ServicePlacementPreferPrimaryDomainPolicyDescription.DomainName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets or sets the string name of the domain in which the Primary replica should be preferentially located.</para>
        </summary>
        <value>
          <para>The string name of the domain in which the Primary replica should be preferentially located.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Description.ServicePlacementPreferPrimaryDomainPolicyDescription.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para> 
            Return a string representation of the PreferPrimaryDomain Service Placement Policy in the form 'PreferPrimaryDomain, DomainName' 
            </para>
        </summary>
        <returns>
          <para>A string representing the object.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>