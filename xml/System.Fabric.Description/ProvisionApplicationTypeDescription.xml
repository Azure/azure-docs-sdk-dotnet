<Type Name="ProvisionApplicationTypeDescription" FullName="System.Fabric.Description.ProvisionApplicationTypeDescription">
  <TypeSignature Language="C#" Value="public sealed class ProvisionApplicationTypeDescription : System.Fabric.Description.ProvisionApplicationTypeDescriptionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProvisionApplicationTypeDescription extends System.Fabric.Description.ProvisionApplicationTypeDescriptionBase" />
  <TypeSignature Language="DocId" Value="T:System.Fabric.Description.ProvisionApplicationTypeDescription" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProvisionApplicationTypeDescription&#xA;Inherits ProvisionApplicationTypeDescriptionBase" />
  <TypeSignature Language="F#" Value="type ProvisionApplicationTypeDescription = class&#xA;    inherit ProvisionApplicationTypeDescriptionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Fabric</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Fabric.Description.ProvisionApplicationTypeDescriptionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Describes a provision application type operation which uses an application package copied to a relative path in the image store.
            The application type can be provisioned using
            <see cref="M:System.Fabric.FabricClient.ApplicationManagementClient.ProvisionApplicationAsync(System.Fabric.Description.ProvisionApplicationTypeDescriptionBase,System.TimeSpan,System.Threading.CancellationToken)" />.</para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProvisionApplicationTypeDescription (string buildPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string buildPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Description.ProvisionApplicationTypeDescription.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (buildPath As String)" />
      <MemberSignature Language="F#" Value="new System.Fabric.Description.ProvisionApplicationTypeDescription : string -&gt; System.Fabric.Description.ProvisionApplicationTypeDescription" Usage="new System.Fabric.Description.ProvisionApplicationTypeDescription buildPath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="buildPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buildPath">
          <para>The relative path to the application package in the image store specified during
            <see cref="M:System.Fabric.FabricClient.ApplicationManagementClient.CopyApplicationPackage(System.String,System.String,System.String,System.TimeSpan)" />.</para>
        </param>
        <summary>
          <para>Creates an instance of <see cref="T:System.Fabric.Description.ProvisionApplicationTypeDescription" />
            using the relative path to the application package in the image store.</para>
        </summary>
        <remarks>
          <para>
            The pending provision operation can be interrupted using <see cref="M:System.Fabric.FabricClient.ApplicationManagementClient.UnprovisionApplicationAsync(System.Fabric.Description.UnprovisionApplicationTypeDescription)" />.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationPackageCleanupPolicy">
      <MemberSignature Language="C#" Value="public System.Fabric.Description.ApplicationPackageCleanupPolicy ApplicationPackageCleanupPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Fabric.Description.ApplicationPackageCleanupPolicy ApplicationPackageCleanupPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Description.ProvisionApplicationTypeDescription.ApplicationPackageCleanupPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationPackageCleanupPolicy As ApplicationPackageCleanupPolicy" />
      <MemberSignature Language="F#" Value="member this.ApplicationPackageCleanupPolicy : System.Fabric.Description.ApplicationPackageCleanupPolicy with get, set" Usage="System.Fabric.Description.ProvisionApplicationTypeDescription.ApplicationPackageCleanupPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.Description.ApplicationPackageCleanupPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets or sets the policy indicating the application package cleanup policy </para>
        </summary>
        <value>
          <para>The policy indicating whether or not the cleanup of the application package is determined by service fabric runtime or determined by the cluster wide setting (CleanupApplicationPackageOnProvisionSuccess).
            By default the value is to use cluster wide setting.</para>
        </value>
        <remarks>
          <para>If the value is <see cref="F:System.Fabric.Description.ApplicationPackageCleanupPolicy.Automatic" />, then the service fabric runtime determines when to perform the application package cleanup.By default, cleanup is done after a successful provision.
            If the value is <see cref="F:System.Fabric.Description.ApplicationPackageCleanupPolicy.Manual" />, then user has to explictly clean up the application package by using <see cref="M:System.Fabric.FabricClient.ApplicationManagementClient.RemoveApplicationPackage(System.String,System.String)" />.
            If the value is <see cref="F:System.Fabric.Description.ApplicationPackageCleanupPolicy.Default" />, then cluster configuration setting "CleanupApplicationPackageOnProvisionSuccess" determines how application package cleanup should occur.
            The application package that is referred to was previously uploaded to the incoming location using 
            <see cref="M:System.Fabric.FabricClient.ApplicationManagementClient.CopyApplicationPackage(System.String,System.String,System.String,System.TimeSpan)" />.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildPath">
      <MemberSignature Language="C#" Value="public string BuildPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BuildPath" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Description.ProvisionApplicationTypeDescription.BuildPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BuildPath As String" />
      <MemberSignature Language="F#" Value="member this.BuildPath : string" Usage="System.Fabric.Description.ProvisionApplicationTypeDescription.BuildPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the relative path to the application package in the image store specified during
            <see cref="M:System.Fabric.FabricClient.ApplicationManagementClient.CopyApplicationPackage(System.String,System.String,System.String,System.TimeSpan)" />.</para>
        </summary>
        <value>
          <para>The application package build path.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Description.ProvisionApplicationTypeDescription.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="provisionApplicationTypeDescription.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets a string representation of the provision application type operation.
            </summary>
        <returns>A string representation of the provision application type operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>