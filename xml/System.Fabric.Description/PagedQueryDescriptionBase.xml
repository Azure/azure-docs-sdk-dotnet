<Type Name="PagedQueryDescriptionBase" FullName="System.Fabric.Description.PagedQueryDescriptionBase">
  <TypeSignature Language="C#" Value="public abstract class PagedQueryDescriptionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PagedQueryDescriptionBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Fabric.Description.PagedQueryDescriptionBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PagedQueryDescriptionBase" />
  <TypeSignature Language="F#" Value="type PagedQueryDescriptionBase = class" />
  <AssemblyInfo>
    <AssemblyName>System.Fabric</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Represents the base class for all paged query descriptions.
            This class handles all functionality related to paging.</para>
    </summary>
    <remarks>
      <para>The default values of this query description ensure that results are returned from the first page and apply no paging related filters.
            This query description can be customized by setting individual properties.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PagedQueryDescriptionBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Description.PagedQueryDescriptionBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:System.Fabric.Description.PagedQueryDescriptionBase" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinuationToken">
      <MemberSignature Language="C#" Value="public string ContinuationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContinuationToken" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Description.PagedQueryDescriptionBase.ContinuationToken" />
      <MemberSignature Language="VB.NET" Value="Public Property ContinuationToken As String" />
      <MemberSignature Language="F#" Value="member this.ContinuationToken : string with get, set" Usage="System.Fabric.Description.PagedQueryDescriptionBase.ContinuationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets or sets the continuation token which can be used to retrieve the next page.</para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            Defaults to null, which returns page one of query results.
            </para>
          <para>
            If too many results respect the filter, they may not fit into one message.
            Paging is used to account for this by splitting the collection of returned results into separate pages.
            The continuation token is used to know where the previous page left off, carrying significance only to the query itself.
            This value should be generated from
            running this query, and can be passed into the next query request in order to get subsequent pages.
            A non-null continuation token value is returned as part of the result only if there is a subsequent page.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxResults">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; MaxResults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; MaxResults" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Description.PagedQueryDescriptionBase.MaxResults" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxResults As Nullable(Of Long)" />
      <MemberSignature Language="F#" Value="member this.MaxResults : Nullable&lt;int64&gt; with get, set" Usage="System.Fabric.Description.PagedQueryDescriptionBase.MaxResults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the max number of result items that can be returned per page.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            If value is null, then no restrictions are placed on the number of results per page.
            </para>
          <para>This defines only the upper bound for the number of results returned, not a minimum.
            For example, if the page fits at most 1000 returned items according to max message size restrictions defined in the configuration,
            and the MaxResults value is set to 2000, then only 1000 results are returned, even if 2000 result items match
            the query description.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Description.PagedQueryDescriptionBase.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="pagedQueryDescriptionBase.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Overrides ToString() method to print all content of the query description.
            </summary>
        <returns>
            Returns a string containing all the properties of the query description.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>