<Type Name="MockableSubscriptionTenantResource" FullName="Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource">
  <TypeSignature Language="C#" Value="public class MockableSubscriptionTenantResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableSubscriptionTenantResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableSubscriptionTenantResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableSubscriptionTenantResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to TenantResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableSubscriptionTenantResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptSubscriptionOwnership">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation AcceptSubscriptionOwnership (Azure.WaitUntil waitUntil, string subscriptionId, Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation AcceptSubscriptionOwnership(valuetype Azure.WaitUntil waitUntil, string subscriptionId, class Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource.AcceptSubscriptionOwnership(Azure.WaitUntil,System.String,Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AcceptSubscriptionOwnership (waitUntil As WaitUntil, subscriptionId As String, content As AcceptOwnershipContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member AcceptSubscriptionOwnership : Azure.WaitUntil * string * Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.AcceptSubscriptionOwnership : Azure.WaitUntil * string * Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="mockableSubscriptionTenantResource.AcceptSubscriptionOwnership (waitUntil, subscriptionId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="subscriptionId"> Subscription Id. </param>
        <param name="content"> The <see cref="T:Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Accept subscription ownership.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Subscription/subscriptions/{subscriptionId}/acceptOwnership</description></item><item><term>Operation Id</term><description>Subscription_AcceptOwnership</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AcceptSubscriptionOwnershipAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; AcceptSubscriptionOwnershipAsync (Azure.WaitUntil waitUntil, string subscriptionId, Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; AcceptSubscriptionOwnershipAsync(valuetype Azure.WaitUntil waitUntil, string subscriptionId, class Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource.AcceptSubscriptionOwnershipAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AcceptSubscriptionOwnershipAsync (waitUntil As WaitUntil, subscriptionId As String, content As AcceptOwnershipContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member AcceptSubscriptionOwnershipAsync : Azure.WaitUntil * string * Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.AcceptSubscriptionOwnershipAsync : Azure.WaitUntil * string * Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="mockableSubscriptionTenantResource.AcceptSubscriptionOwnershipAsync (waitUntil, subscriptionId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="subscriptionId"> Subscription Id. </param>
        <param name="content"> The <see cref="T:Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Accept subscription ownership.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Subscription/subscriptions/{subscriptionId}/acceptOwnership</description></item><item><term>Operation Id</term><description>Subscription_AcceptOwnership</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAcceptOwnershipStatus">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Subscription.Models.AcceptOwnershipStatus&gt; GetAcceptOwnershipStatus (string subscriptionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Subscription.Models.AcceptOwnershipStatus&gt; GetAcceptOwnershipStatus(string subscriptionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource.GetAcceptOwnershipStatus(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAcceptOwnershipStatus (subscriptionId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AcceptOwnershipStatus)" />
      <MemberSignature Language="F#" Value="abstract member GetAcceptOwnershipStatus : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Subscription.Models.AcceptOwnershipStatus&gt;&#xA;override this.GetAcceptOwnershipStatus : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Subscription.Models.AcceptOwnershipStatus&gt;" Usage="mockableSubscriptionTenantResource.GetAcceptOwnershipStatus (subscriptionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Subscription.Models.AcceptOwnershipStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionId"> Subscription Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Accept subscription ownership status.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Subscription/subscriptions/{subscriptionId}/acceptOwnershipStatus</description></item><item><term>Operation Id</term><description>Subscription_AcceptOwnershipStatus</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAcceptOwnershipStatusAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.AcceptOwnershipStatus&gt;&gt; GetAcceptOwnershipStatusAsync (string subscriptionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Subscription.Models.AcceptOwnershipStatus&gt;&gt; GetAcceptOwnershipStatusAsync(string subscriptionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource.GetAcceptOwnershipStatusAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAcceptOwnershipStatusAsync (subscriptionId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AcceptOwnershipStatus))" />
      <MemberSignature Language="F#" Value="abstract member GetAcceptOwnershipStatusAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.AcceptOwnershipStatus&gt;&gt;&#xA;override this.GetAcceptOwnershipStatusAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.AcceptOwnershipStatus&gt;&gt;" Usage="mockableSubscriptionTenantResource.GetAcceptOwnershipStatusAsync (subscriptionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.AcceptOwnershipStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionId"> Subscription Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Accept subscription ownership status.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Subscription/subscriptions/{subscriptionId}/acceptOwnershipStatus</description></item><item><term>Operation Id</term><description>Subscription_AcceptOwnershipStatus</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBillingAccountPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Subscription.BillingAccountPolicyCollection GetBillingAccountPolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Subscription.BillingAccountPolicyCollection GetBillingAccountPolicies() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource.GetBillingAccountPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBillingAccountPolicies () As BillingAccountPolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetBillingAccountPolicies : unit -&gt; Azure.ResourceManager.Subscription.BillingAccountPolicyCollection&#xA;override this.GetBillingAccountPolicies : unit -&gt; Azure.ResourceManager.Subscription.BillingAccountPolicyCollection" Usage="mockableSubscriptionTenantResource.GetBillingAccountPolicies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Subscription.BillingAccountPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of BillingAccountPolicyResources in the TenantResource. </summary>
        <returns> An object representing collection of BillingAccountPolicyResources and their operations over a BillingAccountPolicyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBillingAccountPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Subscription.BillingAccountPolicyResource&gt; GetBillingAccountPolicy (string billingAccountId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Subscription.BillingAccountPolicyResource&gt; GetBillingAccountPolicy(string billingAccountId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource.GetBillingAccountPolicy(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBillingAccountPolicy (billingAccountId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BillingAccountPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetBillingAccountPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Subscription.BillingAccountPolicyResource&gt;&#xA;override this.GetBillingAccountPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Subscription.BillingAccountPolicyResource&gt;" Usage="mockableSubscriptionTenantResource.GetBillingAccountPolicy (billingAccountId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Subscription.BillingAccountPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="billingAccountId"> Billing Account Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get Billing Account Policy.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Subscription/policies/default</description></item><item><term>Operation Id</term><description>BillingAccount_GetPolicy</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="billingAccountId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBillingAccountPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.BillingAccountPolicyResource&gt;&gt; GetBillingAccountPolicyAsync (string billingAccountId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Subscription.BillingAccountPolicyResource&gt;&gt; GetBillingAccountPolicyAsync(string billingAccountId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource.GetBillingAccountPolicyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBillingAccountPolicyAsync (billingAccountId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BillingAccountPolicyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetBillingAccountPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.BillingAccountPolicyResource&gt;&gt;&#xA;override this.GetBillingAccountPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.BillingAccountPolicyResource&gt;&gt;" Usage="mockableSubscriptionTenantResource.GetBillingAccountPolicyAsync (billingAccountId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.BillingAccountPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="billingAccountId"> Billing Account Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get Billing Account Policy.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Subscription/policies/default</description></item><item><term>Operation Id</term><description>BillingAccount_GetPolicy</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="billingAccountId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionAlias">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Subscription.SubscriptionAliasResource&gt; GetSubscriptionAlias (string aliasName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Subscription.SubscriptionAliasResource&gt; GetSubscriptionAlias(string aliasName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource.GetSubscriptionAlias(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionAlias (aliasName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SubscriptionAliasResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionAlias : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Subscription.SubscriptionAliasResource&gt;&#xA;override this.GetSubscriptionAlias : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Subscription.SubscriptionAliasResource&gt;" Usage="mockableSubscriptionTenantResource.GetSubscriptionAlias (aliasName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Subscription.SubscriptionAliasResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aliasName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="aliasName"> AliasName is the name for the subscription creation request. Note that this is not the same as subscription name and this doesn’t have any other lifecycle need beyond the request for subscription creation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get Alias Subscription.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Subscription/aliases/{aliasName}</description></item><item><term>Operation Id</term><description>Alias_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="aliasName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="aliasName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionAliasAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.SubscriptionAliasResource&gt;&gt; GetSubscriptionAliasAsync (string aliasName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Subscription.SubscriptionAliasResource&gt;&gt; GetSubscriptionAliasAsync(string aliasName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource.GetSubscriptionAliasAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionAliasAsync (aliasName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SubscriptionAliasResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionAliasAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.SubscriptionAliasResource&gt;&gt;&#xA;override this.GetSubscriptionAliasAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.SubscriptionAliasResource&gt;&gt;" Usage="mockableSubscriptionTenantResource.GetSubscriptionAliasAsync (aliasName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.SubscriptionAliasResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aliasName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="aliasName"> AliasName is the name for the subscription creation request. Note that this is not the same as subscription name and this doesn’t have any other lifecycle need beyond the request for subscription creation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get Alias Subscription.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Subscription/aliases/{aliasName}</description></item><item><term>Operation Id</term><description>Alias_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="aliasName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="aliasName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionAliases">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Subscription.SubscriptionAliasCollection GetSubscriptionAliases ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Subscription.SubscriptionAliasCollection GetSubscriptionAliases() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource.GetSubscriptionAliases" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionAliases () As SubscriptionAliasCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionAliases : unit -&gt; Azure.ResourceManager.Subscription.SubscriptionAliasCollection&#xA;override this.GetSubscriptionAliases : unit -&gt; Azure.ResourceManager.Subscription.SubscriptionAliasCollection" Usage="mockableSubscriptionTenantResource.GetSubscriptionAliases " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Subscription.SubscriptionAliasCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SubscriptionAliasResources in the TenantResource. </summary>
        <returns> An object representing collection of SubscriptionAliasResources and their operations over a SubscriptionAliasResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTenantPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Subscription.TenantPolicyResource GetTenantPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Subscription.TenantPolicyResource GetTenantPolicy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource.GetTenantPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantPolicy () As TenantPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetTenantPolicy : unit -&gt; Azure.ResourceManager.Subscription.TenantPolicyResource&#xA;override this.GetTenantPolicy : unit -&gt; Azure.ResourceManager.Subscription.TenantPolicyResource" Usage="mockableSubscriptionTenantResource.GetTenantPolicy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Subscription.TenantPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets an object representing a TenantPolicyResource along with the instance operations that can be performed on it in the TenantResource. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Subscription.TenantPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
