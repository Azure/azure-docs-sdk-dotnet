<Type Name="MockableSubscriptionSubscriptionResource" FullName="Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableSubscriptionSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableSubscriptionSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableSubscriptionSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableSubscriptionSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableSubscriptionSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelSubscription">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Subscription.Models.CanceledSubscriptionId&gt; CancelSubscription (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Subscription.Models.CanceledSubscriptionId&gt; CancelSubscription(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionSubscriptionResource.CancelSubscription(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelSubscription (Optional cancellationToken As CancellationToken = Nothing) As Response(Of CanceledSubscriptionId)" />
      <MemberSignature Language="F#" Value="abstract member CancelSubscription : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Subscription.Models.CanceledSubscriptionId&gt;&#xA;override this.CancelSubscription : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Subscription.Models.CanceledSubscriptionId&gt;" Usage="mockableSubscriptionSubscriptionResource.CancelSubscription cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Subscription.Models.CanceledSubscriptionId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to cancel a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Subscription/cancel</description></item><item><term>Operation Id</term><description>Subscription_Cancel</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelSubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.CanceledSubscriptionId&gt;&gt; CancelSubscriptionAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Subscription.Models.CanceledSubscriptionId&gt;&gt; CancelSubscriptionAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionSubscriptionResource.CancelSubscriptionAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelSubscriptionAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CanceledSubscriptionId))" />
      <MemberSignature Language="F#" Value="abstract member CancelSubscriptionAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.CanceledSubscriptionId&gt;&gt;&#xA;override this.CancelSubscriptionAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.CanceledSubscriptionId&gt;&gt;" Usage="mockableSubscriptionSubscriptionResource.CancelSubscriptionAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.CanceledSubscriptionId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to cancel a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Subscription/cancel</description></item><item><term>Operation Id</term><description>Subscription_Cancel</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSubscription">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Subscription.Models.EnabledSubscriptionId&gt; EnableSubscription (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Subscription.Models.EnabledSubscriptionId&gt; EnableSubscription(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionSubscriptionResource.EnableSubscription(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EnableSubscription (Optional cancellationToken As CancellationToken = Nothing) As Response(Of EnabledSubscriptionId)" />
      <MemberSignature Language="F#" Value="abstract member EnableSubscription : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Subscription.Models.EnabledSubscriptionId&gt;&#xA;override this.EnableSubscription : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Subscription.Models.EnabledSubscriptionId&gt;" Usage="mockableSubscriptionSubscriptionResource.EnableSubscription cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Subscription.Models.EnabledSubscriptionId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to enable a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Subscription/enable</description></item><item><term>Operation Id</term><description>Subscription_Enable</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.EnabledSubscriptionId&gt;&gt; EnableSubscriptionAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Subscription.Models.EnabledSubscriptionId&gt;&gt; EnableSubscriptionAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionSubscriptionResource.EnableSubscriptionAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EnableSubscriptionAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EnabledSubscriptionId))" />
      <MemberSignature Language="F#" Value="abstract member EnableSubscriptionAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.EnabledSubscriptionId&gt;&gt;&#xA;override this.EnableSubscriptionAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.EnabledSubscriptionId&gt;&gt;" Usage="mockableSubscriptionSubscriptionResource.EnableSubscriptionAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.EnabledSubscriptionId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to enable a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Subscription/enable</description></item><item><term>Operation Id</term><description>Subscription_Enable</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenameSubscription">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Subscription.Models.RenamedSubscriptionId&gt; RenameSubscription (Azure.ResourceManager.Subscription.Models.SubscriptionName body, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Subscription.Models.RenamedSubscriptionId&gt; RenameSubscription(class Azure.ResourceManager.Subscription.Models.SubscriptionName body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionSubscriptionResource.RenameSubscription(Azure.ResourceManager.Subscription.Models.SubscriptionName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RenameSubscription (body As SubscriptionName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RenamedSubscriptionId)" />
      <MemberSignature Language="F#" Value="abstract member RenameSubscription : Azure.ResourceManager.Subscription.Models.SubscriptionName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Subscription.Models.RenamedSubscriptionId&gt;&#xA;override this.RenameSubscription : Azure.ResourceManager.Subscription.Models.SubscriptionName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Subscription.Models.RenamedSubscriptionId&gt;" Usage="mockableSubscriptionSubscriptionResource.RenameSubscription (body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Subscription.Models.RenamedSubscriptionId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="Azure.ResourceManager.Subscription.Models.SubscriptionName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="body"> Subscription Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to rename a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Subscription/rename</description></item><item><term>Operation Id</term><description>Subscription_Rename</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="body" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RenameSubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.RenamedSubscriptionId&gt;&gt; RenameSubscriptionAsync (Azure.ResourceManager.Subscription.Models.SubscriptionName body, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Subscription.Models.RenamedSubscriptionId&gt;&gt; RenameSubscriptionAsync(class Azure.ResourceManager.Subscription.Models.SubscriptionName body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionSubscriptionResource.RenameSubscriptionAsync(Azure.ResourceManager.Subscription.Models.SubscriptionName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RenameSubscriptionAsync (body As SubscriptionName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RenamedSubscriptionId))" />
      <MemberSignature Language="F#" Value="abstract member RenameSubscriptionAsync : Azure.ResourceManager.Subscription.Models.SubscriptionName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.RenamedSubscriptionId&gt;&gt;&#xA;override this.RenameSubscriptionAsync : Azure.ResourceManager.Subscription.Models.SubscriptionName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.RenamedSubscriptionId&gt;&gt;" Usage="mockableSubscriptionSubscriptionResource.RenameSubscriptionAsync (body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.RenamedSubscriptionId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="Azure.ResourceManager.Subscription.Models.SubscriptionName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="body"> Subscription Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to rename a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Subscription/rename</description></item><item><term>Operation Id</term><description>Subscription_Rename</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="body" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
