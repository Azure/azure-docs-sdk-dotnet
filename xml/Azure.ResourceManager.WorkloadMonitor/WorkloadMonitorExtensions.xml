<Type Name="WorkloadMonitorExtensions" FullName="Azure.ResourceManager.WorkloadMonitor.WorkloadMonitorExtensions">
  <TypeSignature Language="C#" Value="public static class WorkloadMonitorExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WorkloadMonitorExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.WorkloadMonitor.WorkloadMonitorExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module WorkloadMonitorExtensions" />
  <TypeSignature Language="F#" Value="type WorkloadMonitorExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.WorkloadMonitor</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.WorkloadMonitor. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetHealthMonitor">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource&gt; GetHealthMonitor (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string providerName, string resourceCollectionName, string resourceName, string monitorId, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource&gt; GetHealthMonitor(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string providerName, string resourceCollectionName, string resourceName, string monitorId, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadMonitor.WorkloadMonitorExtensions.GetHealthMonitor(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHealthMonitor (resourceGroupResource As ResourceGroupResource, providerName As String, resourceCollectionName As String, resourceName As String, monitorId As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of HealthMonitorResource)" />
      <MemberSignature Language="F#" Value="static member GetHealthMonitor : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource&gt;" Usage="Azure.ResourceManager.WorkloadMonitor.WorkloadMonitorExtensions.GetHealthMonitor (resourceGroupResource, providerName, resourceCollectionName, resourceName, monitorId, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadMonitor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="resourceCollectionName" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="monitorId" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="providerName"> The provider name (ex: Microsoft.Compute for virtual machines). </param>
        <param name="resourceCollectionName"> The resource collection name (ex: virtualMachines for virtual machines). </param>
        <param name="resourceName"> The name of the virtual machine. </param>
        <param name="monitorId"> The monitor Id of the virtual machine. </param>
        <param name="expand"> Optionally expand the monitor’s evidence and/or configuration. Example: $expand=evidence,configuration. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the current health status of a monitor of a virtual machine. Optional parameter: $expand (retrieve the monitor's evidence and configuration).
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerName}/{resourceCollectionName}/{resourceName}/providers/Microsoft.WorkloadMonitor/monitors/{monitorId}
            Operation Id: HealthMonitors_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerName" />, <paramref name="resourceCollectionName" />, <paramref name="resourceName" /> or <paramref name="monitorId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerName" />, <paramref name="resourceCollectionName" />, <paramref name="resourceName" /> or <paramref name="monitorId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHealthMonitorAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource&gt;&gt; GetHealthMonitorAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string providerName, string resourceCollectionName, string resourceName, string monitorId, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource&gt;&gt; GetHealthMonitorAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string providerName, string resourceCollectionName, string resourceName, string monitorId, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadMonitor.WorkloadMonitorExtensions.GetHealthMonitorAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHealthMonitorAsync (resourceGroupResource As ResourceGroupResource, providerName As String, resourceCollectionName As String, resourceName As String, monitorId As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of HealthMonitorResource))" />
      <MemberSignature Language="F#" Value="static member GetHealthMonitorAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource&gt;&gt;" Usage="Azure.ResourceManager.WorkloadMonitor.WorkloadMonitorExtensions.GetHealthMonitorAsync (resourceGroupResource, providerName, resourceCollectionName, resourceName, monitorId, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadMonitor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="resourceCollectionName" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="monitorId" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="providerName"> The provider name (ex: Microsoft.Compute for virtual machines). </param>
        <param name="resourceCollectionName"> The resource collection name (ex: virtualMachines for virtual machines). </param>
        <param name="resourceName"> The name of the virtual machine. </param>
        <param name="monitorId"> The monitor Id of the virtual machine. </param>
        <param name="expand"> Optionally expand the monitor’s evidence and/or configuration. Example: $expand=evidence,configuration. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the current health status of a monitor of a virtual machine. Optional parameter: $expand (retrieve the monitor's evidence and configuration).
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerName}/{resourceCollectionName}/{resourceName}/providers/Microsoft.WorkloadMonitor/monitors/{monitorId}
            Operation Id: HealthMonitors_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerName" />, <paramref name="resourceCollectionName" />, <paramref name="resourceName" /> or <paramref name="monitorId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerName" />, <paramref name="resourceCollectionName" />, <paramref name="resourceName" /> or <paramref name="monitorId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHealthMonitorResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource GetHealthMonitorResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource GetHealthMonitorResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadMonitor.WorkloadMonitorExtensions.GetHealthMonitorResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHealthMonitorResource (client As ArmClient, id As ResourceIdentifier) As HealthMonitorResource" />
      <MemberSignature Language="F#" Value="static member GetHealthMonitorResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource" Usage="Azure.ResourceManager.WorkloadMonitor.WorkloadMonitorExtensions.GetHealthMonitorResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadMonitor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadMonitor.HealthMonitorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHealthMonitors">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.WorkloadMonitor.HealthMonitorCollection GetHealthMonitors (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string providerName, string resourceCollectionName, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.WorkloadMonitor.HealthMonitorCollection GetHealthMonitors(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string providerName, string resourceCollectionName, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadMonitor.WorkloadMonitorExtensions.GetHealthMonitors(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHealthMonitors (resourceGroupResource As ResourceGroupResource, providerName As String, resourceCollectionName As String, resourceName As String) As HealthMonitorCollection" />
      <MemberSignature Language="F#" Value="static member GetHealthMonitors : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * string -&gt; Azure.ResourceManager.WorkloadMonitor.HealthMonitorCollection" Usage="Azure.ResourceManager.WorkloadMonitor.WorkloadMonitorExtensions.GetHealthMonitors (resourceGroupResource, providerName, resourceCollectionName, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadMonitor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.WorkloadMonitor.HealthMonitorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="resourceCollectionName" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="providerName"> The provider name (ex: Microsoft.Compute for virtual machines). </param>
        <param name="resourceCollectionName"> The resource collection name (ex: virtualMachines for virtual machines). </param>
        <param name="resourceName"> The name of the virtual machine. </param>
        <summary> Gets a collection of HealthMonitorResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of HealthMonitorResources and their operations over a HealthMonitorResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerName" />, <paramref name="resourceCollectionName" /> or <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerName" />, <paramref name="resourceCollectionName" /> or <paramref name="resourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHealthMonitorStateChangeResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.WorkloadMonitor.HealthMonitorStateChangeResource GetHealthMonitorStateChangeResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.WorkloadMonitor.HealthMonitorStateChangeResource GetHealthMonitorStateChangeResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadMonitor.WorkloadMonitorExtensions.GetHealthMonitorStateChangeResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHealthMonitorStateChangeResource (client As ArmClient, id As ResourceIdentifier) As HealthMonitorStateChangeResource" />
      <MemberSignature Language="F#" Value="static member GetHealthMonitorStateChangeResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.WorkloadMonitor.HealthMonitorStateChangeResource" Usage="Azure.ResourceManager.WorkloadMonitor.WorkloadMonitorExtensions.GetHealthMonitorStateChangeResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadMonitor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.WorkloadMonitor.HealthMonitorStateChangeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.WorkloadMonitor.HealthMonitorStateChangeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadMonitor.HealthMonitorStateChangeResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.WorkloadMonitor.HealthMonitorStateChangeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadMonitor.HealthMonitorStateChangeResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
