<Type Name="QuickbaseLinkedService" FullName="Azure.Analytics.Synapse.Artifacts.Models.QuickbaseLinkedService">
  <TypeSignature Language="C#" Value="public class QuickbaseLinkedService : Azure.Analytics.Synapse.Artifacts.Models.LinkedService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QuickbaseLinkedService extends Azure.Analytics.Synapse.Artifacts.Models.LinkedService" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Synapse.Artifacts.Models.QuickbaseLinkedService" />
  <TypeSignature Language="VB.NET" Value="Public Class QuickbaseLinkedService&#xA;Inherits LinkedService" />
  <TypeSignature Language="F#" Value="type QuickbaseLinkedService = class&#xA;    inherit LinkedService" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Analytics.Synapse.Artifacts.Models.LinkedService</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Text.Json.Serialization.JsonConverter(typeof(Azure.Analytics.Synapse.Artifacts.Models.QuickbaseLinkedService+QuickbaseLinkedServiceConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonConverter(typeof(Azure.Analytics.Synapse.Artifacts.Models.QuickbaseLinkedService+QuickbaseLinkedServiceConverter))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary> Linked service for Quickbase. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QuickbaseLinkedService (object url, Azure.Analytics.Synapse.Artifacts.Models.SecretBase userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object url, class Azure.Analytics.Synapse.Artifacts.Models.SecretBase userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.Models.QuickbaseLinkedService.#ctor(System.Object,Azure.Analytics.Synapse.Artifacts.Models.SecretBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As Object, userToken As SecretBase)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Synapse.Artifacts.Models.QuickbaseLinkedService : obj * Azure.Analytics.Synapse.Artifacts.Models.SecretBase -&gt; Azure.Analytics.Synapse.Artifacts.Models.QuickbaseLinkedService" Usage="new Azure.Analytics.Synapse.Artifacts.Models.QuickbaseLinkedService (url, userToken)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.Object" />
        <Parameter Name="userToken" Type="Azure.Analytics.Synapse.Artifacts.Models.SecretBase" />
      </Parameters>
      <Docs>
        <param name="url"> The url to connect Quickbase source. Type: string (or Expression with resultType string). </param>
        <param name="userToken">
            The user token for the Quickbase source.
            Please note <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.SecretBase" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.AzureKeyVaultSecretReference" /> and <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.SecureString" />.
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.QuickbaseLinkedService" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="url" /> or <paramref name="userToken" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptedCredential">
      <MemberSignature Language="C#" Value="public object EncryptedCredential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EncryptedCredential" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Synapse.Artifacts.Models.QuickbaseLinkedService.EncryptedCredential" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptedCredential As Object" />
      <MemberSignature Language="F#" Value="member this.EncryptedCredential : obj with get, set" Usage="Azure.Analytics.Synapse.Artifacts.Models.QuickbaseLinkedService.EncryptedCredential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public object Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Url" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Synapse.Artifacts.Models.QuickbaseLinkedService.Url" />
      <MemberSignature Language="VB.NET" Value="Public Property Url As Object" />
      <MemberSignature Language="F#" Value="member this.Url : obj with get, set" Usage="Azure.Analytics.Synapse.Artifacts.Models.QuickbaseLinkedService.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The url to connect Quickbase source. Type: string (or Expression with resultType string). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserToken">
      <MemberSignature Language="C#" Value="public Azure.Analytics.Synapse.Artifacts.Models.SecretBase UserToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Analytics.Synapse.Artifacts.Models.SecretBase UserToken" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Synapse.Artifacts.Models.QuickbaseLinkedService.UserToken" />
      <MemberSignature Language="VB.NET" Value="Public Property UserToken As SecretBase" />
      <MemberSignature Language="F#" Value="member this.UserToken : Azure.Analytics.Synapse.Artifacts.Models.SecretBase with get, set" Usage="Azure.Analytics.Synapse.Artifacts.Models.QuickbaseLinkedService.UserToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Artifacts.Models.SecretBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The user token for the Quickbase source.
            Please note <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.SecretBase" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.AzureKeyVaultSecretReference" /> and <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.SecureString" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
