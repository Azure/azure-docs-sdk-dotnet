<Type Name="IfConditionActivity" FullName="Azure.Analytics.Synapse.Artifacts.Models.IfConditionActivity">
  <TypeSignature Language="C#" Value="public class IfConditionActivity : Azure.Analytics.Synapse.Artifacts.Models.ControlActivity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IfConditionActivity extends Azure.Analytics.Synapse.Artifacts.Models.ControlActivity" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Synapse.Artifacts.Models.IfConditionActivity" />
  <TypeSignature Language="VB.NET" Value="Public Class IfConditionActivity&#xA;Inherits ControlActivity" />
  <TypeSignature Language="F#" Value="type IfConditionActivity = class&#xA;    inherit ControlActivity" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Analytics.Synapse.Artifacts.Models.ControlActivity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Text.Json.Serialization.JsonConverter(typeof(Azure.Analytics.Synapse.Artifacts.Models.IfConditionActivity+IfConditionActivityConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonConverter(typeof(Azure.Analytics.Synapse.Artifacts.Models.IfConditionActivity+IfConditionActivityConverter))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary> This activity evaluates a boolean expression and executes either the activities under the ifTrueActivities property or the ifFalseActivities property depending on the result of the expression. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IfConditionActivity (string name, Azure.Analytics.Synapse.Artifacts.Models.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class Azure.Analytics.Synapse.Artifacts.Models.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.Models.IfConditionActivity.#ctor(System.String,Azure.Analytics.Synapse.Artifacts.Models.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, expression As Expression)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Synapse.Artifacts.Models.IfConditionActivity : string * Azure.Analytics.Synapse.Artifacts.Models.Expression -&gt; Azure.Analytics.Synapse.Artifacts.Models.IfConditionActivity" Usage="new Azure.Analytics.Synapse.Artifacts.Models.IfConditionActivity (name, expression)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expression" Type="Azure.Analytics.Synapse.Artifacts.Models.Expression" />
      </Parameters>
      <Docs>
        <param name="name"> Activity name. </param>
        <param name="expression"> An expression that would evaluate to Boolean. This is used to determine the block of activities (ifTrueActivities or ifFalseActivities) that will be executed. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.IfConditionActivity" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> or <paramref name="expression" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public Azure.Analytics.Synapse.Artifacts.Models.Expression Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Analytics.Synapse.Artifacts.Models.Expression Expression" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Synapse.Artifacts.Models.IfConditionActivity.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As Expression" />
      <MemberSignature Language="F#" Value="member this.Expression : Azure.Analytics.Synapse.Artifacts.Models.Expression with get, set" Usage="Azure.Analytics.Synapse.Artifacts.Models.IfConditionActivity.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Artifacts.Models.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> An expression that would evaluate to Boolean. This is used to determine the block of activities (ifTrueActivities or ifFalseActivities) that will be executed. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IfFalseActivities">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.Analytics.Synapse.Artifacts.Models.Activity&gt; IfFalseActivities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.Activity&gt; IfFalseActivities" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Synapse.Artifacts.Models.IfConditionActivity.IfFalseActivities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IfFalseActivities As IList(Of Activity)" />
      <MemberSignature Language="F#" Value="member this.IfFalseActivities : System.Collections.Generic.IList&lt;Azure.Analytics.Synapse.Artifacts.Models.Activity&gt;" Usage="Azure.Analytics.Synapse.Artifacts.Models.IfConditionActivity.IfFalseActivities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.Analytics.Synapse.Artifacts.Models.Activity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            List of activities to execute if expression is evaluated to false. This is an optional property and if not provided, the activity will exit without any action.
            Please note <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.Activity" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.AppendVariableActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.AzureDataExplorerCommandActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.AzureFunctionActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.AzureMLBatchExecutionActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.AzureMLExecutePipelineActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.AzureMLUpdateResourceActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.ControlActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.CopyActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.CustomActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.DatabricksNotebookActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.DatabricksSparkJarActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.DatabricksSparkPythonActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.DataLakeAnalyticsUsqlActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.DeleteActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.ExecuteDataFlowActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.ExecutePipelineActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.ExecuteSsisPackageActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.ExecutionActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.FailActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.FilterActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.ForEachActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.GetMetadataActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.HDInsightHiveActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.HDInsightMapReduceActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.HDInsightPigActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.HDInsightSparkActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.HDInsightStreamingActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.IfConditionActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.LookupActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.ScriptActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.SetVariableActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.SynapseSparkJobDefinitionActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.SqlPoolStoredProcedureActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.SqlServerStoredProcedureActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.SwitchActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.SynapseNotebookActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.UntilActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.ValidationActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.WaitActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.WebActivity" /> and <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.WebHookActivity" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IfTrueActivities">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.Analytics.Synapse.Artifacts.Models.Activity&gt; IfTrueActivities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.Activity&gt; IfTrueActivities" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Synapse.Artifacts.Models.IfConditionActivity.IfTrueActivities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IfTrueActivities As IList(Of Activity)" />
      <MemberSignature Language="F#" Value="member this.IfTrueActivities : System.Collections.Generic.IList&lt;Azure.Analytics.Synapse.Artifacts.Models.Activity&gt;" Usage="Azure.Analytics.Synapse.Artifacts.Models.IfConditionActivity.IfTrueActivities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.Analytics.Synapse.Artifacts.Models.Activity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            List of activities to execute if expression is evaluated to true. This is an optional property and if not provided, the activity will exit without any action.
            Please note <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.Activity" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.AppendVariableActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.AzureDataExplorerCommandActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.AzureFunctionActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.AzureMLBatchExecutionActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.AzureMLExecutePipelineActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.AzureMLUpdateResourceActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.ControlActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.CopyActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.CustomActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.DatabricksNotebookActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.DatabricksSparkJarActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.DatabricksSparkPythonActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.DataLakeAnalyticsUsqlActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.DeleteActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.ExecuteDataFlowActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.ExecutePipelineActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.ExecuteSsisPackageActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.ExecutionActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.FailActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.FilterActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.ForEachActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.GetMetadataActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.HDInsightHiveActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.HDInsightMapReduceActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.HDInsightPigActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.HDInsightSparkActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.HDInsightStreamingActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.IfConditionActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.LookupActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.ScriptActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.SetVariableActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.SynapseSparkJobDefinitionActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.SqlPoolStoredProcedureActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.SqlServerStoredProcedureActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.SwitchActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.SynapseNotebookActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.UntilActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.ValidationActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.WaitActivity" />, <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.WebActivity" /> and <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.WebHookActivity" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
