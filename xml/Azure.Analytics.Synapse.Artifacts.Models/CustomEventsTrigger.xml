<Type Name="CustomEventsTrigger" FullName="Azure.Analytics.Synapse.Artifacts.Models.CustomEventsTrigger">
  <TypeSignature Language="C#" Value="public class CustomEventsTrigger : Azure.Analytics.Synapse.Artifacts.Models.MultiplePipelineTrigger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CustomEventsTrigger extends Azure.Analytics.Synapse.Artifacts.Models.MultiplePipelineTrigger" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Synapse.Artifacts.Models.CustomEventsTrigger" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomEventsTrigger&#xA;Inherits MultiplePipelineTrigger" />
  <TypeSignature Language="F#" Value="type CustomEventsTrigger = class&#xA;    inherit MultiplePipelineTrigger" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Analytics.Synapse.Artifacts.Models.MultiplePipelineTrigger</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Text.Json.Serialization.JsonConverter(typeof(Azure.Analytics.Synapse.Artifacts.Models.CustomEventsTrigger+CustomEventsTriggerConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonConverter(typeof(Azure.Analytics.Synapse.Artifacts.Models.CustomEventsTrigger+CustomEventsTriggerConverter))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary> Trigger that runs every time a custom event is received. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomEventsTrigger (System.Collections.Generic.IEnumerable&lt;object&gt; events, string scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;object&gt; events, string scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.Models.CustomEventsTrigger.#ctor(System.Collections.Generic.IEnumerable{System.Object},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (events As IEnumerable(Of Object), scope As String)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Synapse.Artifacts.Models.CustomEventsTrigger : seq&lt;obj&gt; * string -&gt; Azure.Analytics.Synapse.Artifacts.Models.CustomEventsTrigger" Usage="new Azure.Analytics.Synapse.Artifacts.Models.CustomEventsTrigger (events, scope)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
        <Parameter Name="scope" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="events"> The list of event types that cause this trigger to fire. </param>
        <param name="scope"> The ARM resource ID of the Azure Event Grid Topic. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.CustomEventsTrigger" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="events" /> or <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Events">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;object&gt; Events { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;object&gt; Events" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Synapse.Artifacts.Models.CustomEventsTrigger.Events" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Events As IList(Of Object)" />
      <MemberSignature Language="F#" Value="member this.Events : System.Collections.Generic.IList&lt;obj&gt;" Usage="Azure.Analytics.Synapse.Artifacts.Models.CustomEventsTrigger.Events" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The list of event types that cause this trigger to fire. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public string Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scope" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Synapse.Artifacts.Models.CustomEventsTrigger.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As String" />
      <MemberSignature Language="F#" Value="member this.Scope : string with get, set" Usage="Azure.Analytics.Synapse.Artifacts.Models.CustomEventsTrigger.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The ARM resource ID of the Azure Event Grid Topic. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubjectBeginsWith">
      <MemberSignature Language="C#" Value="public string SubjectBeginsWith { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubjectBeginsWith" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Synapse.Artifacts.Models.CustomEventsTrigger.SubjectBeginsWith" />
      <MemberSignature Language="VB.NET" Value="Public Property SubjectBeginsWith As String" />
      <MemberSignature Language="F#" Value="member this.SubjectBeginsWith : string with get, set" Usage="Azure.Analytics.Synapse.Artifacts.Models.CustomEventsTrigger.SubjectBeginsWith" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The event subject must begin with the pattern provided for trigger to fire. At least one of these must be provided: subjectBeginsWith, subjectEndsWith. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubjectEndsWith">
      <MemberSignature Language="C#" Value="public string SubjectEndsWith { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubjectEndsWith" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Synapse.Artifacts.Models.CustomEventsTrigger.SubjectEndsWith" />
      <MemberSignature Language="VB.NET" Value="Public Property SubjectEndsWith As String" />
      <MemberSignature Language="F#" Value="member this.SubjectEndsWith : string with get, set" Usage="Azure.Analytics.Synapse.Artifacts.Models.CustomEventsTrigger.SubjectEndsWith" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The event subject must end with the pattern provided for trigger to fire. At least one of these must be provided: subjectBeginsWith, subjectEndsWith. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
