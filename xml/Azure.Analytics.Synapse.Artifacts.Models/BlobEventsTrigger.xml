<Type Name="BlobEventsTrigger" FullName="Azure.Analytics.Synapse.Artifacts.Models.BlobEventsTrigger">
  <TypeSignature Language="C#" Value="public class BlobEventsTrigger : Azure.Analytics.Synapse.Artifacts.Models.MultiplePipelineTrigger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BlobEventsTrigger extends Azure.Analytics.Synapse.Artifacts.Models.MultiplePipelineTrigger" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Synapse.Artifacts.Models.BlobEventsTrigger" />
  <TypeSignature Language="VB.NET" Value="Public Class BlobEventsTrigger&#xA;Inherits MultiplePipelineTrigger" />
  <TypeSignature Language="F#" Value="type BlobEventsTrigger = class&#xA;    inherit MultiplePipelineTrigger" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Analytics.Synapse.Artifacts.Models.MultiplePipelineTrigger</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Text.Json.Serialization.JsonConverter(typeof(Azure.Analytics.Synapse.Artifacts.Models.BlobEventsTrigger+BlobEventsTriggerConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonConverter(typeof(Azure.Analytics.Synapse.Artifacts.Models.BlobEventsTrigger+BlobEventsTriggerConverter))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary> Trigger that runs every time a Blob event occurs. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlobEventsTrigger (System.Collections.Generic.IEnumerable&lt;Azure.Analytics.Synapse.Artifacts.Models.BlobEventType&gt; events, string scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.Analytics.Synapse.Artifacts.Models.BlobEventType&gt; events, string scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.Models.BlobEventsTrigger.#ctor(System.Collections.Generic.IEnumerable{Azure.Analytics.Synapse.Artifacts.Models.BlobEventType},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (events As IEnumerable(Of BlobEventType), scope As String)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Synapse.Artifacts.Models.BlobEventsTrigger : seq&lt;Azure.Analytics.Synapse.Artifacts.Models.BlobEventType&gt; * string -&gt; Azure.Analytics.Synapse.Artifacts.Models.BlobEventsTrigger" Usage="new Azure.Analytics.Synapse.Artifacts.Models.BlobEventsTrigger (events, scope)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.Generic.IEnumerable&lt;Azure.Analytics.Synapse.Artifacts.Models.BlobEventType&gt;" />
        <Parameter Name="scope" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="events"> The type of events that cause this trigger to fire. </param>
        <param name="scope"> The ARM resource ID of the Storage Account. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.BlobEventsTrigger" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="events" /> or <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="BlobPathBeginsWith">
      <MemberSignature Language="C#" Value="public string BlobPathBeginsWith { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BlobPathBeginsWith" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Synapse.Artifacts.Models.BlobEventsTrigger.BlobPathBeginsWith" />
      <MemberSignature Language="VB.NET" Value="Public Property BlobPathBeginsWith As String" />
      <MemberSignature Language="F#" Value="member this.BlobPathBeginsWith : string with get, set" Usage="Azure.Analytics.Synapse.Artifacts.Models.BlobEventsTrigger.BlobPathBeginsWith" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The blob path must begin with the pattern provided for trigger to fire. For example, '/records/blobs/december/' will only fire the trigger for blobs in the december folder under the records container. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobPathEndsWith">
      <MemberSignature Language="C#" Value="public string BlobPathEndsWith { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BlobPathEndsWith" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Synapse.Artifacts.Models.BlobEventsTrigger.BlobPathEndsWith" />
      <MemberSignature Language="VB.NET" Value="Public Property BlobPathEndsWith As String" />
      <MemberSignature Language="F#" Value="member this.BlobPathEndsWith : string with get, set" Usage="Azure.Analytics.Synapse.Artifacts.Models.BlobEventsTrigger.BlobPathEndsWith" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The blob path must end with the pattern provided for trigger to fire. For example, 'december/boxes.csv' will only fire the trigger for blobs named boxes in a december folder. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Events">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.Analytics.Synapse.Artifacts.Models.BlobEventType&gt; Events { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Azure.Analytics.Synapse.Artifacts.Models.BlobEventType&gt; Events" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Synapse.Artifacts.Models.BlobEventsTrigger.Events" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Events As IList(Of BlobEventType)" />
      <MemberSignature Language="F#" Value="member this.Events : System.Collections.Generic.IList&lt;Azure.Analytics.Synapse.Artifacts.Models.BlobEventType&gt;" Usage="Azure.Analytics.Synapse.Artifacts.Models.BlobEventsTrigger.Events" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.Analytics.Synapse.Artifacts.Models.BlobEventType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The type of events that cause this trigger to fire. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreEmptyBlobs">
      <MemberSignature Language="C#" Value="public bool? IgnoreEmptyBlobs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IgnoreEmptyBlobs" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Synapse.Artifacts.Models.BlobEventsTrigger.IgnoreEmptyBlobs" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreEmptyBlobs As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IgnoreEmptyBlobs : Nullable&lt;bool&gt; with get, set" Usage="Azure.Analytics.Synapse.Artifacts.Models.BlobEventsTrigger.IgnoreEmptyBlobs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> If set to true, blobs with zero bytes will be ignored. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public string Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scope" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Synapse.Artifacts.Models.BlobEventsTrigger.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As String" />
      <MemberSignature Language="F#" Value="member this.Scope : string with get, set" Usage="Azure.Analytics.Synapse.Artifacts.Models.BlobEventsTrigger.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The ARM resource ID of the Storage Account. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
