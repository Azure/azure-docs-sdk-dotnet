<Type Name="UntilActivity" FullName="Azure.Analytics.Synapse.Artifacts.Models.UntilActivity">
  <TypeSignature Language="C#" Value="public class UntilActivity : Azure.Analytics.Synapse.Artifacts.Models.ControlActivity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UntilActivity extends Azure.Analytics.Synapse.Artifacts.Models.ControlActivity" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Synapse.Artifacts.Models.UntilActivity" />
  <TypeSignature Language="VB.NET" Value="Public Class UntilActivity&#xA;Inherits ControlActivity" />
  <TypeSignature Language="F#" Value="type UntilActivity = class&#xA;    inherit ControlActivity" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Analytics.Synapse.Artifacts.Models.ControlActivity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Text.Json.Serialization.JsonConverter(typeof(Azure.Analytics.Synapse.Artifacts.Models.UntilActivity+UntilActivityConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonConverter(typeof(Azure.Analytics.Synapse.Artifacts.Models.UntilActivity+UntilActivityConverter))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary> This activity executes inner activities until the specified boolean expression results to true or timeout is reached, whichever is earlier. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UntilActivity (string name, Azure.Analytics.Synapse.Artifacts.Models.Expression expression, System.Collections.Generic.IEnumerable&lt;Azure.Analytics.Synapse.Artifacts.Models.Activity&gt; activities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class Azure.Analytics.Synapse.Artifacts.Models.Expression expression, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.Activity&gt; activities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.Models.UntilActivity.#ctor(System.String,Azure.Analytics.Synapse.Artifacts.Models.Expression,System.Collections.Generic.IEnumerable{Azure.Analytics.Synapse.Artifacts.Models.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, expression As Expression, activities As IEnumerable(Of Activity))" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Synapse.Artifacts.Models.UntilActivity : string * Azure.Analytics.Synapse.Artifacts.Models.Expression * seq&lt;Azure.Analytics.Synapse.Artifacts.Models.Activity&gt; -&gt; Azure.Analytics.Synapse.Artifacts.Models.UntilActivity" Usage="new Azure.Analytics.Synapse.Artifacts.Models.UntilActivity (name, expression, activities)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expression" Type="Azure.Analytics.Synapse.Artifacts.Models.Expression" />
        <Parameter Name="activities" Type="System.Collections.Generic.IEnumerable&lt;Azure.Analytics.Synapse.Artifacts.Models.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> Activity name. </param>
        <param name="expression"> An expression that would evaluate to Boolean. The loop will continue until this expression evaluates to true. </param>
        <param name="activities"> List of activities to execute. </param>
        <summary> Initializes a new instance of UntilActivity. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" />, <paramref name="expression" /> or <paramref name="activities" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Activities">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.Analytics.Synapse.Artifacts.Models.Activity&gt; Activities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.Activity&gt; Activities" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Synapse.Artifacts.Models.UntilActivity.Activities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Activities As IList(Of Activity)" />
      <MemberSignature Language="F#" Value="member this.Activities : System.Collections.Generic.IList&lt;Azure.Analytics.Synapse.Artifacts.Models.Activity&gt;" Usage="Azure.Analytics.Synapse.Artifacts.Models.UntilActivity.Activities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.Analytics.Synapse.Artifacts.Models.Activity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> List of activities to execute. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public Azure.Analytics.Synapse.Artifacts.Models.Expression Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Analytics.Synapse.Artifacts.Models.Expression Expression" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Synapse.Artifacts.Models.UntilActivity.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As Expression" />
      <MemberSignature Language="F#" Value="member this.Expression : Azure.Analytics.Synapse.Artifacts.Models.Expression with get, set" Usage="Azure.Analytics.Synapse.Artifacts.Models.UntilActivity.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Artifacts.Models.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> An expression that would evaluate to Boolean. The loop will continue until this expression evaluates to true. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public object Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Timeout" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Synapse.Artifacts.Models.UntilActivity.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Object" />
      <MemberSignature Language="F#" Value="member this.Timeout : obj with get, set" Usage="Azure.Analytics.Synapse.Artifacts.Models.UntilActivity.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Specifies the timeout for the activity to run. If there is no value specified, it takes the value of TimeSpan.FromDays(7) which is 1 week as default. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])). Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
