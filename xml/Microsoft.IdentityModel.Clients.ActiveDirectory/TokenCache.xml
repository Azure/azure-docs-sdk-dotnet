<Type Name="TokenCache" FullName="Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache">
  <TypeSignature Language="C#" Value="public class TokenCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TokenCache extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache" />
  <TypeSignature Language="VB.NET" Value="Public Class TokenCache" />
  <TypeSignature Language="F#" Value="type TokenCache = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.IdentityModel.Clients.ActiveDirectory</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.2.4.0</AssemblyVersion>
    <AssemblyVersion>5.2.5.0</AssemblyVersion>
    <AssemblyVersion>5.2.6.0</AssemblyVersion>
    <AssemblyVersion>5.2.7.0</AssemblyVersion>
    <AssemblyVersion>5.2.8.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Token cache class used by <see cref="T:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext" /> to store access and refresh tokens.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TokenCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Clients.ActiveDirectory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
        <AssemblyVersion>5.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.7.0</AssemblyVersion>
        <AssemblyVersion>5.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Default constructor.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TokenCache (byte[] state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As Byte())" />
      <MemberSignature Language="F#" Value="new Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache : byte[] -&gt; Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache" Usage="new Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Clients.ActiveDirectory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
        <AssemblyVersion>5.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.7.0</AssemblyVersion>
        <AssemblyVersion>5.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>
            Constructor receiving state of the cache
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterAccess">
      <MemberSignature Language="C#" Value="public Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.TokenCacheNotification AfterAccess { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache/TokenCacheNotification AfterAccess" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.AfterAccess" />
      <MemberSignature Language="VB.NET" Value="Public Property AfterAccess As TokenCache.TokenCacheNotification" />
      <MemberSignature Language="F#" Value="member this.AfterAccess : Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.TokenCacheNotification with get, set" Usage="Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.AfterAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Clients.ActiveDirectory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
        <AssemblyVersion>5.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.7.0</AssemblyVersion>
        <AssemblyVersion>5.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache+TokenCacheNotification</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Notification method called after any library method accesses the cache.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeAccess">
      <MemberSignature Language="C#" Value="public Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.TokenCacheNotification BeforeAccess { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache/TokenCacheNotification BeforeAccess" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.BeforeAccess" />
      <MemberSignature Language="VB.NET" Value="Public Property BeforeAccess As TokenCache.TokenCacheNotification" />
      <MemberSignature Language="F#" Value="member this.BeforeAccess : Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.TokenCacheNotification with get, set" Usage="Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.BeforeAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Clients.ActiveDirectory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
        <AssemblyVersion>5.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.7.0</AssemblyVersion>
        <AssemblyVersion>5.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache+TokenCacheNotification</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Notification method called before any library method accesses the cache.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeWrite">
      <MemberSignature Language="C#" Value="public Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.TokenCacheNotification BeforeWrite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache/TokenCacheNotification BeforeWrite" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.BeforeWrite" />
      <MemberSignature Language="VB.NET" Value="Public Property BeforeWrite As TokenCache.TokenCacheNotification" />
      <MemberSignature Language="F#" Value="member this.BeforeWrite : Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.TokenCacheNotification with get, set" Usage="Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.BeforeWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Clients.ActiveDirectory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
        <AssemblyVersion>5.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.7.0</AssemblyVersion>
        <AssemblyVersion>5.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache+TokenCacheNotification</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Notification method called before any library method writes to the cache. This notification can be used to reload
            the cache state from a row in database and lock that row. That database row can then be unlocked in <see cref="P:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.AfterAccess" /> notification.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="tokenCache.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Clients.ActiveDirectory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
        <AssemblyVersion>5.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.7.0</AssemblyVersion>
        <AssemblyVersion>5.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Clears the cache by deleting all the items. Note that if the cache is the default shared cache, clearing it would
            impact all the instances of <see cref="T:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext" /> which share that cache.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Clients.ActiveDirectory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
        <AssemblyVersion>5.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.7.0</AssemblyVersion>
        <AssemblyVersion>5.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the number of items in the cache. 
            </summary>
        <value>To be added.</value>
        <remarks>Does not trigger token cache notifications.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultShared">
      <MemberSignature Language="C#" Value="public static Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache DefaultShared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache DefaultShared" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.DefaultShared" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultShared As TokenCache" />
      <MemberSignature Language="F#" Value="member this.DefaultShared : Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache" Usage="Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.DefaultShared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Clients.ActiveDirectory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
        <AssemblyVersion>5.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.7.0</AssemblyVersion>
        <AssemblyVersion>5.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Static token cache shared by all instances of AuthenticationContext which do not explicitly pass a cache instance during construction.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public virtual void DeleteItem (Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteItem(class Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.DeleteItem(Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteItem (item As TokenCacheItem)" />
      <MemberSignature Language="F#" Value="abstract member DeleteItem : Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem -&gt; unit&#xA;override this.DeleteItem : Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem -&gt; unit" Usage="tokenCache.DeleteItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Clients.ActiveDirectory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
        <AssemblyVersion>5.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.7.0</AssemblyVersion>
        <AssemblyVersion>5.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem" />
      </Parameters>
      <Docs>
        <param name="item">The item to delete from the cache</param>
        <summary>
            Deletes an item from the cache.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public void Deserialize (byte[] adalState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Deserialize(unsigned int8[] adalState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.Deserialize(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deserialize (adalState As Byte())" />
      <MemberSignature Language="F#" Value="member this.Deserialize : byte[] -&gt; unit" Usage="tokenCache.Deserialize adalState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Clients.ActiveDirectory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
        <AssemblyVersion>5.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.7.0</AssemblyVersion>
        <AssemblyVersion>5.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.Obsolete("This is expected to be removed in MSAL.NET v3 and ADAL.NET v5. We recommend using SerializeAdalV3/DeserializeAdalV3. Read more: https://aka.ms/msal-net-3x-cache-breaking-change", false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This is expected to be removed in MSAL.NET v3 and ADAL.NET v5. We recommend using SerializeAdalV3/DeserializeAdalV3. Read more: https://aka.ms/msal-net-3x-cache-breaking-change", false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adalState" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="adalState">State of the cache in Adal V3+ format as a blob</param>
        <summary>
            Deserializes state of the cache. The state should be the blob received earlier by calling the method Serialize.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeserializeAdalAndUnifiedCache">
      <MemberSignature Language="C#" Value="public void DeserializeAdalAndUnifiedCache (Microsoft.Identity.Core.Cache.CacheData cacheData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeserializeAdalAndUnifiedCache(class Microsoft.Identity.Core.Cache.CacheData cacheData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.DeserializeAdalAndUnifiedCache(Microsoft.Identity.Core.Cache.CacheData)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeserializeAdalAndUnifiedCache (cacheData As CacheData)" />
      <MemberSignature Language="F#" Value="member this.DeserializeAdalAndUnifiedCache : Microsoft.Identity.Core.Cache.CacheData -&gt; unit" Usage="tokenCache.DeserializeAdalAndUnifiedCache cacheData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Clients.ActiveDirectory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
        <AssemblyVersion>5.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.7.0</AssemblyVersion>
        <AssemblyVersion>5.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.Obsolete("This is expected to be removed in MSAL.NET v3 and ADAL.NET v5. We recommend using SerializeAdalV3/DeserializeAdalV3. Read more: https://aka.ms/msal-net-3x-cache-breaking-change", false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This is expected to be removed in MSAL.NET v3 and ADAL.NET v5. We recommend using SerializeAdalV3/DeserializeAdalV3. Read more: https://aka.ms/msal-net-3x-cache-breaking-change", false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheData" Type="Microsoft.Identity.Core.Cache.CacheData" />
      </Parameters>
      <Docs>
        <param name="cacheData">Serialized token cache <see cref="T:Microsoft.Identity.Core.Cache.CacheData"></see></param>
        <summary>
            Deserializes state of the cache. The state should be the blob received earlier by calling the method Serialize.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeserializeAdalV3">
      <MemberSignature Language="C#" Value="public void DeserializeAdalV3 (byte[] adalState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeserializeAdalV3(unsigned int8[] adalState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.DeserializeAdalV3(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeserializeAdalV3 (adalState As Byte())" />
      <MemberSignature Language="F#" Value="member this.DeserializeAdalV3 : byte[] -&gt; unit" Usage="tokenCache.DeserializeAdalV3 adalState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Clients.ActiveDirectory</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
        <AssemblyVersion>5.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.7.0</AssemblyVersion>
        <AssemblyVersion>5.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adalState" Type="System.Byte[]" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="adalState">State of the cache in Adal V3+ format as a blob</param>
        <summary>
            Deserializes state of the cache. The state should be the blob received earlier by calling the method Serialize.
            </summary>
        <remarks>This should always be used in an app that references ADAL v3 or later</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeserializeMsalV2">
      <MemberSignature Language="C#" Value="public void DeserializeMsalV2 (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeserializeMsalV2(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.DeserializeMsalV2(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeserializeMsalV2 (bytes As Byte())" />
      <MemberSignature Language="F#" Value="member this.DeserializeMsalV2 : byte[] -&gt; unit" Usage="tokenCache.DeserializeMsalV2 bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Clients.ActiveDirectory</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
        <AssemblyVersion>5.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.7.0</AssemblyVersion>
        <AssemblyVersion>5.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="bytes">Byte stream representation of the cache</param>
        <summary>
            Deserializes parts of the token cache to the MSAL.NET 2.x cache format, which is compatible with ADAL.NET v4 and other MSAL.NET v2 applications.
            If you need to maintain SSO between an application using ADAL 3.x or MSAL 2.x, use both <see cref="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.SerializeAdalV3" />/<see cref="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.DeserializeAdalV3(System.Byte[])" /> and <see cref="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.SerializeMsalV2" />/<see cref="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.DeserializeMsalV2(System.Byte[])" />.
            </summary>
        <remarks>
            An application using ADAL should not rely exclusively on SerializeMsal* / DeserializeMsal* because access tokens and ID tokens will be lost, as they are not compatible between ADAL and MSAL. 
            This will cause ADAL to contact AAD for an access token on every AcquireTokenSilent call, introducing seconds of delay into your app.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeserializeMsalV3">
      <MemberSignature Language="C#" Value="public void DeserializeMsalV3 (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeserializeMsalV3(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.DeserializeMsalV3(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeserializeMsalV3 (bytes As Byte())" />
      <MemberSignature Language="F#" Value="member this.DeserializeMsalV3 : byte[] -&gt; unit" Usage="tokenCache.DeserializeMsalV3 bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Clients.ActiveDirectory</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
        <AssemblyVersion>5.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.7.0</AssemblyVersion>
        <AssemblyVersion>5.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="bytes">Byte stream representation of the cache</param>
        <summary>
            Deserializes the token cache to the MSAL.NET 3.x cache format, which is compatible with other MSAL desktop libraries, e.g. MSAL for Python and MSAL for Java.
            If you need to maintain SSO between an application using ADAL 3.x or later and MSAL 3.x use both <see cref="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.SerializeAdalV3" />/<see cref="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.DeserializeAdalV3(System.Byte[])" /> and <see cref="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.SerializeMsalV2" />/<see cref="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.DeserializeMsalV2(System.Byte[])" />.
            </summary>
        <remarks>
            An application using ADAL should not rely exclusively on SerializeMsal* / DeserializeMsal* because access tokens and ID tokens will be lost, as they are not compatible between ADAL and MSAL. 
            This will cause ADAL to contact AAD for an access token on every AcquireTokenSilent call, introducing seconds of delay into your app.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasStateChanged">
      <MemberSignature Language="C#" Value="public bool HasStateChanged { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasStateChanged" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.HasStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Property HasStateChanged As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasStateChanged : bool with get, set" Usage="Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.HasStateChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Clients.ActiveDirectory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
        <AssemblyVersion>5.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.7.0</AssemblyVersion>
        <AssemblyVersion>5.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the flag indicating whether cache state has changed. ADAL methods set this flag after any change. Caller application should reset 
            the flag after serializing and persisting the state of the cache.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadItems">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem&gt; ReadItems ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem&gt; ReadItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.ReadItems" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadItems () As IEnumerable(Of TokenCacheItem)" />
      <MemberSignature Language="F#" Value="abstract member ReadItems : unit -&gt; seq&lt;Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem&gt;&#xA;override this.ReadItems : unit -&gt; seq&lt;Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem&gt;" Usage="tokenCache.ReadItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Clients.ActiveDirectory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
        <AssemblyVersion>5.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.7.0</AssemblyVersion>
        <AssemblyVersion>5.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Reads a copy of the list of all items in the cache.
            </summary>
        <returns>The items in the cache</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public byte[] Serialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Serialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.Serialize" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize () As Byte()" />
      <MemberSignature Language="F#" Value="member this.Serialize : unit -&gt; byte[]" Usage="tokenCache.Serialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Clients.ActiveDirectory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
        <AssemblyVersion>5.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.7.0</AssemblyVersion>
        <AssemblyVersion>5.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.Obsolete("This is expected to be removed in MSAL.NET v3 and ADAL.NET v5. We recommend using SerializeAdalV3/DeserializeAdalV3. Read more: https://aka.ms/msal-net-3x-cache-breaking-change", false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This is expected to be removed in MSAL.NET v3 and ADAL.NET v5. We recommend using SerializeAdalV3/DeserializeAdalV3. Read more: https://aka.ms/msal-net-3x-cache-breaking-change", false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Serializes current state of the cache as a blob. Caller application can persist the blob and update the state of the cache later by 
            passing that blob back in constructor or by calling method Deserialize.
            </summary>
        <returns>Current state of the Adal V3+ cache as a blob</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeAdalAndUnifiedCache">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Core.Cache.CacheData SerializeAdalAndUnifiedCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Core.Cache.CacheData SerializeAdalAndUnifiedCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.SerializeAdalAndUnifiedCache" />
      <MemberSignature Language="VB.NET" Value="Public Function SerializeAdalAndUnifiedCache () As CacheData" />
      <MemberSignature Language="F#" Value="member this.SerializeAdalAndUnifiedCache : unit -&gt; Microsoft.Identity.Core.Cache.CacheData" Usage="tokenCache.SerializeAdalAndUnifiedCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Clients.ActiveDirectory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
        <AssemblyVersion>5.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.7.0</AssemblyVersion>
        <AssemblyVersion>5.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.Obsolete("This is expected to be removed in MSAL.NET v3 and ADAL.NET v5. We recommend using SerializeAdalV3/DeserializeAdalV3. Read more: https://aka.ms/msal-net-3x-cache-breaking-change", false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This is expected to be removed in MSAL.NET v3 and ADAL.NET v5. We recommend using SerializeAdalV3/DeserializeAdalV3. Read more: https://aka.ms/msal-net-3x-cache-breaking-change", false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Core.Cache.CacheData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Serializes current state of the cache as a blob. Caller application can persist the blob and update the state of the cache later by 
            passing that blob back in constructor or by calling method Deserialize.
            </summary>
        <returns>Serialized token cache <see cref="T:Microsoft.Identity.Core.Cache.CacheData" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeAdalV3">
      <MemberSignature Language="C#" Value="public byte[] SerializeAdalV3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SerializeAdalV3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.SerializeAdalV3" />
      <MemberSignature Language="VB.NET" Value="Public Function SerializeAdalV3 () As Byte()" />
      <MemberSignature Language="F#" Value="member this.SerializeAdalV3 : unit -&gt; byte[]" Usage="tokenCache.SerializeAdalV3 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Clients.ActiveDirectory</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
        <AssemblyVersion>5.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.7.0</AssemblyVersion>
        <AssemblyVersion>5.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Serializes current state of the cache as a blob. Caller application can persist the blob and update the state of the cache later by 
            passing that blob back in constructor or by calling method Deserialize.
            </summary>
        <returns>Current state of the Adal V3+ cache as a blob</returns>
        <remarks>This should always be used in an app that references ADAL v3 or later</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeMsalV2">
      <MemberSignature Language="C#" Value="public byte[] SerializeMsalV2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SerializeMsalV2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.SerializeMsalV2" />
      <MemberSignature Language="VB.NET" Value="Public Function SerializeMsalV2 () As Byte()" />
      <MemberSignature Language="F#" Value="member this.SerializeMsalV2 : unit -&gt; byte[]" Usage="tokenCache.SerializeMsalV2 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Clients.ActiveDirectory</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
        <AssemblyVersion>5.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.7.0</AssemblyVersion>
        <AssemblyVersion>5.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Serializes parts of the token cache to the MSAL.NET 2.x unified cache format.
            If you need to maintain SSO between an application using ADAL 3.x or later and MSAL 2.x, use both <see cref="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.SerializeAdalV3" />/<see cref="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.DeserializeAdalV3(System.Byte[])" /> and <see cref="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.SerializeMsalV2" />/<see cref="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.DeserializeMsalV2(System.Byte[])" />.
            </summary>
        <returns>Byte stream representation of the cache</returns>
        <remarks>
            An application using ADAL should not rely exclusively on SerializeMsal* / DeserializeMsal* because access tokens and ID tokens will be lost, as they are not compatible between ADAL and MSAL. 
            This will cause ADAL to contact AAD for an access token on every AcquireTokenSilent call, introducing seconds of delay into your app.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeMsalV3">
      <MemberSignature Language="C#" Value="public byte[] SerializeMsalV3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SerializeMsalV3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.SerializeMsalV3" />
      <MemberSignature Language="VB.NET" Value="Public Function SerializeMsalV3 () As Byte()" />
      <MemberSignature Language="F#" Value="member this.SerializeMsalV3 : unit -&gt; byte[]" Usage="tokenCache.SerializeMsalV3 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Clients.ActiveDirectory</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
        <AssemblyVersion>5.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.2.7.0</AssemblyVersion>
        <AssemblyVersion>5.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Serializes parts of the token cache to the MSAL.NET 3.x cache format, which is compatible with other MSAL desktop libraries, e.g. MSAL for Python and MSAL for Java.
            If you need to maintain SSO between an application using ADAL 3.x or later and MSAL 3.x use both <see cref="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.SerializeAdalV3" />/<see cref="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.DeserializeAdalV3(System.Byte[])" /> and <see cref="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.SerializeMsalV3" />/<see cref="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache.DeserializeMsalV3(System.Byte[])" />.
            </summary>
        <returns>Byte stream representation of the cache</returns>
        <remarks>
            An application using ADAL should not rely exclusively on SerializeMsal* / DeserializeMsal* because access tokens and ID tokens will be lost, as they are not compatible between ADAL and MSAL. 
            This will cause ADAL to contact AAD for an access token on every AcquireTokenSilent call, introducing seconds of delay into your app.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
