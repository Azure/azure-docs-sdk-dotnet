<Type Name="ServiceRemotingDataContractSerializationProvider" FullName="Microsoft.ServiceFabric.Services.Remoting.V2.ServiceRemotingDataContractSerializationProvider">
  <TypeSignature Language="C#" Value="public class ServiceRemotingDataContractSerializationProvider : Microsoft.ServiceFabric.Services.Remoting.V2.IServiceRemotingMessageSerializationProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceRemotingDataContractSerializationProvider extends System.Object implements class Microsoft.ServiceFabric.Services.Remoting.V2.IServiceRemotingMessageSerializationProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ServiceFabric.Services.Remoting.V2.ServiceRemotingDataContractSerializationProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceRemotingDataContractSerializationProvider&#xA;Implements IServiceRemotingMessageSerializationProvider" />
  <TypeSignature Language="F#" Value="type ServiceRemotingDataContractSerializationProvider = class&#xA;    interface IServiceRemotingMessageSerializationProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ServiceFabric.Services.Remoting</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ServiceFabric.Services.Remoting.V2.IServiceRemotingMessageSerializationProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            This is the default implmentation  for <see cref="T:Microsoft.ServiceFabric.Services.Remoting.V2.IServiceRemotingMessageSerializationProvider" />used by remoting service and client during
            request/response serialization . It used DataContract for serialization.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceRemotingDataContractSerializationProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Services.Remoting.V2.ServiceRemotingDataContractSerializationProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ServiceFabric.Services.Remoting</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ServiceFabric.Services.Remoting.V2.ServiceRemotingDataContractSerializationProvider" /> class
            with default IBufferPoolManager implementation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceRemotingDataContractSerializationProvider (Microsoft.ServiceFabric.Services.Remoting.V2.Messaging.IBufferPoolManager bodyBufferPoolManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ServiceFabric.Services.Remoting.V2.Messaging.IBufferPoolManager bodyBufferPoolManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Services.Remoting.V2.ServiceRemotingDataContractSerializationProvider.#ctor(Microsoft.ServiceFabric.Services.Remoting.V2.Messaging.IBufferPoolManager)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bodyBufferPoolManager As IBufferPoolManager)" />
      <MemberSignature Language="F#" Value="new Microsoft.ServiceFabric.Services.Remoting.V2.ServiceRemotingDataContractSerializationProvider : Microsoft.ServiceFabric.Services.Remoting.V2.Messaging.IBufferPoolManager -&gt; Microsoft.ServiceFabric.Services.Remoting.V2.ServiceRemotingDataContractSerializationProvider" Usage="new Microsoft.ServiceFabric.Services.Remoting.V2.ServiceRemotingDataContractSerializationProvider bodyBufferPoolManager" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ServiceFabric.Services.Remoting</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bodyBufferPoolManager" Type="Microsoft.ServiceFabric.Services.Remoting.V2.Messaging.IBufferPoolManager" />
      </Parameters>
      <Docs>
        <param name="bodyBufferPoolManager">The buffer pool manager for serializing the remoting message bodies.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ServiceFabric.Services.Remoting.V2.ServiceRemotingDataContractSerializationProvider" /> class
            with specified IBufferPoolManager implementation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageBodyFactory">
      <MemberSignature Language="C#" Value="public Microsoft.ServiceFabric.Services.Remoting.V2.IServiceRemotingMessageBodyFactory CreateMessageBodyFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ServiceFabric.Services.Remoting.V2.IServiceRemotingMessageBodyFactory CreateMessageBodyFactory() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Services.Remoting.V2.ServiceRemotingDataContractSerializationProvider.CreateMessageBodyFactory" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMessageBodyFactory () As IServiceRemotingMessageBodyFactory" />
      <MemberSignature Language="F#" Value="abstract member CreateMessageBodyFactory : unit -&gt; Microsoft.ServiceFabric.Services.Remoting.V2.IServiceRemotingMessageBodyFactory&#xA;override this.CreateMessageBodyFactory : unit -&gt; Microsoft.ServiceFabric.Services.Remoting.V2.IServiceRemotingMessageBodyFactory" Usage="serviceRemotingDataContractSerializationProvider.CreateMessageBodyFactory " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ServiceFabric.Services.Remoting.V2.IServiceRemotingMessageSerializationProvider.CreateMessageBodyFactory</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ServiceFabric.Services.Remoting</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ServiceFabric.Services.Remoting.V2.IServiceRemotingMessageBodyFactory</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a MessageFactory for DataContract Remoting Types. This is used to create Remoting Request/Response objects.
            </summary>
        <returns>
          <see cref="T:Microsoft.ServiceFabric.Services.Remoting.V2.IServiceRemotingMessageBodyFactory" /> that provides an instance of the factory for creating
            remoting request and response message bodies.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRemotingRequestMessageBodyDataContractSerializer">
      <MemberSignature Language="C#" Value="protected internal virtual System.Runtime.Serialization.DataContractSerializer CreateRemotingRequestMessageBodyDataContractSerializer (Type remotingRequestType, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Runtime.Serialization.DataContractSerializer CreateRemotingRequestMessageBodyDataContractSerializer(class System.Type remotingRequestType, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Services.Remoting.V2.ServiceRemotingDataContractSerializationProvider.CreateRemotingRequestMessageBodyDataContractSerializer(System.Type,System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateRemotingRequestMessageBodyDataContractSerializer (remotingRequestType As Type, knownTypes As IEnumerable(Of Type)) As DataContractSerializer" />
      <MemberSignature Language="F#" Value="abstract member CreateRemotingRequestMessageBodyDataContractSerializer : Type * seq&lt;Type&gt; -&gt; System.Runtime.Serialization.DataContractSerializer&#xA;override this.CreateRemotingRequestMessageBodyDataContractSerializer : Type * seq&lt;Type&gt; -&gt; System.Runtime.Serialization.DataContractSerializer" Usage="serviceRemotingDataContractSerializationProvider.CreateRemotingRequestMessageBodyDataContractSerializer (remotingRequestType, knownTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ServiceFabric.Services.Remoting</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.DataContractSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remotingRequestType" Type="System.Type" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="remotingRequestType">Remoting RequestMessageBody Type</param>
        <param name="knownTypes">The return types of all of the methods of the specified interface.</param>
        <summary>
                Gets the settings used to create DataContractSerializer for serializing and de-serializing request message body.
            </summary>
        <returns>
          <see cref="T:System.Runtime.Serialization.DataContractSerializerSettings" /> for serializing and de-serializing request message body.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRemotingResponseMessageBodyDataContractSerializer">
      <MemberSignature Language="C#" Value="protected internal virtual System.Runtime.Serialization.DataContractSerializer CreateRemotingResponseMessageBodyDataContractSerializer (Type remotingResponseType, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Runtime.Serialization.DataContractSerializer CreateRemotingResponseMessageBodyDataContractSerializer(class System.Type remotingResponseType, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Services.Remoting.V2.ServiceRemotingDataContractSerializationProvider.CreateRemotingResponseMessageBodyDataContractSerializer(System.Type,System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateRemotingResponseMessageBodyDataContractSerializer (remotingResponseType As Type, knownTypes As IEnumerable(Of Type)) As DataContractSerializer" />
      <MemberSignature Language="F#" Value="abstract member CreateRemotingResponseMessageBodyDataContractSerializer : Type * seq&lt;Type&gt; -&gt; System.Runtime.Serialization.DataContractSerializer&#xA;override this.CreateRemotingResponseMessageBodyDataContractSerializer : Type * seq&lt;Type&gt; -&gt; System.Runtime.Serialization.DataContractSerializer" Usage="serviceRemotingDataContractSerializationProvider.CreateRemotingResponseMessageBodyDataContractSerializer (remotingResponseType, knownTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ServiceFabric.Services.Remoting</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.DataContractSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remotingResponseType" Type="System.Type" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="remotingResponseType">Remoting ResponseMessage Type</param>
        <param name="knownTypes">The return types of all of the methods of the specified interface.</param>
        <summary>
                Gets the settings used to create DataContractSerializer for serializing and de-serializing request message body.
            </summary>
        <returns>
          <see cref="T:System.Runtime.Serialization.DataContractSerializerSettings" /> for serializing and de-serializing request message body.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRequestMessageSerializer">
      <MemberSignature Language="C#" Value="public Microsoft.ServiceFabric.Services.Remoting.V2.IServiceRemotingRequestMessageBodySerializer CreateRequestMessageSerializer (Type serviceInterfaceType, System.Collections.Generic.IEnumerable&lt;Type&gt; methodParameterTypes, System.Collections.Generic.IEnumerable&lt;Type&gt; wrappedMessageTypes = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ServiceFabric.Services.Remoting.V2.IServiceRemotingRequestMessageBodySerializer CreateRequestMessageSerializer(class System.Type serviceInterfaceType, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; methodParameterTypes, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; wrappedMessageTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Services.Remoting.V2.ServiceRemotingDataContractSerializationProvider.CreateRequestMessageSerializer(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRequestMessageSerializer (serviceInterfaceType As Type, methodParameterTypes As IEnumerable(Of Type), Optional wrappedMessageTypes As IEnumerable(Of Type) = null) As IServiceRemotingRequestMessageBodySerializer" />
      <MemberSignature Language="F#" Value="abstract member CreateRequestMessageSerializer : Type * seq&lt;Type&gt; * seq&lt;Type&gt; -&gt; Microsoft.ServiceFabric.Services.Remoting.V2.IServiceRemotingRequestMessageBodySerializer&#xA;override this.CreateRequestMessageSerializer : Type * seq&lt;Type&gt; * seq&lt;Type&gt; -&gt; Microsoft.ServiceFabric.Services.Remoting.V2.IServiceRemotingRequestMessageBodySerializer" Usage="serviceRemotingDataContractSerializationProvider.CreateRequestMessageSerializer (serviceInterfaceType, methodParameterTypes, wrappedMessageTypes)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ServiceFabric.Services.Remoting.V2.IServiceRemotingMessageSerializationProvider.CreateRequestMessageSerializer(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Collections.Generic.IEnumerable{System.Type})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ServiceFabric.Services.Remoting</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ServiceFabric.Services.Remoting.V2.IServiceRemotingRequestMessageBodySerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceInterfaceType" Type="System.Type" />
        <Parameter Name="methodParameterTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="wrappedMessageTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="serviceInterfaceType">The remoted service interface.</param>
        <param name="methodParameterTypes">The union of parameter types of all of the methods of the specified interface.</param>
        <param name="wrappedMessageTypes">Wrapped Request Types for all Methods</param>
        <summary>
            Creates IServiceRemotingRequestMessageBodySerializer for a serviceInterface using DataContract implementation
            </summary>
        <returns>
            An instance of the <see cref="T:Microsoft.ServiceFabric.Services.Remoting.V2.IServiceRemotingRequestMessageBodySerializer" /> that can serialize the service
            remoting request message body to a messaging body for transferring over the transport.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResponseMessageSerializer">
      <MemberSignature Language="C#" Value="public Microsoft.ServiceFabric.Services.Remoting.V2.IServiceRemotingResponseMessageBodySerializer CreateResponseMessageSerializer (Type serviceInterfaceType, System.Collections.Generic.IEnumerable&lt;Type&gt; methodReturnTypes, System.Collections.Generic.IEnumerable&lt;Type&gt; wrappedMessageTypes = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ServiceFabric.Services.Remoting.V2.IServiceRemotingResponseMessageBodySerializer CreateResponseMessageSerializer(class System.Type serviceInterfaceType, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; methodReturnTypes, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; wrappedMessageTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Services.Remoting.V2.ServiceRemotingDataContractSerializationProvider.CreateResponseMessageSerializer(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateResponseMessageSerializer (serviceInterfaceType As Type, methodReturnTypes As IEnumerable(Of Type), Optional wrappedMessageTypes As IEnumerable(Of Type) = null) As IServiceRemotingResponseMessageBodySerializer" />
      <MemberSignature Language="F#" Value="abstract member CreateResponseMessageSerializer : Type * seq&lt;Type&gt; * seq&lt;Type&gt; -&gt; Microsoft.ServiceFabric.Services.Remoting.V2.IServiceRemotingResponseMessageBodySerializer&#xA;override this.CreateResponseMessageSerializer : Type * seq&lt;Type&gt; * seq&lt;Type&gt; -&gt; Microsoft.ServiceFabric.Services.Remoting.V2.IServiceRemotingResponseMessageBodySerializer" Usage="serviceRemotingDataContractSerializationProvider.CreateResponseMessageSerializer (serviceInterfaceType, methodReturnTypes, wrappedMessageTypes)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ServiceFabric.Services.Remoting.V2.IServiceRemotingMessageSerializationProvider.CreateResponseMessageSerializer(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Collections.Generic.IEnumerable{System.Type})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ServiceFabric.Services.Remoting</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ServiceFabric.Services.Remoting.V2.IServiceRemotingResponseMessageBodySerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceInterfaceType" Type="System.Type" />
        <Parameter Name="methodReturnTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="wrappedMessageTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="serviceInterfaceType">The remoted service interface.</param>
        <param name="methodReturnTypes">The return types of all of the methods of the specified interface.</param>
        <param name="wrappedMessageTypes">Wrapped Response Types for all remoting methods</param>
        <summary>
            Creates IServiceRemotingResponseMessageBodySerializer for a serviceInterface using DataContract implementation
            </summary>
        <returns>
            An instance of the <see cref="T:Microsoft.ServiceFabric.Services.Remoting.V2.IServiceRemotingResponseMessageBodySerializer" /> that can serialize the service
            remoting response message body to a messaging body for transferring over the transport.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateXmlDictionaryReader">
      <MemberSignature Language="C#" Value="protected internal virtual System.Xml.XmlDictionaryReader CreateXmlDictionaryReader (System.IO.Stream inputStream);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Xml.XmlDictionaryReader CreateXmlDictionaryReader(class System.IO.Stream inputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Services.Remoting.V2.ServiceRemotingDataContractSerializationProvider.CreateXmlDictionaryReader(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateXmlDictionaryReader (inputStream As Stream) As XmlDictionaryReader" />
      <MemberSignature Language="F#" Value="abstract member CreateXmlDictionaryReader : System.IO.Stream -&gt; System.Xml.XmlDictionaryReader&#xA;override this.CreateXmlDictionaryReader : System.IO.Stream -&gt; System.Xml.XmlDictionaryReader" Usage="serviceRemotingDataContractSerializationProvider.CreateXmlDictionaryReader inputStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ServiceFabric.Services.Remoting</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inputStream">The stream from which to read the serialized contents.</param>
        <summary>
                Create the reader to read from the input stream. Use this method to customize how the serialized contents are read
                from the stream.
            </summary>
        <returns>
                An <see cref="T:System.Xml.XmlDictionaryReader" /> using which the serializer will read the object from the
                stream.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateXmlDictionaryWriter">
      <MemberSignature Language="C#" Value="protected internal virtual System.Xml.XmlDictionaryWriter CreateXmlDictionaryWriter (System.IO.Stream outputStream);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Xml.XmlDictionaryWriter CreateXmlDictionaryWriter(class System.IO.Stream outputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Services.Remoting.V2.ServiceRemotingDataContractSerializationProvider.CreateXmlDictionaryWriter(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateXmlDictionaryWriter (outputStream As Stream) As XmlDictionaryWriter" />
      <MemberSignature Language="F#" Value="abstract member CreateXmlDictionaryWriter : System.IO.Stream -&gt; System.Xml.XmlDictionaryWriter&#xA;override this.CreateXmlDictionaryWriter : System.IO.Stream -&gt; System.Xml.XmlDictionaryWriter" Usage="serviceRemotingDataContractSerializationProvider.CreateXmlDictionaryWriter outputStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ServiceFabric.Services.Remoting</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="outputStream">The stream on which to write the serialized contents.</param>
        <summary>
                Create the writer to write to the stream. Use this method to customize how the serialized contents are written to
                the stream.
            </summary>
        <returns>
                An <see cref="T:System.Xml.XmlDictionaryWriter" /> using which the serializer will write the object on the
                stream.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>