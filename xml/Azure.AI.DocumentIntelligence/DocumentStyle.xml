<Type Name="DocumentStyle" FullName="Azure.AI.DocumentIntelligence.DocumentStyle">
  <TypeSignature Language="C#" Value="public class DocumentStyle : System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DocumentStyle extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.AI.DocumentIntelligence.DocumentStyle&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.AI.DocumentIntelligence.DocumentStyle&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.DocumentIntelligence.DocumentStyle" />
  <TypeSignature Language="VB.NET" Value="Public Class DocumentStyle&#xA;Implements IJsonModel(Of DocumentStyle), IPersistableModel(Of DocumentStyle)" />
  <TypeSignature Language="F#" Value="type DocumentStyle = class&#xA;    interface IJsonModel&lt;DocumentStyle&gt;&#xA;    interface IPersistableModel&lt;DocumentStyle&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> An object representing observed text styles. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BackgroundColor">
      <MemberSignature Language="C#" Value="public string BackgroundColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackgroundColor" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.DocumentStyle.BackgroundColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BackgroundColor As String" />
      <MemberSignature Language="F#" Value="member this.BackgroundColor : string" Usage="Azure.AI.DocumentIntelligence.DocumentStyle.BackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Background color in #rrggbb hexadecimal format.. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public string Color { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Color" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.DocumentStyle.Color" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Color As String" />
      <MemberSignature Language="F#" Value="member this.Color : string" Usage="Azure.AI.DocumentIntelligence.DocumentStyle.Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Foreground color in #rrggbb hexadecimal format. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Confidence">
      <MemberSignature Language="C#" Value="public float Confidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Confidence" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.DocumentStyle.Confidence" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Confidence As Single" />
      <MemberSignature Language="F#" Value="member this.Confidence : single" Usage="Azure.AI.DocumentIntelligence.DocumentStyle.Confidence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Confidence of correctly identifying the style. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontStyle">
      <MemberSignature Language="C#" Value="public Azure.AI.DocumentIntelligence.DocumentFontStyle? FontStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.AI.DocumentIntelligence.DocumentFontStyle&gt; FontStyle" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.DocumentStyle.FontStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FontStyle As Nullable(Of DocumentFontStyle)" />
      <MemberSignature Language="F#" Value="member this.FontStyle : Nullable&lt;Azure.AI.DocumentIntelligence.DocumentFontStyle&gt;" Usage="Azure.AI.DocumentIntelligence.DocumentStyle.FontStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.AI.DocumentIntelligence.DocumentFontStyle&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Font style. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontWeight">
      <MemberSignature Language="C#" Value="public Azure.AI.DocumentIntelligence.DocumentFontWeight? FontWeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.AI.DocumentIntelligence.DocumentFontWeight&gt; FontWeight" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.DocumentStyle.FontWeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FontWeight As Nullable(Of DocumentFontWeight)" />
      <MemberSignature Language="F#" Value="member this.FontWeight : Nullable&lt;Azure.AI.DocumentIntelligence.DocumentFontWeight&gt;" Usage="Azure.AI.DocumentIntelligence.DocumentStyle.FontWeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.AI.DocumentIntelligence.DocumentFontWeight&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Font weight. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHandwritten">
      <MemberSignature Language="C#" Value="public bool? IsHandwritten { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsHandwritten" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.DocumentStyle.IsHandwritten" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHandwritten As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsHandwritten : Nullable&lt;bool&gt;" Usage="Azure.AI.DocumentIntelligence.DocumentStyle.IsHandwritten" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Is content handwritten?. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SimilarFontFamily">
      <MemberSignature Language="C#" Value="public string SimilarFontFamily { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SimilarFontFamily" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.DocumentStyle.SimilarFontFamily" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SimilarFontFamily As String" />
      <MemberSignature Language="F#" Value="member this.SimilarFontFamily : string" Usage="Azure.AI.DocumentIntelligence.DocumentStyle.SimilarFontFamily" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Visually most similar font from among the set of supported font families, with
            fallback fonts following CSS convention (ex. 'Arial, sans-serif').
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Spans">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentSpan&gt; Spans { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.AI.DocumentIntelligence.DocumentSpan&gt; Spans" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.DocumentStyle.Spans" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Spans As IReadOnlyList(Of DocumentSpan)" />
      <MemberSignature Language="F#" Value="member this.Spans : System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentSpan&gt;" Usage="Azure.AI.DocumentIntelligence.DocumentStyle.Spans" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Location of the text elements in the concatenated content the style applies to. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.DocumentIntelligence.DocumentStyle IJsonModel&lt;DocumentStyle&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.DocumentIntelligence.DocumentStyle System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.DocumentIntelligence.DocumentStyle.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#DocumentIntelligence#DocumentStyle&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As DocumentStyle Implements IJsonModel(Of DocumentStyle).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.DocumentIntelligence.DocumentStyle&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.DocumentIntelligence.DocumentStyle" Usage="documentStyle.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.DocumentIntelligence.DocumentStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;DocumentStyle&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.DocumentIntelligence.DocumentStyle.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#DocumentIntelligence#DocumentStyle&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of DocumentStyle).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="documentStyle.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.DocumentIntelligence.DocumentStyle IPersistableModel&lt;DocumentStyle&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.DocumentIntelligence.DocumentStyle System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.DocumentIntelligence.DocumentStyle.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#DocumentIntelligence#DocumentStyle&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As DocumentStyle Implements IPersistableModel(Of DocumentStyle).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.DocumentIntelligence.DocumentStyle&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.DocumentIntelligence.DocumentStyle" Usage="documentStyle.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.DocumentIntelligence.DocumentStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;DocumentStyle&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.DocumentIntelligence.DocumentStyle.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#DocumentIntelligence#DocumentStyle&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of DocumentStyle).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="documentStyle.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;DocumentStyle&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.DocumentIntelligence.DocumentStyle.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#DocumentIntelligence#DocumentStyle&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of DocumentStyle).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="documentStyle.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
