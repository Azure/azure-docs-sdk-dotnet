<Type Name="ClassifyDocumentOptions" FullName="Azure.AI.DocumentIntelligence.ClassifyDocumentOptions">
  <TypeSignature Language="C#" Value="public class ClassifyDocumentOptions : System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClassifyDocumentOptions extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.DocumentIntelligence.ClassifyDocumentOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ClassifyDocumentOptions&#xA;Implements IJsonModel(Of ClassifyDocumentOptions), IPersistableModel(Of ClassifyDocumentOptions)" />
  <TypeSignature Language="F#" Value="type ClassifyDocumentOptions = class&#xA;    interface IJsonModel&lt;ClassifyDocumentOptions&gt;&#xA;    interface IPersistableModel&lt;ClassifyDocumentOptions&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Document classification parameters. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClassifyDocumentOptions (string classifierId, BinaryData bytesSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string classifierId, class System.BinaryData bytesSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.DocumentIntelligence.ClassifyDocumentOptions.#ctor(System.String,System.BinaryData)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classifierId As String, bytesSource As BinaryData)" />
      <MemberSignature Language="F#" Value="new Azure.AI.DocumentIntelligence.ClassifyDocumentOptions : string * BinaryData -&gt; Azure.AI.DocumentIntelligence.ClassifyDocumentOptions" Usage="new Azure.AI.DocumentIntelligence.ClassifyDocumentOptions (classifierId, bytesSource)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="classifierId" Type="System.String" />
        <Parameter Name="bytesSource" Type="System.BinaryData" />
      </Parameters>
      <Docs>
        <param name="classifierId"> Unique document classifier name. </param>
        <param name="bytesSource">
            Bytes of the document to analyze.
            <para>
            To assign a byte[] to this property use <see cref="M:System.BinaryData.FromBytes(System.Byte[])" />.
            The byte[] will be serialized to a Base64 encoded string.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromBytes(new byte[] { 1, 2, 3 })</term><description>Creates a payload of "AQID".</description></item></list></para></param>
        <summary>
            Initializes a new instance of <see cref="T:Azure.AI.DocumentIntelligence.ClassifyDocumentOptions" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="classifierId" /> or <paramref name="bytesSource" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="classifierId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClassifyDocumentOptions (string classifierId, Uri uriSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string classifierId, class System.Uri uriSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.DocumentIntelligence.ClassifyDocumentOptions.#ctor(System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classifierId As String, uriSource As Uri)" />
      <MemberSignature Language="F#" Value="new Azure.AI.DocumentIntelligence.ClassifyDocumentOptions : string * Uri -&gt; Azure.AI.DocumentIntelligence.ClassifyDocumentOptions" Usage="new Azure.AI.DocumentIntelligence.ClassifyDocumentOptions (classifierId, uriSource)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="classifierId" Type="System.String" />
        <Parameter Name="uriSource" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="classifierId"> Unique document classifier name. </param>
        <param name="uriSource"> Document URL to analyze. </param>
        <summary>
            Initializes a new instance of <see cref="T:Azure.AI.DocumentIntelligence.ClassifyDocumentOptions" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="classifierId" /> or <paramref name="uriSource" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="classifierId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="BytesSource">
      <MemberSignature Language="C#" Value="public BinaryData BytesSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData BytesSource" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.ClassifyDocumentOptions.BytesSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesSource As BinaryData" />
      <MemberSignature Language="F#" Value="member this.BytesSource : BinaryData" Usage="Azure.AI.DocumentIntelligence.ClassifyDocumentOptions.BytesSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Bytes of the document to classify.
            <para>
            To assign a byte[] to this property use <see cref="M:System.BinaryData.FromBytes(System.Byte[])" />.
            The byte[] will be serialized to a Base64 encoded string.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromBytes(new byte[] { 1, 2, 3 })</term><description>Creates a payload of "AQID".</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassifierId">
      <MemberSignature Language="C#" Value="public string ClassifierId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassifierId" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.ClassifyDocumentOptions.ClassifierId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClassifierId As String" />
      <MemberSignature Language="F#" Value="member this.ClassifierId : string" Usage="Azure.AI.DocumentIntelligence.ClassifyDocumentOptions.ClassifierId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Unique document classifier name.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JsonModelWriteCore">
      <MemberSignature Language="C#" Value="protected virtual void JsonModelWriteCore (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void JsonModelWriteCore(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.DocumentIntelligence.ClassifyDocumentOptions.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub JsonModelWriteCore (writer As Utf8JsonWriter, options As ModelReaderWriterOptions)" />
      <MemberSignature Language="F#" Value="abstract member JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="classifyDocumentOptions.JsonModelWriteCore (writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer"> The JSON writer. </param>
        <param name="options"> The client options for reading and writing models. </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pages">
      <MemberSignature Language="C#" Value="public string Pages { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pages" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.ClassifyDocumentOptions.Pages" />
      <MemberSignature Language="VB.NET" Value="Public Property Pages As String" />
      <MemberSignature Language="F#" Value="member this.Pages : string with get, set" Usage="Azure.AI.DocumentIntelligence.ClassifyDocumentOptions.Pages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            1-based page numbers to analyze.  Ex. "1-3,5,7-9".
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public Azure.AI.DocumentIntelligence.SplitMode? Split { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.AI.DocumentIntelligence.SplitMode&gt; Split" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.ClassifyDocumentOptions.Split" />
      <MemberSignature Language="VB.NET" Value="Public Property Split As Nullable(Of SplitMode)" />
      <MemberSignature Language="F#" Value="member this.Split : Nullable&lt;Azure.AI.DocumentIntelligence.SplitMode&gt; with get, set" Usage="Azure.AI.DocumentIntelligence.ClassifyDocumentOptions.Split" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.AI.DocumentIntelligence.SplitMode&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Document splitting mode.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.DocumentIntelligence.ClassifyDocumentOptions IJsonModel&lt;ClassifyDocumentOptions&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.DocumentIntelligence.ClassifyDocumentOptions System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.DocumentIntelligence.ClassifyDocumentOptions.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#DocumentIntelligence#ClassifyDocumentOptions&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As ClassifyDocumentOptions Implements IJsonModel(Of ClassifyDocumentOptions).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.DocumentIntelligence.ClassifyDocumentOptions" Usage="classifyDocumentOptions.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.DocumentIntelligence.ClassifyDocumentOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;ClassifyDocumentOptions&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.DocumentIntelligence.ClassifyDocumentOptions.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#DocumentIntelligence#ClassifyDocumentOptions&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of ClassifyDocumentOptions).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="classifyDocumentOptions.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.DocumentIntelligence.ClassifyDocumentOptions IPersistableModel&lt;ClassifyDocumentOptions&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.DocumentIntelligence.ClassifyDocumentOptions System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.DocumentIntelligence.ClassifyDocumentOptions.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#DocumentIntelligence#ClassifyDocumentOptions&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As ClassifyDocumentOptions Implements IPersistableModel(Of ClassifyDocumentOptions).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.DocumentIntelligence.ClassifyDocumentOptions" Usage="classifyDocumentOptions.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.DocumentIntelligence.ClassifyDocumentOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;ClassifyDocumentOptions&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.DocumentIntelligence.ClassifyDocumentOptions.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#DocumentIntelligence#ClassifyDocumentOptions&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of ClassifyDocumentOptions).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="classifyDocumentOptions.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary>
        <returns>The format that the model uses when communicating with the service.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;ClassifyDocumentOptions&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.DocumentIntelligence.ClassifyDocumentOptions.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#DocumentIntelligence#ClassifyDocumentOptions&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of ClassifyDocumentOptions).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="classifyDocumentOptions.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.ClassifyDocumentOptions&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UriSource">
      <MemberSignature Language="C#" Value="public Uri UriSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UriSource" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.ClassifyDocumentOptions.UriSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UriSource As Uri" />
      <MemberSignature Language="F#" Value="member this.UriSource : Uri" Usage="Azure.AI.DocumentIntelligence.ClassifyDocumentOptions.UriSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Document URL to classify. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
