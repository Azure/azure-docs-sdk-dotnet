<Type Name="AnalyzeResult" FullName="Azure.AI.DocumentIntelligence.AnalyzeResult">
  <TypeSignature Language="C#" Value="public class AnalyzeResult : System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AnalyzeResult extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.AI.DocumentIntelligence.AnalyzeResult&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.AI.DocumentIntelligence.AnalyzeResult&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.DocumentIntelligence.AnalyzeResult" />
  <TypeSignature Language="VB.NET" Value="Public Class AnalyzeResult&#xA;Implements IJsonModel(Of AnalyzeResult), IPersistableModel(Of AnalyzeResult)" />
  <TypeSignature Language="F#" Value="type AnalyzeResult = class&#xA;    interface IJsonModel&lt;AnalyzeResult&gt;&#xA;    interface IPersistableModel&lt;AnalyzeResult&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Document analysis result. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ApiVersion">
      <MemberSignature Language="C#" Value="public string ApiVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApiVersion" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.AnalyzeResult.ApiVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApiVersion As String" />
      <MemberSignature Language="F#" Value="member this.ApiVersion : string" Usage="Azure.AI.DocumentIntelligence.AnalyzeResult.ApiVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> API version used to produce this result. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public string Content { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Content" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.AnalyzeResult.Content" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Content As String" />
      <MemberSignature Language="F#" Value="member this.Content : string" Usage="Azure.AI.DocumentIntelligence.AnalyzeResult.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Concatenate string representation of all textual and visual elements in reading
            order.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentFormat">
      <MemberSignature Language="C#" Value="public Azure.AI.DocumentIntelligence.ContentFormat? ContentFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.AI.DocumentIntelligence.ContentFormat&gt; ContentFormat" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.AnalyzeResult.ContentFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentFormat As Nullable(Of ContentFormat)" />
      <MemberSignature Language="F#" Value="member this.ContentFormat : Nullable&lt;Azure.AI.DocumentIntelligence.ContentFormat&gt;" Usage="Azure.AI.DocumentIntelligence.AnalyzeResult.ContentFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.AI.DocumentIntelligence.ContentFormat&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Format of the analyze result top-level content. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Documents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.AnalyzedDocument&gt; Documents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.AI.DocumentIntelligence.AnalyzedDocument&gt; Documents" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.AnalyzeResult.Documents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Documents As IReadOnlyList(Of AnalyzedDocument)" />
      <MemberSignature Language="F#" Value="member this.Documents : System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.AnalyzedDocument&gt;" Usage="Azure.AI.DocumentIntelligence.AnalyzeResult.Documents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.AnalyzedDocument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Extracted documents. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Figures">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentFigure&gt; Figures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.AI.DocumentIntelligence.DocumentFigure&gt; Figures" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.AnalyzeResult.Figures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Figures As IReadOnlyList(Of DocumentFigure)" />
      <MemberSignature Language="F#" Value="member this.Figures : System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentFigure&gt;" Usage="Azure.AI.DocumentIntelligence.AnalyzeResult.Figures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentFigure&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Extracted figures. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyValuePairs">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentKeyValuePair&gt; KeyValuePairs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.AI.DocumentIntelligence.DocumentKeyValuePair&gt; KeyValuePairs" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.AnalyzeResult.KeyValuePairs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyValuePairs As IReadOnlyList(Of DocumentKeyValuePair)" />
      <MemberSignature Language="F#" Value="member this.KeyValuePairs : System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentKeyValuePair&gt;" Usage="Azure.AI.DocumentIntelligence.AnalyzeResult.KeyValuePairs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentKeyValuePair&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Extracted key-value pairs. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Languages">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentLanguage&gt; Languages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.AI.DocumentIntelligence.DocumentLanguage&gt; Languages" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.AnalyzeResult.Languages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Languages As IReadOnlyList(Of DocumentLanguage)" />
      <MemberSignature Language="F#" Value="member this.Languages : System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentLanguage&gt;" Usage="Azure.AI.DocumentIntelligence.AnalyzeResult.Languages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentLanguage&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Detected languages. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lists">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentList&gt; Lists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.AI.DocumentIntelligence.DocumentList&gt; Lists" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.AnalyzeResult.Lists" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Lists As IReadOnlyList(Of DocumentList)" />
      <MemberSignature Language="F#" Value="member this.Lists : System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentList&gt;" Usage="Azure.AI.DocumentIntelligence.AnalyzeResult.Lists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentList&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Extracted lists. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelId">
      <MemberSignature Language="C#" Value="public string ModelId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ModelId" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.AnalyzeResult.ModelId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModelId As String" />
      <MemberSignature Language="F#" Value="member this.ModelId : string" Usage="Azure.AI.DocumentIntelligence.AnalyzeResult.ModelId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Document model ID used to produce this result. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pages">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentPage&gt; Pages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.AI.DocumentIntelligence.DocumentPage&gt; Pages" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.AnalyzeResult.Pages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Pages As IReadOnlyList(Of DocumentPage)" />
      <MemberSignature Language="F#" Value="member this.Pages : System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentPage&gt;" Usage="Azure.AI.DocumentIntelligence.AnalyzeResult.Pages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentPage&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Analyzed pages. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paragraphs">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentParagraph&gt; Paragraphs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.AI.DocumentIntelligence.DocumentParagraph&gt; Paragraphs" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.AnalyzeResult.Paragraphs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Paragraphs As IReadOnlyList(Of DocumentParagraph)" />
      <MemberSignature Language="F#" Value="member this.Paragraphs : System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentParagraph&gt;" Usage="Azure.AI.DocumentIntelligence.AnalyzeResult.Paragraphs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentParagraph&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Extracted paragraphs. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sections">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentSection&gt; Sections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.AI.DocumentIntelligence.DocumentSection&gt; Sections" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.AnalyzeResult.Sections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sections As IReadOnlyList(Of DocumentSection)" />
      <MemberSignature Language="F#" Value="member this.Sections : System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentSection&gt;" Usage="Azure.AI.DocumentIntelligence.AnalyzeResult.Sections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentSection&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Extracted sections. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringIndexType">
      <MemberSignature Language="C#" Value="public Azure.AI.DocumentIntelligence.StringIndexType StringIndexType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.AI.DocumentIntelligence.StringIndexType StringIndexType" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.AnalyzeResult.StringIndexType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StringIndexType As StringIndexType" />
      <MemberSignature Language="F#" Value="member this.StringIndexType : Azure.AI.DocumentIntelligence.StringIndexType" Usage="Azure.AI.DocumentIntelligence.AnalyzeResult.StringIndexType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.DocumentIntelligence.StringIndexType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Method used to compute string offset and length. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Styles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt; Styles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.AI.DocumentIntelligence.DocumentStyle&gt; Styles" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.AnalyzeResult.Styles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Styles As IReadOnlyList(Of DocumentStyle)" />
      <MemberSignature Language="F#" Value="member this.Styles : System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;" Usage="Azure.AI.DocumentIntelligence.AnalyzeResult.Styles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentStyle&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Extracted font styles. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.DocumentIntelligence.AnalyzeResult IJsonModel&lt;AnalyzeResult&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.DocumentIntelligence.AnalyzeResult System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.DocumentIntelligence.AnalyzeResult.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#DocumentIntelligence#AnalyzeResult&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As AnalyzeResult Implements IJsonModel(Of AnalyzeResult).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.DocumentIntelligence.AnalyzeResult&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.DocumentIntelligence.AnalyzeResult" Usage="analyzeResult.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.DocumentIntelligence.AnalyzeResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;AnalyzeResult&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.DocumentIntelligence.AnalyzeResult.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#DocumentIntelligence#AnalyzeResult&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of AnalyzeResult).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="analyzeResult.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.DocumentIntelligence.AnalyzeResult IPersistableModel&lt;AnalyzeResult&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.DocumentIntelligence.AnalyzeResult System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.DocumentIntelligence.AnalyzeResult.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#DocumentIntelligence#AnalyzeResult&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As AnalyzeResult Implements IPersistableModel(Of AnalyzeResult).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.DocumentIntelligence.AnalyzeResult&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.DocumentIntelligence.AnalyzeResult" Usage="analyzeResult.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.DocumentIntelligence.AnalyzeResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;AnalyzeResult&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.DocumentIntelligence.AnalyzeResult.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#DocumentIntelligence#AnalyzeResult&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of AnalyzeResult).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="analyzeResult.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;AnalyzeResult&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.DocumentIntelligence.AnalyzeResult.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#DocumentIntelligence#AnalyzeResult&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of AnalyzeResult).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="analyzeResult.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.DocumentIntelligence.AnalyzeResult&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentTable&gt; Tables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.AI.DocumentIntelligence.DocumentTable&gt; Tables" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.DocumentIntelligence.AnalyzeResult.Tables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tables As IReadOnlyList(Of DocumentTable)" />
      <MemberSignature Language="F#" Value="member this.Tables : System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentTable&gt;" Usage="Azure.AI.DocumentIntelligence.AnalyzeResult.Tables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.DocumentIntelligence</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Azure.AI.DocumentIntelligence.DocumentTable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Extracted tables. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
