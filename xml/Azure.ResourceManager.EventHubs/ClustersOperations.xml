<Type Name="ClustersOperations" FullName="Azure.ResourceManager.EventHubs.ClustersOperations">
  <TypeSignature Language="C#" Value="public class ClustersOperations" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClustersOperations extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.EventHubs.ClustersOperations" />
  <TypeSignature Language="VB.NET" Value="Public Class ClustersOperations" />
  <TypeSignature Language="F#" Value="type ClustersOperations = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The Clusters service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClustersOperations ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.ClustersOperations.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of ClustersOperations for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.Cluster&gt; Get (string resourceGroupName, string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.Cluster&gt; Get(string resourceGroupName, string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.ClustersOperations.Get(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (resourceGroupName As String, clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Cluster)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.Cluster&gt;&#xA;override this.Get : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.Cluster&gt;" Usage="clustersOperations.Get (resourceGroupName, clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.Cluster&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="clusterName"> The name of the Event Hubs Cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets the resource description of the specified Event Hubs Cluster. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.Cluster&gt;&gt; GetAsync (string resourceGroupName, string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.Cluster&gt;&gt; GetAsync(string resourceGroupName, string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.ClustersOperations.GetAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (resourceGroupName As String, clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Cluster))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.Cluster&gt;&gt;&#xA;override this.GetAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.Cluster&gt;&gt;" Usage="clustersOperations.GetAsync (resourceGroupName, clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.Cluster&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="clusterName"> The name of the Event Hubs Cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets the resource description of the specified Event Hubs Cluster. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAvailableClusters">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AvailableClustersList&gt; ListAvailableClusters (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.AvailableClustersList&gt; ListAvailableClusters(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.ClustersOperations.ListAvailableClusters(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListAvailableClusters (Optional cancellationToken As CancellationToken = Nothing) As Response(Of AvailableClustersList)" />
      <MemberSignature Language="F#" Value="abstract member ListAvailableClusters : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AvailableClustersList&gt;&#xA;override this.ListAvailableClusters : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AvailableClustersList&gt;" Usage="clustersOperations.ListAvailableClusters cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AvailableClustersList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> List the quantity of available pre-provisioned Event Hubs Clusters, indexed by Azure region. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAvailableClustersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AvailableClustersList&gt;&gt; ListAvailableClustersAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.AvailableClustersList&gt;&gt; ListAvailableClustersAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.ClustersOperations.ListAvailableClustersAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListAvailableClustersAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AvailableClustersList))" />
      <MemberSignature Language="F#" Value="abstract member ListAvailableClustersAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AvailableClustersList&gt;&gt;&#xA;override this.ListAvailableClustersAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AvailableClustersList&gt;&gt;" Usage="clustersOperations.ListAvailableClustersAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AvailableClustersList&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> List the quantity of available pre-provisioned Event Hubs Clusters, indexed by Azure region. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListByResourceGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.Cluster&gt; ListByResourceGroup (string resourceGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.EventHubs.Models.Cluster&gt; ListByResourceGroup(string resourceGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.ClustersOperations.ListByResourceGroup(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListByResourceGroup (resourceGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of Cluster)" />
      <MemberSignature Language="F#" Value="abstract member ListByResourceGroup : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.Cluster&gt;&#xA;override this.ListByResourceGroup : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.Cluster&gt;" Usage="clustersOperations.ListByResourceGroup (resourceGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.Cluster&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists the available Event Hubs Clusters within an ARM resource group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListByResourceGroupAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.Cluster&gt; ListByResourceGroupAsync (string resourceGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventHubs.Models.Cluster&gt; ListByResourceGroupAsync(string resourceGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.ClustersOperations.ListByResourceGroupAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListByResourceGroupAsync (resourceGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of Cluster)" />
      <MemberSignature Language="F#" Value="abstract member ListByResourceGroupAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.Cluster&gt;&#xA;override this.ListByResourceGroupAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.Cluster&gt;" Usage="clustersOperations.ListByResourceGroupAsync (resourceGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.Cluster&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists the available Event Hubs Clusters within an ARM resource group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListNamespaces">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.EHNamespaceIdListResult&gt; ListNamespaces (string resourceGroupName, string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.EHNamespaceIdListResult&gt; ListNamespaces(string resourceGroupName, string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.ClustersOperations.ListNamespaces(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListNamespaces (resourceGroupName As String, clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EHNamespaceIdListResult)" />
      <MemberSignature Language="F#" Value="abstract member ListNamespaces : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.EHNamespaceIdListResult&gt;&#xA;override this.ListNamespaces : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.EHNamespaceIdListResult&gt;" Usage="clustersOperations.ListNamespaces (resourceGroupName, clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.EHNamespaceIdListResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="clusterName"> The name of the Event Hubs Cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> List all Event Hubs Namespace IDs in an Event Hubs Dedicated Cluster. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListNamespacesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.EHNamespaceIdListResult&gt;&gt; ListNamespacesAsync (string resourceGroupName, string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.EHNamespaceIdListResult&gt;&gt; ListNamespacesAsync(string resourceGroupName, string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.ClustersOperations.ListNamespacesAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListNamespacesAsync (resourceGroupName As String, clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EHNamespaceIdListResult))" />
      <MemberSignature Language="F#" Value="abstract member ListNamespacesAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.EHNamespaceIdListResult&gt;&gt;&#xA;override this.ListNamespacesAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.EHNamespaceIdListResult&gt;&gt;" Usage="clustersOperations.ListNamespacesAsync (resourceGroupName, clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.EHNamespaceIdListResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="clusterName"> The name of the Event Hubs Cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> List all Event Hubs Namespace IDs in an Event Hubs Dedicated Cluster. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDelete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.EventHubs.ClustersDeleteOperation StartDelete (string resourceGroupName, string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.EventHubs.ClustersDeleteOperation StartDelete(string resourceGroupName, string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.ClustersOperations.StartDelete(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDelete (resourceGroupName As String, clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As ClustersDeleteOperation" />
      <MemberSignature Language="F#" Value="abstract member StartDelete : string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.EventHubs.ClustersDeleteOperation&#xA;override this.StartDelete : string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.EventHubs.ClustersDeleteOperation" Usage="clustersOperations.StartDelete (resourceGroupName, clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.ClustersDeleteOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="clusterName"> The name of the Event Hubs Cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes an existing Event Hubs Cluster. This operation is idempotent. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.EventHubs.ClustersDeleteOperation&gt; StartDeleteAsync (string resourceGroupName, string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.EventHubs.ClustersDeleteOperation&gt; StartDeleteAsync(string resourceGroupName, string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.ClustersOperations.StartDeleteAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteAsync (resourceGroupName As String, clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ClustersDeleteOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.EventHubs.ClustersDeleteOperation&gt;&#xA;override this.StartDeleteAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.EventHubs.ClustersDeleteOperation&gt;" Usage="clustersOperations.StartDeleteAsync (resourceGroupName, clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.EventHubs.ClustersDeleteOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="clusterName"> The name of the Event Hubs Cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes an existing Event Hubs Cluster. This operation is idempotent. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartPatch">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.EventHubs.ClustersPatchOperation StartPatch (string resourceGroupName, string clusterName, Azure.ResourceManager.EventHubs.Models.Cluster parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.EventHubs.ClustersPatchOperation StartPatch(string resourceGroupName, string clusterName, class Azure.ResourceManager.EventHubs.Models.Cluster parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.ClustersOperations.StartPatch(System.String,System.String,Azure.ResourceManager.EventHubs.Models.Cluster,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartPatch (resourceGroupName As String, clusterName As String, parameters As Cluster, Optional cancellationToken As CancellationToken = Nothing) As ClustersPatchOperation" />
      <MemberSignature Language="F#" Value="abstract member StartPatch : string * string * Azure.ResourceManager.EventHubs.Models.Cluster * System.Threading.CancellationToken -&gt; Azure.ResourceManager.EventHubs.ClustersPatchOperation&#xA;override this.StartPatch : string * string * Azure.ResourceManager.EventHubs.Models.Cluster * System.Threading.CancellationToken -&gt; Azure.ResourceManager.EventHubs.ClustersPatchOperation" Usage="clustersOperations.StartPatch (resourceGroupName, clusterName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.ClustersPatchOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.Cluster" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="clusterName"> The name of the Event Hubs Cluster. </param>
        <param name="parameters"> The properties of the Event Hubs Cluster which should be updated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Modifies mutable properties on the Event Hubs Cluster. This operation is idempotent. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartPatchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.EventHubs.ClustersPatchOperation&gt; StartPatchAsync (string resourceGroupName, string clusterName, Azure.ResourceManager.EventHubs.Models.Cluster parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.EventHubs.ClustersPatchOperation&gt; StartPatchAsync(string resourceGroupName, string clusterName, class Azure.ResourceManager.EventHubs.Models.Cluster parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.ClustersOperations.StartPatchAsync(System.String,System.String,Azure.ResourceManager.EventHubs.Models.Cluster,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartPatchAsync (resourceGroupName As String, clusterName As String, parameters As Cluster, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ClustersPatchOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartPatchAsync : string * string * Azure.ResourceManager.EventHubs.Models.Cluster * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.EventHubs.ClustersPatchOperation&gt;&#xA;override this.StartPatchAsync : string * string * Azure.ResourceManager.EventHubs.Models.Cluster * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.EventHubs.ClustersPatchOperation&gt;" Usage="clustersOperations.StartPatchAsync (resourceGroupName, clusterName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.EventHubs.ClustersPatchOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.Cluster" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="clusterName"> The name of the Event Hubs Cluster. </param>
        <param name="parameters"> The properties of the Event Hubs Cluster which should be updated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Modifies mutable properties on the Event Hubs Cluster. This operation is idempotent. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartPut">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.EventHubs.ClustersPutOperation StartPut (string resourceGroupName, string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.EventHubs.ClustersPutOperation StartPut(string resourceGroupName, string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.ClustersOperations.StartPut(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartPut (resourceGroupName As String, clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As ClustersPutOperation" />
      <MemberSignature Language="F#" Value="abstract member StartPut : string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.EventHubs.ClustersPutOperation&#xA;override this.StartPut : string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.EventHubs.ClustersPutOperation" Usage="clustersOperations.StartPut (resourceGroupName, clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.ClustersPutOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="clusterName"> The name of the Event Hubs Cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates an instance of an Event Hubs Cluster. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartPutAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.EventHubs.ClustersPutOperation&gt; StartPutAsync (string resourceGroupName, string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.EventHubs.ClustersPutOperation&gt; StartPutAsync(string resourceGroupName, string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.ClustersOperations.StartPutAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartPutAsync (resourceGroupName As String, clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ClustersPutOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartPutAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.EventHubs.ClustersPutOperation&gt;&#xA;override this.StartPutAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.EventHubs.ClustersPutOperation&gt;" Usage="clustersOperations.StartPutAsync (resourceGroupName, clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.EventHubs.ClustersPutOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="clusterName"> The name of the Event Hubs Cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates an instance of an Event Hubs Cluster. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
