<Type Name="ConsumerGroupsOperations" FullName="Azure.ResourceManager.EventHubs.ConsumerGroupsOperations">
  <TypeSignature Language="C#" Value="public class ConsumerGroupsOperations" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConsumerGroupsOperations extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.EventHubs.ConsumerGroupsOperations" />
  <TypeSignature Language="VB.NET" Value="Public Class ConsumerGroupsOperations" />
  <TypeSignature Language="F#" Value="type ConsumerGroupsOperations = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The ConsumerGroups service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConsumerGroupsOperations ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.ConsumerGroupsOperations.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of ConsumerGroupsOperations for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt; CreateOrUpdate (string resourceGroupName, string namespaceName, string eventHubName, string consumerGroupName, Azure.ResourceManager.EventHubs.Models.ConsumerGroup parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt; CreateOrUpdate(string resourceGroupName, string namespaceName, string eventHubName, string consumerGroupName, class Azure.ResourceManager.EventHubs.Models.ConsumerGroup parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.ConsumerGroupsOperations.CreateOrUpdate(System.String,System.String,System.String,System.String,Azure.ResourceManager.EventHubs.Models.ConsumerGroup,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdate (resourceGroupName As String, namespaceName As String, eventHubName As String, consumerGroupName As String, parameters As ConsumerGroup, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ConsumerGroup)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdate : string * string * string * string * Azure.ResourceManager.EventHubs.Models.ConsumerGroup * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt;&#xA;override this.CreateOrUpdate : string * string * string * string * Azure.ResourceManager.EventHubs.Models.ConsumerGroup * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt;" Usage="consumerGroupsOperations.CreateOrUpdate (resourceGroupName, namespaceName, eventHubName, consumerGroupName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="consumerGroupName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.ConsumerGroup" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="consumerGroupName"> The consumer group name. </param>
        <param name="parameters"> Parameters supplied to create or update a consumer group resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates an Event Hubs consumer group as a nested resource within a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt;&gt; CreateOrUpdateAsync (string resourceGroupName, string namespaceName, string eventHubName, string consumerGroupName, Azure.ResourceManager.EventHubs.Models.ConsumerGroup parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt;&gt; CreateOrUpdateAsync(string resourceGroupName, string namespaceName, string eventHubName, string consumerGroupName, class Azure.ResourceManager.EventHubs.Models.ConsumerGroup parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.ConsumerGroupsOperations.CreateOrUpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.EventHubs.Models.ConsumerGroup,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAsync (resourceGroupName As String, namespaceName As String, eventHubName As String, consumerGroupName As String, parameters As ConsumerGroup, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ConsumerGroup))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAsync : string * string * string * string * Azure.ResourceManager.EventHubs.Models.ConsumerGroup * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt;&gt;&#xA;override this.CreateOrUpdateAsync : string * string * string * string * Azure.ResourceManager.EventHubs.Models.ConsumerGroup * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt;&gt;" Usage="consumerGroupsOperations.CreateOrUpdateAsync (resourceGroupName, namespaceName, eventHubName, consumerGroupName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="consumerGroupName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.ConsumerGroup" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="consumerGroupName"> The consumer group name. </param>
        <param name="parameters"> Parameters supplied to create or update a consumer group resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates an Event Hubs consumer group as a nested resource within a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Delete (string resourceGroupName, string namespaceName, string eventHubName, string consumerGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Delete(string resourceGroupName, string namespaceName, string eventHubName, string consumerGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.ConsumerGroupsOperations.Delete(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (resourceGroupName As String, namespaceName As String, eventHubName As String, consumerGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Delete : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.Delete : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="consumerGroupsOperations.Delete (resourceGroupName, namespaceName, eventHubName, consumerGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="consumerGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="consumerGroupName"> The consumer group name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes a consumer group from the specified Event Hub and resource group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAsync (string resourceGroupName, string namespaceName, string eventHubName, string consumerGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAsync(string resourceGroupName, string namespaceName, string eventHubName, string consumerGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.ConsumerGroupsOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (resourceGroupName As String, namespaceName As String, eventHubName As String, consumerGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="consumerGroupsOperations.DeleteAsync (resourceGroupName, namespaceName, eventHubName, consumerGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="consumerGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="consumerGroupName"> The consumer group name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes a consumer group from the specified Event Hub and resource group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt; Get (string resourceGroupName, string namespaceName, string eventHubName, string consumerGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt; Get(string resourceGroupName, string namespaceName, string eventHubName, string consumerGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.ConsumerGroupsOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (resourceGroupName As String, namespaceName As String, eventHubName As String, consumerGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ConsumerGroup)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt;&#xA;override this.Get : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt;" Usage="consumerGroupsOperations.Get (resourceGroupName, namespaceName, eventHubName, consumerGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="consumerGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="consumerGroupName"> The consumer group name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a description for the specified consumer group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt;&gt; GetAsync (string resourceGroupName, string namespaceName, string eventHubName, string consumerGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt;&gt; GetAsync(string resourceGroupName, string namespaceName, string eventHubName, string consumerGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.ConsumerGroupsOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (resourceGroupName As String, namespaceName As String, eventHubName As String, consumerGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ConsumerGroup))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt;&gt;&#xA;override this.GetAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt;&gt;" Usage="consumerGroupsOperations.GetAsync (resourceGroupName, namespaceName, eventHubName, consumerGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="consumerGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="consumerGroupName"> The consumer group name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a description for the specified consumer group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListByEventHub">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt; ListByEventHub (string resourceGroupName, string namespaceName, string eventHubName, int? skip = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt; ListByEventHub(string resourceGroupName, string namespaceName, string eventHubName, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.ConsumerGroupsOperations.ListByEventHub(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListByEventHub (resourceGroupName As String, namespaceName As String, eventHubName As String, Optional skip As Nullable(Of Integer) = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ConsumerGroup)" />
      <MemberSignature Language="F#" Value="abstract member ListByEventHub : string * string * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt;&#xA;override this.ListByEventHub : string * string * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt;" Usage="consumerGroupsOperations.ListByEventHub (resourceGroupName, namespaceName, eventHubName, skip, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="skip"> Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls. </param>
        <param name="top"> May be used to limit the number of results to the most recent N usageDetails. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets all the consumer groups in a Namespace. An empty feed is returned if no consumer group exists in the Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListByEventHubAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt; ListByEventHubAsync (string resourceGroupName, string namespaceName, string eventHubName, int? skip = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt; ListByEventHubAsync(string resourceGroupName, string namespaceName, string eventHubName, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.ConsumerGroupsOperations.ListByEventHubAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListByEventHubAsync (resourceGroupName As String, namespaceName As String, eventHubName As String, Optional skip As Nullable(Of Integer) = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ConsumerGroup)" />
      <MemberSignature Language="F#" Value="abstract member ListByEventHubAsync : string * string * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt;&#xA;override this.ListByEventHubAsync : string * string * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt;" Usage="consumerGroupsOperations.ListByEventHubAsync (resourceGroupName, namespaceName, eventHubName, skip, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.ConsumerGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="skip"> Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls. </param>
        <param name="top"> May be used to limit the number of results to the most recent N usageDetails. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets all the consumer groups in a Namespace. An empty feed is returned if no consumer group exists in the Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
