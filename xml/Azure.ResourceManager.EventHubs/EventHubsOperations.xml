<Type Name="EventHubsOperations" FullName="Azure.ResourceManager.EventHubs.EventHubsOperations">
  <TypeSignature Language="C#" Value="public class EventHubsOperations" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventHubsOperations extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.EventHubs.EventHubsOperations" />
  <TypeSignature Language="VB.NET" Value="Public Class EventHubsOperations" />
  <TypeSignature Language="F#" Value="type EventHubsOperations = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The EventHubs service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventHubsOperations ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsOperations.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of EventHubsOperations for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.Eventhub&gt; CreateOrUpdate (string resourceGroupName, string namespaceName, string eventHubName, Azure.ResourceManager.EventHubs.Models.Eventhub parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.Eventhub&gt; CreateOrUpdate(string resourceGroupName, string namespaceName, string eventHubName, class Azure.ResourceManager.EventHubs.Models.Eventhub parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsOperations.CreateOrUpdate(System.String,System.String,System.String,Azure.ResourceManager.EventHubs.Models.Eventhub,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdate (resourceGroupName As String, namespaceName As String, eventHubName As String, parameters As Eventhub, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Eventhub)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdate : string * string * string * Azure.ResourceManager.EventHubs.Models.Eventhub * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.Eventhub&gt;&#xA;override this.CreateOrUpdate : string * string * string * Azure.ResourceManager.EventHubs.Models.Eventhub * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.Eventhub&gt;" Usage="eventHubsOperations.CreateOrUpdate (resourceGroupName, namespaceName, eventHubName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.Eventhub&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.Eventhub" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="parameters"> Parameters supplied to create an Event Hub resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates a new Event Hub as a nested resource within a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.Eventhub&gt;&gt; CreateOrUpdateAsync (string resourceGroupName, string namespaceName, string eventHubName, Azure.ResourceManager.EventHubs.Models.Eventhub parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.Eventhub&gt;&gt; CreateOrUpdateAsync(string resourceGroupName, string namespaceName, string eventHubName, class Azure.ResourceManager.EventHubs.Models.Eventhub parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsOperations.CreateOrUpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.EventHubs.Models.Eventhub,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAsync (resourceGroupName As String, namespaceName As String, eventHubName As String, parameters As Eventhub, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Eventhub))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAsync : string * string * string * Azure.ResourceManager.EventHubs.Models.Eventhub * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.Eventhub&gt;&gt;&#xA;override this.CreateOrUpdateAsync : string * string * string * Azure.ResourceManager.EventHubs.Models.Eventhub * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.Eventhub&gt;&gt;" Usage="eventHubsOperations.CreateOrUpdateAsync (resourceGroupName, namespaceName, eventHubName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.Eventhub&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.Eventhub" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="parameters"> Parameters supplied to create an Event Hub resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates a new Event Hub as a nested resource within a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAuthorizationRule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt; CreateOrUpdateAuthorizationRule (string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, Azure.ResourceManager.EventHubs.Models.AuthorizationRule parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt; CreateOrUpdateAuthorizationRule(string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, class Azure.ResourceManager.EventHubs.Models.AuthorizationRule parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsOperations.CreateOrUpdateAuthorizationRule(System.String,System.String,System.String,System.String,Azure.ResourceManager.EventHubs.Models.AuthorizationRule,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAuthorizationRule (resourceGroupName As String, namespaceName As String, eventHubName As String, authorizationRuleName As String, parameters As AuthorizationRule, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AuthorizationRule)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAuthorizationRule : string * string * string * string * Azure.ResourceManager.EventHubs.Models.AuthorizationRule * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&#xA;override this.CreateOrUpdateAuthorizationRule : string * string * string * string * Azure.ResourceManager.EventHubs.Models.AuthorizationRule * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;" Usage="eventHubsOperations.CreateOrUpdateAuthorizationRule (resourceGroupName, namespaceName, eventHubName, authorizationRuleName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="authorizationRuleName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.AuthorizationRule" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="authorizationRuleName"> The authorization rule name. </param>
        <param name="parameters"> The shared access AuthorizationRule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates an AuthorizationRule for the specified Event Hub. Creation/update of the AuthorizationRule will take a few seconds to take effect. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAuthorizationRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&gt; CreateOrUpdateAuthorizationRuleAsync (string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, Azure.ResourceManager.EventHubs.Models.AuthorizationRule parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&gt; CreateOrUpdateAuthorizationRuleAsync(string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, class Azure.ResourceManager.EventHubs.Models.AuthorizationRule parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsOperations.CreateOrUpdateAuthorizationRuleAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.EventHubs.Models.AuthorizationRule,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAuthorizationRuleAsync (resourceGroupName As String, namespaceName As String, eventHubName As String, authorizationRuleName As String, parameters As AuthorizationRule, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AuthorizationRule))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAuthorizationRuleAsync : string * string * string * string * Azure.ResourceManager.EventHubs.Models.AuthorizationRule * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&gt;&#xA;override this.CreateOrUpdateAuthorizationRuleAsync : string * string * string * string * Azure.ResourceManager.EventHubs.Models.AuthorizationRule * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&gt;" Usage="eventHubsOperations.CreateOrUpdateAuthorizationRuleAsync (resourceGroupName, namespaceName, eventHubName, authorizationRuleName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="authorizationRuleName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.AuthorizationRule" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="authorizationRuleName"> The authorization rule name. </param>
        <param name="parameters"> The shared access AuthorizationRule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates an AuthorizationRule for the specified Event Hub. Creation/update of the AuthorizationRule will take a few seconds to take effect. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Delete (string resourceGroupName, string namespaceName, string eventHubName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Delete(string resourceGroupName, string namespaceName, string eventHubName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsOperations.Delete(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (resourceGroupName As String, namespaceName As String, eventHubName As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Delete : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.Delete : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="eventHubsOperations.Delete (resourceGroupName, namespaceName, eventHubName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes an Event Hub from the specified Namespace and resource group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAsync (string resourceGroupName, string namespaceName, string eventHubName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAsync(string resourceGroupName, string namespaceName, string eventHubName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsOperations.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (resourceGroupName As String, namespaceName As String, eventHubName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="eventHubsOperations.DeleteAsync (resourceGroupName, namespaceName, eventHubName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes an Event Hub from the specified Namespace and resource group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAuthorizationRule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteAuthorizationRule (string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteAuthorizationRule(string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsOperations.DeleteAuthorizationRule(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAuthorizationRule (resourceGroupName As String, namespaceName As String, eventHubName As String, authorizationRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteAuthorizationRule : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteAuthorizationRule : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="eventHubsOperations.DeleteAuthorizationRule (resourceGroupName, namespaceName, eventHubName, authorizationRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="authorizationRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="authorizationRuleName"> The authorization rule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes an Event Hub AuthorizationRule. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAuthorizationRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAuthorizationRuleAsync (string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAuthorizationRuleAsync(string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsOperations.DeleteAuthorizationRuleAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAuthorizationRuleAsync (resourceGroupName As String, namespaceName As String, eventHubName As String, authorizationRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAuthorizationRuleAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteAuthorizationRuleAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="eventHubsOperations.DeleteAuthorizationRuleAsync (resourceGroupName, namespaceName, eventHubName, authorizationRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="authorizationRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="authorizationRuleName"> The authorization rule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes an Event Hub AuthorizationRule. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.Eventhub&gt; Get (string resourceGroupName, string namespaceName, string eventHubName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.Eventhub&gt; Get(string resourceGroupName, string namespaceName, string eventHubName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsOperations.Get(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (resourceGroupName As String, namespaceName As String, eventHubName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Eventhub)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.Eventhub&gt;&#xA;override this.Get : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.Eventhub&gt;" Usage="eventHubsOperations.Get (resourceGroupName, namespaceName, eventHubName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.Eventhub&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets an Event Hubs description for the specified Event Hub. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.Eventhub&gt;&gt; GetAsync (string resourceGroupName, string namespaceName, string eventHubName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.Eventhub&gt;&gt; GetAsync(string resourceGroupName, string namespaceName, string eventHubName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsOperations.GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (resourceGroupName As String, namespaceName As String, eventHubName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Eventhub))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.Eventhub&gt;&gt;&#xA;override this.GetAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.Eventhub&gt;&gt;" Usage="eventHubsOperations.GetAsync (resourceGroupName, namespaceName, eventHubName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.Eventhub&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets an Event Hubs description for the specified Event Hub. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuthorizationRule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt; GetAuthorizationRule (string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt; GetAuthorizationRule(string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsOperations.GetAuthorizationRule(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAuthorizationRule (resourceGroupName As String, namespaceName As String, eventHubName As String, authorizationRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AuthorizationRule)" />
      <MemberSignature Language="F#" Value="abstract member GetAuthorizationRule : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&#xA;override this.GetAuthorizationRule : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;" Usage="eventHubsOperations.GetAuthorizationRule (resourceGroupName, namespaceName, eventHubName, authorizationRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="authorizationRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="authorizationRuleName"> The authorization rule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets an AuthorizationRule for an Event Hub by rule name. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuthorizationRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&gt; GetAuthorizationRuleAsync (string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&gt; GetAuthorizationRuleAsync(string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsOperations.GetAuthorizationRuleAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAuthorizationRuleAsync (resourceGroupName As String, namespaceName As String, eventHubName As String, authorizationRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AuthorizationRule))" />
      <MemberSignature Language="F#" Value="abstract member GetAuthorizationRuleAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&gt;&#xA;override this.GetAuthorizationRuleAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&gt;" Usage="eventHubsOperations.GetAuthorizationRuleAsync (resourceGroupName, namespaceName, eventHubName, authorizationRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="authorizationRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="authorizationRuleName"> The authorization rule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets an AuthorizationRule for an Event Hub by rule name. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAuthorizationRules">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt; ListAuthorizationRules (string resourceGroupName, string namespaceName, string eventHubName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt; ListAuthorizationRules(string resourceGroupName, string namespaceName, string eventHubName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsOperations.ListAuthorizationRules(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListAuthorizationRules (resourceGroupName As String, namespaceName As String, eventHubName As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AuthorizationRule)" />
      <MemberSignature Language="F#" Value="abstract member ListAuthorizationRules : string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&#xA;override this.ListAuthorizationRules : string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;" Usage="eventHubsOperations.ListAuthorizationRules (resourceGroupName, namespaceName, eventHubName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets the authorization rules for an Event Hub. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAuthorizationRulesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt; ListAuthorizationRulesAsync (string resourceGroupName, string namespaceName, string eventHubName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt; ListAuthorizationRulesAsync(string resourceGroupName, string namespaceName, string eventHubName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsOperations.ListAuthorizationRulesAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListAuthorizationRulesAsync (resourceGroupName As String, namespaceName As String, eventHubName As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AuthorizationRule)" />
      <MemberSignature Language="F#" Value="abstract member ListAuthorizationRulesAsync : string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&#xA;override this.ListAuthorizationRulesAsync : string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;" Usage="eventHubsOperations.ListAuthorizationRulesAsync (resourceGroupName, namespaceName, eventHubName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets the authorization rules for an Event Hub. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListByNamespace">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.Eventhub&gt; ListByNamespace (string resourceGroupName, string namespaceName, int? skip = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.EventHubs.Models.Eventhub&gt; ListByNamespace(string resourceGroupName, string namespaceName, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsOperations.ListByNamespace(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListByNamespace (resourceGroupName As String, namespaceName As String, Optional skip As Nullable(Of Integer) = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of Eventhub)" />
      <MemberSignature Language="F#" Value="abstract member ListByNamespace : string * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.Eventhub&gt;&#xA;override this.ListByNamespace : string * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.Eventhub&gt;" Usage="eventHubsOperations.ListByNamespace (resourceGroupName, namespaceName, skip, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.Eventhub&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="skip"> Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls. </param>
        <param name="top"> May be used to limit the number of results to the most recent N usageDetails. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets all the Event Hubs in a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListByNamespaceAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.Eventhub&gt; ListByNamespaceAsync (string resourceGroupName, string namespaceName, int? skip = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventHubs.Models.Eventhub&gt; ListByNamespaceAsync(string resourceGroupName, string namespaceName, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsOperations.ListByNamespaceAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListByNamespaceAsync (resourceGroupName As String, namespaceName As String, Optional skip As Nullable(Of Integer) = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of Eventhub)" />
      <MemberSignature Language="F#" Value="abstract member ListByNamespaceAsync : string * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.Eventhub&gt;&#xA;override this.ListByNamespaceAsync : string * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.Eventhub&gt;" Usage="eventHubsOperations.ListByNamespaceAsync (resourceGroupName, namespaceName, skip, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.Eventhub&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="skip"> Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls. </param>
        <param name="top"> May be used to limit the number of results to the most recent N usageDetails. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets all the Event Hubs in a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListKeys">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt; ListKeys (string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.AccessKeys&gt; ListKeys(string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsOperations.ListKeys(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListKeys (resourceGroupName As String, namespaceName As String, eventHubName As String, authorizationRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AccessKeys)" />
      <MemberSignature Language="F#" Value="abstract member ListKeys : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;&#xA;override this.ListKeys : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;" Usage="eventHubsOperations.ListKeys (resourceGroupName, namespaceName, eventHubName, authorizationRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="authorizationRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="authorizationRuleName"> The authorization rule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets the ACS and SAS connection strings for the Event Hub. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListKeysAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;&gt; ListKeysAsync (string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;&gt; ListKeysAsync(string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsOperations.ListKeysAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListKeysAsync (resourceGroupName As String, namespaceName As String, eventHubName As String, authorizationRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AccessKeys))" />
      <MemberSignature Language="F#" Value="abstract member ListKeysAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;&gt;&#xA;override this.ListKeysAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;&gt;" Usage="eventHubsOperations.ListKeysAsync (resourceGroupName, namespaceName, eventHubName, authorizationRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="authorizationRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="authorizationRuleName"> The authorization rule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets the ACS and SAS connection strings for the Event Hub. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegenerateKeys">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt; RegenerateKeys (string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, Azure.ResourceManager.EventHubs.Models.RegenerateAccessKeyParameters parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.AccessKeys&gt; RegenerateKeys(string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, class Azure.ResourceManager.EventHubs.Models.RegenerateAccessKeyParameters parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsOperations.RegenerateKeys(System.String,System.String,System.String,System.String,Azure.ResourceManager.EventHubs.Models.RegenerateAccessKeyParameters,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RegenerateKeys (resourceGroupName As String, namespaceName As String, eventHubName As String, authorizationRuleName As String, parameters As RegenerateAccessKeyParameters, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AccessKeys)" />
      <MemberSignature Language="F#" Value="abstract member RegenerateKeys : string * string * string * string * Azure.ResourceManager.EventHubs.Models.RegenerateAccessKeyParameters * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;&#xA;override this.RegenerateKeys : string * string * string * string * Azure.ResourceManager.EventHubs.Models.RegenerateAccessKeyParameters * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;" Usage="eventHubsOperations.RegenerateKeys (resourceGroupName, namespaceName, eventHubName, authorizationRuleName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="authorizationRuleName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.RegenerateAccessKeyParameters" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="authorizationRuleName"> The authorization rule name. </param>
        <param name="parameters"> Parameters supplied to regenerate the AuthorizationRule Keys (PrimaryKey/SecondaryKey). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Regenerates the ACS and SAS connection strings for the Event Hub. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegenerateKeysAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;&gt; RegenerateKeysAsync (string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, Azure.ResourceManager.EventHubs.Models.RegenerateAccessKeyParameters parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;&gt; RegenerateKeysAsync(string resourceGroupName, string namespaceName, string eventHubName, string authorizationRuleName, class Azure.ResourceManager.EventHubs.Models.RegenerateAccessKeyParameters parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsOperations.RegenerateKeysAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.EventHubs.Models.RegenerateAccessKeyParameters,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RegenerateKeysAsync (resourceGroupName As String, namespaceName As String, eventHubName As String, authorizationRuleName As String, parameters As RegenerateAccessKeyParameters, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AccessKeys))" />
      <MemberSignature Language="F#" Value="abstract member RegenerateKeysAsync : string * string * string * string * Azure.ResourceManager.EventHubs.Models.RegenerateAccessKeyParameters * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;&gt;&#xA;override this.RegenerateKeysAsync : string * string * string * string * Azure.ResourceManager.EventHubs.Models.RegenerateAccessKeyParameters * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;&gt;" Usage="eventHubsOperations.RegenerateKeysAsync (resourceGroupName, namespaceName, eventHubName, authorizationRuleName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="authorizationRuleName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.RegenerateAccessKeyParameters" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="eventHubName"> The Event Hub name. </param>
        <param name="authorizationRuleName"> The authorization rule name. </param>
        <param name="parameters"> Parameters supplied to regenerate the AuthorizationRule Keys (PrimaryKey/SecondaryKey). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Regenerates the ACS and SAS connection strings for the Event Hub. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
