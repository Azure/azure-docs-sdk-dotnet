<Type Name="NamespacesOperations" FullName="Azure.ResourceManager.EventHubs.NamespacesOperations">
  <TypeSignature Language="C#" Value="public class NamespacesOperations" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NamespacesOperations extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.EventHubs.NamespacesOperations" />
  <TypeSignature Language="VB.NET" Value="Public Class NamespacesOperations" />
  <TypeSignature Language="F#" Value="type NamespacesOperations = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The Namespaces service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NamespacesOperations ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of NamespacesOperations for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityResult&gt; CheckNameAvailability (Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityParameter parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityResult&gt; CheckNameAvailability(class Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityParameter parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.CheckNameAvailability(Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityParameter,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckNameAvailability (parameters As CheckNameAvailabilityParameter, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CheckNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckNameAvailability : Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityParameter * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityResult&gt;&#xA;override this.CheckNameAvailability : Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityParameter * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityResult&gt;" Usage="namespacesOperations.CheckNameAvailability (parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityParameter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="parameters"> Parameters to check availability of the given Namespace name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Check the give Namespace name availability. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityResult&gt;&gt; CheckNameAvailabilityAsync (Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityParameter parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityResult&gt;&gt; CheckNameAvailabilityAsync(class Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityParameter parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.CheckNameAvailabilityAsync(Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityParameter,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckNameAvailabilityAsync (parameters As CheckNameAvailabilityParameter, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CheckNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckNameAvailabilityAsync : Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityParameter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityResult&gt;&gt;&#xA;override this.CheckNameAvailabilityAsync : Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityParameter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityResult&gt;&gt;" Usage="namespacesOperations.CheckNameAvailabilityAsync (parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityParameter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="parameters"> Parameters to check availability of the given Namespace name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Check the give Namespace name availability. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAuthorizationRule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt; CreateOrUpdateAuthorizationRule (string resourceGroupName, string namespaceName, string authorizationRuleName, Azure.ResourceManager.EventHubs.Models.AuthorizationRule parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt; CreateOrUpdateAuthorizationRule(string resourceGroupName, string namespaceName, string authorizationRuleName, class Azure.ResourceManager.EventHubs.Models.AuthorizationRule parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.CreateOrUpdateAuthorizationRule(System.String,System.String,System.String,Azure.ResourceManager.EventHubs.Models.AuthorizationRule,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAuthorizationRule (resourceGroupName As String, namespaceName As String, authorizationRuleName As String, parameters As AuthorizationRule, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AuthorizationRule)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAuthorizationRule : string * string * string * Azure.ResourceManager.EventHubs.Models.AuthorizationRule * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&#xA;override this.CreateOrUpdateAuthorizationRule : string * string * string * Azure.ResourceManager.EventHubs.Models.AuthorizationRule * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;" Usage="namespacesOperations.CreateOrUpdateAuthorizationRule (resourceGroupName, namespaceName, authorizationRuleName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="authorizationRuleName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.AuthorizationRule" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="authorizationRuleName"> The authorization rule name. </param>
        <param name="parameters"> The shared access AuthorizationRule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates an AuthorizationRule for a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAuthorizationRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&gt; CreateOrUpdateAuthorizationRuleAsync (string resourceGroupName, string namespaceName, string authorizationRuleName, Azure.ResourceManager.EventHubs.Models.AuthorizationRule parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&gt; CreateOrUpdateAuthorizationRuleAsync(string resourceGroupName, string namespaceName, string authorizationRuleName, class Azure.ResourceManager.EventHubs.Models.AuthorizationRule parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.CreateOrUpdateAuthorizationRuleAsync(System.String,System.String,System.String,Azure.ResourceManager.EventHubs.Models.AuthorizationRule,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAuthorizationRuleAsync (resourceGroupName As String, namespaceName As String, authorizationRuleName As String, parameters As AuthorizationRule, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AuthorizationRule))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAuthorizationRuleAsync : string * string * string * Azure.ResourceManager.EventHubs.Models.AuthorizationRule * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&gt;&#xA;override this.CreateOrUpdateAuthorizationRuleAsync : string * string * string * Azure.ResourceManager.EventHubs.Models.AuthorizationRule * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&gt;" Usage="namespacesOperations.CreateOrUpdateAuthorizationRuleAsync (resourceGroupName, namespaceName, authorizationRuleName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="authorizationRuleName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.AuthorizationRule" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="authorizationRuleName"> The authorization rule name. </param>
        <param name="parameters"> The shared access AuthorizationRule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates an AuthorizationRule for a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateIpFilterRule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt; CreateOrUpdateIpFilterRule (string resourceGroupName, string namespaceName, string ipFilterRuleName, Azure.ResourceManager.EventHubs.Models.IpFilterRule parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt; CreateOrUpdateIpFilterRule(string resourceGroupName, string namespaceName, string ipFilterRuleName, class Azure.ResourceManager.EventHubs.Models.IpFilterRule parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.CreateOrUpdateIpFilterRule(System.String,System.String,System.String,Azure.ResourceManager.EventHubs.Models.IpFilterRule,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateIpFilterRule (resourceGroupName As String, namespaceName As String, ipFilterRuleName As String, parameters As IpFilterRule, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IpFilterRule)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateIpFilterRule : string * string * string * Azure.ResourceManager.EventHubs.Models.IpFilterRule * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt;&#xA;override this.CreateOrUpdateIpFilterRule : string * string * string * Azure.ResourceManager.EventHubs.Models.IpFilterRule * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt;" Usage="namespacesOperations.CreateOrUpdateIpFilterRule (resourceGroupName, namespaceName, ipFilterRuleName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="ipFilterRuleName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.IpFilterRule" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="ipFilterRuleName"> The IP Filter Rule name. </param>
        <param name="parameters"> The Namespace IpFilterRule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates an IpFilterRule for a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateIpFilterRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt;&gt; CreateOrUpdateIpFilterRuleAsync (string resourceGroupName, string namespaceName, string ipFilterRuleName, Azure.ResourceManager.EventHubs.Models.IpFilterRule parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt;&gt; CreateOrUpdateIpFilterRuleAsync(string resourceGroupName, string namespaceName, string ipFilterRuleName, class Azure.ResourceManager.EventHubs.Models.IpFilterRule parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.CreateOrUpdateIpFilterRuleAsync(System.String,System.String,System.String,Azure.ResourceManager.EventHubs.Models.IpFilterRule,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateIpFilterRuleAsync (resourceGroupName As String, namespaceName As String, ipFilterRuleName As String, parameters As IpFilterRule, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IpFilterRule))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateIpFilterRuleAsync : string * string * string * Azure.ResourceManager.EventHubs.Models.IpFilterRule * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt;&gt;&#xA;override this.CreateOrUpdateIpFilterRuleAsync : string * string * string * Azure.ResourceManager.EventHubs.Models.IpFilterRule * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt;&gt;" Usage="namespacesOperations.CreateOrUpdateIpFilterRuleAsync (resourceGroupName, namespaceName, ipFilterRuleName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="ipFilterRuleName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.IpFilterRule" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="ipFilterRuleName"> The IP Filter Rule name. </param>
        <param name="parameters"> The Namespace IpFilterRule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates an IpFilterRule for a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateNetworkRuleSet">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.NetworkRuleSet&gt; CreateOrUpdateNetworkRuleSet (string resourceGroupName, string namespaceName, Azure.ResourceManager.EventHubs.Models.NetworkRuleSet parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.NetworkRuleSet&gt; CreateOrUpdateNetworkRuleSet(string resourceGroupName, string namespaceName, class Azure.ResourceManager.EventHubs.Models.NetworkRuleSet parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.CreateOrUpdateNetworkRuleSet(System.String,System.String,Azure.ResourceManager.EventHubs.Models.NetworkRuleSet,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateNetworkRuleSet (resourceGroupName As String, namespaceName As String, parameters As NetworkRuleSet, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NetworkRuleSet)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateNetworkRuleSet : string * string * Azure.ResourceManager.EventHubs.Models.NetworkRuleSet * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.NetworkRuleSet&gt;&#xA;override this.CreateOrUpdateNetworkRuleSet : string * string * Azure.ResourceManager.EventHubs.Models.NetworkRuleSet * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.NetworkRuleSet&gt;" Usage="namespacesOperations.CreateOrUpdateNetworkRuleSet (resourceGroupName, namespaceName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.NetworkRuleSet&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.NetworkRuleSet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="parameters"> The Namespace IpFilterRule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Create or update NetworkRuleSet for a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateNetworkRuleSetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.NetworkRuleSet&gt;&gt; CreateOrUpdateNetworkRuleSetAsync (string resourceGroupName, string namespaceName, Azure.ResourceManager.EventHubs.Models.NetworkRuleSet parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.NetworkRuleSet&gt;&gt; CreateOrUpdateNetworkRuleSetAsync(string resourceGroupName, string namespaceName, class Azure.ResourceManager.EventHubs.Models.NetworkRuleSet parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.CreateOrUpdateNetworkRuleSetAsync(System.String,System.String,Azure.ResourceManager.EventHubs.Models.NetworkRuleSet,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateNetworkRuleSetAsync (resourceGroupName As String, namespaceName As String, parameters As NetworkRuleSet, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NetworkRuleSet))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateNetworkRuleSetAsync : string * string * Azure.ResourceManager.EventHubs.Models.NetworkRuleSet * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.NetworkRuleSet&gt;&gt;&#xA;override this.CreateOrUpdateNetworkRuleSetAsync : string * string * Azure.ResourceManager.EventHubs.Models.NetworkRuleSet * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.NetworkRuleSet&gt;&gt;" Usage="namespacesOperations.CreateOrUpdateNetworkRuleSetAsync (resourceGroupName, namespaceName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.NetworkRuleSet&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.NetworkRuleSet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="parameters"> The Namespace IpFilterRule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Create or update NetworkRuleSet for a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateVirtualNetworkRule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt; CreateOrUpdateVirtualNetworkRule (string resourceGroupName, string namespaceName, string virtualNetworkRuleName, Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt; CreateOrUpdateVirtualNetworkRule(string resourceGroupName, string namespaceName, string virtualNetworkRuleName, class Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.CreateOrUpdateVirtualNetworkRule(System.String,System.String,System.String,Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateVirtualNetworkRule (resourceGroupName As String, namespaceName As String, virtualNetworkRuleName As String, parameters As VirtualNetworkRule, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualNetworkRule)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateVirtualNetworkRule : string * string * string * Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt;&#xA;override this.CreateOrUpdateVirtualNetworkRule : string * string * string * Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt;" Usage="namespacesOperations.CreateOrUpdateVirtualNetworkRule (resourceGroupName, namespaceName, virtualNetworkRuleName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="virtualNetworkRuleName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="virtualNetworkRuleName"> The Virtual Network Rule name. </param>
        <param name="parameters"> The Namespace VirtualNetworkRule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates an VirtualNetworkRule for a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateVirtualNetworkRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt;&gt; CreateOrUpdateVirtualNetworkRuleAsync (string resourceGroupName, string namespaceName, string virtualNetworkRuleName, Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt;&gt; CreateOrUpdateVirtualNetworkRuleAsync(string resourceGroupName, string namespaceName, string virtualNetworkRuleName, class Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.CreateOrUpdateVirtualNetworkRuleAsync(System.String,System.String,System.String,Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateVirtualNetworkRuleAsync (resourceGroupName As String, namespaceName As String, virtualNetworkRuleName As String, parameters As VirtualNetworkRule, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualNetworkRule))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateVirtualNetworkRuleAsync : string * string * string * Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt;&gt;&#xA;override this.CreateOrUpdateVirtualNetworkRuleAsync : string * string * string * Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt;&gt;" Usage="namespacesOperations.CreateOrUpdateVirtualNetworkRuleAsync (resourceGroupName, namespaceName, virtualNetworkRuleName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="virtualNetworkRuleName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="virtualNetworkRuleName"> The Virtual Network Rule name. </param>
        <param name="parameters"> The Namespace VirtualNetworkRule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates an VirtualNetworkRule for a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAuthorizationRule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteAuthorizationRule (string resourceGroupName, string namespaceName, string authorizationRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteAuthorizationRule(string resourceGroupName, string namespaceName, string authorizationRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.DeleteAuthorizationRule(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAuthorizationRule (resourceGroupName As String, namespaceName As String, authorizationRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteAuthorizationRule : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteAuthorizationRule : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="namespacesOperations.DeleteAuthorizationRule (resourceGroupName, namespaceName, authorizationRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="authorizationRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="authorizationRuleName"> The authorization rule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes an AuthorizationRule for a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAuthorizationRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAuthorizationRuleAsync (string resourceGroupName, string namespaceName, string authorizationRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAuthorizationRuleAsync(string resourceGroupName, string namespaceName, string authorizationRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.DeleteAuthorizationRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAuthorizationRuleAsync (resourceGroupName As String, namespaceName As String, authorizationRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAuthorizationRuleAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteAuthorizationRuleAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="namespacesOperations.DeleteAuthorizationRuleAsync (resourceGroupName, namespaceName, authorizationRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="authorizationRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="authorizationRuleName"> The authorization rule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes an AuthorizationRule for a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIpFilterRule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteIpFilterRule (string resourceGroupName, string namespaceName, string ipFilterRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteIpFilterRule(string resourceGroupName, string namespaceName, string ipFilterRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.DeleteIpFilterRule(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIpFilterRule (resourceGroupName As String, namespaceName As String, ipFilterRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteIpFilterRule : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteIpFilterRule : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="namespacesOperations.DeleteIpFilterRule (resourceGroupName, namespaceName, ipFilterRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="ipFilterRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="ipFilterRuleName"> The IP Filter Rule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes an IpFilterRule for a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIpFilterRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteIpFilterRuleAsync (string resourceGroupName, string namespaceName, string ipFilterRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteIpFilterRuleAsync(string resourceGroupName, string namespaceName, string ipFilterRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.DeleteIpFilterRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIpFilterRuleAsync (resourceGroupName As String, namespaceName As String, ipFilterRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteIpFilterRuleAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteIpFilterRuleAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="namespacesOperations.DeleteIpFilterRuleAsync (resourceGroupName, namespaceName, ipFilterRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="ipFilterRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="ipFilterRuleName"> The IP Filter Rule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes an IpFilterRule for a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteVirtualNetworkRule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteVirtualNetworkRule (string resourceGroupName, string namespaceName, string virtualNetworkRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteVirtualNetworkRule(string resourceGroupName, string namespaceName, string virtualNetworkRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.DeleteVirtualNetworkRule(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteVirtualNetworkRule (resourceGroupName As String, namespaceName As String, virtualNetworkRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteVirtualNetworkRule : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteVirtualNetworkRule : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="namespacesOperations.DeleteVirtualNetworkRule (resourceGroupName, namespaceName, virtualNetworkRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="virtualNetworkRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="virtualNetworkRuleName"> The Virtual Network Rule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes an VirtualNetworkRule for a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteVirtualNetworkRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteVirtualNetworkRuleAsync (string resourceGroupName, string namespaceName, string virtualNetworkRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteVirtualNetworkRuleAsync(string resourceGroupName, string namespaceName, string virtualNetworkRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.DeleteVirtualNetworkRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteVirtualNetworkRuleAsync (resourceGroupName As String, namespaceName As String, virtualNetworkRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteVirtualNetworkRuleAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteVirtualNetworkRuleAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="namespacesOperations.DeleteVirtualNetworkRuleAsync (resourceGroupName, namespaceName, virtualNetworkRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="virtualNetworkRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="virtualNetworkRuleName"> The Virtual Network Rule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes an VirtualNetworkRule for a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt; Get (string resourceGroupName, string namespaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.EHNamespace&gt; Get(string resourceGroupName, string namespaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.Get(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (resourceGroupName As String, namespaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EHNamespace)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;&#xA;override this.Get : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;" Usage="namespacesOperations.Get (resourceGroupName, namespaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets the description of the specified namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;&gt; GetAsync (string resourceGroupName, string namespaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;&gt; GetAsync(string resourceGroupName, string namespaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.GetAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (resourceGroupName As String, namespaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EHNamespace))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;&gt;&#xA;override this.GetAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;&gt;" Usage="namespacesOperations.GetAsync (resourceGroupName, namespaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets the description of the specified namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuthorizationRule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt; GetAuthorizationRule (string resourceGroupName, string namespaceName, string authorizationRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt; GetAuthorizationRule(string resourceGroupName, string namespaceName, string authorizationRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.GetAuthorizationRule(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAuthorizationRule (resourceGroupName As String, namespaceName As String, authorizationRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AuthorizationRule)" />
      <MemberSignature Language="F#" Value="abstract member GetAuthorizationRule : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&#xA;override this.GetAuthorizationRule : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;" Usage="namespacesOperations.GetAuthorizationRule (resourceGroupName, namespaceName, authorizationRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="authorizationRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="authorizationRuleName"> The authorization rule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets an AuthorizationRule for a Namespace by rule name. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuthorizationRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&gt; GetAuthorizationRuleAsync (string resourceGroupName, string namespaceName, string authorizationRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&gt; GetAuthorizationRuleAsync(string resourceGroupName, string namespaceName, string authorizationRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.GetAuthorizationRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAuthorizationRuleAsync (resourceGroupName As String, namespaceName As String, authorizationRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AuthorizationRule))" />
      <MemberSignature Language="F#" Value="abstract member GetAuthorizationRuleAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&gt;&#xA;override this.GetAuthorizationRuleAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&gt;" Usage="namespacesOperations.GetAuthorizationRuleAsync (resourceGroupName, namespaceName, authorizationRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="authorizationRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="authorizationRuleName"> The authorization rule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets an AuthorizationRule for a Namespace by rule name. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIpFilterRule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt; GetIpFilterRule (string resourceGroupName, string namespaceName, string ipFilterRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt; GetIpFilterRule(string resourceGroupName, string namespaceName, string ipFilterRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.GetIpFilterRule(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIpFilterRule (resourceGroupName As String, namespaceName As String, ipFilterRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IpFilterRule)" />
      <MemberSignature Language="F#" Value="abstract member GetIpFilterRule : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt;&#xA;override this.GetIpFilterRule : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt;" Usage="namespacesOperations.GetIpFilterRule (resourceGroupName, namespaceName, ipFilterRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="ipFilterRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="ipFilterRuleName"> The IP Filter Rule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets an IpFilterRule for a Namespace by rule name. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIpFilterRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt;&gt; GetIpFilterRuleAsync (string resourceGroupName, string namespaceName, string ipFilterRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt;&gt; GetIpFilterRuleAsync(string resourceGroupName, string namespaceName, string ipFilterRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.GetIpFilterRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIpFilterRuleAsync (resourceGroupName As String, namespaceName As String, ipFilterRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IpFilterRule))" />
      <MemberSignature Language="F#" Value="abstract member GetIpFilterRuleAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt;&gt;&#xA;override this.GetIpFilterRuleAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt;&gt;" Usage="namespacesOperations.GetIpFilterRuleAsync (resourceGroupName, namespaceName, ipFilterRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="ipFilterRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="ipFilterRuleName"> The IP Filter Rule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets an IpFilterRule for a Namespace by rule name. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkRuleSet">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.NetworkRuleSet&gt; GetNetworkRuleSet (string resourceGroupName, string namespaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.NetworkRuleSet&gt; GetNetworkRuleSet(string resourceGroupName, string namespaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.GetNetworkRuleSet(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkRuleSet (resourceGroupName As String, namespaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NetworkRuleSet)" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkRuleSet : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.NetworkRuleSet&gt;&#xA;override this.GetNetworkRuleSet : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.NetworkRuleSet&gt;" Usage="namespacesOperations.GetNetworkRuleSet (resourceGroupName, namespaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.NetworkRuleSet&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets NetworkRuleSet for a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkRuleSetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.NetworkRuleSet&gt;&gt; GetNetworkRuleSetAsync (string resourceGroupName, string namespaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.NetworkRuleSet&gt;&gt; GetNetworkRuleSetAsync(string resourceGroupName, string namespaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.GetNetworkRuleSetAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkRuleSetAsync (resourceGroupName As String, namespaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NetworkRuleSet))" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkRuleSetAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.NetworkRuleSet&gt;&gt;&#xA;override this.GetNetworkRuleSetAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.NetworkRuleSet&gt;&gt;" Usage="namespacesOperations.GetNetworkRuleSetAsync (resourceGroupName, namespaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.NetworkRuleSet&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets NetworkRuleSet for a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkRule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt; GetVirtualNetworkRule (string resourceGroupName, string namespaceName, string virtualNetworkRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt; GetVirtualNetworkRule(string resourceGroupName, string namespaceName, string virtualNetworkRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.GetVirtualNetworkRule(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkRule (resourceGroupName As String, namespaceName As String, virtualNetworkRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualNetworkRule)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkRule : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt;&#xA;override this.GetVirtualNetworkRule : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt;" Usage="namespacesOperations.GetVirtualNetworkRule (resourceGroupName, namespaceName, virtualNetworkRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="virtualNetworkRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="virtualNetworkRuleName"> The Virtual Network Rule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets an VirtualNetworkRule for a Namespace by rule name. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt;&gt; GetVirtualNetworkRuleAsync (string resourceGroupName, string namespaceName, string virtualNetworkRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt;&gt; GetVirtualNetworkRuleAsync(string resourceGroupName, string namespaceName, string virtualNetworkRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.GetVirtualNetworkRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkRuleAsync (resourceGroupName As String, namespaceName As String, virtualNetworkRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualNetworkRule))" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkRuleAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt;&gt;&#xA;override this.GetVirtualNetworkRuleAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt;&gt;" Usage="namespacesOperations.GetVirtualNetworkRuleAsync (resourceGroupName, namespaceName, virtualNetworkRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="virtualNetworkRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="virtualNetworkRuleName"> The Virtual Network Rule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets an VirtualNetworkRule for a Namespace by rule name. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt; List (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.EventHubs.Models.EHNamespace&gt; List(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.List(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function List (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of EHNamespace)" />
      <MemberSignature Language="F#" Value="abstract member List : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;&#xA;override this.List : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;" Usage="namespacesOperations.List cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists all the available Namespaces within a subscription, irrespective of the resource groups. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt; ListAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventHubs.Models.EHNamespace&gt; ListAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.ListAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of EHNamespace)" />
      <MemberSignature Language="F#" Value="abstract member ListAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;&#xA;override this.ListAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;" Usage="namespacesOperations.ListAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists all the available Namespaces within a subscription, irrespective of the resource groups. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAuthorizationRules">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt; ListAuthorizationRules (string resourceGroupName, string namespaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt; ListAuthorizationRules(string resourceGroupName, string namespaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.ListAuthorizationRules(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListAuthorizationRules (resourceGroupName As String, namespaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AuthorizationRule)" />
      <MemberSignature Language="F#" Value="abstract member ListAuthorizationRules : string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&#xA;override this.ListAuthorizationRules : string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;" Usage="namespacesOperations.ListAuthorizationRules (resourceGroupName, namespaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of authorization rules for a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAuthorizationRulesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt; ListAuthorizationRulesAsync (string resourceGroupName, string namespaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt; ListAuthorizationRulesAsync(string resourceGroupName, string namespaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.ListAuthorizationRulesAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListAuthorizationRulesAsync (resourceGroupName As String, namespaceName As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AuthorizationRule)" />
      <MemberSignature Language="F#" Value="abstract member ListAuthorizationRulesAsync : string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;&#xA;override this.ListAuthorizationRulesAsync : string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;" Usage="namespacesOperations.ListAuthorizationRulesAsync (resourceGroupName, namespaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.AuthorizationRule&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of authorization rules for a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListByResourceGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt; ListByResourceGroup (string resourceGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.EventHubs.Models.EHNamespace&gt; ListByResourceGroup(string resourceGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.ListByResourceGroup(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListByResourceGroup (resourceGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of EHNamespace)" />
      <MemberSignature Language="F#" Value="abstract member ListByResourceGroup : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;&#xA;override this.ListByResourceGroup : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;" Usage="namespacesOperations.ListByResourceGroup (resourceGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists the available Namespaces within a resource group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListByResourceGroupAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt; ListByResourceGroupAsync (string resourceGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventHubs.Models.EHNamespace&gt; ListByResourceGroupAsync(string resourceGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.ListByResourceGroupAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListByResourceGroupAsync (resourceGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of EHNamespace)" />
      <MemberSignature Language="F#" Value="abstract member ListByResourceGroupAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;&#xA;override this.ListByResourceGroupAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;" Usage="namespacesOperations.ListByResourceGroupAsync (resourceGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists the available Namespaces within a resource group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListIPFilterRules">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt; ListIPFilterRules (string resourceGroupName, string namespaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt; ListIPFilterRules(string resourceGroupName, string namespaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.ListIPFilterRules(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListIPFilterRules (resourceGroupName As String, namespaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of IpFilterRule)" />
      <MemberSignature Language="F#" Value="abstract member ListIPFilterRules : string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt;&#xA;override this.ListIPFilterRules : string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt;" Usage="namespacesOperations.ListIPFilterRules (resourceGroupName, namespaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of IP Filter rules for a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListIPFilterRulesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt; ListIPFilterRulesAsync (string resourceGroupName, string namespaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt; ListIPFilterRulesAsync(string resourceGroupName, string namespaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.ListIPFilterRulesAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListIPFilterRulesAsync (resourceGroupName As String, namespaceName As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of IpFilterRule)" />
      <MemberSignature Language="F#" Value="abstract member ListIPFilterRulesAsync : string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt;&#xA;override this.ListIPFilterRulesAsync : string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt;" Usage="namespacesOperations.ListIPFilterRulesAsync (resourceGroupName, namespaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.IpFilterRule&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of IP Filter rules for a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListKeys">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt; ListKeys (string resourceGroupName, string namespaceName, string authorizationRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.AccessKeys&gt; ListKeys(string resourceGroupName, string namespaceName, string authorizationRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.ListKeys(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListKeys (resourceGroupName As String, namespaceName As String, authorizationRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AccessKeys)" />
      <MemberSignature Language="F#" Value="abstract member ListKeys : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;&#xA;override this.ListKeys : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;" Usage="namespacesOperations.ListKeys (resourceGroupName, namespaceName, authorizationRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="authorizationRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="authorizationRuleName"> The authorization rule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets the primary and secondary connection strings for the Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListKeysAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;&gt; ListKeysAsync (string resourceGroupName, string namespaceName, string authorizationRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;&gt; ListKeysAsync(string resourceGroupName, string namespaceName, string authorizationRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.ListKeysAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListKeysAsync (resourceGroupName As String, namespaceName As String, authorizationRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AccessKeys))" />
      <MemberSignature Language="F#" Value="abstract member ListKeysAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;&gt;&#xA;override this.ListKeysAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;&gt;" Usage="namespacesOperations.ListKeysAsync (resourceGroupName, namespaceName, authorizationRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="authorizationRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="authorizationRuleName"> The authorization rule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets the primary and secondary connection strings for the Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListVirtualNetworkRules">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt; ListVirtualNetworkRules (string resourceGroupName, string namespaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt; ListVirtualNetworkRules(string resourceGroupName, string namespaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.ListVirtualNetworkRules(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListVirtualNetworkRules (resourceGroupName As String, namespaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of VirtualNetworkRule)" />
      <MemberSignature Language="F#" Value="abstract member ListVirtualNetworkRules : string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt;&#xA;override this.ListVirtualNetworkRules : string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt;" Usage="namespacesOperations.ListVirtualNetworkRules (resourceGroupName, namespaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of VirtualNetwork rules for a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListVirtualNetworkRulesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt; ListVirtualNetworkRulesAsync (string resourceGroupName, string namespaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt; ListVirtualNetworkRulesAsync(string resourceGroupName, string namespaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.ListVirtualNetworkRulesAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListVirtualNetworkRulesAsync (resourceGroupName As String, namespaceName As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of VirtualNetworkRule)" />
      <MemberSignature Language="F#" Value="abstract member ListVirtualNetworkRulesAsync : string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt;&#xA;override this.ListVirtualNetworkRulesAsync : string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt;" Usage="namespacesOperations.ListVirtualNetworkRulesAsync (resourceGroupName, namespaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.VirtualNetworkRule&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of VirtualNetwork rules for a Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegenerateKeys">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt; RegenerateKeys (string resourceGroupName, string namespaceName, string authorizationRuleName, Azure.ResourceManager.EventHubs.Models.RegenerateAccessKeyParameters parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.AccessKeys&gt; RegenerateKeys(string resourceGroupName, string namespaceName, string authorizationRuleName, class Azure.ResourceManager.EventHubs.Models.RegenerateAccessKeyParameters parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.RegenerateKeys(System.String,System.String,System.String,Azure.ResourceManager.EventHubs.Models.RegenerateAccessKeyParameters,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RegenerateKeys (resourceGroupName As String, namespaceName As String, authorizationRuleName As String, parameters As RegenerateAccessKeyParameters, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AccessKeys)" />
      <MemberSignature Language="F#" Value="abstract member RegenerateKeys : string * string * string * Azure.ResourceManager.EventHubs.Models.RegenerateAccessKeyParameters * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;&#xA;override this.RegenerateKeys : string * string * string * Azure.ResourceManager.EventHubs.Models.RegenerateAccessKeyParameters * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;" Usage="namespacesOperations.RegenerateKeys (resourceGroupName, namespaceName, authorizationRuleName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="authorizationRuleName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.RegenerateAccessKeyParameters" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="authorizationRuleName"> The authorization rule name. </param>
        <param name="parameters"> Parameters required to regenerate the connection string. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Regenerates the primary or secondary connection strings for the specified Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegenerateKeysAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;&gt; RegenerateKeysAsync (string resourceGroupName, string namespaceName, string authorizationRuleName, Azure.ResourceManager.EventHubs.Models.RegenerateAccessKeyParameters parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;&gt; RegenerateKeysAsync(string resourceGroupName, string namespaceName, string authorizationRuleName, class Azure.ResourceManager.EventHubs.Models.RegenerateAccessKeyParameters parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.RegenerateKeysAsync(System.String,System.String,System.String,Azure.ResourceManager.EventHubs.Models.RegenerateAccessKeyParameters,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RegenerateKeysAsync (resourceGroupName As String, namespaceName As String, authorizationRuleName As String, parameters As RegenerateAccessKeyParameters, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AccessKeys))" />
      <MemberSignature Language="F#" Value="abstract member RegenerateKeysAsync : string * string * string * Azure.ResourceManager.EventHubs.Models.RegenerateAccessKeyParameters * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;&gt;&#xA;override this.RegenerateKeysAsync : string * string * string * Azure.ResourceManager.EventHubs.Models.RegenerateAccessKeyParameters * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;&gt;" Usage="namespacesOperations.RegenerateKeysAsync (resourceGroupName, namespaceName, authorizationRuleName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.AccessKeys&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="authorizationRuleName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.RegenerateAccessKeyParameters" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="authorizationRuleName"> The authorization rule name. </param>
        <param name="parameters"> Parameters required to regenerate the connection string. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Regenerates the primary or secondary connection strings for the specified Namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.EventHubs.NamespacesCreateOrUpdateOperation StartCreateOrUpdate (string resourceGroupName, string namespaceName, Azure.ResourceManager.EventHubs.Models.EHNamespace parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.EventHubs.NamespacesCreateOrUpdateOperation StartCreateOrUpdate(string resourceGroupName, string namespaceName, class Azure.ResourceManager.EventHubs.Models.EHNamespace parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.StartCreateOrUpdate(System.String,System.String,Azure.ResourceManager.EventHubs.Models.EHNamespace,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdate (resourceGroupName As String, namespaceName As String, parameters As EHNamespace, Optional cancellationToken As CancellationToken = Nothing) As NamespacesCreateOrUpdateOperation" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdate : string * string * Azure.ResourceManager.EventHubs.Models.EHNamespace * System.Threading.CancellationToken -&gt; Azure.ResourceManager.EventHubs.NamespacesCreateOrUpdateOperation&#xA;override this.StartCreateOrUpdate : string * string * Azure.ResourceManager.EventHubs.Models.EHNamespace * System.Threading.CancellationToken -&gt; Azure.ResourceManager.EventHubs.NamespacesCreateOrUpdateOperation" Usage="namespacesOperations.StartCreateOrUpdate (resourceGroupName, namespaceName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.NamespacesCreateOrUpdateOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.EHNamespace" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="parameters"> Parameters for creating a namespace resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.EventHubs.NamespacesCreateOrUpdateOperation&gt; StartCreateOrUpdateAsync (string resourceGroupName, string namespaceName, Azure.ResourceManager.EventHubs.Models.EHNamespace parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.EventHubs.NamespacesCreateOrUpdateOperation&gt; StartCreateOrUpdateAsync(string resourceGroupName, string namespaceName, class Azure.ResourceManager.EventHubs.Models.EHNamespace parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.StartCreateOrUpdateAsync(System.String,System.String,Azure.ResourceManager.EventHubs.Models.EHNamespace,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdateAsync (resourceGroupName As String, namespaceName As String, parameters As EHNamespace, Optional cancellationToken As CancellationToken = Nothing) As Task(Of NamespacesCreateOrUpdateOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdateAsync : string * string * Azure.ResourceManager.EventHubs.Models.EHNamespace * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.EventHubs.NamespacesCreateOrUpdateOperation&gt;&#xA;override this.StartCreateOrUpdateAsync : string * string * Azure.ResourceManager.EventHubs.Models.EHNamespace * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.EventHubs.NamespacesCreateOrUpdateOperation&gt;" Usage="namespacesOperations.StartCreateOrUpdateAsync (resourceGroupName, namespaceName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.EventHubs.NamespacesCreateOrUpdateOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.EHNamespace" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="parameters"> Parameters for creating a namespace resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDelete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.EventHubs.NamespacesDeleteOperation StartDelete (string resourceGroupName, string namespaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.EventHubs.NamespacesDeleteOperation StartDelete(string resourceGroupName, string namespaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.StartDelete(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDelete (resourceGroupName As String, namespaceName As String, Optional cancellationToken As CancellationToken = Nothing) As NamespacesDeleteOperation" />
      <MemberSignature Language="F#" Value="abstract member StartDelete : string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.EventHubs.NamespacesDeleteOperation&#xA;override this.StartDelete : string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.EventHubs.NamespacesDeleteOperation" Usage="namespacesOperations.StartDelete (resourceGroupName, namespaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.NamespacesDeleteOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes an existing namespace. This operation also removes all associated resources under the namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.EventHubs.NamespacesDeleteOperation&gt; StartDeleteAsync (string resourceGroupName, string namespaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.EventHubs.NamespacesDeleteOperation&gt; StartDeleteAsync(string resourceGroupName, string namespaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.StartDeleteAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteAsync (resourceGroupName As String, namespaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of NamespacesDeleteOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.EventHubs.NamespacesDeleteOperation&gt;&#xA;override this.StartDeleteAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.EventHubs.NamespacesDeleteOperation&gt;" Usage="namespacesOperations.StartDeleteAsync (resourceGroupName, namespaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.EventHubs.NamespacesDeleteOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes an existing namespace. This operation also removes all associated resources under the namespace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt; Update (string resourceGroupName, string namespaceName, Azure.ResourceManager.EventHubs.Models.EHNamespace parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.EHNamespace&gt; Update(string resourceGroupName, string namespaceName, class Azure.ResourceManager.EventHubs.Models.EHNamespace parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.Update(System.String,System.String,Azure.ResourceManager.EventHubs.Models.EHNamespace,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (resourceGroupName As String, namespaceName As String, parameters As EHNamespace, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EHNamespace)" />
      <MemberSignature Language="F#" Value="abstract member Update : string * string * Azure.ResourceManager.EventHubs.Models.EHNamespace * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;&#xA;override this.Update : string * string * Azure.ResourceManager.EventHubs.Models.EHNamespace * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;" Usage="namespacesOperations.Update (resourceGroupName, namespaceName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.EHNamespace" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="parameters"> Parameters for updating a namespace resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;&gt; UpdateAsync (string resourceGroupName, string namespaceName, Azure.ResourceManager.EventHubs.Models.EHNamespace parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;&gt; UpdateAsync(string resourceGroupName, string namespaceName, class Azure.ResourceManager.EventHubs.Models.EHNamespace parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.NamespacesOperations.UpdateAsync(System.String,System.String,Azure.ResourceManager.EventHubs.Models.EHNamespace,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (resourceGroupName As String, namespaceName As String, parameters As EHNamespace, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EHNamespace))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : string * string * Azure.ResourceManager.EventHubs.Models.EHNamespace * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;&gt;&#xA;override this.UpdateAsync : string * string * Azure.ResourceManager.EventHubs.Models.EHNamespace * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;&gt;" Usage="namespacesOperations.UpdateAsync (resourceGroupName, namespaceName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.EHNamespace&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.EHNamespace" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> Name of the resource group within the azure subscription. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="parameters"> Parameters for updating a namespace resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
