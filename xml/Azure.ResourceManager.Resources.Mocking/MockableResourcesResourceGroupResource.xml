<Type Name="MockableResourcesResourceGroupResource" FullName="Azure.ResourceManager.Resources.Mocking.MockableResourcesResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableResourcesResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableResourcesResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Resources.Mocking.MockableResourcesResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableResourcesResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableResourcesResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
    <AssemblyVersion>1.7.0.0</AssemblyVersion>
    <AssemblyVersion>1.7.1.0</AssemblyVersion>
    <AssemblyVersion>1.7.2.0</AssemblyVersion>
    <AssemblyVersion>1.7.3.0</AssemblyVersion>
    <AssemblyVersion>1.8.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableResourcesResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.Mocking.MockableResourcesResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArmApplication">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.ArmApplicationResource&gt; GetArmApplication (string applicationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ArmApplicationResource&gt; GetArmApplication(string applicationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesResourceGroupResource.GetArmApplication(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArmApplication (applicationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ArmApplicationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetArmApplication : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.ArmApplicationResource&gt;&#xA;override this.GetArmApplication : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.ArmApplicationResource&gt;" Usage="mockableResourcesResourceGroupResource.GetArmApplication (applicationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.ArmApplicationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="applicationName"> The name of the managed application. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the managed application.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}</description></item><item><term>Operation Id</term><description>Applications_Get</description></item><item><term>Default Api Version</term><description>2019-07-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.ArmApplicationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="applicationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetArmApplicationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ArmApplicationResource&gt;&gt; GetArmApplicationAsync (string applicationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ArmApplicationResource&gt;&gt; GetArmApplicationAsync(string applicationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesResourceGroupResource.GetArmApplicationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArmApplicationAsync (applicationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ArmApplicationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetArmApplicationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ArmApplicationResource&gt;&gt;&#xA;override this.GetArmApplicationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ArmApplicationResource&gt;&gt;" Usage="mockableResourcesResourceGroupResource.GetArmApplicationAsync (applicationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ArmApplicationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="applicationName"> The name of the managed application. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the managed application.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applications/{applicationName}</description></item><item><term>Operation Id</term><description>Applications_Get</description></item><item><term>Default Api Version</term><description>2019-07-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.ArmApplicationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="applicationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetArmApplicationDefinition">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.ArmApplicationDefinitionResource&gt; GetArmApplicationDefinition (string applicationDefinitionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ArmApplicationDefinitionResource&gt; GetArmApplicationDefinition(string applicationDefinitionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesResourceGroupResource.GetArmApplicationDefinition(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArmApplicationDefinition (applicationDefinitionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ArmApplicationDefinitionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetArmApplicationDefinition : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.ArmApplicationDefinitionResource&gt;&#xA;override this.GetArmApplicationDefinition : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.ArmApplicationDefinitionResource&gt;" Usage="mockableResourcesResourceGroupResource.GetArmApplicationDefinition (applicationDefinitionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.ArmApplicationDefinitionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationDefinitionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="applicationDefinitionName"> The name of the managed application definition. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the managed application definition.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}</description></item><item><term>Operation Id</term><description>ApplicationDefinitions_Get</description></item><item><term>Default Api Version</term><description>2019-07-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationDefinitionName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="applicationDefinitionName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetArmApplicationDefinitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ArmApplicationDefinitionResource&gt;&gt; GetArmApplicationDefinitionAsync (string applicationDefinitionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ArmApplicationDefinitionResource&gt;&gt; GetArmApplicationDefinitionAsync(string applicationDefinitionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesResourceGroupResource.GetArmApplicationDefinitionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArmApplicationDefinitionAsync (applicationDefinitionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ArmApplicationDefinitionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetArmApplicationDefinitionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ArmApplicationDefinitionResource&gt;&gt;&#xA;override this.GetArmApplicationDefinitionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ArmApplicationDefinitionResource&gt;&gt;" Usage="mockableResourcesResourceGroupResource.GetArmApplicationDefinitionAsync (applicationDefinitionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ArmApplicationDefinitionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationDefinitionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="applicationDefinitionName"> The name of the managed application definition. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the managed application definition.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/applicationDefinitions/{applicationDefinitionName}</description></item><item><term>Operation Id</term><description>ApplicationDefinitions_Get</description></item><item><term>Default Api Version</term><description>2019-07-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationDefinitionName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="applicationDefinitionName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetArmApplicationDefinitions">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.ArmApplicationDefinitionCollection GetArmApplicationDefinitions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.ArmApplicationDefinitionCollection GetArmApplicationDefinitions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesResourceGroupResource.GetArmApplicationDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArmApplicationDefinitions () As ArmApplicationDefinitionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetArmApplicationDefinitions : unit -&gt; Azure.ResourceManager.Resources.ArmApplicationDefinitionCollection&#xA;override this.GetArmApplicationDefinitions : unit -&gt; Azure.ResourceManager.Resources.ArmApplicationDefinitionCollection" Usage="mockableResourcesResourceGroupResource.GetArmApplicationDefinitions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.ArmApplicationDefinitionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ArmApplicationDefinitionResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ArmApplicationDefinitionResources and their operations over a ArmApplicationDefinitionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArmApplications">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.ArmApplicationCollection GetArmApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.ArmApplicationCollection GetArmApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesResourceGroupResource.GetArmApplications" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArmApplications () As ArmApplicationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetArmApplications : unit -&gt; Azure.ResourceManager.Resources.ArmApplicationCollection&#xA;override this.GetArmApplications : unit -&gt; Azure.ResourceManager.Resources.ArmApplicationCollection" Usage="mockableResourcesResourceGroupResource.GetArmApplications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.ArmApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ArmApplicationResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ArmApplicationResources and their operations over a ArmApplicationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArmDeployment">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.ArmDeploymentResource&gt; GetArmDeployment (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ArmDeploymentResource&gt; GetArmDeployment(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesResourceGroupResource.GetArmDeployment(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArmDeployment (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ArmDeploymentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetArmDeployment : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.ArmDeploymentResource&gt;&#xA;override this.GetArmDeployment : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.ArmDeploymentResource&gt;" Usage="mockableResourcesResourceGroupResource.GetArmDeployment (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.ArmDeploymentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a deployment.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}</description></item><item><term>Operation Id</term><description>Deployments_GetAtScope</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.ArmDeploymentResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="deploymentName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetArmDeploymentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ArmDeploymentResource&gt;&gt; GetArmDeploymentAsync (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ArmDeploymentResource&gt;&gt; GetArmDeploymentAsync(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesResourceGroupResource.GetArmDeploymentAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArmDeploymentAsync (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ArmDeploymentResource))" />
      <MemberSignature Language="F#" Value="abstract member GetArmDeploymentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ArmDeploymentResource&gt;&gt;&#xA;override this.GetArmDeploymentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ArmDeploymentResource&gt;&gt;" Usage="mockableResourcesResourceGroupResource.GetArmDeploymentAsync (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ArmDeploymentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a deployment.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}</description></item><item><term>Operation Id</term><description>Deployments_GetAtScope</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.ArmDeploymentResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="deploymentName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetArmDeployments">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.ArmDeploymentCollection GetArmDeployments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.ArmDeploymentCollection GetArmDeployments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesResourceGroupResource.GetArmDeployments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArmDeployments () As ArmDeploymentCollection" />
      <MemberSignature Language="F#" Value="abstract member GetArmDeployments : unit -&gt; Azure.ResourceManager.Resources.ArmDeploymentCollection&#xA;override this.GetArmDeployments : unit -&gt; Azure.ResourceManager.Resources.ArmDeploymentCollection" Usage="mockableResourcesResourceGroupResource.GetArmDeployments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.ArmDeploymentCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ArmDeploymentResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ArmDeploymentResources and their operations over a ArmDeploymentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArmDeploymentScript">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.ArmDeploymentScriptResource&gt; GetArmDeploymentScript (string scriptName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ArmDeploymentScriptResource&gt; GetArmDeploymentScript(string scriptName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesResourceGroupResource.GetArmDeploymentScript(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArmDeploymentScript (scriptName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ArmDeploymentScriptResource)" />
      <MemberSignature Language="F#" Value="abstract member GetArmDeploymentScript : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.ArmDeploymentScriptResource&gt;&#xA;override this.GetArmDeploymentScript : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.ArmDeploymentScriptResource&gt;" Usage="mockableResourcesResourceGroupResource.GetArmDeploymentScript (scriptName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.ArmDeploymentScriptResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scriptName"> Name of the deployment script. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a deployment script with a given name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}</description></item><item><term>Operation Id</term><description>DeploymentScripts_Get</description></item><item><term>Default Api Version</term><description>2020-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scriptName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetArmDeploymentScriptAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ArmDeploymentScriptResource&gt;&gt; GetArmDeploymentScriptAsync (string scriptName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ArmDeploymentScriptResource&gt;&gt; GetArmDeploymentScriptAsync(string scriptName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesResourceGroupResource.GetArmDeploymentScriptAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArmDeploymentScriptAsync (scriptName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ArmDeploymentScriptResource))" />
      <MemberSignature Language="F#" Value="abstract member GetArmDeploymentScriptAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ArmDeploymentScriptResource&gt;&gt;&#xA;override this.GetArmDeploymentScriptAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ArmDeploymentScriptResource&gt;&gt;" Usage="mockableResourcesResourceGroupResource.GetArmDeploymentScriptAsync (scriptName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ArmDeploymentScriptResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scriptName"> Name of the deployment script. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a deployment script with a given name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}</description></item><item><term>Operation Id</term><description>DeploymentScripts_Get</description></item><item><term>Default Api Version</term><description>2020-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scriptName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetArmDeploymentScripts">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.ArmDeploymentScriptCollection GetArmDeploymentScripts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.ArmDeploymentScriptCollection GetArmDeploymentScripts() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesResourceGroupResource.GetArmDeploymentScripts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArmDeploymentScripts () As ArmDeploymentScriptCollection" />
      <MemberSignature Language="F#" Value="abstract member GetArmDeploymentScripts : unit -&gt; Azure.ResourceManager.Resources.ArmDeploymentScriptCollection&#xA;override this.GetArmDeploymentScripts : unit -&gt; Azure.ResourceManager.Resources.ArmDeploymentScriptCollection" Usage="mockableResourcesResourceGroupResource.GetArmDeploymentScripts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.ArmDeploymentScriptCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ArmDeploymentScriptResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ArmDeploymentScriptResources and their operations over a ArmDeploymentScriptResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentStack">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.DeploymentStackResource&gt; GetDeploymentStack (string deploymentStackName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.DeploymentStackResource&gt; GetDeploymentStack(string deploymentStackName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesResourceGroupResource.GetDeploymentStack(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeploymentStack (deploymentStackName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeploymentStackResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentStack : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.DeploymentStackResource&gt;&#xA;override this.GetDeploymentStack : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.DeploymentStackResource&gt;" Usage="mockableResourcesResourceGroupResource.GetDeploymentStack (deploymentStackName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.DeploymentStackResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentStackName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentStackName"> Name of the deployment stack. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Deployment stack with a given name at specific scope.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Resources/deploymentStacks/{deploymentStackName}</description></item><item><term>Operation Id</term><description>DeploymentStacks_GetAtScope</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.DeploymentStackResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="deploymentStackName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="deploymentStackName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentStackAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.DeploymentStackResource&gt;&gt; GetDeploymentStackAsync (string deploymentStackName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.DeploymentStackResource&gt;&gt; GetDeploymentStackAsync(string deploymentStackName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesResourceGroupResource.GetDeploymentStackAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeploymentStackAsync (deploymentStackName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeploymentStackResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentStackAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.DeploymentStackResource&gt;&gt;&#xA;override this.GetDeploymentStackAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.DeploymentStackResource&gt;&gt;" Usage="mockableResourcesResourceGroupResource.GetDeploymentStackAsync (deploymentStackName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.DeploymentStackResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentStackName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentStackName"> Name of the deployment stack. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Deployment stack with a given name at specific scope.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Resources/deploymentStacks/{deploymentStackName}</description></item><item><term>Operation Id</term><description>DeploymentStacks_GetAtScope</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.DeploymentStackResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="deploymentStackName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="deploymentStackName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentStacks">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.DeploymentStackCollection GetDeploymentStacks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.DeploymentStackCollection GetDeploymentStacks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesResourceGroupResource.GetDeploymentStacks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeploymentStacks () As DeploymentStackCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentStacks : unit -&gt; Azure.ResourceManager.Resources.DeploymentStackCollection&#xA;override this.GetDeploymentStacks : unit -&gt; Azure.ResourceManager.Resources.DeploymentStackCollection" Usage="mockableResourcesResourceGroupResource.GetDeploymentStacks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.DeploymentStackCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DeploymentStackResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of DeploymentStackResources and their operations over a DeploymentStackResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJitRequest">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.JitRequestResource&gt; GetJitRequest (string jitRequestName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.JitRequestResource&gt; GetJitRequest(string jitRequestName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesResourceGroupResource.GetJitRequest(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJitRequest (jitRequestName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of JitRequestResource)" />
      <MemberSignature Language="F#" Value="abstract member GetJitRequest : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.JitRequestResource&gt;&#xA;override this.GetJitRequest : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.JitRequestResource&gt;" Usage="mockableResourcesResourceGroupResource.GetJitRequest (jitRequestName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.JitRequestResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jitRequestName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jitRequestName"> The name of the JIT request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the JIT request.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests/{jitRequestName}</description></item><item><term>Operation Id</term><description>JitRequests_Get</description></item><item><term>Default Api Version</term><description>2019-07-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.JitRequestResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jitRequestName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="jitRequestName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetJitRequestAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.JitRequestResource&gt;&gt; GetJitRequestAsync (string jitRequestName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.JitRequestResource&gt;&gt; GetJitRequestAsync(string jitRequestName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesResourceGroupResource.GetJitRequestAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJitRequestAsync (jitRequestName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of JitRequestResource))" />
      <MemberSignature Language="F#" Value="abstract member GetJitRequestAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.JitRequestResource&gt;&gt;&#xA;override this.GetJitRequestAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.JitRequestResource&gt;&gt;" Usage="mockableResourcesResourceGroupResource.GetJitRequestAsync (jitRequestName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.JitRequestResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jitRequestName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jitRequestName"> The name of the JIT request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the JIT request.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Solutions/jitRequests/{jitRequestName}</description></item><item><term>Operation Id</term><description>JitRequests_Get</description></item><item><term>Default Api Version</term><description>2019-07-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.JitRequestResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jitRequestName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="jitRequestName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetJitRequests">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.JitRequestCollection GetJitRequests ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.JitRequestCollection GetJitRequests() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesResourceGroupResource.GetJitRequests" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJitRequests () As JitRequestCollection" />
      <MemberSignature Language="F#" Value="abstract member GetJitRequests : unit -&gt; Azure.ResourceManager.Resources.JitRequestCollection&#xA;override this.GetJitRequests : unit -&gt; Azure.ResourceManager.Resources.JitRequestCollection" Usage="mockableResourcesResourceGroupResource.GetJitRequests " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.JitRequestCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of JitRequestResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of JitRequestResources and their operations over a JitRequestResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemplateSpec">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.TemplateSpecResource&gt; GetTemplateSpec (string templateSpecName, Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind? expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.TemplateSpecResource&gt; GetTemplateSpec(string templateSpecName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind&gt; expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesResourceGroupResource.GetTemplateSpec(System.String,System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTemplateSpec (templateSpecName As String, Optional expand As Nullable(Of TemplateSpecExpandKind) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TemplateSpecResource)" />
      <MemberSignature Language="F#" Value="abstract member GetTemplateSpec : string * Nullable&lt;Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.TemplateSpecResource&gt;&#xA;override this.GetTemplateSpec : string * Nullable&lt;Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.TemplateSpecResource&gt;" Usage="mockableResourcesResourceGroupResource.GetTemplateSpec (templateSpecName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.TemplateSpecResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateSpecName" Type="System.String" />
        <Parameter Name="expand" Type="System.Nullable&lt;Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="templateSpecName"> Name of the Template Spec. </param>
        <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Template Spec with a given name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}</description></item><item><term>Operation Id</term><description>TemplateSpecs_Get</description></item><item><term>Default Api Version</term><description>2021-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="templateSpecName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="templateSpecName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTemplateSpecAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.TemplateSpecResource&gt;&gt; GetTemplateSpecAsync (string templateSpecName, Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind? expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.TemplateSpecResource&gt;&gt; GetTemplateSpecAsync(string templateSpecName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind&gt; expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesResourceGroupResource.GetTemplateSpecAsync(System.String,System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTemplateSpecAsync (templateSpecName As String, Optional expand As Nullable(Of TemplateSpecExpandKind) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TemplateSpecResource))" />
      <MemberSignature Language="F#" Value="abstract member GetTemplateSpecAsync : string * Nullable&lt;Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.TemplateSpecResource&gt;&gt;&#xA;override this.GetTemplateSpecAsync : string * Nullable&lt;Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.TemplateSpecResource&gt;&gt;" Usage="mockableResourcesResourceGroupResource.GetTemplateSpecAsync (templateSpecName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.TemplateSpecResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateSpecName" Type="System.String" />
        <Parameter Name="expand" Type="System.Nullable&lt;Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="templateSpecName"> Name of the Template Spec. </param>
        <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Template Spec with a given name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}</description></item><item><term>Operation Id</term><description>TemplateSpecs_Get</description></item><item><term>Default Api Version</term><description>2021-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="templateSpecName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="templateSpecName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTemplateSpecs">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.TemplateSpecCollection GetTemplateSpecs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.TemplateSpecCollection GetTemplateSpecs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesResourceGroupResource.GetTemplateSpecs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTemplateSpecs () As TemplateSpecCollection" />
      <MemberSignature Language="F#" Value="abstract member GetTemplateSpecs : unit -&gt; Azure.ResourceManager.Resources.TemplateSpecCollection&#xA;override this.GetTemplateSpecs : unit -&gt; Azure.ResourceManager.Resources.TemplateSpecCollection" Usage="mockableResourcesResourceGroupResource.GetTemplateSpecs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.TemplateSpecCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of TemplateSpecResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of TemplateSpecResources and their operations over a TemplateSpecResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
