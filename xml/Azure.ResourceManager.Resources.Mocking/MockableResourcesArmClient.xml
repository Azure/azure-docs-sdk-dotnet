<Type Name="MockableResourcesArmClient" FullName="Azure.ResourceManager.Resources.Mocking.MockableResourcesArmClient">
  <TypeSignature Language="C#" Value="public class MockableResourcesArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableResourcesArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Resources.Mocking.MockableResourcesArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableResourcesArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableResourcesArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
    <AssemblyVersion>1.7.0.0</AssemblyVersion>
    <AssemblyVersion>1.7.1.0</AssemblyVersion>
    <AssemblyVersion>1.7.2.0</AssemblyVersion>
    <AssemblyVersion>1.7.3.0</AssemblyVersion>
    <AssemblyVersion>1.8.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableResourcesArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.Mocking.MockableResourcesArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArmApplicationDefinitionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.ArmApplicationDefinitionResource GetArmApplicationDefinitionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.ArmApplicationDefinitionResource GetArmApplicationDefinitionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesArmClient.GetArmApplicationDefinitionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArmApplicationDefinitionResource (id As ResourceIdentifier) As ArmApplicationDefinitionResource" />
      <MemberSignature Language="F#" Value="abstract member GetArmApplicationDefinitionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Resources.ArmApplicationDefinitionResource&#xA;override this.GetArmApplicationDefinitionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Resources.ArmApplicationDefinitionResource" Usage="mockableResourcesArmClient.GetArmApplicationDefinitionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.ArmApplicationDefinitionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Resources.ArmApplicationDefinitionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArmApplicationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.ArmApplicationResource GetArmApplicationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.ArmApplicationResource GetArmApplicationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesArmClient.GetArmApplicationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArmApplicationResource (id As ResourceIdentifier) As ArmApplicationResource" />
      <MemberSignature Language="F#" Value="abstract member GetArmApplicationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Resources.ArmApplicationResource&#xA;override this.GetArmApplicationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Resources.ArmApplicationResource" Usage="mockableResourcesArmClient.GetArmApplicationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.ArmApplicationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Resources.ArmApplicationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Resources.ArmApplicationResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Resources.ArmApplicationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Resources.ArmApplicationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArmDeploymentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.ArmDeploymentResource GetArmDeploymentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.ArmDeploymentResource GetArmDeploymentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesArmClient.GetArmDeploymentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArmDeploymentResource (id As ResourceIdentifier) As ArmDeploymentResource" />
      <MemberSignature Language="F#" Value="abstract member GetArmDeploymentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Resources.ArmDeploymentResource&#xA;override this.GetArmDeploymentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Resources.ArmDeploymentResource" Usage="mockableResourcesArmClient.GetArmDeploymentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.ArmDeploymentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Resources.ArmDeploymentResource.CreateResourceIdentifier(System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArmDeploymentScriptResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.ArmDeploymentScriptResource GetArmDeploymentScriptResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.ArmDeploymentScriptResource GetArmDeploymentScriptResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesArmClient.GetArmDeploymentScriptResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArmDeploymentScriptResource (id As ResourceIdentifier) As ArmDeploymentScriptResource" />
      <MemberSignature Language="F#" Value="abstract member GetArmDeploymentScriptResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Resources.ArmDeploymentScriptResource&#xA;override this.GetArmDeploymentScriptResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Resources.ArmDeploymentScriptResource" Usage="mockableResourcesArmClient.GetArmDeploymentScriptResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.ArmDeploymentScriptResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Resources.ArmDeploymentScriptResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentStackResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.DeploymentStackResource GetDeploymentStackResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.DeploymentStackResource GetDeploymentStackResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesArmClient.GetDeploymentStackResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeploymentStackResource (id As ResourceIdentifier) As DeploymentStackResource" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentStackResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Resources.DeploymentStackResource&#xA;override this.GetDeploymentStackResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Resources.DeploymentStackResource" Usage="mockableResourcesArmClient.GetDeploymentStackResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.DeploymentStackResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Resources.DeploymentStackResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Resources.DeploymentStackResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Resources.DeploymentStackResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Resources.DeploymentStackResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJitRequestResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.JitRequestResource GetJitRequestResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.JitRequestResource GetJitRequestResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesArmClient.GetJitRequestResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJitRequestResource (id As ResourceIdentifier) As JitRequestResource" />
      <MemberSignature Language="F#" Value="abstract member GetJitRequestResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Resources.JitRequestResource&#xA;override this.GetJitRequestResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Resources.JitRequestResource" Usage="mockableResourcesArmClient.GetJitRequestResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.JitRequestResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Resources.JitRequestResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Resources.JitRequestResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Resources.JitRequestResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Resources.JitRequestResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScriptLogResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.ScriptLogResource GetScriptLogResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.ScriptLogResource GetScriptLogResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesArmClient.GetScriptLogResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScriptLogResource (id As ResourceIdentifier) As ScriptLogResource" />
      <MemberSignature Language="F#" Value="abstract member GetScriptLogResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Resources.ScriptLogResource&#xA;override this.GetScriptLogResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Resources.ScriptLogResource" Usage="mockableResourcesArmClient.GetScriptLogResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.ScriptLogResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Resources.ScriptLogResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Resources.ScriptLogResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Resources.ScriptLogResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Resources.ScriptLogResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemplateSpecResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.TemplateSpecResource GetTemplateSpecResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.TemplateSpecResource GetTemplateSpecResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesArmClient.GetTemplateSpecResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTemplateSpecResource (id As ResourceIdentifier) As TemplateSpecResource" />
      <MemberSignature Language="F#" Value="abstract member GetTemplateSpecResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Resources.TemplateSpecResource&#xA;override this.GetTemplateSpecResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Resources.TemplateSpecResource" Usage="mockableResourcesArmClient.GetTemplateSpecResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.TemplateSpecResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Resources.TemplateSpecResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemplateSpecVersionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.TemplateSpecVersionResource GetTemplateSpecVersionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.TemplateSpecVersionResource GetTemplateSpecVersionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesArmClient.GetTemplateSpecVersionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTemplateSpecVersionResource (id As ResourceIdentifier) As TemplateSpecVersionResource" />
      <MemberSignature Language="F#" Value="abstract member GetTemplateSpecVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Resources.TemplateSpecVersionResource&#xA;override this.GetTemplateSpecVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Resources.TemplateSpecVersionResource" Usage="mockableResourcesArmClient.GetTemplateSpecVersionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.TemplateSpecVersionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Resources.TemplateSpecVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Resources.TemplateSpecVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Resources.TemplateSpecVersionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Resources.TemplateSpecVersionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
