<Type Name="MockableResourcesSubscriptionResource" FullName="Azure.ResourceManager.Resources.Mocking.MockableResourcesSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableResourcesSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableResourcesSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Resources.Mocking.MockableResourcesSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableResourcesSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableResourcesSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
    <AssemblyVersion>1.7.0.0</AssemblyVersion>
    <AssemblyVersion>1.7.1.0</AssemblyVersion>
    <AssemblyVersion>1.7.2.0</AssemblyVersion>
    <AssemblyVersion>1.7.3.0</AssemblyVersion>
    <AssemblyVersion>1.8.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableResourcesSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.Mocking.MockableResourcesSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BicepDecompile">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.Models.DecompileOperationSuccessResult&gt; BicepDecompile (Azure.ResourceManager.Resources.Models.DecompileOperationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.DecompileOperationSuccessResult&gt; BicepDecompile(class Azure.ResourceManager.Resources.Models.DecompileOperationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesSubscriptionResource.BicepDecompile(Azure.ResourceManager.Resources.Models.DecompileOperationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BicepDecompile (content As DecompileOperationContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DecompileOperationSuccessResult)" />
      <MemberSignature Language="F#" Value="abstract member BicepDecompile : Azure.ResourceManager.Resources.Models.DecompileOperationContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.DecompileOperationSuccessResult&gt;&#xA;override this.BicepDecompile : Azure.ResourceManager.Resources.Models.DecompileOperationContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.DecompileOperationSuccessResult&gt;" Usage="mockableResourcesSubscriptionResource.BicepDecompile (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.Models.DecompileOperationSuccessResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Resources.Models.DecompileOperationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Decompile operation request supplied to the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Decompiles an ARM json template into a Bicep template
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Resources/decompileBicep</description></item><item><term>Operation Id</term><description>Decompile_Bicep</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="BicepDecompileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DecompileOperationSuccessResult&gt;&gt; BicepDecompileAsync (Azure.ResourceManager.Resources.Models.DecompileOperationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.DecompileOperationSuccessResult&gt;&gt; BicepDecompileAsync(class Azure.ResourceManager.Resources.Models.DecompileOperationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesSubscriptionResource.BicepDecompileAsync(Azure.ResourceManager.Resources.Models.DecompileOperationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BicepDecompileAsync (content As DecompileOperationContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DecompileOperationSuccessResult))" />
      <MemberSignature Language="F#" Value="abstract member BicepDecompileAsync : Azure.ResourceManager.Resources.Models.DecompileOperationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DecompileOperationSuccessResult&gt;&gt;&#xA;override this.BicepDecompileAsync : Azure.ResourceManager.Resources.Models.DecompileOperationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DecompileOperationSuccessResult&gt;&gt;" Usage="mockableResourcesSubscriptionResource.BicepDecompileAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DecompileOperationSuccessResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Resources.Models.DecompileOperationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Decompile operation request supplied to the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Decompiles an ARM json template into a Bicep template
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Resources/decompileBicep</description></item><item><term>Operation Id</term><description>Decompile_Bicep</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetArmApplications">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Resources.ArmApplicationResource&gt; GetArmApplications (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Resources.ArmApplicationResource&gt; GetArmApplications(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesSubscriptionResource.GetArmApplications(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArmApplications (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ArmApplicationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetArmApplications : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.ArmApplicationResource&gt;&#xA;override this.GetArmApplications : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.ArmApplicationResource&gt;" Usage="mockableResourcesSubscriptionResource.GetArmApplications cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Resources.ArmApplicationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the applications within a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Solutions/applications</description></item><item><term>Operation Id</term><description>Applications_ListBySubscription</description></item><item><term>Default Api Version</term><description>2019-07-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.ArmApplicationResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.ArmApplicationResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArmApplicationsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.ArmApplicationResource&gt; GetArmApplicationsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Resources.ArmApplicationResource&gt; GetArmApplicationsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesSubscriptionResource.GetArmApplicationsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArmApplicationsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ArmApplicationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetArmApplicationsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.ArmApplicationResource&gt;&#xA;override this.GetArmApplicationsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.ArmApplicationResource&gt;" Usage="mockableResourcesSubscriptionResource.GetArmApplicationsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.ArmApplicationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the applications within a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Solutions/applications</description></item><item><term>Operation Id</term><description>Applications_ListBySubscription</description></item><item><term>Default Api Version</term><description>2019-07-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.ArmApplicationResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.ArmApplicationResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArmDeployment">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.ArmDeploymentResource&gt; GetArmDeployment (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ArmDeploymentResource&gt; GetArmDeployment(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesSubscriptionResource.GetArmDeployment(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArmDeployment (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ArmDeploymentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetArmDeployment : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.ArmDeploymentResource&gt;&#xA;override this.GetArmDeployment : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.ArmDeploymentResource&gt;" Usage="mockableResourcesSubscriptionResource.GetArmDeployment (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.ArmDeploymentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a deployment.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}</description></item><item><term>Operation Id</term><description>Deployments_GetAtScope</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.ArmDeploymentResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="deploymentName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetArmDeploymentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ArmDeploymentResource&gt;&gt; GetArmDeploymentAsync (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ArmDeploymentResource&gt;&gt; GetArmDeploymentAsync(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesSubscriptionResource.GetArmDeploymentAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArmDeploymentAsync (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ArmDeploymentResource))" />
      <MemberSignature Language="F#" Value="abstract member GetArmDeploymentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ArmDeploymentResource&gt;&gt;&#xA;override this.GetArmDeploymentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ArmDeploymentResource&gt;&gt;" Usage="mockableResourcesSubscriptionResource.GetArmDeploymentAsync (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ArmDeploymentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a deployment.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}</description></item><item><term>Operation Id</term><description>Deployments_GetAtScope</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.ArmDeploymentResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="deploymentName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetArmDeployments">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.ArmDeploymentCollection GetArmDeployments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.ArmDeploymentCollection GetArmDeployments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesSubscriptionResource.GetArmDeployments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArmDeployments () As ArmDeploymentCollection" />
      <MemberSignature Language="F#" Value="abstract member GetArmDeployments : unit -&gt; Azure.ResourceManager.Resources.ArmDeploymentCollection&#xA;override this.GetArmDeployments : unit -&gt; Azure.ResourceManager.Resources.ArmDeploymentCollection" Usage="mockableResourcesSubscriptionResource.GetArmDeployments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.ArmDeploymentCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ArmDeploymentResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of ArmDeploymentResources and their operations over a ArmDeploymentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArmDeploymentScripts">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Resources.ArmDeploymentScriptResource&gt; GetArmDeploymentScripts (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Resources.ArmDeploymentScriptResource&gt; GetArmDeploymentScripts(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesSubscriptionResource.GetArmDeploymentScripts(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArmDeploymentScripts (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ArmDeploymentScriptResource)" />
      <MemberSignature Language="F#" Value="abstract member GetArmDeploymentScripts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.ArmDeploymentScriptResource&gt;&#xA;override this.GetArmDeploymentScripts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.ArmDeploymentScriptResource&gt;" Usage="mockableResourcesSubscriptionResource.GetArmDeploymentScripts cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Resources.ArmDeploymentScriptResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all deployment scripts for a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deploymentScripts</description></item><item><term>Operation Id</term><description>DeploymentScripts_ListBySubscription</description></item><item><term>Default Api Version</term><description>2020-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArmDeploymentScriptsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.ArmDeploymentScriptResource&gt; GetArmDeploymentScriptsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Resources.ArmDeploymentScriptResource&gt; GetArmDeploymentScriptsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesSubscriptionResource.GetArmDeploymentScriptsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArmDeploymentScriptsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ArmDeploymentScriptResource)" />
      <MemberSignature Language="F#" Value="abstract member GetArmDeploymentScriptsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.ArmDeploymentScriptResource&gt;&#xA;override this.GetArmDeploymentScriptsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.ArmDeploymentScriptResource&gt;" Usage="mockableResourcesSubscriptionResource.GetArmDeploymentScriptsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.ArmDeploymentScriptResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all deployment scripts for a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deploymentScripts</description></item><item><term>Operation Id</term><description>DeploymentScripts_ListBySubscription</description></item><item><term>Default Api Version</term><description>2020-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.ArmDeploymentScriptResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentStack">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.DeploymentStackResource&gt; GetDeploymentStack (string deploymentStackName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.DeploymentStackResource&gt; GetDeploymentStack(string deploymentStackName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesSubscriptionResource.GetDeploymentStack(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeploymentStack (deploymentStackName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeploymentStackResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentStack : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.DeploymentStackResource&gt;&#xA;override this.GetDeploymentStack : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.DeploymentStackResource&gt;" Usage="mockableResourcesSubscriptionResource.GetDeploymentStack (deploymentStackName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.DeploymentStackResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentStackName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentStackName"> Name of the deployment stack. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Deployment stack with a given name at specific scope.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Resources/deploymentStacks/{deploymentStackName}</description></item><item><term>Operation Id</term><description>DeploymentStacks_GetAtScope</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.DeploymentStackResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="deploymentStackName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="deploymentStackName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentStackAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.DeploymentStackResource&gt;&gt; GetDeploymentStackAsync (string deploymentStackName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.DeploymentStackResource&gt;&gt; GetDeploymentStackAsync(string deploymentStackName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesSubscriptionResource.GetDeploymentStackAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeploymentStackAsync (deploymentStackName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeploymentStackResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentStackAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.DeploymentStackResource&gt;&gt;&#xA;override this.GetDeploymentStackAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.DeploymentStackResource&gt;&gt;" Usage="mockableResourcesSubscriptionResource.GetDeploymentStackAsync (deploymentStackName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.DeploymentStackResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentStackName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentStackName"> Name of the deployment stack. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Deployment stack with a given name at specific scope.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Resources/deploymentStacks/{deploymentStackName}</description></item><item><term>Operation Id</term><description>DeploymentStacks_GetAtScope</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.DeploymentStackResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="deploymentStackName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="deploymentStackName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentStacks">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.DeploymentStackCollection GetDeploymentStacks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.DeploymentStackCollection GetDeploymentStacks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesSubscriptionResource.GetDeploymentStacks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeploymentStacks () As DeploymentStackCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentStacks : unit -&gt; Azure.ResourceManager.Resources.DeploymentStackCollection&#xA;override this.GetDeploymentStacks : unit -&gt; Azure.ResourceManager.Resources.DeploymentStackCollection" Usage="mockableResourcesSubscriptionResource.GetDeploymentStacks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.DeploymentStackCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DeploymentStackResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of DeploymentStackResources and their operations over a DeploymentStackResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJitRequestDefinitions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Resources.JitRequestResource&gt; GetJitRequestDefinitions (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Resources.JitRequestResource&gt; GetJitRequestDefinitions(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesSubscriptionResource.GetJitRequestDefinitions(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJitRequestDefinitions (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of JitRequestResource)" />
      <MemberSignature Language="F#" Value="abstract member GetJitRequestDefinitions : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.JitRequestResource&gt;&#xA;override this.GetJitRequestDefinitions : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.JitRequestResource&gt;" Usage="mockableResourcesSubscriptionResource.GetJitRequestDefinitions cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Resources.JitRequestResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves all JIT requests within the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Solutions/jitRequests</description></item><item><term>Operation Id</term><description>jitRequests_ListBySubscription</description></item><item><term>Default Api Version</term><description>2019-07-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.JitRequestResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.JitRequestResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJitRequestDefinitionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.JitRequestResource&gt; GetJitRequestDefinitionsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Resources.JitRequestResource&gt; GetJitRequestDefinitionsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesSubscriptionResource.GetJitRequestDefinitionsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJitRequestDefinitionsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of JitRequestResource)" />
      <MemberSignature Language="F#" Value="abstract member GetJitRequestDefinitionsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.JitRequestResource&gt;&#xA;override this.GetJitRequestDefinitionsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.JitRequestResource&gt;" Usage="mockableResourcesSubscriptionResource.GetJitRequestDefinitionsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.JitRequestResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves all JIT requests within the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Solutions/jitRequests</description></item><item><term>Operation Id</term><description>jitRequests_ListBySubscription</description></item><item><term>Default Api Version</term><description>2019-07-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.JitRequestResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.JitRequestResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemplateSpecs">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Resources.TemplateSpecResource&gt; GetTemplateSpecs (Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind? expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Resources.TemplateSpecResource&gt; GetTemplateSpecs(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind&gt; expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesSubscriptionResource.GetTemplateSpecs(System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTemplateSpecs (Optional expand As Nullable(Of TemplateSpecExpandKind) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of TemplateSpecResource)" />
      <MemberSignature Language="F#" Value="abstract member GetTemplateSpecs : Nullable&lt;Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.TemplateSpecResource&gt;&#xA;override this.GetTemplateSpecs : Nullable&lt;Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.TemplateSpecResource&gt;" Usage="mockableResourcesSubscriptionResource.GetTemplateSpecs (expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Resources.TemplateSpecResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expand" Type="System.Nullable&lt;Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the Template Specs within the specified subscriptions.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Resources/templateSpecs</description></item><item><term>Operation Id</term><description>TemplateSpecs_ListBySubscription</description></item><item><term>Default Api Version</term><description>2021-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemplateSpecsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.TemplateSpecResource&gt; GetTemplateSpecsAsync (Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind? expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Resources.TemplateSpecResource&gt; GetTemplateSpecsAsync(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind&gt; expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Mocking.MockableResourcesSubscriptionResource.GetTemplateSpecsAsync(System.Nullable{Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTemplateSpecsAsync (Optional expand As Nullable(Of TemplateSpecExpandKind) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of TemplateSpecResource)" />
      <MemberSignature Language="F#" Value="abstract member GetTemplateSpecsAsync : Nullable&lt;Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.TemplateSpecResource&gt;&#xA;override this.GetTemplateSpecsAsync : Nullable&lt;Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.TemplateSpecResource&gt;" Usage="mockableResourcesSubscriptionResource.GetTemplateSpecsAsync (expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.TemplateSpecResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expand" Type="System.Nullable&lt;Azure.ResourceManager.Resources.Models.TemplateSpecExpandKind&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expand"> Allows for expansion of additional Template Spec details in the response. Optional. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the Template Specs within the specified subscriptions.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Resources/templateSpecs</description></item><item><term>Operation Id</term><description>TemplateSpecs_ListBySubscription</description></item><item><term>Default Api Version</term><description>2021-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.TemplateSpecResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
