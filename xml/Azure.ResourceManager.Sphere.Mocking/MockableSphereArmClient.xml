<Type Name="MockableSphereArmClient" FullName="Azure.ResourceManager.Sphere.Mocking.MockableSphereArmClient">
  <TypeSignature Language="C#" Value="public class MockableSphereArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableSphereArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Sphere.Mocking.MockableSphereArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableSphereArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableSphereArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Sphere</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableSphereArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sphere.Mocking.MockableSphereArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Sphere.Mocking.MockableSphereArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSphereCatalogResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sphere.SphereCatalogResource GetSphereCatalogResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sphere.SphereCatalogResource GetSphereCatalogResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sphere.Mocking.MockableSphereArmClient.GetSphereCatalogResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSphereCatalogResource (id As ResourceIdentifier) As SphereCatalogResource" />
      <MemberSignature Language="F#" Value="abstract member GetSphereCatalogResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sphere.SphereCatalogResource&#xA;override this.GetSphereCatalogResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sphere.SphereCatalogResource" Usage="mockableSphereArmClient.GetSphereCatalogResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sphere.SphereCatalogResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sphere.SphereCatalogResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sphere.SphereCatalogResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sphere.SphereCatalogResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sphere.SphereCatalogResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSphereCertificateResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sphere.SphereCertificateResource GetSphereCertificateResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sphere.SphereCertificateResource GetSphereCertificateResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sphere.Mocking.MockableSphereArmClient.GetSphereCertificateResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSphereCertificateResource (id As ResourceIdentifier) As SphereCertificateResource" />
      <MemberSignature Language="F#" Value="abstract member GetSphereCertificateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sphere.SphereCertificateResource&#xA;override this.GetSphereCertificateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sphere.SphereCertificateResource" Usage="mockableSphereArmClient.GetSphereCertificateResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sphere.SphereCertificateResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sphere.SphereCertificateResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sphere.SphereCertificateResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sphere.SphereCertificateResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sphere.SphereCertificateResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSphereDeploymentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sphere.SphereDeploymentResource GetSphereDeploymentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sphere.SphereDeploymentResource GetSphereDeploymentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sphere.Mocking.MockableSphereArmClient.GetSphereDeploymentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSphereDeploymentResource (id As ResourceIdentifier) As SphereDeploymentResource" />
      <MemberSignature Language="F#" Value="abstract member GetSphereDeploymentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sphere.SphereDeploymentResource&#xA;override this.GetSphereDeploymentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sphere.SphereDeploymentResource" Usage="mockableSphereArmClient.GetSphereDeploymentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sphere.SphereDeploymentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sphere.SphereDeploymentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sphere.SphereDeploymentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sphere.SphereDeploymentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sphere.SphereDeploymentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSphereDeviceGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sphere.SphereDeviceGroupResource GetSphereDeviceGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sphere.SphereDeviceGroupResource GetSphereDeviceGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sphere.Mocking.MockableSphereArmClient.GetSphereDeviceGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSphereDeviceGroupResource (id As ResourceIdentifier) As SphereDeviceGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetSphereDeviceGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sphere.SphereDeviceGroupResource&#xA;override this.GetSphereDeviceGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sphere.SphereDeviceGroupResource" Usage="mockableSphereArmClient.GetSphereDeviceGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sphere.SphereDeviceGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sphere.SphereDeviceGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sphere.SphereDeviceGroupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sphere.SphereDeviceGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sphere.SphereDeviceGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSphereDeviceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sphere.SphereDeviceResource GetSphereDeviceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sphere.SphereDeviceResource GetSphereDeviceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sphere.Mocking.MockableSphereArmClient.GetSphereDeviceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSphereDeviceResource (id As ResourceIdentifier) As SphereDeviceResource" />
      <MemberSignature Language="F#" Value="abstract member GetSphereDeviceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sphere.SphereDeviceResource&#xA;override this.GetSphereDeviceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sphere.SphereDeviceResource" Usage="mockableSphereArmClient.GetSphereDeviceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sphere.SphereDeviceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sphere.SphereDeviceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sphere.SphereDeviceResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sphere.SphereDeviceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sphere.SphereDeviceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSphereImageResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sphere.SphereImageResource GetSphereImageResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sphere.SphereImageResource GetSphereImageResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sphere.Mocking.MockableSphereArmClient.GetSphereImageResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSphereImageResource (id As ResourceIdentifier) As SphereImageResource" />
      <MemberSignature Language="F#" Value="abstract member GetSphereImageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sphere.SphereImageResource&#xA;override this.GetSphereImageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sphere.SphereImageResource" Usage="mockableSphereArmClient.GetSphereImageResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sphere.SphereImageResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sphere.SphereImageResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sphere.SphereImageResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sphere.SphereImageResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sphere.SphereImageResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSphereProductResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sphere.SphereProductResource GetSphereProductResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sphere.SphereProductResource GetSphereProductResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sphere.Mocking.MockableSphereArmClient.GetSphereProductResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSphereProductResource (id As ResourceIdentifier) As SphereProductResource" />
      <MemberSignature Language="F#" Value="abstract member GetSphereProductResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sphere.SphereProductResource&#xA;override this.GetSphereProductResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sphere.SphereProductResource" Usage="mockableSphereArmClient.GetSphereProductResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sphere.SphereProductResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sphere.SphereProductResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sphere.SphereProductResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sphere.SphereProductResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sphere.SphereProductResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
