<Type Name="RemoteAddressMatchConditionParameters" FullName="Microsoft.Azure.Management.Cdn.Models.RemoteAddressMatchConditionParameters">
  <TypeSignature Language="C#" Value="public class RemoteAddressMatchConditionParameters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi RemoteAddressMatchConditionParameters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Cdn.Models.RemoteAddressMatchConditionParameters" />
  <TypeSignature Language="VB.NET" Value="Public Class RemoteAddressMatchConditionParameters" />
  <TypeSignature Language="F#" Value="type RemoteAddressMatchConditionParameters = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Cdn</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Defines the parameters for RemoteAddress match conditions
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteAddressMatchConditionParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Cdn.Models.RemoteAddressMatchConditionParameters.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Cdn</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the
            RemoteAddressMatchConditionParameters class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteAddressMatchConditionParameters (string operatorProperty, bool? negateCondition = default, System.Collections.Generic.IList&lt;string&gt; matchValues = default, System.Collections.Generic.IList&lt;string&gt; transforms = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string operatorProperty, valuetype System.Nullable`1&lt;bool&gt; negateCondition, class System.Collections.Generic.IList`1&lt;string&gt; matchValues, class System.Collections.Generic.IList`1&lt;string&gt; transforms) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Cdn.Models.RemoteAddressMatchConditionParameters.#ctor(System.String,System.Nullable{System.Boolean},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (operatorProperty As String, Optional negateCondition As Nullable(Of Boolean) = Nothing, Optional matchValues As IList(Of String) = Nothing, Optional transforms As IList(Of String) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.Cdn.Models.RemoteAddressMatchConditionParameters : string * Nullable&lt;bool&gt; * System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.IList&lt;string&gt; -&gt; Microsoft.Azure.Management.Cdn.Models.RemoteAddressMatchConditionParameters" Usage="new Microsoft.Azure.Management.Cdn.Models.RemoteAddressMatchConditionParameters (operatorProperty, negateCondition, matchValues, transforms)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Cdn</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="operatorProperty" Type="System.String" />
        <Parameter Name="negateCondition" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="matchValues" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="transforms" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="operatorProperty">Describes operator to be matched.
            Possible values include: 'Any', 'IPMatch', 'GeoMatch'</param>
        <param name="negateCondition">Describes if this is negate condition
            or not</param>
        <param name="matchValues">Match values to match against. The
            operator will apply to each value in here with OR semantics. If any
            of them match the variable with the given operator this match
            condition is considered a match.</param>
        <param name="transforms">List of transforms</param>
        <summary>
            Initializes a new instance of the
            RemoteAddressMatchConditionParameters class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; MatchValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; MatchValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Cdn.Models.RemoteAddressMatchConditionParameters.MatchValues" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchValues As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.MatchValues : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Microsoft.Azure.Management.Cdn.Models.RemoteAddressMatchConditionParameters.MatchValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Cdn</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="matchValues")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="matchValues")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets match values to match against. The operator will apply
            to each value in here with OR semantics. If any of them match the
            variable with the given operator this match condition is considered
            a match.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NegateCondition">
      <MemberSignature Language="C#" Value="public bool? NegateCondition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; NegateCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Cdn.Models.RemoteAddressMatchConditionParameters.NegateCondition" />
      <MemberSignature Language="VB.NET" Value="Public Property NegateCondition As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.NegateCondition : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.Cdn.Models.RemoteAddressMatchConditionParameters.NegateCondition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Cdn</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="negateCondition")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="negateCondition")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets describes if this is negate condition or not
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Odatatype">
      <MemberSignature Language="C#" Value="public static string Odatatype { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string Odatatype" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Cdn.Models.RemoteAddressMatchConditionParameters.Odatatype" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Odatatype As String" />
      <MemberSignature Language="F#" Value="static member Odatatype : string" Usage="Microsoft.Azure.Management.Cdn.Models.RemoteAddressMatchConditionParameters.Odatatype" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Cdn</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="@odata.type")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="@odata.type")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary />
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperatorProperty">
      <MemberSignature Language="C#" Value="public string OperatorProperty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OperatorProperty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Cdn.Models.RemoteAddressMatchConditionParameters.OperatorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Property OperatorProperty As String" />
      <MemberSignature Language="F#" Value="member this.OperatorProperty : string with get, set" Usage="Microsoft.Azure.Management.Cdn.Models.RemoteAddressMatchConditionParameters.OperatorProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Cdn</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="operator")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="operator")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets describes operator to be matched. Possible values
            include: 'Any', 'IPMatch', 'GeoMatch'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transforms">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; Transforms { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; Transforms" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Cdn.Models.RemoteAddressMatchConditionParameters.Transforms" />
      <MemberSignature Language="VB.NET" Value="Public Property Transforms As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.Transforms : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Microsoft.Azure.Management.Cdn.Models.RemoteAddressMatchConditionParameters.Transforms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Cdn</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="transforms")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="transforms")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets list of transforms
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Cdn.Models.RemoteAddressMatchConditionParameters.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="remoteAddressMatchConditionParameters.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Cdn</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
