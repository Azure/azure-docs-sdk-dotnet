<Type Name="AzureMonitorLogExporter" FullName="Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorLogExporter">
  <TypeSignature Language="C#" Value="public sealed class AzureMonitorLogExporter : OpenTelemetry.BaseExporter&lt;OpenTelemetry.Logs.LogRecord&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AzureMonitorLogExporter extends OpenTelemetry.BaseExporter`1&lt;class OpenTelemetry.Logs.LogRecord&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorLogExporter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AzureMonitorLogExporter&#xA;Inherits BaseExporter(Of LogRecord)" />
  <TypeSignature Language="F#" Value="type AzureMonitorLogExporter = class&#xA;    inherit BaseExporter&lt;LogRecord&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.Monitor.OpenTelemetry.Exporter</AssemblyName>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>OpenTelemetry.BaseExporter&lt;OpenTelemetry.Logs.LogRecord&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">OpenTelemetry.Logs.LogRecord</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Azure Monitor Log Exporter.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AzureMonitorLogExporter (Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorLogExporter.#ctor(Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As AzureMonitorExporterOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorLogExporter : Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterOptions -&gt; Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorLogExporter" Usage="new Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorLogExporter options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Monitor.OpenTelemetry.Exporter</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterOptions" />
      </Parameters>
      <Docs>
        <param name="options">Configuration options for the exporter.</param>
        <summary>
            Initializes a new instance of Azure Monitor Log Exporter.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorLogExporter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="azureMonitorLogExporter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Monitor.OpenTelemetry.Exporter</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> to release both managed and unmanaged resources;
            <see langword="false" /> to release only unmanaged resources.
            </param>
        <summary>
            Releases the unmanaged resources used by this class and optionally
            releases the managed resources.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public override OpenTelemetry.ExportResult Export (in OpenTelemetry.Batch&lt;OpenTelemetry.Logs.LogRecord&gt; batch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype OpenTelemetry.ExportResult Export([in]valuetype OpenTelemetry.Batch`1&lt;class OpenTelemetry.Logs.LogRecord&gt; batch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorLogExporter.Export(OpenTelemetry.Batch{OpenTelemetry.Logs.LogRecord}@|System.Runtime.InteropServices.InAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Export (batch As Batch(Of LogRecord)) As ExportResult" />
      <MemberSignature Language="F#" Value="override this.Export : Batch -&gt; OpenTelemetry.ExportResult" Usage="azureMonitorLogExporter.Export batch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Monitor.OpenTelemetry.Exporter</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTelemetry.ExportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="batch" Type="OpenTelemetry.Batch&lt;OpenTelemetry.Logs.LogRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="batch">Batch of telemetry objects to export.</param>
        <summary>
            Exports a batch of telemetry objects.
            </summary>
        <returns>Result of the export operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
