<Type Name="AzureMonitorExporterLoggingExtensions" FullName="Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterLoggingExtensions">
  <TypeSignature Language="C#" Value="public static class AzureMonitorExporterLoggingExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AzureMonitorExporterLoggingExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterLoggingExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module AzureMonitorExporterLoggingExtensions" />
  <TypeSignature Language="F#" Value="type AzureMonitorExporterLoggingExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Monitor.OpenTelemetry.Exporter</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods to simplify registering of Azure Monitor Log Exporter.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddAzureMonitorLogExporter">
      <MemberSignature Language="C#" Value="public static OpenTelemetry.Logs.OpenTelemetryLoggerOptions AddAzureMonitorLogExporter (this OpenTelemetry.Logs.OpenTelemetryLoggerOptions loggerOptions, Action&lt;Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterOptions&gt; configure = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class OpenTelemetry.Logs.OpenTelemetryLoggerOptions AddAzureMonitorLogExporter(class OpenTelemetry.Logs.OpenTelemetryLoggerOptions loggerOptions, class System.Action`1&lt;class Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterOptions&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterLoggingExtensions.AddAzureMonitorLogExporter(OpenTelemetry.Logs.OpenTelemetryLoggerOptions,System.Action{Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterOptions})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddAzureMonitorLogExporter (loggerOptions As OpenTelemetryLoggerOptions, Optional configure As Action(Of AzureMonitorExporterOptions) = Nothing) As OpenTelemetryLoggerOptions" />
      <MemberSignature Language="F#" Value="static member AddAzureMonitorLogExporter : OpenTelemetry.Logs.OpenTelemetryLoggerOptions * Action&lt;Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterOptions&gt; -&gt; OpenTelemetry.Logs.OpenTelemetryLoggerOptions" Usage="Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterLoggingExtensions.AddAzureMonitorLogExporter (loggerOptions, configure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Monitor.OpenTelemetry.Exporter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTelemetry.Logs.OpenTelemetryLoggerOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggerOptions" Type="OpenTelemetry.Logs.OpenTelemetryLoggerOptions" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Azure.Monitor.OpenTelemetry.Exporter.AzureMonitorExporterOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="loggerOptions">
          <see cref="T:OpenTelemetry.Logs.OpenTelemetryLoggerOptions" /> options to use.</param>
        <param name="configure">Exporter configuration options.</param>
        <summary>
            Adds Azure Monitor Log Exporter with OpenTelemetryLoggerOptions.
            </summary>
        <returns>The instance of <see cref="T:OpenTelemetry.Logs.OpenTelemetryLoggerOptions" /> to chain the calls.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
