<Type Name="MockableSqlArmClient" FullName="Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient">
  <TypeSignature Language="C#" Value="public class MockableSqlArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableSqlArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableSqlArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableSqlArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableSqlArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBackupShortTermRetentionPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.BackupShortTermRetentionPolicyResource GetBackupShortTermRetentionPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.BackupShortTermRetentionPolicyResource GetBackupShortTermRetentionPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetBackupShortTermRetentionPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupShortTermRetentionPolicyResource (id As ResourceIdentifier) As BackupShortTermRetentionPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetBackupShortTermRetentionPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.BackupShortTermRetentionPolicyResource&#xA;override this.GetBackupShortTermRetentionPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.BackupShortTermRetentionPolicyResource" Usage="mockableSqlArmClient.GetBackupShortTermRetentionPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.BackupShortTermRetentionPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.BackupShortTermRetentionPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.BackupShortTermRetentionPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.ShortTermRetentionPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.BackupShortTermRetentionPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.BackupShortTermRetentionPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseAdvancedThreatProtectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.DatabaseAdvancedThreatProtectionResource GetDatabaseAdvancedThreatProtectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.DatabaseAdvancedThreatProtectionResource GetDatabaseAdvancedThreatProtectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetDatabaseAdvancedThreatProtectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDatabaseAdvancedThreatProtectionResource (id As ResourceIdentifier) As DatabaseAdvancedThreatProtectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetDatabaseAdvancedThreatProtectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.DatabaseAdvancedThreatProtectionResource&#xA;override this.GetDatabaseAdvancedThreatProtectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.DatabaseAdvancedThreatProtectionResource" Usage="mockableSqlArmClient.GetDatabaseAdvancedThreatProtectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.DatabaseAdvancedThreatProtectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.DatabaseAdvancedThreatProtectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.DatabaseAdvancedThreatProtectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.AdvancedThreatProtectionName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.DatabaseAdvancedThreatProtectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.DatabaseAdvancedThreatProtectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataMaskingPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.DataMaskingPolicyResource GetDataMaskingPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.DataMaskingPolicyResource GetDataMaskingPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetDataMaskingPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataMaskingPolicyResource (id As ResourceIdentifier) As DataMaskingPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataMaskingPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.DataMaskingPolicyResource&#xA;override this.GetDataMaskingPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.DataMaskingPolicyResource" Usage="mockableSqlArmClient.GetDataMaskingPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.DataMaskingPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.DataMaskingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.DataMaskingPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.DataMaskingPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.DataMaskingPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataWarehouseUserActivityResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.DataWarehouseUserActivityResource GetDataWarehouseUserActivityResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.DataWarehouseUserActivityResource GetDataWarehouseUserActivityResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetDataWarehouseUserActivityResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataWarehouseUserActivityResource (id As ResourceIdentifier) As DataWarehouseUserActivityResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataWarehouseUserActivityResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.DataWarehouseUserActivityResource&#xA;override this.GetDataWarehouseUserActivityResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.DataWarehouseUserActivityResource" Usage="mockableSqlArmClient.GetDataWarehouseUserActivityResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.DataWarehouseUserActivityResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.DataWarehouseUserActivityResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.DataWarehouseUserActivityResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.DataWarehouseUserActivityName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.DataWarehouseUserActivityResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.DataWarehouseUserActivityResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedServerResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.DeletedServerResource GetDeletedServerResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.DeletedServerResource GetDeletedServerResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetDeletedServerResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedServerResource (id As ResourceIdentifier) As DeletedServerResource" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedServerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.DeletedServerResource&#xA;override this.GetDeletedServerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.DeletedServerResource" Usage="mockableSqlArmClient.GetDeletedServerResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.DeletedServerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.DeletedServerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.DeletedServerResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.DeletedServerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.DeletedServerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDistributedAvailabilityGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource GetDistributedAvailabilityGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource GetDistributedAvailabilityGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetDistributedAvailabilityGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDistributedAvailabilityGroupResource (id As ResourceIdentifier) As DistributedAvailabilityGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetDistributedAvailabilityGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource&#xA;override this.GetDistributedAvailabilityGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource" Usage="mockableSqlArmClient.GetDistributedAvailabilityGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElasticPoolResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ElasticPoolResource GetElasticPoolResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ElasticPoolResource GetElasticPoolResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetElasticPoolResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElasticPoolResource (id As ResourceIdentifier) As ElasticPoolResource" />
      <MemberSignature Language="F#" Value="abstract member GetElasticPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ElasticPoolResource&#xA;override this.GetElasticPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ElasticPoolResource" Usage="mockableSqlArmClient.GetElasticPoolResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ElasticPoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Sql.ElasticPoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ElasticPoolResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Sql.ElasticPoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ElasticPoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptionProtectorResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.EncryptionProtectorResource GetEncryptionProtectorResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.EncryptionProtectorResource GetEncryptionProtectorResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetEncryptionProtectorResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEncryptionProtectorResource (id As ResourceIdentifier) As EncryptionProtectorResource" />
      <MemberSignature Language="F#" Value="abstract member GetEncryptionProtectorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.EncryptionProtectorResource&#xA;override this.GetEncryptionProtectorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.EncryptionProtectorResource" Usage="mockableSqlArmClient.GetEncryptionProtectorResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.EncryptionProtectorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Sql.EncryptionProtectorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.EncryptionProtectorResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.EncryptionProtectorName)" /> to create an <see cref="T:Azure.ResourceManager.Sql.EncryptionProtectorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.EncryptionProtectorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEndpointCertificateResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.EndpointCertificateResource GetEndpointCertificateResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.EndpointCertificateResource GetEndpointCertificateResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetEndpointCertificateResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEndpointCertificateResource (id As ResourceIdentifier) As EndpointCertificateResource" />
      <MemberSignature Language="F#" Value="abstract member GetEndpointCertificateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.EndpointCertificateResource&#xA;override this.GetEndpointCertificateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.EndpointCertificateResource" Usage="mockableSqlArmClient.GetEndpointCertificateResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.EndpointCertificateResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Sql.EndpointCertificateResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.EndpointCertificateResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Sql.EndpointCertificateResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.EndpointCertificateResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtendedDatabaseBlobAuditingPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ExtendedDatabaseBlobAuditingPolicyResource GetExtendedDatabaseBlobAuditingPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ExtendedDatabaseBlobAuditingPolicyResource GetExtendedDatabaseBlobAuditingPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetExtendedDatabaseBlobAuditingPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExtendedDatabaseBlobAuditingPolicyResource (id As ResourceIdentifier) As ExtendedDatabaseBlobAuditingPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetExtendedDatabaseBlobAuditingPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ExtendedDatabaseBlobAuditingPolicyResource&#xA;override this.GetExtendedDatabaseBlobAuditingPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ExtendedDatabaseBlobAuditingPolicyResource" Usage="mockableSqlArmClient.GetExtendedDatabaseBlobAuditingPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ExtendedDatabaseBlobAuditingPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Sql.ExtendedDatabaseBlobAuditingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ExtendedDatabaseBlobAuditingPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName)" /> to create an <see cref="T:Azure.ResourceManager.Sql.ExtendedDatabaseBlobAuditingPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ExtendedDatabaseBlobAuditingPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtendedServerBlobAuditingPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource GetExtendedServerBlobAuditingPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource GetExtendedServerBlobAuditingPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetExtendedServerBlobAuditingPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExtendedServerBlobAuditingPolicyResource (id As ResourceIdentifier) As ExtendedServerBlobAuditingPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetExtendedServerBlobAuditingPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource&#xA;override this.GetExtendedServerBlobAuditingPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource" Usage="mockableSqlArmClient.GetExtendedServerBlobAuditingPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName)" /> to create an <see cref="T:Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFailoverGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.FailoverGroupResource GetFailoverGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.FailoverGroupResource GetFailoverGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetFailoverGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFailoverGroupResource (id As ResourceIdentifier) As FailoverGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetFailoverGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.FailoverGroupResource&#xA;override this.GetFailoverGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.FailoverGroupResource" Usage="mockableSqlArmClient.GetFailoverGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.FailoverGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.FailoverGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.FailoverGroupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.FailoverGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.FailoverGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGeoBackupPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.GeoBackupPolicyResource GetGeoBackupPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.GeoBackupPolicyResource GetGeoBackupPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetGeoBackupPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGeoBackupPolicyResource (id As ResourceIdentifier) As GeoBackupPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetGeoBackupPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.GeoBackupPolicyResource&#xA;override this.GetGeoBackupPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.GeoBackupPolicyResource" Usage="mockableSqlArmClient.GetGeoBackupPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.GeoBackupPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.GeoBackupPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.GeoBackupPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.GeoBackupPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.GeoBackupPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.GeoBackupPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstanceFailoverGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.InstanceFailoverGroupResource GetInstanceFailoverGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.InstanceFailoverGroupResource GetInstanceFailoverGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetInstanceFailoverGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInstanceFailoverGroupResource (id As ResourceIdentifier) As InstanceFailoverGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetInstanceFailoverGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.InstanceFailoverGroupResource&#xA;override this.GetInstanceFailoverGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.InstanceFailoverGroupResource" Usage="mockableSqlArmClient.GetInstanceFailoverGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.InstanceFailoverGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Sql.InstanceFailoverGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.InstanceFailoverGroupResource.CreateResourceIdentifier(System.String,System.String,Azure.Core.AzureLocation,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Sql.InstanceFailoverGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.InstanceFailoverGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstancePoolResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.InstancePoolResource GetInstancePoolResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.InstancePoolResource GetInstancePoolResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetInstancePoolResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInstancePoolResource (id As ResourceIdentifier) As InstancePoolResource" />
      <MemberSignature Language="F#" Value="abstract member GetInstancePoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.InstancePoolResource&#xA;override this.GetInstancePoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.InstancePoolResource" Usage="mockableSqlArmClient.GetInstancePoolResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.InstancePoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Sql.InstancePoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.InstancePoolResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Sql.InstancePoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.InstancePoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPv6FirewallRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.IPv6FirewallRuleResource GetIPv6FirewallRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.IPv6FirewallRuleResource GetIPv6FirewallRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetIPv6FirewallRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPv6FirewallRuleResource (id As ResourceIdentifier) As IPv6FirewallRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetIPv6FirewallRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.IPv6FirewallRuleResource&#xA;override this.GetIPv6FirewallRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.IPv6FirewallRuleResource" Usage="mockableSqlArmClient.GetIPv6FirewallRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.IPv6FirewallRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Sql.IPv6FirewallRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.IPv6FirewallRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Sql.IPv6FirewallRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.IPv6FirewallRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLedgerDigestUploadResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.LedgerDigestUploadResource GetLedgerDigestUploadResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.LedgerDigestUploadResource GetLedgerDigestUploadResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetLedgerDigestUploadResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLedgerDigestUploadResource (id As ResourceIdentifier) As LedgerDigestUploadResource" />
      <MemberSignature Language="F#" Value="abstract member GetLedgerDigestUploadResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.LedgerDigestUploadResource&#xA;override this.GetLedgerDigestUploadResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.LedgerDigestUploadResource" Usage="mockableSqlArmClient.GetLedgerDigestUploadResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.LedgerDigestUploadResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.LedgerDigestUploadResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.LedgerDigestUploadResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.LedgerDigestUploadsName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.LedgerDigestUploadResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.LedgerDigestUploadResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLogicalDatabaseTransparentDataEncryptionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.LogicalDatabaseTransparentDataEncryptionResource GetLogicalDatabaseTransparentDataEncryptionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.LogicalDatabaseTransparentDataEncryptionResource GetLogicalDatabaseTransparentDataEncryptionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetLogicalDatabaseTransparentDataEncryptionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLogicalDatabaseTransparentDataEncryptionResource (id As ResourceIdentifier) As LogicalDatabaseTransparentDataEncryptionResource" />
      <MemberSignature Language="F#" Value="abstract member GetLogicalDatabaseTransparentDataEncryptionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.LogicalDatabaseTransparentDataEncryptionResource&#xA;override this.GetLogicalDatabaseTransparentDataEncryptionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.LogicalDatabaseTransparentDataEncryptionResource" Usage="mockableSqlArmClient.GetLogicalDatabaseTransparentDataEncryptionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.LogicalDatabaseTransparentDataEncryptionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.LogicalDatabaseTransparentDataEncryptionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.LogicalDatabaseTransparentDataEncryptionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.TransparentDataEncryptionName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.LogicalDatabaseTransparentDataEncryptionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.LogicalDatabaseTransparentDataEncryptionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.LongTermRetentionPolicyResource GetLongTermRetentionPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.LongTermRetentionPolicyResource GetLongTermRetentionPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetLongTermRetentionPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLongTermRetentionPolicyResource (id As ResourceIdentifier) As LongTermRetentionPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetLongTermRetentionPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.LongTermRetentionPolicyResource&#xA;override this.GetLongTermRetentionPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.LongTermRetentionPolicyResource" Usage="mockableSqlArmClient.GetLongTermRetentionPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.LongTermRetentionPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.LongTermRetentionPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.LongTermRetentionPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.LongTermRetentionPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.LongTermRetentionPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.LongTermRetentionPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaintenanceWindowOptionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.MaintenanceWindowOptionResource GetMaintenanceWindowOptionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.MaintenanceWindowOptionResource GetMaintenanceWindowOptionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetMaintenanceWindowOptionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMaintenanceWindowOptionResource (id As ResourceIdentifier) As MaintenanceWindowOptionResource" />
      <MemberSignature Language="F#" Value="abstract member GetMaintenanceWindowOptionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.MaintenanceWindowOptionResource&#xA;override this.GetMaintenanceWindowOptionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.MaintenanceWindowOptionResource" Usage="mockableSqlArmClient.GetMaintenanceWindowOptionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.MaintenanceWindowOptionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.MaintenanceWindowOptionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.MaintenanceWindowOptionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.MaintenanceWindowOptionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.MaintenanceWindowOptionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaintenanceWindowsResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.MaintenanceWindowsResource GetMaintenanceWindowsResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.MaintenanceWindowsResource GetMaintenanceWindowsResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetMaintenanceWindowsResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMaintenanceWindowsResource (id As ResourceIdentifier) As MaintenanceWindowsResource" />
      <MemberSignature Language="F#" Value="abstract member GetMaintenanceWindowsResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.MaintenanceWindowsResource&#xA;override this.GetMaintenanceWindowsResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.MaintenanceWindowsResource" Usage="mockableSqlArmClient.GetMaintenanceWindowsResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.MaintenanceWindowsResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.MaintenanceWindowsResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.MaintenanceWindowsResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.MaintenanceWindowsResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.MaintenanceWindowsResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedBackupShortTermRetentionPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedBackupShortTermRetentionPolicyResource GetManagedBackupShortTermRetentionPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedBackupShortTermRetentionPolicyResource GetManagedBackupShortTermRetentionPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedBackupShortTermRetentionPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedBackupShortTermRetentionPolicyResource (id As ResourceIdentifier) As ManagedBackupShortTermRetentionPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedBackupShortTermRetentionPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedBackupShortTermRetentionPolicyResource&#xA;override this.GetManagedBackupShortTermRetentionPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedBackupShortTermRetentionPolicyResource" Usage="mockableSqlArmClient.GetManagedBackupShortTermRetentionPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedBackupShortTermRetentionPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedBackupShortTermRetentionPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedBackupShortTermRetentionPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.ManagedShortTermRetentionPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedBackupShortTermRetentionPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedBackupShortTermRetentionPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabaseAdvancedThreatProtectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedDatabaseAdvancedThreatProtectionResource GetManagedDatabaseAdvancedThreatProtectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedDatabaseAdvancedThreatProtectionResource GetManagedDatabaseAdvancedThreatProtectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedDatabaseAdvancedThreatProtectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedDatabaseAdvancedThreatProtectionResource (id As ResourceIdentifier) As ManagedDatabaseAdvancedThreatProtectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedDatabaseAdvancedThreatProtectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseAdvancedThreatProtectionResource&#xA;override this.GetManagedDatabaseAdvancedThreatProtectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseAdvancedThreatProtectionResource" Usage="mockableSqlArmClient.GetManagedDatabaseAdvancedThreatProtectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedDatabaseAdvancedThreatProtectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseAdvancedThreatProtectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedDatabaseAdvancedThreatProtectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.AdvancedThreatProtectionName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseAdvancedThreatProtectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseAdvancedThreatProtectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabaseColumnResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedDatabaseColumnResource GetManagedDatabaseColumnResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedDatabaseColumnResource GetManagedDatabaseColumnResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedDatabaseColumnResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedDatabaseColumnResource (id As ResourceIdentifier) As ManagedDatabaseColumnResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedDatabaseColumnResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseColumnResource&#xA;override this.GetManagedDatabaseColumnResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseColumnResource" Usage="mockableSqlArmClient.GetManagedDatabaseColumnResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedDatabaseColumnResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseColumnResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedDatabaseColumnResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseColumnResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseColumnResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabaseResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedDatabaseResource GetManagedDatabaseResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedDatabaseResource GetManagedDatabaseResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedDatabaseResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedDatabaseResource (id As ResourceIdentifier) As ManagedDatabaseResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseResource&#xA;override this.GetManagedDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseResource" Usage="mockableSqlArmClient.GetManagedDatabaseResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedDatabaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedDatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabaseRestoreDetailResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedDatabaseRestoreDetailResource GetManagedDatabaseRestoreDetailResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedDatabaseRestoreDetailResource GetManagedDatabaseRestoreDetailResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedDatabaseRestoreDetailResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedDatabaseRestoreDetailResource (id As ResourceIdentifier) As ManagedDatabaseRestoreDetailResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedDatabaseRestoreDetailResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseRestoreDetailResource&#xA;override this.GetManagedDatabaseRestoreDetailResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseRestoreDetailResource" Usage="mockableSqlArmClient.GetManagedDatabaseRestoreDetailResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedDatabaseRestoreDetailResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseRestoreDetailResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedDatabaseRestoreDetailResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.RestoreDetailsName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseRestoreDetailResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseRestoreDetailResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabaseSchemaResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedDatabaseSchemaResource GetManagedDatabaseSchemaResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedDatabaseSchemaResource GetManagedDatabaseSchemaResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedDatabaseSchemaResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedDatabaseSchemaResource (id As ResourceIdentifier) As ManagedDatabaseSchemaResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedDatabaseSchemaResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseSchemaResource&#xA;override this.GetManagedDatabaseSchemaResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseSchemaResource" Usage="mockableSqlArmClient.GetManagedDatabaseSchemaResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedDatabaseSchemaResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseSchemaResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedDatabaseSchemaResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseSchemaResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseSchemaResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabaseSecurityAlertPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedDatabaseSecurityAlertPolicyResource GetManagedDatabaseSecurityAlertPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedDatabaseSecurityAlertPolicyResource GetManagedDatabaseSecurityAlertPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedDatabaseSecurityAlertPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedDatabaseSecurityAlertPolicyResource (id As ResourceIdentifier) As ManagedDatabaseSecurityAlertPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedDatabaseSecurityAlertPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseSecurityAlertPolicyResource&#xA;override this.GetManagedDatabaseSecurityAlertPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseSecurityAlertPolicyResource" Usage="mockableSqlArmClient.GetManagedDatabaseSecurityAlertPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedDatabaseSecurityAlertPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseSecurityAlertPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedDatabaseSecurityAlertPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.SqlSecurityAlertPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseSecurityAlertPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseSecurityAlertPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabaseSensitivityLabelResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedDatabaseSensitivityLabelResource GetManagedDatabaseSensitivityLabelResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedDatabaseSensitivityLabelResource GetManagedDatabaseSensitivityLabelResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedDatabaseSensitivityLabelResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedDatabaseSensitivityLabelResource (id As ResourceIdentifier) As ManagedDatabaseSensitivityLabelResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedDatabaseSensitivityLabelResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseSensitivityLabelResource&#xA;override this.GetManagedDatabaseSensitivityLabelResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseSensitivityLabelResource" Usage="mockableSqlArmClient.GetManagedDatabaseSensitivityLabelResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedDatabaseSensitivityLabelResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseSensitivityLabelResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedDatabaseSensitivityLabelResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.SensitivityLabelSource)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseSensitivityLabelResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseSensitivityLabelResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabaseTableResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedDatabaseTableResource GetManagedDatabaseTableResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedDatabaseTableResource GetManagedDatabaseTableResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedDatabaseTableResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedDatabaseTableResource (id As ResourceIdentifier) As ManagedDatabaseTableResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedDatabaseTableResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseTableResource&#xA;override this.GetManagedDatabaseTableResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseTableResource" Usage="mockableSqlArmClient.GetManagedDatabaseTableResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedDatabaseTableResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseTableResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedDatabaseTableResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseTableResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseTableResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabaseVulnerabilityAssessmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentResource GetManagedDatabaseVulnerabilityAssessmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentResource GetManagedDatabaseVulnerabilityAssessmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedDatabaseVulnerabilityAssessmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedDatabaseVulnerabilityAssessmentResource (id As ResourceIdentifier) As ManagedDatabaseVulnerabilityAssessmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedDatabaseVulnerabilityAssessmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentResource&#xA;override this.GetManagedDatabaseVulnerabilityAssessmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentResource" Usage="mockableSqlArmClient.GetManagedDatabaseVulnerabilityAssessmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabaseVulnerabilityAssessmentRuleBaselineResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentRuleBaselineResource GetManagedDatabaseVulnerabilityAssessmentRuleBaselineResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentRuleBaselineResource GetManagedDatabaseVulnerabilityAssessmentRuleBaselineResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedDatabaseVulnerabilityAssessmentRuleBaselineResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedDatabaseVulnerabilityAssessmentRuleBaselineResource (id As ResourceIdentifier) As ManagedDatabaseVulnerabilityAssessmentRuleBaselineResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedDatabaseVulnerabilityAssessmentRuleBaselineResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentRuleBaselineResource&#xA;override this.GetManagedDatabaseVulnerabilityAssessmentRuleBaselineResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentRuleBaselineResource" Usage="mockableSqlArmClient.GetManagedDatabaseVulnerabilityAssessmentRuleBaselineResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentRuleBaselineResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentRuleBaselineResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentRuleBaselineResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentRuleBaselineResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentRuleBaselineResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabaseVulnerabilityAssessmentScanResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentScanResource GetManagedDatabaseVulnerabilityAssessmentScanResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentScanResource GetManagedDatabaseVulnerabilityAssessmentScanResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedDatabaseVulnerabilityAssessmentScanResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedDatabaseVulnerabilityAssessmentScanResource (id As ResourceIdentifier) As ManagedDatabaseVulnerabilityAssessmentScanResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedDatabaseVulnerabilityAssessmentScanResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentScanResource&#xA;override this.GetManagedDatabaseVulnerabilityAssessmentScanResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentScanResource" Usage="mockableSqlArmClient.GetManagedDatabaseVulnerabilityAssessmentScanResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentScanResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentScanResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentScanResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentScanResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentScanResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceAdministratorResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource GetManagedInstanceAdministratorResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource GetManagedInstanceAdministratorResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceAdministratorResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceAdministratorResource (id As ResourceIdentifier) As ManagedInstanceAdministratorResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceAdministratorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource&#xA;override this.GetManagedInstanceAdministratorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource" Usage="mockableSqlArmClient.GetManagedInstanceAdministratorResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.SqlAdministratorName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceAdvancedThreatProtectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource GetManagedInstanceAdvancedThreatProtectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource GetManagedInstanceAdvancedThreatProtectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceAdvancedThreatProtectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceAdvancedThreatProtectionResource (id As ResourceIdentifier) As ManagedInstanceAdvancedThreatProtectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceAdvancedThreatProtectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource&#xA;override this.GetManagedInstanceAdvancedThreatProtectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource" Usage="mockableSqlArmClient.GetManagedInstanceAdvancedThreatProtectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.AdvancedThreatProtectionName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceAzureADOnlyAuthenticationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource GetManagedInstanceAzureADOnlyAuthenticationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource GetManagedInstanceAzureADOnlyAuthenticationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceAzureADOnlyAuthenticationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceAzureADOnlyAuthenticationResource (id As ResourceIdentifier) As ManagedInstanceAzureADOnlyAuthenticationResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceAzureADOnlyAuthenticationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource&#xA;override this.GetManagedInstanceAzureADOnlyAuthenticationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource" Usage="mockableSqlArmClient.GetManagedInstanceAzureADOnlyAuthenticationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.AuthenticationName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceDtcResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceDtcResource GetManagedInstanceDtcResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceDtcResource GetManagedInstanceDtcResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceDtcResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceDtcResource (id As ResourceIdentifier) As ManagedInstanceDtcResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceDtcResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceDtcResource&#xA;override this.GetManagedInstanceDtcResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceDtcResource" Usage="mockableSqlArmClient.GetManagedInstanceDtcResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceDtcResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceDtcResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceDtcResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.DtcName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceDtcResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceDtcResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceEncryptionProtectorResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource GetManagedInstanceEncryptionProtectorResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource GetManagedInstanceEncryptionProtectorResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceEncryptionProtectorResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceEncryptionProtectorResource (id As ResourceIdentifier) As ManagedInstanceEncryptionProtectorResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceEncryptionProtectorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource&#xA;override this.GetManagedInstanceEncryptionProtectorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource" Usage="mockableSqlArmClient.GetManagedInstanceEncryptionProtectorResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.EncryptionProtectorName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceKeyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceKeyResource GetManagedInstanceKeyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceKeyResource GetManagedInstanceKeyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceKeyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceKeyResource (id As ResourceIdentifier) As ManagedInstanceKeyResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceKeyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceKeyResource&#xA;override this.GetManagedInstanceKeyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceKeyResource" Usage="mockableSqlArmClient.GetManagedInstanceKeyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceKeyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceKeyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceKeyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceKeyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceKeyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceLongTermRetentionPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionPolicyResource GetManagedInstanceLongTermRetentionPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionPolicyResource GetManagedInstanceLongTermRetentionPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceLongTermRetentionPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceLongTermRetentionPolicyResource (id As ResourceIdentifier) As ManagedInstanceLongTermRetentionPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceLongTermRetentionPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionPolicyResource&#xA;override this.GetManagedInstanceLongTermRetentionPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionPolicyResource" Usage="mockableSqlArmClient.GetManagedInstanceLongTermRetentionPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.ManagedInstanceLongTermRetentionPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceOperationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceOperationResource GetManagedInstanceOperationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceOperationResource GetManagedInstanceOperationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceOperationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceOperationResource (id As ResourceIdentifier) As ManagedInstanceOperationResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceOperationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceOperationResource&#xA;override this.GetManagedInstanceOperationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceOperationResource" Usage="mockableSqlArmClient.GetManagedInstanceOperationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceOperationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceOperationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceOperationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.Guid)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceOperationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceOperationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstancePrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource GetManagedInstancePrivateEndpointConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource GetManagedInstancePrivateEndpointConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstancePrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstancePrivateEndpointConnectionResource (id As ResourceIdentifier) As ManagedInstancePrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstancePrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource&#xA;override this.GetManagedInstancePrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource" Usage="mockableSqlArmClient.GetManagedInstancePrivateEndpointConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstancePrivateLinkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource GetManagedInstancePrivateLinkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource GetManagedInstancePrivateLinkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstancePrivateLinkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstancePrivateLinkResource (id As ResourceIdentifier) As ManagedInstancePrivateLinkResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstancePrivateLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource&#xA;override this.GetManagedInstancePrivateLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource" Usage="mockableSqlArmClient.GetManagedInstancePrivateLinkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceResource GetManagedInstanceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceResource GetManagedInstanceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceResource (id As ResourceIdentifier) As ManagedInstanceResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceResource&#xA;override this.GetManagedInstanceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceResource" Usage="mockableSqlArmClient.GetManagedInstanceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceServerConfigurationOptionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource GetManagedInstanceServerConfigurationOptionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource GetManagedInstanceServerConfigurationOptionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceServerConfigurationOptionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceServerConfigurationOptionResource (id As ResourceIdentifier) As ManagedInstanceServerConfigurationOptionResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceServerConfigurationOptionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource&#xA;override this.GetManagedInstanceServerConfigurationOptionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource" Usage="mockableSqlArmClient.GetManagedInstanceServerConfigurationOptionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.ManagedInstanceServerConfigurationOptionName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceServerTrustCertificateResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource GetManagedInstanceServerTrustCertificateResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource GetManagedInstanceServerTrustCertificateResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceServerTrustCertificateResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceServerTrustCertificateResource (id As ResourceIdentifier) As ManagedInstanceServerTrustCertificateResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceServerTrustCertificateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource&#xA;override this.GetManagedInstanceServerTrustCertificateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource" Usage="mockableSqlArmClient.GetManagedInstanceServerTrustCertificateResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceStartStopScheduleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource GetManagedInstanceStartStopScheduleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource GetManagedInstanceStartStopScheduleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceStartStopScheduleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceStartStopScheduleResource (id As ResourceIdentifier) As ManagedInstanceStartStopScheduleResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceStartStopScheduleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource&#xA;override this.GetManagedInstanceStartStopScheduleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource" Usage="mockableSqlArmClient.GetManagedInstanceStartStopScheduleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.ManagedInstanceStartStopScheduleName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceVulnerabilityAssessmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource GetManagedInstanceVulnerabilityAssessmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource GetManagedInstanceVulnerabilityAssessmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceVulnerabilityAssessmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceVulnerabilityAssessmentResource (id As ResourceIdentifier) As ManagedInstanceVulnerabilityAssessmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceVulnerabilityAssessmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource&#xA;override this.GetManagedInstanceVulnerabilityAssessmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource" Usage="mockableSqlArmClient.GetManagedInstanceVulnerabilityAssessmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedLedgerDigestUploadResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedLedgerDigestUploadResource GetManagedLedgerDigestUploadResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedLedgerDigestUploadResource GetManagedLedgerDigestUploadResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedLedgerDigestUploadResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedLedgerDigestUploadResource (id As ResourceIdentifier) As ManagedLedgerDigestUploadResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedLedgerDigestUploadResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedLedgerDigestUploadResource&#xA;override this.GetManagedLedgerDigestUploadResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedLedgerDigestUploadResource" Usage="mockableSqlArmClient.GetManagedLedgerDigestUploadResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedLedgerDigestUploadResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedLedgerDigestUploadResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedLedgerDigestUploadResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.ManagedLedgerDigestUploadsName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedLedgerDigestUploadResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedLedgerDigestUploadResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource GetManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource GetManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource (id As ResourceIdentifier) As ManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource&#xA;override this.GetManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource" Usage="mockableSqlArmClient.GetManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.ManagedShortTermRetentionPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedServerDnsAliasResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedServerDnsAliasResource GetManagedServerDnsAliasResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedServerDnsAliasResource GetManagedServerDnsAliasResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedServerDnsAliasResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedServerDnsAliasResource (id As ResourceIdentifier) As ManagedServerDnsAliasResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedServerDnsAliasResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedServerDnsAliasResource&#xA;override this.GetManagedServerDnsAliasResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedServerDnsAliasResource" Usage="mockableSqlArmClient.GetManagedServerDnsAliasResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedServerDnsAliasResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedServerDnsAliasResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedServerDnsAliasResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedServerDnsAliasResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedServerDnsAliasResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedServerSecurityAlertPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource GetManagedServerSecurityAlertPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource GetManagedServerSecurityAlertPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedServerSecurityAlertPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedServerSecurityAlertPolicyResource (id As ResourceIdentifier) As ManagedServerSecurityAlertPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedServerSecurityAlertPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource&#xA;override this.GetManagedServerSecurityAlertPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource" Usage="mockableSqlArmClient.GetManagedServerSecurityAlertPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.SqlSecurityAlertPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedTransparentDataEncryptionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedTransparentDataEncryptionResource GetManagedTransparentDataEncryptionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedTransparentDataEncryptionResource GetManagedTransparentDataEncryptionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedTransparentDataEncryptionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedTransparentDataEncryptionResource (id As ResourceIdentifier) As ManagedTransparentDataEncryptionResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedTransparentDataEncryptionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedTransparentDataEncryptionResource&#xA;override this.GetManagedTransparentDataEncryptionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedTransparentDataEncryptionResource" Usage="mockableSqlArmClient.GetManagedTransparentDataEncryptionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedTransparentDataEncryptionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedTransparentDataEncryptionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedTransparentDataEncryptionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.TransparentDataEncryptionName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedTransparentDataEncryptionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedTransparentDataEncryptionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutboundFirewallRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.OutboundFirewallRuleResource GetOutboundFirewallRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.OutboundFirewallRuleResource GetOutboundFirewallRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetOutboundFirewallRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOutboundFirewallRuleResource (id As ResourceIdentifier) As OutboundFirewallRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetOutboundFirewallRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.OutboundFirewallRuleResource&#xA;override this.GetOutboundFirewallRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.OutboundFirewallRuleResource" Usage="mockableSqlArmClient.GetOutboundFirewallRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.OutboundFirewallRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Sql.OutboundFirewallRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.OutboundFirewallRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Sql.OutboundFirewallRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.OutboundFirewallRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecommendedActionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.RecommendedActionResource GetRecommendedActionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.RecommendedActionResource GetRecommendedActionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetRecommendedActionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecommendedActionResource (id As ResourceIdentifier) As RecommendedActionResource" />
      <MemberSignature Language="F#" Value="abstract member GetRecommendedActionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.RecommendedActionResource&#xA;override this.GetRecommendedActionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.RecommendedActionResource" Usage="mockableSqlArmClient.GetRecommendedActionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.RecommendedActionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.RecommendedActionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.RecommendedActionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.RecommendedActionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.RecommendedActionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecoverableDatabaseResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.RecoverableDatabaseResource GetRecoverableDatabaseResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.RecoverableDatabaseResource GetRecoverableDatabaseResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetRecoverableDatabaseResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecoverableDatabaseResource (id As ResourceIdentifier) As RecoverableDatabaseResource" />
      <MemberSignature Language="F#" Value="abstract member GetRecoverableDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.RecoverableDatabaseResource&#xA;override this.GetRecoverableDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.RecoverableDatabaseResource" Usage="mockableSqlArmClient.GetRecoverableDatabaseResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.RecoverableDatabaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.RecoverableDatabaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.RecoverableDatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.RecoverableDatabaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.RecoverableDatabaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecoverableManagedDatabaseResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource GetRecoverableManagedDatabaseResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource GetRecoverableManagedDatabaseResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetRecoverableManagedDatabaseResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecoverableManagedDatabaseResource (id As ResourceIdentifier) As RecoverableManagedDatabaseResource" />
      <MemberSignature Language="F#" Value="abstract member GetRecoverableManagedDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource&#xA;override this.GetRecoverableManagedDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource" Usage="mockableSqlArmClient.GetRecoverableManagedDatabaseResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGroupLongTermRetentionBackupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource GetResourceGroupLongTermRetentionBackupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource GetResourceGroupLongTermRetentionBackupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetResourceGroupLongTermRetentionBackupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceGroupLongTermRetentionBackupResource (id As ResourceIdentifier) As ResourceGroupLongTermRetentionBackupResource" />
      <MemberSignature Language="F#" Value="abstract member GetResourceGroupLongTermRetentionBackupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource&#xA;override this.GetResourceGroupLongTermRetentionBackupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource" Usage="mockableSqlArmClient.GetResourceGroupLongTermRetentionBackupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource.CreateResourceIdentifier(System.String,System.String,Azure.Core.AzureLocation,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGroupLongTermRetentionManagedInstanceBackupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource GetResourceGroupLongTermRetentionManagedInstanceBackupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource GetResourceGroupLongTermRetentionManagedInstanceBackupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetResourceGroupLongTermRetentionManagedInstanceBackupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceGroupLongTermRetentionManagedInstanceBackupResource (id As ResourceIdentifier) As ResourceGroupLongTermRetentionManagedInstanceBackupResource" />
      <MemberSignature Language="F#" Value="abstract member GetResourceGroupLongTermRetentionManagedInstanceBackupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource&#xA;override this.GetResourceGroupLongTermRetentionManagedInstanceBackupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource" Usage="mockableSqlArmClient.GetResourceGroupLongTermRetentionManagedInstanceBackupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource.CreateResourceIdentifier(System.String,System.String,Azure.Core.AzureLocation,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRestorableDroppedDatabaseResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource GetRestorableDroppedDatabaseResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource GetRestorableDroppedDatabaseResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetRestorableDroppedDatabaseResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRestorableDroppedDatabaseResource (id As ResourceIdentifier) As RestorableDroppedDatabaseResource" />
      <MemberSignature Language="F#" Value="abstract member GetRestorableDroppedDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource&#xA;override this.GetRestorableDroppedDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource" Usage="mockableSqlArmClient.GetRestorableDroppedDatabaseResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRestorableDroppedManagedDatabaseResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource GetRestorableDroppedManagedDatabaseResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource GetRestorableDroppedManagedDatabaseResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetRestorableDroppedManagedDatabaseResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRestorableDroppedManagedDatabaseResource (id As ResourceIdentifier) As RestorableDroppedManagedDatabaseResource" />
      <MemberSignature Language="F#" Value="abstract member GetRestorableDroppedManagedDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource&#xA;override this.GetRestorableDroppedManagedDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource" Usage="mockableSqlArmClient.GetRestorableDroppedManagedDatabaseResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerAdvancedThreatProtectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ServerAdvancedThreatProtectionResource GetServerAdvancedThreatProtectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ServerAdvancedThreatProtectionResource GetServerAdvancedThreatProtectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetServerAdvancedThreatProtectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerAdvancedThreatProtectionResource (id As ResourceIdentifier) As ServerAdvancedThreatProtectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetServerAdvancedThreatProtectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ServerAdvancedThreatProtectionResource&#xA;override this.GetServerAdvancedThreatProtectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ServerAdvancedThreatProtectionResource" Usage="mockableSqlArmClient.GetServerAdvancedThreatProtectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ServerAdvancedThreatProtectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ServerAdvancedThreatProtectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ServerAdvancedThreatProtectionResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.AdvancedThreatProtectionName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ServerAdvancedThreatProtectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ServerAdvancedThreatProtectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceObjectiveResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ServiceObjectiveResource GetServiceObjectiveResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ServiceObjectiveResource GetServiceObjectiveResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetServiceObjectiveResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceObjectiveResource (id As ResourceIdentifier) As ServiceObjectiveResource" />
      <MemberSignature Language="F#" Value="abstract member GetServiceObjectiveResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ServiceObjectiveResource&#xA;override this.GetServiceObjectiveResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ServiceObjectiveResource" Usage="mockableSqlArmClient.GetServiceObjectiveResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ServiceObjectiveResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ServiceObjectiveResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ServiceObjectiveResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ServiceObjectiveResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ServiceObjectiveResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlAgentConfigurationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlAgentConfigurationResource GetSqlAgentConfigurationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlAgentConfigurationResource GetSqlAgentConfigurationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlAgentConfigurationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlAgentConfigurationResource (id As ResourceIdentifier) As SqlAgentConfigurationResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlAgentConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlAgentConfigurationResource&#xA;override this.GetSqlAgentConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlAgentConfigurationResource" Usage="mockableSqlArmClient.GetSqlAgentConfigurationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlAgentConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlAgentConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlAgentConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlAgentConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlAgentConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseAdvisorResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlDatabaseAdvisorResource GetSqlDatabaseAdvisorResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlDatabaseAdvisorResource GetSqlDatabaseAdvisorResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseAdvisorResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDatabaseAdvisorResource (id As ResourceIdentifier) As SqlDatabaseAdvisorResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDatabaseAdvisorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseAdvisorResource&#xA;override this.GetSqlDatabaseAdvisorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseAdvisorResource" Usage="mockableSqlArmClient.GetSqlDatabaseAdvisorResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseAdvisorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseAdvisorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseAdvisorResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseAdvisorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseAdvisorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseAutomaticTuningResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlDatabaseAutomaticTuningResource GetSqlDatabaseAutomaticTuningResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlDatabaseAutomaticTuningResource GetSqlDatabaseAutomaticTuningResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseAutomaticTuningResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDatabaseAutomaticTuningResource (id As ResourceIdentifier) As SqlDatabaseAutomaticTuningResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDatabaseAutomaticTuningResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseAutomaticTuningResource&#xA;override this.GetSqlDatabaseAutomaticTuningResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseAutomaticTuningResource" Usage="mockableSqlArmClient.GetSqlDatabaseAutomaticTuningResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseAutomaticTuningResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseAutomaticTuningResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseAutomaticTuningResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseAutomaticTuningResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseAutomaticTuningResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseBlobAuditingPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlDatabaseBlobAuditingPolicyResource GetSqlDatabaseBlobAuditingPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlDatabaseBlobAuditingPolicyResource GetSqlDatabaseBlobAuditingPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseBlobAuditingPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDatabaseBlobAuditingPolicyResource (id As ResourceIdentifier) As SqlDatabaseBlobAuditingPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDatabaseBlobAuditingPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseBlobAuditingPolicyResource&#xA;override this.GetSqlDatabaseBlobAuditingPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseBlobAuditingPolicyResource" Usage="mockableSqlArmClient.GetSqlDatabaseBlobAuditingPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseBlobAuditingPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseBlobAuditingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseBlobAuditingPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseBlobAuditingPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseBlobAuditingPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseColumnResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlDatabaseColumnResource GetSqlDatabaseColumnResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlDatabaseColumnResource GetSqlDatabaseColumnResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseColumnResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDatabaseColumnResource (id As ResourceIdentifier) As SqlDatabaseColumnResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDatabaseColumnResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseColumnResource&#xA;override this.GetSqlDatabaseColumnResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseColumnResource" Usage="mockableSqlArmClient.GetSqlDatabaseColumnResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseColumnResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseColumnResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseColumnResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseColumnResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseColumnResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlDatabaseResource GetSqlDatabaseResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlDatabaseResource GetSqlDatabaseResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDatabaseResource (id As ResourceIdentifier) As SqlDatabaseResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseResource&#xA;override this.GetSqlDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseResource" Usage="mockableSqlArmClient.GetSqlDatabaseResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseSchemaResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlDatabaseSchemaResource GetSqlDatabaseSchemaResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlDatabaseSchemaResource GetSqlDatabaseSchemaResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseSchemaResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDatabaseSchemaResource (id As ResourceIdentifier) As SqlDatabaseSchemaResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDatabaseSchemaResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseSchemaResource&#xA;override this.GetSqlDatabaseSchemaResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseSchemaResource" Usage="mockableSqlArmClient.GetSqlDatabaseSchemaResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseSchemaResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSchemaResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseSchemaResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSchemaResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSchemaResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseSecurityAlertPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlDatabaseSecurityAlertPolicyResource GetSqlDatabaseSecurityAlertPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlDatabaseSecurityAlertPolicyResource GetSqlDatabaseSecurityAlertPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseSecurityAlertPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDatabaseSecurityAlertPolicyResource (id As ResourceIdentifier) As SqlDatabaseSecurityAlertPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDatabaseSecurityAlertPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseSecurityAlertPolicyResource&#xA;override this.GetSqlDatabaseSecurityAlertPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseSecurityAlertPolicyResource" Usage="mockableSqlArmClient.GetSqlDatabaseSecurityAlertPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseSecurityAlertPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSecurityAlertPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseSecurityAlertPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.SqlSecurityAlertPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSecurityAlertPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSecurityAlertPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseSensitivityLabelResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlDatabaseSensitivityLabelResource GetSqlDatabaseSensitivityLabelResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlDatabaseSensitivityLabelResource GetSqlDatabaseSensitivityLabelResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseSensitivityLabelResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDatabaseSensitivityLabelResource (id As ResourceIdentifier) As SqlDatabaseSensitivityLabelResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDatabaseSensitivityLabelResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseSensitivityLabelResource&#xA;override this.GetSqlDatabaseSensitivityLabelResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseSensitivityLabelResource" Usage="mockableSqlArmClient.GetSqlDatabaseSensitivityLabelResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseSensitivityLabelResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSensitivityLabelResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseSensitivityLabelResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.SensitivityLabelSource)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSensitivityLabelResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSensitivityLabelResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseSqlVulnerabilityAssessmentBaselineResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineResource GetSqlDatabaseSqlVulnerabilityAssessmentBaselineResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineResource GetSqlDatabaseSqlVulnerabilityAssessmentBaselineResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseSqlVulnerabilityAssessmentBaselineResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDatabaseSqlVulnerabilityAssessmentBaselineResource (id As ResourceIdentifier) As SqlDatabaseSqlVulnerabilityAssessmentBaselineResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDatabaseSqlVulnerabilityAssessmentBaselineResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineResource&#xA;override this.GetSqlDatabaseSqlVulnerabilityAssessmentBaselineResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineResource" Usage="mockableSqlArmClient.GetSqlDatabaseSqlVulnerabilityAssessmentBaselineResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,Azure.ResourceManager.Sql.Models.SqlVulnerabilityAssessmentBaselineName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource GetSqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource GetSqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource (id As ResourceIdentifier) As SqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource&#xA;override this.GetSqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource" Usage="mockableSqlArmClient.GetSqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,Azure.ResourceManager.Sql.Models.SqlVulnerabilityAssessmentBaselineName,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseSqlVulnerabilityAssessmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentResource GetSqlDatabaseSqlVulnerabilityAssessmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentResource GetSqlDatabaseSqlVulnerabilityAssessmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseSqlVulnerabilityAssessmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDatabaseSqlVulnerabilityAssessmentResource (id As ResourceIdentifier) As SqlDatabaseSqlVulnerabilityAssessmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDatabaseSqlVulnerabilityAssessmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentResource&#xA;override this.GetSqlDatabaseSqlVulnerabilityAssessmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentResource" Usage="mockableSqlArmClient.GetSqlDatabaseSqlVulnerabilityAssessmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseSqlVulnerabilityAssessmentScanResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResource GetSqlDatabaseSqlVulnerabilityAssessmentScanResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResource GetSqlDatabaseSqlVulnerabilityAssessmentScanResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseSqlVulnerabilityAssessmentScanResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDatabaseSqlVulnerabilityAssessmentScanResource (id As ResourceIdentifier) As SqlDatabaseSqlVulnerabilityAssessmentScanResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDatabaseSqlVulnerabilityAssessmentScanResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResource&#xA;override this.GetSqlDatabaseSqlVulnerabilityAssessmentScanResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResource" Usage="mockableSqlArmClient.GetSqlDatabaseSqlVulnerabilityAssessmentScanResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseSqlVulnerabilityAssessmentScanResultResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResultResource GetSqlDatabaseSqlVulnerabilityAssessmentScanResultResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResultResource GetSqlDatabaseSqlVulnerabilityAssessmentScanResultResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseSqlVulnerabilityAssessmentScanResultResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDatabaseSqlVulnerabilityAssessmentScanResultResource (id As ResourceIdentifier) As SqlDatabaseSqlVulnerabilityAssessmentScanResultResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDatabaseSqlVulnerabilityAssessmentScanResultResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResultResource&#xA;override this.GetSqlDatabaseSqlVulnerabilityAssessmentScanResultResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResultResource" Usage="mockableSqlArmClient.GetSqlDatabaseSqlVulnerabilityAssessmentScanResultResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResultResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResultResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResultResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResultResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResultResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseTableResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlDatabaseTableResource GetSqlDatabaseTableResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlDatabaseTableResource GetSqlDatabaseTableResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseTableResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDatabaseTableResource (id As ResourceIdentifier) As SqlDatabaseTableResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDatabaseTableResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseTableResource&#xA;override this.GetSqlDatabaseTableResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseTableResource" Usage="mockableSqlArmClient.GetSqlDatabaseTableResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseTableResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseTableResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseTableResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseTableResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseTableResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseVulnerabilityAssessmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentResource GetSqlDatabaseVulnerabilityAssessmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentResource GetSqlDatabaseVulnerabilityAssessmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseVulnerabilityAssessmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDatabaseVulnerabilityAssessmentResource (id As ResourceIdentifier) As SqlDatabaseVulnerabilityAssessmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDatabaseVulnerabilityAssessmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentResource&#xA;override this.GetSqlDatabaseVulnerabilityAssessmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentResource" Usage="mockableSqlArmClient.GetSqlDatabaseVulnerabilityAssessmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseVulnerabilityAssessmentRuleBaselineResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentRuleBaselineResource GetSqlDatabaseVulnerabilityAssessmentRuleBaselineResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentRuleBaselineResource GetSqlDatabaseVulnerabilityAssessmentRuleBaselineResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseVulnerabilityAssessmentRuleBaselineResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDatabaseVulnerabilityAssessmentRuleBaselineResource (id As ResourceIdentifier) As SqlDatabaseVulnerabilityAssessmentRuleBaselineResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDatabaseVulnerabilityAssessmentRuleBaselineResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentRuleBaselineResource&#xA;override this.GetSqlDatabaseVulnerabilityAssessmentRuleBaselineResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentRuleBaselineResource" Usage="mockableSqlArmClient.GetSqlDatabaseVulnerabilityAssessmentRuleBaselineResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentRuleBaselineResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentRuleBaselineResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentRuleBaselineResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentRuleBaselineResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentRuleBaselineResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseVulnerabilityAssessmentScanResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentScanResource GetSqlDatabaseVulnerabilityAssessmentScanResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentScanResource GetSqlDatabaseVulnerabilityAssessmentScanResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseVulnerabilityAssessmentScanResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDatabaseVulnerabilityAssessmentScanResource (id As ResourceIdentifier) As SqlDatabaseVulnerabilityAssessmentScanResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDatabaseVulnerabilityAssessmentScanResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentScanResource&#xA;override this.GetSqlDatabaseVulnerabilityAssessmentScanResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentScanResource" Usage="mockableSqlArmClient.GetSqlDatabaseVulnerabilityAssessmentScanResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentScanResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentScanResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentScanResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentScanResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentScanResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlFirewallRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlFirewallRuleResource GetSqlFirewallRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlFirewallRuleResource GetSqlFirewallRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlFirewallRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlFirewallRuleResource (id As ResourceIdentifier) As SqlFirewallRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlFirewallRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlFirewallRuleResource&#xA;override this.GetSqlFirewallRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlFirewallRuleResource" Usage="mockableSqlArmClient.GetSqlFirewallRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlFirewallRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlFirewallRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlFirewallRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlFirewallRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlFirewallRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlPrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlPrivateEndpointConnectionResource GetSqlPrivateEndpointConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlPrivateEndpointConnectionResource GetSqlPrivateEndpointConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlPrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlPrivateEndpointConnectionResource (id As ResourceIdentifier) As SqlPrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlPrivateEndpointConnectionResource&#xA;override this.GetSqlPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlPrivateEndpointConnectionResource" Usage="mockableSqlArmClient.GetSqlPrivateEndpointConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlPrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlPrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlPrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlPrivateLinkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlPrivateLinkResource GetSqlPrivateLinkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlPrivateLinkResource GetSqlPrivateLinkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlPrivateLinkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlPrivateLinkResource (id As ResourceIdentifier) As SqlPrivateLinkResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlPrivateLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlPrivateLinkResource&#xA;override this.GetSqlPrivateLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlPrivateLinkResource" Usage="mockableSqlArmClient.GetSqlPrivateLinkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlPrivateLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlPrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlPrivateLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlPrivateLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlPrivateLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerAdvisorResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerAdvisorResource GetSqlServerAdvisorResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerAdvisorResource GetSqlServerAdvisorResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerAdvisorResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerAdvisorResource (id As ResourceIdentifier) As SqlServerAdvisorResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerAdvisorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerAdvisorResource&#xA;override this.GetSqlServerAdvisorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerAdvisorResource" Usage="mockableSqlArmClient.GetSqlServerAdvisorResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerAdvisorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerAdvisorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerAdvisorResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerAdvisorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerAdvisorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerAutomaticTuningResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerAutomaticTuningResource GetSqlServerAutomaticTuningResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerAutomaticTuningResource GetSqlServerAutomaticTuningResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerAutomaticTuningResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerAutomaticTuningResource (id As ResourceIdentifier) As SqlServerAutomaticTuningResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerAutomaticTuningResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerAutomaticTuningResource&#xA;override this.GetSqlServerAutomaticTuningResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerAutomaticTuningResource" Usage="mockableSqlArmClient.GetSqlServerAutomaticTuningResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerAutomaticTuningResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerAutomaticTuningResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerAutomaticTuningResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerAutomaticTuningResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerAutomaticTuningResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerAzureADAdministratorResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerAzureADAdministratorResource GetSqlServerAzureADAdministratorResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerAzureADAdministratorResource GetSqlServerAzureADAdministratorResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerAzureADAdministratorResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerAzureADAdministratorResource (id As ResourceIdentifier) As SqlServerAzureADAdministratorResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerAzureADAdministratorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerAzureADAdministratorResource&#xA;override this.GetSqlServerAzureADAdministratorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerAzureADAdministratorResource" Usage="mockableSqlArmClient.GetSqlServerAzureADAdministratorResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerAzureADAdministratorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerAzureADAdministratorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerAzureADAdministratorResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.SqlAdministratorName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerAzureADAdministratorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerAzureADAdministratorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerAzureADOnlyAuthenticationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerAzureADOnlyAuthenticationResource GetSqlServerAzureADOnlyAuthenticationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerAzureADOnlyAuthenticationResource GetSqlServerAzureADOnlyAuthenticationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerAzureADOnlyAuthenticationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerAzureADOnlyAuthenticationResource (id As ResourceIdentifier) As SqlServerAzureADOnlyAuthenticationResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerAzureADOnlyAuthenticationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerAzureADOnlyAuthenticationResource&#xA;override this.GetSqlServerAzureADOnlyAuthenticationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerAzureADOnlyAuthenticationResource" Usage="mockableSqlArmClient.GetSqlServerAzureADOnlyAuthenticationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerAzureADOnlyAuthenticationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerAzureADOnlyAuthenticationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerAzureADOnlyAuthenticationResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.AuthenticationName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerAzureADOnlyAuthenticationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerAzureADOnlyAuthenticationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerBlobAuditingPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerBlobAuditingPolicyResource GetSqlServerBlobAuditingPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerBlobAuditingPolicyResource GetSqlServerBlobAuditingPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerBlobAuditingPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerBlobAuditingPolicyResource (id As ResourceIdentifier) As SqlServerBlobAuditingPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerBlobAuditingPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerBlobAuditingPolicyResource&#xA;override this.GetSqlServerBlobAuditingPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerBlobAuditingPolicyResource" Usage="mockableSqlArmClient.GetSqlServerBlobAuditingPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerBlobAuditingPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerBlobAuditingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerBlobAuditingPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerBlobAuditingPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerBlobAuditingPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerCommunicationLinkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerCommunicationLinkResource GetSqlServerCommunicationLinkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerCommunicationLinkResource GetSqlServerCommunicationLinkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerCommunicationLinkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerCommunicationLinkResource (id As ResourceIdentifier) As SqlServerCommunicationLinkResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerCommunicationLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerCommunicationLinkResource&#xA;override this.GetSqlServerCommunicationLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerCommunicationLinkResource" Usage="mockableSqlArmClient.GetSqlServerCommunicationLinkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerCommunicationLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerCommunicationLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerCommunicationLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerCommunicationLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerCommunicationLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerConnectionPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerConnectionPolicyResource GetSqlServerConnectionPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerConnectionPolicyResource GetSqlServerConnectionPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerConnectionPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerConnectionPolicyResource (id As ResourceIdentifier) As SqlServerConnectionPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerConnectionPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerConnectionPolicyResource&#xA;override this.GetSqlServerConnectionPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerConnectionPolicyResource" Usage="mockableSqlArmClient.GetSqlServerConnectionPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerConnectionPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerConnectionPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerConnectionPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.ConnectionPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerConnectionPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerConnectionPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerDatabaseReplicationLinkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerDatabaseReplicationLinkResource GetSqlServerDatabaseReplicationLinkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerDatabaseReplicationLinkResource GetSqlServerDatabaseReplicationLinkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerDatabaseReplicationLinkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerDatabaseReplicationLinkResource (id As ResourceIdentifier) As SqlServerDatabaseReplicationLinkResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerDatabaseReplicationLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerDatabaseReplicationLinkResource&#xA;override this.GetSqlServerDatabaseReplicationLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerDatabaseReplicationLinkResource" Usage="mockableSqlArmClient.GetSqlServerDatabaseReplicationLinkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerDatabaseReplicationLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerDatabaseReplicationLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerDatabaseReplicationLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerDatabaseReplicationLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerDatabaseReplicationLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerDatabaseRestorePointResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerDatabaseRestorePointResource GetSqlServerDatabaseRestorePointResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerDatabaseRestorePointResource GetSqlServerDatabaseRestorePointResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerDatabaseRestorePointResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerDatabaseRestorePointResource (id As ResourceIdentifier) As SqlServerDatabaseRestorePointResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerDatabaseRestorePointResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerDatabaseRestorePointResource&#xA;override this.GetSqlServerDatabaseRestorePointResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerDatabaseRestorePointResource" Usage="mockableSqlArmClient.GetSqlServerDatabaseRestorePointResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerDatabaseRestorePointResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerDatabaseRestorePointResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerDatabaseRestorePointResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerDatabaseRestorePointResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerDatabaseRestorePointResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerDevOpsAuditingSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerDevOpsAuditingSettingResource GetSqlServerDevOpsAuditingSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerDevOpsAuditingSettingResource GetSqlServerDevOpsAuditingSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerDevOpsAuditingSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerDevOpsAuditingSettingResource (id As ResourceIdentifier) As SqlServerDevOpsAuditingSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerDevOpsAuditingSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerDevOpsAuditingSettingResource&#xA;override this.GetSqlServerDevOpsAuditingSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerDevOpsAuditingSettingResource" Usage="mockableSqlArmClient.GetSqlServerDevOpsAuditingSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerDevOpsAuditingSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerDevOpsAuditingSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerDevOpsAuditingSettingResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerDevOpsAuditingSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerDevOpsAuditingSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerDnsAliasResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerDnsAliasResource GetSqlServerDnsAliasResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerDnsAliasResource GetSqlServerDnsAliasResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerDnsAliasResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerDnsAliasResource (id As ResourceIdentifier) As SqlServerDnsAliasResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerDnsAliasResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerDnsAliasResource&#xA;override this.GetSqlServerDnsAliasResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerDnsAliasResource" Usage="mockableSqlArmClient.GetSqlServerDnsAliasResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerDnsAliasResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerDnsAliasResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerDnsAliasResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerDnsAliasResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerDnsAliasResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerJobAgentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerJobAgentResource GetSqlServerJobAgentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerJobAgentResource GetSqlServerJobAgentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerJobAgentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerJobAgentResource (id As ResourceIdentifier) As SqlServerJobAgentResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerJobAgentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobAgentResource&#xA;override this.GetSqlServerJobAgentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobAgentResource" Usage="mockableSqlArmClient.GetSqlServerJobAgentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerJobAgentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobAgentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerJobAgentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobAgentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobAgentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerJobCredentialResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerJobCredentialResource GetSqlServerJobCredentialResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerJobCredentialResource GetSqlServerJobCredentialResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerJobCredentialResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerJobCredentialResource (id As ResourceIdentifier) As SqlServerJobCredentialResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerJobCredentialResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobCredentialResource&#xA;override this.GetSqlServerJobCredentialResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobCredentialResource" Usage="mockableSqlArmClient.GetSqlServerJobCredentialResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerJobCredentialResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobCredentialResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerJobCredentialResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobCredentialResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobCredentialResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerJobExecutionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerJobExecutionResource GetSqlServerJobExecutionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerJobExecutionResource GetSqlServerJobExecutionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerJobExecutionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerJobExecutionResource (id As ResourceIdentifier) As SqlServerJobExecutionResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerJobExecutionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobExecutionResource&#xA;override this.GetSqlServerJobExecutionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobExecutionResource" Usage="mockableSqlArmClient.GetSqlServerJobExecutionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerJobExecutionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobExecutionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerJobExecutionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.Guid)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobExecutionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobExecutionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerJobExecutionStepResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerJobExecutionStepResource GetSqlServerJobExecutionStepResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerJobExecutionStepResource GetSqlServerJobExecutionStepResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerJobExecutionStepResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerJobExecutionStepResource (id As ResourceIdentifier) As SqlServerJobExecutionStepResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerJobExecutionStepResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobExecutionStepResource&#xA;override this.GetSqlServerJobExecutionStepResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobExecutionStepResource" Usage="mockableSqlArmClient.GetSqlServerJobExecutionStepResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerJobExecutionStepResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobExecutionStepResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerJobExecutionStepResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.Guid,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobExecutionStepResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobExecutionStepResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerJobExecutionStepTargetResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerJobExecutionStepTargetResource GetSqlServerJobExecutionStepTargetResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerJobExecutionStepTargetResource GetSqlServerJobExecutionStepTargetResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerJobExecutionStepTargetResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerJobExecutionStepTargetResource (id As ResourceIdentifier) As SqlServerJobExecutionStepTargetResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerJobExecutionStepTargetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobExecutionStepTargetResource&#xA;override this.GetSqlServerJobExecutionStepTargetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobExecutionStepTargetResource" Usage="mockableSqlArmClient.GetSqlServerJobExecutionStepTargetResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerJobExecutionStepTargetResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobExecutionStepTargetResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerJobExecutionStepTargetResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.Guid,System.String,System.Guid)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobExecutionStepTargetResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobExecutionStepTargetResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerJobResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerJobResource GetSqlServerJobResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerJobResource GetSqlServerJobResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerJobResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerJobResource (id As ResourceIdentifier) As SqlServerJobResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerJobResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobResource&#xA;override this.GetSqlServerJobResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobResource" Usage="mockableSqlArmClient.GetSqlServerJobResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerJobResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerJobResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerJobStepResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerJobStepResource GetSqlServerJobStepResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerJobStepResource GetSqlServerJobStepResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerJobStepResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerJobStepResource (id As ResourceIdentifier) As SqlServerJobStepResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerJobStepResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobStepResource&#xA;override this.GetSqlServerJobStepResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobStepResource" Usage="mockableSqlArmClient.GetSqlServerJobStepResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerJobStepResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobStepResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerJobStepResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobStepResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobStepResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerJobTargetGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerJobTargetGroupResource GetSqlServerJobTargetGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerJobTargetGroupResource GetSqlServerJobTargetGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerJobTargetGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerJobTargetGroupResource (id As ResourceIdentifier) As SqlServerJobTargetGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerJobTargetGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobTargetGroupResource&#xA;override this.GetSqlServerJobTargetGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobTargetGroupResource" Usage="mockableSqlArmClient.GetSqlServerJobTargetGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerJobTargetGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobTargetGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerJobTargetGroupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobTargetGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobTargetGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerJobVersionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerJobVersionResource GetSqlServerJobVersionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerJobVersionResource GetSqlServerJobVersionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerJobVersionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerJobVersionResource (id As ResourceIdentifier) As SqlServerJobVersionResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerJobVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobVersionResource&#xA;override this.GetSqlServerJobVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobVersionResource" Usage="mockableSqlArmClient.GetSqlServerJobVersionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerJobVersionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerJobVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.Int32)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobVersionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobVersionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerJobVersionStepResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerJobVersionStepResource GetSqlServerJobVersionStepResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerJobVersionStepResource GetSqlServerJobVersionStepResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerJobVersionStepResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerJobVersionStepResource (id As ResourceIdentifier) As SqlServerJobVersionStepResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerJobVersionStepResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobVersionStepResource&#xA;override this.GetSqlServerJobVersionStepResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobVersionStepResource" Usage="mockableSqlArmClient.GetSqlServerJobVersionStepResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerJobVersionStepResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobVersionStepResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerJobVersionStepResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobVersionStepResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobVersionStepResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerKeyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerKeyResource GetSqlServerKeyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerKeyResource GetSqlServerKeyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerKeyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerKeyResource (id As ResourceIdentifier) As SqlServerKeyResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerKeyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerKeyResource&#xA;override this.GetSqlServerKeyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerKeyResource" Usage="mockableSqlArmClient.GetSqlServerKeyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerKeyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerKeyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerKeyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerKeyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerKeyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerResource GetSqlServerResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerResource GetSqlServerResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerResource (id As ResourceIdentifier) As SqlServerResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerResource&#xA;override this.GetSqlServerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerResource" Usage="mockableSqlArmClient.GetSqlServerResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerSecurityAlertPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerSecurityAlertPolicyResource GetSqlServerSecurityAlertPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerSecurityAlertPolicyResource GetSqlServerSecurityAlertPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerSecurityAlertPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerSecurityAlertPolicyResource (id As ResourceIdentifier) As SqlServerSecurityAlertPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerSecurityAlertPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerSecurityAlertPolicyResource&#xA;override this.GetSqlServerSecurityAlertPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerSecurityAlertPolicyResource" Usage="mockableSqlArmClient.GetSqlServerSecurityAlertPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerSecurityAlertPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerSecurityAlertPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerSecurityAlertPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.SqlSecurityAlertPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerSecurityAlertPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerSecurityAlertPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerSqlVulnerabilityAssessmentBaselineResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineResource GetSqlServerSqlVulnerabilityAssessmentBaselineResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineResource GetSqlServerSqlVulnerabilityAssessmentBaselineResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerSqlVulnerabilityAssessmentBaselineResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerSqlVulnerabilityAssessmentBaselineResource (id As ResourceIdentifier) As SqlServerSqlVulnerabilityAssessmentBaselineResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerSqlVulnerabilityAssessmentBaselineResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineResource&#xA;override this.GetSqlServerSqlVulnerabilityAssessmentBaselineResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineResource" Usage="mockableSqlArmClient.GetSqlServerSqlVulnerabilityAssessmentBaselineResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,Azure.ResourceManager.Sql.Models.SqlVulnerabilityAssessmentBaselineName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerSqlVulnerabilityAssessmentBaselineRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineRuleResource GetSqlServerSqlVulnerabilityAssessmentBaselineRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineRuleResource GetSqlServerSqlVulnerabilityAssessmentBaselineRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerSqlVulnerabilityAssessmentBaselineRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerSqlVulnerabilityAssessmentBaselineRuleResource (id As ResourceIdentifier) As SqlServerSqlVulnerabilityAssessmentBaselineRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerSqlVulnerabilityAssessmentBaselineRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineRuleResource&#xA;override this.GetSqlServerSqlVulnerabilityAssessmentBaselineRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineRuleResource" Usage="mockableSqlArmClient.GetSqlServerSqlVulnerabilityAssessmentBaselineRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,Azure.ResourceManager.Sql.Models.SqlVulnerabilityAssessmentBaselineName,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerSqlVulnerabilityAssessmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentResource GetSqlServerSqlVulnerabilityAssessmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentResource GetSqlServerSqlVulnerabilityAssessmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerSqlVulnerabilityAssessmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerSqlVulnerabilityAssessmentResource (id As ResourceIdentifier) As SqlServerSqlVulnerabilityAssessmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerSqlVulnerabilityAssessmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentResource&#xA;override this.GetSqlServerSqlVulnerabilityAssessmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentResource" Usage="mockableSqlArmClient.GetSqlServerSqlVulnerabilityAssessmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerSqlVulnerabilityAssessmentScanResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResource GetSqlServerSqlVulnerabilityAssessmentScanResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResource GetSqlServerSqlVulnerabilityAssessmentScanResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerSqlVulnerabilityAssessmentScanResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerSqlVulnerabilityAssessmentScanResource (id As ResourceIdentifier) As SqlServerSqlVulnerabilityAssessmentScanResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerSqlVulnerabilityAssessmentScanResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResource&#xA;override this.GetSqlServerSqlVulnerabilityAssessmentScanResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResource" Usage="mockableSqlArmClient.GetSqlServerSqlVulnerabilityAssessmentScanResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerSqlVulnerabilityAssessmentScanResultResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResultResource GetSqlServerSqlVulnerabilityAssessmentScanResultResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResultResource GetSqlServerSqlVulnerabilityAssessmentScanResultResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerSqlVulnerabilityAssessmentScanResultResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerSqlVulnerabilityAssessmentScanResultResource (id As ResourceIdentifier) As SqlServerSqlVulnerabilityAssessmentScanResultResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerSqlVulnerabilityAssessmentScanResultResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResultResource&#xA;override this.GetSqlServerSqlVulnerabilityAssessmentScanResultResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResultResource" Usage="mockableSqlArmClient.GetSqlServerSqlVulnerabilityAssessmentScanResultResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResultResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResultResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResultResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResultResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResultResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerTrustGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerTrustGroupResource GetSqlServerTrustGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerTrustGroupResource GetSqlServerTrustGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerTrustGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerTrustGroupResource (id As ResourceIdentifier) As SqlServerTrustGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerTrustGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerTrustGroupResource&#xA;override this.GetSqlServerTrustGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerTrustGroupResource" Usage="mockableSqlArmClient.GetSqlServerTrustGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerTrustGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerTrustGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerTrustGroupResource.CreateResourceIdentifier(System.String,System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerTrustGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerTrustGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerVirtualNetworkRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerVirtualNetworkRuleResource GetSqlServerVirtualNetworkRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerVirtualNetworkRuleResource GetSqlServerVirtualNetworkRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerVirtualNetworkRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerVirtualNetworkRuleResource (id As ResourceIdentifier) As SqlServerVirtualNetworkRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerVirtualNetworkRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerVirtualNetworkRuleResource&#xA;override this.GetSqlServerVirtualNetworkRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerVirtualNetworkRuleResource" Usage="mockableSqlArmClient.GetSqlServerVirtualNetworkRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerVirtualNetworkRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerVirtualNetworkRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerVirtualNetworkRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerVirtualNetworkRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerVirtualNetworkRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerVulnerabilityAssessmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerVulnerabilityAssessmentResource GetSqlServerVulnerabilityAssessmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlServerVulnerabilityAssessmentResource GetSqlServerVulnerabilityAssessmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerVulnerabilityAssessmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerVulnerabilityAssessmentResource (id As ResourceIdentifier) As SqlServerVulnerabilityAssessmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerVulnerabilityAssessmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerVulnerabilityAssessmentResource&#xA;override this.GetSqlServerVulnerabilityAssessmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerVulnerabilityAssessmentResource" Usage="mockableSqlArmClient.GetSqlServerVulnerabilityAssessmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerVulnerabilityAssessmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerVulnerabilityAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerVulnerabilityAssessmentResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerVulnerabilityAssessmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerVulnerabilityAssessmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlTimeZoneResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlTimeZoneResource GetSqlTimeZoneResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlTimeZoneResource GetSqlTimeZoneResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlTimeZoneResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlTimeZoneResource (id As ResourceIdentifier) As SqlTimeZoneResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlTimeZoneResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlTimeZoneResource&#xA;override this.GetSqlTimeZoneResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlTimeZoneResource" Usage="mockableSqlArmClient.GetSqlTimeZoneResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlTimeZoneResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlTimeZoneResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlTimeZoneResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlTimeZoneResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlTimeZoneResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionLongTermRetentionBackupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource GetSubscriptionLongTermRetentionBackupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource GetSubscriptionLongTermRetentionBackupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSubscriptionLongTermRetentionBackupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionLongTermRetentionBackupResource (id As ResourceIdentifier) As SubscriptionLongTermRetentionBackupResource" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionLongTermRetentionBackupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&#xA;override this.GetSubscriptionLongTermRetentionBackupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource" Usage="mockableSqlArmClient.GetSubscriptionLongTermRetentionBackupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionLongTermRetentionManagedInstanceBackupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource GetSubscriptionLongTermRetentionManagedInstanceBackupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource GetSubscriptionLongTermRetentionManagedInstanceBackupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSubscriptionLongTermRetentionManagedInstanceBackupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionLongTermRetentionManagedInstanceBackupResource (id As ResourceIdentifier) As SubscriptionLongTermRetentionManagedInstanceBackupResource" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionLongTermRetentionManagedInstanceBackupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&#xA;override this.GetSubscriptionLongTermRetentionManagedInstanceBackupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource" Usage="mockableSqlArmClient.GetSubscriptionLongTermRetentionManagedInstanceBackupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionUsageResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SubscriptionUsageResource GetSubscriptionUsageResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SubscriptionUsageResource GetSubscriptionUsageResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSubscriptionUsageResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionUsageResource (id As ResourceIdentifier) As SubscriptionUsageResource" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionUsageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SubscriptionUsageResource&#xA;override this.GetSubscriptionUsageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SubscriptionUsageResource" Usage="mockableSqlArmClient.GetSubscriptionUsageResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SubscriptionUsageResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SubscriptionUsageResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SubscriptionUsageResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SubscriptionUsageResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SubscriptionUsageResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSyncAgentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SyncAgentResource GetSyncAgentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SyncAgentResource GetSyncAgentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSyncAgentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSyncAgentResource (id As ResourceIdentifier) As SyncAgentResource" />
      <MemberSignature Language="F#" Value="abstract member GetSyncAgentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SyncAgentResource&#xA;override this.GetSyncAgentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SyncAgentResource" Usage="mockableSqlArmClient.GetSyncAgentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SyncAgentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SyncAgentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SyncAgentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SyncAgentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SyncAgentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSyncGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SyncGroupResource GetSyncGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SyncGroupResource GetSyncGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSyncGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSyncGroupResource (id As ResourceIdentifier) As SyncGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetSyncGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SyncGroupResource&#xA;override this.GetSyncGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SyncGroupResource" Usage="mockableSqlArmClient.GetSyncGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SyncGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SyncGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SyncGroupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SyncGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SyncGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSyncMemberResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SyncMemberResource GetSyncMemberResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SyncMemberResource GetSyncMemberResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSyncMemberResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSyncMemberResource (id As ResourceIdentifier) As SyncMemberResource" />
      <MemberSignature Language="F#" Value="abstract member GetSyncMemberResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SyncMemberResource&#xA;override this.GetSyncMemberResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SyncMemberResource" Usage="mockableSqlArmClient.GetSyncMemberResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SyncMemberResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SyncMemberResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SyncMemberResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SyncMemberResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SyncMemberResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualClusterResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.VirtualClusterResource GetVirtualClusterResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.VirtualClusterResource GetVirtualClusterResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetVirtualClusterResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualClusterResource (id As ResourceIdentifier) As VirtualClusterResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualClusterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.VirtualClusterResource&#xA;override this.GetVirtualClusterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.VirtualClusterResource" Usage="mockableSqlArmClient.GetVirtualClusterResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.VirtualClusterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.VirtualClusterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.VirtualClusterResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.VirtualClusterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.VirtualClusterResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadClassifierResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.WorkloadClassifierResource GetWorkloadClassifierResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.WorkloadClassifierResource GetWorkloadClassifierResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetWorkloadClassifierResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadClassifierResource (id As ResourceIdentifier) As WorkloadClassifierResource" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadClassifierResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.WorkloadClassifierResource&#xA;override this.GetWorkloadClassifierResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.WorkloadClassifierResource" Usage="mockableSqlArmClient.GetWorkloadClassifierResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.WorkloadClassifierResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.WorkloadClassifierResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.WorkloadClassifierResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.WorkloadClassifierResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.WorkloadClassifierResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.WorkloadGroupResource GetWorkloadGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.WorkloadGroupResource GetWorkloadGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetWorkloadGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadGroupResource (id As ResourceIdentifier) As WorkloadGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.WorkloadGroupResource&#xA;override this.GetWorkloadGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.WorkloadGroupResource" Usage="mockableSqlArmClient.GetWorkloadGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.WorkloadGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.WorkloadGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.WorkloadGroupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.WorkloadGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.WorkloadGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
