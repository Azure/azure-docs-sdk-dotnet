<Type Name="MockablePeeringSubscriptionResource" FullName="Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockablePeeringSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockablePeeringSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockablePeeringSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockablePeeringSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockablePeeringSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckPeeringServiceProviderAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProviderAvailability&gt; CheckPeeringServiceProviderAvailability (Azure.ResourceManager.Peering.Models.CheckPeeringServiceProviderAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;valuetype Azure.ResourceManager.Peering.Models.PeeringServiceProviderAvailability&gt; CheckPeeringServiceProviderAvailability(class Azure.ResourceManager.Peering.Models.CheckPeeringServiceProviderAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.CheckPeeringServiceProviderAvailability(Azure.ResourceManager.Peering.Models.CheckPeeringServiceProviderAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckPeeringServiceProviderAvailability (content As CheckPeeringServiceProviderAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PeeringServiceProviderAvailability)" />
      <MemberSignature Language="F#" Value="abstract member CheckPeeringServiceProviderAvailability : Azure.ResourceManager.Peering.Models.CheckPeeringServiceProviderAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProviderAvailability&gt;&#xA;override this.CheckPeeringServiceProviderAvailability : Azure.ResourceManager.Peering.Models.CheckPeeringServiceProviderAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProviderAvailability&gt;" Usage="mockablePeeringSubscriptionResource.CheckPeeringServiceProviderAvailability (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProviderAvailability&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Peering.Models.CheckPeeringServiceProviderAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The CheckServiceProviderAvailabilityInput indicating customer location and service provider. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks if the peering service provider is present within 1000 miles of customer's location
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Peering/checkServiceProviderAvailability</description></item><item><term>Operation Id</term><description>CheckServiceProviderAvailability</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckPeeringServiceProviderAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProviderAvailability&gt;&gt; CheckPeeringServiceProviderAvailabilityAsync (Azure.ResourceManager.Peering.Models.CheckPeeringServiceProviderAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;valuetype Azure.ResourceManager.Peering.Models.PeeringServiceProviderAvailability&gt;&gt; CheckPeeringServiceProviderAvailabilityAsync(class Azure.ResourceManager.Peering.Models.CheckPeeringServiceProviderAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.CheckPeeringServiceProviderAvailabilityAsync(Azure.ResourceManager.Peering.Models.CheckPeeringServiceProviderAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckPeeringServiceProviderAvailabilityAsync (content As CheckPeeringServiceProviderAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PeeringServiceProviderAvailability))" />
      <MemberSignature Language="F#" Value="abstract member CheckPeeringServiceProviderAvailabilityAsync : Azure.ResourceManager.Peering.Models.CheckPeeringServiceProviderAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProviderAvailability&gt;&gt;&#xA;override this.CheckPeeringServiceProviderAvailabilityAsync : Azure.ResourceManager.Peering.Models.CheckPeeringServiceProviderAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProviderAvailability&gt;&gt;" Usage="mockablePeeringSubscriptionResource.CheckPeeringServiceProviderAvailabilityAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProviderAvailability&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Peering.Models.CheckPeeringServiceProviderAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The CheckServiceProviderAvailabilityInput indicating customer location and service provider. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks if the peering service provider is present within 1000 miles of customer's location
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Peering/checkServiceProviderAvailability</description></item><item><term>Operation Id</term><description>CheckServiceProviderAvailability</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCdnPeeringPrefixes">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.CdnPeeringPrefix&gt; GetCdnPeeringPrefixes (string peeringLocation, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Peering.Models.CdnPeeringPrefix&gt; GetCdnPeeringPrefixes(string peeringLocation, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.GetCdnPeeringPrefixes(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCdnPeeringPrefixes (peeringLocation As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of CdnPeeringPrefix)" />
      <MemberSignature Language="F#" Value="abstract member GetCdnPeeringPrefixes : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.CdnPeeringPrefix&gt;&#xA;override this.GetCdnPeeringPrefixes : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.CdnPeeringPrefix&gt;" Usage="mockablePeeringSubscriptionResource.GetCdnPeeringPrefixes (peeringLocation, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.CdnPeeringPrefix&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peeringLocation" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="peeringLocation"> The peering location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the advertised prefixes for the specified peering location
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Peering/cdnPeeringPrefixes</description></item><item><term>Operation Id</term><description>CdnPeeringPrefixes_List</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Peering.Models.CdnPeeringPrefix" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peeringLocation" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCdnPeeringPrefixesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.CdnPeeringPrefix&gt; GetCdnPeeringPrefixesAsync (string peeringLocation, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Peering.Models.CdnPeeringPrefix&gt; GetCdnPeeringPrefixesAsync(string peeringLocation, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.GetCdnPeeringPrefixesAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCdnPeeringPrefixesAsync (peeringLocation As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of CdnPeeringPrefix)" />
      <MemberSignature Language="F#" Value="abstract member GetCdnPeeringPrefixesAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.CdnPeeringPrefix&gt;&#xA;override this.GetCdnPeeringPrefixesAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.CdnPeeringPrefix&gt;" Usage="mockablePeeringSubscriptionResource.GetCdnPeeringPrefixesAsync (peeringLocation, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.CdnPeeringPrefix&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peeringLocation" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="peeringLocation"> The peering location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the advertised prefixes for the specified peering location
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Peering/cdnPeeringPrefixes</description></item><item><term>Operation Id</term><description>CdnPeeringPrefixes_List</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Peering.Models.CdnPeeringPrefix" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peeringLocation" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPeerAsn">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Peering.PeerAsnResource&gt; GetPeerAsn (string peerAsnName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Peering.PeerAsnResource&gt; GetPeerAsn(string peerAsnName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.GetPeerAsn(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPeerAsn (peerAsnName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PeerAsnResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPeerAsn : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Peering.PeerAsnResource&gt;&#xA;override this.GetPeerAsn : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Peering.PeerAsnResource&gt;" Usage="mockablePeeringSubscriptionResource.GetPeerAsn (peerAsnName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Peering.PeerAsnResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerAsnName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="peerAsnName"> The peer ASN name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the peer ASN with the specified name under the given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peerAsns/{peerAsnName}</description></item><item><term>Operation Id</term><description>PeerAsns_Get</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Peering.PeerAsnResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peerAsnName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="peerAsnName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPeerAsnAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.PeerAsnResource&gt;&gt; GetPeerAsnAsync (string peerAsnName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Peering.PeerAsnResource&gt;&gt; GetPeerAsnAsync(string peerAsnName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.GetPeerAsnAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPeerAsnAsync (peerAsnName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PeerAsnResource))" />
      <MemberSignature Language="F#" Value="abstract member GetPeerAsnAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.PeerAsnResource&gt;&gt;&#xA;override this.GetPeerAsnAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.PeerAsnResource&gt;&gt;" Usage="mockablePeeringSubscriptionResource.GetPeerAsnAsync (peerAsnName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.PeerAsnResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerAsnName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="peerAsnName"> The peer ASN name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the peer ASN with the specified name under the given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peerAsns/{peerAsnName}</description></item><item><term>Operation Id</term><description>PeerAsns_Get</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Peering.PeerAsnResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peerAsnName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="peerAsnName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPeerAsns">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Peering.PeerAsnCollection GetPeerAsns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Peering.PeerAsnCollection GetPeerAsns() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.GetPeerAsns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPeerAsns () As PeerAsnCollection" />
      <MemberSignature Language="F#" Value="abstract member GetPeerAsns : unit -&gt; Azure.ResourceManager.Peering.PeerAsnCollection&#xA;override this.GetPeerAsns : unit -&gt; Azure.ResourceManager.Peering.PeerAsnCollection" Usage="mockablePeeringSubscriptionResource.GetPeerAsns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Peering.PeerAsnCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of PeerAsnResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of PeerAsnResources and their operations over a PeerAsnResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringLocations">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringLocation&gt; GetPeeringLocations (Azure.ResourceManager.Peering.Models.PeeringLocationsKind kind, Azure.ResourceManager.Peering.Models.PeeringLocationsDirectPeeringType? directPeeringType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Peering.Models.PeeringLocation&gt; GetPeeringLocations(valuetype Azure.ResourceManager.Peering.Models.PeeringLocationsKind kind, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Peering.Models.PeeringLocationsDirectPeeringType&gt; directPeeringType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.GetPeeringLocations(Azure.ResourceManager.Peering.Models.PeeringLocationsKind,System.Nullable{Azure.ResourceManager.Peering.Models.PeeringLocationsDirectPeeringType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPeeringLocations (kind As PeeringLocationsKind, Optional directPeeringType As Nullable(Of PeeringLocationsDirectPeeringType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PeeringLocation)" />
      <MemberSignature Language="F#" Value="abstract member GetPeeringLocations : Azure.ResourceManager.Peering.Models.PeeringLocationsKind * Nullable&lt;Azure.ResourceManager.Peering.Models.PeeringLocationsDirectPeeringType&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringLocation&gt;&#xA;override this.GetPeeringLocations : Azure.ResourceManager.Peering.Models.PeeringLocationsKind * Nullable&lt;Azure.ResourceManager.Peering.Models.PeeringLocationsDirectPeeringType&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringLocation&gt;" Usage="mockablePeeringSubscriptionResource.GetPeeringLocations (kind, directPeeringType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringLocation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Azure.ResourceManager.Peering.Models.PeeringLocationsKind" />
        <Parameter Name="directPeeringType" Type="System.Nullable&lt;Azure.ResourceManager.Peering.Models.PeeringLocationsDirectPeeringType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="kind"> The kind of the peering. </param>
        <param name="directPeeringType"> The type of direct peering. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the available peering locations for the specified kind of peering.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringLocations</description></item><item><term>Operation Id</term><description>PeeringLocations_List</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Peering.Models.PeeringLocation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringLocationsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringLocation&gt; GetPeeringLocationsAsync (Azure.ResourceManager.Peering.Models.PeeringLocationsKind kind, Azure.ResourceManager.Peering.Models.PeeringLocationsDirectPeeringType? directPeeringType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Peering.Models.PeeringLocation&gt; GetPeeringLocationsAsync(valuetype Azure.ResourceManager.Peering.Models.PeeringLocationsKind kind, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Peering.Models.PeeringLocationsDirectPeeringType&gt; directPeeringType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.GetPeeringLocationsAsync(Azure.ResourceManager.Peering.Models.PeeringLocationsKind,System.Nullable{Azure.ResourceManager.Peering.Models.PeeringLocationsDirectPeeringType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPeeringLocationsAsync (kind As PeeringLocationsKind, Optional directPeeringType As Nullable(Of PeeringLocationsDirectPeeringType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PeeringLocation)" />
      <MemberSignature Language="F#" Value="abstract member GetPeeringLocationsAsync : Azure.ResourceManager.Peering.Models.PeeringLocationsKind * Nullable&lt;Azure.ResourceManager.Peering.Models.PeeringLocationsDirectPeeringType&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringLocation&gt;&#xA;override this.GetPeeringLocationsAsync : Azure.ResourceManager.Peering.Models.PeeringLocationsKind * Nullable&lt;Azure.ResourceManager.Peering.Models.PeeringLocationsDirectPeeringType&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringLocation&gt;" Usage="mockablePeeringSubscriptionResource.GetPeeringLocationsAsync (kind, directPeeringType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringLocation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Azure.ResourceManager.Peering.Models.PeeringLocationsKind" />
        <Parameter Name="directPeeringType" Type="System.Nullable&lt;Azure.ResourceManager.Peering.Models.PeeringLocationsDirectPeeringType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="kind"> The kind of the peering. </param>
        <param name="directPeeringType"> The type of direct peering. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the available peering locations for the specified kind of peering.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringLocations</description></item><item><term>Operation Id</term><description>PeeringLocations_List</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Peering.Models.PeeringLocation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeerings">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt; GetPeerings (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Peering.PeeringResource&gt; GetPeerings(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.GetPeerings(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPeerings (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PeeringResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPeerings : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt;&#xA;override this.GetPeerings : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt;" Usage="mockablePeeringSubscriptionResource.GetPeerings cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the peerings under the given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peerings</description></item><item><term>Operation Id</term><description>Peerings_ListBySubscription</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Peering.PeeringResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Peering.PeeringResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt; GetPeeringsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Peering.PeeringResource&gt; GetPeeringsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.GetPeeringsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPeeringsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PeeringResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPeeringsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt;&#xA;override this.GetPeeringsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt;" Usage="mockablePeeringSubscriptionResource.GetPeeringsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the peerings under the given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peerings</description></item><item><term>Operation Id</term><description>Peerings_ListBySubscription</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Peering.PeeringResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Peering.PeeringResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringsByLegacyPeering">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt; GetPeeringsByLegacyPeering (string peeringLocation, Azure.ResourceManager.Peering.Models.LegacyPeeringsKind kind, int? asn = default, Azure.ResourceManager.Peering.Models.DirectPeeringType? directPeeringType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Peering.PeeringResource&gt; GetPeeringsByLegacyPeering(string peeringLocation, valuetype Azure.ResourceManager.Peering.Models.LegacyPeeringsKind kind, valuetype System.Nullable`1&lt;int32&gt; asn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Peering.Models.DirectPeeringType&gt; directPeeringType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.GetPeeringsByLegacyPeering(System.String,Azure.ResourceManager.Peering.Models.LegacyPeeringsKind,System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.Peering.Models.DirectPeeringType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPeeringsByLegacyPeering (peeringLocation As String, kind As LegacyPeeringsKind, Optional asn As Nullable(Of Integer) = Nothing, Optional directPeeringType As Nullable(Of DirectPeeringType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PeeringResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPeeringsByLegacyPeering : string * Azure.ResourceManager.Peering.Models.LegacyPeeringsKind * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.Peering.Models.DirectPeeringType&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt;&#xA;override this.GetPeeringsByLegacyPeering : string * Azure.ResourceManager.Peering.Models.LegacyPeeringsKind * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.Peering.Models.DirectPeeringType&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt;" Usage="mockablePeeringSubscriptionResource.GetPeeringsByLegacyPeering (peeringLocation, kind, asn, directPeeringType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peeringLocation" Type="System.String" />
        <Parameter Name="kind" Type="Azure.ResourceManager.Peering.Models.LegacyPeeringsKind" />
        <Parameter Name="asn" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="directPeeringType" Type="System.Nullable&lt;Azure.ResourceManager.Peering.Models.DirectPeeringType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="peeringLocation"> The location of the peering. </param>
        <param name="kind"> The kind of the peering. </param>
        <param name="asn"> The ASN number associated with a legacy peering. </param>
        <param name="directPeeringType"> The direct peering type. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the legacy peerings under the given subscription matching the specified kind and location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Peering/legacyPeerings</description></item><item><term>Operation Id</term><description>LegacyPeerings_List</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Peering.PeeringResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peeringLocation" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringsByLegacyPeeringAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt; GetPeeringsByLegacyPeeringAsync (string peeringLocation, Azure.ResourceManager.Peering.Models.LegacyPeeringsKind kind, int? asn = default, Azure.ResourceManager.Peering.Models.DirectPeeringType? directPeeringType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Peering.PeeringResource&gt; GetPeeringsByLegacyPeeringAsync(string peeringLocation, valuetype Azure.ResourceManager.Peering.Models.LegacyPeeringsKind kind, valuetype System.Nullable`1&lt;int32&gt; asn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Peering.Models.DirectPeeringType&gt; directPeeringType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.GetPeeringsByLegacyPeeringAsync(System.String,Azure.ResourceManager.Peering.Models.LegacyPeeringsKind,System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.Peering.Models.DirectPeeringType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPeeringsByLegacyPeeringAsync (peeringLocation As String, kind As LegacyPeeringsKind, Optional asn As Nullable(Of Integer) = Nothing, Optional directPeeringType As Nullable(Of DirectPeeringType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PeeringResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPeeringsByLegacyPeeringAsync : string * Azure.ResourceManager.Peering.Models.LegacyPeeringsKind * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.Peering.Models.DirectPeeringType&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt;&#xA;override this.GetPeeringsByLegacyPeeringAsync : string * Azure.ResourceManager.Peering.Models.LegacyPeeringsKind * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.Peering.Models.DirectPeeringType&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt;" Usage="mockablePeeringSubscriptionResource.GetPeeringsByLegacyPeeringAsync (peeringLocation, kind, asn, directPeeringType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peeringLocation" Type="System.String" />
        <Parameter Name="kind" Type="Azure.ResourceManager.Peering.Models.LegacyPeeringsKind" />
        <Parameter Name="asn" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="directPeeringType" Type="System.Nullable&lt;Azure.ResourceManager.Peering.Models.DirectPeeringType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="peeringLocation"> The location of the peering. </param>
        <param name="kind"> The kind of the peering. </param>
        <param name="asn"> The ASN number associated with a legacy peering. </param>
        <param name="directPeeringType"> The direct peering type. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the legacy peerings under the given subscription matching the specified kind and location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Peering/legacyPeerings</description></item><item><term>Operation Id</term><description>LegacyPeerings_List</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Peering.PeeringResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peeringLocation" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringServiceCountries">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceCountry&gt; GetPeeringServiceCountries (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Peering.Models.PeeringServiceCountry&gt; GetPeeringServiceCountries(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.GetPeeringServiceCountries(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPeeringServiceCountries (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PeeringServiceCountry)" />
      <MemberSignature Language="F#" Value="abstract member GetPeeringServiceCountries : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceCountry&gt;&#xA;override this.GetPeeringServiceCountries : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceCountry&gt;" Usage="mockablePeeringSubscriptionResource.GetPeeringServiceCountries cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceCountry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the available countries for peering service.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServiceCountries</description></item><item><term>Operation Id</term><description>PeeringServiceCountries_List</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Peering.Models.PeeringServiceCountry" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringServiceCountriesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceCountry&gt; GetPeeringServiceCountriesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Peering.Models.PeeringServiceCountry&gt; GetPeeringServiceCountriesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.GetPeeringServiceCountriesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPeeringServiceCountriesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PeeringServiceCountry)" />
      <MemberSignature Language="F#" Value="abstract member GetPeeringServiceCountriesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceCountry&gt;&#xA;override this.GetPeeringServiceCountriesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceCountry&gt;" Usage="mockablePeeringSubscriptionResource.GetPeeringServiceCountriesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceCountry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the available countries for peering service.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServiceCountries</description></item><item><term>Operation Id</term><description>PeeringServiceCountries_List</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Peering.Models.PeeringServiceCountry" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringServiceLocations">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceLocation&gt; GetPeeringServiceLocations (string country = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Peering.Models.PeeringServiceLocation&gt; GetPeeringServiceLocations(string country, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.GetPeeringServiceLocations(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPeeringServiceLocations (Optional country As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PeeringServiceLocation)" />
      <MemberSignature Language="F#" Value="abstract member GetPeeringServiceLocations : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceLocation&gt;&#xA;override this.GetPeeringServiceLocations : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceLocation&gt;" Usage="mockablePeeringSubscriptionResource.GetPeeringServiceLocations (country, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceLocation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="country" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="country"> The country of interest, in which the locations are to be present. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the available locations for peering service.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServiceLocations</description></item><item><term>Operation Id</term><description>PeeringServiceLocations_List</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Peering.Models.PeeringServiceLocation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringServiceLocationsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceLocation&gt; GetPeeringServiceLocationsAsync (string country = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Peering.Models.PeeringServiceLocation&gt; GetPeeringServiceLocationsAsync(string country, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.GetPeeringServiceLocationsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPeeringServiceLocationsAsync (Optional country As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PeeringServiceLocation)" />
      <MemberSignature Language="F#" Value="abstract member GetPeeringServiceLocationsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceLocation&gt;&#xA;override this.GetPeeringServiceLocationsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceLocation&gt;" Usage="mockablePeeringSubscriptionResource.GetPeeringServiceLocationsAsync (country, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceLocation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="country" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="country"> The country of interest, in which the locations are to be present. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the available locations for peering service.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServiceLocations</description></item><item><term>Operation Id</term><description>PeeringServiceLocations_List</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Peering.Models.PeeringServiceLocation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringServiceProviders">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProvider&gt; GetPeeringServiceProviders (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Peering.Models.PeeringServiceProvider&gt; GetPeeringServiceProviders(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.GetPeeringServiceProviders(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPeeringServiceProviders (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PeeringServiceProvider)" />
      <MemberSignature Language="F#" Value="abstract member GetPeeringServiceProviders : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProvider&gt;&#xA;override this.GetPeeringServiceProviders : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProvider&gt;" Usage="mockablePeeringSubscriptionResource.GetPeeringServiceProviders cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProvider&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the available peering service locations for the specified kind of peering.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServiceProviders</description></item><item><term>Operation Id</term><description>PeeringServiceProviders_List</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Peering.Models.PeeringServiceProvider" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringServiceProvidersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProvider&gt; GetPeeringServiceProvidersAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Peering.Models.PeeringServiceProvider&gt; GetPeeringServiceProvidersAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.GetPeeringServiceProvidersAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPeeringServiceProvidersAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PeeringServiceProvider)" />
      <MemberSignature Language="F#" Value="abstract member GetPeeringServiceProvidersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProvider&gt;&#xA;override this.GetPeeringServiceProvidersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProvider&gt;" Usage="mockablePeeringSubscriptionResource.GetPeeringServiceProvidersAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProvider&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the available peering service locations for the specified kind of peering.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServiceProviders</description></item><item><term>Operation Id</term><description>PeeringServiceProviders_List</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Peering.Models.PeeringServiceProvider" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringServices">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Peering.PeeringServiceResource&gt; GetPeeringServices (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Peering.PeeringServiceResource&gt; GetPeeringServices(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.GetPeeringServices(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPeeringServices (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PeeringServiceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPeeringServices : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Peering.PeeringServiceResource&gt;&#xA;override this.GetPeeringServices : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Peering.PeeringServiceResource&gt;" Usage="mockablePeeringSubscriptionResource.GetPeeringServices cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Peering.PeeringServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the peerings under the given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServices</description></item><item><term>Operation Id</term><description>PeeringServices_ListBySubscription</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Peering.PeeringServiceResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Peering.PeeringServiceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringServicesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.PeeringServiceResource&gt; GetPeeringServicesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Peering.PeeringServiceResource&gt; GetPeeringServicesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.GetPeeringServicesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPeeringServicesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PeeringServiceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPeeringServicesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.PeeringServiceResource&gt;&#xA;override this.GetPeeringServicesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.PeeringServiceResource&gt;" Usage="mockablePeeringSubscriptionResource.GetPeeringServicesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.PeeringServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the peerings under the given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServices</description></item><item><term>Operation Id</term><description>PeeringServices_ListBySubscription</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Peering.PeeringServiceResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Peering.PeeringServiceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializePeeringServiceConnectionMonitor">
      <MemberSignature Language="C#" Value="public virtual Azure.Response InitializePeeringServiceConnectionMonitor (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response InitializePeeringServiceConnectionMonitor(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.InitializePeeringServiceConnectionMonitor(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InitializePeeringServiceConnectionMonitor (Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member InitializePeeringServiceConnectionMonitor : System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.InitializePeeringServiceConnectionMonitor : System.Threading.CancellationToken -&gt; Azure.Response" Usage="mockablePeeringSubscriptionResource.InitializePeeringServiceConnectionMonitor cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Initialize Peering Service for Connection Monitor functionality
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Peering/initializeConnectionMonitor</description></item><item><term>Operation Id</term><description>PeeringServices_InitializeConnectionMonitor</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Peering.PeeringServiceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializePeeringServiceConnectionMonitorAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; InitializePeeringServiceConnectionMonitorAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; InitializePeeringServiceConnectionMonitorAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.InitializePeeringServiceConnectionMonitorAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InitializePeeringServiceConnectionMonitorAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member InitializePeeringServiceConnectionMonitorAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.InitializePeeringServiceConnectionMonitorAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="mockablePeeringSubscriptionResource.InitializePeeringServiceConnectionMonitorAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Initialize Peering Service for Connection Monitor functionality
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Peering/initializeConnectionMonitor</description></item><item><term>Operation Id</term><description>PeeringServices_InitializeConnectionMonitor</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Peering.PeeringServiceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeLookingGlass">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt; InvokeLookingGlass (Azure.ResourceManager.Peering.Models.LookingGlassCommand command, Azure.ResourceManager.Peering.Models.LookingGlassSourceType sourceType, string sourceLocation, string destinationIP, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt; InvokeLookingGlass(valuetype Azure.ResourceManager.Peering.Models.LookingGlassCommand command, valuetype Azure.ResourceManager.Peering.Models.LookingGlassSourceType sourceType, string sourceLocation, string destinationIP, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.InvokeLookingGlass(Azure.ResourceManager.Peering.Models.LookingGlassCommand,Azure.ResourceManager.Peering.Models.LookingGlassSourceType,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InvokeLookingGlass (command As LookingGlassCommand, sourceType As LookingGlassSourceType, sourceLocation As String, destinationIP As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of LookingGlassOutput)" />
      <MemberSignature Language="F#" Value="abstract member InvokeLookingGlass : Azure.ResourceManager.Peering.Models.LookingGlassCommand * Azure.ResourceManager.Peering.Models.LookingGlassSourceType * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt;&#xA;override this.InvokeLookingGlass : Azure.ResourceManager.Peering.Models.LookingGlassCommand * Azure.ResourceManager.Peering.Models.LookingGlassSourceType * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt;" Usage="mockablePeeringSubscriptionResource.InvokeLookingGlass (command, sourceType, sourceLocation, destinationIP, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Azure.ResourceManager.Peering.Models.LookingGlassCommand" />
        <Parameter Name="sourceType" Type="Azure.ResourceManager.Peering.Models.LookingGlassSourceType" />
        <Parameter Name="sourceLocation" Type="System.String" />
        <Parameter Name="destinationIP" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="command"> The command to be executed: ping, traceroute, bgpRoute. </param>
        <param name="sourceType"> The type of the source: Edge site or Azure Region. </param>
        <param name="sourceLocation"> The location of the source. </param>
        <param name="destinationIP"> The IP address of the destination. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Run looking glass functionality
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Peering/lookingGlass</description></item><item><term>Operation Id</term><description>LookingGlass_Invoke</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceLocation" /> or <paramref name="destinationIP" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="InvokeLookingGlassAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt;&gt; InvokeLookingGlassAsync (Azure.ResourceManager.Peering.Models.LookingGlassCommand command, Azure.ResourceManager.Peering.Models.LookingGlassSourceType sourceType, string sourceLocation, string destinationIP, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt;&gt; InvokeLookingGlassAsync(valuetype Azure.ResourceManager.Peering.Models.LookingGlassCommand command, valuetype Azure.ResourceManager.Peering.Models.LookingGlassSourceType sourceType, string sourceLocation, string destinationIP, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.Mocking.MockablePeeringSubscriptionResource.InvokeLookingGlassAsync(Azure.ResourceManager.Peering.Models.LookingGlassCommand,Azure.ResourceManager.Peering.Models.LookingGlassSourceType,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InvokeLookingGlassAsync (command As LookingGlassCommand, sourceType As LookingGlassSourceType, sourceLocation As String, destinationIP As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of LookingGlassOutput))" />
      <MemberSignature Language="F#" Value="abstract member InvokeLookingGlassAsync : Azure.ResourceManager.Peering.Models.LookingGlassCommand * Azure.ResourceManager.Peering.Models.LookingGlassSourceType * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt;&gt;&#xA;override this.InvokeLookingGlassAsync : Azure.ResourceManager.Peering.Models.LookingGlassCommand * Azure.ResourceManager.Peering.Models.LookingGlassSourceType * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt;&gt;" Usage="mockablePeeringSubscriptionResource.InvokeLookingGlassAsync (command, sourceType, sourceLocation, destinationIP, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Azure.ResourceManager.Peering.Models.LookingGlassCommand" />
        <Parameter Name="sourceType" Type="Azure.ResourceManager.Peering.Models.LookingGlassSourceType" />
        <Parameter Name="sourceLocation" Type="System.String" />
        <Parameter Name="destinationIP" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="command"> The command to be executed: ping, traceroute, bgpRoute. </param>
        <param name="sourceType"> The type of the source: Edge site or Azure Region. </param>
        <param name="sourceLocation"> The location of the source. </param>
        <param name="destinationIP"> The IP address of the destination. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Run looking glass functionality
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Peering/lookingGlass</description></item><item><term>Operation Id</term><description>LookingGlass_Invoke</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceLocation" /> or <paramref name="destinationIP" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
