<Type Name="TaskGroupBase&lt;TaskResultT&gt;" FullName="Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.TaskGroupBase&lt;TaskResultT&gt;">
  <TypeSignature Language="C#" Value="public abstract class TaskGroupBase&lt;TaskResultT&gt; : Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskGroup&lt;TaskResultT,Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskItem&lt;TaskResultT&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TaskGroupBase`1&lt;TaskResultT&gt; extends System.Object implements class Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskGroup`2&lt;!TaskResultT, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskItem`1&lt;!TaskResultT&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.TaskGroupBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TaskGroupBase(Of TaskResultT)&#xA;Implements ITaskGroup(Of TaskResultT, ITaskItem(Of TaskResultT))" />
  <TypeSignature Language="F#" Value="type TaskGroupBase&lt;'askResultT&gt; = class&#xA;    interface ITaskGroup&lt;'askResultT, ITaskItem&lt;'askResultT&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TaskResultT" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskGroup&lt;TaskResultT,Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskItem&lt;TaskResultT&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TaskResultT">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskGroupBase (string rootTaskItemId, Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskItem&lt;TaskResultT&gt; rootTaskItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string rootTaskItemId, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskItem`1&lt;!TaskResultT&gt; rootTaskItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.TaskGroupBase`1.#ctor(System.String,Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskItem{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootTaskItemId As String, rootTaskItem As ITaskItem(Of TaskResultT))" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.TaskGroupBase&lt;'askResultT&gt; : string * Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskItem&lt;'askResultT&gt; -&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.TaskGroupBase&lt;'askResultT&gt;" Usage="new Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.TaskGroupBase&lt;'askResultT&gt; (rootTaskItemId, rootTaskItem)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootTaskItemId" Type="System.String" />
        <Parameter Name="rootTaskItem" Type="Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskItem&lt;TaskResultT&gt;" />
      </Parameters>
      <Docs>
        <param name="rootTaskItemId">To be added.</param>
        <param name="rootTaskItem">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DAG">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGraph&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskItem&lt;TaskResultT&gt;,Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGNode&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskItem&lt;TaskResultT&gt;&gt;&gt; DAG { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGraph`2&lt;class Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskItem`1&lt;!TaskResultT&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGNode`1&lt;class Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskItem`1&lt;!TaskResultT&gt;&gt;&gt; DAG" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.TaskGroupBase`1.DAG" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DAG As DAGraph(Of ITaskItem(Of TaskResultT), DAGNode(Of ITaskItem(Of TaskResultT)))" />
      <MemberSignature Language="F#" Value="member this.DAG : Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGraph&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskItem&lt;'askResultT&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGNode&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskItem&lt;'askResultT&gt;&gt;&gt;" Usage="Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.TaskGroupBase&lt;'askResultT&gt;.DAG" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGraph&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskItem&lt;TaskResultT&gt;,Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGNode&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskItem&lt;TaskResultT&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ExecuteAsync (System.Threading.CancellationToken cancellationToken, bool multiThreaded);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ExecuteAsync(valuetype System.Threading.CancellationToken cancellationToken, bool multiThreaded) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.TaskGroupBase`1.ExecuteAsync(System.Threading.CancellationToken,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ExecuteAsync : System.Threading.CancellationToken * bool -&gt; System.Threading.Tasks.Task&#xA;override this.ExecuteAsync : System.Threading.CancellationToken * bool -&gt; System.Threading.Tasks.Task" Usage="taskGroupBase.ExecuteAsync (cancellationToken, multiThreaded)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskGroup`2.ExecuteAsync(System.Threading.CancellationToken,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="multiThreaded" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Enable cancellation</param>
        <param name="multiThreaded"></param>
        <summary>
            Executes the group of tasks that creates a set of dependency resources and eventually
            the root resource.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPreparer">
      <MemberSignature Language="C#" Value="public bool IsPreparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPreparer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.TaskGroupBase`1.IsPreparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPreparer As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsPreparer : bool" Usage="Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.TaskGroupBase&lt;'askResultT&gt;.IsPreparer" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskGroup`2.IsPreparer</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskGroup&lt;TaskResultT,Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskItem&lt;TaskResultT&gt;&gt; parentTaskGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Merge(class Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskGroup`2&lt;!TaskResultT, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskItem`1&lt;!TaskResultT&gt;&gt; parentTaskGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.TaskGroupBase`1.Merge(Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskGroup{`0,Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskItem{`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Merge (parentTaskGroup As ITaskGroup(Of TaskResultT, ITaskItem(Of TaskResultT)))" />
      <MemberSignature Language="F#" Value="abstract member Merge : Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskGroup&lt;'askResultT, Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskItem&lt;'askResultT&gt;&gt; -&gt; unit&#xA;override this.Merge : Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskGroup&lt;'askResultT, Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskItem&lt;'askResultT&gt;&gt; -&gt; unit" Usage="taskGroupBase.Merge parentTaskGroup" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskGroup`2.Merge(Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskGroup{`0,`1})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentTaskGroup" Type="Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskGroup&lt;TaskResultT,Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskItem&lt;TaskResultT&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="parentTaskGroup">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.TaskGroupBase`1.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Sub Prepare ()" />
      <MemberSignature Language="F#" Value="abstract member Prepare : unit -&gt; unit&#xA;override this.Prepare : unit -&gt; unit" Usage="taskGroupBase.Prepare " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskGroup`2.Prepare</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskResult">
      <MemberSignature Language="C#" Value="public TaskResultT TaskResult (string taskId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TaskResultT TaskResult(string taskId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.TaskGroupBase`1.TaskResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TaskResult (taskId As String) As TaskResultT" />
      <MemberSignature Language="F#" Value="abstract member TaskResult : string -&gt; 'askResultT&#xA;override this.TaskResult : string -&gt; 'askResultT" Usage="taskGroupBase.TaskResult taskId" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.ITaskGroup`2.TaskResult(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TaskResultT</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="taskId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>