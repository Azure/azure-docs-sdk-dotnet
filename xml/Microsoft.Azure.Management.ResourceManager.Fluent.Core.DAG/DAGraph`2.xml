<Type Name="DAGraph&lt;NodeDataT,NodeT&gt;" FullName="Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGraph&lt;NodeDataT,NodeT&gt;">
  <TypeSignature Language="C#" Value="public class DAGraph&lt;NodeDataT,NodeT&gt; : Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.Graph&lt;NodeDataT,NodeT&gt; where NodeT : DAGNode&lt;NodeDataT&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DAGraph`2&lt;NodeDataT, (class Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGNode`1&lt;!NodeDataT&gt;) NodeT&gt; extends Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.Graph`2&lt;!NodeDataT, !NodeT&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGraph`2" />
  <TypeSignature Language="VB.NET" Value="Public Class DAGraph(Of NodeDataT, NodeT)&#xA;Inherits Graph(Of NodeDataT, NodeT)" />
  <TypeSignature Language="F#" Value="type DAGraph&lt;'NodeDataT, 'NodeT (requires 'NodeT :&gt; DAGNode&lt;'NodeDataT&gt;)&gt; = class&#xA;    inherit Graph&lt;'NodeDataT, 'NodeT (requires 'NodeT :&gt; DAGNode&lt;'NodeDataT&gt;)&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="NodeDataT" />
    <TypeParameter Name="NodeT">
      <Constraints>
        <BaseTypeName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGNode&lt;NodeDataT&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.Graph&lt;NodeDataT,NodeT&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="NodeDataT">NodeDataT</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="NodeT">NodeT</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="NodeDataT">To be added.</typeparam>
    <typeparam name="NodeT">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DAGraph (NodeT rootNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!NodeT rootNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGraph`2.#ctor(`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootNode As NodeT)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGraph&lt;'NodeDataT, 'NodeT (requires 'NodeT :&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGNode&lt;'NodeDataT&gt;)&gt; : 'NodeT -&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGraph&lt;'NodeDataT, 'NodeT (requires 'NodeT :&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGNode&lt;'NodeDataT&gt;)&gt;" Usage="new Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGraph&lt;'NodeDataT, 'NodeT (requires 'NodeT :&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGNode&lt;'NodeDataT&gt;)&gt; rootNode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootNode" Type="NodeT" />
      </Parameters>
      <Docs>
        <param name="rootNode">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNext">
      <MemberSignature Language="C#" Value="public NodeT GetNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !NodeT GetNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGraph`2.GetNext" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNext () As NodeT" />
      <MemberSignature Language="F#" Value="member this.GetNext : unit -&gt; 'NodeT" Usage="dAGraph.GetNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NodeT</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNodeData">
      <MemberSignature Language="C#" Value="public NodeDataT GetNodeData (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !NodeDataT GetNodeData(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGraph`2.GetNodeData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodeData (key As String) As NodeDataT" />
      <MemberSignature Language="F#" Value="member this.GetNodeData : string -&gt; 'NodeDataT" Usage="dAGraph.GetNodeData key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NodeDataT</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPreparer">
      <MemberSignature Language="C#" Value="public bool IsPreparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPreparer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGraph`2.IsPreparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPreparer As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsPreparer : bool" Usage="Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGraph&lt;'NodeDataT, 'NodeT (requires 'NodeT :&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGNode&lt;'NodeDataT&gt;)&gt;.IsPreparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRootNode">
      <MemberSignature Language="C#" Value="public bool IsRootNode (NodeT node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRootNode(!NodeT node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGraph`2.IsRootNode(`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRootNode (node As NodeT) As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsRootNode : 'NodeT -&gt; bool" Usage="dAGraph.IsRootNode node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="NodeT" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGraph&lt;NodeDataT,NodeT&gt; parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Merge(class Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGraph`2&lt;!NodeDataT, !NodeT&gt; parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGraph`2.Merge(Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGraph{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Merge (parent As DAGraph(Of NodeDataT, NodeT))" />
      <MemberSignature Language="F#" Value="member this.Merge : Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGraph&lt;'NodeDataT, 'NodeT (requires 'NodeT :&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGNode&lt;'NodeDataT&gt;)&gt; -&gt; unit" Usage="dAGraph.Merge parent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGraph&lt;NodeDataT,NodeT&gt;" />
      </Parameters>
      <Docs>
        <param name="parent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGraph`2.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Sub Prepare ()" />
      <MemberSignature Language="F#" Value="member this.Prepare : unit -&gt; unit" Usage="dAGraph.Prepare " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportCompleted">
      <MemberSignature Language="C#" Value="public void ReportCompleted (NodeT dependency);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReportCompleted(!NodeT dependency) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.DAG.DAGraph`2.ReportCompleted(`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportCompleted (dependency As NodeT)" />
      <MemberSignature Language="F#" Value="member this.ReportCompleted : 'NodeT -&gt; unit" Usage="dAGraph.ReportCompleted dependency" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependency" Type="NodeT" />
      </Parameters>
      <Docs>
        <param name="dependency">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>