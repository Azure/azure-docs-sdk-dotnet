<Type Name="ArmScVmmModelFactory" FullName="Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmScVmmModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmScVmmModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmScVmmModelFactory" />
  <TypeSignature Language="F#" Value="type ArmScVmmModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CloudInventoryItem">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ScVmm.Models.CloudInventoryItem CloudInventoryItem (string managedResourceId = default, string uuid = default, string inventoryItemName = default, Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ScVmm.Models.CloudInventoryItem CloudInventoryItem(string managedResourceId, string uuid, string inventoryItemName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.CloudInventoryItem(System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CloudInventoryItem (Optional managedResourceId As String = Nothing, Optional uuid As String = Nothing, Optional inventoryItemName As String = Nothing, Optional provisioningState As Nullable(Of ScVmmProvisioningState) = Nothing) As CloudInventoryItem" />
      <MemberSignature Language="F#" Value="static member CloudInventoryItem : string * string * string * Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; -&gt; Azure.ResourceManager.ScVmm.Models.CloudInventoryItem" Usage="Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.CloudInventoryItem (managedResourceId, uuid, inventoryItemName, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.Models.CloudInventoryItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managedResourceId" Type="System.String" />
        <Parameter Name="uuid" Type="System.String" />
        <Parameter Name="inventoryItemName" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="managedResourceId"> Gets the tracked resource id corresponding to the inventory resource. </param>
        <param name="uuid"> Gets the UUID (which is assigned by VMM) for the inventory item. </param>
        <param name="inventoryItemName"> Gets the Managed Object name in VMM for the inventory item. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ScVmm.Models.CloudInventoryItem" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ScVmm.Models.CloudInventoryItem" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OSProfileForVmInstance">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ScVmm.Models.OSProfileForVmInstance OSProfileForVmInstance (string adminPassword = default, string computerName = default, Azure.ResourceManager.ScVmm.Models.ScVmmOSType? osType = default, string osSku = default, string osVersion = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ScVmm.Models.OSProfileForVmInstance OSProfileForVmInstance(string adminPassword, string computerName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.ScVmmOSType&gt; osType, string osSku, string osVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.OSProfileForVmInstance(System.String,System.String,System.Nullable{Azure.ResourceManager.ScVmm.Models.ScVmmOSType},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OSProfileForVmInstance (Optional adminPassword As String = Nothing, Optional computerName As String = Nothing, Optional osType As Nullable(Of ScVmmOSType) = Nothing, Optional osSku As String = Nothing, Optional osVersion As String = Nothing) As OSProfileForVmInstance" />
      <MemberSignature Language="F#" Value="static member OSProfileForVmInstance : string * string * Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmOSType&gt; * string * string -&gt; Azure.ResourceManager.ScVmm.Models.OSProfileForVmInstance" Usage="Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.OSProfileForVmInstance (adminPassword, computerName, osType, osSku, osVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.Models.OSProfileForVmInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adminPassword" Type="System.String" />
        <Parameter Name="computerName" Type="System.String" />
        <Parameter Name="osType" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmOSType&gt;" />
        <Parameter Name="osSku" Type="System.String" />
        <Parameter Name="osVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="adminPassword"> Admin password of the virtual machine. </param>
        <param name="computerName"> Gets or sets computer name. </param>
        <param name="osType"> Gets the type of the os. </param>
        <param name="osSku"> Gets os sku. </param>
        <param name="osVersion"> Gets os version. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ScVmm.Models.OSProfileForVmInstance" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ScVmm.Models.OSProfileForVmInstance" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScVmmAvailabilitySetData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ScVmm.ScVmmAvailabilitySetData ScVmmAvailabilitySetData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation = default, string availabilitySetName = default, Azure.Core.ResourceIdentifier vmmServerId = default, Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ScVmm.ScVmmAvailabilitySetData ScVmmAvailabilitySetData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation, string availabilitySetName, class Azure.Core.ResourceIdentifier vmmServerId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmAvailabilitySetData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.String,Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScVmmAvailabilitySetData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional extendedLocation As ExtendedLocation = Nothing, Optional availabilitySetName As String = Nothing, Optional vmmServerId As ResourceIdentifier = Nothing, Optional provisioningState As Nullable(Of ScVmmProvisioningState) = Nothing) As ScVmmAvailabilitySetData" />
      <MemberSignature Language="F#" Value="static member ScVmmAvailabilitySetData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.Resources.Models.ExtendedLocation * string * Azure.Core.ResourceIdentifier * Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; -&gt; Azure.ResourceManager.ScVmm.ScVmmAvailabilitySetData" Usage="Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmAvailabilitySetData (id, name, resourceType, systemData, tags, location, extendedLocation, availabilitySetName, vmmServerId, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.ScVmmAvailabilitySetData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="extendedLocation" Type="Azure.ResourceManager.Resources.Models.ExtendedLocation" />
        <Parameter Name="availabilitySetName" Type="System.String" />
        <Parameter Name="vmmServerId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="extendedLocation"> The extended location. </param>
        <param name="availabilitySetName"> Name of the availability set. </param>
        <param name="vmmServerId"> ARM Id of the vmmServer resource in which this resource resides. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ScVmm.ScVmmAvailabilitySetData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ScVmm.ScVmmAvailabilitySetData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScVmmCloudCapacity">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ScVmm.Models.ScVmmCloudCapacity ScVmmCloudCapacity (long? cpuCount = default, long? memoryMB = default, long? vmCount = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ScVmm.Models.ScVmmCloudCapacity ScVmmCloudCapacity(valuetype System.Nullable`1&lt;int64&gt; cpuCount, valuetype System.Nullable`1&lt;int64&gt; memoryMB, valuetype System.Nullable`1&lt;int64&gt; vmCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmCloudCapacity(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScVmmCloudCapacity (Optional cpuCount As Nullable(Of Long) = Nothing, Optional memoryMB As Nullable(Of Long) = Nothing, Optional vmCount As Nullable(Of Long) = Nothing) As ScVmmCloudCapacity" />
      <MemberSignature Language="F#" Value="static member ScVmmCloudCapacity : Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; -&gt; Azure.ResourceManager.ScVmm.Models.ScVmmCloudCapacity" Usage="Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmCloudCapacity (cpuCount, memoryMB, vmCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.Models.ScVmmCloudCapacity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cpuCount" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="memoryMB" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="vmCount" Type="System.Nullable&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="cpuCount"> CPUCount specifies the maximum number of CPUs that can be allocated in the cloud. </param>
        <param name="memoryMB"> MemoryMB specifies a memory usage limit in megabytes. </param>
        <param name="vmCount"> VMCount gives the max number of VMs that can be deployed in the cloud. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ScVmm.Models.ScVmmCloudCapacity" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ScVmm.Models.ScVmmCloudCapacity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScVmmCloudData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ScVmm.ScVmmCloudData ScVmmCloudData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation = default, string inventoryItemId = default, string uuid = default, Azure.Core.ResourceIdentifier vmmServerId = default, string cloudName = default, Azure.ResourceManager.ScVmm.Models.ScVmmCloudCapacity cloudCapacity = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmStorageQosPolicy&gt; storageQosPolicies = default, Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ScVmm.ScVmmCloudData ScVmmCloudData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation, string inventoryItemId, string uuid, class Azure.Core.ResourceIdentifier vmmServerId, string cloudName, class Azure.ResourceManager.ScVmm.Models.ScVmmCloudCapacity cloudCapacity, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ScVmm.Models.ScVmmStorageQosPolicy&gt; storageQosPolicies, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmCloudData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.String,System.String,Azure.Core.ResourceIdentifier,System.String,Azure.ResourceManager.ScVmm.Models.ScVmmCloudCapacity,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ScVmm.Models.ScVmmStorageQosPolicy},System.Nullable{Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScVmmCloudData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional extendedLocation As ExtendedLocation = Nothing, Optional inventoryItemId As String = Nothing, Optional uuid As String = Nothing, Optional vmmServerId As ResourceIdentifier = Nothing, Optional cloudName As String = Nothing, Optional cloudCapacity As ScVmmCloudCapacity = Nothing, Optional storageQosPolicies As IEnumerable(Of ScVmmStorageQosPolicy) = Nothing, Optional provisioningState As Nullable(Of ScVmmProvisioningState) = Nothing) As ScVmmCloudData" />
      <MemberSignature Language="F#" Value="static member ScVmmCloudData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.Resources.Models.ExtendedLocation * string * string * Azure.Core.ResourceIdentifier * string * Azure.ResourceManager.ScVmm.Models.ScVmmCloudCapacity * seq&lt;Azure.ResourceManager.ScVmm.Models.ScVmmStorageQosPolicy&gt; * Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; -&gt; Azure.ResourceManager.ScVmm.ScVmmCloudData" Usage="Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmCloudData (id, name, resourceType, systemData, tags, location, extendedLocation, inventoryItemId, uuid, vmmServerId, cloudName, cloudCapacity, storageQosPolicies, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.ScVmmCloudData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="extendedLocation" Type="Azure.ResourceManager.Resources.Models.ExtendedLocation" />
        <Parameter Name="inventoryItemId" Type="System.String" />
        <Parameter Name="uuid" Type="System.String" />
        <Parameter Name="vmmServerId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="cloudName" Type="System.String" />
        <Parameter Name="cloudCapacity" Type="Azure.ResourceManager.ScVmm.Models.ScVmmCloudCapacity" />
        <Parameter Name="storageQosPolicies" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmStorageQosPolicy&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="extendedLocation"> The extended location. </param>
        <param name="inventoryItemId"> Gets or sets the inventory Item ID for the resource. </param>
        <param name="uuid"> Unique ID of the cloud. </param>
        <param name="vmmServerId"> ARM Id of the vmmServer resource in which this resource resides. </param>
        <param name="cloudName"> Name of the cloud in VMMServer. </param>
        <param name="cloudCapacity"> Capacity of the cloud. </param>
        <param name="storageQosPolicies"> List of QoS policies available for the cloud. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ScVmm.ScVmmCloudData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ScVmm.ScVmmCloudData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScVmmGuestAgentData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ScVmm.ScVmmGuestAgentData ScVmmGuestAgentData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string uuid = default, Azure.ResourceManager.ScVmm.Models.ScVmmGuestCredential credentials = default, string httpsProxy = default, Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningAction? provisioningAction = default, string status = default, string customResourceName = default, Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ScVmm.ScVmmGuestAgentData ScVmmGuestAgentData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string uuid, class Azure.ResourceManager.ScVmm.Models.ScVmmGuestCredential credentials, string httpsProxy, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningAction&gt; provisioningAction, string status, string customResourceName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmGuestAgentData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.ResourceManager.ScVmm.Models.ScVmmGuestCredential,System.String,System.Nullable{Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningAction},System.String,System.String,System.Nullable{Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScVmmGuestAgentData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional uuid As String = Nothing, Optional credentials As ScVmmGuestCredential = Nothing, Optional httpsProxy As String = Nothing, Optional provisioningAction As Nullable(Of ScVmmProvisioningAction) = Nothing, Optional status As String = Nothing, Optional customResourceName As String = Nothing, Optional provisioningState As Nullable(Of ScVmmProvisioningState) = Nothing) As ScVmmGuestAgentData" />
      <MemberSignature Language="F#" Value="static member ScVmmGuestAgentData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Azure.ResourceManager.ScVmm.Models.ScVmmGuestCredential * string * Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningAction&gt; * string * string * Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; -&gt; Azure.ResourceManager.ScVmm.ScVmmGuestAgentData" Usage="Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmGuestAgentData (id, name, resourceType, systemData, uuid, credentials, httpsProxy, provisioningAction, status, customResourceName, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.ScVmmGuestAgentData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="uuid" Type="System.String" />
        <Parameter Name="credentials" Type="Azure.ResourceManager.ScVmm.Models.ScVmmGuestCredential" />
        <Parameter Name="httpsProxy" Type="System.String" />
        <Parameter Name="provisioningAction" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningAction&gt;" />
        <Parameter Name="status" Type="System.String" />
        <Parameter Name="customResourceName" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="uuid"> Gets a unique identifier for this resource. </param>
        <param name="credentials"> Username / Password Credentials to provision guest agent. </param>
        <param name="httpsProxy"> HTTP Proxy configuration for the VM. </param>
        <param name="provisioningAction"> Gets or sets the guest agent provisioning action. </param>
        <param name="status"> Gets the guest agent status. </param>
        <param name="customResourceName"> Gets the name of the corresponding resource in Kubernetes. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ScVmm.ScVmmGuestAgentData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ScVmm.ScVmmGuestAgentData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScVmmHardwareProfile">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ScVmm.Models.ScVmmHardwareProfile ScVmmHardwareProfile (int? memoryMB = default, int? cpuCount = default, Azure.ResourceManager.ScVmm.Models.LimitCpuForMigration? limitCpuForMigration = default, Azure.ResourceManager.ScVmm.Models.DynamicMemoryEnabled? dynamicMemoryEnabled = default, int? dynamicMemoryMaxMB = default, int? dynamicMemoryMinMB = default, Azure.ResourceManager.ScVmm.Models.IsHighlyAvailable? isHighlyAvailable = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ScVmm.Models.ScVmmHardwareProfile ScVmmHardwareProfile(valuetype System.Nullable`1&lt;int32&gt; memoryMB, valuetype System.Nullable`1&lt;int32&gt; cpuCount, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.LimitCpuForMigration&gt; limitCpuForMigration, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.DynamicMemoryEnabled&gt; dynamicMemoryEnabled, valuetype System.Nullable`1&lt;int32&gt; dynamicMemoryMaxMB, valuetype System.Nullable`1&lt;int32&gt; dynamicMemoryMinMB, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.IsHighlyAvailable&gt; isHighlyAvailable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmHardwareProfile(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.ScVmm.Models.LimitCpuForMigration},System.Nullable{Azure.ResourceManager.ScVmm.Models.DynamicMemoryEnabled},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.ScVmm.Models.IsHighlyAvailable})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScVmmHardwareProfile (Optional memoryMB As Nullable(Of Integer) = Nothing, Optional cpuCount As Nullable(Of Integer) = Nothing, Optional limitCpuForMigration As Nullable(Of LimitCpuForMigration) = Nothing, Optional dynamicMemoryEnabled As Nullable(Of DynamicMemoryEnabled) = Nothing, Optional dynamicMemoryMaxMB As Nullable(Of Integer) = Nothing, Optional dynamicMemoryMinMB As Nullable(Of Integer) = Nothing, Optional isHighlyAvailable As Nullable(Of IsHighlyAvailable) = Nothing) As ScVmmHardwareProfile" />
      <MemberSignature Language="F#" Value="static member ScVmmHardwareProfile : Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.ScVmm.Models.LimitCpuForMigration&gt; * Nullable&lt;Azure.ResourceManager.ScVmm.Models.DynamicMemoryEnabled&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.ScVmm.Models.IsHighlyAvailable&gt; -&gt; Azure.ResourceManager.ScVmm.Models.ScVmmHardwareProfile" Usage="Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmHardwareProfile (memoryMB, cpuCount, limitCpuForMigration, dynamicMemoryEnabled, dynamicMemoryMaxMB, dynamicMemoryMinMB, isHighlyAvailable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.Models.ScVmmHardwareProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memoryMB" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cpuCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="limitCpuForMigration" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.LimitCpuForMigration&gt;" />
        <Parameter Name="dynamicMemoryEnabled" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.DynamicMemoryEnabled&gt;" />
        <Parameter Name="dynamicMemoryMaxMB" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="dynamicMemoryMinMB" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="isHighlyAvailable" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.IsHighlyAvailable&gt;" />
      </Parameters>
      <Docs>
        <param name="memoryMB"> MemoryMB is the size of a virtual machine's memory, in MB. </param>
        <param name="cpuCount"> Gets or sets the number of vCPUs for the vm. </param>
        <param name="limitCpuForMigration"> Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs. </param>
        <param name="dynamicMemoryEnabled"> Gets or sets a value indicating whether to enable dynamic memory or not. </param>
        <param name="dynamicMemoryMaxMB"> Gets or sets the max dynamic memory for the vm. </param>
        <param name="dynamicMemoryMinMB"> Gets or sets the min dynamic memory for the vm. </param>
        <param name="isHighlyAvailable"> Gets highly available property. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ScVmm.Models.ScVmmHardwareProfile" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ScVmm.Models.ScVmmHardwareProfile" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScVmmHybridIdentityMetadataData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ScVmm.ScVmmHybridIdentityMetadataData ScVmmHybridIdentityMetadataData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string resourceUid = default, string publicKey = default, Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ScVmm.ScVmmHybridIdentityMetadataData ScVmmHybridIdentityMetadataData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string resourceUid, string publicKey, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmHybridIdentityMetadataData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.Nullable{Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScVmmHybridIdentityMetadataData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional resourceUid As String = Nothing, Optional publicKey As String = Nothing, Optional provisioningState As Nullable(Of ScVmmProvisioningState) = Nothing) As ScVmmHybridIdentityMetadataData" />
      <MemberSignature Language="F#" Value="static member ScVmmHybridIdentityMetadataData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string * Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; -&gt; Azure.ResourceManager.ScVmm.ScVmmHybridIdentityMetadataData" Usage="Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmHybridIdentityMetadataData (id, name, resourceType, systemData, resourceUid, publicKey, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.ScVmmHybridIdentityMetadataData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="resourceUid" Type="System.String" />
        <Parameter Name="publicKey" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="resourceUid"> The unique identifier for the resource. </param>
        <param name="publicKey"> Gets or sets the Public Key. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ScVmm.ScVmmHybridIdentityMetadataData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ScVmm.ScVmmHybridIdentityMetadataData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScVmmInfrastructureProfile">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ScVmm.Models.ScVmmInfrastructureProfile ScVmmInfrastructureProfile (string inventoryItemId = default, Azure.Core.ResourceIdentifier vmmServerId = default, Azure.Core.ResourceIdentifier cloudId = default, Azure.Core.ResourceIdentifier templateId = default, string vmName = default, string uuid = default, Azure.ResourceManager.ScVmm.Models.ScVmmCheckpoint lastRestoredVmCheckpoint = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmCheckpoint&gt; checkpoints = default, string checkpointType = default, int? generation = default, string biosGuid = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ScVmm.Models.ScVmmInfrastructureProfile ScVmmInfrastructureProfile(string inventoryItemId, class Azure.Core.ResourceIdentifier vmmServerId, class Azure.Core.ResourceIdentifier cloudId, class Azure.Core.ResourceIdentifier templateId, string vmName, string uuid, class Azure.ResourceManager.ScVmm.Models.ScVmmCheckpoint lastRestoredVmCheckpoint, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ScVmm.Models.ScVmmCheckpoint&gt; checkpoints, string checkpointType, valuetype System.Nullable`1&lt;int32&gt; generation, string biosGuid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmInfrastructureProfile(System.String,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.String,System.String,Azure.ResourceManager.ScVmm.Models.ScVmmCheckpoint,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ScVmm.Models.ScVmmCheckpoint},System.String,System.Nullable{System.Int32},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScVmmInfrastructureProfile (Optional inventoryItemId As String = Nothing, Optional vmmServerId As ResourceIdentifier = Nothing, Optional cloudId As ResourceIdentifier = Nothing, Optional templateId As ResourceIdentifier = Nothing, Optional vmName As String = Nothing, Optional uuid As String = Nothing, Optional lastRestoredVmCheckpoint As ScVmmCheckpoint = Nothing, Optional checkpoints As IEnumerable(Of ScVmmCheckpoint) = Nothing, Optional checkpointType As String = Nothing, Optional generation As Nullable(Of Integer) = Nothing, Optional biosGuid As String = Nothing) As ScVmmInfrastructureProfile" />
      <MemberSignature Language="F#" Value="static member ScVmmInfrastructureProfile : string * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * string * string * Azure.ResourceManager.ScVmm.Models.ScVmmCheckpoint * seq&lt;Azure.ResourceManager.ScVmm.Models.ScVmmCheckpoint&gt; * string * Nullable&lt;int&gt; * string -&gt; Azure.ResourceManager.ScVmm.Models.ScVmmInfrastructureProfile" Usage="Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmInfrastructureProfile (inventoryItemId, vmmServerId, cloudId, templateId, vmName, uuid, lastRestoredVmCheckpoint, checkpoints, checkpointType, generation, biosGuid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.Models.ScVmmInfrastructureProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inventoryItemId" Type="System.String" />
        <Parameter Name="vmmServerId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="cloudId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="templateId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="vmName" Type="System.String" />
        <Parameter Name="uuid" Type="System.String" />
        <Parameter Name="lastRestoredVmCheckpoint" Type="Azure.ResourceManager.ScVmm.Models.ScVmmCheckpoint" />
        <Parameter Name="checkpoints" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmCheckpoint&gt;" />
        <Parameter Name="checkpointType" Type="System.String" />
        <Parameter Name="generation" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="biosGuid" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inventoryItemId"> Gets or sets the inventory Item ID for the resource. </param>
        <param name="vmmServerId"> ARM Id of the vmmServer resource in which this resource resides. </param>
        <param name="cloudId"> ARM Id of the cloud resource to use for deploying the vm. </param>
        <param name="templateId"> ARM Id of the template resource to use for deploying the vm. </param>
        <param name="vmName"> VMName is the name of VM on the SCVMM server. </param>
        <param name="uuid"> Unique ID of the virtual machine. </param>
        <param name="lastRestoredVmCheckpoint"> Last restored checkpoint in the vm. </param>
        <param name="checkpoints"> Checkpoints in the vm. </param>
        <param name="checkpointType"> Type of checkpoint supported for the vm. </param>
        <param name="generation"> Gets or sets the generation for the vm. </param>
        <param name="biosGuid"> Gets or sets the bios guid for the vm. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ScVmm.Models.ScVmmInfrastructureProfile" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ScVmm.Models.ScVmmInfrastructureProfile" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScVmmInventoryItemData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ScVmm.ScVmmInventoryItemData ScVmmInventoryItemData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.ScVmm.Models.ScVmmInventoryItemProperties properties = default, string kind = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ScVmm.ScVmmInventoryItemData ScVmmInventoryItemData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.ScVmm.Models.ScVmmInventoryItemProperties properties, string kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmInventoryItemData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.ScVmm.Models.ScVmmInventoryItemProperties,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScVmmInventoryItemData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional properties As ScVmmInventoryItemProperties = Nothing, Optional kind As String = Nothing) As ScVmmInventoryItemData" />
      <MemberSignature Language="F#" Value="static member ScVmmInventoryItemData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.ScVmm.Models.ScVmmInventoryItemProperties * string -&gt; Azure.ResourceManager.ScVmm.ScVmmInventoryItemData" Usage="Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmInventoryItemData (id, name, resourceType, systemData, properties, kind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.ScVmmInventoryItemData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="properties" Type="Azure.ResourceManager.ScVmm.Models.ScVmmInventoryItemProperties" />
        <Parameter Name="kind" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="properties">
            Resource properties.
            Please note <see cref="T:Azure.ResourceManager.ScVmm.Models.ScVmmInventoryItemProperties" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.ScVmm.Models.CloudInventoryItem" />, <see cref="T:Azure.ResourceManager.ScVmm.Models.VirtualMachineInventoryItem" />, <see cref="T:Azure.ResourceManager.ScVmm.Models.VirtualMachineTemplateInventoryItem" /> and <see cref="T:Azure.ResourceManager.ScVmm.Models.VirtualNetworkInventoryItem" />.
            </param>
        <param name="kind"> Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ScVmm.ScVmmInventoryItemData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ScVmm.ScVmmInventoryItemData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScVmmInventoryItemProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ScVmm.Models.ScVmmInventoryItemProperties ScVmmInventoryItemProperties (string inventoryType = default, string managedResourceId = default, string uuid = default, string inventoryItemName = default, Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ScVmm.Models.ScVmmInventoryItemProperties ScVmmInventoryItemProperties(string inventoryType, string managedResourceId, string uuid, string inventoryItemName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmInventoryItemProperties(System.String,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScVmmInventoryItemProperties (Optional inventoryType As String = Nothing, Optional managedResourceId As String = Nothing, Optional uuid As String = Nothing, Optional inventoryItemName As String = Nothing, Optional provisioningState As Nullable(Of ScVmmProvisioningState) = Nothing) As ScVmmInventoryItemProperties" />
      <MemberSignature Language="F#" Value="static member ScVmmInventoryItemProperties : string * string * string * string * Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; -&gt; Azure.ResourceManager.ScVmm.Models.ScVmmInventoryItemProperties" Usage="Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmInventoryItemProperties (inventoryType, managedResourceId, uuid, inventoryItemName, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.Models.ScVmmInventoryItemProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inventoryType" Type="System.String" />
        <Parameter Name="managedResourceId" Type="System.String" />
        <Parameter Name="uuid" Type="System.String" />
        <Parameter Name="inventoryItemName" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="inventoryType"> They inventory type. </param>
        <param name="managedResourceId"> Gets the tracked resource id corresponding to the inventory resource. </param>
        <param name="uuid"> Gets the UUID (which is assigned by VMM) for the inventory item. </param>
        <param name="inventoryItemName"> Gets the Managed Object name in VMM for the inventory item. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ScVmm.Models.ScVmmInventoryItemProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ScVmm.Models.ScVmmInventoryItemProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScVmmNetworkInterface">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ScVmm.Models.ScVmmNetworkInterface ScVmmNetworkInterface (string name = default, string displayName = default, System.Collections.Generic.IEnumerable&lt;string&gt; ipv4Addresses = default, System.Collections.Generic.IEnumerable&lt;string&gt; ipv6Addresses = default, string macAddress = default, Azure.Core.ResourceIdentifier virtualNetworkId = default, string networkName = default, Azure.ResourceManager.ScVmm.Models.AllocationMethod? ipv4AddressType = default, Azure.ResourceManager.ScVmm.Models.AllocationMethod? ipv6AddressType = default, Azure.ResourceManager.ScVmm.Models.AllocationMethod? macAddressType = default, string nicId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ScVmm.Models.ScVmmNetworkInterface ScVmmNetworkInterface(string name, string displayName, class System.Collections.Generic.IEnumerable`1&lt;string&gt; ipv4Addresses, class System.Collections.Generic.IEnumerable`1&lt;string&gt; ipv6Addresses, string macAddress, class Azure.Core.ResourceIdentifier virtualNetworkId, string networkName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.AllocationMethod&gt; ipv4AddressType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.AllocationMethod&gt; ipv6AddressType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.AllocationMethod&gt; macAddressType, string nicId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmNetworkInterface(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String,Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ResourceManager.ScVmm.Models.AllocationMethod},System.Nullable{Azure.ResourceManager.ScVmm.Models.AllocationMethod},System.Nullable{Azure.ResourceManager.ScVmm.Models.AllocationMethod},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScVmmNetworkInterface (Optional name As String = Nothing, Optional displayName As String = Nothing, Optional ipv4Addresses As IEnumerable(Of String) = Nothing, Optional ipv6Addresses As IEnumerable(Of String) = Nothing, Optional macAddress As String = Nothing, Optional virtualNetworkId As ResourceIdentifier = Nothing, Optional networkName As String = Nothing, Optional ipv4AddressType As Nullable(Of AllocationMethod) = Nothing, Optional ipv6AddressType As Nullable(Of AllocationMethod) = Nothing, Optional macAddressType As Nullable(Of AllocationMethod) = Nothing, Optional nicId As String = Nothing) As ScVmmNetworkInterface" />
      <MemberSignature Language="F#" Value="static member ScVmmNetworkInterface : string * string * seq&lt;string&gt; * seq&lt;string&gt; * string * Azure.Core.ResourceIdentifier * string * Nullable&lt;Azure.ResourceManager.ScVmm.Models.AllocationMethod&gt; * Nullable&lt;Azure.ResourceManager.ScVmm.Models.AllocationMethod&gt; * Nullable&lt;Azure.ResourceManager.ScVmm.Models.AllocationMethod&gt; * string -&gt; Azure.ResourceManager.ScVmm.Models.ScVmmNetworkInterface" Usage="Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmNetworkInterface (name, displayName, ipv4Addresses, ipv6Addresses, macAddress, virtualNetworkId, networkName, ipv4AddressType, ipv6AddressType, macAddressType, nicId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.Models.ScVmmNetworkInterface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="ipv4Addresses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="ipv6Addresses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="macAddress" Type="System.String" />
        <Parameter Name="virtualNetworkId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="networkName" Type="System.String" />
        <Parameter Name="ipv4AddressType" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.AllocationMethod&gt;" />
        <Parameter Name="ipv6AddressType" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.AllocationMethod&gt;" />
        <Parameter Name="macAddressType" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.AllocationMethod&gt;" />
        <Parameter Name="nicId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"> Gets or sets the name of the network interface. </param>
        <param name="displayName"> Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set. </param>
        <param name="ipv4Addresses"> Gets the nic ipv4 addresses. </param>
        <param name="ipv6Addresses"> Gets the nic ipv6 addresses. </param>
        <param name="macAddress"> Gets or sets the nic MAC address. </param>
        <param name="virtualNetworkId"> Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic. </param>
        <param name="networkName"> Gets the name of the virtual network in vmmServer that the nic is connected to. </param>
        <param name="ipv4AddressType"> Gets or sets the ipv4 address type. </param>
        <param name="ipv6AddressType"> Gets or sets the ipv6 address type. </param>
        <param name="macAddressType"> Gets or sets the mac address type. </param>
        <param name="nicId"> Gets or sets the nic id. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ScVmm.Models.ScVmmNetworkInterface" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ScVmm.Models.ScVmmNetworkInterface" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScVmmServerData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ScVmm.ScVmmServerData ScVmmServerData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation = default, Azure.ResourceManager.ScVmm.Models.VmmCredential credentials = default, string fqdn = default, int? port = default, string connectionStatus = default, string errorMessage = default, string uuid = default, string version = default, Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ScVmm.ScVmmServerData ScVmmServerData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation, class Azure.ResourceManager.ScVmm.Models.VmmCredential credentials, string fqdn, valuetype System.Nullable`1&lt;int32&gt; port, string connectionStatus, string errorMessage, string uuid, string version, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmServerData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Resources.Models.ExtendedLocation,Azure.ResourceManager.ScVmm.Models.VmmCredential,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScVmmServerData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional extendedLocation As ExtendedLocation = Nothing, Optional credentials As VmmCredential = Nothing, Optional fqdn As String = Nothing, Optional port As Nullable(Of Integer) = Nothing, Optional connectionStatus As String = Nothing, Optional errorMessage As String = Nothing, Optional uuid As String = Nothing, Optional version As String = Nothing, Optional provisioningState As Nullable(Of ScVmmProvisioningState) = Nothing) As ScVmmServerData" />
      <MemberSignature Language="F#" Value="static member ScVmmServerData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.Resources.Models.ExtendedLocation * Azure.ResourceManager.ScVmm.Models.VmmCredential * string * Nullable&lt;int&gt; * string * string * string * string * Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; -&gt; Azure.ResourceManager.ScVmm.ScVmmServerData" Usage="Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmServerData (id, name, resourceType, systemData, tags, location, extendedLocation, credentials, fqdn, port, connectionStatus, errorMessage, uuid, version, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.ScVmmServerData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="extendedLocation" Type="Azure.ResourceManager.Resources.Models.ExtendedLocation" />
        <Parameter Name="credentials" Type="Azure.ResourceManager.ScVmm.Models.VmmCredential" />
        <Parameter Name="fqdn" Type="System.String" />
        <Parameter Name="port" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="connectionStatus" Type="System.String" />
        <Parameter Name="errorMessage" Type="System.String" />
        <Parameter Name="uuid" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="extendedLocation"> The extended location. </param>
        <param name="credentials"> Credentials to connect to VMMServer. </param>
        <param name="fqdn"> Fqdn is the hostname/ip of the vmmServer. </param>
        <param name="port"> Port is the port on which the vmmServer is listening. </param>
        <param name="connectionStatus"> Gets the connection status to the vmmServer. </param>
        <param name="errorMessage"> Gets any error message if connection to vmmServer is having any issue. </param>
        <param name="uuid"> Unique ID of vmmServer. </param>
        <param name="version"> Version is the version of the vmmSever. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ScVmm.ScVmmServerData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ScVmm.ScVmmServerData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScVmmStorageQosPolicy">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ScVmm.Models.ScVmmStorageQosPolicy ScVmmStorageQosPolicy (string name = default, string id = default, long? iopsMaximum = default, long? iopsMinimum = default, long? bandwidthLimit = default, string policyId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ScVmm.Models.ScVmmStorageQosPolicy ScVmmStorageQosPolicy(string name, string id, valuetype System.Nullable`1&lt;int64&gt; iopsMaximum, valuetype System.Nullable`1&lt;int64&gt; iopsMinimum, valuetype System.Nullable`1&lt;int64&gt; bandwidthLimit, string policyId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmStorageQosPolicy(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScVmmStorageQosPolicy (Optional name As String = Nothing, Optional id As String = Nothing, Optional iopsMaximum As Nullable(Of Long) = Nothing, Optional iopsMinimum As Nullable(Of Long) = Nothing, Optional bandwidthLimit As Nullable(Of Long) = Nothing, Optional policyId As String = Nothing) As ScVmmStorageQosPolicy" />
      <MemberSignature Language="F#" Value="static member ScVmmStorageQosPolicy : string * string * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * string -&gt; Azure.ResourceManager.ScVmm.Models.ScVmmStorageQosPolicy" Usage="Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmStorageQosPolicy (name, id, iopsMaximum, iopsMinimum, bandwidthLimit, policyId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.Models.ScVmmStorageQosPolicy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="iopsMaximum" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="iopsMinimum" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="bandwidthLimit" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="policyId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the policy. </param>
        <param name="id"> The ID of the QoS policy. </param>
        <param name="iopsMaximum"> The maximum IO operations per second. </param>
        <param name="iopsMinimum"> The minimum IO operations per second. </param>
        <param name="bandwidthLimit"> The Bandwidth Limit for internet traffic. </param>
        <param name="policyId"> The underlying policy. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ScVmm.Models.ScVmmStorageQosPolicy" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ScVmm.Models.ScVmmStorageQosPolicy" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScVmmVirtualDisk">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ScVmm.Models.ScVmmVirtualDisk ScVmmVirtualDisk (string name = default, string displayName = default, string diskId = default, int? diskSizeGB = default, int? maxDiskSizeGB = default, int? bus = default, int? lun = default, string busType = default, string vhdType = default, string volumeType = default, string vhdFormatType = default, string templateDiskId = default, Azure.ResourceManager.ScVmm.Models.ScVmmStorageQosPolicyDetails storageQosPolicy = default, Azure.ResourceManager.ScVmm.Models.CreateDiffDisk? createDiffDisk = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ScVmm.Models.ScVmmVirtualDisk ScVmmVirtualDisk(string name, string displayName, string diskId, valuetype System.Nullable`1&lt;int32&gt; diskSizeGB, valuetype System.Nullable`1&lt;int32&gt; maxDiskSizeGB, valuetype System.Nullable`1&lt;int32&gt; bus, valuetype System.Nullable`1&lt;int32&gt; lun, string busType, string vhdType, string volumeType, string vhdFormatType, string templateDiskId, class Azure.ResourceManager.ScVmm.Models.ScVmmStorageQosPolicyDetails storageQosPolicy, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.CreateDiffDisk&gt; createDiffDisk) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmVirtualDisk(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.ScVmm.Models.ScVmmStorageQosPolicyDetails,System.Nullable{Azure.ResourceManager.ScVmm.Models.CreateDiffDisk})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScVmmVirtualDisk (Optional name As String = Nothing, Optional displayName As String = Nothing, Optional diskId As String = Nothing, Optional diskSizeGB As Nullable(Of Integer) = Nothing, Optional maxDiskSizeGB As Nullable(Of Integer) = Nothing, Optional bus As Nullable(Of Integer) = Nothing, Optional lun As Nullable(Of Integer) = Nothing, Optional busType As String = Nothing, Optional vhdType As String = Nothing, Optional volumeType As String = Nothing, Optional vhdFormatType As String = Nothing, Optional templateDiskId As String = Nothing, Optional storageQosPolicy As ScVmmStorageQosPolicyDetails = Nothing, Optional createDiffDisk As Nullable(Of CreateDiffDisk) = Nothing) As ScVmmVirtualDisk" />
      <MemberSignature Language="F#" Value="static member ScVmmVirtualDisk : string * string * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * string * string * string * string * Azure.ResourceManager.ScVmm.Models.ScVmmStorageQosPolicyDetails * Nullable&lt;Azure.ResourceManager.ScVmm.Models.CreateDiffDisk&gt; -&gt; Azure.ResourceManager.ScVmm.Models.ScVmmVirtualDisk" Usage="Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmVirtualDisk (name, displayName, diskId, diskSizeGB, maxDiskSizeGB, bus, lun, busType, vhdType, volumeType, vhdFormatType, templateDiskId, storageQosPolicy, createDiffDisk)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.Models.ScVmmVirtualDisk</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="diskId" Type="System.String" />
        <Parameter Name="diskSizeGB" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="maxDiskSizeGB" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="bus" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="lun" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="busType" Type="System.String" />
        <Parameter Name="vhdType" Type="System.String" />
        <Parameter Name="volumeType" Type="System.String" />
        <Parameter Name="vhdFormatType" Type="System.String" />
        <Parameter Name="templateDiskId" Type="System.String" />
        <Parameter Name="storageQosPolicy" Type="Azure.ResourceManager.ScVmm.Models.ScVmmStorageQosPolicyDetails" />
        <Parameter Name="createDiffDisk" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.CreateDiffDisk&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> Gets or sets the name of the disk. </param>
        <param name="displayName"> Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set. </param>
        <param name="diskId"> Gets or sets the disk id. </param>
        <param name="diskSizeGB"> Gets or sets the disk total size. </param>
        <param name="maxDiskSizeGB"> Gets the max disk size. </param>
        <param name="bus"> Gets or sets the disk bus. </param>
        <param name="lun"> Gets or sets the disk lun. </param>
        <param name="busType"> Gets or sets the disk bus type. </param>
        <param name="vhdType"> Gets or sets the disk vhd type. </param>
        <param name="volumeType"> Gets the disk volume type. </param>
        <param name="vhdFormatType"> Gets the disk vhd format type. </param>
        <param name="templateDiskId"> Gets or sets the disk id in the template. </param>
        <param name="storageQosPolicy"> The QoS policy for the disk. </param>
        <param name="createDiffDisk"> Gets or sets a value indicating diff disk. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ScVmm.Models.ScVmmVirtualDisk" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ScVmm.Models.ScVmmVirtualDisk" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScVmmVirtualMachineInstanceData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ScVmm.ScVmmVirtualMachineInstanceData ScVmmVirtualMachineInstanceData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmAvailabilitySetItem&gt; availabilitySets = default, Azure.ResourceManager.ScVmm.Models.OSProfileForVmInstance osProfile = default, Azure.ResourceManager.ScVmm.Models.ScVmmHardwareProfile hardwareProfile = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmNetworkInterface&gt; networkInterfaces = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmVirtualDisk&gt; storageDisks = default, Azure.ResourceManager.ScVmm.Models.ScVmmInfrastructureProfile infrastructureProfile = default, string powerState = default, Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ScVmm.ScVmmVirtualMachineInstanceData ScVmmVirtualMachineInstanceData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ScVmm.Models.ScVmmAvailabilitySetItem&gt; availabilitySets, class Azure.ResourceManager.ScVmm.Models.OSProfileForVmInstance osProfile, class Azure.ResourceManager.ScVmm.Models.ScVmmHardwareProfile hardwareProfile, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ScVmm.Models.ScVmmNetworkInterface&gt; networkInterfaces, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ScVmm.Models.ScVmmVirtualDisk&gt; storageDisks, class Azure.ResourceManager.ScVmm.Models.ScVmmInfrastructureProfile infrastructureProfile, string powerState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmVirtualMachineInstanceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ScVmm.Models.ScVmmAvailabilitySetItem},Azure.ResourceManager.ScVmm.Models.OSProfileForVmInstance,Azure.ResourceManager.ScVmm.Models.ScVmmHardwareProfile,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ScVmm.Models.ScVmmNetworkInterface},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ScVmm.Models.ScVmmVirtualDisk},Azure.ResourceManager.ScVmm.Models.ScVmmInfrastructureProfile,System.String,System.Nullable{Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScVmmVirtualMachineInstanceData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional extendedLocation As ExtendedLocation = Nothing, Optional availabilitySets As IEnumerable(Of ScVmmAvailabilitySetItem) = Nothing, Optional osProfile As OSProfileForVmInstance = Nothing, Optional hardwareProfile As ScVmmHardwareProfile = Nothing, Optional networkInterfaces As IEnumerable(Of ScVmmNetworkInterface) = Nothing, Optional storageDisks As IEnumerable(Of ScVmmVirtualDisk) = Nothing, Optional infrastructureProfile As ScVmmInfrastructureProfile = Nothing, Optional powerState As String = Nothing, Optional provisioningState As Nullable(Of ScVmmProvisioningState) = Nothing) As ScVmmVirtualMachineInstanceData" />
      <MemberSignature Language="F#" Value="static member ScVmmVirtualMachineInstanceData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.Resources.Models.ExtendedLocation * seq&lt;Azure.ResourceManager.ScVmm.Models.ScVmmAvailabilitySetItem&gt; * Azure.ResourceManager.ScVmm.Models.OSProfileForVmInstance * Azure.ResourceManager.ScVmm.Models.ScVmmHardwareProfile * seq&lt;Azure.ResourceManager.ScVmm.Models.ScVmmNetworkInterface&gt; * seq&lt;Azure.ResourceManager.ScVmm.Models.ScVmmVirtualDisk&gt; * Azure.ResourceManager.ScVmm.Models.ScVmmInfrastructureProfile * string * Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; -&gt; Azure.ResourceManager.ScVmm.ScVmmVirtualMachineInstanceData" Usage="Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmVirtualMachineInstanceData (id, name, resourceType, systemData, extendedLocation, availabilitySets, osProfile, hardwareProfile, networkInterfaces, storageDisks, infrastructureProfile, powerState, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.ScVmmVirtualMachineInstanceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="extendedLocation" Type="Azure.ResourceManager.Resources.Models.ExtendedLocation" />
        <Parameter Name="availabilitySets" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmAvailabilitySetItem&gt;" />
        <Parameter Name="osProfile" Type="Azure.ResourceManager.ScVmm.Models.OSProfileForVmInstance" />
        <Parameter Name="hardwareProfile" Type="Azure.ResourceManager.ScVmm.Models.ScVmmHardwareProfile" />
        <Parameter Name="networkInterfaces" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmNetworkInterface&gt;" />
        <Parameter Name="storageDisks" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmVirtualDisk&gt;" />
        <Parameter Name="infrastructureProfile" Type="Azure.ResourceManager.ScVmm.Models.ScVmmInfrastructureProfile" />
        <Parameter Name="powerState" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="extendedLocation"> Gets or sets the extended location. </param>
        <param name="availabilitySets"> Availability Sets in vm. </param>
        <param name="osProfile"> OS properties. </param>
        <param name="hardwareProfile"> Hardware properties. </param>
        <param name="networkInterfaces"> Network properties. </param>
        <param name="storageDisks"> Storage properties. </param>
        <param name="infrastructureProfile"> Gets the infrastructure profile. </param>
        <param name="powerState"> Gets the power state of the virtual machine. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ScVmm.ScVmmVirtualMachineInstanceData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ScVmm.ScVmmVirtualMachineInstanceData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScVmmVirtualMachineTemplateData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ScVmm.ScVmmVirtualMachineTemplateData ScVmmVirtualMachineTemplateData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation = default, string inventoryItemId = default, string uuid = default, Azure.Core.ResourceIdentifier vmmServerId = default, Azure.ResourceManager.ScVmm.Models.ScVmmOSType? osType = default, string osName = default, string computerName = default, int? memoryMB = default, int? cpuCount = default, Azure.ResourceManager.ScVmm.Models.LimitCpuForMigration? limitCpuForMigration = default, Azure.ResourceManager.ScVmm.Models.DynamicMemoryEnabled? dynamicMemoryEnabled = default, Azure.ResourceManager.ScVmm.Models.IsCustomizable? isCustomizable = default, int? dynamicMemoryMaxMB = default, int? dynamicMemoryMinMB = default, Azure.ResourceManager.ScVmm.Models.IsHighlyAvailable? isHighlyAvailable = default, int? generation = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmNetworkInterface&gt; networkInterfaces = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmVirtualDisk&gt; disks = default, Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ScVmm.ScVmmVirtualMachineTemplateData ScVmmVirtualMachineTemplateData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation, string inventoryItemId, string uuid, class Azure.Core.ResourceIdentifier vmmServerId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.ScVmmOSType&gt; osType, string osName, string computerName, valuetype System.Nullable`1&lt;int32&gt; memoryMB, valuetype System.Nullable`1&lt;int32&gt; cpuCount, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.LimitCpuForMigration&gt; limitCpuForMigration, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.DynamicMemoryEnabled&gt; dynamicMemoryEnabled, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.IsCustomizable&gt; isCustomizable, valuetype System.Nullable`1&lt;int32&gt; dynamicMemoryMaxMB, valuetype System.Nullable`1&lt;int32&gt; dynamicMemoryMinMB, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.IsHighlyAvailable&gt; isHighlyAvailable, valuetype System.Nullable`1&lt;int32&gt; generation, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ScVmm.Models.ScVmmNetworkInterface&gt; networkInterfaces, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ScVmm.Models.ScVmmVirtualDisk&gt; disks, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmVirtualMachineTemplateData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.String,System.String,Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.ScVmm.Models.ScVmmOSType},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.ScVmm.Models.LimitCpuForMigration},System.Nullable{Azure.ResourceManager.ScVmm.Models.DynamicMemoryEnabled},System.Nullable{Azure.ResourceManager.ScVmm.Models.IsCustomizable},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.ScVmm.Models.IsHighlyAvailable},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ScVmm.Models.ScVmmNetworkInterface},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ScVmm.Models.ScVmmVirtualDisk},System.Nullable{Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScVmmVirtualMachineTemplateData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional extendedLocation As ExtendedLocation = Nothing, Optional inventoryItemId As String = Nothing, Optional uuid As String = Nothing, Optional vmmServerId As ResourceIdentifier = Nothing, Optional osType As Nullable(Of ScVmmOSType) = Nothing, Optional osName As String = Nothing, Optional computerName As String = Nothing, Optional memoryMB As Nullable(Of Integer) = Nothing, Optional cpuCount As Nullable(Of Integer) = Nothing, Optional limitCpuForMigration As Nullable(Of LimitCpuForMigration) = Nothing, Optional dynamicMemoryEnabled As Nullable(Of DynamicMemoryEnabled) = Nothing, Optional isCustomizable As Nullable(Of IsCustomizable) = Nothing, Optional dynamicMemoryMaxMB As Nullable(Of Integer) = Nothing, Optional dynamicMemoryMinMB As Nullable(Of Integer) = Nothing, Optional isHighlyAvailable As Nullable(Of IsHighlyAvailable) = Nothing, Optional generation As Nullable(Of Integer) = Nothing, Optional networkInterfaces As IEnumerable(Of ScVmmNetworkInterface) = Nothing, Optional disks As IEnumerable(Of ScVmmVirtualDisk) = Nothing, Optional provisioningState As Nullable(Of ScVmmProvisioningState) = Nothing) As ScVmmVirtualMachineTemplateData" />
      <MemberSignature Language="F#" Value="static member ScVmmVirtualMachineTemplateData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.Resources.Models.ExtendedLocation * string * string * Azure.Core.ResourceIdentifier * Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmOSType&gt; * string * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.ScVmm.Models.LimitCpuForMigration&gt; * Nullable&lt;Azure.ResourceManager.ScVmm.Models.DynamicMemoryEnabled&gt; * Nullable&lt;Azure.ResourceManager.ScVmm.Models.IsCustomizable&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.ScVmm.Models.IsHighlyAvailable&gt; * Nullable&lt;int&gt; * seq&lt;Azure.ResourceManager.ScVmm.Models.ScVmmNetworkInterface&gt; * seq&lt;Azure.ResourceManager.ScVmm.Models.ScVmmVirtualDisk&gt; * Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; -&gt; Azure.ResourceManager.ScVmm.ScVmmVirtualMachineTemplateData" Usage="Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmVirtualMachineTemplateData (id, name, resourceType, systemData, tags, location, extendedLocation, inventoryItemId, uuid, vmmServerId, osType, osName, computerName, memoryMB, cpuCount, limitCpuForMigration, dynamicMemoryEnabled, isCustomizable, dynamicMemoryMaxMB, dynamicMemoryMinMB, isHighlyAvailable, generation, networkInterfaces, disks, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.ScVmmVirtualMachineTemplateData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="extendedLocation" Type="Azure.ResourceManager.Resources.Models.ExtendedLocation" />
        <Parameter Name="inventoryItemId" Type="System.String" />
        <Parameter Name="uuid" Type="System.String" />
        <Parameter Name="vmmServerId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="osType" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmOSType&gt;" />
        <Parameter Name="osName" Type="System.String" />
        <Parameter Name="computerName" Type="System.String" />
        <Parameter Name="memoryMB" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cpuCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="limitCpuForMigration" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.LimitCpuForMigration&gt;" />
        <Parameter Name="dynamicMemoryEnabled" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.DynamicMemoryEnabled&gt;" />
        <Parameter Name="isCustomizable" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.IsCustomizable&gt;" />
        <Parameter Name="dynamicMemoryMaxMB" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="dynamicMemoryMinMB" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="isHighlyAvailable" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.IsHighlyAvailable&gt;" />
        <Parameter Name="generation" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="networkInterfaces" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmNetworkInterface&gt;" />
        <Parameter Name="disks" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmVirtualDisk&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="extendedLocation"> The extended location. </param>
        <param name="inventoryItemId"> Gets or sets the inventory Item ID for the resource. </param>
        <param name="uuid"> Unique ID of the virtual machine template. </param>
        <param name="vmmServerId"> ARM Id of the vmmServer resource in which this resource resides. </param>
        <param name="osType"> Gets the type of the os. </param>
        <param name="osName"> Gets os name. </param>
        <param name="computerName"> Gets computer name. </param>
        <param name="memoryMB"> MemoryMB is the desired size of a virtual machine's memory, in MB. </param>
        <param name="cpuCount"> Gets the desired number of vCPUs for the vm. </param>
        <param name="limitCpuForMigration"> Gets a value indicating whether to enable processor compatibility mode for live migration of VMs. </param>
        <param name="dynamicMemoryEnabled"> Gets a value indicating whether to enable dynamic memory or not. </param>
        <param name="isCustomizable"> Gets a value indicating whether the vm template is customizable or not. </param>
        <param name="dynamicMemoryMaxMB"> Gets the max dynamic memory for the vm. </param>
        <param name="dynamicMemoryMinMB"> Gets the min dynamic memory for the vm. </param>
        <param name="isHighlyAvailable"> Gets highly available property. </param>
        <param name="generation"> Gets the generation for the vm. </param>
        <param name="networkInterfaces"> Gets the network interfaces of the template. </param>
        <param name="disks"> Gets the disks of the template. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ScVmm.ScVmmVirtualMachineTemplateData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ScVmm.ScVmmVirtualMachineTemplateData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScVmmVirtualNetworkData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ScVmm.ScVmmVirtualNetworkData ScVmmVirtualNetworkData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation = default, string inventoryItemId = default, string uuid = default, Azure.Core.ResourceIdentifier vmmServerId = default, string networkName = default, Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ScVmm.ScVmmVirtualNetworkData ScVmmVirtualNetworkData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation, string inventoryItemId, string uuid, class Azure.Core.ResourceIdentifier vmmServerId, string networkName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmVirtualNetworkData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.String,System.String,Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScVmmVirtualNetworkData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional extendedLocation As ExtendedLocation = Nothing, Optional inventoryItemId As String = Nothing, Optional uuid As String = Nothing, Optional vmmServerId As ResourceIdentifier = Nothing, Optional networkName As String = Nothing, Optional provisioningState As Nullable(Of ScVmmProvisioningState) = Nothing) As ScVmmVirtualNetworkData" />
      <MemberSignature Language="F#" Value="static member ScVmmVirtualNetworkData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.Resources.Models.ExtendedLocation * string * string * Azure.Core.ResourceIdentifier * string * Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; -&gt; Azure.ResourceManager.ScVmm.ScVmmVirtualNetworkData" Usage="Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.ScVmmVirtualNetworkData (id, name, resourceType, systemData, tags, location, extendedLocation, inventoryItemId, uuid, vmmServerId, networkName, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.ScVmmVirtualNetworkData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="extendedLocation" Type="Azure.ResourceManager.Resources.Models.ExtendedLocation" />
        <Parameter Name="inventoryItemId" Type="System.String" />
        <Parameter Name="uuid" Type="System.String" />
        <Parameter Name="vmmServerId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="networkName" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="extendedLocation"> The extended location. </param>
        <param name="inventoryItemId"> Gets or sets the inventory Item ID for the resource. </param>
        <param name="uuid"> Unique ID of the virtual network. </param>
        <param name="vmmServerId"> ARM Id of the vmmServer resource in which this resource resides. </param>
        <param name="networkName"> Name of the virtual network in vmmServer. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ScVmm.ScVmmVirtualNetworkData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ScVmm.ScVmmVirtualNetworkData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualMachineInventoryItem">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ScVmm.Models.VirtualMachineInventoryItem VirtualMachineInventoryItem (string managedResourceId = default, string uuid = default, string inventoryItemName = default, Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState? provisioningState = default, Azure.ResourceManager.ScVmm.Models.ScVmmOSType? osType = default, string osName = default, string osVersion = default, string powerState = default, System.Collections.Generic.IEnumerable&lt;string&gt; ipAddresses = default, Azure.ResourceManager.ScVmm.Models.ScVmmInventoryItemDetails cloud = default, string biosGuid = default, Azure.Core.ResourceIdentifier managedMachineResourceId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ScVmm.Models.VirtualMachineInventoryItem VirtualMachineInventoryItem(string managedResourceId, string uuid, string inventoryItemName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.ScVmmOSType&gt; osType, string osName, string osVersion, string powerState, class System.Collections.Generic.IEnumerable`1&lt;string&gt; ipAddresses, class Azure.ResourceManager.ScVmm.Models.ScVmmInventoryItemDetails cloud, string biosGuid, class Azure.Core.ResourceIdentifier managedMachineResourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.VirtualMachineInventoryItem(System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState},System.Nullable{Azure.ResourceManager.ScVmm.Models.ScVmmOSType},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Azure.ResourceManager.ScVmm.Models.ScVmmInventoryItemDetails,System.String,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VirtualMachineInventoryItem (Optional managedResourceId As String = Nothing, Optional uuid As String = Nothing, Optional inventoryItemName As String = Nothing, Optional provisioningState As Nullable(Of ScVmmProvisioningState) = Nothing, Optional osType As Nullable(Of ScVmmOSType) = Nothing, Optional osName As String = Nothing, Optional osVersion As String = Nothing, Optional powerState As String = Nothing, Optional ipAddresses As IEnumerable(Of String) = Nothing, Optional cloud As ScVmmInventoryItemDetails = Nothing, Optional biosGuid As String = Nothing, Optional managedMachineResourceId As ResourceIdentifier = Nothing) As VirtualMachineInventoryItem" />
      <MemberSignature Language="F#" Value="static member VirtualMachineInventoryItem : string * string * string * Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; * Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmOSType&gt; * string * string * string * seq&lt;string&gt; * Azure.ResourceManager.ScVmm.Models.ScVmmInventoryItemDetails * string * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ScVmm.Models.VirtualMachineInventoryItem" Usage="Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.VirtualMachineInventoryItem (managedResourceId, uuid, inventoryItemName, provisioningState, osType, osName, osVersion, powerState, ipAddresses, cloud, biosGuid, managedMachineResourceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.Models.VirtualMachineInventoryItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managedResourceId" Type="System.String" />
        <Parameter Name="uuid" Type="System.String" />
        <Parameter Name="inventoryItemName" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt;" />
        <Parameter Name="osType" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmOSType&gt;" />
        <Parameter Name="osName" Type="System.String" />
        <Parameter Name="osVersion" Type="System.String" />
        <Parameter Name="powerState" Type="System.String" />
        <Parameter Name="ipAddresses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cloud" Type="Azure.ResourceManager.ScVmm.Models.ScVmmInventoryItemDetails" />
        <Parameter Name="biosGuid" Type="System.String" />
        <Parameter Name="managedMachineResourceId" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="managedResourceId"> Gets the tracked resource id corresponding to the inventory resource. </param>
        <param name="uuid"> Gets the UUID (which is assigned by VMM) for the inventory item. </param>
        <param name="inventoryItemName"> Gets the Managed Object name in VMM for the inventory item. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="osType"> Gets the type of the os. </param>
        <param name="osName"> Gets os name. </param>
        <param name="osVersion"> Gets os version. </param>
        <param name="powerState"> Gets the power state of the virtual machine. </param>
        <param name="ipAddresses"> Gets or sets the nic ip addresses. </param>
        <param name="cloud"> Cloud inventory resource details where the VM is present. </param>
        <param name="biosGuid"> Gets the bios guid. </param>
        <param name="managedMachineResourceId"> Gets the tracked resource id corresponding to the inventory resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ScVmm.Models.VirtualMachineInventoryItem" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ScVmm.Models.VirtualMachineInventoryItem" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualMachineTemplateInventoryItem">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ScVmm.Models.VirtualMachineTemplateInventoryItem VirtualMachineTemplateInventoryItem (string managedResourceId = default, string uuid = default, string inventoryItemName = default, Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState? provisioningState = default, int? cpuCount = default, int? memoryMB = default, Azure.ResourceManager.ScVmm.Models.ScVmmOSType? osType = default, string osName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ScVmm.Models.VirtualMachineTemplateInventoryItem VirtualMachineTemplateInventoryItem(string managedResourceId, string uuid, string inventoryItemName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; provisioningState, valuetype System.Nullable`1&lt;int32&gt; cpuCount, valuetype System.Nullable`1&lt;int32&gt; memoryMB, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.ScVmmOSType&gt; osType, string osName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.VirtualMachineTemplateInventoryItem(System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.ScVmm.Models.ScVmmOSType},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VirtualMachineTemplateInventoryItem (Optional managedResourceId As String = Nothing, Optional uuid As String = Nothing, Optional inventoryItemName As String = Nothing, Optional provisioningState As Nullable(Of ScVmmProvisioningState) = Nothing, Optional cpuCount As Nullable(Of Integer) = Nothing, Optional memoryMB As Nullable(Of Integer) = Nothing, Optional osType As Nullable(Of ScVmmOSType) = Nothing, Optional osName As String = Nothing) As VirtualMachineTemplateInventoryItem" />
      <MemberSignature Language="F#" Value="static member VirtualMachineTemplateInventoryItem : string * string * string * Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmOSType&gt; * string -&gt; Azure.ResourceManager.ScVmm.Models.VirtualMachineTemplateInventoryItem" Usage="Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.VirtualMachineTemplateInventoryItem (managedResourceId, uuid, inventoryItemName, provisioningState, cpuCount, memoryMB, osType, osName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.Models.VirtualMachineTemplateInventoryItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managedResourceId" Type="System.String" />
        <Parameter Name="uuid" Type="System.String" />
        <Parameter Name="inventoryItemName" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt;" />
        <Parameter Name="cpuCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="memoryMB" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="osType" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmOSType&gt;" />
        <Parameter Name="osName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="managedResourceId"> Gets the tracked resource id corresponding to the inventory resource. </param>
        <param name="uuid"> Gets the UUID (which is assigned by VMM) for the inventory item. </param>
        <param name="inventoryItemName"> Gets the Managed Object name in VMM for the inventory item. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="cpuCount"> Gets the desired number of vCPUs for the vm. </param>
        <param name="memoryMB"> MemoryMB is the desired size of a virtual machine's memory, in MB. </param>
        <param name="osType"> Gets the type of the os. </param>
        <param name="osName"> Gets os name. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ScVmm.Models.VirtualMachineTemplateInventoryItem" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ScVmm.Models.VirtualMachineTemplateInventoryItem" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualNetworkInventoryItem">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ScVmm.Models.VirtualNetworkInventoryItem VirtualNetworkInventoryItem (string managedResourceId = default, string uuid = default, string inventoryItemName = default, Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ScVmm.Models.VirtualNetworkInventoryItem VirtualNetworkInventoryItem(string managedResourceId, string uuid, string inventoryItemName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.VirtualNetworkInventoryItem(System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VirtualNetworkInventoryItem (Optional managedResourceId As String = Nothing, Optional uuid As String = Nothing, Optional inventoryItemName As String = Nothing, Optional provisioningState As Nullable(Of ScVmmProvisioningState) = Nothing) As VirtualNetworkInventoryItem" />
      <MemberSignature Language="F#" Value="static member VirtualNetworkInventoryItem : string * string * string * Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt; -&gt; Azure.ResourceManager.ScVmm.Models.VirtualNetworkInventoryItem" Usage="Azure.ResourceManager.ScVmm.Models.ArmScVmmModelFactory.VirtualNetworkInventoryItem (managedResourceId, uuid, inventoryItemName, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.Models.VirtualNetworkInventoryItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managedResourceId" Type="System.String" />
        <Parameter Name="uuid" Type="System.String" />
        <Parameter Name="inventoryItemName" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ScVmm.Models.ScVmmProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="managedResourceId"> Gets the tracked resource id corresponding to the inventory resource. </param>
        <param name="uuid"> Gets the UUID (which is assigned by VMM) for the inventory item. </param>
        <param name="inventoryItemName"> Gets the Managed Object name in VMM for the inventory item. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ScVmm.Models.VirtualNetworkInventoryItem" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ScVmm.Models.VirtualNetworkInventoryItem" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
