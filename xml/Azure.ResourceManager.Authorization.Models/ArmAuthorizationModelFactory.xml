<Type Name="ArmAuthorizationModelFactory" FullName="Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmAuthorizationModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmAuthorizationModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmAuthorizationModelFactory" />
  <TypeSignature Language="F#" Value="type ArmAuthorizationModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>1.1.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AuthorizationClassicAdministrator">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministrator AuthorizationClassicAdministrator (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string emailAddress = default, string role = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministrator AuthorizationClassicAdministrator(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string emailAddress, string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.AuthorizationClassicAdministrator(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AuthorizationClassicAdministrator (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional emailAddress As String = Nothing, Optional role As String = Nothing) As AuthorizationClassicAdministrator" />
      <MemberSignature Language="F#" Value="static member AuthorizationClassicAdministrator : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string -&gt; Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministrator" Usage="Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.AuthorizationClassicAdministrator (id, name, resourceType, systemData, emailAddress, role)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministrator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="emailAddress" Type="System.String" />
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="emailAddress"> The email address of the administrator. </param>
        <param name="role"> The role of the administrator. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministrator" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministrator" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationProviderOperationInfo">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo AuthorizationProviderOperationInfo (string name = default, string displayName = default, string description = default, string origin = default, BinaryData properties = default, bool? isDataAction = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo AuthorizationProviderOperationInfo(string name, string displayName, string description, string origin, class System.BinaryData properties, valuetype System.Nullable`1&lt;bool&gt; isDataAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.AuthorizationProviderOperationInfo(System.String,System.String,System.String,System.String,System.BinaryData,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AuthorizationProviderOperationInfo (Optional name As String = Nothing, Optional displayName As String = Nothing, Optional description As String = Nothing, Optional origin As String = Nothing, Optional properties As BinaryData = Nothing, Optional isDataAction As Nullable(Of Boolean) = Nothing) As AuthorizationProviderOperationInfo" />
      <MemberSignature Language="F#" Value="static member AuthorizationProviderOperationInfo : string * string * string * string * BinaryData * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo" Usage="Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.AuthorizationProviderOperationInfo (name, displayName, description, origin, properties, isDataAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="origin" Type="System.String" />
        <Parameter Name="properties" Type="System.BinaryData" />
        <Parameter Name="isDataAction" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> The operation name. </param>
        <param name="displayName"> The operation display name. </param>
        <param name="description"> The operation description. </param>
        <param name="origin"> The operation origin. </param>
        <param name="properties"> The operation properties. </param>
        <param name="isDataAction"> The dataAction flag to specify the operation type. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationProviderOperationsMetadataData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataData AuthorizationProviderOperationsMetadataData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string displayName = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType&gt; resourceTypes = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo&gt; operations = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataData AuthorizationProviderOperationsMetadataData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string displayName, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType&gt; resourceTypes, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo&gt; operations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.AuthorizationProviderOperationsMetadataData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AuthorizationProviderOperationsMetadataData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional displayName As String = Nothing, Optional resourceTypes As IEnumerable(Of AuthorizationProviderResourceType) = Nothing, Optional operations As IEnumerable(Of AuthorizationProviderOperationInfo) = Nothing) As AuthorizationProviderOperationsMetadataData" />
      <MemberSignature Language="F#" Value="static member AuthorizationProviderOperationsMetadataData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * seq&lt;Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType&gt; * seq&lt;Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo&gt; -&gt; Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataData" Usage="Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.AuthorizationProviderOperationsMetadataData (id, name, resourceType, systemData, displayName, resourceTypes, operations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="resourceTypes" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType&gt;" />
        <Parameter Name="operations" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="displayName"> The provider display name. </param>
        <param name="resourceTypes"> The provider resource types. </param>
        <param name="operations"> The provider operations. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationProviderResourceType">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType AuthorizationProviderResourceType (string name = default, string displayName = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo&gt; operations = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType AuthorizationProviderResourceType(string name, string displayName, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo&gt; operations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.AuthorizationProviderResourceType(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AuthorizationProviderResourceType (Optional name As String = Nothing, Optional displayName As String = Nothing, Optional operations As IEnumerable(Of AuthorizationProviderOperationInfo) = Nothing) As AuthorizationProviderResourceType" />
      <MemberSignature Language="F#" Value="static member AuthorizationProviderResourceType : string * string * seq&lt;Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo&gt; -&gt; Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType" Usage="Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.AuthorizationProviderResourceType (name, displayName, operations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="operations" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> The resource type name. </param>
        <param name="displayName"> The resource type display name. </param>
        <param name="operations"> The resource type operations. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationRoleDefinitionData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData AuthorizationRoleDefinitionData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string roleName = default, string description = default, Azure.ResourceManager.Authorization.Models.AuthorizationRoleType? roleType = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission&gt; permissions = default, System.Collections.Generic.IEnumerable&lt;string&gt; assignableScopes = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData AuthorizationRoleDefinitionData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string roleName, string description, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.AuthorizationRoleType&gt; roleType, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission&gt; permissions, class System.Collections.Generic.IEnumerable`1&lt;string&gt; assignableScopes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.AuthorizationRoleDefinitionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.Nullable{Azure.ResourceManager.Authorization.Models.AuthorizationRoleType},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AuthorizationRoleDefinitionData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional roleName As String = Nothing, Optional description As String = Nothing, Optional roleType As Nullable(Of AuthorizationRoleType) = Nothing, Optional permissions As IEnumerable(Of RoleDefinitionPermission) = Nothing, Optional assignableScopes As IEnumerable(Of String) = Nothing) As AuthorizationRoleDefinitionData" />
      <MemberSignature Language="F#" Value="static member AuthorizationRoleDefinitionData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string * Nullable&lt;Azure.ResourceManager.Authorization.Models.AuthorizationRoleType&gt; * seq&lt;Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission&gt; * seq&lt;string&gt; -&gt; Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData" Usage="Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.AuthorizationRoleDefinitionData (id, name, resourceType, systemData, roleName, description, roleType, permissions, assignableScopes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="roleType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.AuthorizationRoleType&gt;" />
        <Parameter Name="permissions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission&gt;" />
        <Parameter Name="assignableScopes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="roleName"> The role name. </param>
        <param name="description"> The role definition description. </param>
        <param name="roleType"> The role type. </param>
        <param name="permissions"> Role definition permissions. </param>
        <param name="assignableScopes"> Role definition assignable scopes. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DenyAssignmentData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.DenyAssignmentData DenyAssignmentData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string denyAssignmentName = default, string description = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission&gt; permissions = default, string scope = default, bool? isAppliedToChildScopes = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal&gt; principals = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal&gt; excludePrincipals = default, bool? isSystemProtected = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.DenyAssignmentData DenyAssignmentData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string denyAssignmentName, string description, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission&gt; permissions, string scope, valuetype System.Nullable`1&lt;bool&gt; isAppliedToChildScopes, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal&gt; principals, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal&gt; excludePrincipals, valuetype System.Nullable`1&lt;bool&gt; isSystemProtected) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.DenyAssignmentData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission},System.String,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DenyAssignmentData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional denyAssignmentName As String = Nothing, Optional description As String = Nothing, Optional permissions As IEnumerable(Of DenyAssignmentPermission) = Nothing, Optional scope As String = Nothing, Optional isAppliedToChildScopes As Nullable(Of Boolean) = Nothing, Optional principals As IEnumerable(Of RoleManagementPrincipal) = Nothing, Optional excludePrincipals As IEnumerable(Of RoleManagementPrincipal) = Nothing, Optional isSystemProtected As Nullable(Of Boolean) = Nothing) As DenyAssignmentData" />
      <MemberSignature Language="F#" Value="static member DenyAssignmentData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string * seq&lt;Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission&gt; * string * Nullable&lt;bool&gt; * seq&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal&gt; * seq&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.Authorization.DenyAssignmentData" Usage="Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.DenyAssignmentData (id, name, resourceType, systemData, denyAssignmentName, description, permissions, scope, isAppliedToChildScopes, principals, excludePrincipals, isSystemProtected)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.DenyAssignmentData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="denyAssignmentName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="permissions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission&gt;" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="isAppliedToChildScopes" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="principals" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal&gt;" />
        <Parameter Name="excludePrincipals" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal&gt;" />
        <Parameter Name="isSystemProtected" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="denyAssignmentName"> The display name of the deny assignment. </param>
        <param name="description"> The description of the deny assignment. </param>
        <param name="permissions"> An array of permissions that are denied by the deny assignment. </param>
        <param name="scope"> The deny assignment scope. </param>
        <param name="isAppliedToChildScopes"> Determines if the deny assignment applies to child scopes. Default value is false. </param>
        <param name="principals"> Array of principals to which the deny assignment applies. </param>
        <param name="excludePrincipals"> Array of principals to which the deny assignment does not apply. </param>
        <param name="isSystemProtected"> Specifies whether this deny assignment was created by Azure and cannot be edited or deleted. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DenyAssignmentPermission">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission DenyAssignmentPermission (System.Collections.Generic.IEnumerable&lt;string&gt; actions = default, System.Collections.Generic.IEnumerable&lt;string&gt; notActions = default, System.Collections.Generic.IEnumerable&lt;string&gt; dataActions = default, System.Collections.Generic.IEnumerable&lt;string&gt; notDataActions = default, string condition = default, string conditionVersion = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission DenyAssignmentPermission(class System.Collections.Generic.IEnumerable`1&lt;string&gt; actions, class System.Collections.Generic.IEnumerable`1&lt;string&gt; notActions, class System.Collections.Generic.IEnumerable`1&lt;string&gt; dataActions, class System.Collections.Generic.IEnumerable`1&lt;string&gt; notDataActions, string condition, string conditionVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.DenyAssignmentPermission(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DenyAssignmentPermission (Optional actions As IEnumerable(Of String) = Nothing, Optional notActions As IEnumerable(Of String) = Nothing, Optional dataActions As IEnumerable(Of String) = Nothing, Optional notDataActions As IEnumerable(Of String) = Nothing, Optional condition As String = Nothing, Optional conditionVersion As String = Nothing) As DenyAssignmentPermission" />
      <MemberSignature Language="F#" Value="static member DenyAssignmentPermission : seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * string * string -&gt; Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission" Usage="Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.DenyAssignmentPermission (actions, notActions, dataActions, notDataActions, condition, conditionVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actions" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="notActions" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="dataActions" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="notDataActions" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="condition" Type="System.String" />
        <Parameter Name="conditionVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="actions"> Actions to which the deny assignment does not grant access. </param>
        <param name="notActions"> Actions to exclude from that the deny assignment does not grant access. </param>
        <param name="dataActions"> Data actions to which the deny assignment does not grant access. </param>
        <param name="notDataActions"> Data actions to exclude from that the deny assignment does not grant access. </param>
        <param name="condition"> The conditions on the Deny assignment permission. This limits the resources it applies to. </param>
        <param name="conditionVersion"> Version of the condition. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EligibleChildResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.Models.EligibleChildResource EligibleChildResource (string id = default, string name = default, string resourceType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.Models.EligibleChildResource EligibleChildResource(string id, string name, string resourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.EligibleChildResource(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EligibleChildResource (Optional id As String = Nothing, Optional name As String = Nothing, Optional resourceType As String = Nothing) As EligibleChildResource" />
      <MemberSignature Language="F#" Value="static member EligibleChildResource : string * string * string -&gt; Azure.ResourceManager.Authorization.Models.EligibleChildResource" Usage="Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.EligibleChildResource (id, name, resourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.Models.EligibleChildResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The resource scope Id. </param>
        <param name="name"> The resource name. </param>
        <param name="resourceType"> The resource type. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.EligibleChildResource" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Authorization.Models.EligibleChildResource" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PolicyAssignmentProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties PolicyAssignmentProperties (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.ResourceIdentifier policyId = default, Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal lastModifiedBy = default, DateTimeOffset? lastModifiedOn = default, Azure.Core.ResourceIdentifier roleDefinitionId = default, string roleDefinitionDisplayName = default, Azure.ResourceManager.Authorization.Models.AuthorizationRoleType? roleType = default, Azure.Core.ResourceIdentifier scopeId = default, string scopeDisplayName = default, Azure.ResourceManager.Authorization.Models.RoleManagementScopeType? scopeType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties PolicyAssignmentProperties(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.Core.ResourceIdentifier policyId, class Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal lastModifiedBy, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModifiedOn, class Azure.Core.ResourceIdentifier roleDefinitionId, string roleDefinitionDisplayName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.AuthorizationRoleType&gt; roleType, class Azure.Core.ResourceIdentifier scopeId, string scopeDisplayName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementScopeType&gt; scopeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.PolicyAssignmentProperties(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.Core.ResourceIdentifier,Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal,System.Nullable{System.DateTimeOffset},Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ResourceManager.Authorization.Models.AuthorizationRoleType},Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScopeType})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PolicyAssignmentProperties (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional policyId As ResourceIdentifier = Nothing, Optional lastModifiedBy As RoleManagementPrincipal = Nothing, Optional lastModifiedOn As Nullable(Of DateTimeOffset) = Nothing, Optional roleDefinitionId As ResourceIdentifier = Nothing, Optional roleDefinitionDisplayName As String = Nothing, Optional roleType As Nullable(Of AuthorizationRoleType) = Nothing, Optional scopeId As ResourceIdentifier = Nothing, Optional scopeDisplayName As String = Nothing, Optional scopeType As Nullable(Of RoleManagementScopeType) = Nothing) As PolicyAssignmentProperties" />
      <MemberSignature Language="F#" Value="static member PolicyAssignmentProperties : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.Core.ResourceIdentifier * Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal * Nullable&lt;DateTimeOffset&gt; * Azure.Core.ResourceIdentifier * string * Nullable&lt;Azure.ResourceManager.Authorization.Models.AuthorizationRoleType&gt; * Azure.Core.ResourceIdentifier * string * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScopeType&gt; -&gt; Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties" Usage="Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.PolicyAssignmentProperties (id, name, resourceType, systemData, policyId, lastModifiedBy, lastModifiedOn, roleDefinitionId, roleDefinitionDisplayName, roleType, scopeId, scopeDisplayName, scopeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="policyId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="lastModifiedBy" Type="Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal" />
        <Parameter Name="lastModifiedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="roleDefinitionId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="roleDefinitionDisplayName" Type="System.String" />
        <Parameter Name="roleType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.AuthorizationRoleType&gt;" />
        <Parameter Name="scopeId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="scopeDisplayName" Type="System.String" />
        <Parameter Name="scopeType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScopeType&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="policyId"> Id of the policy. </param>
        <param name="lastModifiedBy"> The name of the entity last modified it. </param>
        <param name="lastModifiedOn"> The last modified date time. </param>
        <param name="roleDefinitionId"> Id of the role definition. </param>
        <param name="roleDefinitionDisplayName"> Display name of the role definition. </param>
        <param name="roleType"> The role type. </param>
        <param name="scopeId"> Scope id of the resource. </param>
        <param name="scopeDisplayName"> Display name of the resource. </param>
        <param name="scopeType"> Type of the scope. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleAssignmentCreateOrUpdateContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent RoleAssignmentCreateOrUpdateContent (string scope = default, Azure.Core.ResourceIdentifier roleDefinitionId = default, Guid principalId = default, Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType? principalType = default, string description = default, string condition = default, string conditionVersion = default, DateTimeOffset? createdOn = default, DateTimeOffset? updatedOn = default, string createdBy = default, string updatedBy = default, Azure.Core.ResourceIdentifier delegatedManagedIdentityResourceId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent RoleAssignmentCreateOrUpdateContent(string scope, class Azure.Core.ResourceIdentifier roleDefinitionId, valuetype System.Guid principalId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt; principalType, string description, string condition, string conditionVersion, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; updatedOn, string createdBy, string updatedBy, class Azure.Core.ResourceIdentifier delegatedManagedIdentityResourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleAssignmentCreateOrUpdateContent(System.String,Azure.Core.ResourceIdentifier,System.Guid,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoleAssignmentCreateOrUpdateContent (Optional scope As String = Nothing, Optional roleDefinitionId As ResourceIdentifier = Nothing, Optional principalId As Guid = Nothing, Optional principalType As Nullable(Of RoleManagementPrincipalType) = Nothing, Optional description As String = Nothing, Optional condition As String = Nothing, Optional conditionVersion As String = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional updatedOn As Nullable(Of DateTimeOffset) = Nothing, Optional createdBy As String = Nothing, Optional updatedBy As String = Nothing, Optional delegatedManagedIdentityResourceId As ResourceIdentifier = Nothing) As RoleAssignmentCreateOrUpdateContent" />
      <MemberSignature Language="F#" Value="static member RoleAssignmentCreateOrUpdateContent : string * Azure.Core.ResourceIdentifier * Guid * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt; * string * string * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * string * string * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent" Usage="Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleAssignmentCreateOrUpdateContent (scope, roleDefinitionId, principalId, principalType, description, condition, conditionVersion, createdOn, updatedOn, createdBy, updatedBy, delegatedManagedIdentityResourceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="roleDefinitionId" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="principalId" Type="System.Guid" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="principalType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt;" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="description" Type="System.String" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="condition" Type="System.String" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="conditionVersion" Type="System.String" Index="6" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" Index="7" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="updatedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" Index="8" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="createdBy" Type="System.String" Index="9" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="updatedBy" Type="System.String" Index="10" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="delegatedManagedIdentityResourceId" Type="Azure.Core.ResourceIdentifier" Index="11" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="scope"> The role assignment scope. </param>
        <param name="roleDefinitionId"> The role definition ID. </param>
        <param name="principalId"> The principal ID. </param>
        <param name="principalType"> The principal type of the assigned principal ID. </param>
        <param name="description"> Description of role assignment. </param>
        <param name="condition"> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </param>
        <param name="conditionVersion"> Version of the condition. Currently the only accepted value is '2.0'. </param>
        <param name="createdOn"> Time it was created. </param>
        <param name="updatedOn"> Time it was updated. </param>
        <param name="createdBy"> Id of the user who created the assignment. </param>
        <param name="updatedBy"> Id of the user who updated the assignment. </param>
        <param name="delegatedManagedIdentityResourceId"> Id of the delegated managed identity resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleAssignmentData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleAssignmentData RoleAssignmentData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string scope = default, Azure.Core.ResourceIdentifier roleDefinitionId = default, Guid? principalId = default, Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType? principalType = default, string description = default, string condition = default, string conditionVersion = default, DateTimeOffset? createdOn = default, DateTimeOffset? updatedOn = default, string createdBy = default, string updatedBy = default, Azure.Core.ResourceIdentifier delegatedManagedIdentityResourceId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleAssignmentData RoleAssignmentData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string scope, class Azure.Core.ResourceIdentifier roleDefinitionId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; principalId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt; principalType, string description, string condition, string conditionVersion, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; updatedOn, string createdBy, string updatedBy, class Azure.Core.ResourceIdentifier delegatedManagedIdentityResourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleAssignmentData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.Core.ResourceIdentifier,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoleAssignmentData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional scope As String = Nothing, Optional roleDefinitionId As ResourceIdentifier = Nothing, Optional principalId As Nullable(Of Guid) = Nothing, Optional principalType As Nullable(Of RoleManagementPrincipalType) = Nothing, Optional description As String = Nothing, Optional condition As String = Nothing, Optional conditionVersion As String = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional updatedOn As Nullable(Of DateTimeOffset) = Nothing, Optional createdBy As String = Nothing, Optional updatedBy As String = Nothing, Optional delegatedManagedIdentityResourceId As ResourceIdentifier = Nothing) As RoleAssignmentData" />
      <MemberSignature Language="F#" Value="static member RoleAssignmentData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Azure.Core.ResourceIdentifier * Nullable&lt;Guid&gt; * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt; * string * string * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * string * string * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Authorization.RoleAssignmentData" Usage="Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleAssignmentData (id, name, resourceType, systemData, scope, roleDefinitionId, principalId, principalType, description, condition, conditionVersion, createdOn, updatedOn, createdBy, updatedBy, delegatedManagedIdentityResourceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleAssignmentData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="roleDefinitionId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="principalId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="principalType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt;" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="condition" Type="System.String" />
        <Parameter Name="conditionVersion" Type="System.String" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="updatedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="createdBy" Type="System.String" />
        <Parameter Name="updatedBy" Type="System.String" />
        <Parameter Name="delegatedManagedIdentityResourceId" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="scope"> The role assignment scope. </param>
        <param name="roleDefinitionId"> The role definition ID. </param>
        <param name="principalId"> The principal ID. </param>
        <param name="principalType"> The principal type of the assigned principal ID. </param>
        <param name="description"> Description of role assignment. </param>
        <param name="condition"> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </param>
        <param name="conditionVersion"> Version of the condition. Currently the only accepted value is '2.0'. </param>
        <param name="createdOn"> Time it was created. </param>
        <param name="updatedOn"> Time it was updated. </param>
        <param name="createdBy"> Id of the user who created the assignment. </param>
        <param name="updatedBy"> Id of the user who updated the assignment. </param>
        <param name="delegatedManagedIdentityResourceId"> Id of the delegated managed identity resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleAssignmentScheduleData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleAssignmentScheduleData RoleAssignmentScheduleData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string scope = default, Azure.Core.ResourceIdentifier roleDefinitionId = default, Guid? principalId = default, Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType? principalType = default, Azure.Core.ResourceIdentifier roleAssignmentScheduleRequestId = default, Azure.Core.ResourceIdentifier linkedRoleEligibilityScheduleId = default, Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType? assignmentType = default, Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType? memberType = default, Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus? status = default, DateTimeOffset? startOn = default, DateTimeOffset? endOn = default, string condition = default, string conditionVersion = default, DateTimeOffset? createdOn = default, DateTimeOffset? updatedOn = default, Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties expandedProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleAssignmentScheduleData RoleAssignmentScheduleData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string scope, class Azure.Core.ResourceIdentifier roleDefinitionId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; principalId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt; principalType, class Azure.Core.ResourceIdentifier roleAssignmentScheduleRequestId, class Azure.Core.ResourceIdentifier linkedRoleEligibilityScheduleId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType&gt; assignmentType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType&gt; memberType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus&gt; status, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endOn, string condition, string conditionVersion, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; updatedOn, class Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties expandedProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleAssignmentScheduleData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.Core.ResourceIdentifier,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoleAssignmentScheduleData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional scope As String = Nothing, Optional roleDefinitionId As ResourceIdentifier = Nothing, Optional principalId As Nullable(Of Guid) = Nothing, Optional principalType As Nullable(Of RoleManagementPrincipalType) = Nothing, Optional roleAssignmentScheduleRequestId As ResourceIdentifier = Nothing, Optional linkedRoleEligibilityScheduleId As ResourceIdentifier = Nothing, Optional assignmentType As Nullable(Of RoleAssignmentScheduleAssignmentType) = Nothing, Optional memberType As Nullable(Of RoleManagementScheduleMemberType) = Nothing, Optional status As Nullable(Of RoleManagementScheduleStatus) = Nothing, Optional startOn As Nullable(Of DateTimeOffset) = Nothing, Optional endOn As Nullable(Of DateTimeOffset) = Nothing, Optional condition As String = Nothing, Optional conditionVersion As String = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional updatedOn As Nullable(Of DateTimeOffset) = Nothing, Optional expandedProperties As RoleManagementExpandedProperties = Nothing) As RoleAssignmentScheduleData" />
      <MemberSignature Language="F#" Value="static member RoleAssignmentScheduleData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Azure.Core.ResourceIdentifier * Nullable&lt;Guid&gt; * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt; * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType&gt; * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType&gt; * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * string * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties -&gt; Azure.ResourceManager.Authorization.RoleAssignmentScheduleData" Usage="Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleAssignmentScheduleData (id, name, resourceType, systemData, scope, roleDefinitionId, principalId, principalType, roleAssignmentScheduleRequestId, linkedRoleEligibilityScheduleId, assignmentType, memberType, status, startOn, endOn, condition, conditionVersion, createdOn, updatedOn, expandedProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleAssignmentScheduleData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="roleDefinitionId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="principalId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="principalType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt;" />
        <Parameter Name="roleAssignmentScheduleRequestId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="linkedRoleEligibilityScheduleId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="assignmentType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType&gt;" />
        <Parameter Name="memberType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType&gt;" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus&gt;" />
        <Parameter Name="startOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="condition" Type="System.String" />
        <Parameter Name="conditionVersion" Type="System.String" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="updatedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="expandedProperties" Type="Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="scope"> The role assignment schedule scope. </param>
        <param name="roleDefinitionId"> The role definition ID. </param>
        <param name="principalId"> The principal ID. </param>
        <param name="principalType"> The principal type of the assigned principal ID. </param>
        <param name="roleAssignmentScheduleRequestId"> The id of roleAssignmentScheduleRequest used to create this roleAssignmentSchedule. </param>
        <param name="linkedRoleEligibilityScheduleId"> The id of roleEligibilitySchedule used to activated this roleAssignmentSchedule. </param>
        <param name="assignmentType"> Assignment type of the role assignment schedule. </param>
        <param name="memberType"> Membership type of the role assignment schedule. </param>
        <param name="status"> The status of the role assignment schedule. </param>
        <param name="startOn"> Start DateTime when role assignment schedule. </param>
        <param name="endOn"> End DateTime when role assignment schedule. </param>
        <param name="condition"> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </param>
        <param name="conditionVersion"> Version of the condition. Currently accepted value is '2.0'. </param>
        <param name="createdOn"> DateTime when role assignment schedule was created. </param>
        <param name="updatedOn"> DateTime when role assignment schedule was modified. </param>
        <param name="expandedProperties"> Additional properties of principal, scope and role definition. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleAssignmentScheduleInstanceData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData RoleAssignmentScheduleInstanceData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string scope = default, Azure.Core.ResourceIdentifier roleDefinitionId = default, Guid? principalId = default, Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType? principalType = default, Azure.Core.ResourceIdentifier roleAssignmentScheduleId = default, Azure.Core.ResourceIdentifier originRoleAssignmentId = default, Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus? status = default, DateTimeOffset? startOn = default, DateTimeOffset? endOn = default, Azure.Core.ResourceIdentifier linkedRoleEligibilityScheduleId = default, Azure.Core.ResourceIdentifier linkedRoleEligibilityScheduleInstanceId = default, Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType? assignmentType = default, Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType? memberType = default, string condition = default, string conditionVersion = default, DateTimeOffset? createdOn = default, Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties expandedProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData RoleAssignmentScheduleInstanceData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string scope, class Azure.Core.ResourceIdentifier roleDefinitionId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; principalId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt; principalType, class Azure.Core.ResourceIdentifier roleAssignmentScheduleId, class Azure.Core.ResourceIdentifier originRoleAssignmentId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus&gt; status, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endOn, class Azure.Core.ResourceIdentifier linkedRoleEligibilityScheduleId, class Azure.Core.ResourceIdentifier linkedRoleEligibilityScheduleInstanceId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType&gt; assignmentType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType&gt; memberType, string condition, string conditionVersion, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, class Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties expandedProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleAssignmentScheduleInstanceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.Core.ResourceIdentifier,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType},System.String,System.String,System.Nullable{System.DateTimeOffset},Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoleAssignmentScheduleInstanceData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional scope As String = Nothing, Optional roleDefinitionId As ResourceIdentifier = Nothing, Optional principalId As Nullable(Of Guid) = Nothing, Optional principalType As Nullable(Of RoleManagementPrincipalType) = Nothing, Optional roleAssignmentScheduleId As ResourceIdentifier = Nothing, Optional originRoleAssignmentId As ResourceIdentifier = Nothing, Optional status As Nullable(Of RoleManagementScheduleStatus) = Nothing, Optional startOn As Nullable(Of DateTimeOffset) = Nothing, Optional endOn As Nullable(Of DateTimeOffset) = Nothing, Optional linkedRoleEligibilityScheduleId As ResourceIdentifier = Nothing, Optional linkedRoleEligibilityScheduleInstanceId As ResourceIdentifier = Nothing, Optional assignmentType As Nullable(Of RoleAssignmentScheduleAssignmentType) = Nothing, Optional memberType As Nullable(Of RoleManagementScheduleMemberType) = Nothing, Optional condition As String = Nothing, Optional conditionVersion As String = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional expandedProperties As RoleManagementExpandedProperties = Nothing) As RoleAssignmentScheduleInstanceData" />
      <MemberSignature Language="F#" Value="static member RoleAssignmentScheduleInstanceData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Azure.Core.ResourceIdentifier * Nullable&lt;Guid&gt; * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt; * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType&gt; * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType&gt; * string * string * Nullable&lt;DateTimeOffset&gt; * Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties -&gt; Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData" Usage="Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleAssignmentScheduleInstanceData (id, name, resourceType, systemData, scope, roleDefinitionId, principalId, principalType, roleAssignmentScheduleId, originRoleAssignmentId, status, startOn, endOn, linkedRoleEligibilityScheduleId, linkedRoleEligibilityScheduleInstanceId, assignmentType, memberType, condition, conditionVersion, createdOn, expandedProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="roleDefinitionId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="principalId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="principalType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt;" />
        <Parameter Name="roleAssignmentScheduleId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="originRoleAssignmentId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus&gt;" />
        <Parameter Name="startOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="linkedRoleEligibilityScheduleId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="linkedRoleEligibilityScheduleInstanceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="assignmentType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType&gt;" />
        <Parameter Name="memberType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType&gt;" />
        <Parameter Name="condition" Type="System.String" />
        <Parameter Name="conditionVersion" Type="System.String" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="expandedProperties" Type="Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="scope"> The role assignment schedule scope. </param>
        <param name="roleDefinitionId"> The role definition ID. </param>
        <param name="principalId"> The principal ID. </param>
        <param name="principalType"> The principal type of the assigned principal ID. </param>
        <param name="roleAssignmentScheduleId"> Id of the master role assignment schedule. </param>
        <param name="originRoleAssignmentId"> Role Assignment Id in external system. </param>
        <param name="status"> The status of the role assignment schedule instance. </param>
        <param name="startOn"> The startDateTime of the role assignment schedule instance. </param>
        <param name="endOn"> The endDateTime of the role assignment schedule instance. </param>
        <param name="linkedRoleEligibilityScheduleId"> roleEligibilityScheduleId used to activate. </param>
        <param name="linkedRoleEligibilityScheduleInstanceId"> roleEligibilityScheduleInstanceId linked to this roleAssignmentScheduleInstance. </param>
        <param name="assignmentType"> Assignment type of the role assignment schedule. </param>
        <param name="memberType"> Membership type of the role assignment schedule. </param>
        <param name="condition"> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </param>
        <param name="conditionVersion"> Version of the condition. Currently accepted value is '2.0'. </param>
        <param name="createdOn"> DateTime when role assignment schedule was created. </param>
        <param name="expandedProperties"> Additional properties of principal, scope and role definition. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleAssignmentScheduleRequestData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData RoleAssignmentScheduleRequestData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string scope = default, Azure.Core.ResourceIdentifier roleDefinitionId = default, Guid? principalId = default, Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType? principalType = default, Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType? requestType = default, Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus? status = default, string approvalId = default, Azure.Core.ResourceIdentifier targetRoleAssignmentScheduleId = default, Azure.Core.ResourceIdentifier targetRoleAssignmentScheduleInstanceId = default, Azure.Core.ResourceIdentifier linkedRoleEligibilityScheduleId = default, string justification = default, Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleTicketInfo ticketInfo = default, string condition = default, string conditionVersion = default, DateTimeOffset? createdOn = default, Guid? requestorId = default, Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties expandedProperties = default, DateTimeOffset? startOn = default, Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType? expirationType = default, DateTimeOffset? endOn = default, TimeSpan? duration = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData RoleAssignmentScheduleRequestData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string scope, class Azure.Core.ResourceIdentifier roleDefinitionId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; principalId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt; principalType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType&gt; requestType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus&gt; status, string approvalId, class Azure.Core.ResourceIdentifier targetRoleAssignmentScheduleId, class Azure.Core.ResourceIdentifier targetRoleAssignmentScheduleInstanceId, class Azure.Core.ResourceIdentifier linkedRoleEligibilityScheduleId, string justification, class Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleTicketInfo ticketInfo, string condition, string conditionVersion, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; requestorId, class Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties expandedProperties, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType&gt; expirationType, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endOn, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleAssignmentScheduleRequestData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.Core.ResourceIdentifier,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus},System.String,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.String,Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleTicketInfo,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.Guid},Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType},System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoleAssignmentScheduleRequestData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional scope As String = Nothing, Optional roleDefinitionId As ResourceIdentifier = Nothing, Optional principalId As Nullable(Of Guid) = Nothing, Optional principalType As Nullable(Of RoleManagementPrincipalType) = Nothing, Optional requestType As Nullable(Of RoleManagementScheduleRequestType) = Nothing, Optional status As Nullable(Of RoleManagementScheduleStatus) = Nothing, Optional approvalId As String = Nothing, Optional targetRoleAssignmentScheduleId As ResourceIdentifier = Nothing, Optional targetRoleAssignmentScheduleInstanceId As ResourceIdentifier = Nothing, Optional linkedRoleEligibilityScheduleId As ResourceIdentifier = Nothing, Optional justification As String = Nothing, Optional ticketInfo As RoleAssignmentScheduleTicketInfo = Nothing, Optional condition As String = Nothing, Optional conditionVersion As String = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional requestorId As Nullable(Of Guid) = Nothing, Optional expandedProperties As RoleManagementExpandedProperties = Nothing, Optional startOn As Nullable(Of DateTimeOffset) = Nothing, Optional expirationType As Nullable(Of RoleManagementScheduleExpirationType) = Nothing, Optional endOn As Nullable(Of DateTimeOffset) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing) As RoleAssignmentScheduleRequestData" />
      <MemberSignature Language="F#" Value="static member RoleAssignmentScheduleRequestData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Azure.Core.ResourceIdentifier * Nullable&lt;Guid&gt; * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt; * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType&gt; * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus&gt; * string * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * string * Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleTicketInfo * string * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Guid&gt; * Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;TimeSpan&gt; -&gt; Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData" Usage="Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleAssignmentScheduleRequestData (id, name, resourceType, systemData, scope, roleDefinitionId, principalId, principalType, requestType, status, approvalId, targetRoleAssignmentScheduleId, targetRoleAssignmentScheduleInstanceId, linkedRoleEligibilityScheduleId, justification, ticketInfo, condition, conditionVersion, createdOn, requestorId, expandedProperties, startOn, expirationType, endOn, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="roleDefinitionId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="principalId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="principalType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt;" />
        <Parameter Name="requestType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType&gt;" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus&gt;" />
        <Parameter Name="approvalId" Type="System.String" />
        <Parameter Name="targetRoleAssignmentScheduleId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="targetRoleAssignmentScheduleInstanceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="linkedRoleEligibilityScheduleId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="justification" Type="System.String" />
        <Parameter Name="ticketInfo" Type="Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleTicketInfo" />
        <Parameter Name="condition" Type="System.String" />
        <Parameter Name="conditionVersion" Type="System.String" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="requestorId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="expandedProperties" Type="Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties" />
        <Parameter Name="startOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="expirationType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType&gt;" />
        <Parameter Name="endOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="scope"> The role assignment schedule request scope. </param>
        <param name="roleDefinitionId"> The role definition ID. </param>
        <param name="principalId"> The principal ID. </param>
        <param name="principalType"> The principal type of the assigned principal ID. </param>
        <param name="requestType"> The type of the role assignment schedule request. Eg: SelfActivate, AdminAssign etc. </param>
        <param name="status"> The status of the role assignment schedule request. </param>
        <param name="approvalId"> The approvalId of the role assignment schedule request. </param>
        <param name="targetRoleAssignmentScheduleId"> The resultant role assignment schedule id or the role assignment schedule id being updated. </param>
        <param name="targetRoleAssignmentScheduleInstanceId"> The role assignment schedule instance id being updated. </param>
        <param name="linkedRoleEligibilityScheduleId"> The linked role eligibility schedule id - to activate an eligibility. </param>
        <param name="justification"> Justification for the role assignment. </param>
        <param name="ticketInfo"> Ticket Info of the role assignment. </param>
        <param name="condition"> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </param>
        <param name="conditionVersion"> Version of the condition. Currently accepted value is '2.0'. </param>
        <param name="createdOn"> DateTime when role assignment schedule request was created. </param>
        <param name="requestorId"> Id of the user who created this request. </param>
        <param name="expandedProperties"> Additional properties of principal, scope and role definition. </param>
        <param name="startOn"> Start DateTime of the role assignment schedule. </param>
        <param name="expirationType"> Type of the role assignment schedule expiration. </param>
        <param name="endOn"> End DateTime of the role assignment schedule. </param>
        <param name="duration"> Duration of the role assignment schedule in TimeSpan. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleEligibilityScheduleData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleEligibilityScheduleData RoleEligibilityScheduleData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string scope = default, Azure.Core.ResourceIdentifier roleDefinitionId = default, Guid? principalId = default, Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType? principalType = default, Azure.Core.ResourceIdentifier roleEligibilityScheduleRequestId = default, Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType? memberType = default, Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus? status = default, DateTimeOffset? startOn = default, DateTimeOffset? endOn = default, string condition = default, string conditionVersion = default, DateTimeOffset? createdOn = default, DateTimeOffset? updatedOn = default, Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties expandedProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleEligibilityScheduleData RoleEligibilityScheduleData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string scope, class Azure.Core.ResourceIdentifier roleDefinitionId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; principalId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt; principalType, class Azure.Core.ResourceIdentifier roleEligibilityScheduleRequestId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType&gt; memberType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus&gt; status, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endOn, string condition, string conditionVersion, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; updatedOn, class Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties expandedProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleEligibilityScheduleData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.Core.ResourceIdentifier,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoleEligibilityScheduleData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional scope As String = Nothing, Optional roleDefinitionId As ResourceIdentifier = Nothing, Optional principalId As Nullable(Of Guid) = Nothing, Optional principalType As Nullable(Of RoleManagementPrincipalType) = Nothing, Optional roleEligibilityScheduleRequestId As ResourceIdentifier = Nothing, Optional memberType As Nullable(Of RoleManagementScheduleMemberType) = Nothing, Optional status As Nullable(Of RoleManagementScheduleStatus) = Nothing, Optional startOn As Nullable(Of DateTimeOffset) = Nothing, Optional endOn As Nullable(Of DateTimeOffset) = Nothing, Optional condition As String = Nothing, Optional conditionVersion As String = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional updatedOn As Nullable(Of DateTimeOffset) = Nothing, Optional expandedProperties As RoleManagementExpandedProperties = Nothing) As RoleEligibilityScheduleData" />
      <MemberSignature Language="F#" Value="static member RoleEligibilityScheduleData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Azure.Core.ResourceIdentifier * Nullable&lt;Guid&gt; * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt; * Azure.Core.ResourceIdentifier * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType&gt; * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * string * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties -&gt; Azure.ResourceManager.Authorization.RoleEligibilityScheduleData" Usage="Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleEligibilityScheduleData (id, name, resourceType, systemData, scope, roleDefinitionId, principalId, principalType, roleEligibilityScheduleRequestId, memberType, status, startOn, endOn, condition, conditionVersion, createdOn, updatedOn, expandedProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleEligibilityScheduleData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="roleDefinitionId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="principalId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="principalType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt;" />
        <Parameter Name="roleEligibilityScheduleRequestId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="memberType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType&gt;" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus&gt;" />
        <Parameter Name="startOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="condition" Type="System.String" />
        <Parameter Name="conditionVersion" Type="System.String" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="updatedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="expandedProperties" Type="Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="scope"> The role eligibility schedule scope. </param>
        <param name="roleDefinitionId"> The role definition ID. </param>
        <param name="principalId"> The principal ID. </param>
        <param name="principalType"> The principal type of the assigned principal ID. </param>
        <param name="roleEligibilityScheduleRequestId"> The id of roleEligibilityScheduleRequest used to create this roleAssignmentSchedule. </param>
        <param name="memberType"> Membership type of the role eligibility schedule. </param>
        <param name="status"> The status of the role eligibility schedule. </param>
        <param name="startOn"> Start DateTime when role eligibility schedule. </param>
        <param name="endOn"> End DateTime when role eligibility schedule. </param>
        <param name="condition"> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </param>
        <param name="conditionVersion"> Version of the condition. Currently accepted value is '2.0'. </param>
        <param name="createdOn"> DateTime when role eligibility schedule was created. </param>
        <param name="updatedOn"> DateTime when role eligibility schedule was modified. </param>
        <param name="expandedProperties"> Additional properties of principal, scope and role definition. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleEligibilityScheduleInstanceData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData RoleEligibilityScheduleInstanceData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string scope = default, Azure.Core.ResourceIdentifier roleDefinitionId = default, Guid? principalId = default, Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType? principalType = default, Azure.Core.ResourceIdentifier roleEligibilityScheduleId = default, Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus? status = default, DateTimeOffset? startOn = default, DateTimeOffset? endOn = default, Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType? memberType = default, string condition = default, string conditionVersion = default, DateTimeOffset? createdOn = default, Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties expandedProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData RoleEligibilityScheduleInstanceData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string scope, class Azure.Core.ResourceIdentifier roleDefinitionId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; principalId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt; principalType, class Azure.Core.ResourceIdentifier roleEligibilityScheduleId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus&gt; status, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType&gt; memberType, string condition, string conditionVersion, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, class Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties expandedProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleEligibilityScheduleInstanceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.Core.ResourceIdentifier,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType},System.String,System.String,System.Nullable{System.DateTimeOffset},Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoleEligibilityScheduleInstanceData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional scope As String = Nothing, Optional roleDefinitionId As ResourceIdentifier = Nothing, Optional principalId As Nullable(Of Guid) = Nothing, Optional principalType As Nullable(Of RoleManagementPrincipalType) = Nothing, Optional roleEligibilityScheduleId As ResourceIdentifier = Nothing, Optional status As Nullable(Of RoleManagementScheduleStatus) = Nothing, Optional startOn As Nullable(Of DateTimeOffset) = Nothing, Optional endOn As Nullable(Of DateTimeOffset) = Nothing, Optional memberType As Nullable(Of RoleManagementScheduleMemberType) = Nothing, Optional condition As String = Nothing, Optional conditionVersion As String = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional expandedProperties As RoleManagementExpandedProperties = Nothing) As RoleEligibilityScheduleInstanceData" />
      <MemberSignature Language="F#" Value="static member RoleEligibilityScheduleInstanceData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Azure.Core.ResourceIdentifier * Nullable&lt;Guid&gt; * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt; * Azure.Core.ResourceIdentifier * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType&gt; * string * string * Nullable&lt;DateTimeOffset&gt; * Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties -&gt; Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData" Usage="Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleEligibilityScheduleInstanceData (id, name, resourceType, systemData, scope, roleDefinitionId, principalId, principalType, roleEligibilityScheduleId, status, startOn, endOn, memberType, condition, conditionVersion, createdOn, expandedProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="roleDefinitionId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="principalId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="principalType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt;" />
        <Parameter Name="roleEligibilityScheduleId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus&gt;" />
        <Parameter Name="startOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="memberType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType&gt;" />
        <Parameter Name="condition" Type="System.String" />
        <Parameter Name="conditionVersion" Type="System.String" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="expandedProperties" Type="Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="scope"> The role eligibility schedule scope. </param>
        <param name="roleDefinitionId"> The role definition ID. </param>
        <param name="principalId"> The principal ID. </param>
        <param name="principalType"> The principal type of the assigned principal ID. </param>
        <param name="roleEligibilityScheduleId"> Id of the master role eligibility schedule. </param>
        <param name="status"> The status of the role eligibility schedule instance. </param>
        <param name="startOn"> The startDateTime of the role eligibility schedule instance. </param>
        <param name="endOn"> The endDateTime of the role eligibility schedule instance. </param>
        <param name="memberType"> Membership type of the role eligibility schedule. </param>
        <param name="condition"> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </param>
        <param name="conditionVersion"> Version of the condition. Currently accepted value is '2.0'. </param>
        <param name="createdOn"> DateTime when role eligibility schedule was created. </param>
        <param name="expandedProperties"> Additional properties of principal, scope and role definition. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleEligibilityScheduleRequestData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData RoleEligibilityScheduleRequestData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string scope = default, Azure.Core.ResourceIdentifier roleDefinitionId = default, Guid? principalId = default, Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType? principalType = default, Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType? requestType = default, Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus? status = default, string approvalId = default, Azure.Core.ResourceIdentifier targetRoleEligibilityScheduleId = default, Azure.Core.ResourceIdentifier targetRoleEligibilityScheduleInstanceId = default, string justification = default, Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestPropertiesTicketInfo ticketInfo = default, string condition = default, string conditionVersion = default, DateTimeOffset? createdOn = default, Guid? requestorId = default, Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties expandedProperties = default, DateTimeOffset? startOn = default, Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType? expirationType = default, DateTimeOffset? endOn = default, TimeSpan? duration = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData RoleEligibilityScheduleRequestData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string scope, class Azure.Core.ResourceIdentifier roleDefinitionId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; principalId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt; principalType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType&gt; requestType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus&gt; status, string approvalId, class Azure.Core.ResourceIdentifier targetRoleEligibilityScheduleId, class Azure.Core.ResourceIdentifier targetRoleEligibilityScheduleInstanceId, string justification, class Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestPropertiesTicketInfo ticketInfo, string condition, string conditionVersion, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; requestorId, class Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties expandedProperties, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType&gt; expirationType, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endOn, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleEligibilityScheduleRequestData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.Core.ResourceIdentifier,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus},System.String,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.String,Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestPropertiesTicketInfo,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.Guid},Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType},System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoleEligibilityScheduleRequestData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional scope As String = Nothing, Optional roleDefinitionId As ResourceIdentifier = Nothing, Optional principalId As Nullable(Of Guid) = Nothing, Optional principalType As Nullable(Of RoleManagementPrincipalType) = Nothing, Optional requestType As Nullable(Of RoleManagementScheduleRequestType) = Nothing, Optional status As Nullable(Of RoleManagementScheduleStatus) = Nothing, Optional approvalId As String = Nothing, Optional targetRoleEligibilityScheduleId As ResourceIdentifier = Nothing, Optional targetRoleEligibilityScheduleInstanceId As ResourceIdentifier = Nothing, Optional justification As String = Nothing, Optional ticketInfo As RoleEligibilityScheduleRequestPropertiesTicketInfo = Nothing, Optional condition As String = Nothing, Optional conditionVersion As String = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional requestorId As Nullable(Of Guid) = Nothing, Optional expandedProperties As RoleManagementExpandedProperties = Nothing, Optional startOn As Nullable(Of DateTimeOffset) = Nothing, Optional expirationType As Nullable(Of RoleManagementScheduleExpirationType) = Nothing, Optional endOn As Nullable(Of DateTimeOffset) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing) As RoleEligibilityScheduleRequestData" />
      <MemberSignature Language="F#" Value="static member RoleEligibilityScheduleRequestData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Azure.Core.ResourceIdentifier * Nullable&lt;Guid&gt; * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt; * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType&gt; * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus&gt; * string * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * string * Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestPropertiesTicketInfo * string * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Guid&gt; * Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;TimeSpan&gt; -&gt; Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData" Usage="Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleEligibilityScheduleRequestData (id, name, resourceType, systemData, scope, roleDefinitionId, principalId, principalType, requestType, status, approvalId, targetRoleEligibilityScheduleId, targetRoleEligibilityScheduleInstanceId, justification, ticketInfo, condition, conditionVersion, createdOn, requestorId, expandedProperties, startOn, expirationType, endOn, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="roleDefinitionId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="principalId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="principalType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt;" />
        <Parameter Name="requestType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType&gt;" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus&gt;" />
        <Parameter Name="approvalId" Type="System.String" />
        <Parameter Name="targetRoleEligibilityScheduleId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="targetRoleEligibilityScheduleInstanceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="justification" Type="System.String" />
        <Parameter Name="ticketInfo" Type="Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestPropertiesTicketInfo" />
        <Parameter Name="condition" Type="System.String" />
        <Parameter Name="conditionVersion" Type="System.String" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="requestorId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="expandedProperties" Type="Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties" />
        <Parameter Name="startOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="expirationType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType&gt;" />
        <Parameter Name="endOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="scope"> The role eligibility schedule request scope. </param>
        <param name="roleDefinitionId"> The role definition ID. </param>
        <param name="principalId"> The principal ID. </param>
        <param name="principalType"> The principal type of the assigned principal ID. </param>
        <param name="requestType"> The type of the role assignment schedule request. Eg: SelfActivate, AdminAssign etc. </param>
        <param name="status"> The status of the role eligibility schedule request. </param>
        <param name="approvalId"> The approvalId of the role eligibility schedule request. </param>
        <param name="targetRoleEligibilityScheduleId"> The resultant role eligibility schedule id or the role eligibility schedule id being updated. </param>
        <param name="targetRoleEligibilityScheduleInstanceId"> The role eligibility schedule instance id being updated. </param>
        <param name="justification"> Justification for the role eligibility. </param>
        <param name="ticketInfo"> Ticket Info of the role eligibility. </param>
        <param name="condition"> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </param>
        <param name="conditionVersion"> Version of the condition. Currently accepted value is '2.0'. </param>
        <param name="createdOn"> DateTime when role eligibility schedule request was created. </param>
        <param name="requestorId"> Id of the user who created this request. </param>
        <param name="expandedProperties"> Additional properties of principal, scope and role definition. </param>
        <param name="startOn"> Start DateTime of the role eligibility schedule. </param>
        <param name="expirationType"> Type of the role eligibility schedule expiration. </param>
        <param name="endOn"> End DateTime of the role eligibility schedule. </param>
        <param name="duration"> Duration of the role eligibility schedule in TimeSpan. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleManagementExpandedProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties RoleManagementExpandedProperties (Guid? principalId = default, string principalDisplayName = default, string email = default, Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType? principalType = default, Azure.Core.ResourceIdentifier roleDefinitionId = default, string roleDefinitionDisplayName = default, Azure.ResourceManager.Authorization.Models.AuthorizationRoleType? roleType = default, Azure.Core.ResourceIdentifier scopeId = default, string scopeDisplayName = default, Azure.ResourceManager.Authorization.Models.RoleManagementScopeType? scopeType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties RoleManagementExpandedProperties(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; principalId, string principalDisplayName, string email, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt; principalType, class Azure.Core.ResourceIdentifier roleDefinitionId, string roleDefinitionDisplayName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.AuthorizationRoleType&gt; roleType, class Azure.Core.ResourceIdentifier scopeId, string scopeDisplayName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementScopeType&gt; scopeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleManagementExpandedProperties(System.Nullable{System.Guid},System.String,System.String,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ResourceManager.Authorization.Models.AuthorizationRoleType},Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScopeType})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoleManagementExpandedProperties (Optional principalId As Nullable(Of Guid) = Nothing, Optional principalDisplayName As String = Nothing, Optional email As String = Nothing, Optional principalType As Nullable(Of RoleManagementPrincipalType) = Nothing, Optional roleDefinitionId As ResourceIdentifier = Nothing, Optional roleDefinitionDisplayName As String = Nothing, Optional roleType As Nullable(Of AuthorizationRoleType) = Nothing, Optional scopeId As ResourceIdentifier = Nothing, Optional scopeDisplayName As String = Nothing, Optional scopeType As Nullable(Of RoleManagementScopeType) = Nothing) As RoleManagementExpandedProperties" />
      <MemberSignature Language="F#" Value="static member RoleManagementExpandedProperties : Nullable&lt;Guid&gt; * string * string * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt; * Azure.Core.ResourceIdentifier * string * Nullable&lt;Azure.ResourceManager.Authorization.Models.AuthorizationRoleType&gt; * Azure.Core.ResourceIdentifier * string * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScopeType&gt; -&gt; Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties" Usage="Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleManagementExpandedProperties (principalId, principalDisplayName, email, principalType, roleDefinitionId, roleDefinitionDisplayName, roleType, scopeId, scopeDisplayName, scopeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="principalDisplayName" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="principalType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt;" />
        <Parameter Name="roleDefinitionId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="roleDefinitionDisplayName" Type="System.String" />
        <Parameter Name="roleType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.AuthorizationRoleType&gt;" />
        <Parameter Name="scopeId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="scopeDisplayName" Type="System.String" />
        <Parameter Name="scopeType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScopeType&gt;" />
      </Parameters>
      <Docs>
        <param name="principalId"> Id of the principal. </param>
        <param name="principalDisplayName"> Display name of the principal. </param>
        <param name="email"> Email id of the principal. </param>
        <param name="principalType"> Type of the principal. </param>
        <param name="roleDefinitionId"> Id of the role definition. </param>
        <param name="roleDefinitionDisplayName"> Display name of the role definition. </param>
        <param name="roleType"> The role type. </param>
        <param name="scopeId"> Scope id of the resource. </param>
        <param name="scopeDisplayName"> Display name of the resource. </param>
        <param name="scopeType"> Type of the scope. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleManagementPolicyAssignmentData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData RoleManagementPolicyAssignmentData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string scope = default, Azure.Core.ResourceIdentifier roleDefinitionId = default, Azure.Core.ResourceIdentifier policyId = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule&gt; effectiveRules = default, Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties policyAssignmentProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData RoleManagementPolicyAssignmentData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string scope, class Azure.Core.ResourceIdentifier roleDefinitionId, class Azure.Core.ResourceIdentifier policyId, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule&gt; effectiveRules, class Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties policyAssignmentProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleManagementPolicyAssignmentData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule},Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoleManagementPolicyAssignmentData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional scope As String = Nothing, Optional roleDefinitionId As ResourceIdentifier = Nothing, Optional policyId As ResourceIdentifier = Nothing, Optional effectiveRules As IEnumerable(Of RoleManagementPolicyRule) = Nothing, Optional policyAssignmentProperties As PolicyAssignmentProperties = Nothing) As RoleManagementPolicyAssignmentData" />
      <MemberSignature Language="F#" Value="static member RoleManagementPolicyAssignmentData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * seq&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule&gt; * Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties -&gt; Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData" Usage="Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleManagementPolicyAssignmentData (id, name, resourceType, systemData, scope, roleDefinitionId, policyId, effectiveRules, policyAssignmentProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="roleDefinitionId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="policyId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="effectiveRules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule&gt;" />
        <Parameter Name="policyAssignmentProperties" Type="Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="scope"> The role management policy scope. </param>
        <param name="roleDefinitionId"> The role definition of management policy assignment. </param>
        <param name="policyId"> The policy id role management policy assignment. </param>
        <param name="effectiveRules">
            The readonly computed rule applied to the policy.
            Please note <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyApprovalRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyEnablementRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule" /> and <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule" />.
            </param>
        <param name="policyAssignmentProperties"> Additional properties of scope, role definition and policy. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleManagementPolicyData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleManagementPolicyData RoleManagementPolicyData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string scope = default, string displayName = default, string description = default, bool? isOrganizationDefault = default, Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal lastModifiedBy = default, DateTimeOffset? lastModifiedOn = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule&gt; rules = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule&gt; effectiveRules = default, Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties policyProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleManagementPolicyData RoleManagementPolicyData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string scope, string displayName, string description, valuetype System.Nullable`1&lt;bool&gt; isOrganizationDefault, class Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal lastModifiedBy, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModifiedOn, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule&gt; rules, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule&gt; effectiveRules, class Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties policyProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleManagementPolicyData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.String,System.Nullable{System.Boolean},Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal,System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule},Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoleManagementPolicyData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional scope As String = Nothing, Optional displayName As String = Nothing, Optional description As String = Nothing, Optional isOrganizationDefault As Nullable(Of Boolean) = Nothing, Optional lastModifiedBy As RoleManagementPrincipal = Nothing, Optional lastModifiedOn As Nullable(Of DateTimeOffset) = Nothing, Optional rules As IEnumerable(Of RoleManagementPolicyRule) = Nothing, Optional effectiveRules As IEnumerable(Of RoleManagementPolicyRule) = Nothing, Optional policyProperties As RoleManagementPolicyProperties = Nothing) As RoleManagementPolicyData" />
      <MemberSignature Language="F#" Value="static member RoleManagementPolicyData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string * string * Nullable&lt;bool&gt; * Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal * Nullable&lt;DateTimeOffset&gt; * seq&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule&gt; * seq&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule&gt; * Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties -&gt; Azure.ResourceManager.Authorization.RoleManagementPolicyData" Usage="Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleManagementPolicyData (id, name, resourceType, systemData, scope, displayName, description, isOrganizationDefault, lastModifiedBy, lastModifiedOn, rules, effectiveRules, policyProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleManagementPolicyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="isOrganizationDefault" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="lastModifiedBy" Type="Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal" />
        <Parameter Name="lastModifiedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="rules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule&gt;" />
        <Parameter Name="effectiveRules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule&gt;" />
        <Parameter Name="policyProperties" Type="Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="scope"> The role management policy scope. </param>
        <param name="displayName"> The role management policy display name. </param>
        <param name="description"> The role management policy description. </param>
        <param name="isOrganizationDefault"> The role management policy is default policy. </param>
        <param name="lastModifiedBy"> The name of the entity last modified it. </param>
        <param name="lastModifiedOn"> The last modified date time. </param>
        <param name="rules">
            The rule applied to the policy.
            Please note <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyApprovalRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyEnablementRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule" /> and <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule" />.
            </param>
        <param name="effectiveRules">
            The readonly computed rule applied to the policy.
            Please note <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyApprovalRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyEnablementRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule" /> and <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule" />.
            </param>
        <param name="policyProperties"> Additional properties of scope. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleManagementPolicyProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties RoleManagementPolicyProperties (Azure.Core.ResourceIdentifier scopeId = default, string scopeDisplayName = default, Azure.ResourceManager.Authorization.Models.RoleManagementScopeType? scopeType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties RoleManagementPolicyProperties(class Azure.Core.ResourceIdentifier scopeId, string scopeDisplayName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementScopeType&gt; scopeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleManagementPolicyProperties(Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScopeType})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoleManagementPolicyProperties (Optional scopeId As ResourceIdentifier = Nothing, Optional scopeDisplayName As String = Nothing, Optional scopeType As Nullable(Of RoleManagementScopeType) = Nothing) As RoleManagementPolicyProperties" />
      <MemberSignature Language="F#" Value="static member RoleManagementPolicyProperties : Azure.Core.ResourceIdentifier * string * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScopeType&gt; -&gt; Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties" Usage="Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleManagementPolicyProperties (scopeId, scopeDisplayName, scopeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="scopeDisplayName" Type="System.String" />
        <Parameter Name="scopeType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementScopeType&gt;" />
      </Parameters>
      <Docs>
        <param name="scopeId"> Scope id of the resource. </param>
        <param name="scopeDisplayName"> Display name of the resource. </param>
        <param name="scopeType"> Type of the scope. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleManagementPrincipal">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal RoleManagementPrincipal (string id = default, string displayName = default, Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType? principalType = default, string email = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal RoleManagementPrincipal(string id, string displayName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt; principalType, string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleManagementPrincipal(System.String,System.String,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoleManagementPrincipal (Optional id As String = Nothing, Optional displayName As String = Nothing, Optional principalType As Nullable(Of RoleManagementPrincipalType) = Nothing, Optional email As String = Nothing) As RoleManagementPrincipal" />
      <MemberSignature Language="F#" Value="static member RoleManagementPrincipal : string * string * Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt; * string -&gt; Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal" Usage="Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleManagementPrincipal (id, displayName, principalType, email)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="principalType" Type="System.Nullable&lt;Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType&gt;" />
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id of the principal made changes. </param>
        <param name="displayName"> The name of the principal made changes. </param>
        <param name="principalType"> Type of the principal. </param>
        <param name="email"> Email of principal. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
