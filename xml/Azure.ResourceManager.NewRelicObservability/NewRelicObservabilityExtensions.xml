<Type Name="NewRelicObservabilityExtensions" FullName="Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions">
  <TypeSignature Language="C#" Value="public static class NewRelicObservabilityExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NewRelicObservabilityExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module NewRelicObservabilityExtensions" />
  <TypeSignature Language="F#" Value="type NewRelicObservabilityExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.NewRelicObservability</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.NewRelicObservability. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetNewRelicAccounts">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.NewRelicObservability.Models.NewRelicAccountResourceData&gt; GetNewRelicAccounts (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string userEmail, Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.NewRelicObservability.Models.NewRelicAccountResourceData&gt; GetNewRelicAccounts(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string userEmail, valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicAccounts(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNewRelicAccounts (subscriptionResource As SubscriptionResource, userEmail As String, location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of NewRelicAccountResourceData)" />
      <MemberSignature Language="F#" Value="static member GetNewRelicAccounts : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.NewRelicObservability.Models.NewRelicAccountResourceData&gt;" Usage="Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicAccounts (subscriptionResource, userEmail, location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NewRelicObservability</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.NewRelicObservability.Models.NewRelicAccountResourceData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="userEmail" Type="System.String" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="userEmail"> User Email. </param>
        <param name="location"> Location for NewRelic. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the existing accounts
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/NewRelic.Observability/accounts</description></item><item><term>Operation Id</term><description>Accounts_List</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NewRelicObservability.Mocking.MockableNewRelicObservabilitySubscriptionResource.GetNewRelicAccounts(System.String,Azure.Core.AzureLocation,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.NewRelicObservability.Models.NewRelicAccountResourceData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="userEmail" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNewRelicAccountsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.NewRelicObservability.Models.NewRelicAccountResourceData&gt; GetNewRelicAccountsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string userEmail, Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.NewRelicObservability.Models.NewRelicAccountResourceData&gt; GetNewRelicAccountsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string userEmail, valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicAccountsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNewRelicAccountsAsync (subscriptionResource As SubscriptionResource, userEmail As String, location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of NewRelicAccountResourceData)" />
      <MemberSignature Language="F#" Value="static member GetNewRelicAccountsAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.NewRelicObservability.Models.NewRelicAccountResourceData&gt;" Usage="Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicAccountsAsync (subscriptionResource, userEmail, location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NewRelicObservability</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.NewRelicObservability.Models.NewRelicAccountResourceData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="userEmail" Type="System.String" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="userEmail"> User Email. </param>
        <param name="location"> Location for NewRelic. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the existing accounts
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/NewRelic.Observability/accounts</description></item><item><term>Operation Id</term><description>Accounts_List</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NewRelicObservability.Mocking.MockableNewRelicObservabilitySubscriptionResource.GetNewRelicAccounts(System.String,Azure.Core.AzureLocation,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.NewRelicObservability.Models.NewRelicAccountResourceData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="userEmail" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNewRelicMonitoredSubscriptionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.NewRelicObservability.NewRelicMonitoredSubscriptionResource GetNewRelicMonitoredSubscriptionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.NewRelicObservability.NewRelicMonitoredSubscriptionResource GetNewRelicMonitoredSubscriptionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicMonitoredSubscriptionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNewRelicMonitoredSubscriptionResource (client As ArmClient, id As ResourceIdentifier) As NewRelicMonitoredSubscriptionResource" />
      <MemberSignature Language="F#" Value="static member GetNewRelicMonitoredSubscriptionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NewRelicObservability.NewRelicMonitoredSubscriptionResource" Usage="Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicMonitoredSubscriptionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NewRelicObservability</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NewRelicObservability.NewRelicMonitoredSubscriptionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NewRelicObservability.NewRelicMonitoredSubscriptionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NewRelicObservability.NewRelicMonitoredSubscriptionResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.NewRelicObservability.Models.MonitoredSubscriptionConfigurationName)" /> to create a <see cref="T:Azure.ResourceManager.NewRelicObservability.NewRelicMonitoredSubscriptionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NewRelicObservability.Mocking.MockableNewRelicObservabilityArmClient.GetNewRelicMonitoredSubscriptionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NewRelicObservability.NewRelicMonitoredSubscriptionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNewRelicMonitorResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource GetNewRelicMonitorResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource GetNewRelicMonitorResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicMonitorResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNewRelicMonitorResource (client As ArmClient, id As ResourceIdentifier) As NewRelicMonitorResource" />
      <MemberSignature Language="F#" Value="static member GetNewRelicMonitorResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource" Usage="Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicMonitorResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NewRelicObservability</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NewRelicObservability.Mocking.MockableNewRelicObservabilityArmClient.GetNewRelicMonitorResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNewRelicMonitorResource">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource&gt; GetNewRelicMonitorResource (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string monitorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource&gt; GetNewRelicMonitorResource(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string monitorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicMonitorResource(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNewRelicMonitorResource (resourceGroupResource As ResourceGroupResource, monitorName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NewRelicMonitorResource)" />
      <MemberSignature Language="F#" Value="static member GetNewRelicMonitorResource : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource&gt;" Usage="Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicMonitorResource (resourceGroupResource, monitorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NewRelicObservability</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="monitorName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="monitorName"> Name of the Monitors resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a NewRelicMonitorResource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}</description></item><item><term>Operation Id</term><description>Monitors_Get</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NewRelicObservability.Mocking.MockableNewRelicObservabilityResourceGroupResource.GetNewRelicMonitorResource(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="monitorName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="monitorName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNewRelicMonitorResourceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource&gt;&gt; GetNewRelicMonitorResourceAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string monitorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource&gt;&gt; GetNewRelicMonitorResourceAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string monitorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicMonitorResourceAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNewRelicMonitorResourceAsync (resourceGroupResource As ResourceGroupResource, monitorName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NewRelicMonitorResource))" />
      <MemberSignature Language="F#" Value="static member GetNewRelicMonitorResourceAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource&gt;&gt;" Usage="Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicMonitorResourceAsync (resourceGroupResource, monitorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NewRelicObservability</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="monitorName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="monitorName"> Name of the Monitors resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a NewRelicMonitorResource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}</description></item><item><term>Operation Id</term><description>Monitors_Get</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NewRelicObservability.Mocking.MockableNewRelicObservabilityResourceGroupResource.GetNewRelicMonitorResourceAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="monitorName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="monitorName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNewRelicMonitorResources">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResourceCollection GetNewRelicMonitorResources (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResourceCollection GetNewRelicMonitorResources(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicMonitorResources(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNewRelicMonitorResources (resourceGroupResource As ResourceGroupResource) As NewRelicMonitorResourceCollection" />
      <MemberSignature Language="F#" Value="static member GetNewRelicMonitorResources : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResourceCollection" Usage="Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicMonitorResources resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NewRelicObservability</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of NewRelicMonitorResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NewRelicObservability.Mocking.MockableNewRelicObservabilityResourceGroupResource.GetNewRelicMonitorResources" /> instead.</description></item></summary>
        <returns> An object representing collection of NewRelicMonitorResources and their operations over a NewRelicMonitorResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNewRelicMonitorResources">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource&gt; GetNewRelicMonitorResources (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource&gt; GetNewRelicMonitorResources(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicMonitorResources(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNewRelicMonitorResources (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of NewRelicMonitorResource)" />
      <MemberSignature Language="F#" Value="static member GetNewRelicMonitorResources : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource&gt;" Usage="Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicMonitorResources (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NewRelicObservability</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List NewRelicMonitorResource resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/NewRelic.Observability/monitors</description></item><item><term>Operation Id</term><description>Monitors_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NewRelicObservability.Mocking.MockableNewRelicObservabilitySubscriptionResource.GetNewRelicMonitorResources(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNewRelicMonitorResourcesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource&gt; GetNewRelicMonitorResourcesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource&gt; GetNewRelicMonitorResourcesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicMonitorResourcesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNewRelicMonitorResourcesAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of NewRelicMonitorResource)" />
      <MemberSignature Language="F#" Value="static member GetNewRelicMonitorResourcesAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource&gt;" Usage="Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicMonitorResourcesAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NewRelicObservability</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List NewRelicMonitorResource resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/NewRelic.Observability/monitors</description></item><item><term>Operation Id</term><description>Monitors_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NewRelicObservability.Mocking.MockableNewRelicObservabilitySubscriptionResource.GetNewRelicMonitorResources(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.NewRelicObservability.NewRelicMonitorResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNewRelicObservabilityTagRuleResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityTagRuleResource GetNewRelicObservabilityTagRuleResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityTagRuleResource GetNewRelicObservabilityTagRuleResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicObservabilityTagRuleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNewRelicObservabilityTagRuleResource (client As ArmClient, id As ResourceIdentifier) As NewRelicObservabilityTagRuleResource" />
      <MemberSignature Language="F#" Value="static member GetNewRelicObservabilityTagRuleResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityTagRuleResource" Usage="Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicObservabilityTagRuleResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NewRelicObservability</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityTagRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityTagRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityTagRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityTagRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NewRelicObservability.Mocking.MockableNewRelicObservabilityArmClient.GetNewRelicObservabilityTagRuleResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityTagRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNewRelicOrganizations">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.NewRelicObservability.Models.NewRelicOrganizationResourceData&gt; GetNewRelicOrganizations (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string userEmail, Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.NewRelicObservability.Models.NewRelicOrganizationResourceData&gt; GetNewRelicOrganizations(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string userEmail, valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicOrganizations(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNewRelicOrganizations (subscriptionResource As SubscriptionResource, userEmail As String, location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of NewRelicOrganizationResourceData)" />
      <MemberSignature Language="F#" Value="static member GetNewRelicOrganizations : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.NewRelicObservability.Models.NewRelicOrganizationResourceData&gt;" Usage="Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicOrganizations (subscriptionResource, userEmail, location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NewRelicObservability</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.NewRelicObservability.Models.NewRelicOrganizationResourceData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="userEmail" Type="System.String" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="userEmail"> User Email. </param>
        <param name="location"> Location for NewRelic. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the existing organizations
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/NewRelic.Observability/organizations</description></item><item><term>Operation Id</term><description>Organizations_List</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NewRelicObservability.Mocking.MockableNewRelicObservabilitySubscriptionResource.GetNewRelicOrganizations(System.String,Azure.Core.AzureLocation,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.NewRelicObservability.Models.NewRelicOrganizationResourceData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="userEmail" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNewRelicOrganizationsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.NewRelicObservability.Models.NewRelicOrganizationResourceData&gt; GetNewRelicOrganizationsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string userEmail, Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.NewRelicObservability.Models.NewRelicOrganizationResourceData&gt; GetNewRelicOrganizationsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string userEmail, valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicOrganizationsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNewRelicOrganizationsAsync (subscriptionResource As SubscriptionResource, userEmail As String, location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of NewRelicOrganizationResourceData)" />
      <MemberSignature Language="F#" Value="static member GetNewRelicOrganizationsAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.NewRelicObservability.Models.NewRelicOrganizationResourceData&gt;" Usage="Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicOrganizationsAsync (subscriptionResource, userEmail, location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NewRelicObservability</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.NewRelicObservability.Models.NewRelicOrganizationResourceData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="userEmail" Type="System.String" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="userEmail"> User Email. </param>
        <param name="location"> Location for NewRelic. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the existing organizations
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/NewRelic.Observability/organizations</description></item><item><term>Operation Id</term><description>Organizations_List</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NewRelicObservability.Mocking.MockableNewRelicObservabilitySubscriptionResource.GetNewRelicOrganizations(System.String,Azure.Core.AzureLocation,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.NewRelicObservability.Models.NewRelicOrganizationResourceData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="userEmail" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNewRelicPlans">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.NewRelicObservability.Models.NewRelicPlanData&gt; GetNewRelicPlans (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string accountId = default, string organizationId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.NewRelicObservability.Models.NewRelicPlanData&gt; GetNewRelicPlans(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string accountId, string organizationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicPlans(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNewRelicPlans (subscriptionResource As SubscriptionResource, Optional accountId As String = Nothing, Optional organizationId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of NewRelicPlanData)" />
      <MemberSignature Language="F#" Value="static member GetNewRelicPlans : Azure.ResourceManager.Resources.SubscriptionResource * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.NewRelicObservability.Models.NewRelicPlanData&gt;" Usage="Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicPlans (subscriptionResource, accountId, organizationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NewRelicObservability</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.NewRelicObservability.Models.NewRelicPlanData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="accountId" Type="System.String" />
        <Parameter Name="organizationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="accountId"> Account Id. </param>
        <param name="organizationId"> Organization Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List plans data
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/NewRelic.Observability/plans</description></item><item><term>Operation Id</term><description>Plans_List</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NewRelicObservability.Mocking.MockableNewRelicObservabilitySubscriptionResource.GetNewRelicPlans(System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.NewRelicObservability.Models.NewRelicPlanData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNewRelicPlansAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.NewRelicObservability.Models.NewRelicPlanData&gt; GetNewRelicPlansAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string accountId = default, string organizationId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.NewRelicObservability.Models.NewRelicPlanData&gt; GetNewRelicPlansAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string accountId, string organizationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicPlansAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNewRelicPlansAsync (subscriptionResource As SubscriptionResource, Optional accountId As String = Nothing, Optional organizationId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of NewRelicPlanData)" />
      <MemberSignature Language="F#" Value="static member GetNewRelicPlansAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.NewRelicObservability.Models.NewRelicPlanData&gt;" Usage="Azure.ResourceManager.NewRelicObservability.NewRelicObservabilityExtensions.GetNewRelicPlansAsync (subscriptionResource, accountId, organizationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NewRelicObservability</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.NewRelicObservability.Models.NewRelicPlanData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="accountId" Type="System.String" />
        <Parameter Name="organizationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="accountId"> Account Id. </param>
        <param name="organizationId"> Organization Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List plans data
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/NewRelic.Observability/plans</description></item><item><term>Operation Id</term><description>Plans_List</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NewRelicObservability.Mocking.MockableNewRelicObservabilitySubscriptionResource.GetNewRelicPlans(System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.NewRelicObservability.Models.NewRelicPlanData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
