<Type Name="EmailSendOperation" FullName="Azure.Communication.Email.EmailSendOperation">
  <TypeSignature Language="C#" Value="public class EmailSendOperation : Azure.Operation&lt;Azure.Communication.Email.EmailSendResult&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EmailSendOperation extends Azure.Operation`1&lt;class Azure.Communication.Email.EmailSendResult&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.Communication.Email.EmailSendOperation" />
  <TypeSignature Language="VB.NET" Value="Public Class EmailSendOperation&#xA;Inherits Operation(Of EmailSendResult)" />
  <TypeSignature Language="F#" Value="type EmailSendOperation = class&#xA;    inherit Operation&lt;EmailSendResult&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.Communication.Email</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Operation&lt;Azure.Communication.Email.EmailSendResult&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">Azure.Communication.Email.EmailSendResult</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary> An <see cref="T:Azure.Operation`1" /> for tracking the status of a
            <see cref="M:Azure.Communication.Email.EmailClient.SendAsync(Azure.WaitUntil,Azure.Communication.Email.EmailMessage,System.Threading.CancellationToken)" /> request.
            Its <see cref="P:Azure.Operation`1.Value" /> upon successful completion will
            be an object which contains the OperationId = <see cref="P:Azure.Communication.Email.EmailSendResult.Id" />, operation status
            = <see cref="P:Azure.Communication.Email.EmailSendResult.Status" /> and error if any for terminal failed status.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EmailSendOperation ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Email.EmailSendOperation.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Email</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new <see cref="T:Azure.Communication.Email.EmailSendOperation" /> instance for
            mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmailSendOperation (string id, Azure.Communication.Email.EmailClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id, class Azure.Communication.Email.EmailClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Email.EmailSendOperation.#ctor(System.String,Azure.Communication.Email.EmailClient)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As String, client As EmailClient)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.Email.EmailSendOperation : string * Azure.Communication.Email.EmailClient -&gt; Azure.Communication.Email.EmailSendOperation" Usage="new Azure.Communication.Email.EmailSendOperation (id, client)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Email</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="client" Type="Azure.Communication.Email.EmailClient" />
      </Parameters>
      <Docs>
        <param name="id">The ID of this operation.</param>
        <param name="client">
            The client used to check for completion.
            </param>
        <summary>
            Initializes a new <see cref="T:Azure.Communication.Email.EmailSendOperation" /> instance
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRawResponse">
      <MemberSignature Language="C#" Value="public override Azure.Response GetRawResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Azure.Response GetRawResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Email.EmailSendOperation.GetRawResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRawResponse () As Response" />
      <MemberSignature Language="F#" Value="override this.GetRawResponse : unit -&gt; Azure.Response" Usage="emailSendOperation.GetRawResponse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Email</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            The last HTTP response received from the server.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasCompleted">
      <MemberSignature Language="C#" Value="public override bool HasCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasCompleted" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.Email.EmailSendOperation.HasCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasCompleted As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasCompleted : bool" Usage="Azure.Communication.Email.EmailSendOperation.HasCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Email</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether the operation has completed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public override bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.Email.EmailSendOperation.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="Azure.Communication.Email.EmailSendOperation.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Email</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether the operation completed and
            successfully produced a value.  The <see cref="P:Azure.Operation`1.Value" />
            property is the status of the email send operation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public override string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.Email.EmailSendOperation.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Id As String" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="Azure.Communication.Email.EmailSendOperation.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Email</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateStatus">
      <MemberSignature Language="C#" Value="public override Azure.Response UpdateStatus (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Azure.Response UpdateStatus(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Email.EmailSendOperation.UpdateStatus(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UpdateStatus (Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="override this.UpdateStatus : System.Threading.CancellationToken -&gt; Azure.Response" Usage="emailSendOperation.UpdateStatus cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Email</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Check for the latest status of the email send operation.
            </summary>
        <returns>The HTTP response received from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateStatusAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;Azure.Response&gt; UpdateStatusAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;class Azure.Response&gt; UpdateStatusAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Email.EmailSendOperation.UpdateStatusAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UpdateStatusAsync (Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of Response)" />
      <MemberSignature Language="F#" Value="override this.UpdateStatusAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Azure.Response&gt;" Usage="emailSendOperation.UpdateStatusAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Email</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Check for the latest status of the email send operation.
            </summary>
        <returns>The HTTP response received from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override Azure.Communication.Email.EmailSendResult Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Communication.Email.EmailSendResult Value" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.Email.EmailSendOperation.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As EmailSendResult" />
      <MemberSignature Language="F#" Value="member this.Value : Azure.Communication.Email.EmailSendResult" Usage="Azure.Communication.Email.EmailSendOperation.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Email</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.Email.EmailSendResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the status of the email send operation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForCompletion">
      <MemberSignature Language="C#" Value="public override Azure.Response&lt;Azure.Communication.Email.EmailSendResult&gt; WaitForCompletion (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Azure.Response`1&lt;class Azure.Communication.Email.EmailSendResult&gt; WaitForCompletion(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Email.EmailSendOperation.WaitForCompletion(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WaitForCompletion (Optional cancellationToken As CancellationToken = Nothing) As Response(Of EmailSendResult)" />
      <MemberSignature Language="F#" Value="override this.WaitForCompletion : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.Email.EmailSendResult&gt;" Usage="emailSendOperation.WaitForCompletion cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Email</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.Email.EmailSendResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param>
        <summary>
            Periodically calls the server till the long-running operation completes.
            </summary>
        <returns>The last HTTP response received from the server.</returns>
        <remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForCompletion">
      <MemberSignature Language="C#" Value="public override Azure.Response&lt;Azure.Communication.Email.EmailSendResult&gt; WaitForCompletion (TimeSpan suggestedPollingInterval, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Azure.Response`1&lt;class Azure.Communication.Email.EmailSendResult&gt; WaitForCompletion(valuetype System.TimeSpan suggestedPollingInterval, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Email.EmailSendOperation.WaitForCompletion(System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WaitForCompletion (suggestedPollingInterval As TimeSpan, cancellationToken As CancellationToken) As Response(Of EmailSendResult)" />
      <MemberSignature Language="F#" Value="override this.WaitForCompletion : TimeSpan * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.Email.EmailSendResult&gt;" Usage="emailSendOperation.WaitForCompletion (suggestedPollingInterval, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Email</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.Email.EmailSendResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="suggestedPollingInterval" Type="System.TimeSpan" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="suggestedPollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            In that case, it uses the larger of the values between this value and the one returned from the server.
            </param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param>
        <summary>
            Periodically calls the server till the long-running operation completes.
            </summary>
        <returns>The last HTTP response received from the server.</returns>
        <remarks>
            This method will periodically call UpdateStatus till HasCompleted is true, then return the final result of the operation.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForCompletionAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;Azure.Response&lt;Azure.Communication.Email.EmailSendResult&gt;&gt; WaitForCompletionAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;class Azure.Response`1&lt;class Azure.Communication.Email.EmailSendResult&gt;&gt; WaitForCompletionAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Email.EmailSendOperation.WaitForCompletionAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WaitForCompletionAsync (Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of Response(Of EmailSendResult))" />
      <MemberSignature Language="F#" Value="override this.WaitForCompletionAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Azure.Response&lt;Azure.Communication.Email.EmailSendResult&gt;&gt;" Usage="emailSendOperation.WaitForCompletionAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Email</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Azure.Response&lt;Azure.Communication.Email.EmailSendResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param>
        <summary>
            Periodically calls the server till the long-running operation completes.
            </summary>
        <returns>The last HTTP response received from the server.</returns>
        <remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForCompletionAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;Azure.Response&lt;Azure.Communication.Email.EmailSendResult&gt;&gt; WaitForCompletionAsync (TimeSpan suggestedPollingInterval, System.Threading.CancellationToken cancellationToken);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;class Azure.Response`1&lt;class Azure.Communication.Email.EmailSendResult&gt;&gt; WaitForCompletionAsync(valuetype System.TimeSpan suggestedPollingInterval, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Email.EmailSendOperation.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WaitForCompletionAsync (suggestedPollingInterval As TimeSpan, cancellationToken As CancellationToken) As ValueTask(Of Response(Of EmailSendResult))" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="override this.WaitForCompletionAsync : TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Azure.Response&lt;Azure.Communication.Email.EmailSendResult&gt;&gt;" Usage="emailSendOperation.WaitForCompletionAsync (suggestedPollingInterval, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;Azure.Response&lt;Azure.Communication.Email.EmailSendResult&gt;&gt; WaitForCompletionAsync (TimeSpan pollingInterval, System.Threading.CancellationToken cancellationToken);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;class Azure.Response`1&lt;class Azure.Communication.Email.EmailSendResult&gt;&gt; WaitForCompletionAsync(valuetype System.TimeSpan pollingInterval, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WaitForCompletionAsync (pollingInterval As TimeSpan, cancellationToken As CancellationToken) As ValueTask(Of Response(Of EmailSendResult))" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="override this.WaitForCompletionAsync : TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Azure.Response&lt;Azure.Communication.Email.EmailSendResult&gt;&gt;" Usage="emailSendOperation.WaitForCompletionAsync (pollingInterval, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Email</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Azure.Response&lt;Azure.Communication.Email.EmailSendResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="suggestedPollingInterval" Type="System.TimeSpan" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="pollingInterval" Type="System.TimeSpan" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" />
      </Parameters>
      <Docs>
        <param name="suggestedPollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            In that case, it uses the larger of the values between this value and the one returned from the server.
            </param>
        <param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param>
        <summary>
            Periodically calls the server till the long-running operation completes.
            </summary>
        <returns>The last HTTP response received from the server.</returns>
        <remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
