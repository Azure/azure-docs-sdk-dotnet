<Type Name="IWithElasticPoolBeta" FullName="Microsoft.Azure.Management.Sql.Fluent.SqlServer.Update.IWithElasticPoolBeta">
  <TypeSignature Language="C#" Value="public interface IWithElasticPoolBeta : Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWithElasticPoolBeta implements class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Sql.Fluent.SqlServer.Update.IWithElasticPoolBeta" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWithElasticPoolBeta&#xA;Implements IBeta" />
  <TypeSignature Language="F#" Value="type IWithElasticPoolBeta = interface&#xA;    interface IBeta" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Sql.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A SQL Server definition for specifying elastic pool.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="WithNewElasticPool">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Sql.Fluent.SqlServer.Update.IUpdate WithNewElasticPool (string elasticPoolName, string elasticPoolEdition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Sql.Fluent.SqlServer.Update.IUpdate WithNewElasticPool(string elasticPoolName, string elasticPoolEdition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Sql.Fluent.SqlServer.Update.IWithElasticPoolBeta.WithNewElasticPool(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithNewElasticPool (elasticPoolName As String, elasticPoolEdition As String) As IUpdate" />
      <MemberSignature Language="F#" Value="abstract member WithNewElasticPool : string * string -&gt; Microsoft.Azure.Management.Sql.Fluent.SqlServer.Update.IUpdate" Usage="iWithElasticPoolBeta.WithNewElasticPool (elasticPoolName, elasticPoolEdition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Sql.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Sql.Fluent.SqlServer.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elasticPoolName" Type="System.String" />
        <Parameter Name="elasticPoolEdition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elasticPoolName">Name of the elastic pool to be created.</param>
        <param name="elasticPoolEdition">Edition of the elastic pool.</param>
        <summary>
            Create new elastic pool in the SQL Server.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Next stage of the SQL Server update.</return>
      </Docs>
    </Member>
    <Member MemberName="WithNewElasticPool">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Sql.Fluent.SqlServer.Update.IUpdate WithNewElasticPool (string elasticPoolName, string elasticPoolEdition, params string[] databaseNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Sql.Fluent.SqlServer.Update.IUpdate WithNewElasticPool(string elasticPoolName, string elasticPoolEdition, string[] databaseNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Sql.Fluent.SqlServer.Update.IWithElasticPoolBeta.WithNewElasticPool(System.String,System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function WithNewElasticPool (elasticPoolName As String, elasticPoolEdition As String, ParamArray databaseNames As String()) As IUpdate" />
      <MemberSignature Language="F#" Value="abstract member WithNewElasticPool : string * string * string[] -&gt; Microsoft.Azure.Management.Sql.Fluent.SqlServer.Update.IUpdate" Usage="iWithElasticPoolBeta.WithNewElasticPool (elasticPoolName, elasticPoolEdition, databaseNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Sql.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Sql.Fluent.SqlServer.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elasticPoolName" Type="System.String" />
        <Parameter Name="elasticPoolEdition" Type="System.String" />
        <Parameter Name="databaseNames" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="azure-dotnet">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elasticPoolName">Name of the elastic pool to be created.</param>
        <param name="elasticPoolEdition">Edition of the elastic pool.</param>
        <param name="databaseNames">Names of the database to be included in the elastic pool.</param>
        <summary>
            Create new elastic pool in the SQL Server.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Next stage of the SQL Server update.</return>
      </Docs>
    </Member>
  </Members>
</Type>