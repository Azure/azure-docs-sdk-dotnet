<Type Name="IotHubDescriptionResource" FullName="Azure.ResourceManager.IotHub.IotHubDescriptionResource">
  <TypeSignature Language="C#" Value="public class IotHubDescriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IotHubDescriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.IotHub.IotHubDescriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class IotHubDescriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type IotHubDescriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing an IotHubDescription along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.IotHub.IotHubDescriptionResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetIotHubDescriptionResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetIotHubDescription method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IotHubDescriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.IotHub.IotHubDescriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt; AddTag (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt; AddTag(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.AddTag(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTag (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IotHubDescriptionResource)" />
      <MemberSignature Language="F#" Value="abstract member AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&#xA;override this.AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;" Usage="iotHubDescriptionResource.AddTag (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}
            Operation Id: IotHubResource_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt; AddTagAsync (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt; AddTagAsync(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTagAsync (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IotHubDescriptionResource))" />
      <MemberSignature Language="F#" Value="abstract member AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt;&#xA;override this.AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt;" Usage="iotHubDescriptionResource.AddTagAsync (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}
            Operation Id: IotHubResource_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.CreateResourceIdentifier(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, resourceName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.IotHub.IotHubDescriptionResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="resourceGroupName">To be added.</param>
        <param name="resourceName">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.IotHub.IotHubDescriptionResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.IotHub.IotHubDescriptionData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.IotHub.IotHubDescriptionData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.IotHub.IotHubDescriptionResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As IotHubDescriptionData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.IotHub.IotHubDescriptionData" Usage="Azure.ResourceManager.IotHub.IotHubDescriptionResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.IotHub.IotHubDescriptionData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt; Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt; Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of IotHubDescriptionResource)" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;" Usage="iotHubDescriptionResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete an IoT hub.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}
            Operation Id: IotHubResource_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of IotHubDescriptionResource))" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt;" Usage="iotHubDescriptionResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete an IoT hub.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}
            Operation Id: IotHubResource_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportDevices">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt; ExportDevices (Azure.ResourceManager.IotHub.Models.ExportDevicesContent content, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt; ExportDevices(class Azure.ResourceManager.IotHub.Models.ExportDevicesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.ExportDevices(Azure.ResourceManager.IotHub.Models.ExportDevicesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportDevices (content As ExportDevicesContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IotHubJobInfo)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member ExportDevices : Azure.ResourceManager.IotHub.Models.ExportDevicesContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;&#xA;override this.ExportDevices : Azure.ResourceManager.IotHub.Models.ExportDevicesContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;" Usage="iotHubDescriptionResource.ExportDevices (content, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt; ExportDevices (Azure.ResourceManager.IotHub.Models.ExportDevicesContent content, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.JobResponse&gt; ExportDevices(class Azure.ResourceManager.IotHub.Models.ExportDevicesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportDevices (content As ExportDevicesContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of JobResponse)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member ExportDevices : Azure.ResourceManager.IotHub.Models.ExportDevicesContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;&#xA;override this.ExportDevices : Azure.ResourceManager.IotHub.Models.ExportDevicesContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;" Usage="iotHubDescriptionResource.ExportDevices (content, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">Azure.Response&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.IotHub.Models.ExportDevicesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The parameters that specify the export devices operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Exports all the device identities in the IoT hub identity registry to an Azure Storage blob container. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/exportDevices
            Operation Id: IotHubResource_ExportDevices
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExportDevicesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;&gt; ExportDevicesAsync (Azure.ResourceManager.IotHub.Models.ExportDevicesContent content, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;&gt; ExportDevicesAsync(class Azure.ResourceManager.IotHub.Models.ExportDevicesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.ExportDevicesAsync(Azure.ResourceManager.IotHub.Models.ExportDevicesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportDevicesAsync (content As ExportDevicesContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IotHubJobInfo))" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member ExportDevicesAsync : Azure.ResourceManager.IotHub.Models.ExportDevicesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;&gt;&#xA;override this.ExportDevicesAsync : Azure.ResourceManager.IotHub.Models.ExportDevicesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;&gt;" Usage="iotHubDescriptionResource.ExportDevicesAsync (content, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;&gt; ExportDevicesAsync (Azure.ResourceManager.IotHub.Models.ExportDevicesContent content, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.JobResponse&gt;&gt; ExportDevicesAsync(class Azure.ResourceManager.IotHub.Models.ExportDevicesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportDevicesAsync (content As ExportDevicesContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of JobResponse))" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member ExportDevicesAsync : Azure.ResourceManager.IotHub.Models.ExportDevicesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;&gt;&#xA;override this.ExportDevicesAsync : Azure.ResourceManager.IotHub.Models.ExportDevicesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;&gt;" Usage="iotHubDescriptionResource.ExportDevicesAsync (content, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.IotHub.Models.ExportDevicesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The parameters that specify the export devices operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Exports all the device identities in the IoT hub identity registry to an Azure Storage blob container. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/exportDevices
            Operation Id: IotHubResource_ExportDevices
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of IotHubDescriptionResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;" Usage="iotHubDescriptionResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the non-security related metadata of an IoT hub.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}
            Operation Id: IotHubResource_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllGroupIdInformation">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.IotHub.GroupIdInformationCollection GetAllGroupIdInformation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.IotHub.GroupIdInformationCollection GetAllGroupIdInformation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetAllGroupIdInformation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllGroupIdInformation () As GroupIdInformationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAllGroupIdInformation : unit -&gt; Azure.ResourceManager.IotHub.GroupIdInformationCollection&#xA;override this.GetAllGroupIdInformation : unit -&gt; Azure.ResourceManager.IotHub.GroupIdInformationCollection" Usage="iotHubDescriptionResource.GetAllGroupIdInformation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.IotHub.GroupIdInformationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of GroupIdInformationResources in the IotHubDescription. </summary>
        <returns> An object representing collection of GroupIdInformationResources and their operations over a GroupIdInformationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllIotHubPrivateEndpointGroupInformation">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.IotHub.IotHubPrivateEndpointGroupInformationCollection GetAllIotHubPrivateEndpointGroupInformation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.IotHub.IotHubPrivateEndpointGroupInformationCollection GetAllIotHubPrivateEndpointGroupInformation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetAllIotHubPrivateEndpointGroupInformation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllIotHubPrivateEndpointGroupInformation () As IotHubPrivateEndpointGroupInformationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAllIotHubPrivateEndpointGroupInformation : unit -&gt; Azure.ResourceManager.IotHub.IotHubPrivateEndpointGroupInformationCollection&#xA;override this.GetAllIotHubPrivateEndpointGroupInformation : unit -&gt; Azure.ResourceManager.IotHub.IotHubPrivateEndpointGroupInformationCollection" Usage="iotHubDescriptionResource.GetAllIotHubPrivateEndpointGroupInformation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.IotHub.IotHubPrivateEndpointGroupInformationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of IotHubPrivateEndpointGroupInformationResources in the IotHubDescription. </summary>
        <returns> An object representing collection of IotHubPrivateEndpointGroupInformationResources and their operations over a IotHubPrivateEndpointGroupInformationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IotHubDescriptionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt;" Usage="iotHubDescriptionResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the non-security related metadata of an IoT hub.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}
            Operation Id: IotHubResource_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCertificateDescription">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.IotHub.CertificateDescriptionResource&gt; GetCertificateDescription (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.CertificateDescriptionResource&gt; GetCertificateDescription(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetCertificateDescription(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCertificateDescription (certificateName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CertificateDescriptionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCertificateDescription : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.CertificateDescriptionResource&gt;&#xA;override this.GetCertificateDescription : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.CertificateDescriptionResource&gt;" Usage="iotHubDescriptionResource.GetCertificateDescription (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.IotHub.CertificateDescriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="certificateName"> The name of the certificate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the certificate.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}
            Operation Id: Certificates_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCertificateDescriptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.CertificateDescriptionResource&gt;&gt; GetCertificateDescriptionAsync (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.CertificateDescriptionResource&gt;&gt; GetCertificateDescriptionAsync(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetCertificateDescriptionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCertificateDescriptionAsync (certificateName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CertificateDescriptionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetCertificateDescriptionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.CertificateDescriptionResource&gt;&gt;&#xA;override this.GetCertificateDescriptionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.CertificateDescriptionResource&gt;&gt;" Usage="iotHubDescriptionResource.GetCertificateDescriptionAsync (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.CertificateDescriptionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="certificateName"> The name of the certificate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the certificate.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}
            Operation Id: Certificates_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCertificateDescriptions">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.IotHub.CertificateDescriptionCollection GetCertificateDescriptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.IotHub.CertificateDescriptionCollection GetCertificateDescriptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetCertificateDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCertificateDescriptions () As CertificateDescriptionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetCertificateDescriptions : unit -&gt; Azure.ResourceManager.IotHub.CertificateDescriptionCollection&#xA;override this.GetCertificateDescriptions : unit -&gt; Azure.ResourceManager.IotHub.CertificateDescriptionCollection" Usage="iotHubDescriptionResource.GetCertificateDescriptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.IotHub.CertificateDescriptionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of CertificateDescriptionResources in the IotHubDescription. </summary>
        <returns> An object representing collection of CertificateDescriptionResources and their operations over a CertificateDescriptionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEndpointHealth">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.IotHubEndpointHealthInfo&gt; GetEndpointHealth (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubEndpointHealthInfo&gt; GetEndpointHealth(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetEndpointHealth(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEndpointHealth (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of IotHubEndpointHealthInfo)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetEndpointHealth : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.IotHubEndpointHealthInfo&gt;&#xA;override this.GetEndpointHealth : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.IotHubEndpointHealthInfo&gt;" Usage="iotHubDescriptionResource.GetEndpointHealth cancellationToken" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.EndpointHealthData&gt; GetEndpointHealth (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.IotHub.Models.EndpointHealthData&gt; GetEndpointHealth(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEndpointHealth (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of EndpointHealthData)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetEndpointHealth : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.EndpointHealthData&gt;&#xA;override this.GetEndpointHealth : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.EndpointHealthData&gt;" Usage="iotHubDescriptionResource.GetEndpointHealth cancellationToken" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.IotHubEndpointHealthInfo&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.EndpointHealthData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the health for routing endpoints.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/routingEndpointsHealth
            Operation Id: IotHubResource_GetEndpointHealth
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.IotHub.Models.IotHubEndpointHealthInfo" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEndpointHealthAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.IotHubEndpointHealthInfo&gt; GetEndpointHealthAsync (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubEndpointHealthInfo&gt; GetEndpointHealthAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetEndpointHealthAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEndpointHealthAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of IotHubEndpointHealthInfo)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetEndpointHealthAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.IotHubEndpointHealthInfo&gt;&#xA;override this.GetEndpointHealthAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.IotHubEndpointHealthInfo&gt;" Usage="iotHubDescriptionResource.GetEndpointHealthAsync cancellationToken" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.EndpointHealthData&gt; GetEndpointHealthAsync (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.IotHub.Models.EndpointHealthData&gt; GetEndpointHealthAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEndpointHealthAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of EndpointHealthData)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetEndpointHealthAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.EndpointHealthData&gt;&#xA;override this.GetEndpointHealthAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.EndpointHealthData&gt;" Usage="iotHubDescriptionResource.GetEndpointHealthAsync cancellationToken" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.IotHubEndpointHealthInfo&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.EndpointHealthData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the health for routing endpoints.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/routingEndpointsHealth
            Operation Id: IotHubResource_GetEndpointHealth
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.IotHub.Models.IotHubEndpointHealthInfo" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubConsumerGroupInfo">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.IotHub.EventHubConsumerGroupInfoResource&gt; GetEventHubConsumerGroupInfo (string eventHubEndpointName, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.EventHubConsumerGroupInfoResource&gt; GetEventHubConsumerGroupInfo(string eventHubEndpointName, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetEventHubConsumerGroupInfo(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventHubConsumerGroupInfo (eventHubEndpointName As String, name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EventHubConsumerGroupInfoResource)" />
      <MemberSignature Language="F#" Value="abstract member GetEventHubConsumerGroupInfo : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.EventHubConsumerGroupInfoResource&gt;&#xA;override this.GetEventHubConsumerGroupInfo : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.EventHubConsumerGroupInfoResource&gt;" Usage="iotHubDescriptionResource.GetEventHubConsumerGroupInfo (eventHubEndpointName, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.IotHub.EventHubConsumerGroupInfoResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventHubEndpointName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="eventHubEndpointName"> The name of the Event Hub-compatible endpoint. </param>
        <param name="name"> The name of the consumer group to retrieve. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a consumer group from the Event Hub-compatible device-to-cloud endpoint for an IoT hub.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/eventHubEndpoints/{eventHubEndpointName}/ConsumerGroups/{name}
            Operation Id: IotHubResource_GetEventHubConsumerGroup
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="eventHubEndpointName" /> or <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="eventHubEndpointName" /> or <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubConsumerGroupInfoAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.EventHubConsumerGroupInfoResource&gt;&gt; GetEventHubConsumerGroupInfoAsync (string eventHubEndpointName, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.EventHubConsumerGroupInfoResource&gt;&gt; GetEventHubConsumerGroupInfoAsync(string eventHubEndpointName, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetEventHubConsumerGroupInfoAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventHubConsumerGroupInfoAsync (eventHubEndpointName As String, name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EventHubConsumerGroupInfoResource))" />
      <MemberSignature Language="F#" Value="abstract member GetEventHubConsumerGroupInfoAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.EventHubConsumerGroupInfoResource&gt;&gt;&#xA;override this.GetEventHubConsumerGroupInfoAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.EventHubConsumerGroupInfoResource&gt;&gt;" Usage="iotHubDescriptionResource.GetEventHubConsumerGroupInfoAsync (eventHubEndpointName, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.EventHubConsumerGroupInfoResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventHubEndpointName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="eventHubEndpointName"> The name of the Event Hub-compatible endpoint. </param>
        <param name="name"> The name of the consumer group to retrieve. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a consumer group from the Event Hub-compatible device-to-cloud endpoint for an IoT hub.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/eventHubEndpoints/{eventHubEndpointName}/ConsumerGroups/{name}
            Operation Id: IotHubResource_GetEventHubConsumerGroup
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="eventHubEndpointName" /> or <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="eventHubEndpointName" /> or <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubConsumerGroupInfos">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.IotHub.EventHubConsumerGroupInfoCollection GetEventHubConsumerGroupInfos (string eventHubEndpointName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.IotHub.EventHubConsumerGroupInfoCollection GetEventHubConsumerGroupInfos(string eventHubEndpointName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetEventHubConsumerGroupInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventHubConsumerGroupInfos (eventHubEndpointName As String) As EventHubConsumerGroupInfoCollection" />
      <MemberSignature Language="F#" Value="abstract member GetEventHubConsumerGroupInfos : string -&gt; Azure.ResourceManager.IotHub.EventHubConsumerGroupInfoCollection&#xA;override this.GetEventHubConsumerGroupInfos : string -&gt; Azure.ResourceManager.IotHub.EventHubConsumerGroupInfoCollection" Usage="iotHubDescriptionResource.GetEventHubConsumerGroupInfos eventHubEndpointName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.IotHub.EventHubConsumerGroupInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventHubEndpointName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventHubEndpointName"> The name of the Event Hub-compatible endpoint. </param>
        <summary> Gets a collection of EventHubConsumerGroupInfoResources in the IotHubDescription. </summary>
        <returns> An object representing collection of EventHubConsumerGroupInfoResources and their operations over a EventHubConsumerGroupInfoResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="eventHubEndpointName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="eventHubEndpointName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGroupIdInformation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.IotHub.GroupIdInformationResource&gt; GetGroupIdInformation (string groupId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.GroupIdInformationResource&gt; GetGroupIdInformation(string groupId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetGroupIdInformation(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGroupIdInformation (groupId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of GroupIdInformationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetGroupIdInformation : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.GroupIdInformationResource&gt;&#xA;override this.GetGroupIdInformation : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.GroupIdInformationResource&gt;" Usage="iotHubDescriptionResource.GetGroupIdInformation (groupId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.IotHub.GroupIdInformationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="groupId"> The name of the private link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the specified private link resource for the given IotHub
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateLinkResources/{groupId}
            Operation Id: PrivateLinkResources_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groupId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGroupIdInformationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.GroupIdInformationResource&gt;&gt; GetGroupIdInformationAsync (string groupId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.GroupIdInformationResource&gt;&gt; GetGroupIdInformationAsync(string groupId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetGroupIdInformationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGroupIdInformationAsync (groupId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of GroupIdInformationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetGroupIdInformationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.GroupIdInformationResource&gt;&gt;&#xA;override this.GetGroupIdInformationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.GroupIdInformationResource&gt;&gt;" Usage="iotHubDescriptionResource.GetGroupIdInformationAsync (groupId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.GroupIdInformationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="groupId"> The name of the private link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the specified private link resource for the given IotHub
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateLinkResources/{groupId}
            Operation Id: PrivateLinkResources_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groupId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIotHubCertificateDescription">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubCertificateDescriptionResource&gt; GetIotHubCertificateDescription (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.IotHubCertificateDescriptionResource&gt; GetIotHubCertificateDescription(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetIotHubCertificateDescription(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotHubCertificateDescription (certificateName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IotHubCertificateDescriptionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIotHubCertificateDescription : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubCertificateDescriptionResource&gt;&#xA;override this.GetIotHubCertificateDescription : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubCertificateDescriptionResource&gt;" Usage="iotHubDescriptionResource.GetIotHubCertificateDescription (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubCertificateDescriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="certificateName"> The name of the certificate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the certificate.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}
            Operation Id: Certificates_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIotHubCertificateDescriptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubCertificateDescriptionResource&gt;&gt; GetIotHubCertificateDescriptionAsync (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.IotHubCertificateDescriptionResource&gt;&gt; GetIotHubCertificateDescriptionAsync(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetIotHubCertificateDescriptionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotHubCertificateDescriptionAsync (certificateName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IotHubCertificateDescriptionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetIotHubCertificateDescriptionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubCertificateDescriptionResource&gt;&gt;&#xA;override this.GetIotHubCertificateDescriptionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubCertificateDescriptionResource&gt;&gt;" Usage="iotHubDescriptionResource.GetIotHubCertificateDescriptionAsync (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubCertificateDescriptionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="certificateName"> The name of the certificate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the certificate.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}
            Operation Id: Certificates_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIotHubCertificateDescriptions">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.IotHub.IotHubCertificateDescriptionCollection GetIotHubCertificateDescriptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.IotHub.IotHubCertificateDescriptionCollection GetIotHubCertificateDescriptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetIotHubCertificateDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotHubCertificateDescriptions () As IotHubCertificateDescriptionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetIotHubCertificateDescriptions : unit -&gt; Azure.ResourceManager.IotHub.IotHubCertificateDescriptionCollection&#xA;override this.GetIotHubCertificateDescriptions : unit -&gt; Azure.ResourceManager.IotHub.IotHubCertificateDescriptionCollection" Usage="iotHubDescriptionResource.GetIotHubCertificateDescriptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.IotHub.IotHubCertificateDescriptionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of IotHubCertificateDescriptionResources in the IotHubDescription. </summary>
        <returns> An object representing collection of IotHubCertificateDescriptionResources and their operations over a IotHubCertificateDescriptionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIotHubPrivateEndpointConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubPrivateEndpointConnectionResource&gt; GetIotHubPrivateEndpointConnection (string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.IotHubPrivateEndpointConnectionResource&gt; GetIotHubPrivateEndpointConnection(string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetIotHubPrivateEndpointConnection(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotHubPrivateEndpointConnection (privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IotHubPrivateEndpointConnectionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIotHubPrivateEndpointConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubPrivateEndpointConnectionResource&gt;&#xA;override this.GetIotHubPrivateEndpointConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubPrivateEndpointConnectionResource&gt;" Usage="iotHubDescriptionResource.GetIotHubPrivateEndpointConnection (privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubPrivateEndpointConnectionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get private endpoint connection properties
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: PrivateEndpointConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateEndpointConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIotHubPrivateEndpointConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubPrivateEndpointConnectionResource&gt;&gt; GetIotHubPrivateEndpointConnectionAsync (string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.IotHubPrivateEndpointConnectionResource&gt;&gt; GetIotHubPrivateEndpointConnectionAsync(string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetIotHubPrivateEndpointConnectionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotHubPrivateEndpointConnectionAsync (privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IotHubPrivateEndpointConnectionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetIotHubPrivateEndpointConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubPrivateEndpointConnectionResource&gt;&gt;&#xA;override this.GetIotHubPrivateEndpointConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubPrivateEndpointConnectionResource&gt;&gt;" Usage="iotHubDescriptionResource.GetIotHubPrivateEndpointConnectionAsync (privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubPrivateEndpointConnectionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get private endpoint connection properties
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: PrivateEndpointConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateEndpointConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIotHubPrivateEndpointConnections">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.IotHub.IotHubPrivateEndpointConnectionCollection GetIotHubPrivateEndpointConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.IotHub.IotHubPrivateEndpointConnectionCollection GetIotHubPrivateEndpointConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetIotHubPrivateEndpointConnections" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotHubPrivateEndpointConnections () As IotHubPrivateEndpointConnectionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetIotHubPrivateEndpointConnections : unit -&gt; Azure.ResourceManager.IotHub.IotHubPrivateEndpointConnectionCollection&#xA;override this.GetIotHubPrivateEndpointConnections : unit -&gt; Azure.ResourceManager.IotHub.IotHubPrivateEndpointConnectionCollection" Usage="iotHubDescriptionResource.GetIotHubPrivateEndpointConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.IotHub.IotHubPrivateEndpointConnectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of IotHubPrivateEndpointConnectionResources in the IotHubDescription. </summary>
        <returns> An object representing collection of IotHubPrivateEndpointConnectionResources and their operations over a IotHubPrivateEndpointConnectionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIotHubPrivateEndpointGroupInformation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubPrivateEndpointGroupInformationResource&gt; GetIotHubPrivateEndpointGroupInformation (string groupId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.IotHubPrivateEndpointGroupInformationResource&gt; GetIotHubPrivateEndpointGroupInformation(string groupId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetIotHubPrivateEndpointGroupInformation(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotHubPrivateEndpointGroupInformation (groupId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IotHubPrivateEndpointGroupInformationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIotHubPrivateEndpointGroupInformation : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubPrivateEndpointGroupInformationResource&gt;&#xA;override this.GetIotHubPrivateEndpointGroupInformation : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubPrivateEndpointGroupInformationResource&gt;" Usage="iotHubDescriptionResource.GetIotHubPrivateEndpointGroupInformation (groupId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubPrivateEndpointGroupInformationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="groupId"> The name of the private link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the specified private link resource for the given IotHub
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateLinkResources/{groupId}
            Operation Id: PrivateLinkResources_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groupId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIotHubPrivateEndpointGroupInformationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubPrivateEndpointGroupInformationResource&gt;&gt; GetIotHubPrivateEndpointGroupInformationAsync (string groupId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.IotHubPrivateEndpointGroupInformationResource&gt;&gt; GetIotHubPrivateEndpointGroupInformationAsync(string groupId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetIotHubPrivateEndpointGroupInformationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotHubPrivateEndpointGroupInformationAsync (groupId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IotHubPrivateEndpointGroupInformationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetIotHubPrivateEndpointGroupInformationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubPrivateEndpointGroupInformationResource&gt;&gt;&#xA;override this.GetIotHubPrivateEndpointGroupInformationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubPrivateEndpointGroupInformationResource&gt;&gt;" Usage="iotHubDescriptionResource.GetIotHubPrivateEndpointGroupInformationAsync (groupId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubPrivateEndpointGroupInformationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="groupId"> The name of the private link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the specified private link resource for the given IotHub
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateLinkResources/{groupId}
            Operation Id: PrivateLinkResources_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groupId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt; GetJob (string jobId, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt; GetJob(string jobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetJob(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJob (jobId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IotHubJobInfo)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetJob : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;&#xA;override this.GetJob : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;" Usage="iotHubDescriptionResource.GetJob (jobId, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt; GetJob (string jobId, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.JobResponse&gt; GetJob(string jobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJob (jobId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of JobResponse)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetJob : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;&#xA;override this.GetJob : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;" Usage="iotHubDescriptionResource.GetJob (jobId, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">Azure.Response&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobId"> The job identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the details of a job from an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/jobs/{jobId}
            Operation Id: IotHubResource_GetJob
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="jobId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;&gt; GetJobAsync (string jobId, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;&gt; GetJobAsync(string jobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetJobAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJobAsync (jobId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IotHubJobInfo))" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;&gt;&#xA;override this.GetJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;&gt;" Usage="iotHubDescriptionResource.GetJobAsync (jobId, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;&gt; GetJobAsync (string jobId, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.JobResponse&gt;&gt; GetJobAsync(string jobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJobAsync (jobId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of JobResponse))" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;&gt;&#xA;override this.GetJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;&gt;" Usage="iotHubDescriptionResource.GetJobAsync (jobId, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobId"> The job identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the details of a job from an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/jobs/{jobId}
            Operation Id: IotHubResource_GetJob
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="jobId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetJobs">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt; GetJobs (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt; GetJobs(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetJobs(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJobs (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of IotHubJobInfo)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetJobs : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;&#xA;override this.GetJobs : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;" Usage="iotHubDescriptionResource.GetJobs cancellationToken" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt; GetJobs (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.IotHub.Models.JobResponse&gt; GetJobs(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJobs (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of JobResponse)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetJobs : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;&#xA;override this.GetJobs : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;" Usage="iotHubDescriptionResource.GetJobs cancellationToken" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of all the jobs in an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/jobs
            Operation Id: IotHubResource_ListJobs
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.IotHub.Models.IotHubJobInfo" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJobsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt; GetJobsAsync (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt; GetJobsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetJobsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJobsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of IotHubJobInfo)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetJobsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;&#xA;override this.GetJobsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;" Usage="iotHubDescriptionResource.GetJobsAsync cancellationToken" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt; GetJobsAsync (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.IotHub.Models.JobResponse&gt; GetJobsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJobsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of JobResponse)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetJobsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;&#xA;override this.GetJobsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;" Usage="iotHubDescriptionResource.GetJobsAsync cancellationToken" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of all the jobs in an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/jobs
            Operation Id: IotHubResource_ListJobs
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.IotHub.Models.IotHubJobInfo" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeys">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.SharedAccessSignatureAuthorizationRule&gt; GetKeys (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.IotHub.Models.SharedAccessSignatureAuthorizationRule&gt; GetKeys(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetKeys(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeys (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SharedAccessSignatureAuthorizationRule)" />
      <MemberSignature Language="F#" Value="abstract member GetKeys : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.SharedAccessSignatureAuthorizationRule&gt;&#xA;override this.GetKeys : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.SharedAccessSignatureAuthorizationRule&gt;" Usage="iotHubDescriptionResource.GetKeys cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.SharedAccessSignatureAuthorizationRule&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the security metadata for an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/listkeys
            Operation Id: IotHubResource_ListKeys
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.IotHub.Models.SharedAccessSignatureAuthorizationRule" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeysAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.SharedAccessSignatureAuthorizationRule&gt; GetKeysAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.IotHub.Models.SharedAccessSignatureAuthorizationRule&gt; GetKeysAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetKeysAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeysAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SharedAccessSignatureAuthorizationRule)" />
      <MemberSignature Language="F#" Value="abstract member GetKeysAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.SharedAccessSignatureAuthorizationRule&gt;&#xA;override this.GetKeysAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.SharedAccessSignatureAuthorizationRule&gt;" Usage="iotHubDescriptionResource.GetKeysAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.SharedAccessSignatureAuthorizationRule&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the security metadata for an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/listkeys
            Operation Id: IotHubResource_ListKeys
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.IotHub.Models.SharedAccessSignatureAuthorizationRule" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeysForKeyName">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.IotHub.Models.SharedAccessSignatureAuthorizationRule&gt; GetKeysForKeyName (string keyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.SharedAccessSignatureAuthorizationRule&gt; GetKeysForKeyName(string keyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetKeysForKeyName(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeysForKeyName (keyName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SharedAccessSignatureAuthorizationRule)" />
      <MemberSignature Language="F#" Value="abstract member GetKeysForKeyName : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.SharedAccessSignatureAuthorizationRule&gt;&#xA;override this.GetKeysForKeyName : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.SharedAccessSignatureAuthorizationRule&gt;" Usage="iotHubDescriptionResource.GetKeysForKeyName (keyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.IotHub.Models.SharedAccessSignatureAuthorizationRule&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="keyName"> The name of the shared access policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a shared access policy by name from an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/IotHubKeys/{keyName}/listkeys
            Operation Id: IotHubResource_GetKeysForKeyName
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeysForKeyNameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.SharedAccessSignatureAuthorizationRule&gt;&gt; GetKeysForKeyNameAsync (string keyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.SharedAccessSignatureAuthorizationRule&gt;&gt; GetKeysForKeyNameAsync(string keyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetKeysForKeyNameAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeysForKeyNameAsync (keyName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SharedAccessSignatureAuthorizationRule))" />
      <MemberSignature Language="F#" Value="abstract member GetKeysForKeyNameAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.SharedAccessSignatureAuthorizationRule&gt;&gt;&#xA;override this.GetKeysForKeyNameAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.SharedAccessSignatureAuthorizationRule&gt;&gt;" Usage="iotHubDescriptionResource.GetKeysForKeyNameAsync (keyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.SharedAccessSignatureAuthorizationRule&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="keyName"> The name of the shared access policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a shared access policy by name from an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/IotHubKeys/{keyName}/listkeys
            Operation Id: IotHubResource_GetKeysForKeyName
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaMetrics">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.IotHubQuotaMetricInfo&gt; GetQuotaMetrics (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubQuotaMetricInfo&gt; GetQuotaMetrics(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetQuotaMetrics(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQuotaMetrics (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of IotHubQuotaMetricInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetQuotaMetrics : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.IotHubQuotaMetricInfo&gt;&#xA;override this.GetQuotaMetrics : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.IotHubQuotaMetricInfo&gt;" Usage="iotHubDescriptionResource.GetQuotaMetrics cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.IotHubQuotaMetricInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the quota metrics for an IoT hub.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/quotaMetrics
            Operation Id: IotHubResource_GetQuotaMetrics
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.IotHub.Models.IotHubQuotaMetricInfo" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaMetricsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.IotHubQuotaMetricInfo&gt; GetQuotaMetricsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubQuotaMetricInfo&gt; GetQuotaMetricsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetQuotaMetricsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQuotaMetricsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of IotHubQuotaMetricInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetQuotaMetricsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.IotHubQuotaMetricInfo&gt;&#xA;override this.GetQuotaMetricsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.IotHubQuotaMetricInfo&gt;" Usage="iotHubDescriptionResource.GetQuotaMetricsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.IotHubQuotaMetricInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the quota metrics for an IoT hub.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/quotaMetrics
            Operation Id: IotHubResource_GetQuotaMetrics
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.IotHub.Models.IotHubQuotaMetricInfo" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStats">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubRegistryStatistics&gt; GetStats (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubRegistryStatistics&gt; GetStats(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetStats(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStats (Optional cancellationToken As CancellationToken = Nothing) As Response(Of IotHubRegistryStatistics)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetStats : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubRegistryStatistics&gt;&#xA;override this.GetStats : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubRegistryStatistics&gt;" Usage="iotHubDescriptionResource.GetStats cancellationToken" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.IotHub.Models.RegistryStatistics&gt; GetStats (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.RegistryStatistics&gt; GetStats(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStats (Optional cancellationToken As CancellationToken = Nothing) As Response(Of RegistryStatistics)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetStats : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.RegistryStatistics&gt;&#xA;override this.GetStats : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.RegistryStatistics&gt;" Usage="iotHubDescriptionResource.GetStats cancellationToken" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubRegistryStatistics&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">Azure.Response&lt;Azure.ResourceManager.IotHub.Models.RegistryStatistics&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the statistics from an IoT hub.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/IotHubStats
            Operation Id: IotHubResource_GetStats
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStatsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubRegistryStatistics&gt;&gt; GetStatsAsync (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubRegistryStatistics&gt;&gt; GetStatsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetStatsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStatsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IotHubRegistryStatistics))" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetStatsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubRegistryStatistics&gt;&gt;&#xA;override this.GetStatsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubRegistryStatistics&gt;&gt;" Usage="iotHubDescriptionResource.GetStatsAsync cancellationToken" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.RegistryStatistics&gt;&gt; GetStatsAsync (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.RegistryStatistics&gt;&gt; GetStatsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStatsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RegistryStatistics))" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetStatsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.RegistryStatistics&gt;&gt;&#xA;override this.GetStatsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.RegistryStatistics&gt;&gt;" Usage="iotHubDescriptionResource.GetStatsAsync cancellationToken" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubRegistryStatistics&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.RegistryStatistics&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the statistics from an IoT hub.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/IotHubStats
            Operation Id: IotHubResource_GetStats
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValidSkus">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.IotHubSkuDescription&gt; GetValidSkus (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubSkuDescription&gt; GetValidSkus(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetValidSkus(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValidSkus (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of IotHubSkuDescription)" />
      <MemberSignature Language="F#" Value="abstract member GetValidSkus : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.IotHubSkuDescription&gt;&#xA;override this.GetValidSkus : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.IotHubSkuDescription&gt;" Usage="iotHubDescriptionResource.GetValidSkus cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.IotHubSkuDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the list of valid SKUs for an IoT hub.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/skus
            Operation Id: IotHubResource_GetValidSkus
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.IotHub.Models.IotHubSkuDescription" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValidSkusAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.IotHubSkuDescription&gt; GetValidSkusAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubSkuDescription&gt; GetValidSkusAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.GetValidSkusAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValidSkusAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of IotHubSkuDescription)" />
      <MemberSignature Language="F#" Value="abstract member GetValidSkusAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.IotHubSkuDescription&gt;&#xA;override this.GetValidSkusAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.IotHubSkuDescription&gt;" Usage="iotHubDescriptionResource.GetValidSkusAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.IotHubSkuDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the list of valid SKUs for an IoT hub.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/skus
            Operation Id: IotHubResource_GetValidSkus
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.IotHub.Models.IotHubSkuDescription" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.IotHub.IotHubDescriptionResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.IotHub.IotHubDescriptionResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportDevices">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt; ImportDevices (Azure.ResourceManager.IotHub.Models.ImportDevicesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.JobResponse&gt; ImportDevices(class Azure.ResourceManager.IotHub.Models.ImportDevicesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.ImportDevices(Azure.ResourceManager.IotHub.Models.ImportDevicesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportDevices (content As ImportDevicesContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of JobResponse)" />
      <MemberSignature Language="F#" Value="abstract member ImportDevices : Azure.ResourceManager.IotHub.Models.ImportDevicesContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;&#xA;override this.ImportDevices : Azure.ResourceManager.IotHub.Models.ImportDevicesContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;" Usage="iotHubDescriptionResource.ImportDevices (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.IotHub.Models.ImportDevicesContent" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="content"> The parameters that specify the import devices operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Import, update, or delete device identities in the IoT hub identity registry from a blob. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/importDevices
            Operation Id: IotHubResource_ImportDevices
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ImportDevices">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt; ImportDevices (Azure.ResourceManager.IotHub.Models.IotHubImportDevicesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt; ImportDevices(class Azure.ResourceManager.IotHub.Models.IotHubImportDevicesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.ImportDevices(Azure.ResourceManager.IotHub.Models.IotHubImportDevicesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportDevices (content As IotHubImportDevicesContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IotHubJobInfo)" />
      <MemberSignature Language="F#" Value="abstract member ImportDevices : Azure.ResourceManager.IotHub.Models.IotHubImportDevicesContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;&#xA;override this.ImportDevices : Azure.ResourceManager.IotHub.Models.IotHubImportDevicesContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;" Usage="iotHubDescriptionResource.ImportDevices (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.IotHub.Models.IotHubImportDevicesContent" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="content"> The parameters that specify the import devices operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Import, update, or delete device identities in the IoT hub identity registry from a blob. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/importDevices
            Operation Id: IotHubResource_ImportDevices
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ImportDevicesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;&gt; ImportDevicesAsync (Azure.ResourceManager.IotHub.Models.ImportDevicesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.JobResponse&gt;&gt; ImportDevicesAsync(class Azure.ResourceManager.IotHub.Models.ImportDevicesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.ImportDevicesAsync(Azure.ResourceManager.IotHub.Models.ImportDevicesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportDevicesAsync (content As ImportDevicesContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of JobResponse))" />
      <MemberSignature Language="F#" Value="abstract member ImportDevicesAsync : Azure.ResourceManager.IotHub.Models.ImportDevicesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;&gt;&#xA;override this.ImportDevicesAsync : Azure.ResourceManager.IotHub.Models.ImportDevicesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;&gt;" Usage="iotHubDescriptionResource.ImportDevicesAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.JobResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.IotHub.Models.ImportDevicesContent" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="content"> The parameters that specify the import devices operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Import, update, or delete device identities in the IoT hub identity registry from a blob. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/importDevices
            Operation Id: IotHubResource_ImportDevices
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ImportDevicesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;&gt; ImportDevicesAsync (Azure.ResourceManager.IotHub.Models.IotHubImportDevicesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;&gt; ImportDevicesAsync(class Azure.ResourceManager.IotHub.Models.IotHubImportDevicesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.ImportDevicesAsync(Azure.ResourceManager.IotHub.Models.IotHubImportDevicesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportDevicesAsync (content As IotHubImportDevicesContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IotHubJobInfo))" />
      <MemberSignature Language="F#" Value="abstract member ImportDevicesAsync : Azure.ResourceManager.IotHub.Models.IotHubImportDevicesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;&gt;&#xA;override this.ImportDevicesAsync : Azure.ResourceManager.IotHub.Models.IotHubImportDevicesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;&gt;" Usage="iotHubDescriptionResource.ImportDevicesAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubJobInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.IotHub.Models.IotHubImportDevicesContent" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="content"> The parameters that specify the import devices operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Import, update, or delete device identities in the IoT hub identity registry from a blob. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/importDevices
            Operation Id: IotHubResource_ImportDevices
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ManualFailoverIotHub">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation ManualFailoverIotHub (Azure.WaitUntil waitUntil, Azure.ResourceManager.IotHub.Models.FailoverContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation ManualFailoverIotHub(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.IotHub.Models.FailoverContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.ManualFailoverIotHub(Azure.WaitUntil,Azure.ResourceManager.IotHub.Models.FailoverContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ManualFailoverIotHub (waitUntil As WaitUntil, content As FailoverContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member ManualFailoverIotHub : Azure.WaitUntil * Azure.ResourceManager.IotHub.Models.FailoverContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.ManualFailoverIotHub : Azure.WaitUntil * Azure.ResourceManager.IotHub.Models.FailoverContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="iotHubDescriptionResource.ManualFailoverIotHub (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="content" Type="Azure.ResourceManager.IotHub.Models.FailoverContent" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Region to failover to. Must be the Azure paired region. Get the value from the secondary location in the locations property. To learn more, see https://aka.ms/manualfailover/region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Manually initiate a failover for the IoT Hub to its secondary region. To learn more, see https://aka.ms/manualfailover
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/failover
            Operation Id: IotHub_ManualFailover
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ManualFailoverIotHub">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation ManualFailoverIotHub (Azure.WaitUntil waitUntil, Azure.ResourceManager.IotHub.Models.IotHubFailoverContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation ManualFailoverIotHub(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.IotHub.Models.IotHubFailoverContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.ManualFailoverIotHub(Azure.WaitUntil,Azure.ResourceManager.IotHub.Models.IotHubFailoverContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ManualFailoverIotHub (waitUntil As WaitUntil, content As IotHubFailoverContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member ManualFailoverIotHub : Azure.WaitUntil * Azure.ResourceManager.IotHub.Models.IotHubFailoverContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.ManualFailoverIotHub : Azure.WaitUntil * Azure.ResourceManager.IotHub.Models.IotHubFailoverContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="iotHubDescriptionResource.ManualFailoverIotHub (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="content" Type="Azure.ResourceManager.IotHub.Models.IotHubFailoverContent" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Region to failover to. Must be the Azure paired region. Get the value from the secondary location in the locations property. To learn more, see https://aka.ms/manualfailover/region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Manually initiate a failover for the IoT Hub to its secondary region. To learn more, see https://aka.ms/manualfailover
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/failover
            Operation Id: IotHub_ManualFailover
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ManualFailoverIotHubAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; ManualFailoverIotHubAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.IotHub.Models.FailoverContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; ManualFailoverIotHubAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.IotHub.Models.FailoverContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.ManualFailoverIotHubAsync(Azure.WaitUntil,Azure.ResourceManager.IotHub.Models.FailoverContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ManualFailoverIotHubAsync (waitUntil As WaitUntil, content As FailoverContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member ManualFailoverIotHubAsync : Azure.WaitUntil * Azure.ResourceManager.IotHub.Models.FailoverContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.ManualFailoverIotHubAsync : Azure.WaitUntil * Azure.ResourceManager.IotHub.Models.FailoverContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="iotHubDescriptionResource.ManualFailoverIotHubAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="content" Type="Azure.ResourceManager.IotHub.Models.FailoverContent" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Region to failover to. Must be the Azure paired region. Get the value from the secondary location in the locations property. To learn more, see https://aka.ms/manualfailover/region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Manually initiate a failover for the IoT Hub to its secondary region. To learn more, see https://aka.ms/manualfailover
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/failover
            Operation Id: IotHub_ManualFailover
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ManualFailoverIotHubAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; ManualFailoverIotHubAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.IotHub.Models.IotHubFailoverContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; ManualFailoverIotHubAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.IotHub.Models.IotHubFailoverContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.ManualFailoverIotHubAsync(Azure.WaitUntil,Azure.ResourceManager.IotHub.Models.IotHubFailoverContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ManualFailoverIotHubAsync (waitUntil As WaitUntil, content As IotHubFailoverContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member ManualFailoverIotHubAsync : Azure.WaitUntil * Azure.ResourceManager.IotHub.Models.IotHubFailoverContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.ManualFailoverIotHubAsync : Azure.WaitUntil * Azure.ResourceManager.IotHub.Models.IotHubFailoverContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="iotHubDescriptionResource.ManualFailoverIotHubAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="content" Type="Azure.ResourceManager.IotHub.Models.IotHubFailoverContent" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Region to failover to. Must be the Azure paired region. Get the value from the secondary location in the locations property. To learn more, see https://aka.ms/manualfailover/region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Manually initiate a failover for the IoT Hub to its secondary region. To learn more, see https://aka.ms/manualfailover
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/failover
            Operation Id: IotHub_ManualFailover
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt; RemoveTag (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt; RemoveTag(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.RemoveTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTag (key As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IotHubDescriptionResource)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&#xA;override this.RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;" Usage="iotHubDescriptionResource.RemoveTag (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}
            Operation Id: IotHubResource_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt; RemoveTagAsync (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt; RemoveTagAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTagAsync (key As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IotHubDescriptionResource))" />
      <MemberSignature Language="F#" Value="abstract member RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt;&#xA;override this.RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt;" Usage="iotHubDescriptionResource.RemoveTagAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}
            Operation Id: IotHubResource_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.IotHub.IotHubDescriptionResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.IotHub.IotHubDescriptionResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt; SetTags (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt; SetTags(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTags (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of IotHubDescriptionResource)" />
      <MemberSignature Language="F#" Value="abstract member SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&#xA;override this.SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;" Usage="iotHubDescriptionResource.SetTags (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}
            Operation Id: IotHubResource_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt; SetTagsAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt; SetTagsAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagsAsync (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IotHubDescriptionResource))" />
      <MemberSignature Language="F#" Value="abstract member SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt;&#xA;override this.SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt;" Usage="iotHubDescriptionResource.SetTagsAsync (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}
            Operation Id: IotHubResource_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TestAllRoutes">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesResult&gt; TestAllRoutes (Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesResult&gt; TestAllRoutes(class Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.TestAllRoutes(Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TestAllRoutes (content As IotHubTestAllRoutesContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IotHubTestAllRoutesResult)" />
      <MemberSignature Language="F#" Value="abstract member TestAllRoutes : Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesResult&gt;&#xA;override this.TestAllRoutes : Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesResult&gt;" Usage="iotHubDescriptionResource.TestAllRoutes (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesContent" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="content"> Input for testing all routes. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Test all routes configured in this Iot Hub
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/routing/routes/$testall
            Operation Id: IotHubResource_TestAllRoutes
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TestAllRoutes">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesResult&gt; TestAllRoutes (Azure.ResourceManager.IotHub.Models.TestAllRoutesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesResult&gt; TestAllRoutes(class Azure.ResourceManager.IotHub.Models.TestAllRoutesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.TestAllRoutes(Azure.ResourceManager.IotHub.Models.TestAllRoutesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TestAllRoutes (content As TestAllRoutesContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IotHubTestAllRoutesResult)" />
      <MemberSignature Language="F#" Value="abstract member TestAllRoutes : Azure.ResourceManager.IotHub.Models.TestAllRoutesContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesResult&gt;&#xA;override this.TestAllRoutes : Azure.ResourceManager.IotHub.Models.TestAllRoutesContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesResult&gt;" Usage="iotHubDescriptionResource.TestAllRoutes (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.IotHub.Models.TestAllRoutesContent" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="content"> Input for testing all routes. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Test all routes configured in this Iot Hub
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/routing/routes/$testall
            Operation Id: IotHubResource_TestAllRoutes
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TestAllRoutesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesResult&gt;&gt; TestAllRoutesAsync (Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesResult&gt;&gt; TestAllRoutesAsync(class Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.TestAllRoutesAsync(Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TestAllRoutesAsync (content As IotHubTestAllRoutesContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IotHubTestAllRoutesResult))" />
      <MemberSignature Language="F#" Value="abstract member TestAllRoutesAsync : Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesResult&gt;&gt;&#xA;override this.TestAllRoutesAsync : Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesResult&gt;&gt;" Usage="iotHubDescriptionResource.TestAllRoutesAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesContent" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="content"> Input for testing all routes. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Test all routes configured in this Iot Hub
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/routing/routes/$testall
            Operation Id: IotHubResource_TestAllRoutes
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TestAllRoutesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesResult&gt;&gt; TestAllRoutesAsync (Azure.ResourceManager.IotHub.Models.TestAllRoutesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesResult&gt;&gt; TestAllRoutesAsync(class Azure.ResourceManager.IotHub.Models.TestAllRoutesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.TestAllRoutesAsync(Azure.ResourceManager.IotHub.Models.TestAllRoutesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TestAllRoutesAsync (content As TestAllRoutesContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IotHubTestAllRoutesResult))" />
      <MemberSignature Language="F#" Value="abstract member TestAllRoutesAsync : Azure.ResourceManager.IotHub.Models.TestAllRoutesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesResult&gt;&gt;&#xA;override this.TestAllRoutesAsync : Azure.ResourceManager.IotHub.Models.TestAllRoutesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesResult&gt;&gt;" Usage="iotHubDescriptionResource.TestAllRoutesAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubTestAllRoutesResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.IotHub.Models.TestAllRoutesContent" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="content"> Input for testing all routes. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Test all routes configured in this Iot Hub
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/routing/routes/$testall
            Operation Id: IotHubResource_TestAllRoutes
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TestRoute">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubTestRouteResult&gt; TestRoute (Azure.ResourceManager.IotHub.Models.IotHubTestRouteContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubTestRouteResult&gt; TestRoute(class Azure.ResourceManager.IotHub.Models.IotHubTestRouteContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.TestRoute(Azure.ResourceManager.IotHub.Models.IotHubTestRouteContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TestRoute (content As IotHubTestRouteContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IotHubTestRouteResult)" />
      <MemberSignature Language="F#" Value="abstract member TestRoute : Azure.ResourceManager.IotHub.Models.IotHubTestRouteContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubTestRouteResult&gt;&#xA;override this.TestRoute : Azure.ResourceManager.IotHub.Models.IotHubTestRouteContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubTestRouteResult&gt;" Usage="iotHubDescriptionResource.TestRoute (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubTestRouteResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.IotHub.Models.IotHubTestRouteContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Route that needs to be tested. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Test the new route for this Iot Hub
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/routing/routes/$testnew
            Operation Id: IotHubResource_TestRoute
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TestRouteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubTestRouteResult&gt;&gt; TestRouteAsync (Azure.ResourceManager.IotHub.Models.IotHubTestRouteContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubTestRouteResult&gt;&gt; TestRouteAsync(class Azure.ResourceManager.IotHub.Models.IotHubTestRouteContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.TestRouteAsync(Azure.ResourceManager.IotHub.Models.IotHubTestRouteContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TestRouteAsync (content As IotHubTestRouteContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IotHubTestRouteResult))" />
      <MemberSignature Language="F#" Value="abstract member TestRouteAsync : Azure.ResourceManager.IotHub.Models.IotHubTestRouteContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubTestRouteResult&gt;&gt;&#xA;override this.TestRouteAsync : Azure.ResourceManager.IotHub.Models.IotHubTestRouteContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubTestRouteResult&gt;&gt;" Usage="iotHubDescriptionResource.TestRouteAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubTestRouteResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.IotHub.Models.IotHubTestRouteContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Route that needs to be tested. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Test the new route for this Iot Hub
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/routing/routes/$testnew
            Operation Id: IotHubResource_TestRoute
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.IotHub.Models.IotHubDescriptionPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.IotHub.Models.IotHubDescriptionPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.Update(Azure.WaitUntil,Azure.ResourceManager.IotHub.Models.IotHubDescriptionPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, patch As IotHubDescriptionPatch, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of IotHubDescriptionResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.IotHub.Models.IotHubDescriptionPatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.IotHub.Models.IotHubDescriptionPatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;" Usage="iotHubDescriptionResource.Update (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.IotHub.Models.IotHubDescriptionPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> Updated tag information to set into the iot hub instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Update an existing IoT Hub tags. to update other fields use the CreateOrUpdate method
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}
            Operation Id: IotHubResource_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.IotHub.Models.IotHubDescriptionPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.IotHub.Models.IotHubDescriptionPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.IotHubDescriptionResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.IotHub.Models.IotHubDescriptionPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, patch As IotHubDescriptionPatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of IotHubDescriptionResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.IotHub.Models.IotHubDescriptionPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.IotHub.Models.IotHubDescriptionPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt;" Usage="iotHubDescriptionResource.UpdateAsync (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.IotHub.Models.IotHubDescriptionPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> Updated tag information to set into the iot hub instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Update an existing IoT Hub tags. to update other fields use the CreateOrUpdate method
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}
            Operation Id: IotHubResource_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
