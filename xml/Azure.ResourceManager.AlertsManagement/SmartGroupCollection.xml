<Type Name="SmartGroupCollection" FullName="Azure.ResourceManager.AlertsManagement.SmartGroupCollection">
  <TypeSignature Language="C#" Value="public class SmartGroupCollection : Azure.ResourceManager.ArmCollection, System.Collections.Generic.IAsyncEnumerable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SmartGroupCollection extends Azure.ResourceManager.ArmCollection implements class System.Collections.Generic.IAsyncEnumerable`1&lt;class Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.AlertsManagement.SmartGroupCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class SmartGroupCollection&#xA;Inherits ArmCollection&#xA;Implements IAsyncEnumerable(Of SmartGroupResource), IEnumerable(Of SmartGroupResource)" />
  <TypeSignature Language="F#" Value="type SmartGroupCollection = class&#xA;    inherit ArmCollection&#xA;    interface seq&lt;SmartGroupResource&gt;&#xA;    interface IEnumerable&#xA;    interface IAsyncEnumerable&lt;SmartGroupResource&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmCollection</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IAsyncEnumerable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.AlertsManagement.SmartGroupResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.AlertsManagement.SmartGroupResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" />.
            To get a <see cref="T:Azure.ResourceManager.AlertsManagement.SmartGroupCollection" /> instance call the GetSmartGroups method from an instance of <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SmartGroupCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.SmartGroupCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.AlertsManagement.SmartGroupCollection" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; Exists (Guid smartGroupId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; Exists(valuetype System.Guid smartGroupId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.SmartGroupCollection.Exists(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Exists (smartGroupId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Exists : Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.Exists : Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="smartGroupCollection.Exists (smartGroupId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="smartGroupId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="smartGroupId"> Smart group unique id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups/{smartGroupId}</description></item><item><term>Operation Id</term><description>SmartGroups_GetById</description></item><item><term>Default Api Version</term><description>2019-05-05-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AlertsManagement.SmartGroupResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; ExistsAsync (Guid smartGroupId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; ExistsAsync(valuetype System.Guid smartGroupId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.SmartGroupCollection.ExistsAsync(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync (smartGroupId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.ExistsAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="smartGroupCollection.ExistsAsync (smartGroupId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="smartGroupId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="smartGroupId"> Smart group unique id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups/{smartGroupId}</description></item><item><term>Operation Id</term><description>SmartGroups_GetById</description></item><item><term>Default Api Version</term><description>2019-05-05-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AlertsManagement.SmartGroupResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt; Get (Guid smartGroupId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt; Get(valuetype System.Guid smartGroupId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.SmartGroupCollection.Get(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (smartGroupId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SmartGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;&#xA;override this.Get : Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;" Usage="smartGroupCollection.Get (smartGroupId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="smartGroupId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="smartGroupId"> Smart group unique id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get information related to a specific Smart Group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups/{smartGroupId}</description></item><item><term>Operation Id</term><description>SmartGroups_GetById</description></item><item><term>Default Api Version</term><description>2019-05-05-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AlertsManagement.SmartGroupResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAll">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt; GetAll (Azure.ResourceManager.AlertsManagement.Models.SmartGroupCollectionGetAllOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt; GetAll(class Azure.ResourceManager.AlertsManagement.Models.SmartGroupCollectionGetAllOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.SmartGroupCollection.GetAll(Azure.ResourceManager.AlertsManagement.Models.SmartGroupCollectionGetAllOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAll (options As SmartGroupCollectionGetAllOptions, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SmartGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAll : Azure.ResourceManager.AlertsManagement.Models.SmartGroupCollectionGetAllOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;&#xA;override this.GetAll : Azure.ResourceManager.AlertsManagement.Models.SmartGroupCollectionGetAllOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;" Usage="smartGroupCollection.GetAll (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.ResourceManager.AlertsManagement.Models.SmartGroupCollectionGetAllOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the Smart Groups within a specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups</description></item><item><term>Operation Id</term><description>SmartGroups_GetAll</description></item><item><term>Default Api Version</term><description>2019-05-05-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AlertsManagement.SmartGroupResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.AlertsManagement.SmartGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAll">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt; GetAll (string targetResource = default, string targetResourceGroup = default, string targetResourceType = default, Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert? monitorService = default, Azure.ResourceManager.AlertsManagement.Models.MonitorCondition? monitorCondition = default, Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity? severity = default, Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState? smartGroupState = default, Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter? timeRange = default, long? pageCount = default, Azure.ResourceManager.AlertsManagement.Models.SmartGroupsSortByField? sortBy = default, Azure.ResourceManager.AlertsManagement.Models.AlertsManagementQuerySortOrder? sortOrder = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt; GetAll(string targetResource, string targetResourceGroup, string targetResourceType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert&gt; monitorService, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.AlertsManagement.Models.MonitorCondition&gt; monitorCondition, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity&gt; severity, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState&gt; smartGroupState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter&gt; timeRange, valuetype System.Nullable`1&lt;int64&gt; pageCount, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.AlertsManagement.Models.SmartGroupsSortByField&gt; sortBy, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.AlertsManagement.Models.AlertsManagementQuerySortOrder&gt; sortOrder, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.SmartGroupCollection.GetAll(System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.MonitorCondition},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter},System.Nullable{System.Int64},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.SmartGroupsSortByField},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.AlertsManagementQuerySortOrder},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAll (Optional targetResource As String = Nothing, Optional targetResourceGroup As String = Nothing, Optional targetResourceType As String = Nothing, Optional monitorService As Nullable(Of MonitorServiceSourceForAlert) = Nothing, Optional monitorCondition As Nullable(Of MonitorCondition) = Nothing, Optional severity As Nullable(Of ServiceAlertSeverity) = Nothing, Optional smartGroupState As Nullable(Of ServiceAlertState) = Nothing, Optional timeRange As Nullable(Of TimeRangeFilter) = Nothing, Optional pageCount As Nullable(Of Long) = Nothing, Optional sortBy As Nullable(Of SmartGroupsSortByField) = Nothing, Optional sortOrder As Nullable(Of AlertsManagementQuerySortOrder) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SmartGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAll : string * string * string * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.MonitorCondition&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter&gt; * Nullable&lt;int64&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.SmartGroupsSortByField&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.AlertsManagementQuerySortOrder&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;&#xA;override this.GetAll : string * string * string * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.MonitorCondition&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter&gt; * Nullable&lt;int64&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.SmartGroupsSortByField&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.AlertsManagementQuerySortOrder&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;" Usage="smartGroupCollection.GetAll (targetResource, targetResourceGroup, targetResourceType, monitorService, monitorCondition, severity, smartGroupState, timeRange, pageCount, sortBy, sortOrder, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetResource" Type="System.String" />
        <Parameter Name="targetResourceGroup" Type="System.String" />
        <Parameter Name="targetResourceType" Type="System.String" />
        <Parameter Name="monitorService" Type="System.Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert&gt;" />
        <Parameter Name="monitorCondition" Type="System.Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.MonitorCondition&gt;" />
        <Parameter Name="severity" Type="System.Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity&gt;" />
        <Parameter Name="smartGroupState" Type="System.Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState&gt;" />
        <Parameter Name="timeRange" Type="System.Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter&gt;" />
        <Parameter Name="pageCount" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="sortBy" Type="System.Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.SmartGroupsSortByField&gt;" />
        <Parameter Name="sortOrder" Type="System.Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.AlertsManagementQuerySortOrder&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="targetResource"> Filter by target resource( which is full ARM ID) Default value is select all. </param>
        <param name="targetResourceGroup"> Filter by target resource group name. Default value is select all. </param>
        <param name="targetResourceType"> Filter by target resource type. Default value is select all. </param>
        <param name="monitorService"> Filter by monitor service which generates the alert instance. Default value is select all. </param>
        <param name="monitorCondition"> Filter by monitor condition which is either 'Fired' or 'Resolved'. Default value is to select all. </param>
        <param name="severity"> Filter by severity.  Default value is select all. </param>
        <param name="smartGroupState"> Filter by state of the smart group. Default value is to select all. </param>
        <param name="timeRange"> Filter by time range by below listed values. Default value is 1 day. </param>
        <param name="pageCount"> Determines number of alerts returned per page in response. Permissible value is between 1 to 250. When the "includeContent"  filter is selected, maximum value allowed is 25. Default value is 25. </param>
        <param name="sortBy"> Sort the query results by input field. Default value is sort by 'lastModifiedDateTime'. </param>
        <param name="sortOrder"> Sort the query results order in either ascending or descending.  Default value is 'desc' for time fields and 'asc' for others. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the Smart Groups within a specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups</description></item><item><term>Operation Id</term><description>SmartGroups_GetAll</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.AlertsManagement.SmartGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt; GetAllAsync (Azure.ResourceManager.AlertsManagement.Models.SmartGroupCollectionGetAllOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt; GetAllAsync(class Azure.ResourceManager.AlertsManagement.Models.SmartGroupCollectionGetAllOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.SmartGroupCollection.GetAllAsync(Azure.ResourceManager.AlertsManagement.Models.SmartGroupCollectionGetAllOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllAsync (options As SmartGroupCollectionGetAllOptions, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SmartGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAllAsync : Azure.ResourceManager.AlertsManagement.Models.SmartGroupCollectionGetAllOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;&#xA;override this.GetAllAsync : Azure.ResourceManager.AlertsManagement.Models.SmartGroupCollectionGetAllOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;" Usage="smartGroupCollection.GetAllAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.ResourceManager.AlertsManagement.Models.SmartGroupCollectionGetAllOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the Smart Groups within a specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups</description></item><item><term>Operation Id</term><description>SmartGroups_GetAll</description></item><item><term>Default Api Version</term><description>2019-05-05-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AlertsManagement.SmartGroupResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.AlertsManagement.SmartGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt; GetAllAsync (string targetResource = default, string targetResourceGroup = default, string targetResourceType = default, Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert? monitorService = default, Azure.ResourceManager.AlertsManagement.Models.MonitorCondition? monitorCondition = default, Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity? severity = default, Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState? smartGroupState = default, Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter? timeRange = default, long? pageCount = default, Azure.ResourceManager.AlertsManagement.Models.SmartGroupsSortByField? sortBy = default, Azure.ResourceManager.AlertsManagement.Models.AlertsManagementQuerySortOrder? sortOrder = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt; GetAllAsync(string targetResource, string targetResourceGroup, string targetResourceType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert&gt; monitorService, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.AlertsManagement.Models.MonitorCondition&gt; monitorCondition, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity&gt; severity, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState&gt; smartGroupState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter&gt; timeRange, valuetype System.Nullable`1&lt;int64&gt; pageCount, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.AlertsManagement.Models.SmartGroupsSortByField&gt; sortBy, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.AlertsManagement.Models.AlertsManagementQuerySortOrder&gt; sortOrder, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.SmartGroupCollection.GetAllAsync(System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.MonitorCondition},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter},System.Nullable{System.Int64},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.SmartGroupsSortByField},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.AlertsManagementQuerySortOrder},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllAsync (Optional targetResource As String = Nothing, Optional targetResourceGroup As String = Nothing, Optional targetResourceType As String = Nothing, Optional monitorService As Nullable(Of MonitorServiceSourceForAlert) = Nothing, Optional monitorCondition As Nullable(Of MonitorCondition) = Nothing, Optional severity As Nullable(Of ServiceAlertSeverity) = Nothing, Optional smartGroupState As Nullable(Of ServiceAlertState) = Nothing, Optional timeRange As Nullable(Of TimeRangeFilter) = Nothing, Optional pageCount As Nullable(Of Long) = Nothing, Optional sortBy As Nullable(Of SmartGroupsSortByField) = Nothing, Optional sortOrder As Nullable(Of AlertsManagementQuerySortOrder) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SmartGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAllAsync : string * string * string * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.MonitorCondition&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter&gt; * Nullable&lt;int64&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.SmartGroupsSortByField&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.AlertsManagementQuerySortOrder&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;&#xA;override this.GetAllAsync : string * string * string * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.MonitorCondition&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter&gt; * Nullable&lt;int64&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.SmartGroupsSortByField&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.AlertsManagementQuerySortOrder&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;" Usage="smartGroupCollection.GetAllAsync (targetResource, targetResourceGroup, targetResourceType, monitorService, monitorCondition, severity, smartGroupState, timeRange, pageCount, sortBy, sortOrder, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetResource" Type="System.String" />
        <Parameter Name="targetResourceGroup" Type="System.String" />
        <Parameter Name="targetResourceType" Type="System.String" />
        <Parameter Name="monitorService" Type="System.Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert&gt;" />
        <Parameter Name="monitorCondition" Type="System.Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.MonitorCondition&gt;" />
        <Parameter Name="severity" Type="System.Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity&gt;" />
        <Parameter Name="smartGroupState" Type="System.Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState&gt;" />
        <Parameter Name="timeRange" Type="System.Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter&gt;" />
        <Parameter Name="pageCount" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="sortBy" Type="System.Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.SmartGroupsSortByField&gt;" />
        <Parameter Name="sortOrder" Type="System.Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.AlertsManagementQuerySortOrder&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="targetResource"> Filter by target resource( which is full ARM ID) Default value is select all. </param>
        <param name="targetResourceGroup"> Filter by target resource group name. Default value is select all. </param>
        <param name="targetResourceType"> Filter by target resource type. Default value is select all. </param>
        <param name="monitorService"> Filter by monitor service which generates the alert instance. Default value is select all. </param>
        <param name="monitorCondition"> Filter by monitor condition which is either 'Fired' or 'Resolved'. Default value is to select all. </param>
        <param name="severity"> Filter by severity.  Default value is select all. </param>
        <param name="smartGroupState"> Filter by state of the smart group. Default value is to select all. </param>
        <param name="timeRange"> Filter by time range by below listed values. Default value is 1 day. </param>
        <param name="pageCount"> Determines number of alerts returned per page in response. Permissible value is between 1 to 250. When the "includeContent"  filter is selected, maximum value allowed is 25. Default value is 25. </param>
        <param name="sortBy"> Sort the query results by input field. Default value is sort by 'lastModifiedDateTime'. </param>
        <param name="sortOrder"> Sort the query results order in either ascending or descending.  Default value is 'desc' for time fields and 'asc' for others. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the Smart Groups within a specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups</description></item><item><term>Operation Id</term><description>SmartGroups_GetAll</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.AlertsManagement.SmartGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;&gt; GetAsync (Guid smartGroupId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;&gt; GetAsync(valuetype System.Guid smartGroupId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.SmartGroupCollection.GetAsync(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (smartGroupId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SmartGroupResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;&gt;&#xA;override this.GetAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;&gt;" Usage="smartGroupCollection.GetAsync (smartGroupId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="smartGroupId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="smartGroupId"> Smart group unique id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get information related to a specific Smart Group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups/{smartGroupId}</description></item><item><term>Operation Id</term><description>SmartGroups_GetById</description></item><item><term>Default Api Version</term><description>2019-05-05-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AlertsManagement.SmartGroupResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIfExists">
      <MemberSignature Language="C#" Value="public virtual Azure.NullableResponse&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt; GetIfExists (Guid smartGroupId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.NullableResponse`1&lt;class Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt; GetIfExists(valuetype System.Guid smartGroupId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.SmartGroupCollection.GetIfExists(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIfExists (smartGroupId As Guid, Optional cancellationToken As CancellationToken = Nothing) As NullableResponse(Of SmartGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIfExists : Guid * System.Threading.CancellationToken -&gt; Azure.NullableResponse&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;&#xA;override this.GetIfExists : Guid * System.Threading.CancellationToken -&gt; Azure.NullableResponse&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;" Usage="smartGroupCollection.GetIfExists (smartGroupId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.NullableResponse&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="smartGroupId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="smartGroupId"> Smart group unique id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Tries to get details for this resource from the service.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups/{smartGroupId}</description></item><item><term>Operation Id</term><description>SmartGroups_GetById</description></item><item><term>Default Api Version</term><description>2019-05-05-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AlertsManagement.SmartGroupResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIfExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.NullableResponse&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;&gt; GetIfExistsAsync (Guid smartGroupId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.NullableResponse`1&lt;class Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;&gt; GetIfExistsAsync(valuetype System.Guid smartGroupId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.SmartGroupCollection.GetIfExistsAsync(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIfExistsAsync (smartGroupId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of NullableResponse(Of SmartGroupResource))" />
      <MemberSignature Language="F#" Value="abstract member GetIfExistsAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.NullableResponse&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;&gt;&#xA;override this.GetIfExistsAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.NullableResponse&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;&gt;" Usage="smartGroupCollection.GetIfExistsAsync (smartGroupId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.NullableResponse&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="smartGroupId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="smartGroupId"> Smart group unique id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Tries to get details for this resource from the service.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups/{smartGroupId}</description></item><item><term>Operation Id</term><description>SmartGroups_GetById</description></item><item><term>Default Api Version</term><description>2019-05-05-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AlertsManagement.SmartGroupResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IAsyncEnumerable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;.GetAsyncEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IAsyncEnumerator&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt; IAsyncEnumerable&lt;SmartGroupResource&gt;.GetAsyncEnumerator (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerator`1&lt;class Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;.GetAsyncEnumerator(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.SmartGroupCollection.System#Collections#Generic#IAsyncEnumerable&lt;Azure#ResourceManager#AlertsManagement#SmartGroupResource&gt;#GetAsyncEnumerator(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Function GetAsyncEnumerator (cancellationToken As CancellationToken) As IAsyncEnumerator(Of SmartGroupResource) Implements IAsyncEnumerable(Of SmartGroupResource).GetAsyncEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IAsyncEnumerable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;.GetAsyncEnumerator : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerator&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;&#xA;override this.System.Collections.Generic.IAsyncEnumerable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;.GetAsyncEnumerator : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerator&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;" Usage="smartGroupCollection.System.Collections.Generic.IAsyncEnumerable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;.GetAsyncEnumerator cancellationToken" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerator&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param>
        <summary>Returns an enumerator that iterates asynchronously through the collection.</summary>
        <returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt; IEnumerable&lt;SmartGroupResource&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt; System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.SmartGroupCollection.System#Collections#Generic#IEnumerable&lt;Azure#ResourceManager#AlertsManagement#SmartGroupResource&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of SmartGroupResource) Implements IEnumerable(Of SmartGroupResource).GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;&#xA;override this.System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;" Usage="smartGroupCollection.System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that iterates through the collection.</summary>
        <returns>An enumerator that can be used to iterate through the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.SmartGroupCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="smartGroupCollection.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that iterates through a collection.</summary>
        <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
