<Type Name="MockableDataMigrationSubscriptionResource" FullName="Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableDataMigrationSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableDataMigrationSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableDataMigrationSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableDataMigrationSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableDataMigrationSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckNameAvailabilityService">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataMigration.Models.NameAvailabilityResponse&gt; CheckNameAvailabilityService (Azure.Core.AzureLocation location, Azure.ResourceManager.DataMigration.Models.NameAvailabilityRequest nameAvailabilityRequest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataMigration.Models.NameAvailabilityResponse&gt; CheckNameAvailabilityService(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.DataMigration.Models.NameAvailabilityRequest nameAvailabilityRequest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationSubscriptionResource.CheckNameAvailabilityService(Azure.Core.AzureLocation,Azure.ResourceManager.DataMigration.Models.NameAvailabilityRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckNameAvailabilityService (location As AzureLocation, nameAvailabilityRequest As NameAvailabilityRequest, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NameAvailabilityResponse)" />
      <MemberSignature Language="F#" Value="abstract member CheckNameAvailabilityService : Azure.Core.AzureLocation * Azure.ResourceManager.DataMigration.Models.NameAvailabilityRequest * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataMigration.Models.NameAvailabilityResponse&gt;&#xA;override this.CheckNameAvailabilityService : Azure.Core.AzureLocation * Azure.ResourceManager.DataMigration.Models.NameAvailabilityRequest * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataMigration.Models.NameAvailabilityResponse&gt;" Usage="mockableDataMigrationSubscriptionResource.CheckNameAvailabilityService (location, nameAvailabilityRequest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataMigration.Models.NameAvailabilityResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="nameAvailabilityRequest" Type="Azure.ResourceManager.DataMigration.Models.NameAvailabilityRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The Azure region of the operation. </param>
        <param name="nameAvailabilityRequest"> Requested name to validate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This method checks whether a proposed top-level resource name is valid and available.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/locations/{location}/checkNameAvailability</description></item><item><term>Operation Id</term><description>Services_CheckNameAvailability</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nameAvailabilityRequest" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckNameAvailabilityServiceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataMigration.Models.NameAvailabilityResponse&gt;&gt; CheckNameAvailabilityServiceAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.DataMigration.Models.NameAvailabilityRequest nameAvailabilityRequest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataMigration.Models.NameAvailabilityResponse&gt;&gt; CheckNameAvailabilityServiceAsync(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.DataMigration.Models.NameAvailabilityRequest nameAvailabilityRequest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationSubscriptionResource.CheckNameAvailabilityServiceAsync(Azure.Core.AzureLocation,Azure.ResourceManager.DataMigration.Models.NameAvailabilityRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckNameAvailabilityServiceAsync (location As AzureLocation, nameAvailabilityRequest As NameAvailabilityRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NameAvailabilityResponse))" />
      <MemberSignature Language="F#" Value="abstract member CheckNameAvailabilityServiceAsync : Azure.Core.AzureLocation * Azure.ResourceManager.DataMigration.Models.NameAvailabilityRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataMigration.Models.NameAvailabilityResponse&gt;&gt;&#xA;override this.CheckNameAvailabilityServiceAsync : Azure.Core.AzureLocation * Azure.ResourceManager.DataMigration.Models.NameAvailabilityRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataMigration.Models.NameAvailabilityResponse&gt;&gt;" Usage="mockableDataMigrationSubscriptionResource.CheckNameAvailabilityServiceAsync (location, nameAvailabilityRequest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataMigration.Models.NameAvailabilityResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="nameAvailabilityRequest" Type="Azure.ResourceManager.DataMigration.Models.NameAvailabilityRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The Azure region of the operation. </param>
        <param name="nameAvailabilityRequest"> Requested name to validate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This method checks whether a proposed top-level resource name is valid and available.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/locations/{location}/checkNameAvailability</description></item><item><term>Operation Id</term><description>Services_CheckNameAvailability</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nameAvailabilityRequest" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataMigrationServices">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataMigration.DataMigrationServiceResource&gt; GetDataMigrationServices (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataMigration.DataMigrationServiceResource&gt; GetDataMigrationServices(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationSubscriptionResource.GetDataMigrationServices(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataMigrationServices (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DataMigrationServiceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataMigrationServices : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataMigration.DataMigrationServiceResource&gt;&#xA;override this.GetDataMigrationServices : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataMigration.DataMigrationServiceResource&gt;" Usage="mockableDataMigrationSubscriptionResource.GetDataMigrationServices cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataMigration.DataMigrationServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The services resource is the top-level resource that represents the Database Migration Service. This method returns a list of service resources in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/services</description></item><item><term>Operation Id</term><description>Services_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataMigration.DataMigrationServiceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataMigrationServicesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataMigration.DataMigrationServiceResource&gt; GetDataMigrationServicesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataMigration.DataMigrationServiceResource&gt; GetDataMigrationServicesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationSubscriptionResource.GetDataMigrationServicesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataMigrationServicesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DataMigrationServiceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataMigrationServicesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataMigration.DataMigrationServiceResource&gt;&#xA;override this.GetDataMigrationServicesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataMigration.DataMigrationServiceResource&gt;" Usage="mockableDataMigrationSubscriptionResource.GetDataMigrationServicesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataMigration.DataMigrationServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The services resource is the top-level resource that represents the Database Migration Service. This method returns a list of service resources in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/services</description></item><item><term>Operation Id</term><description>Services_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataMigration.DataMigrationServiceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSkusResourceSkus">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataMigration.Models.ResourceSku&gt; GetSkusResourceSkus (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataMigration.Models.ResourceSku&gt; GetSkusResourceSkus(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationSubscriptionResource.GetSkusResourceSkus(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSkusResourceSkus (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ResourceSku)" />
      <MemberSignature Language="F#" Value="abstract member GetSkusResourceSkus : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataMigration.Models.ResourceSku&gt;&#xA;override this.GetSkusResourceSkus : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataMigration.Models.ResourceSku&gt;" Usage="mockableDataMigrationSubscriptionResource.GetSkusResourceSkus cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataMigration.Models.ResourceSku&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The skus action returns the list of SKUs that DMS supports.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/skus</description></item><item><term>Operation Id</term><description>ResourceSkus_ListSkus</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataMigration.Models.ResourceSku" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSkusResourceSkusAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataMigration.Models.ResourceSku&gt; GetSkusResourceSkusAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataMigration.Models.ResourceSku&gt; GetSkusResourceSkusAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationSubscriptionResource.GetSkusResourceSkusAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSkusResourceSkusAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ResourceSku)" />
      <MemberSignature Language="F#" Value="abstract member GetSkusResourceSkusAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataMigration.Models.ResourceSku&gt;&#xA;override this.GetSkusResourceSkusAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataMigration.Models.ResourceSku&gt;" Usage="mockableDataMigrationSubscriptionResource.GetSkusResourceSkusAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataMigration.Models.ResourceSku&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The skus action returns the list of SKUs that DMS supports.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/skus</description></item><item><term>Operation Id</term><description>ResourceSkus_ListSkus</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataMigration.Models.ResourceSku" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlMigrationServices">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataMigration.SqlMigrationServiceResource&gt; GetSqlMigrationServices (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataMigration.SqlMigrationServiceResource&gt; GetSqlMigrationServices(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationSubscriptionResource.GetSqlMigrationServices(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlMigrationServices (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SqlMigrationServiceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSqlMigrationServices : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataMigration.SqlMigrationServiceResource&gt;&#xA;override this.GetSqlMigrationServices : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataMigration.SqlMigrationServiceResource&gt;" Usage="mockableDataMigrationSubscriptionResource.GetSqlMigrationServices cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataMigration.SqlMigrationServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve all SQL migration services in the subscriptions.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/sqlMigrationServices</description></item><item><term>Operation Id</term><description>SqlMigrationServices_ListBySubscription</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataMigration.SqlMigrationServiceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlMigrationServicesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataMigration.SqlMigrationServiceResource&gt; GetSqlMigrationServicesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataMigration.SqlMigrationServiceResource&gt; GetSqlMigrationServicesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationSubscriptionResource.GetSqlMigrationServicesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlMigrationServicesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SqlMigrationServiceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSqlMigrationServicesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataMigration.SqlMigrationServiceResource&gt;&#xA;override this.GetSqlMigrationServicesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataMigration.SqlMigrationServiceResource&gt;" Usage="mockableDataMigrationSubscriptionResource.GetSqlMigrationServicesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataMigration.SqlMigrationServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve all SQL migration services in the subscriptions.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/sqlMigrationServices</description></item><item><term>Operation Id</term><description>SqlMigrationServices_ListBySubscription</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataMigration.SqlMigrationServiceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUsages">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataMigration.Models.Quota&gt; GetUsages (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataMigration.Models.Quota&gt; GetUsages(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationSubscriptionResource.GetUsages(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUsages (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of Quota)" />
      <MemberSignature Language="F#" Value="abstract member GetUsages : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataMigration.Models.Quota&gt;&#xA;override this.GetUsages : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataMigration.Models.Quota&gt;" Usage="mockableDataMigrationSubscriptionResource.GetUsages (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataMigration.Models.Quota&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The Azure region of the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This method returns region-specific quotas and resource usage information for the Database Migration Service.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/locations/{location}/usages</description></item><item><term>Operation Id</term><description>Usages_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataMigration.Models.Quota" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUsagesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataMigration.Models.Quota&gt; GetUsagesAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataMigration.Models.Quota&gt; GetUsagesAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationSubscriptionResource.GetUsagesAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUsagesAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of Quota)" />
      <MemberSignature Language="F#" Value="abstract member GetUsagesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataMigration.Models.Quota&gt;&#xA;override this.GetUsagesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataMigration.Models.Quota&gt;" Usage="mockableDataMigrationSubscriptionResource.GetUsagesAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataMigration.Models.Quota&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The Azure region of the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This method returns region-specific quotas and resource usage information for the Database Migration Service.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/locations/{location}/usages</description></item><item><term>Operation Id</term><description>Usages_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataMigration.Models.Quota" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
