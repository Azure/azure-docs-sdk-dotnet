<Type Name="MockableServiceBusSubscriptionResource" FullName="Azure.ResourceManager.ServiceBus.Mocking.MockableServiceBusSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableServiceBusSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableServiceBusSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ServiceBus.Mocking.MockableServiceBusSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableServiceBusSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableServiceBusSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ServiceBus</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableServiceBusSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceBus.Mocking.MockableServiceBusSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceBus</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ServiceBus.Mocking.MockableServiceBusSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckServiceBusNamespaceNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ServiceBus.Models.ServiceBusNameAvailabilityResult&gt; CheckServiceBusNamespaceNameAvailability (Azure.ResourceManager.ServiceBus.Models.ServiceBusNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ServiceBus.Models.ServiceBusNameAvailabilityResult&gt; CheckServiceBusNamespaceNameAvailability(class Azure.ResourceManager.ServiceBus.Models.ServiceBusNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceBus.Mocking.MockableServiceBusSubscriptionResource.CheckServiceBusNamespaceNameAvailability(Azure.ResourceManager.ServiceBus.Models.ServiceBusNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckServiceBusNamespaceNameAvailability (content As ServiceBusNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServiceBusNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckServiceBusNamespaceNameAvailability : Azure.ResourceManager.ServiceBus.Models.ServiceBusNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ServiceBus.Models.ServiceBusNameAvailabilityResult&gt;&#xA;override this.CheckServiceBusNamespaceNameAvailability : Azure.ResourceManager.ServiceBus.Models.ServiceBusNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ServiceBus.Models.ServiceBusNameAvailabilityResult&gt;" Usage="mockableServiceBusSubscriptionResource.CheckServiceBusNamespaceNameAvailability (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceBus</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ServiceBus.Models.ServiceBusNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.ServiceBus.Models.ServiceBusNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Parameters to check availability of the given namespace name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the give namespace name availability.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/CheckNameAvailability</description></item><item><term>Operation Id</term><description>Namespaces_CheckNameAvailability</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckServiceBusNamespaceNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceBus.Models.ServiceBusNameAvailabilityResult&gt;&gt; CheckServiceBusNamespaceNameAvailabilityAsync (Azure.ResourceManager.ServiceBus.Models.ServiceBusNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ServiceBus.Models.ServiceBusNameAvailabilityResult&gt;&gt; CheckServiceBusNamespaceNameAvailabilityAsync(class Azure.ResourceManager.ServiceBus.Models.ServiceBusNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceBus.Mocking.MockableServiceBusSubscriptionResource.CheckServiceBusNamespaceNameAvailabilityAsync(Azure.ResourceManager.ServiceBus.Models.ServiceBusNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckServiceBusNamespaceNameAvailabilityAsync (content As ServiceBusNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServiceBusNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckServiceBusNamespaceNameAvailabilityAsync : Azure.ResourceManager.ServiceBus.Models.ServiceBusNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceBus.Models.ServiceBusNameAvailabilityResult&gt;&gt;&#xA;override this.CheckServiceBusNamespaceNameAvailabilityAsync : Azure.ResourceManager.ServiceBus.Models.ServiceBusNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceBus.Models.ServiceBusNameAvailabilityResult&gt;&gt;" Usage="mockableServiceBusSubscriptionResource.CheckServiceBusNamespaceNameAvailabilityAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceBus</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceBus.Models.ServiceBusNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.ServiceBus.Models.ServiceBusNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Parameters to check availability of the given namespace name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the give namespace name availability.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/CheckNameAvailability</description></item><item><term>Operation Id</term><description>Namespaces_CheckNameAvailability</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceBusNamespaces">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ServiceBus.ServiceBusNamespaceResource&gt; GetServiceBusNamespaces (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ServiceBus.ServiceBusNamespaceResource&gt; GetServiceBusNamespaces(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceBus.Mocking.MockableServiceBusSubscriptionResource.GetServiceBusNamespaces(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceBusNamespaces (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ServiceBusNamespaceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceBusNamespaces : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ServiceBus.ServiceBusNamespaceResource&gt;&#xA;override this.GetServiceBusNamespaces : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ServiceBus.ServiceBusNamespaceResource&gt;" Usage="mockableServiceBusSubscriptionResource.GetServiceBusNamespaces cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceBus</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ServiceBus.ServiceBusNamespaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the available namespaces within the subscription, irrespective of the resource groups.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/namespaces</description></item><item><term>Operation Id</term><description>Namespaces_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ServiceBus.ServiceBusNamespaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceBusNamespacesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceBus.ServiceBusNamespaceResource&gt; GetServiceBusNamespacesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ServiceBus.ServiceBusNamespaceResource&gt; GetServiceBusNamespacesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceBus.Mocking.MockableServiceBusSubscriptionResource.GetServiceBusNamespacesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceBusNamespacesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ServiceBusNamespaceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceBusNamespacesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceBus.ServiceBusNamespaceResource&gt;&#xA;override this.GetServiceBusNamespacesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceBus.ServiceBusNamespaceResource&gt;" Usage="mockableServiceBusSubscriptionResource.GetServiceBusNamespacesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceBus</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceBus.ServiceBusNamespaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the available namespaces within the subscription, irrespective of the resource groups.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/namespaces</description></item><item><term>Operation Id</term><description>Namespaces_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ServiceBus.ServiceBusNamespaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
