<Type Name="IDiagnosticOperations" FullName="Microsoft.Azure.Management.ApiManagement.IDiagnosticOperations">
  <TypeSignature Language="C#" Value="public interface IDiagnosticOperations" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDiagnosticOperations" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ApiManagement.IDiagnosticOperations" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDiagnosticOperations" />
  <TypeSignature Language="F#" Value="type IDiagnosticOperations = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            DiagnosticOperations operations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateOrUpdateWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract,Microsoft.Azure.Management.ApiManagement.Models.DiagnosticCreateOrUpdateHeaders&gt;&gt; CreateOrUpdateWithHttpMessagesAsync (string resourceGroupName, string serviceName, string diagnosticId, Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract parameters, string ifMatch = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse`2&lt;class Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract, class Microsoft.Azure.Management.ApiManagement.Models.DiagnosticCreateOrUpdateHeaders&gt;&gt; CreateOrUpdateWithHttpMessagesAsync(string resourceGroupName, string serviceName, string diagnosticId, class Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract parameters, string ifMatch, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ApiManagement.IDiagnosticOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateWithHttpMessagesAsync : string * string * string * Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract, Microsoft.Azure.Management.ApiManagement.Models.DiagnosticCreateOrUpdateHeaders&gt;&gt;" Usage="iDiagnosticOperations.CreateOrUpdateWithHttpMessagesAsync (resourceGroupName, serviceName, diagnosticId, parameters, ifMatch, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract,Microsoft.Azure.Management.ApiManagement.Models.DiagnosticCreateOrUpdateHeaders&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="diagnosticId" Type="System.String" />
        <Parameter Name="parameters" Type="Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">
            The name of the resource group.
            </param>
        <param name="serviceName">
            The name of the API Management service.
            </param>
        <param name="diagnosticId">
            Diagnostic identifier. Must be unique in the current API Management
            service instance.
            </param>
        <param name="parameters">
            Create parameters.
            </param>
        <param name="ifMatch">
            ETag of the Entity. Not required when creating an entity, but
            required when updating an entity.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Creates a new Diagnostic or updates an existing one.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.Management.ApiManagement.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&gt; DeleteWithHttpMessagesAsync (string resourceGroupName, string serviceName, string diagnosticId, string ifMatch, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse&gt; DeleteWithHttpMessagesAsync(string resourceGroupName, string serviceName, string diagnosticId, string ifMatch, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ApiManagement.IDiagnosticOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteWithHttpMessagesAsync : string * string * string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&gt;" Usage="iDiagnosticOperations.DeleteWithHttpMessagesAsync (resourceGroupName, serviceName, diagnosticId, ifMatch, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="diagnosticId" Type="System.String" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">
            The name of the resource group.
            </param>
        <param name="serviceName">
            The name of the API Management service.
            </param>
        <param name="diagnosticId">
            Diagnostic identifier. Must be unique in the current API Management
            service instance.
            </param>
        <param name="ifMatch">
            ETag of the Entity. ETag should match the current entity state from
            the header response of the GET request or it should be * for
            unconditional update.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Deletes the specified Diagnostic.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.Management.ApiManagement.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntityTagWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationHeaderResponse&lt;Microsoft.Azure.Management.ApiManagement.Models.DiagnosticGetEntityTagHeaders&gt;&gt; GetEntityTagWithHttpMessagesAsync (string resourceGroupName, string serviceName, string diagnosticId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationHeaderResponse`1&lt;class Microsoft.Azure.Management.ApiManagement.Models.DiagnosticGetEntityTagHeaders&gt;&gt; GetEntityTagWithHttpMessagesAsync(string resourceGroupName, string serviceName, string diagnosticId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ApiManagement.IDiagnosticOperations.GetEntityTagWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetEntityTagWithHttpMessagesAsync : string * string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationHeaderResponse&lt;Microsoft.Azure.Management.ApiManagement.Models.DiagnosticGetEntityTagHeaders&gt;&gt;" Usage="iDiagnosticOperations.GetEntityTagWithHttpMessagesAsync (resourceGroupName, serviceName, diagnosticId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationHeaderResponse&lt;Microsoft.Azure.Management.ApiManagement.Models.DiagnosticGetEntityTagHeaders&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="diagnosticId" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">
            The name of the resource group.
            </param>
        <param name="serviceName">
            The name of the API Management service.
            </param>
        <param name="diagnosticId">
            Diagnostic identifier. Must be unique in the current API Management
            service instance.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Gets the entity state (Etag) version of the Diagnostic specified by
            its identifier.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.Management.ApiManagement.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract,Microsoft.Azure.Management.ApiManagement.Models.DiagnosticGetHeaders&gt;&gt; GetWithHttpMessagesAsync (string resourceGroupName, string serviceName, string diagnosticId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse`2&lt;class Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract, class Microsoft.Azure.Management.ApiManagement.Models.DiagnosticGetHeaders&gt;&gt; GetWithHttpMessagesAsync(string resourceGroupName, string serviceName, string diagnosticId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ApiManagement.IDiagnosticOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetWithHttpMessagesAsync : string * string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract, Microsoft.Azure.Management.ApiManagement.Models.DiagnosticGetHeaders&gt;&gt;" Usage="iDiagnosticOperations.GetWithHttpMessagesAsync (resourceGroupName, serviceName, diagnosticId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract,Microsoft.Azure.Management.ApiManagement.Models.DiagnosticGetHeaders&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="diagnosticId" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">
            The name of the resource group.
            </param>
        <param name="serviceName">
            The name of the API Management service.
            </param>
        <param name="diagnosticId">
            Diagnostic identifier. Must be unique in the current API Management
            service instance.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Gets the details of the Diagnostic specified by its identifier.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.Management.ApiManagement.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ListByServiceNextWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract&gt;&gt;&gt; ListByServiceNextWithHttpMessagesAsync (string nextPageLink, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract&gt;&gt;&gt; ListByServiceNextWithHttpMessagesAsync(string nextPageLink, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ApiManagement.IDiagnosticOperations.ListByServiceNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ListByServiceNextWithHttpMessagesAsync : string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract&gt;&gt;&gt;" Usage="iDiagnosticOperations.ListByServiceNextWithHttpMessagesAsync (nextPageLink, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nextPageLink" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Lists all diagnostics of the API Management service instance.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.Management.ApiManagement.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ListByServiceWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract&gt;&gt;&gt; ListByServiceWithHttpMessagesAsync (string resourceGroupName, string serviceName, Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract&gt; odataQuery = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract&gt;&gt;&gt; ListByServiceWithHttpMessagesAsync(string resourceGroupName, string serviceName, class Microsoft.Rest.Azure.OData.ODataQuery`1&lt;class Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract&gt; odataQuery, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ApiManagement.IDiagnosticOperations.ListByServiceWithHttpMessagesAsync(System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ListByServiceWithHttpMessagesAsync : string * string * Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract&gt;&gt;&gt;" Usage="iDiagnosticOperations.ListByServiceWithHttpMessagesAsync (resourceGroupName, serviceName, odataQuery, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="odataQuery" Type="Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">
            The name of the resource group.
            </param>
        <param name="serviceName">
            The name of the API Management service.
            </param>
        <param name="odataQuery">
            OData parameters to apply to the operation.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Lists all diagnostics of the API Management service instance.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.Management.ApiManagement.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&gt; UpdateWithHttpMessagesAsync (string resourceGroupName, string serviceName, string diagnosticId, Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract parameters, string ifMatch, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse&gt; UpdateWithHttpMessagesAsync(string resourceGroupName, string serviceName, string diagnosticId, class Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract parameters, string ifMatch, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ApiManagement.IDiagnosticOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateWithHttpMessagesAsync : string * string * string * Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&gt;" Usage="iDiagnosticOperations.UpdateWithHttpMessagesAsync (resourceGroupName, serviceName, diagnosticId, parameters, ifMatch, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="diagnosticId" Type="System.String" />
        <Parameter Name="parameters" Type="Microsoft.Azure.Management.ApiManagement.Models.DiagnosticContract" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">
            The name of the resource group.
            </param>
        <param name="serviceName">
            The name of the API Management service.
            </param>
        <param name="diagnosticId">
            Diagnostic identifier. Must be unique in the current API Management
            service instance.
            </param>
        <param name="parameters">
            Diagnostic Update parameters.
            </param>
        <param name="ifMatch">
            ETag of the Entity. ETag should match the current entity state from
            the header response of the GET request or it should be * for
            unconditional update.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Updates the details of the Diagnostic specified by its identifier.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.Management.ApiManagement.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>