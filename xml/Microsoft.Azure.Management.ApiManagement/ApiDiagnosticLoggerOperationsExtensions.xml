<Type Name="ApiDiagnosticLoggerOperationsExtensions" FullName="Microsoft.Azure.Management.ApiManagement.ApiDiagnosticLoggerOperationsExtensions">
  <TypeSignature Language="C#" Value="public static class ApiDiagnosticLoggerOperationsExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ApiDiagnosticLoggerOperationsExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ApiManagement.ApiDiagnosticLoggerOperationsExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ApiDiagnosticLoggerOperationsExtensions" />
  <TypeSignature Language="F#" Value="type ApiDiagnosticLoggerOperationsExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for ApiDiagnosticLoggerOperations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckEntityExists">
      <MemberSignature Language="C#" Value="public static bool CheckEntityExists (this Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations operations, string resourceGroupName, string serviceName, string apiId, string diagnosticId, string loggerid);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CheckEntityExists(class Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations operations, string resourceGroupName, string serviceName, string apiId, string diagnosticId, string loggerid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ApiManagement.ApiDiagnosticLoggerOperationsExtensions.CheckEntityExists(Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckEntityExists (operations As IApiDiagnosticLoggerOperations, resourceGroupName As String, serviceName As String, apiId As String, diagnosticId As String, loggerid As String) As Boolean" />
      <MemberSignature Language="F#" Value="static member CheckEntityExists : Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations * string * string * string * string * string -&gt; bool" Usage="Microsoft.Azure.Management.ApiManagement.ApiDiagnosticLoggerOperationsExtensions.CheckEntityExists (operations, resourceGroupName, serviceName, apiId, diagnosticId, loggerid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="apiId" Type="System.String" />
        <Parameter Name="diagnosticId" Type="System.String" />
        <Parameter Name="loggerid" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group.
            </param>
        <param name="serviceName">
            The name of the API Management service.
            </param>
        <param name="apiId">
            API identifier. Must be unique in the current API Management service
            instance.
            </param>
        <param name="diagnosticId">
            Diagnostic identifier. Must be unique in the current API Management service
            instance.
            </param>
        <param name="loggerid">
            Logger identifier. Must be unique in the API Management service instance.
            </param>
        <summary>
            Checks that logger entity specified by identifier is associated with the
            diagnostics entity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckEntityExistsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; CheckEntityExistsAsync (this Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations operations, string resourceGroupName, string serviceName, string apiId, string diagnosticId, string loggerid, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; CheckEntityExistsAsync(class Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations operations, string resourceGroupName, string serviceName, string apiId, string diagnosticId, string loggerid, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ApiManagement.ApiDiagnosticLoggerOperationsExtensions.CheckEntityExistsAsync(Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member CheckEntityExistsAsync : Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations * string * string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Azure.Management.ApiManagement.ApiDiagnosticLoggerOperationsExtensions.CheckEntityExistsAsync (operations, resourceGroupName, serviceName, apiId, diagnosticId, loggerid, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="apiId" Type="System.String" />
        <Parameter Name="diagnosticId" Type="System.String" />
        <Parameter Name="loggerid" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group.
            </param>
        <param name="serviceName">
            The name of the API Management service.
            </param>
        <param name="apiId">
            API identifier. Must be unique in the current API Management service
            instance.
            </param>
        <param name="diagnosticId">
            Diagnostic identifier. Must be unique in the current API Management service
            instance.
            </param>
        <param name="loggerid">
            Logger identifier. Must be unique in the API Management service instance.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Checks that logger entity specified by identifier is associated with the
            diagnostics entity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.ApiManagement.Models.LoggerContract CreateOrUpdate (this Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations operations, string resourceGroupName, string serviceName, string apiId, string diagnosticId, string loggerid);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.ApiManagement.Models.LoggerContract CreateOrUpdate(class Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations operations, string resourceGroupName, string serviceName, string apiId, string diagnosticId, string loggerid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ApiManagement.ApiDiagnosticLoggerOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateOrUpdate (operations As IApiDiagnosticLoggerOperations, resourceGroupName As String, serviceName As String, apiId As String, diagnosticId As String, loggerid As String) As LoggerContract" />
      <MemberSignature Language="F#" Value="static member CreateOrUpdate : Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations * string * string * string * string * string -&gt; Microsoft.Azure.Management.ApiManagement.Models.LoggerContract" Usage="Microsoft.Azure.Management.ApiManagement.ApiDiagnosticLoggerOperationsExtensions.CreateOrUpdate (operations, resourceGroupName, serviceName, apiId, diagnosticId, loggerid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ApiManagement.Models.LoggerContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="apiId" Type="System.String" />
        <Parameter Name="diagnosticId" Type="System.String" />
        <Parameter Name="loggerid" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group.
            </param>
        <param name="serviceName">
            The name of the API Management service.
            </param>
        <param name="apiId">
            API identifier. Must be unique in the current API Management service
            instance.
            </param>
        <param name="diagnosticId">
            Diagnostic identifier. Must be unique in the current API Management service
            instance.
            </param>
        <param name="loggerid">
            Logger identifier. Must be unique in the API Management service instance.
            </param>
        <summary>
            Attaches a logger to a dignostic for an API.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt; CreateOrUpdateAsync (this Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations operations, string resourceGroupName, string serviceName, string apiId, string diagnosticId, string loggerid, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt; CreateOrUpdateAsync(class Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations operations, string resourceGroupName, string serviceName, string apiId, string diagnosticId, string loggerid, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ApiManagement.ApiDiagnosticLoggerOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member CreateOrUpdateAsync : Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations * string * string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt;" Usage="Microsoft.Azure.Management.ApiManagement.ApiDiagnosticLoggerOperationsExtensions.CreateOrUpdateAsync (operations, resourceGroupName, serviceName, apiId, diagnosticId, loggerid, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="apiId" Type="System.String" />
        <Parameter Name="diagnosticId" Type="System.String" />
        <Parameter Name="loggerid" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group.
            </param>
        <param name="serviceName">
            The name of the API Management service.
            </param>
        <param name="apiId">
            API identifier. Must be unique in the current API Management service
            instance.
            </param>
        <param name="diagnosticId">
            Diagnostic identifier. Must be unique in the current API Management service
            instance.
            </param>
        <param name="loggerid">
            Logger identifier. Must be unique in the API Management service instance.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Attaches a logger to a dignostic for an API.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (this Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations operations, string resourceGroupName, string serviceName, string apiId, string diagnosticId, string loggerid);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(class Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations operations, string resourceGroupName, string serviceName, string apiId, string diagnosticId, string loggerid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ApiManagement.ApiDiagnosticLoggerOperationsExtensions.Delete(Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Delete (operations As IApiDiagnosticLoggerOperations, resourceGroupName As String, serviceName As String, apiId As String, diagnosticId As String, loggerid As String)" />
      <MemberSignature Language="F#" Value="static member Delete : Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations * string * string * string * string * string -&gt; unit" Usage="Microsoft.Azure.Management.ApiManagement.ApiDiagnosticLoggerOperationsExtensions.Delete (operations, resourceGroupName, serviceName, apiId, diagnosticId, loggerid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="apiId" Type="System.String" />
        <Parameter Name="diagnosticId" Type="System.String" />
        <Parameter Name="loggerid" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group.
            </param>
        <param name="serviceName">
            The name of the API Management service.
            </param>
        <param name="apiId">
            API identifier. Must be unique in the current API Management service
            instance.
            </param>
        <param name="diagnosticId">
            Diagnostic identifier. Must be unique in the current API Management service
            instance.
            </param>
        <param name="loggerid">
            Logger identifier. Must be unique in the API Management service instance.
            </param>
        <summary>
            Deletes the specified Logger from Diagnostic for an API.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task DeleteAsync (this Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations operations, string resourceGroupName, string serviceName, string apiId, string diagnosticId, string loggerid, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task DeleteAsync(class Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations operations, string resourceGroupName, string serviceName, string apiId, string diagnosticId, string loggerid, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ApiManagement.ApiDiagnosticLoggerOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member DeleteAsync : Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations * string * string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.Management.ApiManagement.ApiDiagnosticLoggerOperationsExtensions.DeleteAsync (operations, resourceGroupName, serviceName, apiId, diagnosticId, loggerid, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="apiId" Type="System.String" />
        <Parameter Name="diagnosticId" Type="System.String" />
        <Parameter Name="loggerid" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group.
            </param>
        <param name="serviceName">
            The name of the API Management service.
            </param>
        <param name="apiId">
            API identifier. Must be unique in the current API Management service
            instance.
            </param>
        <param name="diagnosticId">
            Diagnostic identifier. Must be unique in the current API Management service
            instance.
            </param>
        <param name="loggerid">
            Logger identifier. Must be unique in the API Management service instance.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Deletes the specified Logger from Diagnostic for an API.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListByService">
      <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt; ListByService (this Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations operations, string resourceGroupName, string serviceName, string apiId, string diagnosticId, Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt; odataQuery = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt; ListByService(class Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations operations, string resourceGroupName, string serviceName, string apiId, string diagnosticId, class Microsoft.Rest.Azure.OData.ODataQuery`1&lt;class Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt; odataQuery) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ApiManagement.ApiDiagnosticLoggerOperationsExtensions.ListByService(Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations,System.String,System.String,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ApiManagement.Models.LoggerContract})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListByService (operations As IApiDiagnosticLoggerOperations, resourceGroupName As String, serviceName As String, apiId As String, diagnosticId As String, Optional odataQuery As ODataQuery(Of LoggerContract) = null) As IPage(Of LoggerContract)" />
      <MemberSignature Language="F#" Value="static member ListByService : Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations * string * string * string * string * Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt; -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt;" Usage="Microsoft.Azure.Management.ApiManagement.ApiDiagnosticLoggerOperationsExtensions.ListByService (operations, resourceGroupName, serviceName, apiId, diagnosticId, odataQuery)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="apiId" Type="System.String" />
        <Parameter Name="diagnosticId" Type="System.String" />
        <Parameter Name="odataQuery" Type="Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt;" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group.
            </param>
        <param name="serviceName">
            The name of the API Management service.
            </param>
        <param name="apiId">
            API identifier. Must be unique in the current API Management service
            instance.
            </param>
        <param name="diagnosticId">
            Diagnostic identifier. Must be unique in the current API Management service
            instance.
            </param>
        <param name="odataQuery">
            OData parameters to apply to the operation.
            </param>
        <summary>
            Lists all loggers assosiated with the specified Diagnostic of an API.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListByServiceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt;&gt; ListByServiceAsync (this Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations operations, string resourceGroupName, string serviceName, string apiId, string diagnosticId, Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt; odataQuery = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt;&gt; ListByServiceAsync(class Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations operations, string resourceGroupName, string serviceName, string apiId, string diagnosticId, class Microsoft.Rest.Azure.OData.ODataQuery`1&lt;class Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt; odataQuery, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ApiManagement.ApiDiagnosticLoggerOperationsExtensions.ListByServiceAsync(Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations,System.String,System.String,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ApiManagement.Models.LoggerContract},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ListByServiceAsync : Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations * string * string * string * string * Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt;&gt;" Usage="Microsoft.Azure.Management.ApiManagement.ApiDiagnosticLoggerOperationsExtensions.ListByServiceAsync (operations, resourceGroupName, serviceName, apiId, diagnosticId, odataQuery, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="apiId" Type="System.String" />
        <Parameter Name="diagnosticId" Type="System.String" />
        <Parameter Name="odataQuery" Type="Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group.
            </param>
        <param name="serviceName">
            The name of the API Management service.
            </param>
        <param name="apiId">
            API identifier. Must be unique in the current API Management service
            instance.
            </param>
        <param name="diagnosticId">
            Diagnostic identifier. Must be unique in the current API Management service
            instance.
            </param>
        <param name="odataQuery">
            OData parameters to apply to the operation.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Lists all loggers assosiated with the specified Diagnostic of an API.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListByServiceNext">
      <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt; ListByServiceNext (this Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations operations, string nextPageLink);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt; ListByServiceNext(class Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations operations, string nextPageLink) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ApiManagement.ApiDiagnosticLoggerOperationsExtensions.ListByServiceNext(Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListByServiceNext (operations As IApiDiagnosticLoggerOperations, nextPageLink As String) As IPage(Of LoggerContract)" />
      <MemberSignature Language="F#" Value="static member ListByServiceNext : Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations * string -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt;" Usage="Microsoft.Azure.Management.ApiManagement.ApiDiagnosticLoggerOperationsExtensions.ListByServiceNext (operations, nextPageLink)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations" RefType="this" />
        <Parameter Name="nextPageLink" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
        <summary>
            Lists all loggers assosiated with the specified Diagnostic of an API.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListByServiceNextAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt;&gt; ListByServiceNextAsync (this Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt;&gt; ListByServiceNextAsync(class Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations operations, string nextPageLink, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ApiManagement.ApiDiagnosticLoggerOperationsExtensions.ListByServiceNextAsync(Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ListByServiceNextAsync : Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt;&gt;" Usage="Microsoft.Azure.Management.ApiManagement.ApiDiagnosticLoggerOperationsExtensions.ListByServiceNextAsync (operations, nextPageLink, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ApiManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ApiManagement.Models.LoggerContract&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ApiManagement.IApiDiagnosticLoggerOperations" RefType="this" />
        <Parameter Name="nextPageLink" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Lists all loggers assosiated with the specified Diagnostic of an API.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>