<Type Name="IWithElasticPoolName" FullName="Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseOperations.Definition.IWithElasticPoolName">
  <TypeSignature Language="C#" Value="public interface IWithElasticPoolName : Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta, Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseOperations.Definition.IWithElasticPoolNameBeta" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWithElasticPoolName implements class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta, class Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseOperations.Definition.IWithElasticPoolNameBeta" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseOperations.Definition.IWithElasticPoolName" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWithElasticPoolName&#xA;Implements IBeta, IWithElasticPoolNameBeta" />
  <TypeSignature Language="F#" Value="type IWithElasticPoolName = interface&#xA;    interface IWithElasticPoolNameBeta&#xA;    interface IBeta" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWithElasticPoolName : Microsoft::Azure::Management::ResourceManager::Fluent::Core::IBeta, Microsoft::Azure::Management::Sql::Fluent::SqlDatabaseOperations::Definition::IWithElasticPoolNameBeta" />
  <TypeSignature Language="C++ CX" Value="public interface class IWithElasticPoolName : Microsoft::Azure::Management::ResourceManager::Fluent::Core::IBeta, Microsoft::Azure::Management::Sql::Fluent::SqlDatabaseOperations::Definition::IWithElasticPoolNameBeta" />
  <TypeSignature Language="C++ WINRT" Value="__interface IWithElasticPoolName : Microsoft::Azure::Management::ResourceManager::Fluent::Core::IBeta, Microsoft::Azure::Management::Sql::Fluent::SqlDatabaseOperations::Definition::IWithElasticPoolNameBeta" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Sql.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseOperations.Definition.IWithElasticPoolNameBeta</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="WithExistingElasticPool">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseOperations.Definition.IWithExistingDatabaseAfterElasticPool WithExistingElasticPool (Microsoft.Azure.Management.Sql.Fluent.ISqlElasticPool sqlElasticPool);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseOperations.Definition.IWithExistingDatabaseAfterElasticPool WithExistingElasticPool(class Microsoft.Azure.Management.Sql.Fluent.ISqlElasticPool sqlElasticPool) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseOperations.Definition.IWithElasticPoolName.WithExistingElasticPool(Microsoft.Azure.Management.Sql.Fluent.ISqlElasticPool)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithExistingElasticPool (sqlElasticPool As ISqlElasticPool) As IWithExistingDatabaseAfterElasticPool" />
      <MemberSignature Language="F#" Value="abstract member WithExistingElasticPool : Microsoft.Azure.Management.Sql.Fluent.ISqlElasticPool -&gt; Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseOperations.Definition.IWithExistingDatabaseAfterElasticPool" Usage="iWithElasticPoolName.WithExistingElasticPool sqlElasticPool" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Azure::Management::Sql::Fluent::SqlDatabaseOperations::Definition::IWithExistingDatabaseAfterElasticPool ^ WithExistingElasticPool(Microsoft::Azure::Management::Sql::Fluent::ISqlElasticPool ^ sqlElasticPool);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::Azure::Management::Sql::Fluent::SqlDatabaseOperations::Definition::IWithExistingDatabaseAfterElasticPool ^ WithExistingElasticPool(Microsoft::Azure::Management::Sql::Fluent::ISqlElasticPool ^ sqlElasticPool);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::Azure::Management::Sql::Fluent::SqlDatabaseOperations::Definition::IWithExistingDatabaseAfterElasticPool WithExistingElasticPool(Microsoft::Azure::Management::Sql::Fluent::ISqlElasticPool const &amp; sqlElasticPool);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Sql.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseOperations.Definition.IWithExistingDatabaseAfterElasticPool</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlElasticPool" Type="Microsoft.Azure.Management.Sql.Fluent.ISqlElasticPool" />
      </Parameters>
      <Docs>
        <param name="sqlElasticPool">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithExistingElasticPool">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseOperations.Definition.IWithExistingDatabaseAfterElasticPool WithExistingElasticPool (string elasticPoolName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseOperations.Definition.IWithExistingDatabaseAfterElasticPool WithExistingElasticPool(string elasticPoolName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseOperations.Definition.IWithElasticPoolName.WithExistingElasticPool(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithExistingElasticPool (elasticPoolName As String) As IWithExistingDatabaseAfterElasticPool" />
      <MemberSignature Language="F#" Value="abstract member WithExistingElasticPool : string -&gt; Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseOperations.Definition.IWithExistingDatabaseAfterElasticPool" Usage="iWithElasticPoolName.WithExistingElasticPool elasticPoolName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Azure::Management::Sql::Fluent::SqlDatabaseOperations::Definition::IWithExistingDatabaseAfterElasticPool ^ WithExistingElasticPool(System::String ^ elasticPoolName);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::Azure::Management::Sql::Fluent::SqlDatabaseOperations::Definition::IWithExistingDatabaseAfterElasticPool ^ WithExistingElasticPool(Platform::String ^ elasticPoolName);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::Azure::Management::Sql::Fluent::SqlDatabaseOperations::Definition::IWithExistingDatabaseAfterElasticPool WithExistingElasticPool(std::wstring const &amp; elasticPoolName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Sql.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseOperations.Definition.IWithExistingDatabaseAfterElasticPool</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elasticPoolName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elasticPoolName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithNewElasticPool">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseOperations.Definition.IWithExistingDatabaseAfterElasticPool WithNewElasticPool (Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable&lt;Microsoft.Azure.Management.Sql.Fluent.ISqlElasticPool&gt; sqlElasticPool);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseOperations.Definition.IWithExistingDatabaseAfterElasticPool WithNewElasticPool(class Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable`1&lt;class Microsoft.Azure.Management.Sql.Fluent.ISqlElasticPool&gt; sqlElasticPool) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseOperations.Definition.IWithElasticPoolName.WithNewElasticPool(Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable{Microsoft.Azure.Management.Sql.Fluent.ISqlElasticPool})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithNewElasticPool (sqlElasticPool As ICreatable(Of ISqlElasticPool)) As IWithExistingDatabaseAfterElasticPool" />
      <MemberSignature Language="F#" Value="abstract member WithNewElasticPool : Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable&lt;Microsoft.Azure.Management.Sql.Fluent.ISqlElasticPool&gt; -&gt; Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseOperations.Definition.IWithExistingDatabaseAfterElasticPool" Usage="iWithElasticPoolName.WithNewElasticPool sqlElasticPool" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Azure::Management::Sql::Fluent::SqlDatabaseOperations::Definition::IWithExistingDatabaseAfterElasticPool ^ WithNewElasticPool(Microsoft::Azure::Management::ResourceManager::Fluent::Core::ResourceActions::ICreatable&lt;Microsoft::Azure::Management::Sql::Fluent::ISqlElasticPool ^&gt; ^ sqlElasticPool);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::Azure::Management::Sql::Fluent::SqlDatabaseOperations::Definition::IWithExistingDatabaseAfterElasticPool ^ WithNewElasticPool(Microsoft::Azure::Management::ResourceManager::Fluent::Core::ResourceActions::ICreatable&lt;Microsoft::Azure::Management::Sql::Fluent::ISqlElasticPool ^&gt; ^ sqlElasticPool);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::Azure::Management::Sql::Fluent::SqlDatabaseOperations::Definition::IWithExistingDatabaseAfterElasticPool WithNewElasticPool(Microsoft::Azure::Management::ResourceManager::Fluent::Core::ResourceActions::ICreatable&lt;Microsoft::Azure::Management::Sql::Fluent::ISqlElasticPool&gt; const &amp; sqlElasticPool);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Sql.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseOperations.Definition.IWithExistingDatabaseAfterElasticPool</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlElasticPool" Type="Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable&lt;Microsoft.Azure.Management.Sql.Fluent.ISqlElasticPool&gt;" />
      </Parameters>
      <Docs>
        <param name="sqlElasticPool">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>