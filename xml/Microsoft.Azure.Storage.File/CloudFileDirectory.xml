<Type Name="CloudFileDirectory" FullName="Microsoft.Azure.Storage.File.CloudFileDirectory">
  <TypeSignature Language="C#" Value="public class CloudFileDirectory : Microsoft.Azure.Storage.File.IListFileItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CloudFileDirectory extends System.Object implements class Microsoft.Azure.Storage.File.IListFileItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Storage.File.CloudFileDirectory" />
  <TypeSignature Language="VB.NET" Value="Public Class CloudFileDirectory&#xA;Implements IListFileItem" />
  <TypeSignature Language="F#" Value="type CloudFileDirectory = class&#xA;    interface IListFileItem" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
    <AssemblyVersion>11.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Storage.File.IListFileItem</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents a directory of files, designated by a delimiter character.
            </summary>
    <remarks>Shares, which are encapsulated as <see cref="T:Microsoft.Azure.Storage.File.CloudFileShare" /> objects, hold directories, and directories hold files. Directories can also contain sub-directories.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CloudFileDirectory (Uri directoryAbsoluteUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri directoryAbsoluteUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (directoryAbsoluteUri As Uri)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Storage.File.CloudFileDirectory : Uri -&gt; Microsoft.Azure.Storage.File.CloudFileDirectory" Usage="new Microsoft.Azure.Storage.File.CloudFileDirectory directoryAbsoluteUri" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="directoryAbsoluteUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="directoryAbsoluteUri">A <see cref="T:System.Uri" /> object containing the absolute URI to the directory.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory" /> class using an absolute URI to the directory.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CloudFileDirectory (Microsoft.Azure.Storage.StorageUri directoryAbsoluteUri, Microsoft.Azure.Storage.Auth.StorageCredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Azure.Storage.StorageUri directoryAbsoluteUri, class Microsoft.Azure.Storage.Auth.StorageCredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.#ctor(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (directoryAbsoluteUri As StorageUri, credentials As StorageCredentials)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Storage.File.CloudFileDirectory : Microsoft.Azure.Storage.StorageUri * Microsoft.Azure.Storage.Auth.StorageCredentials -&gt; Microsoft.Azure.Storage.File.CloudFileDirectory" Usage="new Microsoft.Azure.Storage.File.CloudFileDirectory (directoryAbsoluteUri, credentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="directoryAbsoluteUri" Type="Microsoft.Azure.Storage.StorageUri" />
        <Parameter Name="credentials" Type="Microsoft.Azure.Storage.Auth.StorageCredentials" />
      </Parameters>
      <Docs>
        <param name="directoryAbsoluteUri">A <see cref="T:System.Uri" /> object containing the absolute URI to the directory.</param>
        <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials" /> object.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory" /> class using an absolute URI to the directory.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CloudFileDirectory (Uri directoryAbsoluteUri, Microsoft.Azure.Storage.Auth.StorageCredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri directoryAbsoluteUri, class Microsoft.Azure.Storage.Auth.StorageCredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.#ctor(System.Uri,Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (directoryAbsoluteUri As Uri, credentials As StorageCredentials)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Storage.File.CloudFileDirectory : Uri * Microsoft.Azure.Storage.Auth.StorageCredentials -&gt; Microsoft.Azure.Storage.File.CloudFileDirectory" Usage="new Microsoft.Azure.Storage.File.CloudFileDirectory (directoryAbsoluteUri, credentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="directoryAbsoluteUri" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.Azure.Storage.Auth.StorageCredentials" />
      </Parameters>
      <Docs>
        <param name="directoryAbsoluteUri">A <see cref="T:System.Uri" /> object containing the absolute URI to the directory.</param>
        <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials" /> object.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory" /> class using an absolute URI to the directory.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCloseAllHandlesSegmented">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginCloseAllHandlesSegmented (Microsoft.Azure.Storage.File.FileContinuationToken token, bool? recursive, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginCloseAllHandlesSegmented(class Microsoft.Azure.Storage.File.FileContinuationToken token, valuetype System.Nullable`1&lt;bool&gt; recursive, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginCloseAllHandlesSegmented(Microsoft.Azure.Storage.File.FileContinuationToken,System.Nullable{System.Boolean},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginCloseAllHandlesSegmented (token As FileContinuationToken, recursive As Nullable(Of Boolean), accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginCloseAllHandlesSegmented : Microsoft.Azure.Storage.File.FileContinuationToken * Nullable&lt;bool&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginCloseAllHandlesSegmented : Microsoft.Azure.Storage.File.FileContinuationToken * Nullable&lt;bool&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudFileDirectory.BeginCloseAllHandlesSegmented (token, recursive, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Azure.Storage.File.FileContinuationToken" />
        <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="token">Continuation token for closing the handles.</param>
        <param name="recursive">Whether to recurse through this directory's files and subfolders. A lack of value is interpreted as false.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the file. If <c>null</c>, no condition is used.</param>
        <param name="options">An <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">The callback delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary> 
            Begins an asynchronous operation to close all SMB handles on this directory. 
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCloseHandleSegmented">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginCloseHandleSegmented (string handleId, Microsoft.Azure.Storage.File.FileContinuationToken token, bool? recursive, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginCloseHandleSegmented(string handleId, class Microsoft.Azure.Storage.File.FileContinuationToken token, valuetype System.Nullable`1&lt;bool&gt; recursive, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginCloseHandleSegmented(System.String,Microsoft.Azure.Storage.File.FileContinuationToken,System.Nullable{System.Boolean},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginCloseHandleSegmented (handleId As String, token As FileContinuationToken, recursive As Nullable(Of Boolean), accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginCloseHandleSegmented : string * Microsoft.Azure.Storage.File.FileContinuationToken * Nullable&lt;bool&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginCloseHandleSegmented : string * Microsoft.Azure.Storage.File.FileContinuationToken * Nullable&lt;bool&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudFileDirectory.BeginCloseHandleSegmented (handleId, token, recursive, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handleId" Type="System.String" />
        <Parameter Name="token" Type="Microsoft.Azure.Storage.File.FileContinuationToken" />
        <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handleId">Id of the handle.</param>
        <param name="token">Continuation token for when closing a file takes exceedinly long.</param>
        <param name="recursive">Whether to recurse through this directory's sub files and folders. A lack of value is interpreted as false.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the file. If <c>null</c>, no condition is used.</param>
        <param name="options">An <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">The callback delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary> 
            Begins an asynchronous operation to close the specified SMB handle on this directory. 
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreate">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginCreate (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginCreate(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginCreate(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginCreate (callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginCreate : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginCreate : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudFileDirectory.BeginCreate (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">The callback delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to create a directory.
            </summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreate">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginCreate (Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginCreate(class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginCreate(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginCreate (options As FileRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginCreate : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginCreate : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudFileDirectory.BeginCreate (options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="options">An <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">The callback delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to create a directory.
            </summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreateIfNotExists">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginCreateIfNotExists (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginCreateIfNotExists(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginCreateIfNotExists(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginCreateIfNotExists (callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginCreateIfNotExists : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginCreateIfNotExists : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudFileDirectory.BeginCreateIfNotExists (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">The callback delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous request to create the directory if it does not already exist.
            </summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>This API requires Create or Write permissions.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreateIfNotExists">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginCreateIfNotExists (Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginCreateIfNotExists(class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginCreateIfNotExists(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginCreateIfNotExists (options As FileRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginCreateIfNotExists : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginCreateIfNotExists : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudFileDirectory.BeginCreateIfNotExists (options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="options">An <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">The callback delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous request to create the directory if it does not already exist.
            </summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>This API requires Create or Write permissions.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDelete">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginDelete (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginDelete(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginDelete(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginDelete (callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginDelete : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginDelete : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudFileDirectory.BeginDelete (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">The callback delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to delete a directory.
            </summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDelete">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginDelete (Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginDelete(class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginDelete(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginDelete (accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginDelete : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginDelete : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudFileDirectory.BeginDelete (accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the directory. If <c>null</c>, no condition is used.</param>
        <param name="options">An <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">The callback delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to delete a directory.
            </summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDeleteIfExists">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginDeleteIfExists (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginDeleteIfExists(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginDeleteIfExists(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginDeleteIfExists (callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginDeleteIfExists : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginDeleteIfExists : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudFileDirectory.BeginDeleteIfExists (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">The callback delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous request to delete the directory if it already exists.
            </summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDeleteIfExists">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginDeleteIfExists (Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginDeleteIfExists(class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginDeleteIfExists(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginDeleteIfExists (accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginDeleteIfExists : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginDeleteIfExists : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudFileDirectory.BeginDeleteIfExists (accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the directory. If <c>null</c>, no condition is used.</param>
        <param name="options">An <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">The callback delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous request to delete the directory if it already exists.
            </summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExists">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginExists (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginExists(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginExists(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginExists (callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginExists : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginExists : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudFileDirectory.BeginExists (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">The callback delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous request to check whether the directory exists.
            </summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExists">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginExists (Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginExists(class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginExists(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginExists (options As FileRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginExists : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginExists : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudFileDirectory.BeginExists (options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="options">An <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">The callback delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous request to check whether the directory exists.
            </summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginFetchAttributes">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginFetchAttributes (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginFetchAttributes(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginFetchAttributes(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginFetchAttributes (callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginFetchAttributes : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginFetchAttributes : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudFileDirectory.BeginFetchAttributes (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">The callback delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to populate the directory's properties.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginFetchAttributes">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginFetchAttributes (Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginFetchAttributes(class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginFetchAttributes (accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginFetchAttributes : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginFetchAttributes : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudFileDirectory.BeginFetchAttributes (accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the file. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">The callback delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to populate the directory's properties and metadata.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginListFilesAndDirectoriesSegmented">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginListFilesAndDirectoriesSegmented (Microsoft.Azure.Storage.File.FileContinuationToken currentToken, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginListFilesAndDirectoriesSegmented(class Microsoft.Azure.Storage.File.FileContinuationToken currentToken, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginListFilesAndDirectoriesSegmented(Microsoft.Azure.Storage.File.FileContinuationToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginListFilesAndDirectoriesSegmented (currentToken As FileContinuationToken, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginListFilesAndDirectoriesSegmented : Microsoft.Azure.Storage.File.FileContinuationToken * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginListFilesAndDirectoriesSegmented : Microsoft.Azure.Storage.File.FileContinuationToken * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudFileDirectory.BeginListFilesAndDirectoriesSegmented (currentToken, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="currentToken" Type="Microsoft.Azure.Storage.File.FileContinuationToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="currentToken">A continuation token returned by a previous listing operation.</param>
        <param name="callback">The callback delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to return a result segment containing a collection of file items 
            in the share.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginListFilesAndDirectoriesSegmented">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginListFilesAndDirectoriesSegmented (int? maxResults, Microsoft.Azure.Storage.File.FileContinuationToken currentToken, Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginListFilesAndDirectoriesSegmented(valuetype System.Nullable`1&lt;int32&gt; maxResults, class Microsoft.Azure.Storage.File.FileContinuationToken currentToken, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginListFilesAndDirectoriesSegmented(System.Nullable{System.Int32},Microsoft.Azure.Storage.File.FileContinuationToken,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginListFilesAndDirectoriesSegmented (maxResults As Nullable(Of Integer), currentToken As FileContinuationToken, options As FileRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginListFilesAndDirectoriesSegmented : Nullable&lt;int&gt; * Microsoft.Azure.Storage.File.FileContinuationToken * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginListFilesAndDirectoriesSegmented : Nullable&lt;int&gt; * Microsoft.Azure.Storage.File.FileContinuationToken * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudFileDirectory.BeginListFilesAndDirectoriesSegmented (maxResults, currentToken, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxResults" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="currentToken" Type="Microsoft.Azure.Storage.File.FileContinuationToken" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the 
            per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>
        <param name="currentToken">A continuation token returned by a previous listing operation.</param>
        <param name="options">An <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">The callback delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to return a result segment containing a collection of file items 
            in the share.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginListFilesAndDirectoriesSegmented">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Storage.ICancellableAsyncResult BeginListFilesAndDirectoriesSegmented (string prefix, int? maxResults, Microsoft.Azure.Storage.File.FileContinuationToken currentToken, Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginListFilesAndDirectoriesSegmented(string prefix, valuetype System.Nullable`1&lt;int32&gt; maxResults, class Microsoft.Azure.Storage.File.FileContinuationToken currentToken, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginListFilesAndDirectoriesSegmented(System.String,System.Nullable{System.Int32},Microsoft.Azure.Storage.File.FileContinuationToken,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginListFilesAndDirectoriesSegmented (prefix As String, maxResults As Nullable(Of Integer), currentToken As FileContinuationToken, options As FileRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="member this.BeginListFilesAndDirectoriesSegmented : string * Nullable&lt;int&gt; * Microsoft.Azure.Storage.File.FileContinuationToken * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudFileDirectory.BeginListFilesAndDirectoriesSegmented (prefix, maxResults, currentToken, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="maxResults" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="currentToken" Type="Microsoft.Azure.Storage.File.FileContinuationToken" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="prefix">A string containing the file or directory name prefix.</param>
        <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the 
            per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>
        <param name="currentToken">A continuation token returned by a previous listing operation.</param>
        <param name="options">An <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">The callback delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to return a result segment containing a collection of file items 
            in the share.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginListHandlesSegmented">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginListHandlesSegmented (Microsoft.Azure.Storage.File.FileContinuationToken token, int? maxResults, bool? recursive, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginListHandlesSegmented(class Microsoft.Azure.Storage.File.FileContinuationToken token, valuetype System.Nullable`1&lt;int32&gt; maxResults, valuetype System.Nullable`1&lt;bool&gt; recursive, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginListHandlesSegmented(Microsoft.Azure.Storage.File.FileContinuationToken,System.Nullable{System.Int32},System.Nullable{System.Boolean},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginListHandlesSegmented (token As FileContinuationToken, maxResults As Nullable(Of Integer), recursive As Nullable(Of Boolean), accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginListHandlesSegmented : Microsoft.Azure.Storage.File.FileContinuationToken * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginListHandlesSegmented : Microsoft.Azure.Storage.File.FileContinuationToken * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudFileDirectory.BeginListHandlesSegmented (token, maxResults, recursive, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Azure.Storage.File.FileContinuationToken" />
        <Parameter Name="maxResults" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="token">Continuation token for paginated results.</param>
        <param name="maxResults">The maximum number of results to be returned by the server.</param>
        <param name="recursive">Whether to recurse through this directory's files and subfolders. A lack of value is interpreted as false.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the file. If <c>null</c>, no condition is used.</param>
        <param name="options">An <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">The callback delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary> 
            Begins an asynchronous operation to get the SMB handles open on this directory. 
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSetMetadata">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginSetMetadata (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginSetMetadata(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginSetMetadata(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginSetMetadata (callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginSetMetadata : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginSetMetadata : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudFileDirectory.BeginSetMetadata (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">The callback delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to update the directory's metadata.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSetMetadata">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginSetMetadata (Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginSetMetadata(class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginSetMetadata(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginSetMetadata (accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginSetMetadata : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginSetMetadata : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudFileDirectory.BeginSetMetadata (accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the directory. If <c>null</c>, no condition is used.</param>
        <param name="options">An <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">The callback delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to update the directory's metadata.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAllHandlesSegmented">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.File.CloseFileHandleResultSegment CloseAllHandlesSegmented (Microsoft.Azure.Storage.File.FileContinuationToken token = default, bool? recursive = default, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.File.FileRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.File.CloseFileHandleResultSegment CloseAllHandlesSegmented(class Microsoft.Azure.Storage.File.FileContinuationToken token, valuetype System.Nullable`1&lt;bool&gt; recursive, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CloseAllHandlesSegmented(Microsoft.Azure.Storage.File.FileContinuationToken,System.Nullable{System.Boolean},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloseAllHandlesSegmented (Optional token As FileContinuationToken = Nothing, Optional recursive As Nullable(Of Boolean) = Nothing, Optional accessCondition As AccessCondition = Nothing, Optional options As FileRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing) As CloseFileHandleResultSegment" />
      <MemberSignature Language="F#" Value="abstract member CloseAllHandlesSegmented : Microsoft.Azure.Storage.File.FileContinuationToken * Nullable&lt;bool&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; Microsoft.Azure.Storage.File.CloseFileHandleResultSegment&#xA;override this.CloseAllHandlesSegmented : Microsoft.Azure.Storage.File.FileContinuationToken * Nullable&lt;bool&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; Microsoft.Azure.Storage.File.CloseFileHandleResultSegment" Usage="cloudFileDirectory.CloseAllHandlesSegmented (token, recursive, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.File.CloseFileHandleResultSegment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Azure.Storage.File.FileContinuationToken" />
        <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="token">Continuation token for closing the handles.</param>
        <param name="recursive">Whether to recurse through this directory's files and subfolders.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the file. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary> 
            Closes all SMB handles on this file. 
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAllHandlesSegmentedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.CloseFileHandleResultSegment&gt; CloseAllHandlesSegmentedAsync (Microsoft.Azure.Storage.File.FileContinuationToken token = default, bool? recursive = default, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.File.FileRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default, System.Threading.CancellationToken? cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.File.CloseFileHandleResultSegment&gt; CloseAllHandlesSegmentedAsync(class Microsoft.Azure.Storage.File.FileContinuationToken token, valuetype System.Nullable`1&lt;bool&gt; recursive, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Nullable`1&lt;valuetype System.Threading.CancellationToken&gt; cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CloseAllHandlesSegmentedAsync(Microsoft.Azure.Storage.File.FileContinuationToken,System.Nullable{System.Boolean},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Nullable{System.Threading.CancellationToken})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloseAllHandlesSegmentedAsync (Optional token As FileContinuationToken = Nothing, Optional recursive As Nullable(Of Boolean) = Nothing, Optional accessCondition As AccessCondition = Nothing, Optional options As FileRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing, Optional cancellationToken As Nullable(Of CancellationToken) = Nothing) As Task(Of CloseFileHandleResultSegment)" />
      <MemberSignature Language="F#" Value="abstract member CloseAllHandlesSegmentedAsync : Microsoft.Azure.Storage.File.FileContinuationToken * Nullable&lt;bool&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * Nullable&lt;System.Threading.CancellationToken&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.CloseFileHandleResultSegment&gt;&#xA;override this.CloseAllHandlesSegmentedAsync : Microsoft.Azure.Storage.File.FileContinuationToken * Nullable&lt;bool&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * Nullable&lt;System.Threading.CancellationToken&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.CloseFileHandleResultSegment&gt;" Usage="cloudFileDirectory.CloseAllHandlesSegmentedAsync (token, recursive, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.CloseFileHandleResultSegment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Azure.Storage.File.FileContinuationToken" />
        <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Nullable&lt;System.Threading.CancellationToken&gt;" />
      </Parameters>
      <Docs>
        <param name="token">Continuation token for closing the handles.</param>
        <param name="recursive">Whether to recurse through this directory's sub files and folders. A lack of value is interpreted as false.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the file. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary> 
            Returns a task that performs an asynchronous operation to close all SMB handles on this directory. 
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseHandleSegmented">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.File.CloseFileHandleResultSegment CloseHandleSegmented (string handleId, Microsoft.Azure.Storage.File.FileContinuationToken token = default, bool? recursive = default, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.File.FileRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.File.CloseFileHandleResultSegment CloseHandleSegmented(string handleId, class Microsoft.Azure.Storage.File.FileContinuationToken token, valuetype System.Nullable`1&lt;bool&gt; recursive, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CloseHandleSegmented(System.String,Microsoft.Azure.Storage.File.FileContinuationToken,System.Nullable{System.Boolean},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloseHandleSegmented (handleId As String, Optional token As FileContinuationToken = Nothing, Optional recursive As Nullable(Of Boolean) = Nothing, Optional accessCondition As AccessCondition = Nothing, Optional options As FileRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing) As CloseFileHandleResultSegment" />
      <MemberSignature Language="F#" Value="abstract member CloseHandleSegmented : string * Microsoft.Azure.Storage.File.FileContinuationToken * Nullable&lt;bool&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; Microsoft.Azure.Storage.File.CloseFileHandleResultSegment&#xA;override this.CloseHandleSegmented : string * Microsoft.Azure.Storage.File.FileContinuationToken * Nullable&lt;bool&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; Microsoft.Azure.Storage.File.CloseFileHandleResultSegment" Usage="cloudFileDirectory.CloseHandleSegmented (handleId, token, recursive, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.File.CloseFileHandleResultSegment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handleId" Type="System.String" />
        <Parameter Name="token" Type="Microsoft.Azure.Storage.File.FileContinuationToken" />
        <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="handleId">Id of the handle, "*" if all handles on the file.</param>
        <param name="token">Continuation token for when closing the handle requires multiple service calls.</param>
        <param name="recursive">Whether to recurse through this directory's sub files and folders. A lack of value is interpreted as false.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the file. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary> 
            Closes the specified SMB handle on this directory. 
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseHandleSegmented">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.File.CloseFileHandleResultSegment CloseHandleSegmented (ulong handleId, Microsoft.Azure.Storage.File.FileContinuationToken token = default, bool? recursive = default, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.File.FileRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.File.CloseFileHandleResultSegment CloseHandleSegmented(unsigned int64 handleId, class Microsoft.Azure.Storage.File.FileContinuationToken token, valuetype System.Nullable`1&lt;bool&gt; recursive, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CloseHandleSegmented(System.UInt64,Microsoft.Azure.Storage.File.FileContinuationToken,System.Nullable{System.Boolean},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloseHandleSegmented (handleId As ULong, Optional token As FileContinuationToken = Nothing, Optional recursive As Nullable(Of Boolean) = Nothing, Optional accessCondition As AccessCondition = Nothing, Optional options As FileRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing) As CloseFileHandleResultSegment" />
      <MemberSignature Language="F#" Value="abstract member CloseHandleSegmented : uint64 * Microsoft.Azure.Storage.File.FileContinuationToken * Nullable&lt;bool&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; Microsoft.Azure.Storage.File.CloseFileHandleResultSegment&#xA;override this.CloseHandleSegmented : uint64 * Microsoft.Azure.Storage.File.FileContinuationToken * Nullable&lt;bool&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; Microsoft.Azure.Storage.File.CloseFileHandleResultSegment" Usage="cloudFileDirectory.CloseHandleSegmented (handleId, token, recursive, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.File.CloseFileHandleResultSegment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handleId" Type="System.UInt64" />
        <Parameter Name="token" Type="Microsoft.Azure.Storage.File.FileContinuationToken" />
        <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="handleId">Id of the handle.</param>
        <param name="token">Continuation token for when closing the handle requires multiple service calls.</param>
        <param name="recursive">Whether to recurse through this directory's sub files and folders. A lack of value is interpreted as false.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the file. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary> 
            Closes the specified SMB handle on this directory. 
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseHandleSegmentedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.CloseFileHandleResultSegment&gt; CloseHandleSegmentedAsync (string handleId, Microsoft.Azure.Storage.File.FileContinuationToken token = default, bool? recursive = default, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.File.FileRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default, System.Threading.CancellationToken? cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.File.CloseFileHandleResultSegment&gt; CloseHandleSegmentedAsync(string handleId, class Microsoft.Azure.Storage.File.FileContinuationToken token, valuetype System.Nullable`1&lt;bool&gt; recursive, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Nullable`1&lt;valuetype System.Threading.CancellationToken&gt; cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CloseHandleSegmentedAsync(System.String,Microsoft.Azure.Storage.File.FileContinuationToken,System.Nullable{System.Boolean},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Nullable{System.Threading.CancellationToken})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloseHandleSegmentedAsync (handleId As String, Optional token As FileContinuationToken = Nothing, Optional recursive As Nullable(Of Boolean) = Nothing, Optional accessCondition As AccessCondition = Nothing, Optional options As FileRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing, Optional cancellationToken As Nullable(Of CancellationToken) = Nothing) As Task(Of CloseFileHandleResultSegment)" />
      <MemberSignature Language="F#" Value="abstract member CloseHandleSegmentedAsync : string * Microsoft.Azure.Storage.File.FileContinuationToken * Nullable&lt;bool&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * Nullable&lt;System.Threading.CancellationToken&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.CloseFileHandleResultSegment&gt;&#xA;override this.CloseHandleSegmentedAsync : string * Microsoft.Azure.Storage.File.FileContinuationToken * Nullable&lt;bool&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * Nullable&lt;System.Threading.CancellationToken&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.CloseFileHandleResultSegment&gt;" Usage="cloudFileDirectory.CloseHandleSegmentedAsync (handleId, token, recursive, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.CloseFileHandleResultSegment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handleId" Type="System.String" />
        <Parameter Name="token" Type="Microsoft.Azure.Storage.File.FileContinuationToken" />
        <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Nullable&lt;System.Threading.CancellationToken&gt;" />
      </Parameters>
      <Docs>
        <param name="handleId">Id of the handle, "*" if all handles on the file.</param>
        <param name="token">Continuation token for when closing the handle takes exceedingly long.</param>
        <param name="recursive">Whether to recurse through this directory's sub files and folders. A lack of value is interpreted as false.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the file. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary> 
            Returns a task that performs an asynchronous operation to close the specified SMB handle on this directory. 
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseHandleSegmentedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.CloseFileHandleResultSegment&gt; CloseHandleSegmentedAsync (ulong handleId, Microsoft.Azure.Storage.File.FileContinuationToken token = default, bool? recursive = default, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.File.FileRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default, System.Threading.CancellationToken? cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.File.CloseFileHandleResultSegment&gt; CloseHandleSegmentedAsync(unsigned int64 handleId, class Microsoft.Azure.Storage.File.FileContinuationToken token, valuetype System.Nullable`1&lt;bool&gt; recursive, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Nullable`1&lt;valuetype System.Threading.CancellationToken&gt; cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CloseHandleSegmentedAsync(System.UInt64,Microsoft.Azure.Storage.File.FileContinuationToken,System.Nullable{System.Boolean},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Nullable{System.Threading.CancellationToken})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloseHandleSegmentedAsync (handleId As ULong, Optional token As FileContinuationToken = Nothing, Optional recursive As Nullable(Of Boolean) = Nothing, Optional accessCondition As AccessCondition = Nothing, Optional options As FileRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing, Optional cancellationToken As Nullable(Of CancellationToken) = Nothing) As Task(Of CloseFileHandleResultSegment)" />
      <MemberSignature Language="F#" Value="abstract member CloseHandleSegmentedAsync : uint64 * Microsoft.Azure.Storage.File.FileContinuationToken * Nullable&lt;bool&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * Nullable&lt;System.Threading.CancellationToken&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.CloseFileHandleResultSegment&gt;&#xA;override this.CloseHandleSegmentedAsync : uint64 * Microsoft.Azure.Storage.File.FileContinuationToken * Nullable&lt;bool&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * Nullable&lt;System.Threading.CancellationToken&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.CloseFileHandleResultSegment&gt;" Usage="cloudFileDirectory.CloseHandleSegmentedAsync (handleId, token, recursive, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.CloseFileHandleResultSegment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handleId" Type="System.UInt64" />
        <Parameter Name="token" Type="Microsoft.Azure.Storage.File.FileContinuationToken" />
        <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Nullable&lt;System.Threading.CancellationToken&gt;" />
      </Parameters>
      <Docs>
        <param name="handleId">Id of the handle.</param>
        <param name="token">Continuation token for when closing the handle takes exceedingly long.</param>
        <param name="recursive">Whether to recurse through this directory's sub files and folders. A lack of value is interpreted as false.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the file. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary> 
            Returns a task that performs an asynchronous operation to close the specified SMB handle on this directory. 
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual void Create (Microsoft.Azure.Storage.File.FileRequestOptions requestOptions = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Create(class Microsoft.Azure.Storage.File.FileRequestOptions requestOptions, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.Create(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Create (Optional requestOptions As FileRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.Create : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudFileDirectory.Create (requestOptions, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestOptions" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="requestOptions">An <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation. This object
            is used to track requests to the storage service, and to provide additional runtime information about the operation. </param>
        <summary>
            Creates the directory.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CreateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CreateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CreateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync () As Task" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.CreateAsync : unit -&gt; System.Threading.Tasks.Task" Usage="cloudFileDirectory.CreateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a task that performs an asynchronous operation to create a directory.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CreateAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CreateAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CreateAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CreateAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudFileDirectory.CreateAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Returns a task that performs an asynchronous operation to create a directory.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CreateAsync (Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CreateAsync(class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CreateAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (options As FileRequestOptions, operationContext As OperationContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&#xA;override this.CreateAsync : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task" Usage="cloudFileDirectory.CreateAsync (options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Returns a task that performs an asynchronous operation to create a directory.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CreateAsync (Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CreateAsync(class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CreateAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (options As FileRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CreateAsync : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudFileDirectory.CreateAsync (options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Returns a task that performs an asynchronous operation to create a directory.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIfNotExists">
      <MemberSignature Language="C#" Value="public virtual bool CreateIfNotExists (Microsoft.Azure.Storage.File.FileRequestOptions requestOptions = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CreateIfNotExists(class Microsoft.Azure.Storage.File.FileRequestOptions requestOptions, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CreateIfNotExists(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIfNotExists (Optional requestOptions As FileRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CreateIfNotExists : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; bool&#xA;override this.CreateIfNotExists : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; bool" Usage="cloudFileDirectory.CreateIfNotExists (requestOptions, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestOptions" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="requestOptions">An <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Creates the directory if it does not already exist.
            </summary>
        <returns>
          <c>true</c> if the directory did not already exist and was created; otherwise <c>false</c>.</returns>
        <remarks>This API requires Create or Write permissions.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIfNotExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; CreateIfNotExistsAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; CreateIfNotExistsAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIfNotExistsAsync () As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member CreateIfNotExistsAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.CreateIfNotExistsAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="cloudFileDirectory.CreateIfNotExistsAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a task that performs an asynchronous request to create the directory if it does not already exist.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the current operation.</returns>
        <remarks>This API requires Create or Write permissions.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIfNotExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; CreateIfNotExistsAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; CreateIfNotExistsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIfNotExistsAsync (cancellationToken As CancellationToken) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member CreateIfNotExistsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.CreateIfNotExistsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="cloudFileDirectory.CreateIfNotExistsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Returns a task that performs an asynchronous request to create the directory if it does not already exist.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the current operation.</returns>
        <remarks>This API requires Create or Write permissions.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIfNotExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; CreateIfNotExistsAsync (Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; CreateIfNotExistsAsync(class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIfNotExistsAsync (options As FileRequestOptions, operationContext As OperationContext) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member CreateIfNotExistsAsync : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.CreateIfNotExistsAsync : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="cloudFileDirectory.CreateIfNotExistsAsync (options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Returns a task that performs an asynchronous request to create the directory if it does not already exist.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the current operation.</returns>
        <remarks>This API requires Create or Write permissions.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIfNotExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; CreateIfNotExistsAsync (Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; CreateIfNotExistsAsync(class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIfNotExistsAsync (options As FileRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member CreateIfNotExistsAsync : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.CreateIfNotExistsAsync : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="cloudFileDirectory.CreateIfNotExistsAsync (options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Returns a task that performs an asynchronous request to create the directory if it does not already exist.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the current operation.</returns>
        <remarks>This API requires Create or Write permissions.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual void Delete (Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.File.FileRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.Delete(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Delete (Optional accessCondition As AccessCondition = Nothing, Optional options As FileRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member Delete : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.Delete : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudFileDirectory.Delete (accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the directory. If <c>null</c>, no condition is used.</param>
        <param name="options">An <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Deletes the directory.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.DeleteAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync () As Task" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteAsync : unit -&gt; System.Threading.Tasks.Task" Usage="cloudFileDirectory.DeleteAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a task that performs an asynchronous operation to delete a directory.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.DeleteAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudFileDirectory.DeleteAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Returns a task that performs an asynchronous operation to delete a directory.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteAsync (Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteAsync(class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.DeleteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteAsync : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task" Usage="cloudFileDirectory.DeleteAsync (accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the directory. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Returns a task that performs an asynchronous operation to delete a directory.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteAsync (Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteAsync(class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.DeleteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteAsync : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudFileDirectory.DeleteAsync (accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the directory. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Returns a task that performs an asynchronous operation to delete a directory.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIfExists">
      <MemberSignature Language="C#" Value="public virtual bool DeleteIfExists (Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.File.FileRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeleteIfExists(class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.DeleteIfExists(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIfExists (Optional accessCondition As AccessCondition = Nothing, Optional options As FileRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member DeleteIfExists : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; bool&#xA;override this.DeleteIfExists : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; bool" Usage="cloudFileDirectory.DeleteIfExists (accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the directory. If <c>null</c>, no condition is used.</param>
        <param name="options">An <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Deletes the directory if it already exists.
            </summary>
        <returns>
          <c>true</c> if the directory did already exist and was deleted; otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIfExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; DeleteIfExistsAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; DeleteIfExistsAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIfExistsAsync () As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member DeleteIfExistsAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.DeleteIfExistsAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="cloudFileDirectory.DeleteIfExistsAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a task that performs an asynchronous request to delete the directory if it already exists.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIfExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; DeleteIfExistsAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; DeleteIfExistsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIfExistsAsync (cancellationToken As CancellationToken) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member DeleteIfExistsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.DeleteIfExistsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="cloudFileDirectory.DeleteIfExistsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Returns a task that performs an asynchronous request to delete the directory if it already exists.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIfExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; DeleteIfExistsAsync (Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; DeleteIfExistsAsync(class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIfExistsAsync (accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member DeleteIfExistsAsync : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.DeleteIfExistsAsync : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="cloudFileDirectory.DeleteIfExistsAsync (accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the directory. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Returns a task that performs an asynchronous request to delete the directory if it already exists.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIfExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; DeleteIfExistsAsync (Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; DeleteIfExistsAsync(class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIfExistsAsync (accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member DeleteIfExistsAsync : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.DeleteIfExistsAsync : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="cloudFileDirectory.DeleteIfExistsAsync (accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the directory. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Returns a task that performs an asynchronous request to delete the directory if it already exists.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCloseAllHandlesSegmented">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.File.CloseFileHandleResultSegment EndCloseAllHandlesSegmented (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.File.CloseFileHandleResultSegment EndCloseAllHandlesSegmented(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.EndCloseAllHandlesSegmented(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndCloseAllHandlesSegmented (asyncResult As IAsyncResult) As CloseFileHandleResultSegment" />
      <MemberSignature Language="F#" Value="abstract member EndCloseAllHandlesSegmented : IAsyncResult -&gt; Microsoft.Azure.Storage.File.CloseFileHandleResultSegment&#xA;override this.EndCloseAllHandlesSegmented : IAsyncResult -&gt; Microsoft.Azure.Storage.File.CloseFileHandleResultSegment" Usage="cloudFileDirectory.EndCloseAllHandlesSegmented asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.File.CloseFileHandleResultSegment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary> 
            Ends an asynchronous operation to close all SMB handles on this directory. 
            </summary>
        <returns>An enumerable collection of ranges.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCloseHandleSegmented">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.File.CloseFileHandleResultSegment EndCloseHandleSegmented (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.File.CloseFileHandleResultSegment EndCloseHandleSegmented(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.EndCloseHandleSegmented(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndCloseHandleSegmented (asyncResult As IAsyncResult) As CloseFileHandleResultSegment" />
      <MemberSignature Language="F#" Value="abstract member EndCloseHandleSegmented : IAsyncResult -&gt; Microsoft.Azure.Storage.File.CloseFileHandleResultSegment&#xA;override this.EndCloseHandleSegmented : IAsyncResult -&gt; Microsoft.Azure.Storage.File.CloseFileHandleResultSegment" Usage="cloudFileDirectory.EndCloseHandleSegmented asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.File.CloseFileHandleResultSegment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary> 
            Ends an asynchronous operation to close the specified SMB handle on this directory. 
            </summary>
        <returns>An enumerable collection of ranges.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCreate">
      <MemberSignature Language="C#" Value="public virtual void EndCreate (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCreate(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.EndCreate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndCreate (asyncResult As IAsyncResult)" />
      <MemberSignature Language="F#" Value="abstract member EndCreate : IAsyncResult -&gt; unit&#xA;override this.EndCreate : IAsyncResult -&gt; unit" Usage="cloudFileDirectory.EndCreate asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary> 
            Ends an asynchronous operation to create a directory.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCreateIfNotExists">
      <MemberSignature Language="C#" Value="public virtual bool EndCreateIfNotExists (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndCreateIfNotExists(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.EndCreateIfNotExists(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndCreateIfNotExists (asyncResult As IAsyncResult) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member EndCreateIfNotExists : IAsyncResult -&gt; bool&#xA;override this.EndCreateIfNotExists : IAsyncResult -&gt; bool" Usage="cloudFileDirectory.EndCreateIfNotExists asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Returns the result of an asynchronous request to create the directory if it does not already exist.
            </summary>
        <returns>
          <c>true</c> if the directory did not already exist and was created; otherwise, <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDelete">
      <MemberSignature Language="C#" Value="public virtual void EndDelete (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDelete(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.EndDelete(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndDelete (asyncResult As IAsyncResult)" />
      <MemberSignature Language="F#" Value="abstract member EndDelete : IAsyncResult -&gt; unit&#xA;override this.EndDelete : IAsyncResult -&gt; unit" Usage="cloudFileDirectory.EndDelete asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to delete a directory.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDeleteIfExists">
      <MemberSignature Language="C#" Value="public virtual bool EndDeleteIfExists (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndDeleteIfExists(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.EndDeleteIfExists(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndDeleteIfExists (asyncResult As IAsyncResult) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member EndDeleteIfExists : IAsyncResult -&gt; bool&#xA;override this.EndDeleteIfExists : IAsyncResult -&gt; bool" Usage="cloudFileDirectory.EndDeleteIfExists asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Returns the result of an asynchronous request to delete the directory if it already exists.
            </summary>
        <returns>
          <c>true</c> if the directory did already exist and was deleted; otherwise, <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExists">
      <MemberSignature Language="C#" Value="public virtual bool EndExists (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndExists(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.EndExists(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndExists (asyncResult As IAsyncResult) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member EndExists : IAsyncResult -&gt; bool&#xA;override this.EndExists : IAsyncResult -&gt; bool" Usage="cloudFileDirectory.EndExists asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Returns the asynchronous result of the request to check whether the directory exists.
            </summary>
        <returns>
          <c>true</c> if the directory exists; <c>false</c>, otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndFetchAttributes">
      <MemberSignature Language="C#" Value="public virtual void EndFetchAttributes (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndFetchAttributes(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.EndFetchAttributes(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndFetchAttributes (asyncResult As IAsyncResult)" />
      <MemberSignature Language="F#" Value="abstract member EndFetchAttributes : IAsyncResult -&gt; unit&#xA;override this.EndFetchAttributes : IAsyncResult -&gt; unit" Usage="cloudFileDirectory.EndFetchAttributes asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to populate the directory's properties and metadata.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndListFilesAndDirectoriesSegmented">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.File.FileResultSegment EndListFilesAndDirectoriesSegmented (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.File.FileResultSegment EndListFilesAndDirectoriesSegmented(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.EndListFilesAndDirectoriesSegmented(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndListFilesAndDirectoriesSegmented (asyncResult As IAsyncResult) As FileResultSegment" />
      <MemberSignature Language="F#" Value="abstract member EndListFilesAndDirectoriesSegmented : IAsyncResult -&gt; Microsoft.Azure.Storage.File.FileResultSegment&#xA;override this.EndListFilesAndDirectoriesSegmented : IAsyncResult -&gt; Microsoft.Azure.Storage.File.FileResultSegment" Usage="cloudFileDirectory.EndListFilesAndDirectoriesSegmented asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.File.FileResultSegment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to return a result segment containing a collection of file items 
            in the share.
            </summary>
        <returns>A result segment containing objects that implement <see cref="T:Microsoft.Azure.Storage.File.IListFileItem" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndListHandlesSegmented">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.File.FileHandleResultSegment EndListHandlesSegmented (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.File.FileHandleResultSegment EndListHandlesSegmented(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.EndListHandlesSegmented(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndListHandlesSegmented (asyncResult As IAsyncResult) As FileHandleResultSegment" />
      <MemberSignature Language="F#" Value="abstract member EndListHandlesSegmented : IAsyncResult -&gt; Microsoft.Azure.Storage.File.FileHandleResultSegment&#xA;override this.EndListHandlesSegmented : IAsyncResult -&gt; Microsoft.Azure.Storage.File.FileHandleResultSegment" Usage="cloudFileDirectory.EndListHandlesSegmented asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.File.FileHandleResultSegment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary> 
            Ends an asynchronous operation to get the SMB handles open on this file. 
            </summary>
        <returns>An enumerable collection of ranges.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSetMetadata">
      <MemberSignature Language="C#" Value="public virtual void EndSetMetadata (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndSetMetadata(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.EndSetMetadata(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndSetMetadata (asyncResult As IAsyncResult)" />
      <MemberSignature Language="F#" Value="abstract member EndSetMetadata : IAsyncResult -&gt; unit&#xA;override this.EndSetMetadata : IAsyncResult -&gt; unit" Usage="cloudFileDirectory.EndSetMetadata asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to update the directory's metadata.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public virtual bool Exists (Microsoft.Azure.Storage.File.FileRequestOptions requestOptions = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Exists(class Microsoft.Azure.Storage.File.FileRequestOptions requestOptions, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.Exists(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Exists (Optional requestOptions As FileRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Exists : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; bool&#xA;override this.Exists : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; bool" Usage="cloudFileDirectory.Exists (requestOptions, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestOptions" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="requestOptions">An <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Checks whether the directory exists.
            </summary>
        <returns>
          <c>true</c> if the directory exists;<c>false</c>, otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; ExistsAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; ExistsAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ExistsAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync () As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.ExistsAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="cloudFileDirectory.ExistsAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a task that performs an asynchronous request to check whether the directory exists.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; ExistsAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; ExistsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ExistsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync (cancellationToken As CancellationToken) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.ExistsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="cloudFileDirectory.ExistsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Returns a task that performs an asynchronous request to check whether the directory exists.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; ExistsAsync (Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; ExistsAsync(class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ExistsAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync (options As FileRequestOptions, operationContext As OperationContext) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.ExistsAsync : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="cloudFileDirectory.ExistsAsync (options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Returns a task that performs an asynchronous request to check whether the directory exists.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; ExistsAsync (Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; ExistsAsync(class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ExistsAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync (options As FileRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.ExistsAsync : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="cloudFileDirectory.ExistsAsync (options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Returns a task that performs an asynchronous request to check whether the directory exists.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchAttributes">
      <MemberSignature Language="C#" Value="public virtual void FetchAttributes (Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.File.FileRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FetchAttributes(class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.FetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub FetchAttributes (Optional accessCondition As AccessCondition = Nothing, Optional options As FileRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member FetchAttributes : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.FetchAttributes : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudFileDirectory.FetchAttributes (accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the directory. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Populates a directory's properties.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchAttributesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FetchAttributesAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FetchAttributesAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.FetchAttributesAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FetchAttributesAsync () As Task" />
      <MemberSignature Language="F#" Value="abstract member FetchAttributesAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.FetchAttributesAsync : unit -&gt; System.Threading.Tasks.Task" Usage="cloudFileDirectory.FetchAttributesAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a task that performs an asynchronous operation to populate the directory's properties and metadata.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchAttributesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FetchAttributesAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FetchAttributesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.FetchAttributesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FetchAttributesAsync (cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member FetchAttributesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.FetchAttributesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudFileDirectory.FetchAttributesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Returns a task that performs an asynchronous operation to populate the directory's properties and metadata.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchAttributesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FetchAttributesAsync (Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FetchAttributesAsync(class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FetchAttributesAsync (accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member FetchAttributesAsync : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&#xA;override this.FetchAttributesAsync : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task" Usage="cloudFileDirectory.FetchAttributesAsync (accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the file. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Returns a task that performs an asynchronous operation to populate the directory's properties and metadata.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchAttributesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FetchAttributesAsync (Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FetchAttributesAsync(class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FetchAttributesAsync (accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member FetchAttributesAsync : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.FetchAttributesAsync : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudFileDirectory.FetchAttributesAsync (accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the file. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Returns a task that performs an asynchronous operation to populate the directory's properties and metadata.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePermission">
      <MemberSignature Language="C#" Value="public string FilePermission { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilePermission" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Storage.File.CloudFileDirectory.FilePermission" />
      <MemberSignature Language="VB.NET" Value="Public Property FilePermission As String" />
      <MemberSignature Language="F#" Value="member this.FilePermission : string with get, set" Usage="Microsoft.Azure.Storage.File.CloudFileDirectory.FilePermission" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the file permission for this directory.
            This field will be null after Directory.Create, Directory.SetProperties, Directory.GetProperties, and Directory.Get calls.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectoryReference">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.File.CloudFileDirectory GetDirectoryReference (string itemName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.File.CloudFileDirectory GetDirectoryReference(string itemName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.GetDirectoryReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDirectoryReference (itemName As String) As CloudFileDirectory" />
      <MemberSignature Language="F#" Value="abstract member GetDirectoryReference : string -&gt; Microsoft.Azure.Storage.File.CloudFileDirectory&#xA;override this.GetDirectoryReference : string -&gt; Microsoft.Azure.Storage.File.CloudFileDirectory" Usage="cloudFileDirectory.GetDirectoryReference itemName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.File.CloudFileDirectory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemName">A <see cref="T:System.String" /> containing the name of the subdirectory.</param>
        <summary>
            Returns a <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory" /> object that represents a subdirectory within this directory.
            </summary>
        <returns>A <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory" /> object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileReference">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.File.CloudFile GetFileReference (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.File.CloudFile GetFileReference(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.GetFileReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileReference (fileName As String) As CloudFile" />
      <MemberSignature Language="F#" Value="abstract member GetFileReference : string -&gt; Microsoft.Azure.Storage.File.CloudFile&#xA;override this.GetFileReference : string -&gt; Microsoft.Azure.Storage.File.CloudFile" Usage="cloudFileDirectory.GetFileReference fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.File.CloudFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">A <see cref="T:System.String" /> containing the name of the file.</param>
        <summary>
            Returns a <see cref="T:Microsoft.Azure.Storage.File.CloudFile" /> object that represents a file in this directory.
            </summary>
        <returns>A <see cref="T:Microsoft.Azure.Storage.File.CloudFile" /> object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFilesAndDirectories">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.File.IListFileItem&gt; ListFilesAndDirectories (Microsoft.Azure.Storage.File.FileRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Storage.File.IListFileItem&gt; ListFilesAndDirectories(class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListFilesAndDirectories(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListFilesAndDirectories (Optional options As FileRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing) As IEnumerable(Of IListFileItem)" />
      <MemberSignature Language="F#" Value="abstract member ListFilesAndDirectories : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; seq&lt;Microsoft.Azure.Storage.File.IListFileItem&gt;&#xA;override this.ListFilesAndDirectories : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; seq&lt;Microsoft.Azure.Storage.File.IListFileItem&gt;" Usage="cloudFileDirectory.ListFilesAndDirectories (options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.File.IListFileItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="options">An <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Returns an enumerable collection of the files in the share, which are retrieved lazily.
            </summary>
        <returns>An enumerable collection of objects that implement <see cref="T:Microsoft.Azure.Storage.File.IListFileItem" /> and are retrieved lazily.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFilesAndDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.File.IListFileItem&gt; ListFilesAndDirectories (string prefix, Microsoft.Azure.Storage.File.FileRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Storage.File.IListFileItem&gt; ListFilesAndDirectories(string prefix, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListFilesAndDirectories(System.String,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListFilesAndDirectories (prefix As String, Optional options As FileRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing) As IEnumerable(Of IListFileItem)" />
      <MemberSignature Language="F#" Value="member this.ListFilesAndDirectories : string * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; seq&lt;Microsoft.Azure.Storage.File.IListFileItem&gt;" Usage="cloudFileDirectory.ListFilesAndDirectories (prefix, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.File.IListFileItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="prefix">A string containing the file or directory name prefix.</param>
        <param name="options">An <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Returns an enumerable collection of the files in the share, which are retrieved lazily.
            </summary>
        <returns>An enumerable collection of objects that implement <see cref="T:Microsoft.Azure.Storage.File.IListFileItem" /> and are retrieved lazily.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFilesAndDirectoriesSegmented">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.File.FileResultSegment ListFilesAndDirectoriesSegmented (Microsoft.Azure.Storage.File.FileContinuationToken currentToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.File.FileResultSegment ListFilesAndDirectoriesSegmented(class Microsoft.Azure.Storage.File.FileContinuationToken currentToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmented(Microsoft.Azure.Storage.File.FileContinuationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListFilesAndDirectoriesSegmented (currentToken As FileContinuationToken) As FileResultSegment" />
      <MemberSignature Language="F#" Value="abstract member ListFilesAndDirectoriesSegmented : Microsoft.Azure.Storage.File.FileContinuationToken -&gt; Microsoft.Azure.Storage.File.FileResultSegment&#xA;override this.ListFilesAndDirectoriesSegmented : Microsoft.Azure.Storage.File.FileContinuationToken -&gt; Microsoft.Azure.Storage.File.FileResultSegment" Usage="cloudFileDirectory.ListFilesAndDirectoriesSegmented currentToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.File.FileResultSegment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="currentToken" Type="Microsoft.Azure.Storage.File.FileContinuationToken" />
      </Parameters>
      <Docs>
        <param name="currentToken">A continuation token returned by a previous listing operation.</param>
        <summary>
            Returns a result segment containing a collection of file items 
            in the share.
            </summary>
        <returns>A result segment containing objects that implement <see cref="T:Microsoft.Azure.Storage.File.IListFileItem" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFilesAndDirectoriesSegmented">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.File.FileResultSegment ListFilesAndDirectoriesSegmented (int? maxResults, Microsoft.Azure.Storage.File.FileContinuationToken currentToken, Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.File.FileResultSegment ListFilesAndDirectoriesSegmented(valuetype System.Nullable`1&lt;int32&gt; maxResults, class Microsoft.Azure.Storage.File.FileContinuationToken currentToken, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmented(System.Nullable{System.Int32},Microsoft.Azure.Storage.File.FileContinuationToken,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListFilesAndDirectoriesSegmented (maxResults As Nullable(Of Integer), currentToken As FileContinuationToken, options As FileRequestOptions, operationContext As OperationContext) As FileResultSegment" />
      <MemberSignature Language="F#" Value="abstract member ListFilesAndDirectoriesSegmented : Nullable&lt;int&gt; * Microsoft.Azure.Storage.File.FileContinuationToken * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; Microsoft.Azure.Storage.File.FileResultSegment&#xA;override this.ListFilesAndDirectoriesSegmented : Nullable&lt;int&gt; * Microsoft.Azure.Storage.File.FileContinuationToken * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; Microsoft.Azure.Storage.File.FileResultSegment" Usage="cloudFileDirectory.ListFilesAndDirectoriesSegmented (maxResults, currentToken, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.File.FileResultSegment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxResults" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="currentToken" Type="Microsoft.Azure.Storage.File.FileContinuationToken" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the 
            per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>
        <param name="currentToken">A continuation token returned by a previous listing operation.</param>
        <param name="options">An <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Returns a result segment containing a collection of file items 
            in the share.
            </summary>
        <returns>A result segment containing objects that implement <see cref="T:Microsoft.Azure.Storage.File.IListFileItem" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFilesAndDirectoriesSegmented">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Storage.File.FileResultSegment ListFilesAndDirectoriesSegmented (string prefix, int? maxResults, Microsoft.Azure.Storage.File.FileContinuationToken currentToken, Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.Storage.File.FileResultSegment ListFilesAndDirectoriesSegmented(string prefix, valuetype System.Nullable`1&lt;int32&gt; maxResults, class Microsoft.Azure.Storage.File.FileContinuationToken currentToken, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmented(System.String,System.Nullable{System.Int32},Microsoft.Azure.Storage.File.FileContinuationToken,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListFilesAndDirectoriesSegmented (prefix As String, maxResults As Nullable(Of Integer), currentToken As FileContinuationToken, options As FileRequestOptions, operationContext As OperationContext) As FileResultSegment" />
      <MemberSignature Language="F#" Value="member this.ListFilesAndDirectoriesSegmented : string * Nullable&lt;int&gt; * Microsoft.Azure.Storage.File.FileContinuationToken * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; Microsoft.Azure.Storage.File.FileResultSegment" Usage="cloudFileDirectory.ListFilesAndDirectoriesSegmented (prefix, maxResults, currentToken, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.File.FileResultSegment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="maxResults" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="currentToken" Type="Microsoft.Azure.Storage.File.FileContinuationToken" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the 
            per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>
        <param name="currentToken">A continuation token returned by a previous listing operation.</param>
        <param name="prefix">A string containing the file or directory name prefix.</param>
        <param name="options">An <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Returns a result segment containing a collection of file items 
            in the share.
            </summary>
        <returns>A result segment containing objects that implement <see cref="T:Microsoft.Azure.Storage.File.IListFileItem" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFilesAndDirectoriesSegmentedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileResultSegment&gt; ListFilesAndDirectoriesSegmentedAsync (Microsoft.Azure.Storage.File.FileContinuationToken currentToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.File.FileResultSegment&gt; ListFilesAndDirectoriesSegmentedAsync(class Microsoft.Azure.Storage.File.FileContinuationToken currentToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(Microsoft.Azure.Storage.File.FileContinuationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListFilesAndDirectoriesSegmentedAsync (currentToken As FileContinuationToken) As Task(Of FileResultSegment)" />
      <MemberSignature Language="F#" Value="abstract member ListFilesAndDirectoriesSegmentedAsync : Microsoft.Azure.Storage.File.FileContinuationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileResultSegment&gt;&#xA;override this.ListFilesAndDirectoriesSegmentedAsync : Microsoft.Azure.Storage.File.FileContinuationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileResultSegment&gt;" Usage="cloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync currentToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileResultSegment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="currentToken" Type="Microsoft.Azure.Storage.File.FileContinuationToken" />
      </Parameters>
      <Docs>
        <param name="currentToken">A continuation token returned by a previous listing operation.</param>
        <summary>
            Returns a task that performs an asynchronous operation to return a result segment containing a collection of file items 
            in the share.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFilesAndDirectoriesSegmentedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileResultSegment&gt; ListFilesAndDirectoriesSegmentedAsync (Microsoft.Azure.Storage.File.FileContinuationToken currentToken, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.File.FileResultSegment&gt; ListFilesAndDirectoriesSegmentedAsync(class Microsoft.Azure.Storage.File.FileContinuationToken currentToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(Microsoft.Azure.Storage.File.FileContinuationToken,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListFilesAndDirectoriesSegmentedAsync (currentToken As FileContinuationToken, cancellationToken As CancellationToken) As Task(Of FileResultSegment)" />
      <MemberSignature Language="F#" Value="abstract member ListFilesAndDirectoriesSegmentedAsync : Microsoft.Azure.Storage.File.FileContinuationToken * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileResultSegment&gt;&#xA;override this.ListFilesAndDirectoriesSegmentedAsync : Microsoft.Azure.Storage.File.FileContinuationToken * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileResultSegment&gt;" Usage="cloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync (currentToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileResultSegment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="currentToken" Type="Microsoft.Azure.Storage.File.FileContinuationToken" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="currentToken">A continuation token returned by a previous listing operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Returns a task that performs an asynchronous operation to return a result segment containing a collection of file items 
            in the share.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFilesAndDirectoriesSegmentedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileResultSegment&gt; ListFilesAndDirectoriesSegmentedAsync (string prefix, Microsoft.Azure.Storage.File.FileContinuationToken currentToken, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.File.FileResultSegment&gt; ListFilesAndDirectoriesSegmentedAsync(string prefix, class Microsoft.Azure.Storage.File.FileContinuationToken currentToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.String,Microsoft.Azure.Storage.File.FileContinuationToken,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListFilesAndDirectoriesSegmentedAsync (prefix As String, currentToken As FileContinuationToken, cancellationToken As CancellationToken) As Task(Of FileResultSegment)" />
      <MemberSignature Language="F#" Value="abstract member ListFilesAndDirectoriesSegmentedAsync : string * Microsoft.Azure.Storage.File.FileContinuationToken * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileResultSegment&gt;&#xA;override this.ListFilesAndDirectoriesSegmentedAsync : string * Microsoft.Azure.Storage.File.FileContinuationToken * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileResultSegment&gt;" Usage="cloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync (prefix, currentToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileResultSegment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="currentToken" Type="Microsoft.Azure.Storage.File.FileContinuationToken" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="prefix">A string containing the file or directory name prefix.</param>
        <param name="currentToken">A continuation token returned by a previous listing operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Returns a task that performs an asynchronous operation to return a result segment containing a collection of file items 
            in the share.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFilesAndDirectoriesSegmentedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileResultSegment&gt; ListFilesAndDirectoriesSegmentedAsync (int? maxResults, Microsoft.Azure.Storage.File.FileContinuationToken currentToken, Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.File.FileResultSegment&gt; ListFilesAndDirectoriesSegmentedAsync(valuetype System.Nullable`1&lt;int32&gt; maxResults, class Microsoft.Azure.Storage.File.FileContinuationToken currentToken, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.Nullable{System.Int32},Microsoft.Azure.Storage.File.FileContinuationToken,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListFilesAndDirectoriesSegmentedAsync (maxResults As Nullable(Of Integer), currentToken As FileContinuationToken, options As FileRequestOptions, operationContext As OperationContext) As Task(Of FileResultSegment)" />
      <MemberSignature Language="F#" Value="abstract member ListFilesAndDirectoriesSegmentedAsync : Nullable&lt;int&gt; * Microsoft.Azure.Storage.File.FileContinuationToken * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileResultSegment&gt;&#xA;override this.ListFilesAndDirectoriesSegmentedAsync : Nullable&lt;int&gt; * Microsoft.Azure.Storage.File.FileContinuationToken * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileResultSegment&gt;" Usage="cloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync (maxResults, currentToken, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileResultSegment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxResults" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="currentToken" Type="Microsoft.Azure.Storage.File.FileContinuationToken" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the 
            per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>
        <param name="currentToken">A continuation token returned by a previous listing operation.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Returns a task that performs an asynchronous operation to return a result segment containing a collection of file items 
            in the share.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFilesAndDirectoriesSegmentedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileResultSegment&gt; ListFilesAndDirectoriesSegmentedAsync (int? maxResults, Microsoft.Azure.Storage.File.FileContinuationToken currentToken, Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.File.FileResultSegment&gt; ListFilesAndDirectoriesSegmentedAsync(valuetype System.Nullable`1&lt;int32&gt; maxResults, class Microsoft.Azure.Storage.File.FileContinuationToken currentToken, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.Nullable{System.Int32},Microsoft.Azure.Storage.File.FileContinuationToken,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListFilesAndDirectoriesSegmentedAsync (maxResults As Nullable(Of Integer), currentToken As FileContinuationToken, options As FileRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of FileResultSegment)" />
      <MemberSignature Language="F#" Value="abstract member ListFilesAndDirectoriesSegmentedAsync : Nullable&lt;int&gt; * Microsoft.Azure.Storage.File.FileContinuationToken * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileResultSegment&gt;&#xA;override this.ListFilesAndDirectoriesSegmentedAsync : Nullable&lt;int&gt; * Microsoft.Azure.Storage.File.FileContinuationToken * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileResultSegment&gt;" Usage="cloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync (maxResults, currentToken, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileResultSegment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxResults" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="currentToken" Type="Microsoft.Azure.Storage.File.FileContinuationToken" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the 
            per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>
        <param name="currentToken">A continuation token returned by a previous listing operation.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Returns a task that performs an asynchronous operation to return a result segment containing a collection of file items 
            in the share.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFilesAndDirectoriesSegmentedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileResultSegment&gt; ListFilesAndDirectoriesSegmentedAsync (string prefix, int? maxResults, Microsoft.Azure.Storage.File.FileContinuationToken currentToken, Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.File.FileResultSegment&gt; ListFilesAndDirectoriesSegmentedAsync(string prefix, valuetype System.Nullable`1&lt;int32&gt; maxResults, class Microsoft.Azure.Storage.File.FileContinuationToken currentToken, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.String,System.Nullable{System.Int32},Microsoft.Azure.Storage.File.FileContinuationToken,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListFilesAndDirectoriesSegmentedAsync (prefix As String, maxResults As Nullable(Of Integer), currentToken As FileContinuationToken, options As FileRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of FileResultSegment)" />
      <MemberSignature Language="F#" Value="abstract member ListFilesAndDirectoriesSegmentedAsync : string * Nullable&lt;int&gt; * Microsoft.Azure.Storage.File.FileContinuationToken * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileResultSegment&gt;&#xA;override this.ListFilesAndDirectoriesSegmentedAsync : string * Nullable&lt;int&gt; * Microsoft.Azure.Storage.File.FileContinuationToken * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileResultSegment&gt;" Usage="cloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync (prefix, maxResults, currentToken, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileResultSegment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="maxResults" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="currentToken" Type="Microsoft.Azure.Storage.File.FileContinuationToken" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the 
            per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>
        <param name="currentToken">A continuation token returned by a previous listing operation.</param>
        <param name="prefix">A string containing the file or directory name prefix.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Returns a task that performs an asynchronous operation to return a result segment containing a collection of file items 
            in the share.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListHandlesSegmented">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.File.FileHandleResultSegment ListHandlesSegmented (Microsoft.Azure.Storage.File.FileContinuationToken token = default, int? maxResults = default, bool? recursive = default, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.File.FileRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.File.FileHandleResultSegment ListHandlesSegmented(class Microsoft.Azure.Storage.File.FileContinuationToken token, valuetype System.Nullable`1&lt;int32&gt; maxResults, valuetype System.Nullable`1&lt;bool&gt; recursive, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListHandlesSegmented(Microsoft.Azure.Storage.File.FileContinuationToken,System.Nullable{System.Int32},System.Nullable{System.Boolean},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListHandlesSegmented (Optional token As FileContinuationToken = Nothing, Optional maxResults As Nullable(Of Integer) = Nothing, Optional recursive As Nullable(Of Boolean) = Nothing, Optional accessCondition As AccessCondition = Nothing, Optional options As FileRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing) As FileHandleResultSegment" />
      <MemberSignature Language="F#" Value="abstract member ListHandlesSegmented : Microsoft.Azure.Storage.File.FileContinuationToken * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; Microsoft.Azure.Storage.File.FileHandleResultSegment&#xA;override this.ListHandlesSegmented : Microsoft.Azure.Storage.File.FileContinuationToken * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; Microsoft.Azure.Storage.File.FileHandleResultSegment" Usage="cloudFileDirectory.ListHandlesSegmented (token, maxResults, recursive, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.File.FileHandleResultSegment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Azure.Storage.File.FileContinuationToken" />
        <Parameter Name="maxResults" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="token">Continuation token for paginated results.</param>
        <param name="maxResults">The maximum number of results to be returned by the server.</param>
        <param name="recursive">Whether to recurse through this directory's files and subfolders. A lack of value is interpreted as false.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the file. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary> 
            Gets the SMB handles open on this directory. 
            </summary>
        <returns>An enumerable collection of ranges.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListHandlesSegmentedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileHandleResultSegment&gt; ListHandlesSegmentedAsync (Microsoft.Azure.Storage.File.FileContinuationToken token = default, int? maxResults = default, bool? recursive = default, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.File.FileRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default, System.Threading.CancellationToken? cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.File.FileHandleResultSegment&gt; ListHandlesSegmentedAsync(class Microsoft.Azure.Storage.File.FileContinuationToken token, valuetype System.Nullable`1&lt;int32&gt; maxResults, valuetype System.Nullable`1&lt;bool&gt; recursive, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Nullable`1&lt;valuetype System.Threading.CancellationToken&gt; cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListHandlesSegmentedAsync(Microsoft.Azure.Storage.File.FileContinuationToken,System.Nullable{System.Int32},System.Nullable{System.Boolean},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Nullable{System.Threading.CancellationToken})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListHandlesSegmentedAsync (Optional token As FileContinuationToken = Nothing, Optional maxResults As Nullable(Of Integer) = Nothing, Optional recursive As Nullable(Of Boolean) = Nothing, Optional accessCondition As AccessCondition = Nothing, Optional options As FileRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing, Optional cancellationToken As Nullable(Of CancellationToken) = Nothing) As Task(Of FileHandleResultSegment)" />
      <MemberSignature Language="F#" Value="abstract member ListHandlesSegmentedAsync : Microsoft.Azure.Storage.File.FileContinuationToken * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * Nullable&lt;System.Threading.CancellationToken&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileHandleResultSegment&gt;&#xA;override this.ListHandlesSegmentedAsync : Microsoft.Azure.Storage.File.FileContinuationToken * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * Nullable&lt;System.Threading.CancellationToken&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileHandleResultSegment&gt;" Usage="cloudFileDirectory.ListHandlesSegmentedAsync (token, maxResults, recursive, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.File.FileHandleResultSegment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.Azure.Storage.File.FileContinuationToken" />
        <Parameter Name="maxResults" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Nullable&lt;System.Threading.CancellationToken&gt;" />
      </Parameters>
      <Docs>
        <param name="token">Continuation token for paginated results.</param>
        <param name="maxResults">The maximum number of results to be returned by the server.</param>
        <param name="recursive">Whether to recurse through this directory's files and subfolders. A lack of value is interpreted as false.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the file. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary> 
            Returns a task that performs an asynchronous operation to get the SMB handles open on this directory. 
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Metadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Storage.File.CloudFileDirectory.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Metadata As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.Metadata : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="Microsoft.Azure.Storage.File.CloudFileDirectory.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the user-defined metadata for the directory.
            </summary>
        <value>The directory's metadata, as a collection of name-value pairs.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Storage.File.CloudFileDirectory.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.Azure.Storage.File.CloudFileDirectory.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the directory.
            </summary>
        <value>A <see cref="T:System.String" /> containing the name of the directory.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Storage.File.CloudFileDirectory Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Storage.File.CloudFileDirectory Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Storage.File.CloudFileDirectory.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As CloudFileDirectory" />
      <MemberSignature Language="F#" Value="member this.Parent : Microsoft.Azure.Storage.File.CloudFileDirectory" Usage="Microsoft.Azure.Storage.File.CloudFileDirectory.Parent" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Azure.Storage.File.IListFileItem.Parent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.File.CloudFileDirectory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory" /> object that represents the parent directory for the directory.
            </summary>
        <value>A <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory" /> object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Storage.File.FileDirectoryProperties Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Storage.File.FileDirectoryProperties Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Storage.File.CloudFileDirectory.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As FileDirectoryProperties" />
      <MemberSignature Language="F#" Value="member this.Properties : Microsoft.Azure.Storage.File.FileDirectoryProperties" Usage="Microsoft.Azure.Storage.File.CloudFileDirectory.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.File.FileDirectoryProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a <see cref="T:Microsoft.Azure.Storage.File.FileDirectoryProperties" /> object that represents the directory's system properties.
            </summary>
        <value>A <see cref="T:Microsoft.Azure.Storage.File.FileDirectoryProperties" /> object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceClient">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Storage.File.CloudFileClient ServiceClient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Storage.File.CloudFileClient ServiceClient" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Storage.File.CloudFileDirectory.ServiceClient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceClient As CloudFileClient" />
      <MemberSignature Language="F#" Value="member this.ServiceClient : Microsoft.Azure.Storage.File.CloudFileClient" Usage="Microsoft.Azure.Storage.File.CloudFileDirectory.ServiceClient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.File.CloudFileClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a <see cref="T:Microsoft.Azure.Storage.File.CloudFileClient" /> object that specifies the endpoint for the File service.
            </summary>
        <value>A <see cref="T:Microsoft.Azure.Storage.File.CloudFileClient" /> object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadata">
      <MemberSignature Language="C#" Value="public virtual void SetMetadata (Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.File.FileRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMetadata(class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.SetMetadata(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetMetadata (Optional accessCondition As AccessCondition = Nothing, Optional options As FileRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member SetMetadata : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.SetMetadata : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudFileDirectory.SetMetadata (accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the directory. If <c>null</c>, no condition is used.</param>
        <param name="options">An <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Updates the directory's metadata.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetMetadataAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetMetadataAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.SetMetadataAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetMetadataAsync () As Task" />
      <MemberSignature Language="F#" Value="abstract member SetMetadataAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SetMetadataAsync : unit -&gt; System.Threading.Tasks.Task" Usage="cloudFileDirectory.SetMetadataAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a task that performs an asynchronous operation to update the directory's metadata.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetMetadataAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetMetadataAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.SetMetadataAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetMetadataAsync (cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member SetMetadataAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SetMetadataAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudFileDirectory.SetMetadataAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Returns a task that performs an asynchronous operation to update the directory's metadata.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetMetadataAsync (Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetMetadataAsync(class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.SetMetadataAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetMetadataAsync (accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member SetMetadataAsync : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&#xA;override this.SetMetadataAsync : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task" Usage="cloudFileDirectory.SetMetadataAsync (accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the directory. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Returns a task that performs an asynchronous operation to update the directory's metadata.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetMetadataAsync (Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.File.FileRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetMetadataAsync(class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.SetMetadataAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetMetadataAsync (accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member SetMetadataAsync : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SetMetadataAsync : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudFileDirectory.SetMetadataAsync (accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the directory. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Returns a task that performs an asynchronous operation to update the directory's metadata.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the current operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperties">
      <MemberSignature Language="C#" Value="public virtual void SetProperties (Microsoft.Azure.Storage.File.FileRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProperties(class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.SetProperties(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetProperties (Optional options As FileRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member SetProperties : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.SetProperties : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudFileDirectory.SetProperties (options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="options">An <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Updates the directory's properties.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetPropertiesAsync (Microsoft.Azure.Storage.File.FileRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default, System.Threading.CancellationToken? cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetPropertiesAsync(class Microsoft.Azure.Storage.File.FileRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Nullable`1&lt;valuetype System.Threading.CancellationToken&gt; cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.File.CloudFileDirectory.SetPropertiesAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Nullable{System.Threading.CancellationToken})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetPropertiesAsync (Optional options As FileRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing, Optional cancellationToken As Nullable(Of CancellationToken) = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member SetPropertiesAsync : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * Nullable&lt;System.Threading.CancellationToken&gt; -&gt; System.Threading.Tasks.Task&#xA;override this.SetPropertiesAsync : Microsoft.Azure.Storage.File.FileRequestOptions * Microsoft.Azure.Storage.OperationContext * Nullable&lt;System.Threading.CancellationToken&gt; -&gt; System.Threading.Tasks.Task" Usage="cloudFileDirectory.SetPropertiesAsync (options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Azure.Storage.File.FileRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Nullable&lt;System.Threading.CancellationToken&gt;" />
      </Parameters>
      <Docs>
        <param name="options">An <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Updates the directory's properties.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Share">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Storage.File.CloudFileShare Share { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Storage.File.CloudFileShare Share" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Storage.File.CloudFileDirectory.Share" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Share As CloudFileShare" />
      <MemberSignature Language="F#" Value="member this.Share : Microsoft.Azure.Storage.File.CloudFileShare" Usage="Microsoft.Azure.Storage.File.CloudFileDirectory.Share" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Azure.Storage.File.IListFileItem.Share</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.File.CloudFileShare</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a <see cref="T:Microsoft.Azure.Storage.File.CloudFileShare" /> object that represents the share for the directory.
            </summary>
        <value>A <see cref="T:Microsoft.Azure.Storage.File.CloudFileShare" /> object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SnapshotQualifiedStorageUri">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Storage.StorageUri SnapshotQualifiedStorageUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Storage.StorageUri SnapshotQualifiedStorageUri" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Storage.File.CloudFileDirectory.SnapshotQualifiedStorageUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SnapshotQualifiedStorageUri As StorageUri" />
      <MemberSignature Language="F#" Value="member this.SnapshotQualifiedStorageUri : Microsoft.Azure.Storage.StorageUri" Usage="Microsoft.Azure.Storage.File.CloudFileDirectory.SnapshotQualifiedStorageUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.StorageUri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the directory's URI for both the primary and secondary locations, including query string information if the directory's share is a snapshot.
            </summary>
        <value>An object of type <see cref="P:Microsoft.Azure.Storage.File.CloudFileDirectory.StorageUri" /> containing the directory's URIs for both the primary and secondary locations, 
            including snapshot query information if the directory's share is a snapshot.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SnapshotQualifiedUri">
      <MemberSignature Language="C#" Value="public Uri SnapshotQualifiedUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SnapshotQualifiedUri" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Storage.File.CloudFileDirectory.SnapshotQualifiedUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SnapshotQualifiedUri As Uri" />
      <MemberSignature Language="F#" Value="member this.SnapshotQualifiedUri : Uri" Usage="Microsoft.Azure.Storage.File.CloudFileDirectory.SnapshotQualifiedUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the absolute URI to the directory, including query string information if the directory's share is a snapshot.
            </summary>
        <value>A <see cref="T:System.Uri" /> specifying the absolute URI to the directory, including snapshot query information if the directory's share is a snapshot.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageUri">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Storage.StorageUri StorageUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Storage.StorageUri StorageUri" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Storage.File.CloudFileDirectory.StorageUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StorageUri As StorageUri" />
      <MemberSignature Language="F#" Value="member this.StorageUri : Microsoft.Azure.Storage.StorageUri" Usage="Microsoft.Azure.Storage.File.CloudFileDirectory.StorageUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.StorageUri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the file directory's URIs for all locations.
            </summary>
        <value>A <see cref="P:Microsoft.Azure.Storage.File.CloudFileDirectory.StorageUri" /> object containing the file directory's URIs for all locations.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Storage.File.CloudFileDirectory.Uri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Uri As Uri" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri" Usage="Microsoft.Azure.Storage.File.CloudFileDirectory.Uri" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Azure.Storage.File.IListFileItem.Uri</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.File</AssemblyName>
        <AssemblyVersion>11.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the directory's URI for the primary location.
            </summary>
        <value>A <see cref="T:System.Uri" /> specifying the absolute URI to the directory at the primary location.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
