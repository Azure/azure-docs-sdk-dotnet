<Type Name="IAuthorizationRule&lt;RuleT&gt;" FullName="Microsoft.Azure.Management.Eventhub.Fluent.IAuthorizationRule&lt;RuleT&gt;">
  <TypeSignature Language="C#" Value="public interface IAuthorizationRule&lt;RuleT&gt; : Microsoft.Azure.Management.Eventhub.Fluent.INestedResource, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner&lt;Microsoft.Azure.Management.EventHub.Fluent.Models.AuthorizationRuleInner&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.EventHub.Fluent.IEventHubManager&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IIndexable, Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IRefreshable&lt;RuleT&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAuthorizationRule`1&lt;RuleT&gt; implements class Microsoft.Azure.Management.Eventhub.Fluent.INestedResource, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner`1&lt;class Microsoft.Azure.Management.EventHub.Fluent.Models.AuthorizationRuleInner&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager`1&lt;class Microsoft.Azure.Management.EventHub.Fluent.IEventHubManager&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IIndexable, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IRefreshable`1&lt;!RuleT&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Eventhub.Fluent.IAuthorizationRule`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAuthorizationRule(Of RuleT)&#xA;Implements IBeta, IHasId, IHasInner(Of AuthorizationRuleInner), IHasManager(Of IEventHubManager), IIndexable, INestedResource, IRefreshable(Of RuleT)" />
  <TypeSignature Language="F#" Value="type IAuthorizationRule&lt;'RuleT&gt; = interface&#xA;    interface IBeta&#xA;    interface INestedResource&#xA;    interface IIndexable&#xA;    interface IHasId&#xA;    interface IHasInner&lt;AuthorizationRuleInner&gt;&#xA;    interface IHasManager&lt;IEventHubManager&gt;&#xA;    interface IRefreshable&lt;'RuleT&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.71</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="RuleT" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Eventhub.Fluent.INestedResource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner&lt;Microsoft.Azure.Management.EventHub.Fluent.Models.AuthorizationRuleInner&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.EventHub.Fluent.IEventHubManager&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IIndexable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IRefreshable&lt;RuleT&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="RuleT">The specific authorization rule type.</typeparam>
    <summary>
            The base type representing authorization rule of event hub namespace and event hub.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetKeys">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationKey GetKeys ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationKey GetKeys() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.IAuthorizationRule`1.GetKeys" />
      <MemberSignature Language="VB.NET" Value="Public Function GetKeys () As IEventHubAuthorizationKey" />
      <MemberSignature Language="F#" Value="abstract member GetKeys : unit -&gt; Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationKey" Usage="iAuthorizationRule.GetKeys " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationKey</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The access keys (primary, secondary) and the connection strings.</return>
      </Docs>
    </Member>
    <Member MemberName="GetKeysAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationKey&gt; GetKeysAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationKey&gt; GetKeysAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.IAuthorizationRule`1.GetKeysAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetKeysAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of IEventHubAuthorizationKey)" />
      <MemberSignature Language="F#" Value="abstract member GetKeysAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationKey&gt;" Usage="iAuthorizationRule.GetKeysAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>A representation of the deferred computation of this call, returning access keys (primary, secondary) and the connection strings.</return>
      </Docs>
    </Member>
    <Member MemberName="RegenerateKey">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationKey RegenerateKey (Microsoft.Azure.Management.EventHub.Fluent.Models.KeyType keyType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationKey RegenerateKey(valuetype Microsoft.Azure.Management.EventHub.Fluent.Models.KeyType keyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.IAuthorizationRule`1.RegenerateKey(Microsoft.Azure.Management.EventHub.Fluent.Models.KeyType)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegenerateKey (keyType As KeyType) As IEventHubAuthorizationKey" />
      <MemberSignature Language="F#" Value="abstract member RegenerateKey : Microsoft.Azure.Management.EventHub.Fluent.Models.KeyType -&gt; Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationKey" Usage="iAuthorizationRule.RegenerateKey keyType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyType" Type="Microsoft.Azure.Management.EventHub.Fluent.Models.KeyType" />
      </Parameters>
      <Docs>
        <param name="keyType">The key to regenerate.</param>
        <summary>
            Regenerates primary or secondary keys.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The access keys (primary, secondary) and the connection strings.</return>
      </Docs>
    </Member>
    <Member MemberName="RegenerateKeyAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationKey&gt; RegenerateKeyAsync (Microsoft.Azure.Management.EventHub.Fluent.Models.KeyType keyType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationKey&gt; RegenerateKeyAsync(valuetype Microsoft.Azure.Management.EventHub.Fluent.Models.KeyType keyType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.IAuthorizationRule`1.RegenerateKeyAsync(Microsoft.Azure.Management.EventHub.Fluent.Models.KeyType,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegenerateKeyAsync (keyType As KeyType, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IEventHubAuthorizationKey)" />
      <MemberSignature Language="F#" Value="abstract member RegenerateKeyAsync : Microsoft.Azure.Management.EventHub.Fluent.Models.KeyType * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationKey&gt;" Usage="iAuthorizationRule.RegenerateKeyAsync (keyType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyType" Type="Microsoft.Azure.Management.EventHub.Fluent.Models.KeyType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="keyType">The key to regenerate.</param>
        <summary>
            Regenerates primary or secondary access keys.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>A representation of the deferred computation of this call, returning access keys (primary, secondary) and the connection strings.</return>
      </Docs>
    </Member>
    <Member MemberName="Rights">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.Azure.Management.EventHub.Fluent.Models.AccessRights&gt; Rights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.Azure.Management.EventHub.Fluent.Models.AccessRights&gt; Rights" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Eventhub.Fluent.IAuthorizationRule`1.Rights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rights As IReadOnlyList(Of AccessRights)" />
      <MemberSignature Language="F#" Value="member this.Rights : System.Collections.Generic.IReadOnlyList&lt;Microsoft.Azure.Management.EventHub.Fluent.Models.AccessRights&gt;" Usage="Microsoft.Azure.Management.Eventhub.Fluent.IAuthorizationRule&lt;'RuleT&gt;.Rights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.Azure.Management.EventHub.Fluent.Models.AccessRights&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets rights associated with the authorization rule.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
