<Type Name="IEventHubs" FullName="Microsoft.Azure.Management.Eventhub.Fluent.IEventHubs">
  <TypeSignature Language="C#" Value="public interface IEventHubs : Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating&lt;Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Definition.IBlank&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingById, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHub&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner&lt;Microsoft.Azure.Management.EventHub.Fluent.IEventHubsOperations&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.EventHub.Fluent.IEventHubManager&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEventHubs implements class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating`1&lt;class Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Definition.IBlank&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingById, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById`1&lt;class Microsoft.Azure.Management.Eventhub.Fluent.IEventHub&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner`1&lt;class Microsoft.Azure.Management.EventHub.Fluent.IEventHubsOperations&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager`1&lt;class Microsoft.Azure.Management.EventHub.Fluent.IEventHubManager&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Eventhub.Fluent.IEventHubs" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEventHubs&#xA;Implements IBeta, IHasInner(Of IEventHubsOperations), IHasManager(Of IEventHubManager), ISupportsCreating(Of IBlank), ISupportsDeletingById, ISupportsGettingById(Of IEventHub)" />
  <TypeSignature Language="F#" Value="type IEventHubs = interface&#xA;    interface IBeta&#xA;    interface ISupportsCreating&lt;IBlank&gt;&#xA;    interface ISupportsDeletingById&#xA;    interface ISupportsGettingById&lt;IEventHub&gt;&#xA;    interface IHasInner&lt;IEventHubsOperations&gt;&#xA;    interface IHasManager&lt;IEventHubManager&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.71</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating&lt;Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Definition.IBlank&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingById</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHub&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner&lt;Microsoft.Azure.Management.EventHub.Fluent.IEventHubsOperations&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.EventHub.Fluent.IEventHubManager&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Entry point to manage event hubs.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AuthorizationRules">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationRules AuthorizationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationRules AuthorizationRules" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Eventhub.Fluent.IEventHubs.AuthorizationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthorizationRules As IEventHubAuthorizationRules" />
      <MemberSignature Language="F#" Value="member this.AuthorizationRules : Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationRules" Usage="Microsoft.Azure.Management.Eventhub.Fluent.IEventHubs.AuthorizationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationRules</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets entry point to manage authorization rules of event hubs.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsumerGroups">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Eventhub.Fluent.IEventHubConsumerGroups ConsumerGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.Eventhub.Fluent.IEventHubConsumerGroups ConsumerGroups" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Eventhub.Fluent.IEventHubs.ConsumerGroups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsumerGroups As IEventHubConsumerGroups" />
      <MemberSignature Language="F#" Value="member this.ConsumerGroups : Microsoft.Azure.Management.Eventhub.Fluent.IEventHubConsumerGroups" Usage="Microsoft.Azure.Management.Eventhub.Fluent.IEventHubs.ConsumerGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Eventhub.Fluent.IEventHubConsumerGroups</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets entry point to manage consumer group of event hubs.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteByName">
      <MemberSignature Language="C#" Value="public void DeleteByName (string resourceGroupName, string namespaceName, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteByName(string resourceGroupName, string namespaceName, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.IEventHubs.DeleteByName(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteByName (resourceGroupName As String, namespaceName As String, name As String)" />
      <MemberSignature Language="F#" Value="abstract member DeleteByName : string * string * string -&gt; unit" Usage="iEventHubs.DeleteByName (resourceGroupName, namespaceName, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">Resource group name.</param>
        <param name="namespaceName">Namespace name.</param>
        <param name="name">Event hub name.</param>
        <summary>
            Deletes an event hub in a namespace under a resource group.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteByNameAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DeleteByNameAsync (string resourceGroupName, string namespaceName, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteByNameAsync(string resourceGroupName, string namespaceName, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.IEventHubs.DeleteByNameAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteByNameAsync (resourceGroupName As String, namespaceName As String, name As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeleteByNameAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iEventHubs.DeleteByNameAsync (resourceGroupName, namespaceName, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="resourceGroupName">Resource group name.</param>
        <param name="namespaceName">Namespace name.</param>
        <param name="name">Event hub name.</param>
        <summary>
            Deletes an event hub in a namespace under a resource group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The completable representing the task.</return>
      </Docs>
    </Member>
    <Member MemberName="GetByName">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Eventhub.Fluent.IEventHub GetByName (string resourceGroupName, string namespaceName, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Eventhub.Fluent.IEventHub GetByName(string resourceGroupName, string namespaceName, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.IEventHubs.GetByName(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByName (resourceGroupName As String, namespaceName As String, name As String) As IEventHub" />
      <MemberSignature Language="F#" Value="abstract member GetByName : string * string * string -&gt; Microsoft.Azure.Management.Eventhub.Fluent.IEventHub" Usage="iEventHubs.GetByName (resourceGroupName, namespaceName, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Eventhub.Fluent.IEventHub</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">Resource group name.</param>
        <param name="namespaceName">Namespace name.</param>
        <param name="name">Event hub name.</param>
        <summary>
            Gets an event hub in a namespace under a resource group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The event hubs.</return>
      </Docs>
    </Member>
    <Member MemberName="GetByNameAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHub&gt; GetByNameAsync (string resourceGroupName, string namespaceName, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Eventhub.Fluent.IEventHub&gt; GetByNameAsync(string resourceGroupName, string namespaceName, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.IEventHubs.GetByNameAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByNameAsync (resourceGroupName As String, namespaceName As String, name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IEventHub)" />
      <MemberSignature Language="F#" Value="abstract member GetByNameAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHub&gt;" Usage="iEventHubs.GetByNameAsync (resourceGroupName, namespaceName, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHub&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="resourceGroupName">Resource group name.</param>
        <param name="namespaceName">Namespace name.</param>
        <param name="name">Event hub name.</param>
        <summary>
            Gets an event hub in a namespace under a resource group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Observable that emits the event hubs.</return>
      </Docs>
    </Member>
    <Member MemberName="ListByNamespace">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHub&gt; ListByNamespace (string resourceGroupName, string namespaceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Management.Eventhub.Fluent.IEventHub&gt; ListByNamespace(string resourceGroupName, string namespaceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.IEventHubs.ListByNamespace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListByNamespace (resourceGroupName As String, namespaceName As String) As IEnumerable(Of IEventHub)" />
      <MemberSignature Language="F#" Value="abstract member ListByNamespace : string * string -&gt; seq&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHub&gt;" Usage="iEventHubs.ListByNamespace (resourceGroupName, namespaceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHub&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">Resource group name.</param>
        <param name="namespaceName">Namespace name.</param>
        <summary>
            Lists the event hubs in a namespace under a resource group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>List of event hubs.</return>
      </Docs>
    </Member>
    <Member MemberName="ListByNamespaceAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHub&gt;&gt; ListByNamespaceAsync (string resourceGroupName, string namespaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection`1&lt;class Microsoft.Azure.Management.Eventhub.Fluent.IEventHub&gt;&gt; ListByNamespaceAsync(string resourceGroupName, string namespaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.IEventHubs.ListByNamespaceAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListByNamespaceAsync (resourceGroupName As String, namespaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IPagedCollection(Of IEventHub))" />
      <MemberSignature Language="F#" Value="abstract member ListByNamespaceAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHub&gt;&gt;" Usage="iEventHubs.ListByNamespaceAsync (resourceGroupName, namespaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHub&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="resourceGroupName">Resource group name.</param>
        <param name="namespaceName">Namespace name.</param>
        <summary>
            Lists the event hubs in a namespace under a resource group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Observable that emits the event hubs.</return>
      </Docs>
    </Member>
  </Members>
</Type>
