<Type Name="IEventHub" FullName="Microsoft.Azure.Management.Eventhub.Fluent.IEventHub">
  <TypeSignature Language="C#" Value="public interface IEventHub : Microsoft.Azure.Management.Eventhub.Fluent.INestedResource, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner&lt;Microsoft.Azure.Management.EventHub.Fluent.Models.EventhubInner&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.EventHub.Fluent.IEventHubManager&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IIndexable, Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IRefreshable&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHub&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IUpdatable&lt;Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEventHub implements class Microsoft.Azure.Management.Eventhub.Fluent.INestedResource, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner`1&lt;class Microsoft.Azure.Management.EventHub.Fluent.Models.EventhubInner&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager`1&lt;class Microsoft.Azure.Management.EventHub.Fluent.IEventHubManager&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IIndexable, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IRefreshable`1&lt;class Microsoft.Azure.Management.Eventhub.Fluent.IEventHub&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IUpdatable`1&lt;class Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Eventhub.Fluent.IEventHub" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEventHub&#xA;Implements IBeta, IHasId, IHasInner(Of EventhubInner), IHasManager(Of IEventHubManager), IIndexable, INestedResource, IRefreshable(Of IEventHub), IUpdatable(Of IUpdate)" />
  <TypeSignature Language="F#" Value="type IEventHub = interface&#xA;    interface IBeta&#xA;    interface INestedResource&#xA;    interface IIndexable&#xA;    interface IHasId&#xA;    interface IHasManager&lt;IEventHubManager&gt;&#xA;    interface IRefreshable&lt;IEventHub&gt;&#xA;    interface IUpdatable&lt;IUpdate&gt;&#xA;    interface IHasInner&lt;EventhubInner&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.71</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Eventhub.Fluent.INestedResource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner&lt;Microsoft.Azure.Management.EventHub.Fluent.Models.EventhubInner&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.EventHub.Fluent.IEventHubManager&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IIndexable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IRefreshable&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHub&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IUpdatable&lt;Microsoft.Azure.Management.Eventhub.Fluent.EventHub.Update.IUpdate&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Type representing an Azure EventHub.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CaptureDestination">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.EventHub.Fluent.Models.Destination CaptureDestination { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.EventHub.Fluent.Models.Destination CaptureDestination" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Eventhub.Fluent.IEventHub.CaptureDestination" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CaptureDestination As Destination" />
      <MemberSignature Language="F#" Value="member this.CaptureDestination : Microsoft.Azure.Management.EventHub.Fluent.Models.Destination" Usage="Microsoft.Azure.Management.Eventhub.Fluent.IEventHub.CaptureDestination" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.EventHub.Fluent.Models.Destination</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets description of the destination where captured data will be stored.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataCaptureFileNameFormat">
      <MemberSignature Language="C#" Value="public string DataCaptureFileNameFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataCaptureFileNameFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Eventhub.Fluent.IEventHub.DataCaptureFileNameFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataCaptureFileNameFormat As String" />
      <MemberSignature Language="F#" Value="member this.DataCaptureFileNameFormat : string" Usage="Microsoft.Azure.Management.Eventhub.Fluent.IEventHub.DataCaptureFileNameFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the format file name that stores captured data when capturing is enabled.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataCaptureSkipEmptyArchives">
      <MemberSignature Language="C#" Value="public bool DataCaptureSkipEmptyArchives { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataCaptureSkipEmptyArchives" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Eventhub.Fluent.IEventHub.DataCaptureSkipEmptyArchives" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataCaptureSkipEmptyArchives As Boolean" />
      <MemberSignature Language="F#" Value="member this.DataCaptureSkipEmptyArchives : bool" Usage="Microsoft.Azure.Management.Eventhub.Fluent.IEventHub.DataCaptureSkipEmptyArchives" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets whether to skip empty archives when capturing is enabled
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataCaptureWindowSizeInMB">
      <MemberSignature Language="C#" Value="public int DataCaptureWindowSizeInMB { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataCaptureWindowSizeInMB" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Eventhub.Fluent.IEventHub.DataCaptureWindowSizeInMB" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataCaptureWindowSizeInMB As Integer" />
      <MemberSignature Language="F#" Value="member this.DataCaptureWindowSizeInMB : int" Usage="Microsoft.Azure.Management.Eventhub.Fluent.IEventHub.DataCaptureWindowSizeInMB" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets configured window in MB to be used for event capturing when capturing is enabled.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataCaptureWindowSizeInSeconds">
      <MemberSignature Language="C#" Value="public int DataCaptureWindowSizeInSeconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataCaptureWindowSizeInSeconds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Eventhub.Fluent.IEventHub.DataCaptureWindowSizeInSeconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataCaptureWindowSizeInSeconds As Integer" />
      <MemberSignature Language="F#" Value="member this.DataCaptureWindowSizeInSeconds : int" Usage="Microsoft.Azure.Management.Eventhub.Fluent.IEventHub.DataCaptureWindowSizeInSeconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets configured window in seconds to be used for event capturing when capturing is enabled.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDataCaptureEnabled">
      <MemberSignature Language="C#" Value="public bool IsDataCaptureEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDataCaptureEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Eventhub.Fluent.IEventHub.IsDataCaptureEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDataCaptureEnabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsDataCaptureEnabled : bool" Usage="Microsoft.Azure.Management.Eventhub.Fluent.IEventHub.IsDataCaptureEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets true if the data capture enabled for the event hub events, false otherwise.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAuthorizationRules">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationRule&gt; ListAuthorizationRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationRule&gt; ListAuthorizationRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.IEventHub.ListAuthorizationRules" />
      <MemberSignature Language="VB.NET" Value="Public Function ListAuthorizationRules () As IEnumerable(Of IEventHubAuthorizationRule)" />
      <MemberSignature Language="F#" Value="abstract member ListAuthorizationRules : unit -&gt; seq&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationRule&gt;" Usage="iEventHub.ListAuthorizationRules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationRule&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Authorization rules enabled for the event hub.</return>
      </Docs>
    </Member>
    <Member MemberName="ListAuthorizationRulesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationRule&gt;&gt; ListAuthorizationRulesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection`1&lt;class Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationRule&gt;&gt; ListAuthorizationRulesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.IEventHub.ListAuthorizationRulesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListAuthorizationRulesAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of IPagedCollection(Of IEventHubAuthorizationRule))" />
      <MemberSignature Language="F#" Value="abstract member ListAuthorizationRulesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationRule&gt;&gt;" Usage="iEventHub.ListAuthorizationRulesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHubAuthorizationRule&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Authorization rules enabled for the event hub.</return>
      </Docs>
    </Member>
    <Member MemberName="ListConsumerGroups">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHubConsumerGroup&gt; ListConsumerGroups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Management.Eventhub.Fluent.IEventHubConsumerGroup&gt; ListConsumerGroups() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.IEventHub.ListConsumerGroups" />
      <MemberSignature Language="VB.NET" Value="Public Function ListConsumerGroups () As IEnumerable(Of IEventHubConsumerGroup)" />
      <MemberSignature Language="F#" Value="abstract member ListConsumerGroups : unit -&gt; seq&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHubConsumerGroup&gt;" Usage="iEventHub.ListConsumerGroups " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHubConsumerGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Consumer group in the event hub.</return>
      </Docs>
    </Member>
    <Member MemberName="ListConsumerGroupsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHubConsumerGroup&gt;&gt; ListConsumerGroupsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection`1&lt;class Microsoft.Azure.Management.Eventhub.Fluent.IEventHubConsumerGroup&gt;&gt; ListConsumerGroupsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.IEventHub.ListConsumerGroupsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListConsumerGroupsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of IPagedCollection(Of IEventHubConsumerGroup))" />
      <MemberSignature Language="F#" Value="abstract member ListConsumerGroupsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHubConsumerGroup&gt;&gt;" Usage="iEventHub.ListConsumerGroupsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;Microsoft.Azure.Management.Eventhub.Fluent.IEventHubConsumerGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Consumer group in the event hub.</return>
      </Docs>
    </Member>
    <Member MemberName="MessageRetentionPeriodInDays">
      <MemberSignature Language="C#" Value="public long MessageRetentionPeriodInDays { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MessageRetentionPeriodInDays" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Eventhub.Fluent.IEventHub.MessageRetentionPeriodInDays" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MessageRetentionPeriodInDays As Long" />
      <MemberSignature Language="F#" Value="member this.MessageRetentionPeriodInDays : int64" Usage="Microsoft.Azure.Management.Eventhub.Fluent.IEventHub.MessageRetentionPeriodInDays" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets retention period of events in days.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceName">
      <MemberSignature Language="C#" Value="public string NamespaceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Eventhub.Fluent.IEventHub.NamespaceName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NamespaceName As String" />
      <MemberSignature Language="F#" Value="member this.NamespaceName : string" Usage="Microsoft.Azure.Management.Eventhub.Fluent.IEventHub.NamespaceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets name of the parent namespace.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceResourceGroupName">
      <MemberSignature Language="C#" Value="public string NamespaceResourceGroupName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceResourceGroupName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Eventhub.Fluent.IEventHub.NamespaceResourceGroupName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NamespaceResourceGroupName As String" />
      <MemberSignature Language="F#" Value="member this.NamespaceResourceGroupName : string" Usage="Microsoft.Azure.Management.Eventhub.Fluent.IEventHub.NamespaceResourceGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the resource group of the parent namespace.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartitionIds">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyCollection&lt;string&gt; PartitionIds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyCollection`1&lt;string&gt; PartitionIds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Eventhub.Fluent.IEventHub.PartitionIds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PartitionIds As IReadOnlyCollection(Of String)" />
      <MemberSignature Language="F#" Value="member this.PartitionIds : System.Collections.Generic.IReadOnlyCollection&lt;string&gt;" Usage="Microsoft.Azure.Management.Eventhub.Fluent.IEventHub.PartitionIds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the partition identifiers.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
