<Type Name="EventHubConsumerClient" FullName="Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient">
  <TypeSignature Language="C#" Value="public class EventHubConsumerClient : IAsyncDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventHubConsumerClient extends System.Object implements class System.IAsyncDisposable" />
  <TypeSignature Language="DocId" Value="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient" />
  <TypeSignature Language="VB.NET" Value="Public Class EventHubConsumerClient&#xA;Implements IAsyncDisposable" />
  <TypeSignature Language="F#" Value="type EventHubConsumerClient = class&#xA;    interface IAsyncDisposable" />
  <AssemblyInfo>
    <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
    <AssemblyVersion>5.0.1.0</AssemblyVersion>
    <AssemblyVersion>5.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
               A client responsible for reading <see cref="T:Azure.Messaging.EventHubs.EventData" /> from a specific Event Hub
               as a member of a specific consumer group.
            
               A consumer may be exclusive, which asserts ownership over associated partitions for the consumer
               group to ensure that only one consumer from that group is reading the from the partition.
               These exclusive consumers are sometimes referred to as "Epoch Consumers."
            
               A consumer may also be non-exclusive, allowing multiple consumers from the same consumer
               group to be actively reading events from a given partition.  These non-exclusive consumers are
               sometimes referred to as "Non-Epoch Consumers."
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventHubConsumerClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient" /> class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHubConsumerClient (string consumerGroup, string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string consumerGroup, string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (consumerGroup As String, connectionString As String)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient : string * string -&gt; Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient" Usage="new Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient (consumerGroup, connectionString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="consumerGroup" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="consumerGroup">The name of the consumer group this consumer is associated with.  Events are read in the context of this group.</param>
        <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the Event Hub name and the shared key properties are contained in this connection string.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient" /> class.
             </summary>
        <remarks>
               If the connection string is copied from the Event Hubs namespace, it will likely not contain the name of the desired Event Hub,
               which is needed.  In this case, the name can be added manually by adding ";EntityPath=[[ EVENT HUB NAME ]]" to the end of the
               connection string.  For example, ";EntityPath=telemetry-hub".
            
               If you have defined a shared access policy directly on the Event Hub itself, then copying the connection string from that
               Event Hub will result in a connection string that contains the name.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHubConsumerClient (string consumerGroup, Azure.Messaging.EventHubs.EventHubConnection connection, Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions clientOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string consumerGroup, class Azure.Messaging.EventHubs.EventHubConnection connection, class Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions clientOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.#ctor(System.String,Azure.Messaging.EventHubs.EventHubConnection,Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (consumerGroup As String, connection As EventHubConnection, Optional clientOptions As EventHubConsumerClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient : string * Azure.Messaging.EventHubs.EventHubConnection * Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions -&gt; Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient" Usage="new Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient (consumerGroup, connection, clientOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="consumerGroup" Type="System.String" />
        <Parameter Name="connection" Type="Azure.Messaging.EventHubs.EventHubConnection" />
        <Parameter Name="clientOptions" Type="Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions" />
      </Parameters>
      <Docs>
        <param name="consumerGroup">The name of the consumer group this consumer is associated with.  Events are read in the context of this group.</param>
        <param name="connection">The <see cref="T:Azure.Messaging.EventHubs.EventHubConnection" /> connection to use for communication with the Event Hubs service.</param>
        <param name="clientOptions">A set of options to apply when configuring the consumer.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient" /> class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHubConsumerClient (string consumerGroup, string connectionString, Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions clientOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string consumerGroup, string connectionString, class Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions clientOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.#ctor(System.String,System.String,Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (consumerGroup As String, connectionString As String, clientOptions As EventHubConsumerClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient : string * string * Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions -&gt; Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient" Usage="new Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient (consumerGroup, connectionString, clientOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="consumerGroup" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="clientOptions" Type="Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions" />
      </Parameters>
      <Docs>
        <param name="consumerGroup">The name of the consumer group this consumer is associated with.  Events are read in the context of this group.</param>
        <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the Event Hub name and the shared key properties are contained in this connection string.</param>
        <param name="clientOptions">The set of options to use for this consumer.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient" /> class.
             </summary>
        <remarks>
               If the connection string is copied from the Event Hubs namespace, it will likely not contain the name of the desired Event Hub,
               which is needed.  In this case, the name can be added manually by adding ";EntityPath=[[ EVENT HUB NAME ]]" to the end of the
               connection string.  For example, ";EntityPath=telemetry-hub".
            
               If you have defined a shared access policy directly on the Event Hub itself, then copying the connection string from that
               Event Hub will result in a connection string that contains the name.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHubConsumerClient (string consumerGroup, string connectionString, string eventHubName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string consumerGroup, string connectionString, string eventHubName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (consumerGroup As String, connectionString As String, eventHubName As String)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient : string * string * string -&gt; Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient" Usage="new Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient (consumerGroup, connectionString, eventHubName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="consumerGroup" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="consumerGroup">The name of the consumer group this consumer is associated with.  Events are read in the context of this group.</param>
        <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the shared key properties are contained in this connection string, but not the Event Hub name.</param>
        <param name="eventHubName">The name of the specific Event Hub to associate the consumer with.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient" /> class.
             </summary>
        <remarks>
               If the connection string is copied from the Event Hub itself, it will contain the name of the desired Event Hub,
               and can be used directly without passing the <paramref name="eventHubName" />.  The name of the Event Hub should be
               passed only once, either as part of the connection string or separately.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHubConsumerClient (string consumerGroup, string connectionString, string eventHubName, Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions clientOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string consumerGroup, string connectionString, string eventHubName, class Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions clientOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.#ctor(System.String,System.String,System.String,Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (consumerGroup As String, connectionString As String, eventHubName As String, clientOptions As EventHubConsumerClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient : string * string * string * Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions -&gt; Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient" Usage="new Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient (consumerGroup, connectionString, eventHubName, clientOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="consumerGroup" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="clientOptions" Type="Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions" />
      </Parameters>
      <Docs>
        <param name="consumerGroup">The name of the consumer group this consumer is associated with.  Events are read in the context of this group.</param>
        <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the shared key properties are contained in this connection string, but not the Event Hub name.</param>
        <param name="eventHubName">The name of the specific Event Hub to associate the consumer with.</param>
        <param name="clientOptions">A set of options to apply when configuring the consumer.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient" /> class.
             </summary>
        <remarks>
               If the connection string is copied from the Event Hub itself, it will contain the name of the desired Event Hub,
               and can be used directly without passing the <paramref name="eventHubName" />.  The name of the Event Hub should be
               passed only once, either as part of the connection string or separately.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHubConsumerClient (string consumerGroup, string fullyQualifiedNamespace, string eventHubName, Azure.Core.TokenCredential credential, Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions clientOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string consumerGroup, string fullyQualifiedNamespace, string eventHubName, class Azure.Core.TokenCredential credential, class Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions clientOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.#ctor(System.String,System.String,System.String,Azure.Core.TokenCredential,Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (consumerGroup As String, fullyQualifiedNamespace As String, eventHubName As String, credential As TokenCredential, Optional clientOptions As EventHubConsumerClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient : string * string * string * Azure.Core.TokenCredential * Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions -&gt; Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient" Usage="new Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient (consumerGroup, fullyQualifiedNamespace, eventHubName, credential, clientOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="consumerGroup" Type="System.String" />
        <Parameter Name="fullyQualifiedNamespace" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="clientOptions" Type="Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions" />
      </Parameters>
      <Docs>
        <param name="consumerGroup">The name of the consumer group this consumer is associated with.  Events are read in the context of this group.</param>
        <param name="fullyQualifiedNamespace">The fully qualified Event Hubs namespace to connect to.  This is likely to be similar to <c>{yournamespace}.servicebus.windows.net</c>.</param>
        <param name="eventHubName">The name of the specific Event Hub to associate the consumer with.</param>
        <param name="credential">The Azure managed identity credential to use for authorization.  Access controls may be specified by the Event Hubs namespace or the requested Event Hub, depending on Azure configuration.</param>
        <param name="clientOptions">A set of options to apply when configuring the consumer.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient" /> class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CloseAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CloseAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.CloseAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloseAsync (Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="abstract member CloseAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CloseAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="eventHubConsumerClient.CloseAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Closes the consumer.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsumerGroup">
      <MemberSignature Language="C#" Value="public string ConsumerGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConsumerGroup" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ConsumerGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsumerGroup As String" />
      <MemberSignature Language="F#" Value="member this.ConsumerGroup : string" Usage="Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ConsumerGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               The name of the consumer group that this consumer is associated with.  Events will be read
               only in the context of this group.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultConsumerGroupName">
      <MemberSignature Language="C#" Value="public const string DefaultConsumerGroupName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultConsumerGroupName" />
      <MemberSignature Language="DocId" Value="F:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.DefaultConsumerGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultConsumerGroupName As String " />
      <MemberSignature Language="F#" Value="val mutable DefaultConsumerGroupName : string" Usage="Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.DefaultConsumerGroupName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the default consumer group in the Event Hubs service.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="eventHubConsumerClient.DisposeAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IAsyncDisposable.DisposeAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
               Performs the task needed to clean up resources used by the <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient" />,
               including ensuring that the client itself has been closed.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="eventHubConsumerClient.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
        <summary>
               Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
             </summary>
        <returns>
          <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventHubName">
      <MemberSignature Language="C#" Value="public string EventHubName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventHubName" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.EventHubName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventHubName As String" />
      <MemberSignature Language="F#" Value="member this.EventHubName : string" Usage="Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.EventHubName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               The name of the Event Hub that the consumer is connected to, specific to the
               Event Hubs namespace that contains it.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullyQualifiedNamespace">
      <MemberSignature Language="C#" Value="public string FullyQualifiedNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullyQualifiedNamespace" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.FullyQualifiedNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullyQualifiedNamespace As String" />
      <MemberSignature Language="F#" Value="member this.FullyQualifiedNamespace : string" Usage="Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.FullyQualifiedNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               The fully qualified Event Hubs namespace that the consumer is associated with.  This is likely
               to be similar to <c>{yournamespace}.servicebus.windows.net</c>.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.EventHubProperties&gt; GetEventHubPropertiesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Messaging.EventHubs.EventHubProperties&gt; GetEventHubPropertiesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.GetEventHubPropertiesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventHubPropertiesAsync (Optional cancellationToken As CancellationToken = null) As Task(Of EventHubProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetEventHubPropertiesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.EventHubProperties&gt;&#xA;override this.GetEventHubPropertiesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.EventHubProperties&gt;" Usage="eventHubConsumerClient.GetEventHubPropertiesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.EventHubProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Retrieves information about the Event Hub that the connection is associated with, including
               the number of partitions present and their identifiers.
             </summary>
        <returns>The set of information for the Event Hub that this client is associated with.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="eventHubConsumerClient.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
               Returns a hash code for this instance.
             </summary>
        <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartitionIdsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string[]&gt; GetPartitionIdsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string[]&gt; GetPartitionIdsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.GetPartitionIdsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPartitionIdsAsync (Optional cancellationToken As CancellationToken = null) As Task(Of String())" />
      <MemberSignature Language="F#" Value="abstract member GetPartitionIdsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string[]&gt;&#xA;override this.GetPartitionIdsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string[]&gt;" Usage="eventHubConsumerClient.GetPartitionIdsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Retrieves the set of identifiers for the partitions of an Event Hub.
             </summary>
        <returns>The set of identifiers for the partitions within the Event Hub that this client is associated with.</returns>
        <remarks>
               This method is synonymous with invoking <see cref="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.GetEventHubPropertiesAsync(System.Threading.CancellationToken)" /> and reading the <see cref="P:Azure.Messaging.EventHubs.EventHubProperties.PartitionIds" />
               property that is returned. It is offered as a convenience for quick access to the set of partition identifiers for the associated Event Hub.
               No new or extended information is presented.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartitionPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.PartitionProperties&gt; GetPartitionPropertiesAsync (string partitionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Messaging.EventHubs.PartitionProperties&gt; GetPartitionPropertiesAsync(string partitionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.GetPartitionPropertiesAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPartitionPropertiesAsync (partitionId As String, Optional cancellationToken As CancellationToken = null) As Task(Of PartitionProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetPartitionPropertiesAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.PartitionProperties&gt;&#xA;override this.GetPartitionPropertiesAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.PartitionProperties&gt;" Usage="eventHubConsumerClient.GetPartitionPropertiesAsync (partitionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.PartitionProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="partitionId">The unique identifier of a partition associated with the Event Hub.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Retrieves information about a specific partition for an Event Hub, including elements that describe the available
               events in the partition event stream.
             </summary>
        <returns>The set of information for the requested partition under the Event Hub this client is associated with.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public bool IsClosed { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Property IsClosed As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool with get, set" Usage="Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               Indicates whether or not this <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient" /> has been closed.
             </summary>
        <value>
          <c>true</c> if the client is closed; otherwise, <c>false</c>.
             </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadEventsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IAsyncEnumerable&lt;Azure.Messaging.EventHubs.Consumer.PartitionEvent&gt; ReadEventsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerable`1&lt;valuetype Azure.Messaging.EventHubs.Consumer.PartitionEvent&gt; ReadEventsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadEventsAsync (Optional cancellationToken As CancellationToken = null) As IAsyncEnumerable(Of PartitionEvent)" />
      <MemberSignature Language="F#" Value="abstract member ReadEventsAsync : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.Messaging.EventHubs.Consumer.PartitionEvent&gt;&#xA;override this.ReadEventsAsync : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.Messaging.EventHubs.Consumer.PartitionEvent&gt;" Usage="eventHubConsumerClient.ReadEventsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;Azure.Messaging.EventHubs.Consumer.PartitionEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Reads events from all partitions of the event hub as an asynchronous enumerable, allowing events to be iterated as they
               become available on the partition, waiting as necessary should there be no events available.
            
               This enumerator may block for an indeterminate amount of time for an <c>await</c> if events are not available on the partition, requiring
               cancellation via the <paramref name="cancellationToken" /> to be requested in order to return control.  It is recommended to set the
               <see cref="P:Azure.Messaging.EventHubs.Consumer.ReadEventOptions.MaximumWaitTime" /> for scenarios where a more deterministic maximum waiting period is desired.
             </summary>
        <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1" /> to be used for iterating over events in the partition.</returns>
        <remarks>
               This method is not recommended for production use; the <c>EventProcessorClient</c> should be used for reading events from all partitions in a
               production scenario, as it offers a much more robust experience with higher throughput.
            
               It is important to note that this method does not guarantee fairness amongst the partitions during iteration; each of the partitions competes to publish
               events to be read by the enumerator.  Depending on service communication, there may be a clustering of events per partition and/or there may be a noticeable
               bias for a given partition or subset of partitions.
            
               Each reader of events is presented with an independent iterator; if there are multiple readers, each receive their own copy of an event to
               process, rather than competing for them.
             </remarks>
        <altmember cref="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsAsync(Azure.Messaging.EventHubs.Consumer.ReadEventOptions,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="ReadEventsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IAsyncEnumerable&lt;Azure.Messaging.EventHubs.Consumer.PartitionEvent&gt; ReadEventsAsync (Azure.Messaging.EventHubs.Consumer.ReadEventOptions readOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerable`1&lt;valuetype Azure.Messaging.EventHubs.Consumer.PartitionEvent&gt; ReadEventsAsync(class Azure.Messaging.EventHubs.Consumer.ReadEventOptions readOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsAsync(Azure.Messaging.EventHubs.Consumer.ReadEventOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadEventsAsync (readOptions As ReadEventOptions, Optional cancellationToken As CancellationToken = null) As IAsyncEnumerable(Of PartitionEvent)" />
      <MemberSignature Language="F#" Value="abstract member ReadEventsAsync : Azure.Messaging.EventHubs.Consumer.ReadEventOptions * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.Messaging.EventHubs.Consumer.PartitionEvent&gt;&#xA;override this.ReadEventsAsync : Azure.Messaging.EventHubs.Consumer.ReadEventOptions * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.Messaging.EventHubs.Consumer.PartitionEvent&gt;" Usage="eventHubConsumerClient.ReadEventsAsync (readOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;Azure.Messaging.EventHubs.Consumer.PartitionEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readOptions" Type="Azure.Messaging.EventHubs.Consumer.ReadEventOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="readOptions">The set of options to use for configuring read behavior; if not specified the defaults will be used.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Reads events from all partitions of the event hub as an asynchronous enumerable, allowing events to be iterated as they
               become available on the partition, waiting as necessary should there be no events available.
            
               This enumerator may block for an indeterminate amount of time for an <c>await</c> if events are not available on the partition, requiring
               cancellation via the <paramref name="cancellationToken" /> to be requested in order to return control.  It is recommended to set the
               <see cref="P:Azure.Messaging.EventHubs.Consumer.ReadEventOptions.MaximumWaitTime" /> for scenarios where a more deterministic maximum waiting period is desired.
             </summary>
        <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1" /> to be used for iterating over events in the partition.</returns>
        <remarks>
               This method is not recommended for production use; the <c>EventProcessorClient</c> should be used for reading events from all partitions in a
               production scenario, as it offers a much more robust experience with higher throughput.
            
               It is important to note that this method does not guarantee fairness amongst the partitions during iteration; each of the partitions competes to publish
               events to be read by the enumerator.  Depending on service communication, there may be a clustering of events per partition and/or there may be a noticeable
               bias for a given partition or subset of partitions.
            
               Each reader of events is presented with an independent iterator; if there are multiple readers, each receive their own copy of an event to
               process, rather than competing for them.
             </remarks>
        <altmember cref="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsAsync(System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="ReadEventsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IAsyncEnumerable&lt;Azure.Messaging.EventHubs.Consumer.PartitionEvent&gt; ReadEventsAsync (bool startReadingAtEarliestEvent, Azure.Messaging.EventHubs.Consumer.ReadEventOptions readOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerable`1&lt;valuetype Azure.Messaging.EventHubs.Consumer.PartitionEvent&gt; ReadEventsAsync(bool startReadingAtEarliestEvent, class Azure.Messaging.EventHubs.Consumer.ReadEventOptions readOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsAsync(System.Boolean,Azure.Messaging.EventHubs.Consumer.ReadEventOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadEventsAsync (startReadingAtEarliestEvent As Boolean, Optional readOptions As ReadEventOptions = null, Optional cancellationToken As CancellationToken = null) As IAsyncEnumerable(Of PartitionEvent)" />
      <MemberSignature Language="F#" Value="abstract member ReadEventsAsync : bool * Azure.Messaging.EventHubs.Consumer.ReadEventOptions * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.Messaging.EventHubs.Consumer.PartitionEvent&gt;&#xA;override this.ReadEventsAsync : bool * Azure.Messaging.EventHubs.Consumer.ReadEventOptions * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.Messaging.EventHubs.Consumer.PartitionEvent&gt;" Usage="eventHubConsumerClient.ReadEventsAsync (startReadingAtEarliestEvent, readOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient/&lt;ReadEventsAsync&gt;d__40))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName>System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient/&lt;ReadEventsAsync&gt;d__39))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;Azure.Messaging.EventHubs.Consumer.PartitionEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startReadingAtEarliestEvent" Type="System.Boolean" />
        <Parameter Name="readOptions" Type="Azure.Messaging.EventHubs.Consumer.ReadEventOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken">
          <Attributes>
            <Attribute FrameworkAlternate="azure-dotnet">
              <AttributeName>System.Runtime.CompilerServices.EnumeratorCancellation</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="startReadingAtEarliestEvent">
          <c>true</c> to begin reading at the first events available in each partition; otherwise, reading will begin at the end of each partition seeing only new events as they are published.</param>
        <param name="readOptions">The set of options to use for configuring read behavior; if not specified the defaults will be used.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Reads events from all partitions of the event hub as an asynchronous enumerable, allowing events to be iterated as they
               become available on the partition, waiting as necessary should there be no events available.
            
               This enumerator may block for an indeterminate amount of time for an <c>await</c> if events are not available on the partition, requiring
               cancellation via the <paramref name="cancellationToken" /> to be requested in order to return control.  It is recommended to set the
               <see cref="P:Azure.Messaging.EventHubs.Consumer.ReadEventOptions.MaximumWaitTime" /> for scenarios where a more deterministic maximum waiting period is desired.
             </summary>
        <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1" /> to be used for iterating over events in the partition.</returns>
        <remarks>
               This method is not recommended for production use; the <c>EventProcessorClient</c> should be used for reading events from all partitions in a
               production scenario, as it offers a much more robust experience with higher throughput.
            
               It is important to note that this method does not guarantee fairness amongst the partitions during iteration; each of the partitions competes to publish
               events to be read by the enumerator.  Depending on service communication, there may be a clustering of events per partition and/or there may be a noticeable
               bias for a given partition or subset of partitions.
            
               Each reader of events is presented with an independent iterator; if there are multiple readers, each receive their own copy of an event to
               process, rather than competing for them.
             </remarks>
        <altmember cref="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsAsync(System.Threading.CancellationToken)" />
        <altmember cref="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsAsync(Azure.Messaging.EventHubs.Consumer.ReadEventOptions,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="ReadEventsFromPartitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IAsyncEnumerable&lt;Azure.Messaging.EventHubs.Consumer.PartitionEvent&gt; ReadEventsFromPartitionAsync (string partitionId, Azure.Messaging.EventHubs.Consumer.EventPosition startingPosition, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerable`1&lt;valuetype Azure.Messaging.EventHubs.Consumer.PartitionEvent&gt; ReadEventsFromPartitionAsync(string partitionId, valuetype Azure.Messaging.EventHubs.Consumer.EventPosition startingPosition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsFromPartitionAsync(System.String,Azure.Messaging.EventHubs.Consumer.EventPosition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadEventsFromPartitionAsync (partitionId As String, startingPosition As EventPosition, Optional cancellationToken As CancellationToken = null) As IAsyncEnumerable(Of PartitionEvent)" />
      <MemberSignature Language="F#" Value="abstract member ReadEventsFromPartitionAsync : string * Azure.Messaging.EventHubs.Consumer.EventPosition * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.Messaging.EventHubs.Consumer.PartitionEvent&gt;&#xA;override this.ReadEventsFromPartitionAsync : string * Azure.Messaging.EventHubs.Consumer.EventPosition * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.Messaging.EventHubs.Consumer.PartitionEvent&gt;" Usage="eventHubConsumerClient.ReadEventsFromPartitionAsync (partitionId, startingPosition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;Azure.Messaging.EventHubs.Consumer.PartitionEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionId" Type="System.String" />
        <Parameter Name="startingPosition" Type="Azure.Messaging.EventHubs.Consumer.EventPosition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="partitionId">The identifier of the Event Hub partition from which events will be received.</param>
        <param name="startingPosition">The position within the partition where the consumer should begin reading events.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Reads events from the requested partition as an asynchronous enumerable, allowing events to be iterated as they
               become available on the partition, waiting as necessary should there be no events available.
            
               This enumerator may block for an indeterminate amount of time for an <c>await</c> if events are not available on the partition, requiring
               cancellation via the <paramref name="cancellationToken" /> to be requested in order to return control.  It is recommended to call the overload
               which accepts a set of options for configuring read behavior for scenarios where a more deterministic maximum waiting period is desired.
             </summary>
        <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1" /> to be used for iterating over events in the partition.</returns>
        <remarks>
               Each reader of events is presented with an independent iterator; if there are multiple readers, each receive their own copy of an event to
               process, rather than competing for them.
             </remarks>
        <altmember cref="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsFromPartitionAsync(System.String,Azure.Messaging.EventHubs.Consumer.EventPosition,Azure.Messaging.EventHubs.Consumer.ReadEventOptions,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="ReadEventsFromPartitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IAsyncEnumerable&lt;Azure.Messaging.EventHubs.Consumer.PartitionEvent&gt; ReadEventsFromPartitionAsync (string partitionId, Azure.Messaging.EventHubs.Consumer.EventPosition startingPosition, Azure.Messaging.EventHubs.Consumer.ReadEventOptions readOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerable`1&lt;valuetype Azure.Messaging.EventHubs.Consumer.PartitionEvent&gt; ReadEventsFromPartitionAsync(string partitionId, valuetype Azure.Messaging.EventHubs.Consumer.EventPosition startingPosition, class Azure.Messaging.EventHubs.Consumer.ReadEventOptions readOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsFromPartitionAsync(System.String,Azure.Messaging.EventHubs.Consumer.EventPosition,Azure.Messaging.EventHubs.Consumer.ReadEventOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadEventsFromPartitionAsync (partitionId As String, startingPosition As EventPosition, readOptions As ReadEventOptions, Optional cancellationToken As CancellationToken = null) As IAsyncEnumerable(Of PartitionEvent)" />
      <MemberSignature Language="F#" Value="abstract member ReadEventsFromPartitionAsync : string * Azure.Messaging.EventHubs.Consumer.EventPosition * Azure.Messaging.EventHubs.Consumer.ReadEventOptions * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.Messaging.EventHubs.Consumer.PartitionEvent&gt;&#xA;override this.ReadEventsFromPartitionAsync : string * Azure.Messaging.EventHubs.Consumer.EventPosition * Azure.Messaging.EventHubs.Consumer.ReadEventOptions * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.Messaging.EventHubs.Consumer.PartitionEvent&gt;" Usage="eventHubConsumerClient.ReadEventsFromPartitionAsync (partitionId, startingPosition, readOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient/&lt;ReadEventsFromPartitionAsync&gt;d__37))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName>System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient/&lt;ReadEventsFromPartitionAsync&gt;d__36))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;Azure.Messaging.EventHubs.Consumer.PartitionEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionId" Type="System.String" />
        <Parameter Name="startingPosition" Type="Azure.Messaging.EventHubs.Consumer.EventPosition" />
        <Parameter Name="readOptions" Type="Azure.Messaging.EventHubs.Consumer.ReadEventOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken">
          <Attributes>
            <Attribute FrameworkAlternate="azure-dotnet">
              <AttributeName>System.Runtime.CompilerServices.EnumeratorCancellation</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="partitionId">The identifier of the Event Hub partition from which events will be received.</param>
        <param name="startingPosition">The position within the partition where the consumer should begin reading events.</param>
        <param name="readOptions">The set of options to use for configuring read behavior; if not specified the defaults will be used.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Reads events from the requested partition as an asynchronous enumerable, allowing events to be iterated as they
               become available on the partition, waiting as necessary should there be no events available.
            
               This enumerator may block for an indeterminate amount of time for an <c>await</c> if events are not available on the partition, requiring
               cancellation via the <paramref name="cancellationToken" /> to be requested in order to return control.  It is recommended to set the
               <see cref="P:Azure.Messaging.EventHubs.Consumer.ReadEventOptions.MaximumWaitTime" /> for scenarios where a more deterministic maximum waiting period is desired.
             </summary>
        <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1" /> to be used for iterating over events in the partition.</returns>
        <remarks>
               Each reader of events is presented with an independent iterator; if there are multiple readers, each receive their own copy of an event to
               process, rather than competing for them.
             </remarks>
        <altmember cref="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsFromPartitionAsync(System.String,Azure.Messaging.EventHubs.Consumer.EventPosition,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="eventHubConsumerClient.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
               Converts the instance to string representation.
             </summary>
        <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
