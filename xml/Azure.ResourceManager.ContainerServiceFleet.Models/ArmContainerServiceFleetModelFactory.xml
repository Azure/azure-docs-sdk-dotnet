<Type Name="ArmContainerServiceFleetModelFactory" FullName="Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmContainerServiceFleetModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmContainerServiceFleetModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmContainerServiceFleetModelFactory" />
  <TypeSignature Language="F#" Value="type ArmContainerServiceFleetModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ContainerServiceFleet</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ContainerServiceFleetData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerServiceFleet.ContainerServiceFleetData ContainerServiceFleetData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ETag? eTag = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, Azure.ResourceManager.ContainerServiceFleet.Models.FleetProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerServiceFleet.ContainerServiceFleetData ContainerServiceFleetData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; eTag, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerServiceFleet.Models.FleetProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.ContainerServiceFleetData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.Nullable{Azure.ETag},Azure.ResourceManager.Models.ManagedServiceIdentity,System.Nullable{Azure.ResourceManager.ContainerServiceFleet.Models.FleetProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerServiceFleetData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional eTag As Nullable(Of ETag) = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional provisioningState As Nullable(Of FleetProvisioningState) = Nothing) As ContainerServiceFleetData" />
      <MemberSignature Language="F#" Value="static member ContainerServiceFleetData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Nullable&lt;Azure.ETag&gt; * Azure.ResourceManager.Models.ManagedServiceIdentity * Nullable&lt;Azure.ResourceManager.ContainerServiceFleet.Models.FleetProvisioningState&gt; -&gt; Azure.ResourceManager.ContainerServiceFleet.ContainerServiceFleetData" Usage="Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.ContainerServiceFleetData (id, name, resourceType, systemData, tags, location, eTag, identity, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerServiceFleet</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerServiceFleet.ContainerServiceFleetData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="eTag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerServiceFleet.Models.FleetProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="eTag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
        <param name="identity"> Managed identity. </param>
        <param name="provisioningState"> The status of the last operation. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerServiceFleet.ContainerServiceFleetData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerServiceFleet.ContainerServiceFleetData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerServiceFleetMemberData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerServiceFleet.ContainerServiceFleetMemberData ContainerServiceFleetMemberData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ETag? eTag = default, Azure.Core.ResourceIdentifier clusterResourceId = default, string group = default, Azure.ResourceManager.ContainerServiceFleet.Models.FleetMemberProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerServiceFleet.ContainerServiceFleetMemberData ContainerServiceFleetMemberData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; eTag, class Azure.Core.ResourceIdentifier clusterResourceId, string group, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerServiceFleet.Models.FleetMemberProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.ContainerServiceFleetMemberData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ETag},Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ResourceManager.ContainerServiceFleet.Models.FleetMemberProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerServiceFleetMemberData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional eTag As Nullable(Of ETag) = Nothing, Optional clusterResourceId As ResourceIdentifier = Nothing, Optional group As String = Nothing, Optional provisioningState As Nullable(Of FleetMemberProvisioningState) = Nothing) As ContainerServiceFleetMemberData" />
      <MemberSignature Language="F#" Value="static member ContainerServiceFleetMemberData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.ETag&gt; * Azure.Core.ResourceIdentifier * string * Nullable&lt;Azure.ResourceManager.ContainerServiceFleet.Models.FleetMemberProvisioningState&gt; -&gt; Azure.ResourceManager.ContainerServiceFleet.ContainerServiceFleetMemberData" Usage="Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.ContainerServiceFleetMemberData (id, name, resourceType, systemData, eTag, clusterResourceId, group, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerServiceFleet</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerServiceFleet.ContainerServiceFleetMemberData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="eTag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="clusterResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerServiceFleet.Models.FleetMemberProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="eTag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
        <param name="clusterResourceId"> The ARM resource id of the cluster that joins the Fleet. Must be a valid Azure resource id. e.g.: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{clusterName}'. </param>
        <param name="group"> The group this member belongs to for multi-cluster update management. </param>
        <param name="provisioningState"> The status of the last operation. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerServiceFleet.ContainerServiceFleetMemberData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerServiceFleet.ContainerServiceFleetMemberData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerServiceFleetUpdateGroupStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateGroupStatus ContainerServiceFleetUpdateGroupStatus (Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus status = default, string name = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerServiceFleet.Models.MemberUpdateStatus&gt; members = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateGroupStatus ContainerServiceFleetUpdateGroupStatus(class Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus status, string name, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerServiceFleet.Models.MemberUpdateStatus&gt; members) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.ContainerServiceFleetUpdateGroupStatus(Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerServiceFleet.Models.MemberUpdateStatus})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerServiceFleetUpdateGroupStatus (Optional status As ContainerServiceFleetUpdateStatus = Nothing, Optional name As String = Nothing, Optional members As IEnumerable(Of MemberUpdateStatus) = Nothing) As ContainerServiceFleetUpdateGroupStatus" />
      <MemberSignature Language="F#" Value="static member ContainerServiceFleetUpdateGroupStatus : Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus * string * seq&lt;Azure.ResourceManager.ContainerServiceFleet.Models.MemberUpdateStatus&gt; -&gt; Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateGroupStatus" Usage="Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.ContainerServiceFleetUpdateGroupStatus (status, name, members)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerServiceFleet</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateGroupStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="members" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerServiceFleet.Models.MemberUpdateStatus&gt;" />
      </Parameters>
      <Docs>
        <param name="status"> The status of the UpdateGroup. </param>
        <param name="name"> The name of the UpdateGroup. </param>
        <param name="members"> The list of member this UpdateGroup updates. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateGroupStatus" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateGroupStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerServiceFleetUpdateRunData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerServiceFleet.ContainerServiceFleetUpdateRunData ContainerServiceFleetUpdateRunData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ETag? eTag = default, Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateRunProvisioningState? provisioningState = default, Azure.Core.ResourceIdentifier updateStrategyId = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStage&gt; strategyStages = default, Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetManagedClusterUpdate managedClusterUpdate = default, Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateRunStatus status = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerServiceFleet.ContainerServiceFleetUpdateRunData ContainerServiceFleetUpdateRunData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; eTag, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateRunProvisioningState&gt; provisioningState, class Azure.Core.ResourceIdentifier updateStrategyId, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStage&gt; strategyStages, class Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetManagedClusterUpdate managedClusterUpdate, class Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateRunStatus status) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.ContainerServiceFleetUpdateRunData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ETag},System.Nullable{Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateRunProvisioningState},Azure.Core.ResourceIdentifier,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStage},Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetManagedClusterUpdate,Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateRunStatus)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerServiceFleetUpdateRunData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional eTag As Nullable(Of ETag) = Nothing, Optional provisioningState As Nullable(Of ContainerServiceFleetUpdateRunProvisioningState) = Nothing, Optional updateStrategyId As ResourceIdentifier = Nothing, Optional strategyStages As IEnumerable(Of ContainerServiceFleetUpdateStage) = Nothing, Optional managedClusterUpdate As ContainerServiceFleetManagedClusterUpdate = Nothing, Optional status As ContainerServiceFleetUpdateRunStatus = Nothing) As ContainerServiceFleetUpdateRunData" />
      <MemberSignature Language="F#" Value="static member ContainerServiceFleetUpdateRunData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.ETag&gt; * Nullable&lt;Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateRunProvisioningState&gt; * Azure.Core.ResourceIdentifier * seq&lt;Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStage&gt; * Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetManagedClusterUpdate * Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateRunStatus -&gt; Azure.ResourceManager.ContainerServiceFleet.ContainerServiceFleetUpdateRunData" Usage="Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.ContainerServiceFleetUpdateRunData (id, name, resourceType, systemData, eTag, provisioningState, updateStrategyId, strategyStages, managedClusterUpdate, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerServiceFleet</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerServiceFleet.ContainerServiceFleetUpdateRunData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="eTag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateRunProvisioningState&gt;" />
        <Parameter Name="updateStrategyId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="strategyStages" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStage&gt;" />
        <Parameter Name="managedClusterUpdate" Type="Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetManagedClusterUpdate" />
        <Parameter Name="status" Type="Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateRunStatus" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="eTag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
        <param name="provisioningState"> The provisioning state of the UpdateRun resource. </param>
        <param name="updateStrategyId">
             The resource id of the FleetUpdateStrategy resource to reference.
            
             When creating a new run, there are three ways to define a strategy for the run:
             1. Define a new strategy in place: Set the "strategy" field.
             2. Use an existing strategy: Set the "updateStrategyId" field. (since 2023-08-15-preview)
             3. Use the default strategy to update all the members one by one: Leave both "updateStrategyId" and "strategy" unset. (since 2023-08-15-preview)
            
             Setting both "updateStrategyId" and "strategy" is invalid.
            
             UpdateRuns created by "updateStrategyId" snapshot the referenced UpdateStrategy at the time of creation and store it in the "strategy" field.
             Subsequent changes to the referenced FleetUpdateStrategy resource do not propagate.
             UpdateRunStrategy changes can be made directly on the "strategy" field before launching the UpdateRun.
             </param>
        <param name="strategyStages">
             The strategy defines the order in which the clusters will be updated.
             If not set, all members will be updated sequentially. The UpdateRun status will show a single UpdateStage and a single UpdateGroup targeting all members.
             The strategy of the UpdateRun can be modified until the run is started.
             </param>
        <param name="managedClusterUpdate"> The update to be applied to all clusters in the UpdateRun. The managedClusterUpdate can be modified until the run is started. </param>
        <param name="status"> The status of the UpdateRun. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerServiceFleet.ContainerServiceFleetUpdateRunData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerServiceFleet.ContainerServiceFleetUpdateRunData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerServiceFleetUpdateRunStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateRunStatus ContainerServiceFleetUpdateRunStatus (Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus status = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStageStatus&gt; stages = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerServiceFleet.Models.NodeImageVersion&gt; selectedNodeImageVersions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateRunStatus ContainerServiceFleetUpdateRunStatus(class Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus status, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStageStatus&gt; stages, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerServiceFleet.Models.NodeImageVersion&gt; selectedNodeImageVersions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.ContainerServiceFleetUpdateRunStatus(Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStageStatus},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerServiceFleet.Models.NodeImageVersion})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerServiceFleetUpdateRunStatus (Optional status As ContainerServiceFleetUpdateStatus = Nothing, Optional stages As IEnumerable(Of ContainerServiceFleetUpdateStageStatus) = Nothing, Optional selectedNodeImageVersions As IEnumerable(Of NodeImageVersion) = Nothing) As ContainerServiceFleetUpdateRunStatus" />
      <MemberSignature Language="F#" Value="static member ContainerServiceFleetUpdateRunStatus : Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus * seq&lt;Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStageStatus&gt; * seq&lt;Azure.ResourceManager.ContainerServiceFleet.Models.NodeImageVersion&gt; -&gt; Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateRunStatus" Usage="Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.ContainerServiceFleetUpdateRunStatus (status, stages, selectedNodeImageVersions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerServiceFleet</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateRunStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus" />
        <Parameter Name="stages" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStageStatus&gt;" />
        <Parameter Name="selectedNodeImageVersions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerServiceFleet.Models.NodeImageVersion&gt;" />
      </Parameters>
      <Docs>
        <param name="status"> The status of the UpdateRun. </param>
        <param name="stages"> The stages composing an update run. Stages are run sequentially withing an UpdateRun. </param>
        <param name="selectedNodeImageVersions"> The node image upgrade specs for the update run. It is only set in update run when `NodeImageSelection.type` is `Consistent`. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateRunStatus" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateRunStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerServiceFleetUpdateStageStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStageStatus ContainerServiceFleetUpdateStageStatus (Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus status = default, string name = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateGroupStatus&gt; groups = default, Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetWaitStatus afterStageWaitStatus = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStageStatus ContainerServiceFleetUpdateStageStatus(class Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus status, string name, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateGroupStatus&gt; groups, class Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetWaitStatus afterStageWaitStatus) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.ContainerServiceFleetUpdateStageStatus(Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateGroupStatus},Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetWaitStatus)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerServiceFleetUpdateStageStatus (Optional status As ContainerServiceFleetUpdateStatus = Nothing, Optional name As String = Nothing, Optional groups As IEnumerable(Of ContainerServiceFleetUpdateGroupStatus) = Nothing, Optional afterStageWaitStatus As ContainerServiceFleetWaitStatus = Nothing) As ContainerServiceFleetUpdateStageStatus" />
      <MemberSignature Language="F#" Value="static member ContainerServiceFleetUpdateStageStatus : Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus * string * seq&lt;Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateGroupStatus&gt; * Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetWaitStatus -&gt; Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStageStatus" Usage="Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.ContainerServiceFleetUpdateStageStatus (status, name, groups, afterStageWaitStatus)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerServiceFleet</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStageStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="groups" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateGroupStatus&gt;" />
        <Parameter Name="afterStageWaitStatus" Type="Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetWaitStatus" />
      </Parameters>
      <Docs>
        <param name="status"> The status of the UpdateStage. </param>
        <param name="name"> The name of the UpdateStage. </param>
        <param name="groups"> The list of groups to be updated as part of this UpdateStage. </param>
        <param name="afterStageWaitStatus"> The status of the wait period configured on the UpdateStage. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStageStatus" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStageStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerServiceFleetUpdateStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus ContainerServiceFleetUpdateStatus (DateTimeOffset? startOn = default, DateTimeOffset? completedOn = default, Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateState? state = default, Azure.ResponseError error = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus ContainerServiceFleetUpdateStatus(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; completedOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateState&gt; state, class Azure.ResponseError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.ContainerServiceFleetUpdateStatus(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateState},Azure.ResponseError)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerServiceFleetUpdateStatus (Optional startOn As Nullable(Of DateTimeOffset) = Nothing, Optional completedOn As Nullable(Of DateTimeOffset) = Nothing, Optional state As Nullable(Of ContainerServiceFleetUpdateState) = Nothing, Optional error As ResponseError = Nothing) As ContainerServiceFleetUpdateStatus" />
      <MemberSignature Language="F#" Value="static member ContainerServiceFleetUpdateStatus : Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateState&gt; * Azure.ResponseError -&gt; Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus" Usage="Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.ContainerServiceFleetUpdateStatus (startOn, completedOn, state, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerServiceFleet</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="completedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateState&gt;" />
        <Parameter Name="error" Type="Azure.ResponseError" />
      </Parameters>
      <Docs>
        <param name="startOn"> The time the operation or group was started. </param>
        <param name="completedOn"> The time the operation or group was completed. </param>
        <param name="state"> The State of the operation or group. </param>
        <param name="error"> The error details when a failure is encountered. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerServiceFleetWaitStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetWaitStatus ContainerServiceFleetWaitStatus (Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus status = default, int? waitDurationInSeconds = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetWaitStatus ContainerServiceFleetWaitStatus(class Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus status, valuetype System.Nullable`1&lt;int32&gt; waitDurationInSeconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.ContainerServiceFleetWaitStatus(Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerServiceFleetWaitStatus (Optional status As ContainerServiceFleetUpdateStatus = Nothing, Optional waitDurationInSeconds As Nullable(Of Integer) = Nothing) As ContainerServiceFleetWaitStatus" />
      <MemberSignature Language="F#" Value="static member ContainerServiceFleetWaitStatus : Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus * Nullable&lt;int&gt; -&gt; Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetWaitStatus" Usage="Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.ContainerServiceFleetWaitStatus (status, waitDurationInSeconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerServiceFleet</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetWaitStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus" />
        <Parameter Name="waitDurationInSeconds" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="status"> The status of the wait duration. </param>
        <param name="waitDurationInSeconds"> The wait duration configured in seconds. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetWaitStatus" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetWaitStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FleetCredentialResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerServiceFleet.Models.FleetCredentialResult FleetCredentialResult (string name = default, byte[] value = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerServiceFleet.Models.FleetCredentialResult FleetCredentialResult(string name, unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.FleetCredentialResult(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FleetCredentialResult (Optional name As String = Nothing, Optional value As Byte() = Nothing) As FleetCredentialResult" />
      <MemberSignature Language="F#" Value="static member FleetCredentialResult : string * byte[] -&gt; Azure.ResourceManager.ContainerServiceFleet.Models.FleetCredentialResult" Usage="Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.FleetCredentialResult (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerServiceFleet</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerServiceFleet.Models.FleetCredentialResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the credential. </param>
        <param name="value"> Base64-encoded Kubernetes configuration file. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerServiceFleet.Models.FleetCredentialResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerServiceFleet.Models.FleetCredentialResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FleetCredentialResults">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerServiceFleet.Models.FleetCredentialResults FleetCredentialResults (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerServiceFleet.Models.FleetCredentialResult&gt; kubeconfigs = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerServiceFleet.Models.FleetCredentialResults FleetCredentialResults(class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerServiceFleet.Models.FleetCredentialResult&gt; kubeconfigs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.FleetCredentialResults(System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerServiceFleet.Models.FleetCredentialResult})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FleetCredentialResults (Optional kubeconfigs As IEnumerable(Of FleetCredentialResult) = Nothing) As FleetCredentialResults" />
      <MemberSignature Language="F#" Value="static member FleetCredentialResults : seq&lt;Azure.ResourceManager.ContainerServiceFleet.Models.FleetCredentialResult&gt; -&gt; Azure.ResourceManager.ContainerServiceFleet.Models.FleetCredentialResults" Usage="Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.FleetCredentialResults kubeconfigs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerServiceFleet</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerServiceFleet.Models.FleetCredentialResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kubeconfigs" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerServiceFleet.Models.FleetCredentialResult&gt;" />
      </Parameters>
      <Docs>
        <param name="kubeconfigs"> Array of base64-encoded Kubernetes configuration files. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerServiceFleet.Models.FleetCredentialResults" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerServiceFleet.Models.FleetCredentialResults" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FleetUpdateStrategyData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerServiceFleet.FleetUpdateStrategyData FleetUpdateStrategyData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ETag? eTag = default, Azure.ResourceManager.ContainerServiceFleet.Models.FleetUpdateStrategyProvisioningState? provisioningState = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStage&gt; strategyStages = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerServiceFleet.FleetUpdateStrategyData FleetUpdateStrategyData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; eTag, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerServiceFleet.Models.FleetUpdateStrategyProvisioningState&gt; provisioningState, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStage&gt; strategyStages) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.FleetUpdateStrategyData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ETag},System.Nullable{Azure.ResourceManager.ContainerServiceFleet.Models.FleetUpdateStrategyProvisioningState},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStage})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FleetUpdateStrategyData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional eTag As Nullable(Of ETag) = Nothing, Optional provisioningState As Nullable(Of FleetUpdateStrategyProvisioningState) = Nothing, Optional strategyStages As IEnumerable(Of ContainerServiceFleetUpdateStage) = Nothing) As FleetUpdateStrategyData" />
      <MemberSignature Language="F#" Value="static member FleetUpdateStrategyData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.ETag&gt; * Nullable&lt;Azure.ResourceManager.ContainerServiceFleet.Models.FleetUpdateStrategyProvisioningState&gt; * seq&lt;Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStage&gt; -&gt; Azure.ResourceManager.ContainerServiceFleet.FleetUpdateStrategyData" Usage="Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.FleetUpdateStrategyData (id, name, resourceType, systemData, eTag, provisioningState, strategyStages)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerServiceFleet</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerServiceFleet.FleetUpdateStrategyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="eTag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerServiceFleet.Models.FleetUpdateStrategyProvisioningState&gt;" />
        <Parameter Name="strategyStages" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStage&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="eTag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
        <param name="provisioningState"> The provisioning state of the UpdateStrategy resource. </param>
        <param name="strategyStages"> Defines the update sequence of the clusters. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerServiceFleet.FleetUpdateStrategyData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerServiceFleet.FleetUpdateStrategyData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberUpdateStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerServiceFleet.Models.MemberUpdateStatus MemberUpdateStatus (Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus status = default, string name = default, Azure.Core.ResourceIdentifier clusterResourceId = default, string operationId = default, string message = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerServiceFleet.Models.MemberUpdateStatus MemberUpdateStatus(class Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus status, string name, class Azure.Core.ResourceIdentifier clusterResourceId, string operationId, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.MemberUpdateStatus(Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus,System.String,Azure.Core.ResourceIdentifier,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MemberUpdateStatus (Optional status As ContainerServiceFleetUpdateStatus = Nothing, Optional name As String = Nothing, Optional clusterResourceId As ResourceIdentifier = Nothing, Optional operationId As String = Nothing, Optional message As String = Nothing) As MemberUpdateStatus" />
      <MemberSignature Language="F#" Value="static member MemberUpdateStatus : Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus * string * Azure.Core.ResourceIdentifier * string * string -&gt; Azure.ResourceManager.ContainerServiceFleet.Models.MemberUpdateStatus" Usage="Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.MemberUpdateStatus (status, name, clusterResourceId, operationId, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerServiceFleet</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerServiceFleet.Models.MemberUpdateStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="Azure.ResourceManager.ContainerServiceFleet.Models.ContainerServiceFleetUpdateStatus" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="clusterResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="status"> The status of the MemberUpdate operation. </param>
        <param name="name"> The name of the FleetMember. </param>
        <param name="clusterResourceId"> The Azure resource id of the target Kubernetes cluster. </param>
        <param name="operationId"> The operation resource id of the latest attempt to perform the operation. </param>
        <param name="message"> The status message after processing the member update operation. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerServiceFleet.Models.MemberUpdateStatus" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerServiceFleet.Models.MemberUpdateStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeImageVersion">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerServiceFleet.Models.NodeImageVersion NodeImageVersion (string version = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerServiceFleet.Models.NodeImageVersion NodeImageVersion(string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.NodeImageVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NodeImageVersion (Optional version As String = Nothing) As NodeImageVersion" />
      <MemberSignature Language="F#" Value="static member NodeImageVersion : string -&gt; Azure.ResourceManager.ContainerServiceFleet.Models.NodeImageVersion" Usage="Azure.ResourceManager.ContainerServiceFleet.Models.ArmContainerServiceFleetModelFactory.NodeImageVersion version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerServiceFleet</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerServiceFleet.Models.NodeImageVersion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="version"> The image version to upgrade the nodes to (e.g., 'AKSUbuntu-1804gen2containerd-2022.12.13'). </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerServiceFleet.Models.NodeImageVersion" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerServiceFleet.Models.NodeImageVersion" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
