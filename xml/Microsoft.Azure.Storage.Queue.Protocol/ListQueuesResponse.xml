<Type Name="ListQueuesResponse" FullName="Microsoft.Azure.Storage.Queue.Protocol.ListQueuesResponse">
  <TypeSignature Language="C#" Value="public sealed class ListQueuesResponse" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ListQueuesResponse extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Storage.Queue.Protocol.ListQueuesResponse" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ListQueuesResponse" />
  <TypeSignature Language="F#" Value="type ListQueuesResponse = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Storage.Queue</AssemblyName>
    <AssemblyVersion>10.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListQueuesResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Queue.Protocol.ListQueuesResponse.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Queue</AssemblyName>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextMarker">
      <MemberSignature Language="C#" Value="public string NextMarker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NextMarker" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Storage.Queue.Protocol.ListQueuesResponse.NextMarker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextMarker As String" />
      <MemberSignature Language="F#" Value="member this.NextMarker : string" Usage="Microsoft.Azure.Storage.Queue.Protocol.ListQueuesResponse.NextMarker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Queue</AssemblyName>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Queues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Queue.Protocol.QueueEntry&gt; Queues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Storage.Queue.Protocol.QueueEntry&gt; Queues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Storage.Queue.Protocol.ListQueuesResponse.Queues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Queues As IEnumerable(Of QueueEntry)" />
      <MemberSignature Language="F#" Value="member this.Queues : seq&lt;Microsoft.Azure.Storage.Queue.Protocol.QueueEntry&gt;" Usage="Microsoft.Azure.Storage.Queue.Protocol.ListQueuesResponse.Queues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Queue</AssemblyName>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Queue.Protocol.QueueEntry&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>