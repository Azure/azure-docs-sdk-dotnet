<Type Name="FactoryIntegrationRuntimeResource" FullName="Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource">
  <TypeSignature Language="C#" Value="public class FactoryIntegrationRuntimeResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FactoryIntegrationRuntimeResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource" />
  <TypeSignature Language="VB.NET" Value="Public Class FactoryIntegrationRuntimeResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type FactoryIntegrationRuntimeResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing a FactoryIntegrationRuntime along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetFactoryIntegrationRuntimeResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" /> using the GetFactoryIntegrationRuntime method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FactoryIntegrationRuntimeResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLinkedIntegrationRuntime">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt; CreateLinkedIntegrationRuntime (Azure.ResourceManager.DataFactory.Models.CreateLinkedIntegrationRuntimeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt; CreateLinkedIntegrationRuntime(class Azure.ResourceManager.DataFactory.Models.CreateLinkedIntegrationRuntimeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.CreateLinkedIntegrationRuntime(Azure.ResourceManager.DataFactory.Models.CreateLinkedIntegrationRuntimeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateLinkedIntegrationRuntime (content As CreateLinkedIntegrationRuntimeContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IntegrationRuntimeStatusResult)" />
      <MemberSignature Language="F#" Value="abstract member CreateLinkedIntegrationRuntime : Azure.ResourceManager.DataFactory.Models.CreateLinkedIntegrationRuntimeContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt;&#xA;override this.CreateLinkedIntegrationRuntime : Azure.ResourceManager.DataFactory.Models.CreateLinkedIntegrationRuntimeContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt;" Usage="factoryIntegrationRuntimeResource.CreateLinkedIntegrationRuntime (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.CreateLinkedIntegrationRuntimeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The linked integration runtime properties. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Create a linked integration runtime entry in a shared integration runtime.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/linkedIntegrationRuntime
            Operation Id: IntegrationRuntimes_CreateLinkedIntegrationRuntime
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateLinkedIntegrationRuntimeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt;&gt; CreateLinkedIntegrationRuntimeAsync (Azure.ResourceManager.DataFactory.Models.CreateLinkedIntegrationRuntimeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt;&gt; CreateLinkedIntegrationRuntimeAsync(class Azure.ResourceManager.DataFactory.Models.CreateLinkedIntegrationRuntimeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.CreateLinkedIntegrationRuntimeAsync(Azure.ResourceManager.DataFactory.Models.CreateLinkedIntegrationRuntimeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateLinkedIntegrationRuntimeAsync (content As CreateLinkedIntegrationRuntimeContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IntegrationRuntimeStatusResult))" />
      <MemberSignature Language="F#" Value="abstract member CreateLinkedIntegrationRuntimeAsync : Azure.ResourceManager.DataFactory.Models.CreateLinkedIntegrationRuntimeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt;&gt;&#xA;override this.CreateLinkedIntegrationRuntimeAsync : Azure.ResourceManager.DataFactory.Models.CreateLinkedIntegrationRuntimeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt;&gt;" Usage="factoryIntegrationRuntimeResource.CreateLinkedIntegrationRuntimeAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.CreateLinkedIntegrationRuntimeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The linked integration runtime properties. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Create a linked integration runtime entry in a shared integration runtime.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/linkedIntegrationRuntime
            Operation Id: IntegrationRuntimes_CreateLinkedIntegrationRuntime
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string factoryName, string integrationRuntimeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string factoryName, string integrationRuntimeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, factoryName As String, integrationRuntimeName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, factoryName, integrationRuntimeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="factoryName" Type="System.String" />
        <Parameter Name="integrationRuntimeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="resourceGroupName">To be added.</param>
        <param name="factoryName">To be added.</param>
        <param name="integrationRuntimeName">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As FactoryIntegrationRuntimeData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeData" Usage="Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="factoryIntegrationRuntimeResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes an integration runtime.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}
            Operation Id: IntegrationRuntimes_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="factoryIntegrationRuntimeResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes an integration runtime.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}
            Operation Id: IntegrationRuntimes_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIntegrationRuntimeNode">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteIntegrationRuntimeNode (string nodeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteIntegrationRuntimeNode(string nodeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.DeleteIntegrationRuntimeNode(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIntegrationRuntimeNode (nodeName As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteIntegrationRuntimeNode : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteIntegrationRuntimeNode : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="factoryIntegrationRuntimeResource.DeleteIntegrationRuntimeNode (nodeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nodeName"> The integration runtime node name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a self-hosted integration runtime node.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}
            Operation Id: IntegrationRuntimeNodes_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="nodeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nodeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteIntegrationRuntimeNodeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteIntegrationRuntimeNodeAsync (string nodeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteIntegrationRuntimeNodeAsync(string nodeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.DeleteIntegrationRuntimeNodeAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIntegrationRuntimeNodeAsync (nodeName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteIntegrationRuntimeNodeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteIntegrationRuntimeNodeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="factoryIntegrationRuntimeResource.DeleteIntegrationRuntimeNodeAsync (nodeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nodeName"> The integration runtime node name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a self-hosted integration runtime node.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}
            Operation Id: IntegrationRuntimeNodes_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="nodeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nodeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource&gt; Get (string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource&gt; Get(string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.Get(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of FactoryIntegrationRuntimeResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource&gt;&#xA;override this.Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource&gt;" Usage="factoryIntegrationRuntimeResource.Get (ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ifNoneMatch"> ETag of the integration runtime entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an integration runtime.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}
            Operation Id: IntegrationRuntimes_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllIntegrationRuntimeObjectMetadata">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.SsisObjectMetadata&gt; GetAllIntegrationRuntimeObjectMetadata (Azure.ResourceManager.DataFactory.Models.GetSsisObjectMetadataContent content = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataFactory.Models.SsisObjectMetadata&gt; GetAllIntegrationRuntimeObjectMetadata(class Azure.ResourceManager.DataFactory.Models.GetSsisObjectMetadataContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.GetAllIntegrationRuntimeObjectMetadata(Azure.ResourceManager.DataFactory.Models.GetSsisObjectMetadataContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllIntegrationRuntimeObjectMetadata (Optional content As GetSsisObjectMetadataContent = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SsisObjectMetadata)" />
      <MemberSignature Language="F#" Value="abstract member GetAllIntegrationRuntimeObjectMetadata : Azure.ResourceManager.DataFactory.Models.GetSsisObjectMetadataContent * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.SsisObjectMetadata&gt;&#xA;override this.GetAllIntegrationRuntimeObjectMetadata : Azure.ResourceManager.DataFactory.Models.GetSsisObjectMetadataContent * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.SsisObjectMetadata&gt;" Usage="factoryIntegrationRuntimeResource.GetAllIntegrationRuntimeObjectMetadata (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.SsisObjectMetadata&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.GetSsisObjectMetadataContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The parameters for getting a SSIS object metadata. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a SSIS integration runtime object metadata by specified path. The return is pageable metadata list.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/getObjectMetadata
            Operation Id: IntegrationRuntimeObjectMetadata_Get
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataFactory.Models.SsisObjectMetadata" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllIntegrationRuntimeObjectMetadataAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.SsisObjectMetadata&gt; GetAllIntegrationRuntimeObjectMetadataAsync (Azure.ResourceManager.DataFactory.Models.GetSsisObjectMetadataContent content = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataFactory.Models.SsisObjectMetadata&gt; GetAllIntegrationRuntimeObjectMetadataAsync(class Azure.ResourceManager.DataFactory.Models.GetSsisObjectMetadataContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.GetAllIntegrationRuntimeObjectMetadataAsync(Azure.ResourceManager.DataFactory.Models.GetSsisObjectMetadataContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllIntegrationRuntimeObjectMetadataAsync (Optional content As GetSsisObjectMetadataContent = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SsisObjectMetadata)" />
      <MemberSignature Language="F#" Value="abstract member GetAllIntegrationRuntimeObjectMetadataAsync : Azure.ResourceManager.DataFactory.Models.GetSsisObjectMetadataContent * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.SsisObjectMetadata&gt;&#xA;override this.GetAllIntegrationRuntimeObjectMetadataAsync : Azure.ResourceManager.DataFactory.Models.GetSsisObjectMetadataContent * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.SsisObjectMetadata&gt;" Usage="factoryIntegrationRuntimeResource.GetAllIntegrationRuntimeObjectMetadataAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.SsisObjectMetadata&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.GetSsisObjectMetadataContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The parameters for getting a SSIS object metadata. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a SSIS integration runtime object metadata by specified path. The return is pageable metadata list.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/getObjectMetadata
            Operation Id: IntegrationRuntimeObjectMetadata_Get
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataFactory.Models.SsisObjectMetadata" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource&gt;&gt; GetAsync (string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource&gt;&gt; GetAsync(string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.GetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of FactoryIntegrationRuntimeResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource&gt;&gt;&#xA;override this.GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource&gt;&gt;" Usage="factoryIntegrationRuntimeResource.GetAsync (ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ifNoneMatch"> ETag of the integration runtime entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an integration runtime.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}
            Operation Id: IntegrationRuntimes_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuthKeys">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeAuthKeys&gt; GetAuthKeys (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeAuthKeys&gt; GetAuthKeys(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.GetAuthKeys(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAuthKeys (Optional cancellationToken As CancellationToken = Nothing) As Response(Of IntegrationRuntimeAuthKeys)" />
      <MemberSignature Language="F#" Value="abstract member GetAuthKeys : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeAuthKeys&gt;&#xA;override this.GetAuthKeys : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeAuthKeys&gt;" Usage="factoryIntegrationRuntimeResource.GetAuthKeys cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeAuthKeys&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves the authentication keys for an integration runtime.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/listAuthKeys
            Operation Id: IntegrationRuntimes_ListAuthKeys
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuthKeysAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeAuthKeys&gt;&gt; GetAuthKeysAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeAuthKeys&gt;&gt; GetAuthKeysAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.GetAuthKeysAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAuthKeysAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IntegrationRuntimeAuthKeys))" />
      <MemberSignature Language="F#" Value="abstract member GetAuthKeysAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeAuthKeys&gt;&gt;&#xA;override this.GetAuthKeysAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeAuthKeys&gt;&gt;" Usage="factoryIntegrationRuntimeResource.GetAuthKeysAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeAuthKeys&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves the authentication keys for an integration runtime.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/listAuthKeys
            Operation Id: IntegrationRuntimes_ListAuthKeys
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionInfo">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeConnectionInfo&gt; GetConnectionInfo (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeConnectionInfo&gt; GetConnectionInfo(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.GetConnectionInfo(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConnectionInfo (Optional cancellationToken As CancellationToken = Nothing) As Response(Of IntegrationRuntimeConnectionInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetConnectionInfo : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeConnectionInfo&gt;&#xA;override this.GetConnectionInfo : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeConnectionInfo&gt;" Usage="factoryIntegrationRuntimeResource.GetConnectionInfo cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeConnectionInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the on-premises integration runtime connection information for encrypting the on-premises data source credentials.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/getConnectionInfo
            Operation Id: IntegrationRuntimes_GetConnectionInfo
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionInfoAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeConnectionInfo&gt;&gt; GetConnectionInfoAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeConnectionInfo&gt;&gt; GetConnectionInfoAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.GetConnectionInfoAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConnectionInfoAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IntegrationRuntimeConnectionInfo))" />
      <MemberSignature Language="F#" Value="abstract member GetConnectionInfoAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeConnectionInfo&gt;&gt;&#xA;override this.GetConnectionInfoAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeConnectionInfo&gt;&gt;" Usage="factoryIntegrationRuntimeResource.GetConnectionInfoAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeConnectionInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the on-premises integration runtime connection information for encrypting the on-premises data source credentials.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/getConnectionInfo
            Operation Id: IntegrationRuntimes_GetConnectionInfo
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationRuntimeNode">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.SelfHostedIntegrationRuntimeNode&gt; GetIntegrationRuntimeNode (string nodeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.SelfHostedIntegrationRuntimeNode&gt; GetIntegrationRuntimeNode(string nodeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.GetIntegrationRuntimeNode(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationRuntimeNode (nodeName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SelfHostedIntegrationRuntimeNode)" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationRuntimeNode : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.SelfHostedIntegrationRuntimeNode&gt;&#xA;override this.GetIntegrationRuntimeNode : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.SelfHostedIntegrationRuntimeNode&gt;" Usage="factoryIntegrationRuntimeResource.GetIntegrationRuntimeNode (nodeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.SelfHostedIntegrationRuntimeNode&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nodeName"> The integration runtime node name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a self-hosted integration runtime node.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}
            Operation Id: IntegrationRuntimeNodes_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="nodeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nodeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationRuntimeNodeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.SelfHostedIntegrationRuntimeNode&gt;&gt; GetIntegrationRuntimeNodeAsync (string nodeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.SelfHostedIntegrationRuntimeNode&gt;&gt; GetIntegrationRuntimeNodeAsync(string nodeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.GetIntegrationRuntimeNodeAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationRuntimeNodeAsync (nodeName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SelfHostedIntegrationRuntimeNode))" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationRuntimeNodeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.SelfHostedIntegrationRuntimeNode&gt;&gt;&#xA;override this.GetIntegrationRuntimeNodeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.SelfHostedIntegrationRuntimeNode&gt;&gt;" Usage="factoryIntegrationRuntimeResource.GetIntegrationRuntimeNodeAsync (nodeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.SelfHostedIntegrationRuntimeNode&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nodeName"> The integration runtime node name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a self-hosted integration runtime node.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}
            Operation Id: IntegrationRuntimeNodes_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="nodeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nodeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIPAddressIntegrationRuntimeNode">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeNodeIPAddress&gt; GetIPAddressIntegrationRuntimeNode (string nodeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeNodeIPAddress&gt; GetIPAddressIntegrationRuntimeNode(string nodeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.GetIPAddressIntegrationRuntimeNode(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPAddressIntegrationRuntimeNode (nodeName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IntegrationRuntimeNodeIPAddress)" />
      <MemberSignature Language="F#" Value="abstract member GetIPAddressIntegrationRuntimeNode : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeNodeIPAddress&gt;&#xA;override this.GetIPAddressIntegrationRuntimeNode : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeNodeIPAddress&gt;" Usage="factoryIntegrationRuntimeResource.GetIPAddressIntegrationRuntimeNode (nodeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeNodeIPAddress&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nodeName"> The integration runtime node name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the IP address of self-hosted integration runtime node.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}/ipAddress
            Operation Id: IntegrationRuntimeNodes_GetIpAddress
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="nodeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nodeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIPAddressIntegrationRuntimeNodeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeNodeIPAddress&gt;&gt; GetIPAddressIntegrationRuntimeNodeAsync (string nodeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeNodeIPAddress&gt;&gt; GetIPAddressIntegrationRuntimeNodeAsync(string nodeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.GetIPAddressIntegrationRuntimeNodeAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPAddressIntegrationRuntimeNodeAsync (nodeName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IntegrationRuntimeNodeIPAddress))" />
      <MemberSignature Language="F#" Value="abstract member GetIPAddressIntegrationRuntimeNodeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeNodeIPAddress&gt;&gt;&#xA;override this.GetIPAddressIntegrationRuntimeNodeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeNodeIPAddress&gt;&gt;" Usage="factoryIntegrationRuntimeResource.GetIPAddressIntegrationRuntimeNodeAsync (nodeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeNodeIPAddress&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nodeName"> The integration runtime node name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the IP address of self-hosted integration runtime node.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}/ipAddress
            Operation Id: IntegrationRuntimeNodes_GetIpAddress
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="nodeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nodeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitoringData">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeMonitoringData&gt; GetMonitoringData (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeMonitoringData&gt; GetMonitoringData(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.GetMonitoringData(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitoringData (Optional cancellationToken As CancellationToken = Nothing) As Response(Of IntegrationRuntimeMonitoringData)" />
      <MemberSignature Language="F#" Value="abstract member GetMonitoringData : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeMonitoringData&gt;&#xA;override this.GetMonitoringData : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeMonitoringData&gt;" Usage="factoryIntegrationRuntimeResource.GetMonitoringData cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeMonitoringData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the integration runtime monitoring data, which includes the monitor data for all the nodes under this integration runtime.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/monitoringData
            Operation Id: IntegrationRuntimes_GetMonitoringData
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonitoringDataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeMonitoringData&gt;&gt; GetMonitoringDataAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeMonitoringData&gt;&gt; GetMonitoringDataAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.GetMonitoringDataAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitoringDataAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IntegrationRuntimeMonitoringData))" />
      <MemberSignature Language="F#" Value="abstract member GetMonitoringDataAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeMonitoringData&gt;&gt;&#xA;override this.GetMonitoringDataAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeMonitoringData&gt;&gt;" Usage="factoryIntegrationRuntimeResource.GetMonitoringDataAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeMonitoringData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the integration runtime monitoring data, which includes the monitor data for all the nodes under this integration runtime.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/monitoringData
            Operation Id: IntegrationRuntimes_GetMonitoringData
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutboundNetworkDependencies">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint&gt; GetOutboundNetworkDependencies (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint&gt; GetOutboundNetworkDependencies(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.GetOutboundNetworkDependencies(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOutboundNetworkDependencies (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of IntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint)" />
      <MemberSignature Language="F#" Value="abstract member GetOutboundNetworkDependencies : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint&gt;&#xA;override this.GetOutboundNetworkDependencies : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint&gt;" Usage="factoryIntegrationRuntimeResource.GetOutboundNetworkDependencies cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the list of outbound network dependencies for a given Azure-SSIS integration runtime.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/outboundNetworkDependenciesEndpoints
            Operation Id: IntegrationRuntimes_ListOutboundNetworkDependenciesEndpoints
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutboundNetworkDependenciesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint&gt; GetOutboundNetworkDependenciesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint&gt; GetOutboundNetworkDependenciesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.GetOutboundNetworkDependenciesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOutboundNetworkDependenciesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of IntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint)" />
      <MemberSignature Language="F#" Value="abstract member GetOutboundNetworkDependenciesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint&gt;&#xA;override this.GetOutboundNetworkDependenciesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint&gt;" Usage="factoryIntegrationRuntimeResource.GetOutboundNetworkDependenciesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the list of outbound network dependencies for a given Azure-SSIS integration runtime.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/outboundNetworkDependenciesEndpoints
            Operation Id: IntegrationRuntimes_ListOutboundNetworkDependenciesEndpoints
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStatus">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt; GetStatus (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt; GetStatus(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.GetStatus(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStatus (Optional cancellationToken As CancellationToken = Nothing) As Response(Of IntegrationRuntimeStatusResult)" />
      <MemberSignature Language="F#" Value="abstract member GetStatus : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt;&#xA;override this.GetStatus : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt;" Usage="factoryIntegrationRuntimeResource.GetStatus cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets detailed status information for an integration runtime.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/getStatus
            Operation Id: IntegrationRuntimes_GetStatus
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStatusAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt;&gt; GetStatusAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt;&gt; GetStatusAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.GetStatusAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStatusAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IntegrationRuntimeStatusResult))" />
      <MemberSignature Language="F#" Value="abstract member GetStatusAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt;&gt;&#xA;override this.GetStatusAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt;&gt;" Usage="factoryIntegrationRuntimeResource.GetStatusAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets detailed status information for an integration runtime.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/getStatus
            Operation Id: IntegrationRuntimes_GetStatus
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshIntegrationRuntimeObjectMetadata">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.SsisObjectMetadataStatusResult&gt; RefreshIntegrationRuntimeObjectMetadata (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataFactory.Models.SsisObjectMetadataStatusResult&gt; RefreshIntegrationRuntimeObjectMetadata(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.RefreshIntegrationRuntimeObjectMetadata(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RefreshIntegrationRuntimeObjectMetadata (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of SsisObjectMetadataStatusResult)" />
      <MemberSignature Language="F#" Value="abstract member RefreshIntegrationRuntimeObjectMetadata : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.SsisObjectMetadataStatusResult&gt;&#xA;override this.RefreshIntegrationRuntimeObjectMetadata : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.SsisObjectMetadataStatusResult&gt;" Usage="factoryIntegrationRuntimeResource.RefreshIntegrationRuntimeObjectMetadata (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.SsisObjectMetadataStatusResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Refresh a SSIS integration runtime object metadata.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/refreshObjectMetadata
            Operation Id: IntegrationRuntimeObjectMetadata_Refresh
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshIntegrationRuntimeObjectMetadataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.SsisObjectMetadataStatusResult&gt;&gt; RefreshIntegrationRuntimeObjectMetadataAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataFactory.Models.SsisObjectMetadataStatusResult&gt;&gt; RefreshIntegrationRuntimeObjectMetadataAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.RefreshIntegrationRuntimeObjectMetadataAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RefreshIntegrationRuntimeObjectMetadataAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of SsisObjectMetadataStatusResult))" />
      <MemberSignature Language="F#" Value="abstract member RefreshIntegrationRuntimeObjectMetadataAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.SsisObjectMetadataStatusResult&gt;&gt;&#xA;override this.RefreshIntegrationRuntimeObjectMetadataAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.SsisObjectMetadataStatusResult&gt;&gt;" Usage="factoryIntegrationRuntimeResource.RefreshIntegrationRuntimeObjectMetadataAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.SsisObjectMetadataStatusResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Refresh a SSIS integration runtime object metadata.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/refreshObjectMetadata
            Operation Id: IntegrationRuntimeObjectMetadata_Refresh
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegenerateAuthKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeAuthKeys&gt; RegenerateAuthKey (Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeRegenerateKeyContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeAuthKeys&gt; RegenerateAuthKey(class Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeRegenerateKeyContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.RegenerateAuthKey(Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeRegenerateKeyContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RegenerateAuthKey (content As IntegrationRuntimeRegenerateKeyContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IntegrationRuntimeAuthKeys)" />
      <MemberSignature Language="F#" Value="abstract member RegenerateAuthKey : Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeRegenerateKeyContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeAuthKeys&gt;&#xA;override this.RegenerateAuthKey : Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeRegenerateKeyContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeAuthKeys&gt;" Usage="factoryIntegrationRuntimeResource.RegenerateAuthKey (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeAuthKeys&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeRegenerateKeyContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The parameters for regenerating integration runtime authentication key. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Regenerates the authentication key for an integration runtime.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/regenerateAuthKey
            Operation Id: IntegrationRuntimes_RegenerateAuthKey
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RegenerateAuthKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeAuthKeys&gt;&gt; RegenerateAuthKeyAsync (Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeRegenerateKeyContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeAuthKeys&gt;&gt; RegenerateAuthKeyAsync(class Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeRegenerateKeyContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.RegenerateAuthKeyAsync(Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeRegenerateKeyContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RegenerateAuthKeyAsync (content As IntegrationRuntimeRegenerateKeyContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IntegrationRuntimeAuthKeys))" />
      <MemberSignature Language="F#" Value="abstract member RegenerateAuthKeyAsync : Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeRegenerateKeyContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeAuthKeys&gt;&gt;&#xA;override this.RegenerateAuthKeyAsync : Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeRegenerateKeyContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeAuthKeys&gt;&gt;" Usage="factoryIntegrationRuntimeResource.RegenerateAuthKeyAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeAuthKeys&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeRegenerateKeyContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The parameters for regenerating integration runtime authentication key. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Regenerates the authentication key for an integration runtime.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/regenerateAuthKey
            Operation Id: IntegrationRuntimes_RegenerateAuthKey
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveLinks">
      <MemberSignature Language="C#" Value="public virtual Azure.Response RemoveLinks (Azure.ResourceManager.DataFactory.Models.LinkedIntegrationRuntimeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response RemoveLinks(class Azure.ResourceManager.DataFactory.Models.LinkedIntegrationRuntimeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.RemoveLinks(Azure.ResourceManager.DataFactory.Models.LinkedIntegrationRuntimeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveLinks (content As LinkedIntegrationRuntimeContent, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member RemoveLinks : Azure.ResourceManager.DataFactory.Models.LinkedIntegrationRuntimeContent * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.RemoveLinks : Azure.ResourceManager.DataFactory.Models.LinkedIntegrationRuntimeContent * System.Threading.CancellationToken -&gt; Azure.Response" Usage="factoryIntegrationRuntimeResource.RemoveLinks (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.LinkedIntegrationRuntimeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The data factory name for the linked integration runtime. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Remove all linked integration runtimes under specific data factory in a self-hosted integration runtime.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/removeLinks
            Operation Id: IntegrationRuntimes_RemoveLinks
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveLinksAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; RemoveLinksAsync (Azure.ResourceManager.DataFactory.Models.LinkedIntegrationRuntimeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; RemoveLinksAsync(class Azure.ResourceManager.DataFactory.Models.LinkedIntegrationRuntimeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.RemoveLinksAsync(Azure.ResourceManager.DataFactory.Models.LinkedIntegrationRuntimeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveLinksAsync (content As LinkedIntegrationRuntimeContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member RemoveLinksAsync : Azure.ResourceManager.DataFactory.Models.LinkedIntegrationRuntimeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.RemoveLinksAsync : Azure.ResourceManager.DataFactory.Models.LinkedIntegrationRuntimeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="factoryIntegrationRuntimeResource.RemoveLinksAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.LinkedIntegrationRuntimeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The data factory name for the linked integration runtime. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Remove all linked integration runtimes under specific data factory in a self-hosted integration runtime.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/removeLinks
            Operation Id: IntegrationRuntimes_RemoveLinks
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt; Start (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt; Start(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.Start(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Start (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of IntegrationRuntimeStatusResult)" />
      <MemberSignature Language="F#" Value="abstract member Start : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt;&#xA;override this.Start : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt;" Usage="factoryIntegrationRuntimeResource.Start (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Starts a ManagedReserved type integration runtime.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/start
            Operation Id: IntegrationRuntimes_Start
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt;&gt; StartAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt;&gt; StartAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.StartAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of IntegrationRuntimeStatusResult))" />
      <MemberSignature Language="F#" Value="abstract member StartAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt;&gt;&#xA;override this.StartAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt;&gt;" Usage="factoryIntegrationRuntimeResource.StartAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.IntegrationRuntimeStatusResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Starts a ManagedReserved type integration runtime.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/start
            Operation Id: IntegrationRuntimes_Start
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Stop (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Stop(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.Stop(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Stop (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Stop : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Stop : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="factoryIntegrationRuntimeResource.Stop (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Stops a ManagedReserved type integration runtime.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/stop
            Operation Id: IntegrationRuntimes_Stop
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; StopAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; StopAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.StopAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StopAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member StopAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.StopAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="factoryIntegrationRuntimeResource.StopAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Stops a ManagedReserved type integration runtime.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/stop
            Operation Id: IntegrationRuntimes_Stop
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncCredentials">
      <MemberSignature Language="C#" Value="public virtual Azure.Response SyncCredentials (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response SyncCredentials(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.SyncCredentials(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SyncCredentials (Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member SyncCredentials : System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.SyncCredentials : System.Threading.CancellationToken -&gt; Azure.Response" Usage="factoryIntegrationRuntimeResource.SyncCredentials cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Force the integration runtime to synchronize credentials across integration runtime nodes, and this will override the credentials across all worker nodes with those available on the dispatcher node. If you already have the latest credential backup file, you should manually import it (preferred) on any self-hosted integration runtime node than using this API directly.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/syncCredentials
            Operation Id: IntegrationRuntimes_SyncCredentials
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncCredentialsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SyncCredentialsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SyncCredentialsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.SyncCredentialsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SyncCredentialsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member SyncCredentialsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SyncCredentialsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="factoryIntegrationRuntimeResource.SyncCredentialsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Force the integration runtime to synchronize credentials across integration runtime nodes, and this will override the credentials across all worker nodes with those available on the dispatcher node. If you already have the latest credential backup file, you should manually import it (preferred) on any self-hosted integration runtime node than using this API directly.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/syncCredentials
            Operation Id: IntegrationRuntimes_SyncCredentials
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource&gt; Update (Azure.ResourceManager.DataFactory.Models.FactoryIntegrationRuntimePatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource&gt; Update(class Azure.ResourceManager.DataFactory.Models.FactoryIntegrationRuntimePatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.Update(Azure.ResourceManager.DataFactory.Models.FactoryIntegrationRuntimePatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (patch As FactoryIntegrationRuntimePatch, Optional cancellationToken As CancellationToken = Nothing) As Response(Of FactoryIntegrationRuntimeResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.ResourceManager.DataFactory.Models.FactoryIntegrationRuntimePatch * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource&gt;&#xA;override this.Update : Azure.ResourceManager.DataFactory.Models.FactoryIntegrationRuntimePatch * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource&gt;" Usage="factoryIntegrationRuntimeResource.Update (patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patch" Type="Azure.ResourceManager.DataFactory.Models.FactoryIntegrationRuntimePatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="patch"> The parameters for updating an integration runtime. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates an integration runtime.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}
            Operation Id: IntegrationRuntimes_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource&gt;&gt; UpdateAsync (Azure.ResourceManager.DataFactory.Models.FactoryIntegrationRuntimePatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource&gt;&gt; UpdateAsync(class Azure.ResourceManager.DataFactory.Models.FactoryIntegrationRuntimePatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.UpdateAsync(Azure.ResourceManager.DataFactory.Models.FactoryIntegrationRuntimePatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (patch As FactoryIntegrationRuntimePatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of FactoryIntegrationRuntimeResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.ResourceManager.DataFactory.Models.FactoryIntegrationRuntimePatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.ResourceManager.DataFactory.Models.FactoryIntegrationRuntimePatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource&gt;&gt;" Usage="factoryIntegrationRuntimeResource.UpdateAsync (patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patch" Type="Azure.ResourceManager.DataFactory.Models.FactoryIntegrationRuntimePatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="patch"> The parameters for updating an integration runtime. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates an integration runtime.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}
            Operation Id: IntegrationRuntimes_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateIntegrationRuntimeNode">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.SelfHostedIntegrationRuntimeNode&gt; UpdateIntegrationRuntimeNode (string nodeName, Azure.ResourceManager.DataFactory.Models.UpdateIntegrationRuntimeNodeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.SelfHostedIntegrationRuntimeNode&gt; UpdateIntegrationRuntimeNode(string nodeName, class Azure.ResourceManager.DataFactory.Models.UpdateIntegrationRuntimeNodeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.UpdateIntegrationRuntimeNode(System.String,Azure.ResourceManager.DataFactory.Models.UpdateIntegrationRuntimeNodeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateIntegrationRuntimeNode (nodeName As String, content As UpdateIntegrationRuntimeNodeContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SelfHostedIntegrationRuntimeNode)" />
      <MemberSignature Language="F#" Value="abstract member UpdateIntegrationRuntimeNode : string * Azure.ResourceManager.DataFactory.Models.UpdateIntegrationRuntimeNodeContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.SelfHostedIntegrationRuntimeNode&gt;&#xA;override this.UpdateIntegrationRuntimeNode : string * Azure.ResourceManager.DataFactory.Models.UpdateIntegrationRuntimeNodeContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.SelfHostedIntegrationRuntimeNode&gt;" Usage="factoryIntegrationRuntimeResource.UpdateIntegrationRuntimeNode (nodeName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.SelfHostedIntegrationRuntimeNode&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.UpdateIntegrationRuntimeNodeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nodeName"> The integration runtime node name. </param>
        <param name="content"> The parameters for updating an integration runtime node. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a self-hosted integration runtime node.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}
            Operation Id: IntegrationRuntimeNodes_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="nodeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nodeName" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateIntegrationRuntimeNodeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.SelfHostedIntegrationRuntimeNode&gt;&gt; UpdateIntegrationRuntimeNodeAsync (string nodeName, Azure.ResourceManager.DataFactory.Models.UpdateIntegrationRuntimeNodeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.SelfHostedIntegrationRuntimeNode&gt;&gt; UpdateIntegrationRuntimeNodeAsync(string nodeName, class Azure.ResourceManager.DataFactory.Models.UpdateIntegrationRuntimeNodeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.UpdateIntegrationRuntimeNodeAsync(System.String,Azure.ResourceManager.DataFactory.Models.UpdateIntegrationRuntimeNodeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateIntegrationRuntimeNodeAsync (nodeName As String, content As UpdateIntegrationRuntimeNodeContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SelfHostedIntegrationRuntimeNode))" />
      <MemberSignature Language="F#" Value="abstract member UpdateIntegrationRuntimeNodeAsync : string * Azure.ResourceManager.DataFactory.Models.UpdateIntegrationRuntimeNodeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.SelfHostedIntegrationRuntimeNode&gt;&gt;&#xA;override this.UpdateIntegrationRuntimeNodeAsync : string * Azure.ResourceManager.DataFactory.Models.UpdateIntegrationRuntimeNodeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.SelfHostedIntegrationRuntimeNode&gt;&gt;" Usage="factoryIntegrationRuntimeResource.UpdateIntegrationRuntimeNodeAsync (nodeName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.SelfHostedIntegrationRuntimeNode&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.UpdateIntegrationRuntimeNodeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nodeName"> The integration runtime node name. </param>
        <param name="content"> The parameters for updating an integration runtime node. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a self-hosted integration runtime node.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}
            Operation Id: IntegrationRuntimeNodes_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="nodeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nodeName" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Upgrade (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Upgrade(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.Upgrade(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Upgrade (Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.Upgrade : System.Threading.CancellationToken -&gt; Azure.Response" Usage="factoryIntegrationRuntimeResource.Upgrade cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Upgrade self-hosted integration runtime to latest version if availability.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/upgrade
            Operation Id: IntegrationRuntimes_Upgrade
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpgradeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; UpgradeAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; UpgradeAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.FactoryIntegrationRuntimeResource.UpgradeAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpgradeAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member UpgradeAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.UpgradeAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="factoryIntegrationRuntimeResource.UpgradeAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Upgrade self-hosted integration runtime to latest version if availability.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/upgrade
            Operation Id: IntegrationRuntimes_Upgrade
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
