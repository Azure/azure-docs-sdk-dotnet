<Type Name="DataFactoryResource" FullName="Azure.ResourceManager.DataFactory.DataFactoryResource">
  <TypeSignature Language="C#" Value="public class DataFactoryResource : Azure.ResourceManager.ArmResource, System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataFactoryResource extends Azure.ResourceManager.ArmResource implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryData&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryData&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.DataFactoryResource" />
  <TypeSignature Language="VB.NET" Value="Public Class DataFactoryResource&#xA;Inherits ArmResource&#xA;Implements IJsonModel(Of DataFactoryData), IPersistableModel(Of DataFactoryData)" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type DataFactoryResource = class&#xA;    inherit ArmResource&#xA;    interface IJsonModel&lt;DataFactoryData&gt;&#xA;    interface IPersistableModel&lt;DataFactoryData&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class DataFactoryResource : Azure.ResourceManager.ArmResource" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataFactoryResource extends Azure.ResourceManager.ArmResource" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class DataFactoryResource&#xA;Inherits ArmResource" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type DataFactoryResource = class&#xA;    inherit ArmResource" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A Class representing a DataFactory along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetDataFactoryResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetDataFactory method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataFactoryResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDataFlowToDebugSession">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowStartDebugSessionResult&gt; AddDataFlowToDebugSession (Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugPackageContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowStartDebugSessionResult&gt; AddDataFlowToDebugSession(class Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugPackageContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.AddDataFlowToDebugSession(Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugPackageContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddDataFlowToDebugSession (content As DataFactoryDataFlowDebugPackageContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataFactoryDataFlowStartDebugSessionResult)" />
      <MemberSignature Language="F#" Value="abstract member AddDataFlowToDebugSession : Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugPackageContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowStartDebugSessionResult&gt;&#xA;override this.AddDataFlowToDebugSession : Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugPackageContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowStartDebugSessionResult&gt;" Usage="dataFactoryResource.AddDataFlowToDebugSession (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowStartDebugSessionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugPackageContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Data flow debug session definition with debug content. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a data flow into debug session.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/addDataFlowToDebugSession</description></item><item><term>Operation Id</term><description>DataFlowDebugSession_AddDataFlow</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddDataFlowToDebugSessionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowStartDebugSessionResult&gt;&gt; AddDataFlowToDebugSessionAsync (Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugPackageContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowStartDebugSessionResult&gt;&gt; AddDataFlowToDebugSessionAsync(class Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugPackageContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.AddDataFlowToDebugSessionAsync(Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugPackageContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddDataFlowToDebugSessionAsync (content As DataFactoryDataFlowDebugPackageContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataFactoryDataFlowStartDebugSessionResult))" />
      <MemberSignature Language="F#" Value="abstract member AddDataFlowToDebugSessionAsync : Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugPackageContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowStartDebugSessionResult&gt;&gt;&#xA;override this.AddDataFlowToDebugSessionAsync : Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugPackageContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowStartDebugSessionResult&gt;&gt;" Usage="dataFactoryResource.AddDataFlowToDebugSessionAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowStartDebugSessionResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugPackageContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Data flow debug session definition with debug content. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a data flow into debug session.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/addDataFlowToDebugSession</description></item><item><term>Operation Id</term><description>DataFlowDebugSession_AddDataFlow</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt; AddTag (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryResource&gt; AddTag(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.AddTag(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTag (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataFactoryResource)" />
      <MemberSignature Language="F#" Value="abstract member AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&#xA;override this.AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;" Usage="dataFactoryResource.AddTag (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}</description></item><item><term>Operation Id</term><description>Factories_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt; AddTagAsync (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt; AddTagAsync(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTagAsync (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataFactoryResource))" />
      <MemberSignature Language="F#" Value="abstract member AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt;&#xA;override this.AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt;" Usage="dataFactoryResource.AddTagAsync (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}</description></item><item><term>Operation Id</term><description>Factories_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CancelPipelineRun">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CancelPipelineRun (string runId, bool? isRecursive = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CancelPipelineRun(string runId, valuetype System.Nullable`1&lt;bool&gt; isRecursive, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.CancelPipelineRun(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelPipelineRun (runId As String, Optional isRecursive As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CancelPipelineRun : string * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.CancelPipelineRun : string * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Response" Usage="dataFactoryResource.CancelPipelineRun (runId, isRecursive, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="isRecursive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="runId"> The pipeline run identifier. </param>
        <param name="isRecursive"> If true, cancel all the Child pipelines that are triggered by the current pipeline. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Cancel a pipeline run by its run ID.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns/{runId}/cancel</description></item><item><term>Operation Id</term><description>PipelineRuns_Cancel</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="runId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="runId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CancelPipelineRunAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CancelPipelineRunAsync (string runId, bool? isRecursive = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CancelPipelineRunAsync(string runId, valuetype System.Nullable`1&lt;bool&gt; isRecursive, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.CancelPipelineRunAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelPipelineRunAsync (runId As String, Optional isRecursive As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CancelPipelineRunAsync : string * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CancelPipelineRunAsync : string * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="dataFactoryResource.CancelPipelineRunAsync (runId, isRecursive, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="isRecursive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="runId"> The pipeline run identifier. </param>
        <param name="isRecursive"> If true, cancel all the Child pipelines that are triggered by the current pipeline. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Cancel a pipeline run by its run ID.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns/{runId}/cancel</description></item><item><term>Operation Id</term><description>PipelineRuns_Cancel</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="runId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="runId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDataFlowDebugSession">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowCreateDebugSessionResult&gt; CreateDataFlowDebugSession (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugSessionContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowCreateDebugSessionResult&gt; CreateDataFlowDebugSession(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugSessionContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.CreateDataFlowDebugSession(Azure.WaitUntil,Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugSessionContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDataFlowDebugSession (waitUntil As WaitUntil, content As DataFactoryDataFlowDebugSessionContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of DataFactoryDataFlowCreateDebugSessionResult)" />
      <MemberSignature Language="F#" Value="abstract member CreateDataFlowDebugSession : Azure.WaitUntil * Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugSessionContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowCreateDebugSessionResult&gt;&#xA;override this.CreateDataFlowDebugSession : Azure.WaitUntil * Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugSessionContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowCreateDebugSessionResult&gt;" Usage="dataFactoryResource.CreateDataFlowDebugSession (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowCreateDebugSessionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugSessionContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Data flow debug session definition. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates a data flow debug session.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/createDataFlowDebugSession</description></item><item><term>Operation Id</term><description>DataFlowDebugSession_Create</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDataFlowDebugSessionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowCreateDebugSessionResult&gt;&gt; CreateDataFlowDebugSessionAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugSessionContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowCreateDebugSessionResult&gt;&gt; CreateDataFlowDebugSessionAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugSessionContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.CreateDataFlowDebugSessionAsync(Azure.WaitUntil,Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugSessionContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDataFlowDebugSessionAsync (waitUntil As WaitUntil, content As DataFactoryDataFlowDebugSessionContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of DataFactoryDataFlowCreateDebugSessionResult))" />
      <MemberSignature Language="F#" Value="abstract member CreateDataFlowDebugSessionAsync : Azure.WaitUntil * Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugSessionContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowCreateDebugSessionResult&gt;&gt;&#xA;override this.CreateDataFlowDebugSessionAsync : Azure.WaitUntil * Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugSessionContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowCreateDebugSessionResult&gt;&gt;" Usage="dataFactoryResource.CreateDataFlowDebugSessionAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowCreateDebugSessionResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugSessionContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Data flow debug session definition. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates a data flow debug session.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/createDataFlowDebugSession</description></item><item><term>Operation Id</term><description>DataFlowDebugSession_Create</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string factoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string factoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.CreateResourceIdentifier(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, factoryName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.DataFactory.DataFactoryResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, factoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="factoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId"> The subscriptionId. </param>
        <param name="resourceGroupName"> The resourceGroupName. </param>
        <param name="factoryName"> The factoryName. </param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataFactory.DataFactoryData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataFactory.DataFactoryData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.DataFactoryResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As DataFactoryData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.DataFactory.DataFactoryData" Usage="Azure.ResourceManager.DataFactory.DataFactoryResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.DataFactoryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="dataFactoryResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a factory.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}</description></item><item><term>Operation Id</term><description>Factories_Delete</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="dataFactoryResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a factory.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}</description></item><item><term>Operation Id</term><description>Factories_Delete</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDataFlowDebugSession">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteDataFlowDebugSession (Azure.ResourceManager.DataFactory.Models.DeleteDataFlowDebugSessionContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteDataFlowDebugSession(class Azure.ResourceManager.DataFactory.Models.DeleteDataFlowDebugSessionContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.DeleteDataFlowDebugSession(Azure.ResourceManager.DataFactory.Models.DeleteDataFlowDebugSessionContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteDataFlowDebugSession (content As DeleteDataFlowDebugSessionContent, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteDataFlowDebugSession : Azure.ResourceManager.DataFactory.Models.DeleteDataFlowDebugSessionContent * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteDataFlowDebugSession : Azure.ResourceManager.DataFactory.Models.DeleteDataFlowDebugSessionContent * System.Threading.CancellationToken -&gt; Azure.Response" Usage="dataFactoryResource.DeleteDataFlowDebugSession (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.DeleteDataFlowDebugSessionContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Data flow debug session definition for deletion. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a data flow debug session.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/deleteDataFlowDebugSession</description></item><item><term>Operation Id</term><description>DataFlowDebugSession_Delete</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteDataFlowDebugSessionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteDataFlowDebugSessionAsync (Azure.ResourceManager.DataFactory.Models.DeleteDataFlowDebugSessionContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteDataFlowDebugSessionAsync(class Azure.ResourceManager.DataFactory.Models.DeleteDataFlowDebugSessionContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.DeleteDataFlowDebugSessionAsync(Azure.ResourceManager.DataFactory.Models.DeleteDataFlowDebugSessionContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteDataFlowDebugSessionAsync (content As DeleteDataFlowDebugSessionContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteDataFlowDebugSessionAsync : Azure.ResourceManager.DataFactory.Models.DeleteDataFlowDebugSessionContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteDataFlowDebugSessionAsync : Azure.ResourceManager.DataFactory.Models.DeleteDataFlowDebugSessionContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="dataFactoryResource.DeleteDataFlowDebugSessionAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.DeleteDataFlowDebugSessionContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Data flow debug session definition for deletion. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a data flow debug session.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/deleteDataFlowDebugSession</description></item><item><term>Operation Id</term><description>DataFlowDebugSession_Delete</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDataFlowDebugSessionCommand">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugCommandResult&gt; ExecuteDataFlowDebugSessionCommand (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataFactory.Models.DataFlowDebugCommandContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugCommandResult&gt; ExecuteDataFlowDebugSessionCommand(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataFactory.Models.DataFlowDebugCommandContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.ExecuteDataFlowDebugSessionCommand(Azure.WaitUntil,Azure.ResourceManager.DataFactory.Models.DataFlowDebugCommandContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteDataFlowDebugSessionCommand (waitUntil As WaitUntil, content As DataFlowDebugCommandContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of DataFactoryDataFlowDebugCommandResult)" />
      <MemberSignature Language="F#" Value="abstract member ExecuteDataFlowDebugSessionCommand : Azure.WaitUntil * Azure.ResourceManager.DataFactory.Models.DataFlowDebugCommandContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugCommandResult&gt;&#xA;override this.ExecuteDataFlowDebugSessionCommand : Azure.WaitUntil * Azure.ResourceManager.DataFactory.Models.DataFlowDebugCommandContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugCommandResult&gt;" Usage="dataFactoryResource.ExecuteDataFlowDebugSessionCommand (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugCommandResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.DataFlowDebugCommandContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Data flow debug command definition. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Execute a data flow debug command.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/executeDataFlowDebugCommand</description></item><item><term>Operation Id</term><description>DataFlowDebugSession_ExecuteCommand</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDataFlowDebugSessionCommandAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugCommandResult&gt;&gt; ExecuteDataFlowDebugSessionCommandAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataFactory.Models.DataFlowDebugCommandContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugCommandResult&gt;&gt; ExecuteDataFlowDebugSessionCommandAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataFactory.Models.DataFlowDebugCommandContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.ExecuteDataFlowDebugSessionCommandAsync(Azure.WaitUntil,Azure.ResourceManager.DataFactory.Models.DataFlowDebugCommandContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteDataFlowDebugSessionCommandAsync (waitUntil As WaitUntil, content As DataFlowDebugCommandContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of DataFactoryDataFlowDebugCommandResult))" />
      <MemberSignature Language="F#" Value="abstract member ExecuteDataFlowDebugSessionCommandAsync : Azure.WaitUntil * Azure.ResourceManager.DataFactory.Models.DataFlowDebugCommandContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugCommandResult&gt;&gt;&#xA;override this.ExecuteDataFlowDebugSessionCommandAsync : Azure.WaitUntil * Azure.ResourceManager.DataFactory.Models.DataFlowDebugCommandContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugCommandResult&gt;&gt;" Usage="dataFactoryResource.ExecuteDataFlowDebugSessionCommandAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowDebugCommandResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.DataFlowDebugCommandContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Data flow debug command definition. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Execute a data flow debug command.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/executeDataFlowDebugCommand</description></item><item><term>Operation Id</term><description>DataFlowDebugSession_ExecuteCommand</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt; Get (string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryResource&gt; Get(string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.Get(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataFactoryResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&#xA;override this.Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;" Usage="dataFactoryResource.Get (ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ifNoneMatch"> ETag of the factory entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a factory.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}</description></item><item><term>Operation Id</term><description>Factories_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActivityRun">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.PipelineActivityRunInformation&gt; GetActivityRun (string runId, Azure.ResourceManager.DataFactory.Models.RunFilterContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataFactory.Models.PipelineActivityRunInformation&gt; GetActivityRun(string runId, class Azure.ResourceManager.DataFactory.Models.RunFilterContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetActivityRun(System.String,Azure.ResourceManager.DataFactory.Models.RunFilterContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetActivityRun (runId As String, content As RunFilterContent, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PipelineActivityRunInformation)" />
      <MemberSignature Language="F#" Value="abstract member GetActivityRun : string * Azure.ResourceManager.DataFactory.Models.RunFilterContent * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.PipelineActivityRunInformation&gt;&#xA;override this.GetActivityRun : string * Azure.ResourceManager.DataFactory.Models.RunFilterContent * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.PipelineActivityRunInformation&gt;" Usage="dataFactoryResource.GetActivityRun (runId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.PipelineActivityRunInformation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.RunFilterContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="runId"> The pipeline run identifier. </param>
        <param name="content"> Parameters to filter the activity runs. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Query activity runs based on input filter conditions.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns/{runId}/queryActivityruns</description></item><item><term>Operation Id</term><description>ActivityRuns_QueryByPipelineRun</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataFactory.Models.PipelineActivityRunInformation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="runId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="runId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetActivityRunAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.PipelineActivityRunInformation&gt; GetActivityRunAsync (string runId, Azure.ResourceManager.DataFactory.Models.RunFilterContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataFactory.Models.PipelineActivityRunInformation&gt; GetActivityRunAsync(string runId, class Azure.ResourceManager.DataFactory.Models.RunFilterContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetActivityRunAsync(System.String,Azure.ResourceManager.DataFactory.Models.RunFilterContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetActivityRunAsync (runId As String, content As RunFilterContent, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PipelineActivityRunInformation)" />
      <MemberSignature Language="F#" Value="abstract member GetActivityRunAsync : string * Azure.ResourceManager.DataFactory.Models.RunFilterContent * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.PipelineActivityRunInformation&gt;&#xA;override this.GetActivityRunAsync : string * Azure.ResourceManager.DataFactory.Models.RunFilterContent * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.PipelineActivityRunInformation&gt;" Usage="dataFactoryResource.GetActivityRunAsync (runId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.PipelineActivityRunInformation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.RunFilterContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="runId"> The pipeline run identifier. </param>
        <param name="content"> Parameters to filter the activity runs. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Query activity runs based on input filter conditions.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns/{runId}/queryActivityruns</description></item><item><term>Operation Id</term><description>ActivityRuns_QueryByPipelineRun</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataFactory.Models.PipelineActivityRunInformation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="runId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="runId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt; GetAsync (string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt; GetAsync(string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataFactoryResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt;&#xA;override this.GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt;" Usage="dataFactoryResource.GetAsync (ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ifNoneMatch"> ETag of the factory entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a factory.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}</description></item><item><term>Operation Id</term><description>Factories_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryChangeDataCapture">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryChangeDataCaptureResource&gt; GetDataFactoryChangeDataCapture (string changeDataCaptureName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryChangeDataCaptureResource&gt; GetDataFactoryChangeDataCapture(string changeDataCaptureName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryChangeDataCapture(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryChangeDataCapture (changeDataCaptureName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataFactoryChangeDataCaptureResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryChangeDataCapture : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryChangeDataCaptureResource&gt;&#xA;override this.GetDataFactoryChangeDataCapture : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryChangeDataCaptureResource&gt;" Usage="dataFactoryResource.GetDataFactoryChangeDataCapture (changeDataCaptureName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryChangeDataCaptureResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeDataCaptureName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="changeDataCaptureName"> The change data capture name. </param>
        <param name="ifNoneMatch"> ETag of the change data capture entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a change data capture.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/adfcdcs/{changeDataCaptureName}</description></item><item><term>Operation Id</term><description>ChangeDataCapture_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryChangeDataCaptureResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="changeDataCaptureName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="changeDataCaptureName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryChangeDataCaptureAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryChangeDataCaptureResource&gt;&gt; GetDataFactoryChangeDataCaptureAsync (string changeDataCaptureName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryChangeDataCaptureResource&gt;&gt; GetDataFactoryChangeDataCaptureAsync(string changeDataCaptureName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryChangeDataCaptureAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryChangeDataCaptureAsync (changeDataCaptureName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataFactoryChangeDataCaptureResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryChangeDataCaptureAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryChangeDataCaptureResource&gt;&gt;&#xA;override this.GetDataFactoryChangeDataCaptureAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryChangeDataCaptureResource&gt;&gt;" Usage="dataFactoryResource.GetDataFactoryChangeDataCaptureAsync (changeDataCaptureName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryChangeDataCaptureResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeDataCaptureName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="changeDataCaptureName"> The change data capture name. </param>
        <param name="ifNoneMatch"> ETag of the change data capture entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a change data capture.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/adfcdcs/{changeDataCaptureName}</description></item><item><term>Operation Id</term><description>ChangeDataCapture_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryChangeDataCaptureResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="changeDataCaptureName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="changeDataCaptureName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryChangeDataCaptures">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataFactory.DataFactoryChangeDataCaptureCollection GetDataFactoryChangeDataCaptures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.DataFactoryChangeDataCaptureCollection GetDataFactoryChangeDataCaptures() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryChangeDataCaptures" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryChangeDataCaptures () As DataFactoryChangeDataCaptureCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryChangeDataCaptures : unit -&gt; Azure.ResourceManager.DataFactory.DataFactoryChangeDataCaptureCollection&#xA;override this.GetDataFactoryChangeDataCaptures : unit -&gt; Azure.ResourceManager.DataFactory.DataFactoryChangeDataCaptureCollection" Usage="dataFactoryResource.GetDataFactoryChangeDataCaptures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.DataFactoryChangeDataCaptureCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataFactoryChangeDataCaptureResources in the DataFactory. </summary>
        <returns> An object representing collection of DataFactoryChangeDataCaptureResources and their operations over a DataFactoryChangeDataCaptureResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryDataFlow">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryDataFlowResource&gt; GetDataFactoryDataFlow (string dataFlowName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryDataFlowResource&gt; GetDataFactoryDataFlow(string dataFlowName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryDataFlow(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryDataFlow (dataFlowName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataFactoryDataFlowResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryDataFlow : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryDataFlowResource&gt;&#xA;override this.GetDataFactoryDataFlow : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryDataFlowResource&gt;" Usage="dataFactoryResource.GetDataFactoryDataFlow (dataFlowName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryDataFlowResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataFlowName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataFlowName"> The data flow name. </param>
        <param name="ifNoneMatch"> ETag of the data flow entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a data flow.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/dataflows/{dataFlowName}</description></item><item><term>Operation Id</term><description>DataFlows_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryDataFlowResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataFlowName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataFlowName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryDataFlowAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryDataFlowResource&gt;&gt; GetDataFactoryDataFlowAsync (string dataFlowName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryDataFlowResource&gt;&gt; GetDataFactoryDataFlowAsync(string dataFlowName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryDataFlowAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryDataFlowAsync (dataFlowName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataFactoryDataFlowResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryDataFlowAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryDataFlowResource&gt;&gt;&#xA;override this.GetDataFactoryDataFlowAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryDataFlowResource&gt;&gt;" Usage="dataFactoryResource.GetDataFactoryDataFlowAsync (dataFlowName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryDataFlowResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataFlowName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataFlowName"> The data flow name. </param>
        <param name="ifNoneMatch"> ETag of the data flow entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a data flow.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/dataflows/{dataFlowName}</description></item><item><term>Operation Id</term><description>DataFlows_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryDataFlowResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataFlowName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataFlowName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryDataFlows">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataFactory.DataFactoryDataFlowCollection GetDataFactoryDataFlows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.DataFactoryDataFlowCollection GetDataFactoryDataFlows() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryDataFlows" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryDataFlows () As DataFactoryDataFlowCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryDataFlows : unit -&gt; Azure.ResourceManager.DataFactory.DataFactoryDataFlowCollection&#xA;override this.GetDataFactoryDataFlows : unit -&gt; Azure.ResourceManager.DataFactory.DataFactoryDataFlowCollection" Usage="dataFactoryResource.GetDataFactoryDataFlows " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.DataFactoryDataFlowCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataFactoryDataFlowResources in the DataFactory. </summary>
        <returns> An object representing collection of DataFactoryDataFlowResources and their operations over a DataFactoryDataFlowResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryDataset">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryDatasetResource&gt; GetDataFactoryDataset (string datasetName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryDatasetResource&gt; GetDataFactoryDataset(string datasetName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryDataset(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryDataset (datasetName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataFactoryDatasetResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryDataset : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryDatasetResource&gt;&#xA;override this.GetDataFactoryDataset : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryDatasetResource&gt;" Usage="dataFactoryResource.GetDataFactoryDataset (datasetName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryDatasetResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datasetName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="datasetName"> The dataset name. </param>
        <param name="ifNoneMatch"> ETag of the dataset entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a dataset.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/datasets/{datasetName}</description></item><item><term>Operation Id</term><description>Datasets_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryDatasetResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="datasetName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="datasetName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryDatasetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryDatasetResource&gt;&gt; GetDataFactoryDatasetAsync (string datasetName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryDatasetResource&gt;&gt; GetDataFactoryDatasetAsync(string datasetName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryDatasetAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryDatasetAsync (datasetName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataFactoryDatasetResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryDatasetAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryDatasetResource&gt;&gt;&#xA;override this.GetDataFactoryDatasetAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryDatasetResource&gt;&gt;" Usage="dataFactoryResource.GetDataFactoryDatasetAsync (datasetName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryDatasetResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datasetName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="datasetName"> The dataset name. </param>
        <param name="ifNoneMatch"> ETag of the dataset entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a dataset.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/datasets/{datasetName}</description></item><item><term>Operation Id</term><description>Datasets_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryDatasetResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="datasetName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="datasetName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryDatasets">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataFactory.DataFactoryDatasetCollection GetDataFactoryDatasets ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.DataFactoryDatasetCollection GetDataFactoryDatasets() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryDatasets" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryDatasets () As DataFactoryDatasetCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryDatasets : unit -&gt; Azure.ResourceManager.DataFactory.DataFactoryDatasetCollection&#xA;override this.GetDataFactoryDatasets : unit -&gt; Azure.ResourceManager.DataFactory.DataFactoryDatasetCollection" Usage="dataFactoryResource.GetDataFactoryDatasets " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.DataFactoryDatasetCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataFactoryDatasetResources in the DataFactory. </summary>
        <returns> An object representing collection of DataFactoryDatasetResources and their operations over a DataFactoryDatasetResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryGlobalParameter">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryGlobalParameterResource&gt; GetDataFactoryGlobalParameter (string globalParameterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryGlobalParameterResource&gt; GetDataFactoryGlobalParameter(string globalParameterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryGlobalParameter(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryGlobalParameter (globalParameterName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataFactoryGlobalParameterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryGlobalParameter : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryGlobalParameterResource&gt;&#xA;override this.GetDataFactoryGlobalParameter : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryGlobalParameterResource&gt;" Usage="dataFactoryResource.GetDataFactoryGlobalParameter (globalParameterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryGlobalParameterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="globalParameterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="globalParameterName"> The global parameter name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Global parameter
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/globalParameters/{globalParameterName}</description></item><item><term>Operation Id</term><description>GlobalParameters_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryGlobalParameterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="globalParameterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="globalParameterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryGlobalParameterAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryGlobalParameterResource&gt;&gt; GetDataFactoryGlobalParameterAsync (string globalParameterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryGlobalParameterResource&gt;&gt; GetDataFactoryGlobalParameterAsync(string globalParameterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryGlobalParameterAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryGlobalParameterAsync (globalParameterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataFactoryGlobalParameterResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryGlobalParameterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryGlobalParameterResource&gt;&gt;&#xA;override this.GetDataFactoryGlobalParameterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryGlobalParameterResource&gt;&gt;" Usage="dataFactoryResource.GetDataFactoryGlobalParameterAsync (globalParameterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryGlobalParameterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="globalParameterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="globalParameterName"> The global parameter name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Global parameter
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/globalParameters/{globalParameterName}</description></item><item><term>Operation Id</term><description>GlobalParameters_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryGlobalParameterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="globalParameterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="globalParameterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryGlobalParameters">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataFactory.DataFactoryGlobalParameterCollection GetDataFactoryGlobalParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.DataFactoryGlobalParameterCollection GetDataFactoryGlobalParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryGlobalParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryGlobalParameters () As DataFactoryGlobalParameterCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryGlobalParameters : unit -&gt; Azure.ResourceManager.DataFactory.DataFactoryGlobalParameterCollection&#xA;override this.GetDataFactoryGlobalParameters : unit -&gt; Azure.ResourceManager.DataFactory.DataFactoryGlobalParameterCollection" Usage="dataFactoryResource.GetDataFactoryGlobalParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.DataFactoryGlobalParameterCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataFactoryGlobalParameterResources in the DataFactory. </summary>
        <returns> An object representing collection of DataFactoryGlobalParameterResources and their operations over a DataFactoryGlobalParameterResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryIntegrationRuntime">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryIntegrationRuntimeResource&gt; GetDataFactoryIntegrationRuntime (string integrationRuntimeName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryIntegrationRuntimeResource&gt; GetDataFactoryIntegrationRuntime(string integrationRuntimeName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryIntegrationRuntime(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryIntegrationRuntime (integrationRuntimeName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataFactoryIntegrationRuntimeResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryIntegrationRuntime : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryIntegrationRuntimeResource&gt;&#xA;override this.GetDataFactoryIntegrationRuntime : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryIntegrationRuntimeResource&gt;" Usage="dataFactoryResource.GetDataFactoryIntegrationRuntime (integrationRuntimeName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryIntegrationRuntimeResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="integrationRuntimeName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="integrationRuntimeName"> The integration runtime name. </param>
        <param name="ifNoneMatch"> ETag of the integration runtime entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an integration runtime.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}</description></item><item><term>Operation Id</term><description>IntegrationRuntimes_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryIntegrationRuntimeResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="integrationRuntimeName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="integrationRuntimeName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryIntegrationRuntimeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryIntegrationRuntimeResource&gt;&gt; GetDataFactoryIntegrationRuntimeAsync (string integrationRuntimeName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryIntegrationRuntimeResource&gt;&gt; GetDataFactoryIntegrationRuntimeAsync(string integrationRuntimeName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryIntegrationRuntimeAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryIntegrationRuntimeAsync (integrationRuntimeName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataFactoryIntegrationRuntimeResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryIntegrationRuntimeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryIntegrationRuntimeResource&gt;&gt;&#xA;override this.GetDataFactoryIntegrationRuntimeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryIntegrationRuntimeResource&gt;&gt;" Usage="dataFactoryResource.GetDataFactoryIntegrationRuntimeAsync (integrationRuntimeName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryIntegrationRuntimeResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="integrationRuntimeName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="integrationRuntimeName"> The integration runtime name. </param>
        <param name="ifNoneMatch"> ETag of the integration runtime entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an integration runtime.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}</description></item><item><term>Operation Id</term><description>IntegrationRuntimes_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryIntegrationRuntimeResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="integrationRuntimeName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="integrationRuntimeName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryIntegrationRuntimes">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataFactory.DataFactoryIntegrationRuntimeCollection GetDataFactoryIntegrationRuntimes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.DataFactoryIntegrationRuntimeCollection GetDataFactoryIntegrationRuntimes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryIntegrationRuntimes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryIntegrationRuntimes () As DataFactoryIntegrationRuntimeCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryIntegrationRuntimes : unit -&gt; Azure.ResourceManager.DataFactory.DataFactoryIntegrationRuntimeCollection&#xA;override this.GetDataFactoryIntegrationRuntimes : unit -&gt; Azure.ResourceManager.DataFactory.DataFactoryIntegrationRuntimeCollection" Usage="dataFactoryResource.GetDataFactoryIntegrationRuntimes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.DataFactoryIntegrationRuntimeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataFactoryIntegrationRuntimeResources in the DataFactory. </summary>
        <returns> An object representing collection of DataFactoryIntegrationRuntimeResources and their operations over a DataFactoryIntegrationRuntimeResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryLinkedService">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryLinkedServiceResource&gt; GetDataFactoryLinkedService (string linkedServiceName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryLinkedServiceResource&gt; GetDataFactoryLinkedService(string linkedServiceName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryLinkedService(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryLinkedService (linkedServiceName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataFactoryLinkedServiceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryLinkedService : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryLinkedServiceResource&gt;&#xA;override this.GetDataFactoryLinkedService : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryLinkedServiceResource&gt;" Usage="dataFactoryResource.GetDataFactoryLinkedService (linkedServiceName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryLinkedServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkedServiceName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="linkedServiceName"> The linked service name. </param>
        <param name="ifNoneMatch"> ETag of the linked service entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a linked service.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/linkedservices/{linkedServiceName}</description></item><item><term>Operation Id</term><description>LinkedServices_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryLinkedServiceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="linkedServiceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="linkedServiceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryLinkedServiceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryLinkedServiceResource&gt;&gt; GetDataFactoryLinkedServiceAsync (string linkedServiceName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryLinkedServiceResource&gt;&gt; GetDataFactoryLinkedServiceAsync(string linkedServiceName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryLinkedServiceAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryLinkedServiceAsync (linkedServiceName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataFactoryLinkedServiceResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryLinkedServiceAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryLinkedServiceResource&gt;&gt;&#xA;override this.GetDataFactoryLinkedServiceAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryLinkedServiceResource&gt;&gt;" Usage="dataFactoryResource.GetDataFactoryLinkedServiceAsync (linkedServiceName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryLinkedServiceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkedServiceName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="linkedServiceName"> The linked service name. </param>
        <param name="ifNoneMatch"> ETag of the linked service entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a linked service.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/linkedservices/{linkedServiceName}</description></item><item><term>Operation Id</term><description>LinkedServices_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryLinkedServiceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="linkedServiceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="linkedServiceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryLinkedServices">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataFactory.DataFactoryLinkedServiceCollection GetDataFactoryLinkedServices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.DataFactoryLinkedServiceCollection GetDataFactoryLinkedServices() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryLinkedServices" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryLinkedServices () As DataFactoryLinkedServiceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryLinkedServices : unit -&gt; Azure.ResourceManager.DataFactory.DataFactoryLinkedServiceCollection&#xA;override this.GetDataFactoryLinkedServices : unit -&gt; Azure.ResourceManager.DataFactory.DataFactoryLinkedServiceCollection" Usage="dataFactoryResource.GetDataFactoryLinkedServices " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.DataFactoryLinkedServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataFactoryLinkedServiceResources in the DataFactory. </summary>
        <returns> An object representing collection of DataFactoryLinkedServiceResources and their operations over a DataFactoryLinkedServiceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryManagedIdentityCredential">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryManagedIdentityCredentialResource&gt; GetDataFactoryManagedIdentityCredential (string credentialName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryManagedIdentityCredentialResource&gt; GetDataFactoryManagedIdentityCredential(string credentialName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryManagedIdentityCredential(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryManagedIdentityCredential (credentialName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataFactoryManagedIdentityCredentialResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryManagedIdentityCredential : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryManagedIdentityCredentialResource&gt;&#xA;override this.GetDataFactoryManagedIdentityCredential : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryManagedIdentityCredentialResource&gt;" Usage="dataFactoryResource.GetDataFactoryManagedIdentityCredential (credentialName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryManagedIdentityCredentialResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credentialName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="credentialName"> Credential name. </param>
        <param name="ifNoneMatch"> ETag of the credential entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a credential.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/credentials/{credentialName}</description></item><item><term>Operation Id</term><description>CredentialOperations_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryManagedIdentityCredentialResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="credentialName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="credentialName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryManagedIdentityCredentialAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryManagedIdentityCredentialResource&gt;&gt; GetDataFactoryManagedIdentityCredentialAsync (string credentialName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryManagedIdentityCredentialResource&gt;&gt; GetDataFactoryManagedIdentityCredentialAsync(string credentialName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryManagedIdentityCredentialAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryManagedIdentityCredentialAsync (credentialName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataFactoryManagedIdentityCredentialResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryManagedIdentityCredentialAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryManagedIdentityCredentialResource&gt;&gt;&#xA;override this.GetDataFactoryManagedIdentityCredentialAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryManagedIdentityCredentialResource&gt;&gt;" Usage="dataFactoryResource.GetDataFactoryManagedIdentityCredentialAsync (credentialName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryManagedIdentityCredentialResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credentialName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="credentialName"> Credential name. </param>
        <param name="ifNoneMatch"> ETag of the credential entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a credential.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/credentials/{credentialName}</description></item><item><term>Operation Id</term><description>CredentialOperations_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryManagedIdentityCredentialResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="credentialName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="credentialName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryManagedIdentityCredentials">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataFactory.DataFactoryManagedIdentityCredentialCollection GetDataFactoryManagedIdentityCredentials ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.DataFactoryManagedIdentityCredentialCollection GetDataFactoryManagedIdentityCredentials() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryManagedIdentityCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryManagedIdentityCredentials () As DataFactoryManagedIdentityCredentialCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryManagedIdentityCredentials : unit -&gt; Azure.ResourceManager.DataFactory.DataFactoryManagedIdentityCredentialCollection&#xA;override this.GetDataFactoryManagedIdentityCredentials : unit -&gt; Azure.ResourceManager.DataFactory.DataFactoryManagedIdentityCredentialCollection" Usage="dataFactoryResource.GetDataFactoryManagedIdentityCredentials " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.DataFactoryManagedIdentityCredentialCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataFactoryManagedIdentityCredentialResources in the DataFactory. </summary>
        <returns> An object representing collection of DataFactoryManagedIdentityCredentialResources and their operations over a DataFactoryManagedIdentityCredentialResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryManagedVirtualNetwork">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryManagedVirtualNetworkResource&gt; GetDataFactoryManagedVirtualNetwork (string managedVirtualNetworkName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryManagedVirtualNetworkResource&gt; GetDataFactoryManagedVirtualNetwork(string managedVirtualNetworkName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryManagedVirtualNetwork(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryManagedVirtualNetwork (managedVirtualNetworkName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataFactoryManagedVirtualNetworkResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryManagedVirtualNetwork : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryManagedVirtualNetworkResource&gt;&#xA;override this.GetDataFactoryManagedVirtualNetwork : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryManagedVirtualNetworkResource&gt;" Usage="dataFactoryResource.GetDataFactoryManagedVirtualNetwork (managedVirtualNetworkName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryManagedVirtualNetworkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managedVirtualNetworkName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="managedVirtualNetworkName"> Managed virtual network name. </param>
        <param name="ifNoneMatch"> ETag of the managed Virtual Network entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed Virtual Network.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/managedVirtualNetworks/{managedVirtualNetworkName}</description></item><item><term>Operation Id</term><description>ManagedVirtualNetworks_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryManagedVirtualNetworkResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="managedVirtualNetworkName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="managedVirtualNetworkName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryManagedVirtualNetworkAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryManagedVirtualNetworkResource&gt;&gt; GetDataFactoryManagedVirtualNetworkAsync (string managedVirtualNetworkName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryManagedVirtualNetworkResource&gt;&gt; GetDataFactoryManagedVirtualNetworkAsync(string managedVirtualNetworkName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryManagedVirtualNetworkAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryManagedVirtualNetworkAsync (managedVirtualNetworkName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataFactoryManagedVirtualNetworkResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryManagedVirtualNetworkAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryManagedVirtualNetworkResource&gt;&gt;&#xA;override this.GetDataFactoryManagedVirtualNetworkAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryManagedVirtualNetworkResource&gt;&gt;" Usage="dataFactoryResource.GetDataFactoryManagedVirtualNetworkAsync (managedVirtualNetworkName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryManagedVirtualNetworkResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managedVirtualNetworkName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="managedVirtualNetworkName"> Managed virtual network name. </param>
        <param name="ifNoneMatch"> ETag of the managed Virtual Network entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed Virtual Network.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/managedVirtualNetworks/{managedVirtualNetworkName}</description></item><item><term>Operation Id</term><description>ManagedVirtualNetworks_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryManagedVirtualNetworkResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="managedVirtualNetworkName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="managedVirtualNetworkName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryManagedVirtualNetworks">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataFactory.DataFactoryManagedVirtualNetworkCollection GetDataFactoryManagedVirtualNetworks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.DataFactoryManagedVirtualNetworkCollection GetDataFactoryManagedVirtualNetworks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryManagedVirtualNetworks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryManagedVirtualNetworks () As DataFactoryManagedVirtualNetworkCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryManagedVirtualNetworks : unit -&gt; Azure.ResourceManager.DataFactory.DataFactoryManagedVirtualNetworkCollection&#xA;override this.GetDataFactoryManagedVirtualNetworks : unit -&gt; Azure.ResourceManager.DataFactory.DataFactoryManagedVirtualNetworkCollection" Usage="dataFactoryResource.GetDataFactoryManagedVirtualNetworks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.DataFactoryManagedVirtualNetworkCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataFactoryManagedVirtualNetworkResources in the DataFactory. </summary>
        <returns> An object representing collection of DataFactoryManagedVirtualNetworkResources and their operations over a DataFactoryManagedVirtualNetworkResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryPipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryPipelineResource&gt; GetDataFactoryPipeline (string pipelineName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryPipelineResource&gt; GetDataFactoryPipeline(string pipelineName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryPipeline(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryPipeline (pipelineName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataFactoryPipelineResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryPipeline : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryPipelineResource&gt;&#xA;override this.GetDataFactoryPipeline : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryPipelineResource&gt;" Usage="dataFactoryResource.GetDataFactoryPipeline (pipelineName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryPipelineResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipelineName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pipelineName"> The pipeline name. </param>
        <param name="ifNoneMatch"> ETag of the pipeline entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a pipeline.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelines/{pipelineName}</description></item><item><term>Operation Id</term><description>Pipelines_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryPipelineResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipelineName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipelineName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryPipelineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryPipelineResource&gt;&gt; GetDataFactoryPipelineAsync (string pipelineName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryPipelineResource&gt;&gt; GetDataFactoryPipelineAsync(string pipelineName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryPipelineAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryPipelineAsync (pipelineName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataFactoryPipelineResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryPipelineAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryPipelineResource&gt;&gt;&#xA;override this.GetDataFactoryPipelineAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryPipelineResource&gt;&gt;" Usage="dataFactoryResource.GetDataFactoryPipelineAsync (pipelineName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryPipelineResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipelineName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pipelineName"> The pipeline name. </param>
        <param name="ifNoneMatch"> ETag of the pipeline entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a pipeline.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelines/{pipelineName}</description></item><item><term>Operation Id</term><description>Pipelines_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryPipelineResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipelineName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipelineName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryPipelines">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataFactory.DataFactoryPipelineCollection GetDataFactoryPipelines ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.DataFactoryPipelineCollection GetDataFactoryPipelines() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryPipelines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryPipelines () As DataFactoryPipelineCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryPipelines : unit -&gt; Azure.ResourceManager.DataFactory.DataFactoryPipelineCollection&#xA;override this.GetDataFactoryPipelines : unit -&gt; Azure.ResourceManager.DataFactory.DataFactoryPipelineCollection" Usage="dataFactoryResource.GetDataFactoryPipelines " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.DataFactoryPipelineCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataFactoryPipelineResources in the DataFactory. </summary>
        <returns> An object representing collection of DataFactoryPipelineResources and their operations over a DataFactoryPipelineResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryPrivateEndpointConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryPrivateEndpointConnectionResource&gt; GetDataFactoryPrivateEndpointConnection (string privateEndpointConnectionName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryPrivateEndpointConnectionResource&gt; GetDataFactoryPrivateEndpointConnection(string privateEndpointConnectionName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryPrivateEndpointConnection(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryPrivateEndpointConnection (privateEndpointConnectionName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataFactoryPrivateEndpointConnectionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryPrivateEndpointConnection : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryPrivateEndpointConnectionResource&gt;&#xA;override this.GetDataFactoryPrivateEndpointConnection : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryPrivateEndpointConnectionResource&gt;" Usage="dataFactoryResource.GetDataFactoryPrivateEndpointConnection (privateEndpointConnectionName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryPrivateEndpointConnectionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateEndpointConnectionName"> The private endpoint connection name. </param>
        <param name="ifNoneMatch"> ETag of the private endpoint connection entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a private endpoint connection
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/privateEndpointConnections/{privateEndpointConnectionName}</description></item><item><term>Operation Id</term><description>PrivateEndpointConnection_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryPrivateEndpointConnectionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateEndpointConnectionName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryPrivateEndpointConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryPrivateEndpointConnectionResource&gt;&gt; GetDataFactoryPrivateEndpointConnectionAsync (string privateEndpointConnectionName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryPrivateEndpointConnectionResource&gt;&gt; GetDataFactoryPrivateEndpointConnectionAsync(string privateEndpointConnectionName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryPrivateEndpointConnectionAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryPrivateEndpointConnectionAsync (privateEndpointConnectionName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataFactoryPrivateEndpointConnectionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryPrivateEndpointConnectionAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryPrivateEndpointConnectionResource&gt;&gt;&#xA;override this.GetDataFactoryPrivateEndpointConnectionAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryPrivateEndpointConnectionResource&gt;&gt;" Usage="dataFactoryResource.GetDataFactoryPrivateEndpointConnectionAsync (privateEndpointConnectionName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryPrivateEndpointConnectionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateEndpointConnectionName"> The private endpoint connection name. </param>
        <param name="ifNoneMatch"> ETag of the private endpoint connection entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a private endpoint connection
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/privateEndpointConnections/{privateEndpointConnectionName}</description></item><item><term>Operation Id</term><description>PrivateEndpointConnection_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryPrivateEndpointConnectionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateEndpointConnectionName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryPrivateEndpointConnections">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataFactory.DataFactoryPrivateEndpointConnectionCollection GetDataFactoryPrivateEndpointConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.DataFactoryPrivateEndpointConnectionCollection GetDataFactoryPrivateEndpointConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryPrivateEndpointConnections" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryPrivateEndpointConnections () As DataFactoryPrivateEndpointConnectionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryPrivateEndpointConnections : unit -&gt; Azure.ResourceManager.DataFactory.DataFactoryPrivateEndpointConnectionCollection&#xA;override this.GetDataFactoryPrivateEndpointConnections : unit -&gt; Azure.ResourceManager.DataFactory.DataFactoryPrivateEndpointConnectionCollection" Usage="dataFactoryResource.GetDataFactoryPrivateEndpointConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.DataFactoryPrivateEndpointConnectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataFactoryPrivateEndpointConnectionResources in the DataFactory. </summary>
        <returns> An object representing collection of DataFactoryPrivateEndpointConnectionResources and their operations over a DataFactoryPrivateEndpointConnectionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryServiceCredential">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryServiceCredentialResource&gt; GetDataFactoryServiceCredential (string credentialName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryServiceCredentialResource&gt; GetDataFactoryServiceCredential(string credentialName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryServiceCredential(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryServiceCredential (credentialName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataFactoryServiceCredentialResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryServiceCredential : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryServiceCredentialResource&gt;&#xA;override this.GetDataFactoryServiceCredential : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryServiceCredentialResource&gt;" Usage="dataFactoryResource.GetDataFactoryServiceCredential (credentialName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryServiceCredentialResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credentialName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="ifNoneMatch" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="credentialName"> Credential name. </param>
        <param name="ifNoneMatch"> ETag of the credential entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a credential.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/credentials/{credentialName}</description></item><item><term>Operation Id</term><description>CredentialOperations_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryServiceCredentialResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="credentialName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="credentialName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryServiceCredentialAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryServiceCredentialResource&gt;&gt; GetDataFactoryServiceCredentialAsync (string credentialName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryServiceCredentialResource&gt;&gt; GetDataFactoryServiceCredentialAsync(string credentialName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryServiceCredentialAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryServiceCredentialAsync (credentialName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataFactoryServiceCredentialResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryServiceCredentialAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryServiceCredentialResource&gt;&gt;&#xA;override this.GetDataFactoryServiceCredentialAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryServiceCredentialResource&gt;&gt;" Usage="dataFactoryResource.GetDataFactoryServiceCredentialAsync (credentialName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryServiceCredentialResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credentialName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="ifNoneMatch" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="credentialName"> Credential name. </param>
        <param name="ifNoneMatch"> ETag of the credential entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a credential.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/credentials/{credentialName}</description></item><item><term>Operation Id</term><description>CredentialOperations_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryServiceCredentialResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="credentialName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="credentialName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryServiceCredentials">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataFactory.DataFactoryServiceCredentialCollection GetDataFactoryServiceCredentials ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.DataFactoryServiceCredentialCollection GetDataFactoryServiceCredentials() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryServiceCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryServiceCredentials () As DataFactoryServiceCredentialCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryServiceCredentials : unit -&gt; Azure.ResourceManager.DataFactory.DataFactoryServiceCredentialCollection&#xA;override this.GetDataFactoryServiceCredentials : unit -&gt; Azure.ResourceManager.DataFactory.DataFactoryServiceCredentialCollection" Usage="dataFactoryResource.GetDataFactoryServiceCredentials " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.DataFactoryServiceCredentialCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataFactoryServiceCredentialResources in the DataFactory. </summary>
        <returns> An object representing collection of DataFactoryServiceCredentialResources and their operations over a DataFactoryServiceCredentialResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryTrigger">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryTriggerResource&gt; GetDataFactoryTrigger (string triggerName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryTriggerResource&gt; GetDataFactoryTrigger(string triggerName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryTrigger(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryTrigger (triggerName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataFactoryTriggerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryTrigger : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryTriggerResource&gt;&#xA;override this.GetDataFactoryTrigger : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryTriggerResource&gt;" Usage="dataFactoryResource.GetDataFactoryTrigger (triggerName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryTriggerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="triggerName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="triggerName"> The trigger name. </param>
        <param name="ifNoneMatch"> ETag of the trigger entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a trigger.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}</description></item><item><term>Operation Id</term><description>Triggers_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryTriggerResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="triggerName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="triggerName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryTriggerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryTriggerResource&gt;&gt; GetDataFactoryTriggerAsync (string triggerName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryTriggerResource&gt;&gt; GetDataFactoryTriggerAsync(string triggerName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryTriggerAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryTriggerAsync (triggerName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataFactoryTriggerResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryTriggerAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryTriggerResource&gt;&gt;&#xA;override this.GetDataFactoryTriggerAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryTriggerResource&gt;&gt;" Usage="dataFactoryResource.GetDataFactoryTriggerAsync (triggerName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryTriggerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="triggerName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="triggerName"> The trigger name. </param>
        <param name="ifNoneMatch"> ETag of the trigger entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a trigger.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}</description></item><item><term>Operation Id</term><description>Triggers_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryTriggerResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="triggerName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="triggerName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoryTriggers">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataFactory.DataFactoryTriggerCollection GetDataFactoryTriggers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.DataFactoryTriggerCollection GetDataFactoryTriggers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFactoryTriggers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoryTriggers () As DataFactoryTriggerCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoryTriggers : unit -&gt; Azure.ResourceManager.DataFactory.DataFactoryTriggerCollection&#xA;override this.GetDataFactoryTriggers : unit -&gt; Azure.ResourceManager.DataFactory.DataFactoryTriggerCollection" Usage="dataFactoryResource.GetDataFactoryTriggers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.DataFactoryTriggerCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataFactoryTriggerResources in the DataFactory. </summary>
        <returns> An object representing collection of DataFactoryTriggerResources and their operations over a DataFactoryTriggerResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataFlowDebugSessions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.DataFlowDebugSessionInfo&gt; GetDataFlowDebugSessions (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataFactory.Models.DataFlowDebugSessionInfo&gt; GetDataFlowDebugSessions(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFlowDebugSessions(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFlowDebugSessions (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DataFlowDebugSessionInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetDataFlowDebugSessions : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.DataFlowDebugSessionInfo&gt;&#xA;override this.GetDataFlowDebugSessions : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.DataFlowDebugSessionInfo&gt;" Usage="dataFactoryResource.GetDataFlowDebugSessions cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.DataFlowDebugSessionInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Query all active data flow debug sessions.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryDataFlowDebugSessions</description></item><item><term>Operation Id</term><description>DataFlowDebugSession_QueryByFactory</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataFactory.Models.DataFlowDebugSessionInfo" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataFlowDebugSessionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.DataFlowDebugSessionInfo&gt; GetDataFlowDebugSessionsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataFactory.Models.DataFlowDebugSessionInfo&gt; GetDataFlowDebugSessionsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataFlowDebugSessionsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFlowDebugSessionsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DataFlowDebugSessionInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetDataFlowDebugSessionsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.DataFlowDebugSessionInfo&gt;&#xA;override this.GetDataFlowDebugSessionsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.DataFlowDebugSessionInfo&gt;" Usage="dataFactoryResource.GetDataFlowDebugSessionsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.DataFlowDebugSessionInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Query all active data flow debug sessions.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryDataFlowDebugSessions</description></item><item><term>Operation Id</term><description>DataFlowDebugSession_QueryByFactory</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataFactory.Models.DataFlowDebugSessionInfo" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataPlaneAccess">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataPlaneAccessPolicyResult&gt; GetDataPlaneAccess (Azure.ResourceManager.DataFactory.Models.DataFactoryDataPlaneUserAccessPolicy policy, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.DataFactoryDataPlaneAccessPolicyResult&gt; GetDataPlaneAccess(class Azure.ResourceManager.DataFactory.Models.DataFactoryDataPlaneUserAccessPolicy policy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataPlaneAccess(Azure.ResourceManager.DataFactory.Models.DataFactoryDataPlaneUserAccessPolicy,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPlaneAccess (policy As DataFactoryDataPlaneUserAccessPolicy, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataFactoryDataPlaneAccessPolicyResult)" />
      <MemberSignature Language="F#" Value="abstract member GetDataPlaneAccess : Azure.ResourceManager.DataFactory.Models.DataFactoryDataPlaneUserAccessPolicy * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataPlaneAccessPolicyResult&gt;&#xA;override this.GetDataPlaneAccess : Azure.ResourceManager.DataFactory.Models.DataFactoryDataPlaneUserAccessPolicy * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataPlaneAccessPolicyResult&gt;" Usage="dataFactoryResource.GetDataPlaneAccess (policy, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataPlaneAccessPolicyResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="Azure.ResourceManager.DataFactory.Models.DataFactoryDataPlaneUserAccessPolicy" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="policy"> Data Plane user access policy definition. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get Data Plane access.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/getDataPlaneAccess</description></item><item><term>Operation Id</term><description>Factories_GetDataPlaneAccess</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="policy" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataPlaneAccessAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataPlaneAccessPolicyResult&gt;&gt; GetDataPlaneAccessAsync (Azure.ResourceManager.DataFactory.Models.DataFactoryDataPlaneUserAccessPolicy policy, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.DataFactoryDataPlaneAccessPolicyResult&gt;&gt; GetDataPlaneAccessAsync(class Azure.ResourceManager.DataFactory.Models.DataFactoryDataPlaneUserAccessPolicy policy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetDataPlaneAccessAsync(Azure.ResourceManager.DataFactory.Models.DataFactoryDataPlaneUserAccessPolicy,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPlaneAccessAsync (policy As DataFactoryDataPlaneUserAccessPolicy, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataFactoryDataPlaneAccessPolicyResult))" />
      <MemberSignature Language="F#" Value="abstract member GetDataPlaneAccessAsync : Azure.ResourceManager.DataFactory.Models.DataFactoryDataPlaneUserAccessPolicy * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataPlaneAccessPolicyResult&gt;&gt;&#xA;override this.GetDataPlaneAccessAsync : Azure.ResourceManager.DataFactory.Models.DataFactoryDataPlaneUserAccessPolicy * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataPlaneAccessPolicyResult&gt;&gt;" Usage="dataFactoryResource.GetDataPlaneAccessAsync (policy, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryDataPlaneAccessPolicyResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="Azure.ResourceManager.DataFactory.Models.DataFactoryDataPlaneUserAccessPolicy" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="policy"> Data Plane user access policy definition. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get Data Plane access.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/getDataPlaneAccess</description></item><item><term>Operation Id</term><description>Factories_GetDataPlaneAccess</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="policy" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExposureControlFeature">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.ExposureControlResult&gt; GetExposureControlFeature (Azure.ResourceManager.DataFactory.Models.ExposureControlContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.ExposureControlResult&gt; GetExposureControlFeature(class Azure.ResourceManager.DataFactory.Models.ExposureControlContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetExposureControlFeature(Azure.ResourceManager.DataFactory.Models.ExposureControlContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExposureControlFeature (content As ExposureControlContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ExposureControlResult)" />
      <MemberSignature Language="F#" Value="abstract member GetExposureControlFeature : Azure.ResourceManager.DataFactory.Models.ExposureControlContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.ExposureControlResult&gt;&#xA;override this.GetExposureControlFeature : Azure.ResourceManager.DataFactory.Models.ExposureControlContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.ExposureControlResult&gt;" Usage="dataFactoryResource.GetExposureControlFeature (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.ExposureControlResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.ExposureControlContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The exposure control request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get exposure control feature for specific factory.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/getFeatureValue</description></item><item><term>Operation Id</term><description>ExposureControl_GetFeatureValueByFactory</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExposureControlFeatureAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.ExposureControlResult&gt;&gt; GetExposureControlFeatureAsync (Azure.ResourceManager.DataFactory.Models.ExposureControlContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.ExposureControlResult&gt;&gt; GetExposureControlFeatureAsync(class Azure.ResourceManager.DataFactory.Models.ExposureControlContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetExposureControlFeatureAsync(Azure.ResourceManager.DataFactory.Models.ExposureControlContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExposureControlFeatureAsync (content As ExposureControlContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ExposureControlResult))" />
      <MemberSignature Language="F#" Value="abstract member GetExposureControlFeatureAsync : Azure.ResourceManager.DataFactory.Models.ExposureControlContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.ExposureControlResult&gt;&gt;&#xA;override this.GetExposureControlFeatureAsync : Azure.ResourceManager.DataFactory.Models.ExposureControlContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.ExposureControlResult&gt;&gt;" Usage="dataFactoryResource.GetExposureControlFeatureAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.ExposureControlResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.ExposureControlContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The exposure control request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get exposure control feature for specific factory.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/getFeatureValue</description></item><item><term>Operation Id</term><description>ExposureControl_GetFeatureValueByFactory</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExposureControlFeatures">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.ExposureControlBatchResult&gt; GetExposureControlFeatures (Azure.ResourceManager.DataFactory.Models.ExposureControlBatchContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.ExposureControlBatchResult&gt; GetExposureControlFeatures(class Azure.ResourceManager.DataFactory.Models.ExposureControlBatchContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetExposureControlFeatures(Azure.ResourceManager.DataFactory.Models.ExposureControlBatchContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExposureControlFeatures (content As ExposureControlBatchContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ExposureControlBatchResult)" />
      <MemberSignature Language="F#" Value="abstract member GetExposureControlFeatures : Azure.ResourceManager.DataFactory.Models.ExposureControlBatchContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.ExposureControlBatchResult&gt;&#xA;override this.GetExposureControlFeatures : Azure.ResourceManager.DataFactory.Models.ExposureControlBatchContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.ExposureControlBatchResult&gt;" Usage="dataFactoryResource.GetExposureControlFeatures (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.ExposureControlBatchResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.ExposureControlBatchContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The exposure control request for list of features. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get list of exposure control features for specific factory.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryFeaturesValue</description></item><item><term>Operation Id</term><description>ExposureControl_QueryFeatureValuesByFactory</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExposureControlFeaturesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.ExposureControlBatchResult&gt;&gt; GetExposureControlFeaturesAsync (Azure.ResourceManager.DataFactory.Models.ExposureControlBatchContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.ExposureControlBatchResult&gt;&gt; GetExposureControlFeaturesAsync(class Azure.ResourceManager.DataFactory.Models.ExposureControlBatchContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetExposureControlFeaturesAsync(Azure.ResourceManager.DataFactory.Models.ExposureControlBatchContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExposureControlFeaturesAsync (content As ExposureControlBatchContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ExposureControlBatchResult))" />
      <MemberSignature Language="F#" Value="abstract member GetExposureControlFeaturesAsync : Azure.ResourceManager.DataFactory.Models.ExposureControlBatchContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.ExposureControlBatchResult&gt;&gt;&#xA;override this.GetExposureControlFeaturesAsync : Azure.ResourceManager.DataFactory.Models.ExposureControlBatchContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.ExposureControlBatchResult&gt;&gt;" Usage="dataFactoryResource.GetExposureControlFeaturesAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.ExposureControlBatchResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.ExposureControlBatchContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The exposure control request for list of features. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get list of exposure control features for specific factory.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryFeaturesValue</description></item><item><term>Operation Id</term><description>ExposureControl_QueryFeatureValuesByFactory</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGitHubAccessToken">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.GitHubAccessTokenResult&gt; GetGitHubAccessToken (Azure.ResourceManager.DataFactory.Models.GitHubAccessTokenContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.GitHubAccessTokenResult&gt; GetGitHubAccessToken(class Azure.ResourceManager.DataFactory.Models.GitHubAccessTokenContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetGitHubAccessToken(Azure.ResourceManager.DataFactory.Models.GitHubAccessTokenContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGitHubAccessToken (content As GitHubAccessTokenContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of GitHubAccessTokenResult)" />
      <MemberSignature Language="F#" Value="abstract member GetGitHubAccessToken : Azure.ResourceManager.DataFactory.Models.GitHubAccessTokenContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.GitHubAccessTokenResult&gt;&#xA;override this.GetGitHubAccessToken : Azure.ResourceManager.DataFactory.Models.GitHubAccessTokenContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.GitHubAccessTokenResult&gt;" Usage="dataFactoryResource.GetGitHubAccessToken (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.GitHubAccessTokenResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.GitHubAccessTokenContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Get GitHub access token request definition. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get GitHub Access Token.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/getGitHubAccessToken</description></item><item><term>Operation Id</term><description>Factories_GetGitHubAccessToken</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGitHubAccessTokenAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.GitHubAccessTokenResult&gt;&gt; GetGitHubAccessTokenAsync (Azure.ResourceManager.DataFactory.Models.GitHubAccessTokenContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.GitHubAccessTokenResult&gt;&gt; GetGitHubAccessTokenAsync(class Azure.ResourceManager.DataFactory.Models.GitHubAccessTokenContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetGitHubAccessTokenAsync(Azure.ResourceManager.DataFactory.Models.GitHubAccessTokenContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGitHubAccessTokenAsync (content As GitHubAccessTokenContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of GitHubAccessTokenResult))" />
      <MemberSignature Language="F#" Value="abstract member GetGitHubAccessTokenAsync : Azure.ResourceManager.DataFactory.Models.GitHubAccessTokenContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.GitHubAccessTokenResult&gt;&gt;&#xA;override this.GetGitHubAccessTokenAsync : Azure.ResourceManager.DataFactory.Models.GitHubAccessTokenContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.GitHubAccessTokenResult&gt;&gt;" Usage="dataFactoryResource.GetGitHubAccessTokenAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.GitHubAccessTokenResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.GitHubAccessTokenContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Get GitHub access token request definition. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get GitHub Access Token.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/getGitHubAccessToken</description></item><item><term>Operation Id</term><description>Factories_GetGitHubAccessToken</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPipelineRun">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryPipelineRunInfo&gt; GetPipelineRun (string runId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.DataFactoryPipelineRunInfo&gt; GetPipelineRun(string runId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetPipelineRun(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPipelineRun (runId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataFactoryPipelineRunInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetPipelineRun : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryPipelineRunInfo&gt;&#xA;override this.GetPipelineRun : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryPipelineRunInfo&gt;" Usage="dataFactoryResource.GetPipelineRun (runId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryPipelineRunInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="runId"> The pipeline run identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a pipeline run by its run ID.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns/{runId}</description></item><item><term>Operation Id</term><description>PipelineRuns_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="runId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="runId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPipelineRunAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryPipelineRunInfo&gt;&gt; GetPipelineRunAsync (string runId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.DataFactoryPipelineRunInfo&gt;&gt; GetPipelineRunAsync(string runId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetPipelineRunAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPipelineRunAsync (runId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataFactoryPipelineRunInfo))" />
      <MemberSignature Language="F#" Value="abstract member GetPipelineRunAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryPipelineRunInfo&gt;&gt;&#xA;override this.GetPipelineRunAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryPipelineRunInfo&gt;&gt;" Usage="dataFactoryResource.GetPipelineRunAsync (runId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryPipelineRunInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="runId"> The pipeline run identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a pipeline run by its run ID.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns/{runId}</description></item><item><term>Operation Id</term><description>PipelineRuns_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="runId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="runId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPipelineRuns">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryPipelineRunInfo&gt; GetPipelineRuns (Azure.ResourceManager.DataFactory.Models.RunFilterContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataFactory.Models.DataFactoryPipelineRunInfo&gt; GetPipelineRuns(class Azure.ResourceManager.DataFactory.Models.RunFilterContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetPipelineRuns(Azure.ResourceManager.DataFactory.Models.RunFilterContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPipelineRuns (content As RunFilterContent, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DataFactoryPipelineRunInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetPipelineRuns : Azure.ResourceManager.DataFactory.Models.RunFilterContent * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryPipelineRunInfo&gt;&#xA;override this.GetPipelineRuns : Azure.ResourceManager.DataFactory.Models.RunFilterContent * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryPipelineRunInfo&gt;" Usage="dataFactoryResource.GetPipelineRuns (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryPipelineRunInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.RunFilterContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Parameters to filter the pipeline run. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Query pipeline runs in the factory based on input filter conditions.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryPipelineRuns</description></item><item><term>Operation Id</term><description>PipelineRuns_QueryByFactory</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataFactory.Models.DataFactoryPipelineRunInfo" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPipelineRunsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryPipelineRunInfo&gt; GetPipelineRunsAsync (Azure.ResourceManager.DataFactory.Models.RunFilterContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataFactory.Models.DataFactoryPipelineRunInfo&gt; GetPipelineRunsAsync(class Azure.ResourceManager.DataFactory.Models.RunFilterContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetPipelineRunsAsync(Azure.ResourceManager.DataFactory.Models.RunFilterContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPipelineRunsAsync (content As RunFilterContent, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DataFactoryPipelineRunInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetPipelineRunsAsync : Azure.ResourceManager.DataFactory.Models.RunFilterContent * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryPipelineRunInfo&gt;&#xA;override this.GetPipelineRunsAsync : Azure.ResourceManager.DataFactory.Models.RunFilterContent * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryPipelineRunInfo&gt;" Usage="dataFactoryResource.GetPipelineRunsAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryPipelineRunInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.RunFilterContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Parameters to filter the pipeline run. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Query pipeline runs in the factory based on input filter conditions.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryPipelineRuns</description></item><item><term>Operation Id</term><description>PipelineRuns_QueryByFactory</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataFactory.Models.DataFactoryPipelineRunInfo" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateLinkResources">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryPrivateLinkResource&gt; GetPrivateLinkResources (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataFactory.Models.DataFactoryPrivateLinkResource&gt; GetPrivateLinkResources(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetPrivateLinkResources(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateLinkResources (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DataFactoryPrivateLinkResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateLinkResources : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryPrivateLinkResource&gt;&#xA;override this.GetPrivateLinkResources : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryPrivateLinkResource&gt;" Usage="dataFactoryResource.GetPrivateLinkResources cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryPrivateLinkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the private link resources
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/privateLinkResources</description></item><item><term>Operation Id</term><description>privateLinkResources_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataFactory.Models.DataFactoryPrivateLinkResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateLinkResourcesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryPrivateLinkResource&gt; GetPrivateLinkResourcesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataFactory.Models.DataFactoryPrivateLinkResource&gt; GetPrivateLinkResourcesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetPrivateLinkResourcesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateLinkResourcesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DataFactoryPrivateLinkResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateLinkResourcesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryPrivateLinkResource&gt;&#xA;override this.GetPrivateLinkResourcesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryPrivateLinkResource&gt;" Usage="dataFactoryResource.GetPrivateLinkResourcesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryPrivateLinkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the private link resources
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/privateLinkResources</description></item><item><term>Operation Id</term><description>privateLinkResources_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataFactory.Models.DataFactoryPrivateLinkResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTriggerRuns">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryTriggerRun&gt; GetTriggerRuns (Azure.ResourceManager.DataFactory.Models.RunFilterContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataFactory.Models.DataFactoryTriggerRun&gt; GetTriggerRuns(class Azure.ResourceManager.DataFactory.Models.RunFilterContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetTriggerRuns(Azure.ResourceManager.DataFactory.Models.RunFilterContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTriggerRuns (content As RunFilterContent, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DataFactoryTriggerRun)" />
      <MemberSignature Language="F#" Value="abstract member GetTriggerRuns : Azure.ResourceManager.DataFactory.Models.RunFilterContent * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryTriggerRun&gt;&#xA;override this.GetTriggerRuns : Azure.ResourceManager.DataFactory.Models.RunFilterContent * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryTriggerRun&gt;" Usage="dataFactoryResource.GetTriggerRuns (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryTriggerRun&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.RunFilterContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Parameters to filter the pipeline run. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Query trigger runs.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryTriggerRuns</description></item><item><term>Operation Id</term><description>TriggerRuns_QueryByFactory</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataFactory.Models.DataFactoryTriggerRun" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTriggerRunsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryTriggerRun&gt; GetTriggerRunsAsync (Azure.ResourceManager.DataFactory.Models.RunFilterContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataFactory.Models.DataFactoryTriggerRun&gt; GetTriggerRunsAsync(class Azure.ResourceManager.DataFactory.Models.RunFilterContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetTriggerRunsAsync(Azure.ResourceManager.DataFactory.Models.RunFilterContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTriggerRunsAsync (content As RunFilterContent, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DataFactoryTriggerRun)" />
      <MemberSignature Language="F#" Value="abstract member GetTriggerRunsAsync : Azure.ResourceManager.DataFactory.Models.RunFilterContent * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryTriggerRun&gt;&#xA;override this.GetTriggerRunsAsync : Azure.ResourceManager.DataFactory.Models.RunFilterContent * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryTriggerRun&gt;" Usage="dataFactoryResource.GetTriggerRunsAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.Models.DataFactoryTriggerRun&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.RunFilterContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Parameters to filter the pipeline run. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Query trigger runs.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryTriggerRuns</description></item><item><term>Operation Id</term><description>TriggerRuns_QueryByFactory</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataFactory.Models.DataFactoryTriggerRun" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTriggers">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataFactory.DataFactoryTriggerResource&gt; GetTriggers (Azure.ResourceManager.DataFactory.Models.TriggerFilterContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryTriggerResource&gt; GetTriggers(class Azure.ResourceManager.DataFactory.Models.TriggerFilterContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetTriggers(Azure.ResourceManager.DataFactory.Models.TriggerFilterContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTriggers (content As TriggerFilterContent, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DataFactoryTriggerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetTriggers : Azure.ResourceManager.DataFactory.Models.TriggerFilterContent * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataFactory.DataFactoryTriggerResource&gt;&#xA;override this.GetTriggers : Azure.ResourceManager.DataFactory.Models.TriggerFilterContent * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataFactory.DataFactoryTriggerResource&gt;" Usage="dataFactoryResource.GetTriggers (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataFactory.DataFactoryTriggerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.TriggerFilterContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Parameters to filter the triggers. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Query triggers.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/querytriggers</description></item><item><term>Operation Id</term><description>Triggers_QueryByFactory</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryTriggerResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataFactory.DataFactoryTriggerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTriggersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.DataFactoryTriggerResource&gt; GetTriggersAsync (Azure.ResourceManager.DataFactory.Models.TriggerFilterContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryTriggerResource&gt; GetTriggersAsync(class Azure.ResourceManager.DataFactory.Models.TriggerFilterContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.GetTriggersAsync(Azure.ResourceManager.DataFactory.Models.TriggerFilterContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTriggersAsync (content As TriggerFilterContent, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DataFactoryTriggerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetTriggersAsync : Azure.ResourceManager.DataFactory.Models.TriggerFilterContent * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.DataFactoryTriggerResource&gt;&#xA;override this.GetTriggersAsync : Azure.ResourceManager.DataFactory.Models.TriggerFilterContent * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.DataFactoryTriggerResource&gt;" Usage="dataFactoryResource.GetTriggersAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.DataFactoryTriggerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.TriggerFilterContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Parameters to filter the triggers. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Query triggers.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/querytriggers</description></item><item><term>Operation Id</term><description>Triggers_QueryByFactory</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryTriggerResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataFactory.DataFactoryTriggerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.DataFactoryResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.DataFactory.DataFactoryResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt; RemoveTag (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryResource&gt; RemoveTag(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.RemoveTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTag (key As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataFactoryResource)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&#xA;override this.RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;" Usage="dataFactoryResource.RemoveTag (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}</description></item><item><term>Operation Id</term><description>Factories_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt; RemoveTagAsync (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt; RemoveTagAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTagAsync (key As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataFactoryResource))" />
      <MemberSignature Language="F#" Value="abstract member RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt;&#xA;override this.RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt;" Usage="dataFactoryResource.RemoveTagAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}</description></item><item><term>Operation Id</term><description>Factories_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.DataFactory.DataFactoryResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.DataFactory.DataFactoryResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt; SetTags (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryResource&gt; SetTags(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTags (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataFactoryResource)" />
      <MemberSignature Language="F#" Value="abstract member SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&#xA;override this.SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;" Usage="dataFactoryResource.SetTags (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}</description></item><item><term>Operation Id</term><description>Factories_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt; SetTagsAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt; SetTagsAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagsAsync (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataFactoryResource))" />
      <MemberSignature Language="F#" Value="abstract member SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt;&#xA;override this.SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt;" Usage="dataFactoryResource.SetTagsAsync (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}</description></item><item><term>Operation Id</term><description>Factories_Get</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.DataFactory.DataFactoryData IJsonModel&lt;DataFactoryData&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.DataFactoryData System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#DataFactory#DataFactoryData&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As DataFactoryData Implements IJsonModel(Of DataFactoryData).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.DataFactoryData&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.DataFactoryData" Usage="dataFactoryResource.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.DataFactoryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;DataFactoryData&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#DataFactory#DataFactoryData&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of DataFactoryData).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="dataFactoryResource.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.DataFactory.DataFactoryData IPersistableModel&lt;DataFactoryData&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.DataFactoryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#DataFactory#DataFactoryData&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As DataFactoryData Implements IPersistableModel(Of DataFactoryData).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.DataFactoryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.DataFactoryData" Usage="dataFactoryResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.DataFactoryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;DataFactoryData&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#DataFactory#DataFactoryData&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of DataFactoryData).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="dataFactoryResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;DataFactoryData&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#DataFactory#DataFactoryData&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of DataFactoryData).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="dataFactoryResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.DataFactoryData&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt; Update (Azure.ResourceManager.DataFactory.Models.DataFactoryPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryResource&gt; Update(class Azure.ResourceManager.DataFactory.Models.DataFactoryPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.Update(Azure.ResourceManager.DataFactory.Models.DataFactoryPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (patch As DataFactoryPatch, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataFactoryResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.ResourceManager.DataFactory.Models.DataFactoryPatch * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&#xA;override this.Update : Azure.ResourceManager.DataFactory.Models.DataFactoryPatch * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;" Usage="dataFactoryResource.Update (patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patch" Type="Azure.ResourceManager.DataFactory.Models.DataFactoryPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="patch"> The parameters for updating a factory. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a factory.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}</description></item><item><term>Operation Id</term><description>Factories_Update</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt; UpdateAsync (Azure.ResourceManager.DataFactory.Models.DataFactoryPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt; UpdateAsync(class Azure.ResourceManager.DataFactory.Models.DataFactoryPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryResource.UpdateAsync(Azure.ResourceManager.DataFactory.Models.DataFactoryPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (patch As DataFactoryPatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataFactoryResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.ResourceManager.DataFactory.Models.DataFactoryPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.ResourceManager.DataFactory.Models.DataFactoryPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt;" Usage="dataFactoryResource.UpdateAsync (patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patch" Type="Azure.ResourceManager.DataFactory.Models.DataFactoryPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="patch"> The parameters for updating a factory. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a factory.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}</description></item><item><term>Operation Id</term><description>Factories_Update</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
