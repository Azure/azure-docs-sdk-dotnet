<Type Name="DataFactoryDataFlowData" FullName="Azure.ResourceManager.DataFactory.DataFactoryDataFlowData">
  <TypeSignature Language="C#" Value="public class DataFactoryDataFlowData : Azure.ResourceManager.Models.ResourceData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataFactoryDataFlowData extends Azure.ResourceManager.Models.ResourceData" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.DataFactoryDataFlowData" />
  <TypeSignature Language="VB.NET" Value="Public Class DataFactoryDataFlowData&#xA;Inherits ResourceData" />
  <TypeSignature Language="F#" Value="type DataFactoryDataFlowData = class&#xA;    inherit ResourceData" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.Models.ResourceData</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A class representing the DataFactoryDataFlow data model.
            Data flow resource type.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataFactoryDataFlowData (Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowProperties properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.DataFactoryDataFlowData.#ctor(Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As DataFactoryDataFlowProperties)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.DataFactory.DataFactoryDataFlowData : Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowProperties -&gt; Azure.ResourceManager.DataFactory.DataFactoryDataFlowData" Usage="new Azure.ResourceManager.DataFactory.DataFactoryDataFlowData properties" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowProperties" />
      </Parameters>
      <Docs>
        <param name="properties">
            Data flow properties.
            Please note <see cref="T:Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowProperties" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.DataFactory.Models.DataFactoryFlowletProperties" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DataFactoryMappingDataFlowProperties" /> and <see cref="T:Azure.ResourceManager.DataFactory.Models.DataFactoryWranglingDataFlowProperties" />.
            </param>
        <summary> Initializes a new instance of DataFactoryDataFlowData. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="properties" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ETag">
      <MemberSignature Language="C#" Value="public Azure.ETag? ETag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; ETag" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.DataFactoryDataFlowData.ETag" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ETag As Nullable(Of ETag)" />
      <MemberSignature Language="F#" Value="member this.ETag : Nullable&lt;Azure.ETag&gt;" Usage="Azure.ResourceManager.DataFactory.DataFactoryDataFlowData.ETag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ETag&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Etag identifies change in the resource. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowProperties Properties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowProperties Properties" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.DataFactoryDataFlowData.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Property Properties As DataFactoryDataFlowProperties" />
      <MemberSignature Language="F#" Value="member this.Properties : Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowProperties with get, set" Usage="Azure.ResourceManager.DataFactory.DataFactoryDataFlowData.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Data flow properties.
            Please note <see cref="T:Azure.ResourceManager.DataFactory.Models.DataFactoryDataFlowProperties" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.DataFactory.Models.DataFactoryFlowletProperties" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DataFactoryMappingDataFlowProperties" /> and <see cref="T:Azure.ResourceManager.DataFactory.Models.DataFactoryWranglingDataFlowProperties" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
