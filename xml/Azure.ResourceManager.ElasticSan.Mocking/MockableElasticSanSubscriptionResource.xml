<Type Name="MockableElasticSanSubscriptionResource" FullName="Azure.ResourceManager.ElasticSan.Mocking.MockableElasticSanSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableElasticSanSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableElasticSanSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ElasticSan.Mocking.MockableElasticSanSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableElasticSanSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableElasticSanSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ElasticSan</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableElasticSanSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ElasticSan.Mocking.MockableElasticSanSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ElasticSan</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ElasticSan.Mocking.MockableElasticSanSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElasticSans">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ElasticSan.ElasticSanResource&gt; GetElasticSans (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ElasticSan.ElasticSanResource&gt; GetElasticSans(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ElasticSan.Mocking.MockableElasticSanSubscriptionResource.GetElasticSans(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElasticSans (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ElasticSanResource)" />
      <MemberSignature Language="F#" Value="abstract member GetElasticSans : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ElasticSan.ElasticSanResource&gt;&#xA;override this.GetElasticSans : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ElasticSan.ElasticSanResource&gt;" Usage="mockableElasticSanSubscriptionResource.GetElasticSans cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ElasticSan</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ElasticSan.ElasticSanResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of ElasticSans in a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ElasticSan/elasticSans</description></item><item><term>Operation Id</term><description>ElasticSans_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ElasticSan.ElasticSanResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ElasticSan.ElasticSanResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElasticSansAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ElasticSan.ElasticSanResource&gt; GetElasticSansAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ElasticSan.ElasticSanResource&gt; GetElasticSansAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ElasticSan.Mocking.MockableElasticSanSubscriptionResource.GetElasticSansAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElasticSansAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ElasticSanResource)" />
      <MemberSignature Language="F#" Value="abstract member GetElasticSansAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ElasticSan.ElasticSanResource&gt;&#xA;override this.GetElasticSansAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ElasticSan.ElasticSanResource&gt;" Usage="mockableElasticSanSubscriptionResource.GetElasticSansAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ElasticSan</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ElasticSan.ElasticSanResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of ElasticSans in a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ElasticSan/elasticSans</description></item><item><term>Operation Id</term><description>ElasticSans_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ElasticSan.ElasticSanResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ElasticSan.ElasticSanResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSkus">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ElasticSan.Models.ElasticSanSkuInformation&gt; GetSkus (string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ElasticSan.Models.ElasticSanSkuInformation&gt; GetSkus(string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ElasticSan.Mocking.MockableElasticSanSubscriptionResource.GetSkus(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSkus (Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ElasticSanSkuInformation)" />
      <MemberSignature Language="F#" Value="abstract member GetSkus : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ElasticSan.Models.ElasticSanSkuInformation&gt;&#xA;override this.GetSkus : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ElasticSan.Models.ElasticSanSkuInformation&gt;" Usage="mockableElasticSanSubscriptionResource.GetSkus (filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ElasticSan</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ElasticSan.Models.ElasticSanSkuInformation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> Specify $filter='location eq &lt;location&gt;' to filter on location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the available Skus in the region and information related to them
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ElasticSan/skus</description></item><item><term>Operation Id</term><description>Skus_List</description></item><item><term>Default Api Version</term><description>2023-01-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ElasticSan.Models.ElasticSanSkuInformation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSkusAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ElasticSan.Models.ElasticSanSkuInformation&gt; GetSkusAsync (string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ElasticSan.Models.ElasticSanSkuInformation&gt; GetSkusAsync(string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ElasticSan.Mocking.MockableElasticSanSubscriptionResource.GetSkusAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSkusAsync (Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ElasticSanSkuInformation)" />
      <MemberSignature Language="F#" Value="abstract member GetSkusAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ElasticSan.Models.ElasticSanSkuInformation&gt;&#xA;override this.GetSkusAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ElasticSan.Models.ElasticSanSkuInformation&gt;" Usage="mockableElasticSanSubscriptionResource.GetSkusAsync (filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ElasticSan</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ElasticSan.Models.ElasticSanSkuInformation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> Specify $filter='location eq &lt;location&gt;' to filter on location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the available Skus in the region and information related to them
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ElasticSan/skus</description></item><item><term>Operation Id</term><description>Skus_List</description></item><item><term>Default Api Version</term><description>2023-01-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ElasticSan.Models.ElasticSanSkuInformation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
