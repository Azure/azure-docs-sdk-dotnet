<Type Name="Iterator" FullName="Mono.CSharp.Iterator">
  <TypeSignature Language="C#" Value="public class Iterator : Mono.CSharp.StateMachineInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Iterator extends Mono.CSharp.StateMachineInitializer" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.Iterator" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.StateMachineInitializer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Iterator (Mono.CSharp.ParametersBlock block, Mono.CSharp.IMethodData method, Mono.CSharp.TypeDefinition host, Mono.CSharp.TypeSpec iterator_type, bool is_enumerable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.ParametersBlock block, class Mono.CSharp.IMethodData method, class Mono.CSharp.TypeDefinition host, class Mono.CSharp.TypeSpec iterator_type, bool is_enumerable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Iterator.#ctor(Mono.CSharp.ParametersBlock,Mono.CSharp.IMethodData,Mono.CSharp.TypeDefinition,Mono.CSharp.TypeSpec,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="block" Type="Mono.CSharp.ParametersBlock" />
        <Parameter Name="method" Type="Mono.CSharp.IMethodData" />
        <Parameter Name="host" Type="Mono.CSharp.TypeDefinition" />
        <Parameter Name="iterator_type" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="is_enumerable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="block">To be added.</param>
        <param name="method">To be added.</param>
        <param name="host">To be added.</param>
        <param name="iterator_type">To be added.</param>
        <param name="is_enumerable">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public Mono.CSharp.ToplevelBlock Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.ToplevelBlock Container" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Iterator.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ToplevelBlock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerType">
      <MemberSignature Language="C#" Value="public override string ContainerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContainerType" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Iterator.ContainerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFinallyHost">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Method CreateFinallyHost (Mono.CSharp.TryFinallyBlock block);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.Method CreateFinallyHost(class Mono.CSharp.TryFinallyBlock block) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Iterator.CreateFinallyHost(Mono.CSharp.TryFinallyBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Method</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="block" Type="Mono.CSharp.TryFinallyBlock" />
      </Parameters>
      <Docs>
        <param name="block">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIterator">
      <MemberSignature Language="C#" Value="public static void CreateIterator (Mono.CSharp.IMethodData method, Mono.CSharp.TypeDefinition parent, Mono.CSharp.Modifiers modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateIterator(class Mono.CSharp.IMethodData method, class Mono.CSharp.TypeDefinition parent, valuetype Mono.CSharp.Modifiers modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Iterator.CreateIterator(Mono.CSharp.IMethodData,Mono.CSharp.TypeDefinition,Mono.CSharp.Modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="Mono.CSharp.IMethodData" />
        <Parameter Name="parent" Type="Mono.CSharp.TypeDefinition" />
        <Parameter Name="modifiers" Type="Mono.CSharp.Modifiers" />
      </Parameters>
      <Docs>
        <param name="method">To be added.</param>
        <param name="parent">To be added.</param>
        <param name="modifiers">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public override void Emit (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Emit(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Iterator.Emit(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitDispose">
      <MemberSignature Language="C#" Value="public void EmitDispose (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EmitDispose(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Iterator.EmitDispose(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitStatement">
      <MemberSignature Language="C#" Value="public override void EmitStatement (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EmitStatement(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Iterator.EmitStatement(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitYieldBreak">
      <MemberSignature Language="C#" Value="public void EmitYieldBreak (Mono.CSharp.EmitContext ec, bool unwind_protect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EmitYieldBreak(class Mono.CSharp.EmitContext ec, bool unwind_protect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Iterator.EmitYieldBreak(Mono.CSharp.EmitContext,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
        <Parameter Name="unwind_protect" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="unwind_protect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureForError">
      <MemberSignature Language="C#" Value="public override string GetSignatureForError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetSignatureForError() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Iterator.GetSignatureForError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InjectYield">
      <MemberSignature Language="C#" Value="public override void InjectYield (Mono.CSharp.EmitContext ec, Mono.CSharp.Expression expr, int resume_pc, bool unwind_protect, System.Reflection.Emit.Label resume_point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InjectYield(class Mono.CSharp.EmitContext ec, class Mono.CSharp.Expression expr, int32 resume_pc, bool unwind_protect, valuetype System.Reflection.Emit.Label resume_point) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Iterator.InjectYield(Mono.CSharp.EmitContext,Mono.CSharp.Expression,System.Int32,System.Boolean,System.Reflection.Emit.Label)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
        <Parameter Name="expr" Type="Mono.CSharp.Expression" />
        <Parameter Name="resume_pc" Type="System.Int32" />
        <Parameter Name="unwind_protect" Type="System.Boolean" />
        <Parameter Name="resume_point" Type="System.Reflection.Emit.Label" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="expr">To be added.</param>
        <param name="resume_pc">To be added.</param>
        <param name="unwind_protect">To be added.</param>
        <param name="resume_point">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnumerable">
      <MemberSignature Language="C#" Value="public readonly bool IsEnumerable;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly bool IsEnumerable" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.Iterator.IsEnumerable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIterator">
      <MemberSignature Language="C#" Value="public override bool IsIterator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIterator" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Iterator.IsIterator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalIteratorType">
      <MemberSignature Language="C#" Value="public readonly Mono.CSharp.TypeSpec OriginalIteratorType;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly class Mono.CSharp.TypeSpec OriginalIteratorType" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.Iterator.OriginalIteratorType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalMethod">
      <MemberSignature Language="C#" Value="public readonly Mono.CSharp.IMethodData OriginalMethod;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly class Mono.CSharp.IMethodData OriginalMethod" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.Iterator.OriginalMethod" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.IMethodData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>