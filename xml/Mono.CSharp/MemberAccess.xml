<Type Name="MemberAccess" FullName="Mono.CSharp.MemberAccess">
  <TypeSignature Language="C#" Value="public class MemberAccess : Mono.CSharp.ATypeNameExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MemberAccess extends Mono.CSharp.ATypeNameExpression" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.MemberAccess" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.ATypeNameExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemberAccess (Mono.CSharp.Expression expr, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.Expression expr, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberAccess.#ctor(Mono.CSharp.Expression,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expr" Type="Mono.CSharp.Expression" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expr">To be added.</param>
        <param name="id">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemberAccess (Mono.CSharp.Expression expr, string identifier, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.Expression expr, string identifier, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberAccess.#ctor(Mono.CSharp.Expression,System.String,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expr" Type="Mono.CSharp.Expression" />
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="expr">To be added.</param>
        <param name="identifier">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemberAccess (Mono.CSharp.Expression expr, string identifier, Mono.CSharp.TypeArguments args, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.Expression expr, string identifier, class Mono.CSharp.TypeArguments args, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberAccess.#ctor(Mono.CSharp.Expression,System.String,Mono.CSharp.TypeArguments,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expr" Type="Mono.CSharp.Expression" />
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="args" Type="Mono.CSharp.TypeArguments" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="expr">To be added.</param>
        <param name="identifier">To be added.</param>
        <param name="args">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemberAccess (Mono.CSharp.Expression expr, string identifier, int arity, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.Expression expr, string identifier, int32 arity, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberAccess.#ctor(Mono.CSharp.Expression,System.String,System.Int32,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expr" Type="Mono.CSharp.Expression" />
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="arity" Type="System.Int32" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="expr">To be added.</param>
        <param name="identifier">To be added.</param>
        <param name="arity">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override object Accept (Mono.CSharp.StructuralVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Accept(class Mono.CSharp.StructuralVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberAccess.Accept(Mono.CSharp.StructuralVisitor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Mono.CSharp.StructuralVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneTo">
      <MemberSignature Language="C#" Value="protected override void CloneTo (Mono.CSharp.CloneContext clonectx, Mono.CSharp.Expression t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneTo(class Mono.CSharp.CloneContext clonectx, class Mono.CSharp.Expression t) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberAccess.CloneTo(Mono.CSharp.CloneContext,Mono.CSharp.Expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clonectx" Type="Mono.CSharp.CloneContext" />
        <Parameter Name="t" Type="Mono.CSharp.Expression" />
      </Parameters>
      <Docs>
        <param name="clonectx">To be added.</param>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoResolve">
      <MemberSignature Language="C#" Value="protected override Mono.CSharp.Expression DoResolve (Mono.CSharp.ResolveContext rc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Mono.CSharp.Expression DoResolve(class Mono.CSharp.ResolveContext rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberAccess.DoResolve(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoResolveLValue">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.Expression DoResolveLValue (Mono.CSharp.ResolveContext rc, Mono.CSharp.Expression rhs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.Expression DoResolveLValue(class Mono.CSharp.ResolveContext rc, class Mono.CSharp.Expression rhs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberAccess.DoResolveLValue(Mono.CSharp.ResolveContext,Mono.CSharp.Expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="rhs" Type="Mono.CSharp.Expression" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="rhs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_IdentifierNotFound">
      <MemberSignature Language="C#" Value="public void Error_IdentifierNotFound (Mono.CSharp.IMemberContext rc, Mono.CSharp.TypeSpec expr_type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Error_IdentifierNotFound(class Mono.CSharp.IMemberContext rc, class Mono.CSharp.TypeSpec expr_type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberAccess.Error_IdentifierNotFound(Mono.CSharp.IMemberContext,Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.IMemberContext" />
        <Parameter Name="expr_type" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="expr_type">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_InvalidExpressionStatement">
      <MemberSignature Language="C#" Value="protected override void Error_InvalidExpressionStatement (Mono.CSharp.Report report, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Error_InvalidExpressionStatement(class Mono.CSharp.Report report, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberAccess.Error_InvalidExpressionStatement(Mono.CSharp.Report,Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="report" Type="Mono.CSharp.Report" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="report">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_OperatorCannotBeApplied">
      <MemberSignature Language="C#" Value="protected virtual void Error_OperatorCannotBeApplied (Mono.CSharp.ResolveContext rc, Mono.CSharp.TypeSpec type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Error_OperatorCannotBeApplied(class Mono.CSharp.ResolveContext rc, class Mono.CSharp.TypeSpec type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberAccess.Error_OperatorCannotBeApplied(Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_TypeDoesNotContainDefinition">
      <MemberSignature Language="C#" Value="public override void Error_TypeDoesNotContainDefinition (Mono.CSharp.ResolveContext ec, Mono.CSharp.TypeSpec type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Error_TypeDoesNotContainDefinition(class Mono.CSharp.ResolveContext ec, class Mono.CSharp.TypeSpec type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberAccess.Error_TypeDoesNotContainDefinition(Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="type">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="expr">
      <MemberSignature Language="C#" Value="protected Mono.CSharp.Expression expr;" />
      <MemberSignature Language="ILAsm" Value=".field family class Mono.CSharp.Expression expr" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.MemberAccess.expr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureForError">
      <MemberSignature Language="C#" Value="public override string GetSignatureForError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetSignatureForError() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberAccess.GetSignatureForError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasConditionalAccess">
      <MemberSignature Language="C#" Value="public override bool HasConditionalAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool HasConditionalAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberAccess.HasConditionalAccess" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidDotExpression">
      <MemberSignature Language="C#" Value="public static bool IsValidDotExpression (Mono.CSharp.TypeSpec type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidDotExpression(class Mono.CSharp.TypeSpec type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberAccess.IsValidDotExpression(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftExpression">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Expression LeftExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.Expression LeftExpression" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MemberAccess.LeftExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupNameExpression">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.Expression LookupNameExpression (Mono.CSharp.ResolveContext rc, Mono.CSharp.Expression.MemberLookupRestrictions restrictions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.Expression LookupNameExpression(class Mono.CSharp.ResolveContext rc, valuetype Mono.CSharp.Expression/MemberLookupRestrictions restrictions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberAccess.LookupNameExpression(Mono.CSharp.ResolveContext,Mono.CSharp.Expression.MemberLookupRestrictions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="restrictions" Type="Mono.CSharp.Expression+MemberLookupRestrictions" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="restrictions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsTypeOrNamespace">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.FullNamedExpression ResolveAsTypeOrNamespace (Mono.CSharp.IMemberContext rc, bool allowUnboundTypeArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.FullNamedExpression ResolveAsTypeOrNamespace(class Mono.CSharp.IMemberContext rc, bool allowUnboundTypeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberAccess.ResolveAsTypeOrNamespace(Mono.CSharp.IMemberContext,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.FullNamedExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.IMemberContext" />
        <Parameter Name="allowUnboundTypeArguments" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="allowUnboundTypeArguments">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartLocation">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.Location StartLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Mono.CSharp.Location StartLocation" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MemberAccess.StartLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Location</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>