<Type Name="Is" FullName="Mono.CSharp.Is">
  <TypeSignature Language="C#" Value="public class Is : Mono.CSharp.Probe" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Is extends Mono.CSharp.Probe" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.Is" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.Probe</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Is (Mono.CSharp.Expression expr, Mono.CSharp.Expression probe_type, Mono.CSharp.Location l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.Expression expr, class Mono.CSharp.Expression probe_type, valuetype Mono.CSharp.Location l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Is.#ctor(Mono.CSharp.Expression,Mono.CSharp.Expression,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expr" Type="Mono.CSharp.Expression" />
        <Parameter Name="probe_type" Type="Mono.CSharp.Expression" />
        <Parameter Name="l" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="expr">To be added.</param>
        <param name="probe_type">To be added.</param>
        <param name="l">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override object Accept (Mono.CSharp.StructuralVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Accept(class Mono.CSharp.StructuralVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Is.Accept(Mono.CSharp.StructuralVisitor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Mono.CSharp.StructuralVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateExpressionTree">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.Expression CreateExpressionTree (Mono.CSharp.ResolveContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.Expression CreateExpressionTree(class Mono.CSharp.ResolveContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Is.CreateExpressionTree(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoResolve">
      <MemberSignature Language="C#" Value="protected override Mono.CSharp.Expression DoResolve (Mono.CSharp.ResolveContext rc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Mono.CSharp.Expression DoResolve(class Mono.CSharp.ResolveContext rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Is.DoResolve(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public override void Emit (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Emit(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Is.Emit(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitBranchable">
      <MemberSignature Language="C#" Value="public override void EmitBranchable (Mono.CSharp.EmitContext ec, System.Reflection.Emit.Label target, bool on_true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EmitBranchable(class Mono.CSharp.EmitContext ec, valuetype System.Reflection.Emit.Label target, bool on_true) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Is.EmitBranchable(Mono.CSharp.EmitContext,System.Reflection.Emit.Label,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
        <Parameter Name="target" Type="System.Reflection.Emit.Label" />
        <Parameter Name="on_true" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="target">To be added.</param>
        <param name="on_true">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowAnalysis">
      <MemberSignature Language="C#" Value="public override void FlowAnalysis (Mono.CSharp.FlowAnalysisContext fc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FlowAnalysis(class Mono.CSharp.FlowAnalysisContext fc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Is.FlowAnalysis(Mono.CSharp.FlowAnalysisContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fc" Type="Mono.CSharp.FlowAnalysisContext" />
      </Parameters>
      <Docs>
        <param name="fc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperatorName">
      <MemberSignature Language="C#" Value="protected override string OperatorName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OperatorName" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Is.OperatorName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveProbeType">
      <MemberSignature Language="C#" Value="protected override void ResolveProbeType (Mono.CSharp.ResolveContext rc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ResolveProbeType(class Mono.CSharp.ResolveContext rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Is.ResolveProbeType(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Variable">
      <MemberSignature Language="C#" Value="public Mono.CSharp.LocalVariable Variable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.LocalVariable Variable" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Is.Variable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.LocalVariable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>