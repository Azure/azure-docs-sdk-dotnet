<Type Name="MemberCache" FullName="Mono.CSharp.MemberCache">
  <TypeSignature Language="C#" Value="public class MemberCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MemberCache extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.MemberCache" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemberCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemberCache (Mono.CSharp.MemberCache cache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.MemberCache cache) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.#ctor(Mono.CSharp.MemberCache)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cache" Type="Mono.CSharp.MemberCache" />
      </Parameters>
      <Docs>
        <param name="cache">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemberCache (Mono.CSharp.TypeContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.TypeContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.#ctor(Mono.CSharp.TypeContainer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="Mono.CSharp.TypeContainer" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemberCache (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.#ctor(System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBaseType">
      <MemberSignature Language="C#" Value="public void AddBaseType (Mono.CSharp.TypeSpec baseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBaseType(class Mono.CSharp.TypeSpec baseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.AddBaseType(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseType" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="baseType">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInterface">
      <MemberSignature Language="C#" Value="public void AddInterface (Mono.CSharp.TypeSpec iface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddInterface(class Mono.CSharp.TypeSpec iface) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.AddInterface(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iface" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="iface">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMember">
      <MemberSignature Language="C#" Value="public void AddMember (Mono.CSharp.MemberSpec ms);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMember(class Mono.CSharp.MemberSpec ms) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.AddMember(Mono.CSharp.MemberSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ms" Type="Mono.CSharp.MemberSpec" />
      </Parameters>
      <Docs>
        <param name="ms">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMember">
      <MemberSignature Language="C#" Value="public void AddMember (Mono.CSharp.InterfaceMemberBase imb, string exlicitName, Mono.CSharp.MemberSpec ms);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMember(class Mono.CSharp.InterfaceMemberBase imb, string exlicitName, class Mono.CSharp.MemberSpec ms) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.AddMember(Mono.CSharp.InterfaceMemberBase,System.String,Mono.CSharp.MemberSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imb" Type="Mono.CSharp.InterfaceMemberBase" />
        <Parameter Name="exlicitName" Type="System.String" />
        <Parameter Name="ms" Type="Mono.CSharp.MemberSpec" />
      </Parameters>
      <Docs>
        <param name="imb">To be added.</param>
        <param name="exlicitName">To be added.</param>
        <param name="ms">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMemberImported">
      <MemberSignature Language="C#" Value="public void AddMemberImported (Mono.CSharp.MemberSpec ms);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMemberImported(class Mono.CSharp.MemberSpec ms) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.AddMemberImported(Mono.CSharp.MemberSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ms" Type="Mono.CSharp.MemberSpec" />
      </Parameters>
      <Docs>
        <param name="ms">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckExistingMembersOverloads">
      <MemberSignature Language="C#" Value="public bool CheckExistingMembersOverloads (Mono.CSharp.MemberCore member, Mono.CSharp.AParametersCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckExistingMembersOverloads(class Mono.CSharp.MemberCore member, class Mono.CSharp.AParametersCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.CheckExistingMembersOverloads(Mono.CSharp.MemberCore,Mono.CSharp.AParametersCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="Mono.CSharp.MemberCore" />
        <Parameter Name="parameters" Type="Mono.CSharp.AParametersCollection" />
      </Parameters>
      <Docs>
        <param name="member">To be added.</param>
        <param name="parameters">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckExistingMembersOverloads">
      <MemberSignature Language="C#" Value="public bool CheckExistingMembersOverloads (Mono.CSharp.MemberCore member, string name, Mono.CSharp.AParametersCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckExistingMembersOverloads(class Mono.CSharp.MemberCore member, string name, class Mono.CSharp.AParametersCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.CheckExistingMembersOverloads(Mono.CSharp.MemberCore,System.String,Mono.CSharp.AParametersCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="Mono.CSharp.MemberCore" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parameters" Type="Mono.CSharp.AParametersCollection" />
      </Parameters>
      <Docs>
        <param name="member">To be added.</param>
        <param name="name">To be added.</param>
        <param name="parameters">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly Mono.CSharp.MemberCache Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Mono.CSharp.MemberCache Empty" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.MemberCache.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MemberCache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindBaseMember">
      <MemberSignature Language="C#" Value="public static Mono.CSharp.MemberSpec FindBaseMember (Mono.CSharp.MemberCore member, out Mono.CSharp.MemberSpec bestCandidate, ref bool overrides);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.CSharp.MemberSpec FindBaseMember(class Mono.CSharp.MemberCore member, class Mono.CSharp.MemberSpec bestCandidate, bool overrides) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.FindBaseMember(Mono.CSharp.MemberCore,Mono.CSharp.MemberSpec@,System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MemberSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="Mono.CSharp.MemberCore" />
        <Parameter Name="bestCandidate" Type="Mono.CSharp.MemberSpec&amp;" RefType="out" />
        <Parameter Name="overrides" Type="System.Boolean&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="member">To be added.</param>
        <param name="bestCandidate">To be added.</param>
        <param name="overrides">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindExtensionMethods">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;Mono.CSharp.MethodSpec&gt; FindExtensionMethods (Mono.CSharp.IMemberContext invocationContext, string name, int arity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class Mono.CSharp.MethodSpec&gt; FindExtensionMethods(class Mono.CSharp.IMemberContext invocationContext, string name, int32 arity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.FindExtensionMethods(Mono.CSharp.IMemberContext,System.String,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Mono.CSharp.MethodSpec&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invocationContext" Type="Mono.CSharp.IMemberContext" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="arity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="invocationContext">To be added.</param>
        <param name="name">To be added.</param>
        <param name="arity">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindInterfaceMembers">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Mono.CSharp.MemberSpec&gt; FindInterfaceMembers (Mono.CSharp.TypeParameterSpec typeParameter, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class Mono.CSharp.MemberSpec&gt; FindInterfaceMembers(class Mono.CSharp.TypeParameterSpec typeParameter, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.FindInterfaceMembers(Mono.CSharp.TypeParameterSpec,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Mono.CSharp.MemberSpec&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeParameter" Type="Mono.CSharp.TypeParameterSpec" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeParameter">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMember">
      <MemberSignature Language="C#" Value="public static Mono.CSharp.MemberSpec FindMember (Mono.CSharp.TypeSpec container, Mono.CSharp.MemberFilter filter, Mono.CSharp.BindingRestriction restrictions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.CSharp.MemberSpec FindMember(class Mono.CSharp.TypeSpec container, valuetype Mono.CSharp.MemberFilter filter, valuetype Mono.CSharp.BindingRestriction restrictions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.FindMember(Mono.CSharp.TypeSpec,Mono.CSharp.MemberFilter,Mono.CSharp.BindingRestriction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MemberSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="filter" Type="Mono.CSharp.MemberFilter" />
        <Parameter Name="restrictions" Type="Mono.CSharp.BindingRestriction" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <param name="filter">To be added.</param>
        <param name="restrictions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMembers">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Mono.CSharp.MemberSpec&gt; FindMembers (Mono.CSharp.TypeSpec container, string name, bool declaredOnlyClass);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class Mono.CSharp.MemberSpec&gt; FindMembers(class Mono.CSharp.TypeSpec container, string name, bool declaredOnlyClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.FindMembers(Mono.CSharp.TypeSpec,System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Mono.CSharp.MemberSpec&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="declaredOnlyClass" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <param name="name">To be added.</param>
        <param name="declaredOnlyClass">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindNestedType">
      <MemberSignature Language="C#" Value="public static Mono.CSharp.TypeSpec FindNestedType (Mono.CSharp.TypeSpec container, string name, int arity, bool declaredOnlyClass);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.CSharp.TypeSpec FindNestedType(class Mono.CSharp.TypeSpec container, string name, int32 arity, bool declaredOnlyClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.FindNestedType(Mono.CSharp.TypeSpec,System.String,System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="arity" Type="System.Int32" />
        <Parameter Name="declaredOnlyClass" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <param name="name">To be added.</param>
        <param name="arity">To be added.</param>
        <param name="declaredOnlyClass">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllFieldsForDefiniteAssignment">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.List&lt;Mono.CSharp.FieldSpec&gt; GetAllFieldsForDefiniteAssignment (Mono.CSharp.TypeSpec container, Mono.CSharp.IMemberContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.List`1&lt;class Mono.CSharp.FieldSpec&gt; GetAllFieldsForDefiniteAssignment(class Mono.CSharp.TypeSpec container, class Mono.CSharp.IMemberContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.GetAllFieldsForDefiniteAssignment(Mono.CSharp.TypeSpec,Mono.CSharp.IMemberContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Mono.CSharp.FieldSpec&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="context" Type="Mono.CSharp.IMemberContext" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompletitionMembers">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Mono.CSharp.MemberSpec&gt; GetCompletitionMembers (Mono.CSharp.IMemberContext ctx, Mono.CSharp.TypeSpec container, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class Mono.CSharp.MemberSpec&gt; GetCompletitionMembers(class Mono.CSharp.IMemberContext ctx, class Mono.CSharp.TypeSpec container, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.GetCompletitionMembers(Mono.CSharp.IMemberContext,Mono.CSharp.TypeSpec,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Mono.CSharp.MemberSpec&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Mono.CSharp.IMemberContext" />
        <Parameter Name="container" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="container">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeclaredNestedTypes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.List&lt;Mono.CSharp.TypeSpec&gt; GetDeclaredNestedTypes (Mono.CSharp.TypeSpec container);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.List`1&lt;class Mono.CSharp.TypeSpec&gt; GetDeclaredNestedTypes(class Mono.CSharp.TypeSpec container) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.GetDeclaredNestedTypes(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Mono.CSharp.TypeSpec&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterfaceMethods">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.List&lt;Mono.CSharp.MethodSpec&gt; GetInterfaceMethods (Mono.CSharp.TypeSpec iface);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.List`1&lt;class Mono.CSharp.MethodSpec&gt; GetInterfaceMethods(class Mono.CSharp.TypeSpec iface) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.GetInterfaceMethods(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Mono.CSharp.MethodSpec&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iface" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="iface">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetMember&lt;T&gt; (Mono.CSharp.TypeSpec container, T spec) where T : Mono.CSharp.MemberSpec;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetMember&lt;(class Mono.CSharp.MemberSpec) T&gt;(class Mono.CSharp.TypeSpec container, !!T spec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.GetMember``1(Mono.CSharp.TypeSpec,``0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Mono.CSharp.MemberSpec</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="container" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="spec" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="container">To be added.</param>
        <param name="spec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNotImplementedAbstractMethods">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Mono.CSharp.MethodSpec&gt; GetNotImplementedAbstractMethods (Mono.CSharp.TypeSpec type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class Mono.CSharp.MethodSpec&gt; GetNotImplementedAbstractMethods(class Mono.CSharp.TypeSpec type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.GetNotImplementedAbstractMethods(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Mono.CSharp.MethodSpec&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserOperator">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Mono.CSharp.MemberSpec&gt; GetUserOperator (Mono.CSharp.TypeSpec container, Mono.CSharp.Operator.OpType op, bool declaredOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class Mono.CSharp.MemberSpec&gt; GetUserOperator(class Mono.CSharp.TypeSpec container, valuetype Mono.CSharp.Operator/OpType op, bool declaredOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.GetUserOperator(Mono.CSharp.TypeSpec,Mono.CSharp.Operator.OpType,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Mono.CSharp.MemberSpec&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="op" Type="Mono.CSharp.Operator+OpType" />
        <Parameter Name="declaredOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <param name="op">To be added.</param>
        <param name="declaredOnly">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexerNameAlias">
      <MemberSignature Language="C#" Value="public static readonly string IndexerNameAlias;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string IndexerNameAlias" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.MemberCache.IndexerNameAlias" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InflateMembers">
      <MemberSignature Language="C#" Value="public void InflateMembers (Mono.CSharp.MemberCache cacheToInflate, Mono.CSharp.TypeSpec inflatedType, Mono.CSharp.TypeParameterInflator inflator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InflateMembers(class Mono.CSharp.MemberCache cacheToInflate, class Mono.CSharp.TypeSpec inflatedType, valuetype Mono.CSharp.TypeParameterInflator inflator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.InflateMembers(Mono.CSharp.MemberCache,Mono.CSharp.TypeSpec,Mono.CSharp.TypeParameterInflator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheToInflate" Type="Mono.CSharp.MemberCache" />
        <Parameter Name="inflatedType" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="inflator" Type="Mono.CSharp.TypeParameterInflator" />
      </Parameters>
      <Docs>
        <param name="cacheToInflate">To be added.</param>
        <param name="inflatedType">To be added.</param>
        <param name="inflator">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InflateTypes">
      <MemberSignature Language="C#" Value="public void InflateTypes (Mono.CSharp.MemberCache inflated_cache, Mono.CSharp.TypeParameterInflator inflator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InflateTypes(class Mono.CSharp.MemberCache inflated_cache, valuetype Mono.CSharp.TypeParameterInflator inflator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.InflateTypes(Mono.CSharp.MemberCache,Mono.CSharp.TypeParameterInflator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inflated_cache" Type="Mono.CSharp.MemberCache" />
        <Parameter Name="inflator" Type="Mono.CSharp.TypeParameterInflator" />
      </Parameters>
      <Docs>
        <param name="inflated_cache">To be added.</param>
        <param name="inflator">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveHiddenMembers">
      <MemberSignature Language="C#" Value="public void RemoveHiddenMembers (Mono.CSharp.TypeSpec container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveHiddenMembers(class Mono.CSharp.TypeSpec container) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.RemoveHiddenMembers(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyClsCompliance">
      <MemberSignature Language="C#" Value="public void VerifyClsCompliance (Mono.CSharp.TypeSpec container, Mono.CSharp.Report report);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyClsCompliance(class Mono.CSharp.TypeSpec container, class Mono.CSharp.Report report) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberCache.VerifyClsCompliance(Mono.CSharp.TypeSpec,Mono.CSharp.Report)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="report" Type="Mono.CSharp.Report" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <param name="report">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>