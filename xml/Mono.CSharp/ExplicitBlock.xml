<Type Name="ExplicitBlock" FullName="Mono.CSharp.ExplicitBlock">
  <TypeSignature Language="C#" Value="public class ExplicitBlock : Mono.CSharp.Block" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExplicitBlock extends Mono.CSharp.Block" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.ExplicitBlock" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.Block</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExplicitBlock (Mono.CSharp.Block parent, Mono.CSharp.Location start, Mono.CSharp.Location end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.Block parent, valuetype Mono.CSharp.Location start, valuetype Mono.CSharp.Location end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ExplicitBlock.#ctor(Mono.CSharp.Block,Mono.CSharp.Location,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="Mono.CSharp.Block" />
        <Parameter Name="start" Type="Mono.CSharp.Location" />
        <Parameter Name="end" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="parent">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExplicitBlock (Mono.CSharp.Block parent, Mono.CSharp.Block.Flags flags, Mono.CSharp.Location start, Mono.CSharp.Location end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.Block parent, valuetype Mono.CSharp.Block/Flags flags, valuetype Mono.CSharp.Location start, valuetype Mono.CSharp.Location end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ExplicitBlock.#ctor(Mono.CSharp.Block,Mono.CSharp.Block.Flags,Mono.CSharp.Location,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="Mono.CSharp.Block" />
        <Parameter Name="flags" Type="Mono.CSharp.Block+Flags" />
        <Parameter Name="start" Type="Mono.CSharp.Location" />
        <Parameter Name="end" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="parent">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="am_storey">
      <MemberSignature Language="C#" Value="protected Mono.CSharp.AnonymousMethodStorey am_storey;" />
      <MemberSignature Language="ILAsm" Value=".field family class Mono.CSharp.AnonymousMethodStorey am_storey" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.ExplicitBlock.am_storey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.AnonymousMethodStorey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousMethodStorey">
      <MemberSignature Language="C#" Value="public Mono.CSharp.AnonymousMethodStorey AnonymousMethodStorey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.AnonymousMethodStorey AnonymousMethodStorey" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.ExplicitBlock.AnonymousMethodStorey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.AnonymousMethodStorey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAnonymousMethodStorey">
      <MemberSignature Language="C#" Value="public Mono.CSharp.AnonymousMethodStorey CreateAnonymousMethodStorey (Mono.CSharp.ResolveContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.AnonymousMethodStorey CreateAnonymousMethodStorey(class Mono.CSharp.ResolveContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ExplicitBlock.CreateAnonymousMethodStorey(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.AnonymousMethodStorey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineStoreyContainer">
      <MemberSignature Language="C#" Value="protected void DefineStoreyContainer (Mono.CSharp.EmitContext ec, Mono.CSharp.AnonymousMethodStorey storey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DefineStoreyContainer(class Mono.CSharp.EmitContext ec, class Mono.CSharp.AnonymousMethodStorey storey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ExplicitBlock.DefineStoreyContainer(Mono.CSharp.EmitContext,Mono.CSharp.AnonymousMethodStorey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
        <Parameter Name="storey" Type="Mono.CSharp.AnonymousMethodStorey" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="storey">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableDebugScopeIndex">
      <MemberSignature Language="C#" Value="public void DisableDebugScopeIndex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisableDebugScopeIndex() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ExplicitBlock.DisableDebugScopeIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public override void Emit (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Emit(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ExplicitBlock.Emit(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitScopeInitialization">
      <MemberSignature Language="C#" Value="public void EmitScopeInitialization (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EmitScopeInitialization(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ExplicitBlock.EmitScopeInitialization(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDebugSymbolScopeIndex">
      <MemberSignature Language="C#" Value="public virtual int GetDebugSymbolScopeIndex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDebugSymbolScopeIndex() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ExplicitBlock.GetDebugSymbolScopeIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAwait">
      <MemberSignature Language="C#" Value="public bool HasAwait { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAwait" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.ExplicitBlock.HasAwait" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasCapturedThis">
      <MemberSignature Language="C#" Value="public bool HasCapturedThis { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasCapturedThis" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.ExplicitBlock.HasCapturedThis" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasCapturedVariable">
      <MemberSignature Language="C#" Value="public bool HasCapturedVariable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasCapturedVariable" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.ExplicitBlock.HasCapturedVariable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasReachableClosingBrace">
      <MemberSignature Language="C#" Value="public bool HasReachableClosingBrace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasReachableClosingBrace" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.ExplicitBlock.HasReachableClosingBrace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasYield">
      <MemberSignature Language="C#" Value="public bool HasYield { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasYield" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.ExplicitBlock.HasYield" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterAsyncAwait">
      <MemberSignature Language="C#" Value="public void RegisterAsyncAwait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterAsyncAwait() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ExplicitBlock.RegisterAsyncAwait" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterIteratorYield">
      <MemberSignature Language="C#" Value="public void RegisterIteratorYield ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterIteratorYield() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ExplicitBlock.RegisterIteratorYield" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCatchBlock">
      <MemberSignature Language="C#" Value="public void SetCatchBlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCatchBlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ExplicitBlock.SetCatchBlock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFinallyBlock">
      <MemberSignature Language="C#" Value="public void SetFinallyBlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFinallyBlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ExplicitBlock.SetFinallyBlock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapIntoDestructor">
      <MemberSignature Language="C#" Value="public void WrapIntoDestructor (Mono.CSharp.TryFinally tf, Mono.CSharp.ExplicitBlock tryBlock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WrapIntoDestructor(class Mono.CSharp.TryFinally tf, class Mono.CSharp.ExplicitBlock tryBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ExplicitBlock.WrapIntoDestructor(Mono.CSharp.TryFinally,Mono.CSharp.ExplicitBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tf" Type="Mono.CSharp.TryFinally" />
        <Parameter Name="tryBlock" Type="Mono.CSharp.ExplicitBlock" />
      </Parameters>
      <Docs>
        <param name="tf">To be added.</param>
        <param name="tryBlock">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>