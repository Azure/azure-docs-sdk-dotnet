<Type Name="MethodSpec" FullName="Mono.CSharp.MethodSpec">
  <TypeSignature Language="C#" Value="public sealed class MethodSpec : Mono.CSharp.MemberSpec, Mono.CSharp.IParametersMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MethodSpec extends Mono.CSharp.MemberSpec implements class Mono.CSharp.IInterfaceMemberSpec, class Mono.CSharp.IParametersMember" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.MethodSpec" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.MemberSpec</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Mono.CSharp.IParametersMember</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MethodSpec (Mono.CSharp.MemberKind kind, Mono.CSharp.TypeSpec declaringType, Mono.CSharp.IMethodDefinition details, Mono.CSharp.TypeSpec returnType, Mono.CSharp.AParametersCollection parameters, Mono.CSharp.Modifiers modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Mono.CSharp.MemberKind kind, class Mono.CSharp.TypeSpec declaringType, class Mono.CSharp.IMethodDefinition details, class Mono.CSharp.TypeSpec returnType, class Mono.CSharp.AParametersCollection parameters, valuetype Mono.CSharp.Modifiers modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MethodSpec.#ctor(Mono.CSharp.MemberKind,Mono.CSharp.TypeSpec,Mono.CSharp.IMethodDefinition,Mono.CSharp.TypeSpec,Mono.CSharp.AParametersCollection,Mono.CSharp.Modifiers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="kind" Type="Mono.CSharp.MemberKind" />
        <Parameter Name="declaringType" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="details" Type="Mono.CSharp.IMethodDefinition" />
        <Parameter Name="returnType" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="parameters" Type="Mono.CSharp.AParametersCollection" />
        <Parameter Name="modifiers" Type="Mono.CSharp.Modifiers" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <param name="declaringType">To be added.</param>
        <param name="details">To be added.</param>
        <param name="returnType">To be added.</param>
        <param name="parameters">To be added.</param>
        <param name="modifiers">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arity">
      <MemberSignature Language="C#" Value="public override int Arity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Arity" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MethodSpec.Arity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Constraints">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeParameterSpec[] Constraints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.TypeParameterSpec[] Constraints" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MethodSpec.Constraints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeParameterSpec[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excluded">
      <MemberSignature Language="C#" Value="public static readonly Mono.CSharp.MethodSpec Excluded;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Mono.CSharp.MethodSpec Excluded" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.MethodSpec.Excluded" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MethodSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericDefinition">
      <MemberSignature Language="C#" Value="public Mono.CSharp.IGenericMethodDefinition GenericDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.IGenericMethodDefinition GenericDefinition" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MethodSpec.GenericDefinition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.IGenericMethodDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGenericMethodDefinition">
      <MemberSignature Language="C#" Value="public Mono.CSharp.MethodSpec GetGenericMethodDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.MethodSpec GetGenericMethodDefinition() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MethodSpec.GetGenericMethodDefinition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MethodSpec</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetaInfo">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodBase GetMetaInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.MethodBase GetMetaInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MethodSpec.GetMetaInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureForDocumentation">
      <MemberSignature Language="C#" Value="public override string GetSignatureForDocumentation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetSignatureForDocumentation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MethodSpec.GetSignatureForDocumentation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureForError">
      <MemberSignature Language="C#" Value="public override string GetSignatureForError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetSignatureForError() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MethodSpec.GetSignatureForError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InflateMember">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.MemberSpec InflateMember (Mono.CSharp.TypeParameterInflator inflator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.MemberSpec InflateMember(valuetype Mono.CSharp.TypeParameterInflator inflator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MethodSpec.InflateMember(Mono.CSharp.TypeParameterInflator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MemberSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inflator" Type="Mono.CSharp.TypeParameterInflator" />
      </Parameters>
      <Docs>
        <param name="inflator">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public bool IsAsync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MethodSpec.IsAsync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructor">
      <MemberSignature Language="C#" Value="public bool IsConstructor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructor" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MethodSpec.IsConstructor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExtensionMethod">
      <MemberSignature Language="C#" Value="public bool IsExtensionMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExtensionMethod" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MethodSpec.IsExtensionMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReservedMethod">
      <MemberSignature Language="C#" Value="public bool IsReservedMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReservedMethod" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MethodSpec.IsReservedMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSealed">
      <MemberSignature Language="C#" Value="public bool IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSealed" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MethodSpec.IsSealed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVirtual">
      <MemberSignature Language="C#" Value="public bool IsVirtual { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVirtual" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MethodSpec.IsVirtual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeGenericMethod">
      <MemberSignature Language="C#" Value="public Mono.CSharp.MethodSpec MakeGenericMethod (Mono.CSharp.IMemberContext context, Mono.CSharp.TypeSpec[] targs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.MethodSpec MakeGenericMethod(class Mono.CSharp.IMemberContext context, class Mono.CSharp.TypeSpec[] targs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MethodSpec.MakeGenericMethod(Mono.CSharp.IMemberContext,Mono.CSharp.TypeSpec[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MethodSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Mono.CSharp.IMemberContext" />
        <Parameter Name="targs" Type="Mono.CSharp.TypeSpec[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="targs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberDefinition">
      <MemberSignature Language="C#" Value="public Mono.CSharp.IMethodDefinition MemberDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.IMethodDefinition MemberDefinition" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MethodSpec.MemberDefinition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.IMethodDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mono.CSharp.IInterfaceMemberSpec.MemberType">
      <MemberSignature Language="C#" Value="Mono.CSharp.TypeSpec Mono.CSharp.IInterfaceMemberSpec.MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.TypeSpec Mono.CSharp.IInterfaceMemberSpec.MemberType" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MethodSpec.Mono#CSharp#IInterfaceMemberSpec#MemberType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mutate">
      <MemberSignature Language="C#" Value="public Mono.CSharp.MethodSpec Mutate (Mono.CSharp.TypeParameterMutator mutator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.MethodSpec Mutate(class Mono.CSharp.TypeParameterMutator mutator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MethodSpec.Mutate(Mono.CSharp.TypeParameterMutator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MethodSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mutator" Type="Mono.CSharp.TypeParameterMutator" />
      </Parameters>
      <Docs>
        <param name="mutator">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public Mono.CSharp.AParametersCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.AParametersCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MethodSpec.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.AParametersCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveMissingDependencies">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.List&lt;Mono.CSharp.MissingTypeSpecReference&gt; ResolveMissingDependencies (Mono.CSharp.MemberSpec caller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.List`1&lt;class Mono.CSharp.MissingTypeSpecReference&gt; ResolveMissingDependencies(class Mono.CSharp.MemberSpec caller) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MethodSpec.ResolveMissingDependencies(Mono.CSharp.MemberSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Mono.CSharp.MissingTypeSpecReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="caller" Type="Mono.CSharp.MemberSpec" />
      </Parameters>
      <Docs>
        <param name="caller">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnType">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeSpec ReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.TypeSpec ReturnType" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MethodSpec.ReturnType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeSpec[] TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.TypeSpec[] TypeArguments" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MethodSpec.TypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>