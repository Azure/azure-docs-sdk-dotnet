<Type Name="Comparer" FullName="Mono.CSharp.Comparer">
  <TypeSignature Language="C#" Value="public class Comparer : System.Collections.IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Comparer extends System.Object implements class System.Collections.IComparer" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.Comparer" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (object a, object b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(object a, object b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Comparer.Compare(System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Object" />
        <Parameter Name="b" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static System.Reflection.EventInfo[] Sort (System.Reflection.EventInfo[] inf);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.EventInfo[] Sort(class System.Reflection.EventInfo[] inf) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Comparer.Sort(System.Reflection.EventInfo[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inf" Type="System.Reflection.EventInfo[]" />
      </Parameters>
      <Docs>
        <param name="inf">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static System.Reflection.MemberInfo[] Sort (System.Reflection.MemberInfo[] inf);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MemberInfo[] Sort(class System.Reflection.MemberInfo[] inf) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Comparer.Sort(System.Reflection.MemberInfo[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inf" Type="System.Reflection.MemberInfo[]" />
      </Parameters>
      <Docs>
        <param name="inf">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static System.Reflection.MethodBase[] Sort (System.Reflection.MethodBase[] inf);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MethodBase[] Sort(class System.Reflection.MethodBase[] inf) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Comparer.Sort(System.Reflection.MethodBase[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inf" Type="System.Reflection.MethodBase[]" />
      </Parameters>
      <Docs>
        <param name="inf">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static System.Reflection.PropertyInfo[] Sort (System.Reflection.PropertyInfo[] inf);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.PropertyInfo[] Sort(class System.Reflection.PropertyInfo[] inf) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Comparer.Sort(System.Reflection.PropertyInfo[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inf" Type="System.Reflection.PropertyInfo[]" />
      </Parameters>
      <Docs>
        <param name="inf">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>