<Type Name="TypeParameterSpec" FullName="Mono.CSharp.TypeParameterSpec">
  <TypeSignature Language="C#" Value="public class TypeParameterSpec : Mono.CSharp.TypeSpec" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeParameterSpec extends Mono.CSharp.TypeSpec" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.TypeParameterSpec" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.TypeSpec</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DisplayDebugInfo()}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeParameterSpec (int index, Mono.CSharp.ITypeDefinition definition, Mono.CSharp.SpecialConstraint spec, Mono.CSharp.Variance variance, Type info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 index, class Mono.CSharp.ITypeDefinition definition, valuetype Mono.CSharp.SpecialConstraint spec, valuetype Mono.CSharp.Variance variance, class System.Type info) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterSpec.#ctor(System.Int32,Mono.CSharp.ITypeDefinition,Mono.CSharp.SpecialConstraint,Mono.CSharp.Variance,System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="definition" Type="Mono.CSharp.ITypeDefinition" />
        <Parameter Name="spec" Type="Mono.CSharp.SpecialConstraint" />
        <Parameter Name="variance" Type="Mono.CSharp.Variance" />
        <Parameter Name="info" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="definition">To be added.</param>
        <param name="spec">To be added.</param>
        <param name="variance">To be added.</param>
        <param name="info">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeParameterSpec (Mono.CSharp.TypeSpec declaringType, int index, Mono.CSharp.ITypeDefinition definition, Mono.CSharp.SpecialConstraint spec, Mono.CSharp.Variance variance, Type info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.TypeSpec declaringType, int32 index, class Mono.CSharp.ITypeDefinition definition, valuetype Mono.CSharp.SpecialConstraint spec, valuetype Mono.CSharp.Variance variance, class System.Type info) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterSpec.#ctor(Mono.CSharp.TypeSpec,System.Int32,Mono.CSharp.ITypeDefinition,Mono.CSharp.SpecialConstraint,Mono.CSharp.Variance,System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="declaringType" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="definition" Type="Mono.CSharp.ITypeDefinition" />
        <Parameter Name="spec" Type="Mono.CSharp.SpecialConstraint" />
        <Parameter Name="variance" Type="Mono.CSharp.Variance" />
        <Parameter Name="info" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="declaringType">To be added.</param>
        <param name="index">To be added.</param>
        <param name="definition">To be added.</param>
        <param name="spec">To be added.</param>
        <param name="variance">To be added.</param>
        <param name="info">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaredPosition">
      <MemberSignature Language="C#" Value="public int DeclaredPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DeclaredPosition" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeParameterSpec.DeclaredPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDebugInfo">
      <MemberSignature Language="C#" Value="public string DisplayDebugInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string DisplayDebugInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterSpec.DisplayDebugInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyTypes">
      <MemberSignature Language="C#" Value="public static readonly Mono.CSharp.TypeParameterSpec[] EmptyTypes;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Mono.CSharp.TypeParameterSpec[] EmptyTypes" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.TypeParameterSpec.EmptyTypes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeParameterSpec[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEffectiveBase">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeSpec GetEffectiveBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.TypeSpec GetEffectiveBase() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterSpec.GetEffectiveBase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureForDocumentation">
      <MemberSignature Language="C#" Value="public override string GetSignatureForDocumentation (bool explicitName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetSignatureForDocumentation(bool explicitName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterSpec.GetSignatureForDocumentation(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="explicitName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="explicitName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureForError">
      <MemberSignature Language="C#" Value="public override string GetSignatureForError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetSignatureForError() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterSpec.GetSignatureForError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnyTypeConstraint">
      <MemberSignature Language="C#" Value="public bool HasAnyTypeConstraint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnyTypeConstraint" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeParameterSpec.HasAnyTypeConstraint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnyTypeParameterConstrained">
      <MemberSignature Language="C#" Value="public static bool HasAnyTypeParameterConstrained (Mono.CSharp.IGenericMethodDefinition md);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasAnyTypeParameterConstrained(class Mono.CSharp.IGenericMethodDefinition md) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterSpec.HasAnyTypeParameterConstrained(Mono.CSharp.IGenericMethodDefinition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="md" Type="Mono.CSharp.IGenericMethodDefinition" />
      </Parameters>
      <Docs>
        <param name="md">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnyTypeParameterTypeConstrained">
      <MemberSignature Language="C#" Value="public static bool HasAnyTypeParameterTypeConstrained (Mono.CSharp.IGenericMethodDefinition md);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasAnyTypeParameterTypeConstrained(class Mono.CSharp.IGenericMethodDefinition md) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterSpec.HasAnyTypeParameterTypeConstrained(Mono.CSharp.IGenericMethodDefinition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="md" Type="Mono.CSharp.IGenericMethodDefinition" />
      </Parameters>
      <Docs>
        <param name="md">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDependencyOn">
      <MemberSignature Language="C#" Value="public bool HasDependencyOn (Mono.CSharp.TypeSpec type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasDependencyOn(class Mono.CSharp.TypeSpec type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterSpec.HasDependencyOn(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSameConstraintsDefinition">
      <MemberSignature Language="C#" Value="public bool HasSameConstraintsDefinition (Mono.CSharp.TypeParameterSpec other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasSameConstraintsDefinition(class Mono.CSharp.TypeParameterSpec other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterSpec.HasSameConstraintsDefinition(Mono.CSharp.TypeParameterSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Mono.CSharp.TypeParameterSpec" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSameConstraintsImplementation">
      <MemberSignature Language="C#" Value="public bool HasSameConstraintsImplementation (Mono.CSharp.TypeParameterSpec other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasSameConstraintsImplementation(class Mono.CSharp.TypeParameterSpec other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterSpec.HasSameConstraintsImplementation(Mono.CSharp.TypeParameterSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Mono.CSharp.TypeParameterSpec" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSpecialClass">
      <MemberSignature Language="C#" Value="public bool HasSpecialClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasSpecialClass" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeParameterSpec.HasSpecialClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSpecialConstructor">
      <MemberSignature Language="C#" Value="public bool HasSpecialConstructor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasSpecialConstructor" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeParameterSpec.HasSpecialConstructor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSpecialStruct">
      <MemberSignature Language="C#" Value="public bool HasSpecialStruct { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasSpecialStruct" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeParameterSpec.HasSpecialStruct" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasTypeConstraint">
      <MemberSignature Language="C#" Value="public bool HasTypeConstraint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasTypeConstraint" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeParameterSpec.HasTypeConstraint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InflateConstraints">
      <MemberSignature Language="C#" Value="public void InflateConstraints (Mono.CSharp.TypeParameterInflator inflator, Mono.CSharp.TypeParameterSpec tps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InflateConstraints(valuetype Mono.CSharp.TypeParameterInflator inflator, class Mono.CSharp.TypeParameterSpec tps) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterSpec.InflateConstraints(Mono.CSharp.TypeParameterInflator,Mono.CSharp.TypeParameterSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inflator" Type="Mono.CSharp.TypeParameterInflator" />
        <Parameter Name="tps" Type="Mono.CSharp.TypeParameterSpec" />
      </Parameters>
      <Docs>
        <param name="inflator">To be added.</param>
        <param name="tps">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InflateConstraints">
      <MemberSignature Language="C#" Value="public static Mono.CSharp.TypeParameterSpec[] InflateConstraints (Mono.CSharp.TypeParameterInflator inflator, Mono.CSharp.TypeParameterSpec[] tparams);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.CSharp.TypeParameterSpec[] InflateConstraints(valuetype Mono.CSharp.TypeParameterInflator inflator, class Mono.CSharp.TypeParameterSpec[] tparams) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterSpec.InflateConstraints(Mono.CSharp.TypeParameterInflator,Mono.CSharp.TypeParameterSpec[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeParameterSpec[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inflator" Type="Mono.CSharp.TypeParameterInflator" />
        <Parameter Name="tparams" Type="Mono.CSharp.TypeParameterSpec[]" />
      </Parameters>
      <Docs>
        <param name="inflator">To be added.</param>
        <param name="tparams">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InflateConstraints&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Mono.CSharp.TypeParameterSpec[] InflateConstraints&lt;T&gt; (Mono.CSharp.TypeParameterSpec[] tparams, Func&lt;T,Mono.CSharp.TypeParameterInflator&gt; inflatorFactory, T arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.CSharp.TypeParameterSpec[] InflateConstraints&lt;T&gt;(class Mono.CSharp.TypeParameterSpec[] tparams, class System.Func`2&lt;!!T, valuetype Mono.CSharp.TypeParameterInflator&gt; inflatorFactory, !!T arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterSpec.InflateConstraints``1(Mono.CSharp.TypeParameterSpec[],System.Func{``0,Mono.CSharp.TypeParameterInflator},``0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeParameterSpec[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tparams" Type="Mono.CSharp.TypeParameterSpec[]" />
        <Parameter Name="inflatorFactory" Type="System.Func&lt;T,Mono.CSharp.TypeParameterInflator&gt;" />
        <Parameter Name="arg" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="tparams">To be added.</param>
        <param name="inflatorFactory">To be added.</param>
        <param name="arg">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InflateMember">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.MemberSpec InflateMember (Mono.CSharp.TypeParameterInflator inflator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.MemberSpec InflateMember(valuetype Mono.CSharp.TypeParameterInflator inflator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterSpec.InflateMember(Mono.CSharp.TypeParameterInflator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MemberSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inflator" Type="Mono.CSharp.TypeParameterInflator" />
      </Parameters>
      <Docs>
        <param name="inflator">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeMemberCache">
      <MemberSignature Language="C#" Value="protected override void InitializeMemberCache (bool onlyTypes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeMemberCache(bool onlyTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterSpec.InitializeMemberCache(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onlyTypes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="onlyTypes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterfaceCache">
      <MemberSignature Language="C#" Value="public Mono.CSharp.MemberCache InterfaceCache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.MemberCache InterfaceCache" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeParameterSpec.InterfaceCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MemberCache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interfaces">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;Mono.CSharp.TypeSpec&gt; Interfaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Mono.CSharp.TypeSpec&gt; Interfaces" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeParameterSpec.Interfaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Mono.CSharp.TypeSpec&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterfacesDefined">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeSpec[] InterfacesDefined { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.TypeSpec[] InterfacesDefined" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeParameterSpec.InterfacesDefined" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstrained">
      <MemberSignature Language="C#" Value="public bool IsConstrained { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstrained" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeParameterSpec.IsConstrained" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConvertibleToInterface">
      <MemberSignature Language="C#" Value="public bool IsConvertibleToInterface (Mono.CSharp.TypeSpec iface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsConvertibleToInterface(class Mono.CSharp.TypeSpec iface) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterSpec.IsConvertibleToInterface(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iface" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="iface">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMethodOwned">
      <MemberSignature Language="C#" Value="public bool IsMethodOwned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMethodOwned" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeParameterSpec.IsMethodOwned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReferenceType">
      <MemberSignature Language="C#" Value="public bool IsReferenceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReferenceType" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeParameterSpec.IsReferenceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValueType">
      <MemberSignature Language="C#" Value="public bool IsValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValueType" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeParameterSpec.IsValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mutate">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.TypeSpec Mutate (Mono.CSharp.TypeParameterMutator mutator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.TypeSpec Mutate(class Mono.CSharp.TypeParameterMutator mutator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterSpec.Mutate(Mono.CSharp.TypeParameterMutator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mutator" Type="Mono.CSharp.TypeParameterMutator" />
      </Parameters>
      <Docs>
        <param name="mutator">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeParameterSpec.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpecialConstraint">
      <MemberSignature Language="C#" Value="public Mono.CSharp.SpecialConstraint SpecialConstraint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Mono.CSharp.SpecialConstraint SpecialConstraint" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeParameterSpec.SpecialConstraint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.SpecialConstraint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeSpec[] TypeArguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.TypeSpec[] TypeArguments" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeParameterSpec.TypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Variance">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Variance Variance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Mono.CSharp.Variance Variance" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeParameterSpec.Variance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Variance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>