<Type Name="EnumConstant" FullName="Mono.CSharp.EnumConstant">
  <TypeSignature Language="C#" Value="public class EnumConstant : Mono.CSharp.Constant" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EnumConstant extends Mono.CSharp.Constant" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.EnumConstant" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.Constant</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EnumConstant (Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EnumConstant.#ctor(Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnumConstant (Mono.CSharp.Constant child, Mono.CSharp.TypeSpec enum_type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.Constant child, class Mono.CSharp.TypeSpec enum_type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EnumConstant.#ctor(Mono.CSharp.Constant,Mono.CSharp.TypeSpec)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="child" Type="Mono.CSharp.Constant" />
        <Parameter Name="enum_type" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="child">To be added.</param>
        <param name="enum_type">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Child">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Constant Child;" />
      <MemberSignature Language="ILAsm" Value=".field public class Mono.CSharp.Constant Child" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.EnumConstant.Child" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Constant</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertExplicitly">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.Constant ConvertExplicitly (bool in_checked_context, Mono.CSharp.TypeSpec target_type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.Constant ConvertExplicitly(bool in_checked_context, class Mono.CSharp.TypeSpec target_type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EnumConstant.ConvertExplicitly(System.Boolean,Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Constant</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="in_checked_context" Type="System.Boolean" />
        <Parameter Name="target_type" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="in_checked_context">To be added.</param>
        <param name="target_type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertImplicitly">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.Constant ConvertImplicitly (Mono.CSharp.TypeSpec type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.Constant ConvertImplicitly(class Mono.CSharp.TypeSpec type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EnumConstant.ConvertImplicitly(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Constant</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public override void Emit (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Emit(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EnumConstant.Emit(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitBranchable">
      <MemberSignature Language="C#" Value="public override void EmitBranchable (Mono.CSharp.EmitContext ec, System.Reflection.Emit.Label label, bool on_true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EmitBranchable(class Mono.CSharp.EmitContext ec, valuetype System.Reflection.Emit.Label label, bool on_true) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EnumConstant.EmitBranchable(Mono.CSharp.EmitContext,System.Reflection.Emit.Label,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
        <Parameter Name="label" Type="System.Reflection.Emit.Label" />
        <Parameter Name="on_true" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="label">To be added.</param>
        <param name="on_true">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitSideEffect">
      <MemberSignature Language="C#" Value="public override void EmitSideEffect (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EmitSideEffect(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EnumConstant.EmitSideEffect(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="public override void EncodeAttributeValue (Mono.CSharp.IMemberContext rc, Mono.CSharp.AttributeEncoder enc, Mono.CSharp.TypeSpec targetType, Mono.CSharp.TypeSpec parameterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EncodeAttributeValue(class Mono.CSharp.IMemberContext rc, class Mono.CSharp.AttributeEncoder enc, class Mono.CSharp.TypeSpec targetType, class Mono.CSharp.TypeSpec parameterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EnumConstant.EncodeAttributeValue(Mono.CSharp.IMemberContext,Mono.CSharp.AttributeEncoder,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.IMemberContext" />
        <Parameter Name="enc" Type="Mono.CSharp.AttributeEncoder" />
        <Parameter Name="targetType" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="parameterType" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="enc">To be added.</param>
        <param name="targetType">To be added.</param>
        <param name="parameterType">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureForError">
      <MemberSignature Language="C#" Value="public override string GetSignatureForError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetSignatureForError() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EnumConstant.GetSignatureForError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypedValue">
      <MemberSignature Language="C#" Value="public override object GetTypedValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetTypedValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EnumConstant.GetTypedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EnumConstant.GetValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueAsLiteral">
      <MemberSignature Language="C#" Value="public override string GetValueAsLiteral ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetValueAsLiteral() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EnumConstant.GetValueAsLiteral" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueAsLong">
      <MemberSignature Language="C#" Value="public override long GetValueAsLong ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetValueAsLong() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EnumConstant.GetValueAsLong" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Increment">
      <MemberSignature Language="C#" Value="public Mono.CSharp.EnumConstant Increment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.EnumConstant Increment() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EnumConstant.Increment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.EnumConstant</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultValue">
      <MemberSignature Language="C#" Value="public override bool IsDefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefaultValue" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EnumConstant.IsDefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNegative">
      <MemberSignature Language="C#" Value="public override bool IsNegative { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNegative" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EnumConstant.IsNegative" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSideEffectFree">
      <MemberSignature Language="C#" Value="public override bool IsSideEffectFree { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSideEffectFree" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EnumConstant.IsSideEffectFree" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsZeroInteger">
      <MemberSignature Language="C#" Value="public override bool IsZeroInteger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsZeroInteger" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EnumConstant.IsZeroInteger" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>