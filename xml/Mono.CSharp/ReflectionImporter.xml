<Type Name="ReflectionImporter" FullName="Mono.CSharp.ReflectionImporter">
  <TypeSignature Language="C#" Value="public sealed class ReflectionImporter : Mono.CSharp.MetadataImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ReflectionImporter extends Mono.CSharp.MetadataImporter" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.ReflectionImporter" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.MetadataImporter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReflectionImporter (Mono.CSharp.ModuleContainer module, Mono.CSharp.BuiltinTypes builtin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.ModuleContainer module, class Mono.CSharp.BuiltinTypes builtin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ReflectionImporter.#ctor(Mono.CSharp.ModuleContainer,Mono.CSharp.BuiltinTypes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="module" Type="Mono.CSharp.ModuleContainer" />
        <Parameter Name="builtin" Type="Mono.CSharp.BuiltinTypes" />
      </Parameters>
      <Docs>
        <param name="module">To be added.</param>
        <param name="builtin">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCompiledType">
      <MemberSignature Language="C#" Value="public override void AddCompiledType (System.Reflection.Emit.TypeBuilder builder, Mono.CSharp.TypeSpec spec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddCompiledType(class System.Reflection.Emit.TypeBuilder builder, class Mono.CSharp.TypeSpec spec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ReflectionImporter.AddCompiledType(System.Reflection.Emit.TypeBuilder,Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Reflection.Emit.TypeBuilder" />
        <Parameter Name="spec" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="spec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetermineKindFromBaseType">
      <MemberSignature Language="C#" Value="protected override Mono.CSharp.MemberKind DetermineKindFromBaseType (Type baseType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype Mono.CSharp.MemberKind DetermineKindFromBaseType(class System.Type baseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ReflectionImporter.DetermineKindFromBaseType(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MemberKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="baseType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasVolatileModifier">
      <MemberSignature Language="C#" Value="protected override bool HasVolatileModifier (Type[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool HasVolatileModifier(class System.Type[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ReflectionImporter.HasVolatileModifier(System.Type[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modifiers" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="modifiers">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportAssembly">
      <MemberSignature Language="C#" Value="public void ImportAssembly (System.Reflection.Assembly assembly, Mono.CSharp.RootNamespace targetNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ImportAssembly(class System.Reflection.Assembly assembly, class Mono.CSharp.RootNamespace targetNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ReflectionImporter.ImportAssembly(System.Reflection.Assembly,Mono.CSharp.RootNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="targetNamespace" Type="Mono.CSharp.RootNamespace" />
      </Parameters>
      <Docs>
        <param name="assembly">To be added.</param>
        <param name="targetNamespace">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportModule">
      <MemberSignature Language="C#" Value="public Mono.CSharp.ImportedModuleDefinition ImportModule (System.Reflection.Module module, Mono.CSharp.RootNamespace targetNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.ImportedModuleDefinition ImportModule(class System.Reflection.Module module, class Mono.CSharp.RootNamespace targetNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ReflectionImporter.ImportModule(System.Reflection.Module,Mono.CSharp.RootNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ImportedModuleDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="module" Type="System.Reflection.Module" />
        <Parameter Name="targetNamespace" Type="Mono.CSharp.RootNamespace" />
      </Parameters>
      <Docs>
        <param name="module">To be added.</param>
        <param name="targetNamespace">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>