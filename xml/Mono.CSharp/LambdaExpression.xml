<Type Name="LambdaExpression" FullName="Mono.CSharp.LambdaExpression">
  <TypeSignature Language="C#" Value="public class LambdaExpression : Mono.CSharp.AnonymousMethodExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LambdaExpression extends Mono.CSharp.AnonymousMethodExpression" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.LambdaExpression" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.AnonymousMethodExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LambdaExpression (Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.LambdaExpression.#ctor(Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override object Accept (Mono.CSharp.StructuralVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Accept(class Mono.CSharp.StructuralVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.LambdaExpression.Accept(Mono.CSharp.StructuralVisitor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Mono.CSharp.StructuralVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompatibleMethodFactory">
      <MemberSignature Language="C#" Value="protected override Mono.CSharp.AnonymousMethodBody CompatibleMethodFactory (Mono.CSharp.TypeSpec returnType, Mono.CSharp.TypeSpec delegateType, Mono.CSharp.ParametersCompiled p, Mono.CSharp.ParametersBlock b);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Mono.CSharp.AnonymousMethodBody CompatibleMethodFactory(class Mono.CSharp.TypeSpec returnType, class Mono.CSharp.TypeSpec delegateType, class Mono.CSharp.ParametersCompiled p, class Mono.CSharp.ParametersBlock b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.LambdaExpression.CompatibleMethodFactory(Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec,Mono.CSharp.ParametersCompiled,Mono.CSharp.ParametersBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.AnonymousMethodBody</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="delegateType" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="p" Type="Mono.CSharp.ParametersCompiled" />
        <Parameter Name="b" Type="Mono.CSharp.ParametersBlock" />
      </Parameters>
      <Docs>
        <param name="returnType">To be added.</param>
        <param name="delegateType">To be added.</param>
        <param name="p">To be added.</param>
        <param name="b">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateExpressionTree">
      <MemberSignature Language="C#" Value="protected override Mono.CSharp.Expression CreateExpressionTree (Mono.CSharp.ResolveContext ec, Mono.CSharp.TypeSpec delegate_type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Mono.CSharp.Expression CreateExpressionTree(class Mono.CSharp.ResolveContext ec, class Mono.CSharp.TypeSpec delegate_type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.LambdaExpression.CreateExpressionTree(Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="delegate_type" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="delegate_type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoResolveParameters">
      <MemberSignature Language="C#" Value="protected override bool DoResolveParameters (Mono.CSharp.ResolveContext rc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool DoResolveParameters(class Mono.CSharp.ResolveContext rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.LambdaExpression.DoResolveParameters(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureForError">
      <MemberSignature Language="C#" Value="public override string GetSignatureForError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetSignatureForError() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.LambdaExpression.GetSignatureForError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasExplicitParameters">
      <MemberSignature Language="C#" Value="public override bool HasExplicitParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasExplicitParameters" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.LambdaExpression.HasExplicitParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveParameters">
      <MemberSignature Language="C#" Value="protected override Mono.CSharp.ParametersCompiled ResolveParameters (Mono.CSharp.ResolveContext ec, Mono.CSharp.TypeInferenceContext tic, Mono.CSharp.TypeSpec delegateType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Mono.CSharp.ParametersCompiled ResolveParameters(class Mono.CSharp.ResolveContext ec, class Mono.CSharp.TypeInferenceContext tic, class Mono.CSharp.TypeSpec delegateType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.LambdaExpression.ResolveParameters(Mono.CSharp.ResolveContext,Mono.CSharp.TypeInferenceContext,Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ParametersCompiled</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="tic" Type="Mono.CSharp.TypeInferenceContext" />
        <Parameter Name="delegateType" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="tic">To be added.</param>
        <param name="delegateType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>