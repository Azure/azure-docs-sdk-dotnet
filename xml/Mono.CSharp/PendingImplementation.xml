<Type Name="PendingImplementation" FullName="Mono.CSharp.PendingImplementation">
  <TypeSignature Language="C#" Value="public class PendingImplementation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PendingImplementation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.PendingImplementation" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetPendingImplementations">
      <MemberSignature Language="C#" Value="public static Mono.CSharp.PendingImplementation GetPendingImplementations (Mono.CSharp.TypeDefinition container);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.CSharp.PendingImplementation GetPendingImplementations(class Mono.CSharp.TypeDefinition container) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.PendingImplementation.GetPendingImplementations(Mono.CSharp.TypeDefinition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.PendingImplementation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="Mono.CSharp.TypeDefinition" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplementMethod">
      <MemberSignature Language="C#" Value="public void ImplementMethod (Mono.CSharp.MemberName name, Mono.CSharp.TypeSpec ifaceType, Mono.CSharp.MethodData method, bool clear_one, out Mono.CSharp.MethodSpec ambiguousCandidate, ref bool optional);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ImplementMethod(class Mono.CSharp.MemberName name, class Mono.CSharp.TypeSpec ifaceType, class Mono.CSharp.MethodData method, bool clear_one, class Mono.CSharp.MethodSpec ambiguousCandidate, bool optional) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.PendingImplementation.ImplementMethod(Mono.CSharp.MemberName,Mono.CSharp.TypeSpec,Mono.CSharp.MethodData,System.Boolean,Mono.CSharp.MethodSpec@,System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="Mono.CSharp.MemberName" />
        <Parameter Name="ifaceType" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="method" Type="Mono.CSharp.MethodData" />
        <Parameter Name="clear_one" Type="System.Boolean" />
        <Parameter Name="ambiguousCandidate" Type="Mono.CSharp.MethodSpec&amp;" RefType="out" />
        <Parameter Name="optional" Type="System.Boolean&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="ifaceType">To be added.</param>
        <param name="method">To be added.</param>
        <param name="clear_one">To be added.</param>
        <param name="ambiguousCandidate">To be added.</param>
        <param name="optional">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterfaceMethod">
      <MemberSignature Language="C#" Value="public Mono.CSharp.MethodSpec InterfaceMethod (Mono.CSharp.MemberName name, Mono.CSharp.TypeSpec iType, Mono.CSharp.MethodData method, Mono.CSharp.PendingImplementation.Operation op, out Mono.CSharp.MethodSpec ambiguousCandidate, ref bool optional);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.MethodSpec InterfaceMethod(class Mono.CSharp.MemberName name, class Mono.CSharp.TypeSpec iType, class Mono.CSharp.MethodData method, valuetype Mono.CSharp.PendingImplementation/Operation op, class Mono.CSharp.MethodSpec ambiguousCandidate, bool optional) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.PendingImplementation.InterfaceMethod(Mono.CSharp.MemberName,Mono.CSharp.TypeSpec,Mono.CSharp.MethodData,Mono.CSharp.PendingImplementation.Operation,Mono.CSharp.MethodSpec@,System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MethodSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="Mono.CSharp.MemberName" />
        <Parameter Name="iType" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="method" Type="Mono.CSharp.MethodData" />
        <Parameter Name="op" Type="Mono.CSharp.PendingImplementation+Operation" />
        <Parameter Name="ambiguousCandidate" Type="Mono.CSharp.MethodSpec&amp;" RefType="out" />
        <Parameter Name="optional" Type="System.Boolean&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="iType">To be added.</param>
        <param name="method">To be added.</param>
        <param name="op">To be added.</param>
        <param name="ambiguousCandidate">To be added.</param>
        <param name="optional">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInterfaceMethod">
      <MemberSignature Language="C#" Value="public Mono.CSharp.MethodSpec IsInterfaceMethod (Mono.CSharp.MemberName name, Mono.CSharp.TypeSpec ifaceType, Mono.CSharp.MethodData method, out Mono.CSharp.MethodSpec ambiguousCandidate, ref bool optional);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.MethodSpec IsInterfaceMethod(class Mono.CSharp.MemberName name, class Mono.CSharp.TypeSpec ifaceType, class Mono.CSharp.MethodData method, class Mono.CSharp.MethodSpec ambiguousCandidate, bool optional) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.PendingImplementation.IsInterfaceMethod(Mono.CSharp.MemberName,Mono.CSharp.TypeSpec,Mono.CSharp.MethodData,Mono.CSharp.MethodSpec@,System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MethodSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="Mono.CSharp.MemberName" />
        <Parameter Name="ifaceType" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="method" Type="Mono.CSharp.MethodData" />
        <Parameter Name="ambiguousCandidate" Type="Mono.CSharp.MethodSpec&amp;" RefType="out" />
        <Parameter Name="optional" Type="System.Boolean&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="ifaceType">To be added.</param>
        <param name="method">To be added.</param>
        <param name="ambiguousCandidate">To be added.</param>
        <param name="optional">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyPendingMethods">
      <MemberSignature Language="C#" Value="public bool VerifyPendingMethods ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyPendingMethods() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.PendingImplementation.VerifyPendingMethods" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>