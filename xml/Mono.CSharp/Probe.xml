<Type Name="Probe" FullName="Mono.CSharp.Probe">
  <TypeSignature Language="C#" Value="public abstract class Probe : Mono.CSharp.Expression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Probe extends Mono.CSharp.Expression" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.Probe" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.Expression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Probe (Mono.CSharp.Expression expr, Mono.CSharp.Expression probe_type, Mono.CSharp.Location l);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.Expression expr, class Mono.CSharp.Expression probe_type, valuetype Mono.CSharp.Location l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Probe.#ctor(Mono.CSharp.Expression,Mono.CSharp.Expression,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expr" Type="Mono.CSharp.Expression" />
        <Parameter Name="probe_type" Type="Mono.CSharp.Expression" />
        <Parameter Name="l" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="expr">To be added.</param>
        <param name="probe_type">To be added.</param>
        <param name="l">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneTo">
      <MemberSignature Language="C#" Value="protected override void CloneTo (Mono.CSharp.CloneContext clonectx, Mono.CSharp.Expression t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneTo(class Mono.CSharp.CloneContext clonectx, class Mono.CSharp.Expression t) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Probe.CloneTo(Mono.CSharp.CloneContext,Mono.CSharp.Expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clonectx" Type="Mono.CSharp.CloneContext" />
        <Parameter Name="t" Type="Mono.CSharp.Expression" />
      </Parameters>
      <Docs>
        <param name="clonectx">To be added.</param>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsEmitWithAwait">
      <MemberSignature Language="C#" Value="public override bool ContainsEmitWithAwait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ContainsEmitWithAwait() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Probe.ContainsEmitWithAwait" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitSideEffect">
      <MemberSignature Language="C#" Value="public override void EmitSideEffect (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EmitSideEffect(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Probe.EmitSideEffect(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="expr">
      <MemberSignature Language="C#" Value="protected Mono.CSharp.Expression expr;" />
      <MemberSignature Language="ILAsm" Value=".field family class Mono.CSharp.Expression expr" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.Probe.expr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expr">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Expression Expr { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.Expression Expr" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Probe.Expr" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowAnalysis">
      <MemberSignature Language="C#" Value="public override void FlowAnalysis (Mono.CSharp.FlowAnalysisContext fc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FlowAnalysis(class Mono.CSharp.FlowAnalysisContext fc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Probe.FlowAnalysis(Mono.CSharp.FlowAnalysisContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fc" Type="Mono.CSharp.FlowAnalysisContext" />
      </Parameters>
      <Docs>
        <param name="fc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasConditionalAccess">
      <MemberSignature Language="C#" Value="public override bool HasConditionalAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool HasConditionalAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Probe.HasConditionalAccess" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperatorName">
      <MemberSignature Language="C#" Value="protected abstract string OperatorName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OperatorName" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Probe.OperatorName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="probe_type_expr">
      <MemberSignature Language="C#" Value="protected Mono.CSharp.TypeSpec probe_type_expr;" />
      <MemberSignature Language="ILAsm" Value=".field family class Mono.CSharp.TypeSpec probe_type_expr" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.Probe.probe_type_expr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProbeType">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Expression ProbeType;" />
      <MemberSignature Language="ILAsm" Value=".field public class Mono.CSharp.Expression ProbeType" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.Probe.ProbeType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveCommon">
      <MemberSignature Language="C#" Value="protected Mono.CSharp.Expression ResolveCommon (Mono.CSharp.ResolveContext rc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Mono.CSharp.Expression ResolveCommon(class Mono.CSharp.ResolveContext rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Probe.ResolveCommon(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveProbeType">
      <MemberSignature Language="C#" Value="protected virtual void ResolveProbeType (Mono.CSharp.ResolveContext rc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ResolveProbeType(class Mono.CSharp.ResolveContext rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Probe.ResolveProbeType(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>