<Type Name="BlockConstant" FullName="Mono.CSharp.BlockConstant">
  <TypeSignature Language="C#" Value="public class BlockConstant : Mono.CSharp.BlockVariable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BlockConstant extends Mono.CSharp.BlockVariable" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.BlockConstant" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.BlockVariable</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockConstant (Mono.CSharp.FullNamedExpression type, Mono.CSharp.LocalVariable li);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.FullNamedExpression type, class Mono.CSharp.LocalVariable li) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.BlockConstant.#ctor(Mono.CSharp.FullNamedExpression,Mono.CSharp.LocalVariable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="Mono.CSharp.FullNamedExpression" />
        <Parameter Name="li" Type="Mono.CSharp.LocalVariable" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="li">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override object Accept (Mono.CSharp.StructuralVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Accept(class Mono.CSharp.StructuralVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.BlockConstant.Accept(Mono.CSharp.StructuralVisitor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Mono.CSharp.StructuralVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public override void Emit (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Emit(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.BlockConstant.Emit(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveInitializer">
      <MemberSignature Language="C#" Value="protected override Mono.CSharp.Expression ResolveInitializer (Mono.CSharp.BlockContext bc, Mono.CSharp.LocalVariable li, Mono.CSharp.Expression initializer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Mono.CSharp.Expression ResolveInitializer(class Mono.CSharp.BlockContext bc, class Mono.CSharp.LocalVariable li, class Mono.CSharp.Expression initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.BlockConstant.ResolveInitializer(Mono.CSharp.BlockContext,Mono.CSharp.LocalVariable,Mono.CSharp.Expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bc" Type="Mono.CSharp.BlockContext" />
        <Parameter Name="li" Type="Mono.CSharp.LocalVariable" />
        <Parameter Name="initializer" Type="Mono.CSharp.Expression" />
      </Parameters>
      <Docs>
        <param name="bc">To be added.</param>
        <param name="li">To be added.</param>
        <param name="initializer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>