<Type Name="TryFinallyBlock" FullName="Mono.CSharp.TryFinallyBlock">
  <TypeSignature Language="C#" Value="public abstract class TryFinallyBlock : Mono.CSharp.ExceptionStatement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TryFinallyBlock extends Mono.CSharp.ExceptionStatement" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.TryFinallyBlock" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.ExceptionStatement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TryFinallyBlock (Mono.CSharp.Statement stmt, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.Statement stmt, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TryFinallyBlock.#ctor(Mono.CSharp.Statement,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stmt" Type="Mono.CSharp.Statement" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="stmt">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoEmit">
      <MemberSignature Language="C#" Value="protected override sealed void DoEmit (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DoEmit(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TryFinallyBlock.DoEmit(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoFlowAnalysis">
      <MemberSignature Language="C#" Value="protected override bool DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext fc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool DoFlowAnalysis(class Mono.CSharp.FlowAnalysisContext fc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TryFinallyBlock.DoFlowAnalysis(Mono.CSharp.FlowAnalysisContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fc" Type="Mono.CSharp.FlowAnalysisContext" />
      </Parameters>
      <Docs>
        <param name="fc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitBeginFinallyBlock">
      <MemberSignature Language="C#" Value="protected virtual bool EmitBeginFinallyBlock (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool EmitBeginFinallyBlock(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TryFinallyBlock.EmitBeginFinallyBlock(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitFinallyBody">
      <MemberSignature Language="C#" Value="public abstract void EmitFinallyBody (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EmitFinallyBody(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TryFinallyBlock.EmitFinallyBody(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitForDispose">
      <MemberSignature Language="C#" Value="public override void EmitForDispose (Mono.CSharp.EmitContext ec, System.Reflection.Emit.LocalBuilder pc, System.Reflection.Emit.Label end, bool have_dispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EmitForDispose(class Mono.CSharp.EmitContext ec, class System.Reflection.Emit.LocalBuilder pc, valuetype System.Reflection.Emit.Label end, bool have_dispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TryFinallyBlock.EmitForDispose(Mono.CSharp.EmitContext,System.Reflection.Emit.LocalBuilder,System.Reflection.Emit.Label,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
        <Parameter Name="pc" Type="System.Reflection.Emit.LocalBuilder" />
        <Parameter Name="end" Type="System.Reflection.Emit.Label" />
        <Parameter Name="have_dispatcher" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="pc">To be added.</param>
        <param name="end">To be added.</param>
        <param name="have_dispatcher">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitTryBody">
      <MemberSignature Language="C#" Value="protected abstract void EmitTryBody (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EmitTryBody(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TryFinallyBlock.EmitTryBody(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkReachable">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.Reachability MarkReachable (Mono.CSharp.Reachability rc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Mono.CSharp.Reachability MarkReachable(valuetype Mono.CSharp.Reachability rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TryFinallyBlock.MarkReachable(Mono.CSharp.Reachability)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Reachability</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.Reachability" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareForDispose">
      <MemberSignature Language="C#" Value="public override System.Reflection.Emit.Label PrepareForDispose (Mono.CSharp.EmitContext ec, System.Reflection.Emit.Label end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Reflection.Emit.Label PrepareForDispose(class Mono.CSharp.EmitContext ec, valuetype System.Reflection.Emit.Label end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TryFinallyBlock.PrepareForDispose(Mono.CSharp.EmitContext,System.Reflection.Emit.Label)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.Label</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
        <Parameter Name="end" Type="System.Reflection.Emit.Label" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="end">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public override bool Resolve (Mono.CSharp.BlockContext bc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Resolve(class Mono.CSharp.BlockContext bc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TryFinallyBlock.Resolve(Mono.CSharp.BlockContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bc" Type="Mono.CSharp.BlockContext" />
      </Parameters>
      <Docs>
        <param name="bc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Statement">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Statement Statement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.Statement Statement" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TryFinallyBlock.Statement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Statement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="stmt">
      <MemberSignature Language="C#" Value="protected Mono.CSharp.Statement stmt;" />
      <MemberSignature Language="ILAsm" Value=".field family class Mono.CSharp.Statement stmt" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.TryFinallyBlock.stmt" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Statement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>