<Type Name="DelegateCreation" FullName="Mono.CSharp.DelegateCreation">
  <TypeSignature Language="C#" Value="public abstract class DelegateCreation : Mono.CSharp.Expression, Mono.CSharp.OverloadResolver.IErrorHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DelegateCreation extends Mono.CSharp.Expression implements class Mono.CSharp.OverloadResolver/IErrorHandler" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.DelegateCreation" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.Expression</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Mono.CSharp.OverloadResolver+IErrorHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DelegateCreation ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.DelegateCreation.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowSpecialMethodsInvocation">
      <MemberSignature Language="C#" Value="public bool AllowSpecialMethodsInvocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSpecialMethodsInvocation" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.DelegateCreation.AllowSpecialMethodsInvocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="constructor_method">
      <MemberSignature Language="C#" Value="protected Mono.CSharp.MethodSpec constructor_method;" />
      <MemberSignature Language="ILAsm" Value=".field family class Mono.CSharp.MethodSpec constructor_method" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.DelegateCreation.constructor_method" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MethodSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsEmitWithAwait">
      <MemberSignature Language="C#" Value="public override bool ContainsEmitWithAwait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ContainsEmitWithAwait() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.DelegateCreation.ContainsEmitWithAwait" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDelegateMethodArguments">
      <MemberSignature Language="C#" Value="public static Mono.CSharp.Arguments CreateDelegateMethodArguments (Mono.CSharp.ResolveContext rc, Mono.CSharp.AParametersCollection pd, Mono.CSharp.TypeSpec[] types, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.CSharp.Arguments CreateDelegateMethodArguments(class Mono.CSharp.ResolveContext rc, class Mono.CSharp.AParametersCollection pd, class Mono.CSharp.TypeSpec[] types, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.DelegateCreation.CreateDelegateMethodArguments(Mono.CSharp.ResolveContext,Mono.CSharp.AParametersCollection,Mono.CSharp.TypeSpec[],Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Arguments</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="pd" Type="Mono.CSharp.AParametersCollection" />
        <Parameter Name="types" Type="Mono.CSharp.TypeSpec[]" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="pd">To be added.</param>
        <param name="types">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateExpressionTree">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.Expression CreateExpressionTree (Mono.CSharp.ResolveContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.Expression CreateExpressionTree(class Mono.CSharp.ResolveContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.DelegateCreation.CreateExpressionTree(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoResolve">
      <MemberSignature Language="C#" Value="protected override Mono.CSharp.Expression DoResolve (Mono.CSharp.ResolveContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Mono.CSharp.Expression DoResolve(class Mono.CSharp.ResolveContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.DelegateCreation.DoResolve(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public override void Emit (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Emit(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.DelegateCreation.Emit(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowAnalysis">
      <MemberSignature Language="C#" Value="public override void FlowAnalysis (Mono.CSharp.FlowAnalysisContext fc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FlowAnalysis(class Mono.CSharp.FlowAnalysisContext fc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.DelegateCreation.FlowAnalysis(Mono.CSharp.FlowAnalysisContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fc" Type="Mono.CSharp.FlowAnalysisContext" />
      </Parameters>
      <Docs>
        <param name="fc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplicitStandardConversionExists">
      <MemberSignature Language="C#" Value="public static bool ImplicitStandardConversionExists (Mono.CSharp.ResolveContext ec, Mono.CSharp.MethodGroupExpr mg, Mono.CSharp.TypeSpec target_type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ImplicitStandardConversionExists(class Mono.CSharp.ResolveContext ec, class Mono.CSharp.MethodGroupExpr mg, class Mono.CSharp.TypeSpec target_type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.DelegateCreation.ImplicitStandardConversionExists(Mono.CSharp.ResolveContext,Mono.CSharp.MethodGroupExpr,Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="mg" Type="Mono.CSharp.MethodGroupExpr" />
        <Parameter Name="target_type" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="mg">To be added.</param>
        <param name="target_type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="method_group">
      <MemberSignature Language="C#" Value="protected Mono.CSharp.MethodGroupExpr method_group;" />
      <MemberSignature Language="ILAsm" Value=".field family class Mono.CSharp.MethodGroupExpr method_group" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.DelegateCreation.method_group" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MethodGroupExpr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mono.CSharp.OverloadResolver+IErrorHandler.AmbiguousCandidates">
      <MemberSignature Language="C#" Value="bool OverloadResolver.IErrorHandler.AmbiguousCandidates (Mono.CSharp.ResolveContext ec, Mono.CSharp.MemberSpec best, Mono.CSharp.MemberSpec ambiguous);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Mono.CSharp.OverloadResolver.IErrorHandler.AmbiguousCandidates(class Mono.CSharp.ResolveContext ec, class Mono.CSharp.MemberSpec best, class Mono.CSharp.MemberSpec ambiguous) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.DelegateCreation.Mono#CSharp#OverloadResolver#IErrorHandler#AmbiguousCandidates(Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec,Mono.CSharp.MemberSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="best" Type="Mono.CSharp.MemberSpec" />
        <Parameter Name="ambiguous" Type="Mono.CSharp.MemberSpec" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="best">To be added.</param>
        <param name="ambiguous">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mono.CSharp.OverloadResolver+IErrorHandler.ArgumentMismatch">
      <MemberSignature Language="C#" Value="bool OverloadResolver.IErrorHandler.ArgumentMismatch (Mono.CSharp.ResolveContext rc, Mono.CSharp.MemberSpec best, Mono.CSharp.Argument arg, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Mono.CSharp.OverloadResolver.IErrorHandler.ArgumentMismatch(class Mono.CSharp.ResolveContext rc, class Mono.CSharp.MemberSpec best, class Mono.CSharp.Argument arg, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.DelegateCreation.Mono#CSharp#OverloadResolver#IErrorHandler#ArgumentMismatch(Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec,Mono.CSharp.Argument,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="best" Type="Mono.CSharp.MemberSpec" />
        <Parameter Name="arg" Type="Mono.CSharp.Argument" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="best">To be added.</param>
        <param name="arg">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mono.CSharp.OverloadResolver+IErrorHandler.NoArgumentMatch">
      <MemberSignature Language="C#" Value="bool OverloadResolver.IErrorHandler.NoArgumentMatch (Mono.CSharp.ResolveContext rc, Mono.CSharp.MemberSpec best);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Mono.CSharp.OverloadResolver.IErrorHandler.NoArgumentMatch(class Mono.CSharp.ResolveContext rc, class Mono.CSharp.MemberSpec best) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.DelegateCreation.Mono#CSharp#OverloadResolver#IErrorHandler#NoArgumentMatch(Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="best" Type="Mono.CSharp.MemberSpec" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="best">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mono.CSharp.OverloadResolver+IErrorHandler.TypeInferenceFailed">
      <MemberSignature Language="C#" Value="bool OverloadResolver.IErrorHandler.TypeInferenceFailed (Mono.CSharp.ResolveContext rc, Mono.CSharp.MemberSpec best);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Mono.CSharp.OverloadResolver.IErrorHandler.TypeInferenceFailed(class Mono.CSharp.ResolveContext rc, class Mono.CSharp.MemberSpec best) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.DelegateCreation.Mono#CSharp#OverloadResolver#IErrorHandler#TypeInferenceFailed(Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="best" Type="Mono.CSharp.MemberSpec" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="best">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
