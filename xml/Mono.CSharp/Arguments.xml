<Type Name="Arguments" FullName="Mono.CSharp.Arguments">
  <TypeSignature Language="C#" Value="public class Arguments" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Arguments extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.Arguments" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Arguments (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Arguments.#ctor(System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Mono.CSharp.Argument arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Mono.CSharp.Argument arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Arguments.Add(Mono.CSharp.Argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="Mono.CSharp.Argument" />
      </Parameters>
      <Docs>
        <param name="arg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (Mono.CSharp.Arguments args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class Mono.CSharp.Arguments args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Arguments.AddRange(Mono.CSharp.Arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="Mono.CSharp.Arguments" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckArrayAsAttribute">
      <MemberSignature Language="C#" Value="public void CheckArrayAsAttribute (Mono.CSharp.CompilerContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckArrayAsAttribute(class Mono.CSharp.CompilerContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Arguments.CheckArrayAsAttribute(Mono.CSharp.CompilerContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Mono.CSharp.CompilerContext" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Arguments Clone (Mono.CSharp.CloneContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.Arguments Clone(class Mono.CSharp.CloneContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Arguments.Clone(Mono.CSharp.CloneContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Arguments</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Mono.CSharp.CloneContext" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsEmitWithAwait">
      <MemberSignature Language="C#" Value="public bool ContainsEmitWithAwait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsEmitWithAwait() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Arguments.ContainsEmitWithAwait" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Arguments.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDynamicBinderArguments">
      <MemberSignature Language="C#" Value="public Mono.CSharp.ArrayInitializer CreateDynamicBinderArguments (Mono.CSharp.ResolveContext rc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.ArrayInitializer CreateDynamicBinderArguments(class Mono.CSharp.ResolveContext rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Arguments.CreateDynamicBinderArguments(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ArrayInitializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateForExpressionTree">
      <MemberSignature Language="C#" Value="public static Mono.CSharp.Arguments CreateForExpressionTree (Mono.CSharp.ResolveContext ec, Mono.CSharp.Arguments args, Mono.CSharp.Expression[] e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.CSharp.Arguments CreateForExpressionTree(class Mono.CSharp.ResolveContext ec, class Mono.CSharp.Arguments args, class Mono.CSharp.Expression[] e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Arguments.CreateForExpressionTree(Mono.CSharp.ResolveContext,Mono.CSharp.Arguments,Mono.CSharp.Expression[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Arguments</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="args" Type="Mono.CSharp.Arguments" />
        <Parameter Name="e" Type="Mono.CSharp.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="args">To be added.</param>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public void Emit (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Emit(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Arguments.Emit(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public virtual Mono.CSharp.Arguments Emit (Mono.CSharp.EmitContext ec, bool dup_args, bool prepareAwait);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Mono.CSharp.Arguments Emit(class Mono.CSharp.EmitContext ec, bool dup_args, bool prepareAwait) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Arguments.Emit(Mono.CSharp.EmitContext,System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Arguments</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
        <Parameter Name="dup_args" Type="System.Boolean" />
        <Parameter Name="prepareAwait" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="dup_args">To be added.</param>
        <param name="prepareAwait">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowAnalysis">
      <MemberSignature Language="C#" Value="public virtual void FlowAnalysis (Mono.CSharp.FlowAnalysisContext fc, System.Collections.Generic.List&lt;Mono.CSharp.MovableArgument&gt; movable = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FlowAnalysis(class Mono.CSharp.FlowAnalysisContext fc, class System.Collections.Generic.List`1&lt;class Mono.CSharp.MovableArgument&gt; movable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Arguments.FlowAnalysis(Mono.CSharp.FlowAnalysisContext,System.Collections.Generic.List{Mono.CSharp.MovableArgument})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fc" Type="Mono.CSharp.FlowAnalysisContext" />
        <Parameter Name="movable" Type="System.Collections.Generic.List&lt;Mono.CSharp.MovableArgument&gt;" />
      </Parameters>
      <Docs>
        <param name="fc">To be added.</param>
        <param name="movable">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;Mono.CSharp.Argument&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.List`1/Enumerator&lt;class Mono.CSharp.Argument&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Arguments.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Mono.CSharp.Argument&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDynamic">
      <MemberSignature Language="C#" Value="public bool HasDynamic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDynamic" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Arguments.HasDynamic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasNamed">
      <MemberSignature Language="C#" Value="public bool HasNamed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasNamed" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Arguments.HasNamed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, Mono.CSharp.Argument arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class Mono.CSharp.Argument arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Arguments.Insert(System.Int32,Mono.CSharp.Argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="arg" Type="Mono.CSharp.Argument" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="arg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Argument this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.Argument Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Arguments.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Argument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeExpression">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression[] MakeExpression (Mono.CSharp.Arguments args, Mono.CSharp.BuilderContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression[] MakeExpression(class Mono.CSharp.Arguments args, class Mono.CSharp.BuilderContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Arguments.MakeExpression(Mono.CSharp.Arguments,Mono.CSharp.BuilderContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="Mono.CSharp.Arguments" />
        <Parameter Name="ctx" Type="Mono.CSharp.BuilderContext" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkOrderedArgument">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Arguments MarkOrderedArgument (Mono.CSharp.NamedArgument a);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.Arguments MarkOrderedArgument(class Mono.CSharp.NamedArgument a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Arguments.MarkOrderedArgument(Mono.CSharp.NamedArgument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Arguments</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Mono.CSharp.NamedArgument" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Arguments.RemoveAt(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public void Resolve (Mono.CSharp.ResolveContext ec, out bool dynamic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resolve(class Mono.CSharp.ResolveContext ec, bool dynamic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Arguments.Resolve(Mono.CSharp.ResolveContext,System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="dynamic" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="dynamic">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>