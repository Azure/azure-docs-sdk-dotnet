<Type Name="Expression" FullName="Mono.CSharp.Expression">
  <TypeSignature Language="C#" Value="public abstract class Expression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Expression extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.Expression" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Expression ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public virtual object Accept (Mono.CSharp.StructuralVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Accept(class Mono.CSharp.StructuralVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Accept(Mono.CSharp.StructuralVisitor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Mono.CSharp.StructuralVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReduceLambda">
      <MemberSignature Language="C#" Value="public virtual Mono.CSharp.MethodGroupExpr CanReduceLambda (Mono.CSharp.AnonymousMethodBody body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Mono.CSharp.MethodGroupExpr CanReduceLambda(class Mono.CSharp.AnonymousMethodBody body) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.CanReduceLambda(Mono.CSharp.AnonymousMethodBody)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MethodGroupExpr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="Mono.CSharp.AnonymousMethodBody" />
      </Parameters>
      <Docs>
        <param name="body">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual Mono.CSharp.Expression Clone (Mono.CSharp.CloneContext clonectx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Mono.CSharp.Expression Clone(class Mono.CSharp.CloneContext clonectx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Clone(Mono.CSharp.CloneContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clonectx" Type="Mono.CSharp.CloneContext" />
      </Parameters>
      <Docs>
        <param name="clonectx">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneTo">
      <MemberSignature Language="C#" Value="protected virtual void CloneTo (Mono.CSharp.CloneContext clonectx, Mono.CSharp.Expression target);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CloneTo(class Mono.CSharp.CloneContext clonectx, class Mono.CSharp.Expression target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.CloneTo(Mono.CSharp.CloneContext,Mono.CSharp.Expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clonectx" Type="Mono.CSharp.CloneContext" />
        <Parameter Name="target" Type="Mono.CSharp.Expression" />
      </Parameters>
      <Docs>
        <param name="clonectx">To be added.</param>
        <param name="target">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructorLookup">
      <MemberSignature Language="C#" Value="public static Mono.CSharp.MethodSpec ConstructorLookup (Mono.CSharp.ResolveContext rc, Mono.CSharp.TypeSpec type, ref Mono.CSharp.Arguments args, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.CSharp.MethodSpec ConstructorLookup(class Mono.CSharp.ResolveContext rc, class Mono.CSharp.TypeSpec type, class Mono.CSharp.Arguments args, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.ConstructorLookup(Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,Mono.CSharp.Arguments@,Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MethodSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="args" Type="Mono.CSharp.Arguments&amp;" RefType="ref" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="type">To be added.</param>
        <param name="args">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsEmitWithAwait">
      <MemberSignature Language="C#" Value="public virtual bool ContainsEmitWithAwait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsEmitWithAwait() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.ContainsEmitWithAwait" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertExpressionToArrayIndex">
      <MemberSignature Language="C#" Value="protected Mono.CSharp.Expression ConvertExpressionToArrayIndex (Mono.CSharp.ResolveContext ec, Mono.CSharp.Expression source, bool pointerArray = false);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Mono.CSharp.Expression ConvertExpressionToArrayIndex(class Mono.CSharp.ResolveContext ec, class Mono.CSharp.Expression source, bool pointerArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.ConvertExpressionToArrayIndex(Mono.CSharp.ResolveContext,Mono.CSharp.Expression,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="source" Type="Mono.CSharp.Expression" />
        <Parameter Name="pointerArray" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="source">To be added.</param>
        <param name="pointerArray">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateExpressionFactoryCall">
      <MemberSignature Language="C#" Value="protected Mono.CSharp.Expression CreateExpressionFactoryCall (Mono.CSharp.ResolveContext ec, string name, Mono.CSharp.Arguments args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Mono.CSharp.Expression CreateExpressionFactoryCall(class Mono.CSharp.ResolveContext ec, string name, class Mono.CSharp.Arguments args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.CreateExpressionFactoryCall(Mono.CSharp.ResolveContext,System.String,Mono.CSharp.Arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="args" Type="Mono.CSharp.Arguments" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="name">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateExpressionFactoryCall">
      <MemberSignature Language="C#" Value="protected Mono.CSharp.Expression CreateExpressionFactoryCall (Mono.CSharp.ResolveContext ec, string name, Mono.CSharp.TypeArguments typeArguments, Mono.CSharp.Arguments args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Mono.CSharp.Expression CreateExpressionFactoryCall(class Mono.CSharp.ResolveContext ec, string name, class Mono.CSharp.TypeArguments typeArguments, class Mono.CSharp.Arguments args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.CreateExpressionFactoryCall(Mono.CSharp.ResolveContext,System.String,Mono.CSharp.TypeArguments,Mono.CSharp.Arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="typeArguments" Type="Mono.CSharp.TypeArguments" />
        <Parameter Name="args" Type="Mono.CSharp.Arguments" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="name">To be added.</param>
        <param name="typeArguments">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateExpressionFactoryCall">
      <MemberSignature Language="C#" Value="public static Mono.CSharp.Expression CreateExpressionFactoryCall (Mono.CSharp.ResolveContext ec, string name, Mono.CSharp.TypeArguments typeArguments, Mono.CSharp.Arguments args, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.CSharp.Expression CreateExpressionFactoryCall(class Mono.CSharp.ResolveContext ec, string name, class Mono.CSharp.TypeArguments typeArguments, class Mono.CSharp.Arguments args, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.CreateExpressionFactoryCall(Mono.CSharp.ResolveContext,System.String,Mono.CSharp.TypeArguments,Mono.CSharp.Arguments,Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="typeArguments" Type="Mono.CSharp.TypeArguments" />
        <Parameter Name="args" Type="Mono.CSharp.Arguments" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="name">To be added.</param>
        <param name="typeArguments">To be added.</param>
        <param name="args">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateExpressionTree">
      <MemberSignature Language="C#" Value="public abstract Mono.CSharp.Expression CreateExpressionTree (Mono.CSharp.ResolveContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Mono.CSharp.Expression CreateExpressionTree(class Mono.CSharp.ResolveContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.CreateExpressionTree(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateExpressionTypeExpression">
      <MemberSignature Language="C#" Value="protected static Mono.CSharp.TypeExpr CreateExpressionTypeExpression (Mono.CSharp.ResolveContext ec, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class Mono.CSharp.TypeExpr CreateExpressionTypeExpression(class Mono.CSharp.ResolveContext ec, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.CreateExpressionTypeExpression(Mono.CSharp.ResolveContext,Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeExpr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoResolve">
      <MemberSignature Language="C#" Value="protected abstract Mono.CSharp.Expression DoResolve (Mono.CSharp.ResolveContext rc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Mono.CSharp.Expression DoResolve(class Mono.CSharp.ResolveContext rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.DoResolve(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoResolveLValue">
      <MemberSignature Language="C#" Value="public virtual Mono.CSharp.Expression DoResolveLValue (Mono.CSharp.ResolveContext rc, Mono.CSharp.Expression right_side);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Mono.CSharp.Expression DoResolveLValue(class Mono.CSharp.ResolveContext rc, class Mono.CSharp.Expression right_side) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.DoResolveLValue(Mono.CSharp.ResolveContext,Mono.CSharp.Expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="right_side" Type="Mono.CSharp.Expression" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="right_side">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="eclass">
      <MemberSignature Language="C#" Value="public Mono.CSharp.ExprClass eclass;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype Mono.CSharp.ExprClass eclass" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.Expression.eclass" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ExprClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public abstract void Emit (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Emit(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Emit(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitBranchable">
      <MemberSignature Language="C#" Value="public virtual void EmitBranchable (Mono.CSharp.EmitContext ec, System.Reflection.Emit.Label target, bool on_true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EmitBranchable(class Mono.CSharp.EmitContext ec, valuetype System.Reflection.Emit.Label target, bool on_true) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.EmitBranchable(Mono.CSharp.EmitContext,System.Reflection.Emit.Label,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
        <Parameter Name="target" Type="System.Reflection.Emit.Label" />
        <Parameter Name="on_true" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="target">To be added.</param>
        <param name="on_true">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitExpressionsList">
      <MemberSignature Language="C#" Value="protected static void EmitExpressionsList (Mono.CSharp.EmitContext ec, System.Collections.Generic.List&lt;Mono.CSharp.Expression&gt; expressions);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void EmitExpressionsList(class Mono.CSharp.EmitContext ec, class System.Collections.Generic.List`1&lt;class Mono.CSharp.Expression&gt; expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.EmitExpressionsList(Mono.CSharp.EmitContext,System.Collections.Generic.List{Mono.CSharp.Expression})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
        <Parameter Name="expressions" Type="System.Collections.Generic.List&lt;Mono.CSharp.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="expressions">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitSideEffect">
      <MemberSignature Language="C#" Value="public virtual void EmitSideEffect (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EmitSideEffect(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.EmitSideEffect(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitToField">
      <MemberSignature Language="C#" Value="public virtual Mono.CSharp.Expression EmitToField (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Mono.CSharp.Expression EmitToField(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.EmitToField(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitToFieldSource">
      <MemberSignature Language="C#" Value="protected virtual Mono.CSharp.FieldExpr EmitToFieldSource (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Mono.CSharp.FieldExpr EmitToFieldSource(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.EmitToFieldSource(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.FieldExpr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="public virtual void EncodeAttributeValue (Mono.CSharp.IMemberContext rc, Mono.CSharp.AttributeEncoder enc, Mono.CSharp.TypeSpec targetType, Mono.CSharp.TypeSpec parameterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeAttributeValue(class Mono.CSharp.IMemberContext rc, class Mono.CSharp.AttributeEncoder enc, class Mono.CSharp.TypeSpec targetType, class Mono.CSharp.TypeSpec parameterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.EncodeAttributeValue(Mono.CSharp.IMemberContext,Mono.CSharp.AttributeEncoder,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.IMemberContext" />
        <Parameter Name="enc" Type="Mono.CSharp.AttributeEncoder" />
        <Parameter Name="targetType" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="parameterType" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="enc">To be added.</param>
        <param name="targetType">To be added.</param>
        <param name="parameterType">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_ConstantCanBeInitializedWithNullOnly">
      <MemberSignature Language="C#" Value="public void Error_ConstantCanBeInitializedWithNullOnly (Mono.CSharp.ResolveContext rc, Mono.CSharp.TypeSpec type, Mono.CSharp.Location loc, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Error_ConstantCanBeInitializedWithNullOnly(class Mono.CSharp.ResolveContext rc, class Mono.CSharp.TypeSpec type, valuetype Mono.CSharp.Location loc, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Error_ConstantCanBeInitializedWithNullOnly(Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,Mono.CSharp.Location,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="type">To be added.</param>
        <param name="loc">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_ExpressionMustBeConstant">
      <MemberSignature Language="C#" Value="public void Error_ExpressionMustBeConstant (Mono.CSharp.ResolveContext rc, Mono.CSharp.Location loc, string e_name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Error_ExpressionMustBeConstant(class Mono.CSharp.ResolveContext rc, valuetype Mono.CSharp.Location loc, string e_name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Error_ExpressionMustBeConstant(Mono.CSharp.ResolveContext,Mono.CSharp.Location,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
        <Parameter Name="e_name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="loc">To be added.</param>
        <param name="e_name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_InvalidExpressionStatement">
      <MemberSignature Language="C#" Value="public void Error_InvalidExpressionStatement (Mono.CSharp.BlockContext bc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Error_InvalidExpressionStatement(class Mono.CSharp.BlockContext bc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Error_InvalidExpressionStatement(Mono.CSharp.BlockContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bc" Type="Mono.CSharp.BlockContext" />
      </Parameters>
      <Docs>
        <param name="bc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_InvalidExpressionStatement">
      <MemberSignature Language="C#" Value="public void Error_InvalidExpressionStatement (Mono.CSharp.Report report);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Error_InvalidExpressionStatement(class Mono.CSharp.Report report) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Error_InvalidExpressionStatement(Mono.CSharp.Report)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="report" Type="Mono.CSharp.Report" />
      </Parameters>
      <Docs>
        <param name="report">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_InvalidExpressionStatement">
      <MemberSignature Language="C#" Value="protected virtual void Error_InvalidExpressionStatement (Mono.CSharp.Report report, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Error_InvalidExpressionStatement(class Mono.CSharp.Report report, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Error_InvalidExpressionStatement(Mono.CSharp.Report,Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="report" Type="Mono.CSharp.Report" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="report">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_NamedArgument">
      <MemberSignature Language="C#" Value="protected static void Error_NamedArgument (Mono.CSharp.NamedArgument na, Mono.CSharp.Report Report);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void Error_NamedArgument(class Mono.CSharp.NamedArgument na, class Mono.CSharp.Report Report) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Error_NamedArgument(Mono.CSharp.NamedArgument,Mono.CSharp.Report)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="na" Type="Mono.CSharp.NamedArgument" />
        <Parameter Name="Report" Type="Mono.CSharp.Report" />
      </Parameters>
      <Docs>
        <param name="na">To be added.</param>
        <param name="Report">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_NegativeArrayIndex">
      <MemberSignature Language="C#" Value="protected virtual void Error_NegativeArrayIndex (Mono.CSharp.ResolveContext ec, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Error_NegativeArrayIndex(class Mono.CSharp.ResolveContext ec, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Error_NegativeArrayIndex(Mono.CSharp.ResolveContext,Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_NullPropagatingLValue">
      <MemberSignature Language="C#" Value="protected void Error_NullPropagatingLValue (Mono.CSharp.ResolveContext rc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Error_NullPropagatingLValue(class Mono.CSharp.ResolveContext rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Error_NullPropagatingLValue(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_NullShortCircuitInsideExpressionTree">
      <MemberSignature Language="C#" Value="protected void Error_NullShortCircuitInsideExpressionTree (Mono.CSharp.ResolveContext rc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Error_NullShortCircuitInsideExpressionTree(class Mono.CSharp.ResolveContext rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Error_NullShortCircuitInsideExpressionTree(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_OperatorCannotBeApplied">
      <MemberSignature Language="C#" Value="public virtual void Error_OperatorCannotBeApplied (Mono.CSharp.ResolveContext rc, Mono.CSharp.Location loc, string oper, Mono.CSharp.TypeSpec t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Error_OperatorCannotBeApplied(class Mono.CSharp.ResolveContext rc, valuetype Mono.CSharp.Location loc, string oper, class Mono.CSharp.TypeSpec t) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Error_OperatorCannotBeApplied(Mono.CSharp.ResolveContext,Mono.CSharp.Location,System.String,Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
        <Parameter Name="oper" Type="System.String" />
        <Parameter Name="t" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="loc">To be added.</param>
        <param name="oper">To be added.</param>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_PointerInsideExpressionTree">
      <MemberSignature Language="C#" Value="protected void Error_PointerInsideExpressionTree (Mono.CSharp.ResolveContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Error_PointerInsideExpressionTree(class Mono.CSharp.ResolveContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Error_PointerInsideExpressionTree(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_TypeArgumentsCannotBeUsed">
      <MemberSignature Language="C#" Value="public void Error_TypeArgumentsCannotBeUsed (Mono.CSharp.IMemberContext context, Mono.CSharp.MemberSpec member, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Error_TypeArgumentsCannotBeUsed(class Mono.CSharp.IMemberContext context, class Mono.CSharp.MemberSpec member, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Error_TypeArgumentsCannotBeUsed(Mono.CSharp.IMemberContext,Mono.CSharp.MemberSpec,Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Mono.CSharp.IMemberContext" />
        <Parameter Name="member" Type="Mono.CSharp.MemberSpec" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="member">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_TypeArgumentsCannotBeUsed">
      <MemberSignature Language="C#" Value="public static void Error_TypeArgumentsCannotBeUsed (Mono.CSharp.IMemberContext context, string exprType, string name, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Error_TypeArgumentsCannotBeUsed(class Mono.CSharp.IMemberContext context, string exprType, string name, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Error_TypeArgumentsCannotBeUsed(Mono.CSharp.IMemberContext,System.String,System.String,Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Mono.CSharp.IMemberContext" />
        <Parameter Name="exprType" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="exprType">To be added.</param>
        <param name="name">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_TypeDoesNotContainDefinition">
      <MemberSignature Language="C#" Value="public virtual void Error_TypeDoesNotContainDefinition (Mono.CSharp.ResolveContext ec, Mono.CSharp.TypeSpec type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Error_TypeDoesNotContainDefinition(class Mono.CSharp.ResolveContext ec, class Mono.CSharp.TypeSpec type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Error_TypeDoesNotContainDefinition(Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="type">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_TypeDoesNotContainDefinition">
      <MemberSignature Language="C#" Value="public static void Error_TypeDoesNotContainDefinition (Mono.CSharp.ResolveContext ec, Mono.CSharp.Location loc, Mono.CSharp.TypeSpec type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Error_TypeDoesNotContainDefinition(class Mono.CSharp.ResolveContext ec, valuetype Mono.CSharp.Location loc, class Mono.CSharp.TypeSpec type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Error_TypeDoesNotContainDefinition(Mono.CSharp.ResolveContext,Mono.CSharp.Location,Mono.CSharp.TypeSpec,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="loc">To be added.</param>
        <param name="type">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_UnexpectedKind">
      <MemberSignature Language="C#" Value="public virtual void Error_UnexpectedKind (Mono.CSharp.ResolveContext ec, Mono.CSharp.ResolveFlags flags, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Error_UnexpectedKind(class Mono.CSharp.ResolveContext ec, valuetype Mono.CSharp.ResolveFlags flags, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Error_UnexpectedKind(Mono.CSharp.ResolveContext,Mono.CSharp.ResolveFlags,Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="flags" Type="Mono.CSharp.ResolveFlags" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_UnexpectedKind">
      <MemberSignature Language="C#" Value="public static void Error_UnexpectedKind (Mono.CSharp.IMemberContext ctx, Mono.CSharp.Expression memberExpr, string expected, string was, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Error_UnexpectedKind(class Mono.CSharp.IMemberContext ctx, class Mono.CSharp.Expression memberExpr, string expected, string was, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Error_UnexpectedKind(Mono.CSharp.IMemberContext,Mono.CSharp.Expression,System.String,System.String,Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Mono.CSharp.IMemberContext" />
        <Parameter Name="memberExpr" Type="Mono.CSharp.Expression" />
        <Parameter Name="expected" Type="System.String" />
        <Parameter Name="was" Type="System.String" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="memberExpr">To be added.</param>
        <param name="expected">To be added.</param>
        <param name="was">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_ValueAssignment">
      <MemberSignature Language="C#" Value="public virtual void Error_ValueAssignment (Mono.CSharp.ResolveContext rc, Mono.CSharp.Expression rhs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Error_ValueAssignment(class Mono.CSharp.ResolveContext rc, class Mono.CSharp.Expression rhs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Error_ValueAssignment(Mono.CSharp.ResolveContext,Mono.CSharp.Expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="rhs" Type="Mono.CSharp.Expression" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="rhs">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_ValueCannotBeConverted">
      <MemberSignature Language="C#" Value="public virtual void Error_ValueCannotBeConverted (Mono.CSharp.ResolveContext ec, Mono.CSharp.TypeSpec target, bool expl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Error_ValueCannotBeConverted(class Mono.CSharp.ResolveContext ec, class Mono.CSharp.TypeSpec target, bool expl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Error_ValueCannotBeConverted(Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="target" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="expl" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="target">To be added.</param>
        <param name="expl">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_ValueCannotBeConvertedCore">
      <MemberSignature Language="C#" Value="protected void Error_ValueCannotBeConvertedCore (Mono.CSharp.ResolveContext ec, Mono.CSharp.Location loc, Mono.CSharp.TypeSpec target, bool expl);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Error_ValueCannotBeConvertedCore(class Mono.CSharp.ResolveContext ec, valuetype Mono.CSharp.Location loc, class Mono.CSharp.TypeSpec target, bool expl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Error_ValueCannotBeConvertedCore(Mono.CSharp.ResolveContext,Mono.CSharp.Location,Mono.CSharp.TypeSpec,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
        <Parameter Name="target" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="expl" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="loc">To be added.</param>
        <param name="target">To be added.</param>
        <param name="expl">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_VoidInvalidInTheContext">
      <MemberSignature Language="C#" Value="public static void Error_VoidInvalidInTheContext (Mono.CSharp.Location loc, Mono.CSharp.Report Report);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Error_VoidInvalidInTheContext(valuetype Mono.CSharp.Location loc, class Mono.CSharp.Report Report) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Error_VoidInvalidInTheContext(Mono.CSharp.Location,Mono.CSharp.Report)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
        <Parameter Name="Report" Type="Mono.CSharp.Report" />
      </Parameters>
      <Docs>
        <param name="loc">To be added.</param>
        <param name="Report">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_VoidPointerOperation">
      <MemberSignature Language="C#" Value="protected void Error_VoidPointerOperation (Mono.CSharp.ResolveContext rc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Error_VoidPointerOperation(class Mono.CSharp.ResolveContext rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Error_VoidPointerOperation(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorIsInaccesible">
      <MemberSignature Language="C#" Value="public static void ErrorIsInaccesible (Mono.CSharp.IMemberContext rc, string member, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ErrorIsInaccesible(class Mono.CSharp.IMemberContext rc, string member, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.ErrorIsInaccesible(Mono.CSharp.IMemberContext,System.String,Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.IMemberContext" />
        <Parameter Name="member" Type="System.String" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="member">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExprClassName">
      <MemberSignature Language="C#" Value="public virtual string ExprClassName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExprClassName" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Expression.ExprClassName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExprClassToResolveFlags">
      <MemberSignature Language="C#" Value="public Mono.CSharp.ResolveFlags ExprClassToResolveFlags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Mono.CSharp.ResolveFlags ExprClassToResolveFlags" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Expression.ExprClassToResolveFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ResolveFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowAnalysis">
      <MemberSignature Language="C#" Value="public virtual void FlowAnalysis (Mono.CSharp.FlowAnalysisContext fc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FlowAnalysis(class Mono.CSharp.FlowAnalysisContext fc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.FlowAnalysis(Mono.CSharp.FlowAnalysisContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fc" Type="Mono.CSharp.FlowAnalysisContext" />
      </Parameters>
      <Docs>
        <param name="fc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowAnalysisConditional">
      <MemberSignature Language="C#" Value="public virtual void FlowAnalysisConditional (Mono.CSharp.FlowAnalysisContext fc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FlowAnalysisConditional(class Mono.CSharp.FlowAnalysisContext fc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.FlowAnalysisConditional(Mono.CSharp.FlowAnalysisContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fc" Type="Mono.CSharp.FlowAnalysisContext" />
      </Parameters>
      <Docs>
        <param name="fc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOperatorFalse">
      <MemberSignature Language="C#" Value="protected static Mono.CSharp.Expression GetOperatorFalse (Mono.CSharp.ResolveContext ec, Mono.CSharp.Expression e, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class Mono.CSharp.Expression GetOperatorFalse(class Mono.CSharp.ResolveContext ec, class Mono.CSharp.Expression e, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.GetOperatorFalse(Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="e" Type="Mono.CSharp.Expression" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="e">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOperatorTrue">
      <MemberSignature Language="C#" Value="protected static Mono.CSharp.Expression GetOperatorTrue (Mono.CSharp.ResolveContext ec, Mono.CSharp.Expression e, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class Mono.CSharp.Expression GetOperatorTrue(class Mono.CSharp.ResolveContext ec, class Mono.CSharp.Expression e, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.GetOperatorTrue(Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="e" Type="Mono.CSharp.Expression" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="e">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureForError">
      <MemberSignature Language="C#" Value="public virtual string GetSignatureForError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetSignatureForError() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.GetSignatureForError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasConditionalAccess">
      <MemberSignature Language="C#" Value="public virtual bool HasConditionalAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasConditionalAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.HasConditionalAccess" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNeverNull">
      <MemberSignature Language="C#" Value="public static bool IsNeverNull (Mono.CSharp.Expression expr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNeverNull(class Mono.CSharp.Expression expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.IsNeverNull(Mono.CSharp.Expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expr" Type="Mono.CSharp.Expression" />
      </Parameters>
      <Docs>
        <param name="expr">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public virtual bool IsNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNull" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Expression.IsNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullPropagatingValid">
      <MemberSignature Language="C#" Value="protected static bool IsNullPropagatingValid (Mono.CSharp.TypeSpec type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool IsNullPropagatingValid(class Mono.CSharp.TypeSpec type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.IsNullPropagatingValid(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSideEffectFree">
      <MemberSignature Language="C#" Value="public virtual bool IsSideEffectFree { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSideEffectFree" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Expression.IsSideEffectFree" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiftMemberType">
      <MemberSignature Language="C#" Value="protected Mono.CSharp.TypeSpec LiftMemberType (Mono.CSharp.ResolveContext rc, Mono.CSharp.TypeSpec type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Mono.CSharp.TypeSpec LiftMemberType(class Mono.CSharp.ResolveContext rc, class Mono.CSharp.TypeSpec type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.LiftMemberType(Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="loc">
      <MemberSignature Language="C#" Value="protected Mono.CSharp.Location loc;" />
      <MemberSignature Language="ILAsm" Value=".field family valuetype Mono.CSharp.Location loc" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.Expression.loc" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Location</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Location Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Mono.CSharp.Location Location" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Expression.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Location</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeExpression">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.Expression MakeExpression (Mono.CSharp.BuilderContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression MakeExpression(class Mono.CSharp.BuilderContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.MakeExpression(Mono.CSharp.BuilderContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Mono.CSharp.BuilderContext" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakePointerAccess">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Expression MakePointerAccess (Mono.CSharp.ResolveContext rc, Mono.CSharp.TypeSpec type, Mono.CSharp.Arguments args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.Expression MakePointerAccess(class Mono.CSharp.ResolveContext rc, class Mono.CSharp.TypeSpec type, class Mono.CSharp.Arguments args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.MakePointerAccess(Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,Mono.CSharp.Arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="args" Type="Mono.CSharp.Arguments" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="type">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberLookup">
      <MemberSignature Language="C#" Value="public static Mono.CSharp.Expression MemberLookup (Mono.CSharp.IMemberContext rc, bool errorMode, Mono.CSharp.TypeSpec queried_type, string name, int arity, Mono.CSharp.Expression.MemberLookupRestrictions restrictions, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.CSharp.Expression MemberLookup(class Mono.CSharp.IMemberContext rc, bool errorMode, class Mono.CSharp.TypeSpec queried_type, string name, int32 arity, valuetype Mono.CSharp.Expression/MemberLookupRestrictions restrictions, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.MemberLookup(Mono.CSharp.IMemberContext,System.Boolean,Mono.CSharp.TypeSpec,System.String,System.Int32,Mono.CSharp.Expression.MemberLookupRestrictions,Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.IMemberContext" />
        <Parameter Name="errorMode" Type="System.Boolean" />
        <Parameter Name="queried_type" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="arity" Type="System.Int32" />
        <Parameter Name="restrictions" Type="Mono.CSharp.Expression+MemberLookupRestrictions" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="errorMode">To be added.</param>
        <param name="queried_type">To be added.</param>
        <param name="name">To be added.</param>
        <param name="arity">To be added.</param>
        <param name="restrictions">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberLookupToExpression">
      <MemberSignature Language="C#" Value="public static Mono.CSharp.Expression MemberLookupToExpression (Mono.CSharp.IMemberContext rc, System.Collections.Generic.IList&lt;Mono.CSharp.MemberSpec&gt; members, bool errorMode, Mono.CSharp.TypeSpec queried_type, string name, int arity, Mono.CSharp.Expression.MemberLookupRestrictions restrictions, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.CSharp.Expression MemberLookupToExpression(class Mono.CSharp.IMemberContext rc, class System.Collections.Generic.IList`1&lt;class Mono.CSharp.MemberSpec&gt; members, bool errorMode, class Mono.CSharp.TypeSpec queried_type, string name, int32 arity, valuetype Mono.CSharp.Expression/MemberLookupRestrictions restrictions, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.MemberLookupToExpression(Mono.CSharp.IMemberContext,System.Collections.Generic.IList{Mono.CSharp.MemberSpec},System.Boolean,Mono.CSharp.TypeSpec,System.String,System.Int32,Mono.CSharp.Expression.MemberLookupRestrictions,Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.IMemberContext" />
        <Parameter Name="members" Type="System.Collections.Generic.IList&lt;Mono.CSharp.MemberSpec&gt;" />
        <Parameter Name="errorMode" Type="System.Boolean" />
        <Parameter Name="queried_type" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="arity" Type="System.Int32" />
        <Parameter Name="restrictions" Type="Mono.CSharp.Expression+MemberLookupRestrictions" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="members">To be added.</param>
        <param name="errorMode">To be added.</param>
        <param name="queried_type">To be added.</param>
        <param name="name">To be added.</param>
        <param name="arity">To be added.</param>
        <param name="restrictions">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProbeIdenticalTypeName">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Expression ProbeIdenticalTypeName (Mono.CSharp.ResolveContext rc, Mono.CSharp.Expression left, Mono.CSharp.SimpleName name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.Expression ProbeIdenticalTypeName(class Mono.CSharp.ResolveContext rc, class Mono.CSharp.Expression left, class Mono.CSharp.SimpleName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.ProbeIdenticalTypeName(Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.SimpleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="left" Type="Mono.CSharp.Expression" />
        <Parameter Name="name" Type="Mono.CSharp.SimpleName" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="left">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Expression Resolve (Mono.CSharp.ResolveContext rc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.Expression Resolve(class Mono.CSharp.ResolveContext rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Resolve(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Expression Resolve (Mono.CSharp.ResolveContext ec, Mono.CSharp.ResolveFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.Expression Resolve(class Mono.CSharp.ResolveContext ec, valuetype Mono.CSharp.ResolveFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Resolve(Mono.CSharp.ResolveContext,Mono.CSharp.ResolveFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="flags" Type="Mono.CSharp.ResolveFlags" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsType">
      <MemberSignature Language="C#" Value="public virtual Mono.CSharp.TypeSpec ResolveAsType (Mono.CSharp.IMemberContext mc, bool allowUnboundTypeArguments = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Mono.CSharp.TypeSpec ResolveAsType(class Mono.CSharp.IMemberContext mc, bool allowUnboundTypeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.ResolveAsType(Mono.CSharp.IMemberContext,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mc" Type="Mono.CSharp.IMemberContext" />
        <Parameter Name="allowUnboundTypeArguments" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mc">To be added.</param>
        <param name="allowUnboundTypeArguments">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveLabelConstant">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Constant ResolveLabelConstant (Mono.CSharp.ResolveContext rc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.Constant ResolveLabelConstant(class Mono.CSharp.ResolveContext rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.ResolveLabelConstant(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Constant</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveLValue">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Expression ResolveLValue (Mono.CSharp.ResolveContext ec, Mono.CSharp.Expression right_side);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.Expression ResolveLValue(class Mono.CSharp.ResolveContext ec, class Mono.CSharp.Expression right_side) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.ResolveLValue(Mono.CSharp.ResolveContext,Mono.CSharp.Expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="right_side" Type="Mono.CSharp.Expression" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="right_side">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartLocation">
      <MemberSignature Language="C#" Value="public virtual Mono.CSharp.Location StartLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Mono.CSharp.Location StartLocation" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Expression.StartLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Location</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="type">
      <MemberSignature Language="C#" Value="protected Mono.CSharp.TypeSpec type;" />
      <MemberSignature Language="ILAsm" Value=".field family class Mono.CSharp.TypeSpec type" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.Expression.type" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeSpec Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.TypeSpec Type" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Expression.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafeError">
      <MemberSignature Language="C#" Value="public static void UnsafeError (Mono.CSharp.Report Report, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UnsafeError(class Mono.CSharp.Report Report, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.UnsafeError(Mono.CSharp.Report,Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Report" Type="Mono.CSharp.Report" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="Report">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafeError">
      <MemberSignature Language="C#" Value="public static void UnsafeError (Mono.CSharp.ResolveContext ec, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UnsafeError(class Mono.CSharp.ResolveContext ec, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.UnsafeError(Mono.CSharp.ResolveContext,Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Warning_UnreachableExpression">
      <MemberSignature Language="C#" Value="public static void Warning_UnreachableExpression (Mono.CSharp.ResolveContext rc, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Warning_UnreachableExpression(class Mono.CSharp.ResolveContext rc, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Expression.Warning_UnreachableExpression(Mono.CSharp.ResolveContext,Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>