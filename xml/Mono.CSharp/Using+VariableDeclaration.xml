<Type Name="Using+VariableDeclaration" FullName="Mono.CSharp.Using+VariableDeclaration">
  <TypeSignature Language="C#" Value="public class Using.VariableDeclaration : Mono.CSharp.BlockVariable" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit Using/VariableDeclaration extends Mono.CSharp.BlockVariable" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.Using.VariableDeclaration" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.BlockVariable</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VariableDeclaration (Mono.CSharp.Expression expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.Expression expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Using.VariableDeclaration.#ctor(Mono.CSharp.Expression)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expr" Type="Mono.CSharp.Expression" />
      </Parameters>
      <Docs>
        <param name="expr">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VariableDeclaration (Mono.CSharp.FullNamedExpression type, Mono.CSharp.LocalVariable li);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.FullNamedExpression type, class Mono.CSharp.LocalVariable li) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Using.VariableDeclaration.#ctor(Mono.CSharp.FullNamedExpression,Mono.CSharp.LocalVariable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="Mono.CSharp.FullNamedExpression" />
        <Parameter Name="li" Type="Mono.CSharp.LocalVariable" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="li">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VariableDeclaration (Mono.CSharp.LocalVariable li, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.LocalVariable li, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Using.VariableDeclaration.#ctor(Mono.CSharp.LocalVariable,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="li" Type="Mono.CSharp.LocalVariable" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="li">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override object Accept (Mono.CSharp.StructuralVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Accept(class Mono.CSharp.StructuralVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Using.VariableDeclaration.Accept(Mono.CSharp.StructuralVisitor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Mono.CSharp.StructuralVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckIDiposableConversion">
      <MemberSignature Language="C#" Value="protected virtual void CheckIDiposableConversion (Mono.CSharp.BlockContext bc, Mono.CSharp.LocalVariable li, Mono.CSharp.Expression initializer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CheckIDiposableConversion(class Mono.CSharp.BlockContext bc, class Mono.CSharp.LocalVariable li, class Mono.CSharp.Expression initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Using.VariableDeclaration.CheckIDiposableConversion(Mono.CSharp.BlockContext,Mono.CSharp.LocalVariable,Mono.CSharp.Expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bc" Type="Mono.CSharp.BlockContext" />
        <Parameter Name="li" Type="Mono.CSharp.LocalVariable" />
        <Parameter Name="initializer" Type="Mono.CSharp.Expression" />
      </Parameters>
      <Docs>
        <param name="bc">To be added.</param>
        <param name="li">To be added.</param>
        <param name="initializer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDisposeCall">
      <MemberSignature Language="C#" Value="protected virtual Mono.CSharp.Statement CreateDisposeCall (Mono.CSharp.BlockContext bc, Mono.CSharp.LocalVariable lv);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Mono.CSharp.Statement CreateDisposeCall(class Mono.CSharp.BlockContext bc, class Mono.CSharp.LocalVariable lv) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Using.VariableDeclaration.CreateDisposeCall(Mono.CSharp.BlockContext,Mono.CSharp.LocalVariable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Statement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bc" Type="Mono.CSharp.BlockContext" />
        <Parameter Name="lv" Type="Mono.CSharp.LocalVariable" />
      </Parameters>
      <Docs>
        <param name="bc">To be added.</param>
        <param name="lv">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitDispose">
      <MemberSignature Language="C#" Value="public void EmitDispose (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EmitDispose(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Using.VariableDeclaration.EmitDispose(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNested">
      <MemberSignature Language="C#" Value="public bool IsNested { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNested" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Using.VariableDeclaration.IsNested" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public override bool Resolve (Mono.CSharp.BlockContext bc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Resolve(class Mono.CSharp.BlockContext bc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Using.VariableDeclaration.Resolve(Mono.CSharp.BlockContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bc" Type="Mono.CSharp.BlockContext" />
      </Parameters>
      <Docs>
        <param name="bc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveDeclaratorInitializer">
      <MemberSignature Language="C#" Value="public void ResolveDeclaratorInitializer (Mono.CSharp.BlockContext bc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveDeclaratorInitializer(class Mono.CSharp.BlockContext bc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Using.VariableDeclaration.ResolveDeclaratorInitializer(Mono.CSharp.BlockContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bc" Type="Mono.CSharp.BlockContext" />
      </Parameters>
      <Docs>
        <param name="bc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveExpression">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Expression ResolveExpression (Mono.CSharp.BlockContext bc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.Expression ResolveExpression(class Mono.CSharp.BlockContext bc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Using.VariableDeclaration.ResolveExpression(Mono.CSharp.BlockContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bc" Type="Mono.CSharp.BlockContext" />
      </Parameters>
      <Docs>
        <param name="bc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveInitializer">
      <MemberSignature Language="C#" Value="protected override Mono.CSharp.Expression ResolveInitializer (Mono.CSharp.BlockContext bc, Mono.CSharp.LocalVariable li, Mono.CSharp.Expression initializer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Mono.CSharp.Expression ResolveInitializer(class Mono.CSharp.BlockContext bc, class Mono.CSharp.LocalVariable li, class Mono.CSharp.Expression initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Using.VariableDeclaration.ResolveInitializer(Mono.CSharp.BlockContext,Mono.CSharp.LocalVariable,Mono.CSharp.Expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bc" Type="Mono.CSharp.BlockContext" />
        <Parameter Name="li" Type="Mono.CSharp.LocalVariable" />
        <Parameter Name="initializer" Type="Mono.CSharp.Expression" />
      </Parameters>
      <Docs>
        <param name="bc">To be added.</param>
        <param name="li">To be added.</param>
        <param name="initializer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RewriteUsingDeclarators">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Statement RewriteUsingDeclarators (Mono.CSharp.BlockContext bc, Mono.CSharp.Statement stmt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.Statement RewriteUsingDeclarators(class Mono.CSharp.BlockContext bc, class Mono.CSharp.Statement stmt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Using.VariableDeclaration.RewriteUsingDeclarators(Mono.CSharp.BlockContext,Mono.CSharp.Statement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Statement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bc" Type="Mono.CSharp.BlockContext" />
        <Parameter Name="stmt" Type="Mono.CSharp.Statement" />
      </Parameters>
      <Docs>
        <param name="bc">To be added.</param>
        <param name="stmt">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>