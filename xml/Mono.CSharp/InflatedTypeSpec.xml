<Type Name="InflatedTypeSpec" FullName="Mono.CSharp.InflatedTypeSpec">
  <TypeSignature Language="C#" Value="public class InflatedTypeSpec : Mono.CSharp.TypeSpec" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InflatedTypeSpec extends Mono.CSharp.TypeSpec" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.InflatedTypeSpec" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.TypeSpec</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InflatedTypeSpec (Mono.CSharp.IModuleContext context, Mono.CSharp.TypeSpec openType, Mono.CSharp.TypeSpec declaringType, Mono.CSharp.TypeSpec[] targs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.IModuleContext context, class Mono.CSharp.TypeSpec openType, class Mono.CSharp.TypeSpec declaringType, class Mono.CSharp.TypeSpec[] targs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.InflatedTypeSpec.#ctor(Mono.CSharp.IModuleContext,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="Mono.CSharp.IModuleContext" />
        <Parameter Name="openType" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="declaringType" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="targs" Type="Mono.CSharp.TypeSpec[]" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="openType">To be added.</param>
        <param name="declaringType">To be added.</param>
        <param name="targs">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInterface">
      <MemberSignature Language="C#" Value="public override bool AddInterface (Mono.CSharp.TypeSpec iface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool AddInterface(class Mono.CSharp.TypeSpec iface) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.InflatedTypeSpec.AddInterface(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iface" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="iface">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.TypeSpec BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.TypeSpec BaseType" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.InflatedTypeSpec.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckObsoleteness">
      <MemberSignature Language="C#" Value="public override void CheckObsoleteness (Mono.CSharp.IMemberContext mc, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CheckObsoleteness(class Mono.CSharp.IMemberContext mc, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.InflatedTypeSpec.CheckObsoleteness(Mono.CSharp.IMemberContext,Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mc" Type="Mono.CSharp.IMemberContext" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="mc">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Constraints">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeParameterSpec[] Constraints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.TypeParameterSpec[] Constraints" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.InflatedTypeSpec.Constraints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeParameterSpec[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsTypeParameter">
      <MemberSignature Language="C#" Value="public static bool ContainsTypeParameter (Mono.CSharp.TypeSpec type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsTypeParameter(class Mono.CSharp.TypeSpec type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.InflatedTypeSpec.ContainsTypeParameter(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLocalInflator">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeParameterInflator CreateLocalInflator (Mono.CSharp.IModuleContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Mono.CSharp.TypeParameterInflator CreateLocalInflator(class Mono.CSharp.IModuleContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.InflatedTypeSpec.CreateLocalInflator(Mono.CSharp.IModuleContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeParameterInflator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Mono.CSharp.IModuleContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributeObsolete">
      <MemberSignature Language="C#" Value="public override ObsoleteAttribute GetAttributeObsolete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ObsoleteAttribute GetAttributeObsolete() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.InflatedTypeSpec.GetAttributeObsolete" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ObsoleteAttribute</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefinition">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.TypeSpec GetDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.TypeSpec GetDefinition() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.InflatedTypeSpec.GetDefinition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetaInfo">
      <MemberSignature Language="C#" Value="public override Type GetMetaInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetMetaInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.InflatedTypeSpec.GetMetaInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureForError">
      <MemberSignature Language="C#" Value="public override string GetSignatureForError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetSignatureForError() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.InflatedTypeSpec.GetSignatureForError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeNameSignature">
      <MemberSignature Language="C#" Value="protected override string GetTypeNameSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetTypeNameSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.InflatedTypeSpec.GetTypeNameSignature" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasConstraintsChecked">
      <MemberSignature Language="C#" Value="public bool HasConstraintsChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasConstraintsChecked" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.InflatedTypeSpec.HasConstraintsChecked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDynamicArgument">
      <MemberSignature Language="C#" Value="public bool HasDynamicArgument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasDynamicArgument() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.InflatedTypeSpec.HasDynamicArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeMemberCache">
      <MemberSignature Language="C#" Value="protected override void InitializeMemberCache (bool onlyTypes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeMemberCache(bool onlyTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.InflatedTypeSpec.InitializeMemberCache(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onlyTypes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="onlyTypes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interfaces">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;Mono.CSharp.TypeSpec&gt; Interfaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Mono.CSharp.TypeSpec&gt; Interfaces" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.InflatedTypeSpec.Interfaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Mono.CSharp.TypeSpec&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsArrayGenericInterface">
      <MemberSignature Language="C#" Value="public override bool IsArrayGenericInterface { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArrayGenericInterface" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.InflatedTypeSpec.IsArrayGenericInterface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExpressionTreeType">
      <MemberSignature Language="C#" Value="public override bool IsExpressionTreeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExpressionTreeType" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.InflatedTypeSpec.IsExpressionTreeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGenericTask">
      <MemberSignature Language="C#" Value="public override bool IsGenericTask { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenericTask" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.InflatedTypeSpec.IsGenericTask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNotCLSCompliant">
      <MemberSignature Language="C#" Value="protected override bool IsNotCLSCompliant (out bool attrValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsNotCLSCompliant(bool attrValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.InflatedTypeSpec.IsNotCLSCompliant(System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrValue" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="attrValue">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullableType">
      <MemberSignature Language="C#" Value="public override bool IsNullableType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullableType" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.InflatedTypeSpec.IsNullableType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mutate">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.TypeSpec Mutate (Mono.CSharp.TypeParameterMutator mutator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.TypeSpec Mutate(class Mono.CSharp.TypeParameterMutator mutator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.InflatedTypeSpec.Mutate(Mono.CSharp.TypeParameterMutator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mutator" Type="Mono.CSharp.TypeParameterMutator" />
      </Parameters>
      <Docs>
        <param name="mutator">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.TypeSpec[] TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.TypeSpec[] TypeArguments" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.InflatedTypeSpec.TypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>