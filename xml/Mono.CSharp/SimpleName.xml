<Type Name="SimpleName" FullName="Mono.CSharp.SimpleName">
  <TypeSignature Language="C#" Value="public class SimpleName : Mono.CSharp.ATypeNameExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SimpleName extends Mono.CSharp.ATypeNameExpression" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.SimpleName" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.ATypeNameExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SimpleName (string name, Mono.CSharp.Location l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype Mono.CSharp.Location l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.SimpleName.#ctor(System.String,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="l" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="l">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SimpleName (string name, Mono.CSharp.TypeArguments args, Mono.CSharp.Location l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class Mono.CSharp.TypeArguments args, valuetype Mono.CSharp.Location l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.SimpleName.#ctor(System.String,Mono.CSharp.TypeArguments,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="args" Type="Mono.CSharp.TypeArguments" />
        <Parameter Name="l" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="args">To be added.</param>
        <param name="l">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SimpleName (string name, int arity, Mono.CSharp.Location l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, int32 arity, valuetype Mono.CSharp.Location l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.SimpleName.#ctor(System.String,System.Int32,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="arity" Type="System.Int32" />
        <Parameter Name="l" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="arity">To be added.</param>
        <param name="l">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override object Accept (Mono.CSharp.StructuralVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Accept(class Mono.CSharp.StructuralVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.SimpleName.Accept(Mono.CSharp.StructuralVisitor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Mono.CSharp.StructuralVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoResolve">
      <MemberSignature Language="C#" Value="protected override Mono.CSharp.Expression DoResolve (Mono.CSharp.ResolveContext rc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Mono.CSharp.Expression DoResolve(class Mono.CSharp.ResolveContext rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.SimpleName.DoResolve(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoResolveLValue">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.Expression DoResolveLValue (Mono.CSharp.ResolveContext ec, Mono.CSharp.Expression right_side);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.Expression DoResolveLValue(class Mono.CSharp.ResolveContext ec, class Mono.CSharp.Expression right_side) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.SimpleName.DoResolveLValue(Mono.CSharp.ResolveContext,Mono.CSharp.Expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="right_side" Type="Mono.CSharp.Expression" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="right_side">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_NameDoesNotExist">
      <MemberSignature Language="C#" Value="public void Error_NameDoesNotExist (Mono.CSharp.ResolveContext rc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Error_NameDoesNotExist(class Mono.CSharp.ResolveContext rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.SimpleName.Error_NameDoesNotExist(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_TypeOrNamespaceNotFound">
      <MemberSignature Language="C#" Value="protected virtual void Error_TypeOrNamespaceNotFound (Mono.CSharp.IMemberContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Error_TypeOrNamespaceNotFound(class Mono.CSharp.IMemberContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.SimpleName.Error_TypeOrNamespaceNotFound(Mono.CSharp.IMemberContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Mono.CSharp.IMemberContext" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethodGroup">
      <MemberSignature Language="C#" Value="public Mono.CSharp.SimpleName GetMethodGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.SimpleName GetMethodGroup() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.SimpleName.GetMethodGroup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.SimpleName</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPossibleType">
      <MemberSignature Language="C#" Value="public bool IsPossibleType (Mono.CSharp.IMemberContext mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsPossibleType(class Mono.CSharp.IMemberContext mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.SimpleName.IsPossibleType(Mono.CSharp.IMemberContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mc" Type="Mono.CSharp.IMemberContext" />
      </Parameters>
      <Docs>
        <param name="mc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPossibleTypeOrNamespace">
      <MemberSignature Language="C#" Value="public bool IsPossibleTypeOrNamespace (Mono.CSharp.IMemberContext mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsPossibleTypeOrNamespace(class Mono.CSharp.IMemberContext mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.SimpleName.IsPossibleTypeOrNamespace(Mono.CSharp.IMemberContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mc" Type="Mono.CSharp.IMemberContext" />
      </Parameters>
      <Docs>
        <param name="mc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupNameExpression">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.Expression LookupNameExpression (Mono.CSharp.ResolveContext rc, Mono.CSharp.Expression.MemberLookupRestrictions restrictions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.Expression LookupNameExpression(class Mono.CSharp.ResolveContext rc, valuetype Mono.CSharp.Expression/MemberLookupRestrictions restrictions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.SimpleName.LookupNameExpression(Mono.CSharp.ResolveContext,Mono.CSharp.Expression.MemberLookupRestrictions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="restrictions" Type="Mono.CSharp.Expression+MemberLookupRestrictions" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="restrictions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsTypeOrNamespace">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.FullNamedExpression ResolveAsTypeOrNamespace (Mono.CSharp.IMemberContext mc, bool allowUnboundTypeArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.FullNamedExpression ResolveAsTypeOrNamespace(class Mono.CSharp.IMemberContext mc, bool allowUnboundTypeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.SimpleName.ResolveAsTypeOrNamespace(Mono.CSharp.IMemberContext,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.FullNamedExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mc" Type="Mono.CSharp.IMemberContext" />
        <Parameter Name="allowUnboundTypeArguments" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mc">To be added.</param>
        <param name="allowUnboundTypeArguments">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>