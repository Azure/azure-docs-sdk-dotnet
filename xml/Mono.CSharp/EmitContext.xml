<Type Name="EmitContext" FullName="Mono.CSharp.EmitContext">
  <TypeSignature Language="C#" Value="public class EmitContext : Mono.CSharp.BuilderContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EmitContext extends Mono.CSharp.BuilderContext" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.EmitContext" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.BuilderContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmitContext (Mono.CSharp.IMemberContext rc, System.Reflection.Emit.ILGenerator ig, Mono.CSharp.TypeSpec return_type, Mono.CompilerServices.SymbolWriter.SourceMethodBuilder methodSymbols);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.IMemberContext rc, class System.Reflection.Emit.ILGenerator ig, class Mono.CSharp.TypeSpec return_type, class Mono.CompilerServices.SymbolWriter.SourceMethodBuilder methodSymbols) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.#ctor(Mono.CSharp.IMemberContext,System.Reflection.Emit.ILGenerator,Mono.CSharp.TypeSpec,Mono.CompilerServices.SymbolWriter.SourceMethodBuilder)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.IMemberContext" />
        <Parameter Name="ig" Type="System.Reflection.Emit.ILGenerator" />
        <Parameter Name="return_type" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="methodSymbols" Type="Mono.CompilerServices.SymbolWriter.SourceMethodBuilder" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="ig">To be added.</param>
        <param name="return_type">To be added.</param>
        <param name="methodSymbols">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStatementEpilog">
      <MemberSignature Language="C#" Value="public void AddStatementEpilog (Mono.CSharp.IExpressionCleanup cleanupExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddStatementEpilog(class Mono.CSharp.IExpressionCleanup cleanupExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.AddStatementEpilog(Mono.CSharp.IExpressionCleanup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cleanupExpression" Type="Mono.CSharp.IExpressionCleanup" />
      </Parameters>
      <Docs>
        <param name="cleanupExpression">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertEmptyStack">
      <MemberSignature Language="C#" Value="public void AssertEmptyStack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssertEmptyStack() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.AssertEmptyStack" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncThrowVariable">
      <MemberSignature Language="C#" Value="public Mono.CSharp.LocalVariable AsyncThrowVariable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.LocalVariable AsyncThrowVariable" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EmitContext.AsyncThrowVariable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.LocalVariable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCatchBlock">
      <MemberSignature Language="C#" Value="public void BeginCatchBlock (Mono.CSharp.TypeSpec type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginCatchBlock(class Mono.CSharp.TypeSpec type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.BeginCatchBlock(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCompilerScope">
      <MemberSignature Language="C#" Value="public void BeginCompilerScope (int scopeIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginCompilerScope(int32 scopeIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.BeginCompilerScope(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="scopeIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExceptionBlock">
      <MemberSignature Language="C#" Value="public void BeginExceptionBlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginExceptionBlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.BeginExceptionBlock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExceptionFilterBlock">
      <MemberSignature Language="C#" Value="public void BeginExceptionFilterBlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginExceptionFilterBlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.BeginExceptionFilterBlock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginFilterHandler">
      <MemberSignature Language="C#" Value="public void BeginFilterHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginFilterHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.BeginFilterHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginFinallyBlock">
      <MemberSignature Language="C#" Value="public void BeginFinallyBlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginFinallyBlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.BeginFinallyBlock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginScope">
      <MemberSignature Language="C#" Value="public void BeginScope (int scopeIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginScope(int32 scopeIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.BeginScope(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="scopeIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuiltinTypes">
      <MemberSignature Language="C#" Value="public Mono.CSharp.BuiltinTypes BuiltinTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.BuiltinTypes BuiltinTypes" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EmitContext.BuiltinTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.BuiltinTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseConditionalAccess">
      <MemberSignature Language="C#" Value="public void CloseConditionalAccess (Mono.CSharp.TypeSpec type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseConditionalAccess(class Mono.CSharp.TypeSpec type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.CloseConditionalAccess(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalAccess">
      <MemberSignature Language="C#" Value="public Mono.CSharp.ConditionalAccessContext ConditionalAccess { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.ConditionalAccessContext ConditionalAccess" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EmitContext.ConditionalAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ConditionalAccessContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateReturnLabel">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.Label CreateReturnLabel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.Label CreateReturnLabel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.CreateReturnLabel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.Label</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentAnonymousMethod">
      <MemberSignature Language="C#" Value="public Mono.CSharp.AnonymousExpression CurrentAnonymousMethod;" />
      <MemberSignature Language="ILAsm" Value=".field public class Mono.CSharp.AnonymousExpression CurrentAnonymousMethod" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.EmitContext.CurrentAnonymousMethod" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.AnonymousExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentType">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeSpec CurrentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.TypeSpec CurrentType" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EmitContext.CurrentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentTypeDefinition">
      <MemberSignature Language="C#" Value="public Mono.CSharp.MemberCore CurrentTypeDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.MemberCore CurrentTypeDefinition" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EmitContext.CurrentTypeDefinition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MemberCore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentTypeParameters">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeParameters CurrentTypeParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.TypeParameters CurrentTypeParameters" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EmitContext.CurrentTypeParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeParameters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclareLocal">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.LocalBuilder DeclareLocal (Mono.CSharp.TypeSpec type, bool pinned);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.LocalBuilder DeclareLocal(class Mono.CSharp.TypeSpec type, bool pinned) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.DeclareLocal(Mono.CSharp.TypeSpec,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.LocalBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="pinned" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="pinned">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTarget">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.Label DefaultTarget;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Reflection.Emit.Label DefaultTarget" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.EmitContext.DefaultTarget" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.Label</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineLabel">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.Label DefineLabel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.Label DefineLabel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.DefineLabel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.Label</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineLocalVariable">
      <MemberSignature Language="C#" Value="public void DefineLocalVariable (string name, System.Reflection.Emit.LocalBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineLocalVariable(string name, class System.Reflection.Emit.LocalBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.DefineLocalVariable(System.String,System.Reflection.Emit.LocalBuilder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="builder" Type="System.Reflection.Emit.LocalBuilder" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="builder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public void Emit (System.Reflection.Emit.OpCode opcode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Emit(valuetype System.Reflection.Emit.OpCode opcode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.Emit(System.Reflection.Emit.OpCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
      </Parameters>
      <Docs>
        <param name="opcode">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public void Emit (System.Reflection.Emit.OpCode opcode, Mono.CSharp.FieldSpec field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Emit(valuetype System.Reflection.Emit.OpCode opcode, class Mono.CSharp.FieldSpec field) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.Emit(System.Reflection.Emit.OpCode,Mono.CSharp.FieldSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
        <Parameter Name="field" Type="Mono.CSharp.FieldSpec" />
      </Parameters>
      <Docs>
        <param name="opcode">To be added.</param>
        <param name="field">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public void Emit (System.Reflection.Emit.OpCode opcode, Mono.CSharp.MethodSpec method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Emit(valuetype System.Reflection.Emit.OpCode opcode, class Mono.CSharp.MethodSpec method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.Emit(System.Reflection.Emit.OpCode,Mono.CSharp.MethodSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
        <Parameter Name="method" Type="Mono.CSharp.MethodSpec" />
      </Parameters>
      <Docs>
        <param name="opcode">To be added.</param>
        <param name="method">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public void Emit (System.Reflection.Emit.OpCode opcode, Mono.CSharp.TypeSpec type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Emit(valuetype System.Reflection.Emit.OpCode opcode, class Mono.CSharp.TypeSpec type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.Emit(System.Reflection.Emit.OpCode,Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="opcode">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public void Emit (System.Reflection.Emit.OpCode opcode, double arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Emit(valuetype System.Reflection.Emit.OpCode opcode, float64 arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.Emit(System.Reflection.Emit.OpCode,System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
        <Parameter Name="arg" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="opcode">To be added.</param>
        <param name="arg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public void Emit (System.Reflection.Emit.OpCode opcode, System.Reflection.Emit.Label label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Emit(valuetype System.Reflection.Emit.OpCode opcode, valuetype System.Reflection.Emit.Label label) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
        <Parameter Name="label" Type="System.Reflection.Emit.Label" />
      </Parameters>
      <Docs>
        <param name="opcode">To be added.</param>
        <param name="label">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public void Emit (System.Reflection.Emit.OpCode opcode, System.Reflection.Emit.Label[] labels);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Emit(valuetype System.Reflection.Emit.OpCode opcode, valuetype System.Reflection.Emit.Label[] labels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
        <Parameter Name="labels" Type="System.Reflection.Emit.Label[]" />
      </Parameters>
      <Docs>
        <param name="opcode">To be added.</param>
        <param name="labels">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public void Emit (System.Reflection.Emit.OpCode opcode, System.Reflection.Emit.LocalBuilder local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Emit(valuetype System.Reflection.Emit.OpCode opcode, class System.Reflection.Emit.LocalBuilder local) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.LocalBuilder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
        <Parameter Name="local" Type="System.Reflection.Emit.LocalBuilder" />
      </Parameters>
      <Docs>
        <param name="opcode">To be added.</param>
        <param name="local">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public void Emit (System.Reflection.Emit.OpCode opcode, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Emit(valuetype System.Reflection.Emit.OpCode opcode, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.Emit(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="opcode">To be added.</param>
        <param name="method">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public void Emit (System.Reflection.Emit.OpCode opcode, float arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Emit(valuetype System.Reflection.Emit.OpCode opcode, float32 arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.Emit(System.Reflection.Emit.OpCode,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
        <Parameter Name="arg" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="opcode">To be added.</param>
        <param name="arg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public void Emit (System.Reflection.Emit.OpCode opcode, string arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Emit(valuetype System.Reflection.Emit.OpCode opcode, string arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.Emit(System.Reflection.Emit.OpCode,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
        <Parameter Name="arg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="opcode">To be added.</param>
        <param name="arg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public void Emit (System.Reflection.Emit.OpCode opcode, Mono.CSharp.MethodSpec method, Type[] vargs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Emit(valuetype System.Reflection.Emit.OpCode opcode, class Mono.CSharp.MethodSpec method, class System.Type[] vargs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.Emit(System.Reflection.Emit.OpCode,Mono.CSharp.MethodSpec,System.Type[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
        <Parameter Name="method" Type="Mono.CSharp.MethodSpec" />
        <Parameter Name="vargs" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="opcode">To be added.</param>
        <param name="method">To be added.</param>
        <param name="vargs">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitAccurateDebugInfo">
      <MemberSignature Language="C#" Value="public bool EmitAccurateDebugInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EmitAccurateDebugInfo" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EmitContext.EmitAccurateDebugInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitArgumentAddress">
      <MemberSignature Language="C#" Value="public void EmitArgumentAddress (int pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EmitArgumentAddress(int32 pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.EmitArgumentAddress(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pos">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitArgumentLoad">
      <MemberSignature Language="C#" Value="public void EmitArgumentLoad (int pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EmitArgumentLoad(int32 pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.EmitArgumentLoad(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pos">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitArgumentStore">
      <MemberSignature Language="C#" Value="public void EmitArgumentStore (int pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EmitArgumentStore(int32 pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.EmitArgumentStore(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pos">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitArrayAddress">
      <MemberSignature Language="C#" Value="public void EmitArrayAddress (Mono.CSharp.ArrayContainer ac);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EmitArrayAddress(class Mono.CSharp.ArrayContainer ac) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.EmitArrayAddress(Mono.CSharp.ArrayContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ac" Type="Mono.CSharp.ArrayContainer" />
      </Parameters>
      <Docs>
        <param name="ac">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitArrayLoad">
      <MemberSignature Language="C#" Value="public void EmitArrayLoad (Mono.CSharp.ArrayContainer ac);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EmitArrayLoad(class Mono.CSharp.ArrayContainer ac) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.EmitArrayLoad(Mono.CSharp.ArrayContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ac" Type="Mono.CSharp.ArrayContainer" />
      </Parameters>
      <Docs>
        <param name="ac">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitArrayNew">
      <MemberSignature Language="C#" Value="public void EmitArrayNew (Mono.CSharp.ArrayContainer ac);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EmitArrayNew(class Mono.CSharp.ArrayContainer ac) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.EmitArrayNew(Mono.CSharp.ArrayContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ac" Type="Mono.CSharp.ArrayContainer" />
      </Parameters>
      <Docs>
        <param name="ac">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitArrayStore">
      <MemberSignature Language="C#" Value="public void EmitArrayStore (Mono.CSharp.ArrayContainer ac);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EmitArrayStore(class Mono.CSharp.ArrayContainer ac) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.EmitArrayStore(Mono.CSharp.ArrayContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ac" Type="Mono.CSharp.ArrayContainer" />
      </Parameters>
      <Docs>
        <param name="ac">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitEpilogue">
      <MemberSignature Language="C#" Value="public void EmitEpilogue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EmitEpilogue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.EmitEpilogue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitInt">
      <MemberSignature Language="C#" Value="public void EmitInt (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EmitInt(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.EmitInt(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitLoadFromPtr">
      <MemberSignature Language="C#" Value="public void EmitLoadFromPtr (Mono.CSharp.TypeSpec type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EmitLoadFromPtr(class Mono.CSharp.TypeSpec type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.EmitLoadFromPtr(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitLong">
      <MemberSignature Language="C#" Value="public void EmitLong (long l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EmitLong(int64 l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.EmitLong(System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="l">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitNull">
      <MemberSignature Language="C#" Value="public void EmitNull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EmitNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.EmitNull" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitStoreFromPtr">
      <MemberSignature Language="C#" Value="public void EmitStoreFromPtr (Mono.CSharp.TypeSpec type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EmitStoreFromPtr(class Mono.CSharp.TypeSpec type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.EmitStoreFromPtr(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitThis">
      <MemberSignature Language="C#" Value="public void EmitThis ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EmitThis() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.EmitThis" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExceptionBlock">
      <MemberSignature Language="C#" Value="public void EndExceptionBlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndExceptionBlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.EndExceptionBlock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndScope">
      <MemberSignature Language="C#" Value="public void EndScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.EndScope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreeTemporaryLocal">
      <MemberSignature Language="C#" Value="public void FreeTemporaryLocal (System.Reflection.Emit.LocalBuilder b, Mono.CSharp.TypeSpec t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FreeTemporaryLocal(class System.Reflection.Emit.LocalBuilder b, class Mono.CSharp.TypeSpec t) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.FreeTemporaryLocal(System.Reflection.Emit.LocalBuilder,Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="System.Reflection.Emit.LocalBuilder" />
        <Parameter Name="t" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="b">To be added.</param>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemporaryField">
      <MemberSignature Language="C#" Value="public Mono.CSharp.StackFieldExpr GetTemporaryField (Mono.CSharp.TypeSpec type, bool initializedFieldRequired = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.StackFieldExpr GetTemporaryField(class Mono.CSharp.TypeSpec type, bool initializedFieldRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.GetTemporaryField(Mono.CSharp.TypeSpec,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.StackFieldExpr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="initializedFieldRequired" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="initializedFieldRequired">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemporaryLocal">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.LocalBuilder GetTemporaryLocal (Mono.CSharp.TypeSpec t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.LocalBuilder GetTemporaryLocal(class Mono.CSharp.TypeSpec t) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.GetTemporaryLocal(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.LocalBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasMethodSymbolBuilder">
      <MemberSignature Language="C#" Value="public bool HasMethodSymbolBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasMethodSymbolBuilder" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EmitContext.HasMethodSymbolBuilder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasReturnLabel">
      <MemberSignature Language="C#" Value="public bool HasReturnLabel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasReturnLabel" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EmitContext.HasReturnLabel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ig">
      <MemberSignature Language="C#" Value="public readonly System.Reflection.Emit.ILGenerator ig;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly class System.Reflection.Emit.ILGenerator ig" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.EmitContext.ig" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ILGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnonymousStoreyMutateRequired">
      <MemberSignature Language="C#" Value="public bool IsAnonymousStoreyMutateRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnonymousStoreyMutateRequired" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EmitContext.IsAnonymousStoreyMutateRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStatic">
      <MemberSignature Language="C#" Value="public bool IsStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStatic" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EmitContext.IsStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStaticConstructor">
      <MemberSignature Language="C#" Value="public bool IsStaticConstructor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStaticConstructor" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EmitContext.IsStaticConstructor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoopBegin">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.Label LoopBegin;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Reflection.Emit.Label LoopBegin" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.EmitContext.LoopBegin" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.Label</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoopEnd">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.Label LoopEnd;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Reflection.Emit.Label LoopEnd" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.EmitContext.LoopEnd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.Label</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mark">
      <MemberSignature Language="C#" Value="public bool Mark (Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Mark(valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.Mark(Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkCallEntry">
      <MemberSignature Language="C#" Value="public void MarkCallEntry (Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MarkCallEntry(valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.MarkCallEntry(Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkLabel">
      <MemberSignature Language="C#" Value="public void MarkLabel (System.Reflection.Emit.Label label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MarkLabel(valuetype System.Reflection.Emit.Label label) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.MarkLabel(System.Reflection.Emit.Label)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.Reflection.Emit.Label" />
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberContext">
      <MemberSignature Language="C#" Value="public Mono.CSharp.IMemberContext MemberContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.IMemberContext MemberContext" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EmitContext.MemberContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.IMemberContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Module">
      <MemberSignature Language="C#" Value="public Mono.CSharp.ModuleContainer Module { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.ModuleContainer Module" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EmitContext.Module" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ModuleContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyEvaluatorOnStore">
      <MemberSignature Language="C#" Value="public bool NotifyEvaluatorOnStore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyEvaluatorOnStore" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EmitContext.NotifyEvaluatorOnStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecursivePatternLabel">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.Label RecursivePatternLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Emit.Label RecursivePatternLabel" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EmitContext.RecursivePatternLabel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.Label</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Report">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Report Report { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.Report Report" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EmitContext.Report" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Report</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="return_value">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.LocalBuilder return_value;" />
      <MemberSignature Language="ILAsm" Value=".field public class System.Reflection.Emit.LocalBuilder return_value" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.EmitContext.return_value" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.LocalBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnLabel">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.Label ReturnLabel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Emit.Label ReturnLabel" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EmitContext.ReturnLabel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.Label</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnType">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeSpec ReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.TypeSpec ReturnType" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EmitContext.ReturnType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatementEpilogue">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;Mono.CSharp.IExpressionCleanup&gt; StatementEpilogue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class Mono.CSharp.IExpressionCleanup&gt; StatementEpilogue" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EmitContext.StatementEpilogue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Mono.CSharp.IExpressionCleanup&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Switch Switch;" />
      <MemberSignature Language="ILAsm" Value=".field public class Mono.CSharp.Switch Switch" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.EmitContext.Switch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Switch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemporaryReturn">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.LocalBuilder TemporaryReturn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.LocalBuilder TemporaryReturn() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EmitContext.TemporaryReturn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.LocalBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFinallyUnwind">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;Mono.CSharp.TryFinally&gt; TryFinallyUnwind { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class Mono.CSharp.TryFinally&gt; TryFinallyUnwind" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EmitContext.TryFinallyUnwind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Mono.CSharp.TryFinally&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>