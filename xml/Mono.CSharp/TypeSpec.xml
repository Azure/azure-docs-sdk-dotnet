<Type Name="TypeSpec" FullName="Mono.CSharp.TypeSpec">
  <TypeSignature Language="C#" Value="public class TypeSpec : Mono.CSharp.MemberSpec" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TypeSpec extends Mono.CSharp.MemberSpec" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.TypeSpec" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.MemberSpec</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeSpec (Mono.CSharp.MemberKind kind, Mono.CSharp.TypeSpec declaringType, Mono.CSharp.ITypeDefinition definition, Type info, Mono.CSharp.Modifiers modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Mono.CSharp.MemberKind kind, class Mono.CSharp.TypeSpec declaringType, class Mono.CSharp.ITypeDefinition definition, class System.Type info, valuetype Mono.CSharp.Modifiers modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeSpec.#ctor(Mono.CSharp.MemberKind,Mono.CSharp.TypeSpec,Mono.CSharp.ITypeDefinition,System.Type,Mono.CSharp.Modifiers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="kind" Type="Mono.CSharp.MemberKind" />
        <Parameter Name="declaringType" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="definition" Type="Mono.CSharp.ITypeDefinition" />
        <Parameter Name="info" Type="System.Type" />
        <Parameter Name="modifiers" Type="Mono.CSharp.Modifiers" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <param name="declaringType">To be added.</param>
        <param name="definition">To be added.</param>
        <param name="info">To be added.</param>
        <param name="modifiers">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInterface">
      <MemberSignature Language="C#" Value="public virtual bool AddInterface (Mono.CSharp.TypeSpec iface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AddInterface(class Mono.CSharp.TypeSpec iface) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeSpec.AddInterface(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iface" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="iface">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInterfaceDefined">
      <MemberSignature Language="C#" Value="public bool AddInterfaceDefined (Mono.CSharp.TypeSpec iface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool AddInterfaceDefined(class Mono.CSharp.TypeSpec iface) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeSpec.AddInterfaceDefined(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iface" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="iface">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arity">
      <MemberSignature Language="C#" Value="public override int Arity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Arity" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.Arity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public virtual Mono.CSharp.TypeSpec BaseType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.TypeSpec BaseType" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuiltinType">
      <MemberSignature Language="C#" Value="public virtual Mono.CSharp.BuiltinTypeSpec.Type BuiltinType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Mono.CSharp.BuiltinTypeSpec/Type BuiltinType" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.BuiltinType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.BuiltinTypeSpec+Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="cache">
      <MemberSignature Language="C#" Value="protected Mono.CSharp.MemberCache cache;" />
      <MemberSignature Language="ILAsm" Value=".field family class Mono.CSharp.MemberCache cache" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.TypeSpec.cache" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MemberCache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyTypes">
      <MemberSignature Language="C#" Value="public static readonly Mono.CSharp.TypeSpec[] EmptyTypes;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Mono.CSharp.TypeSpec[] EmptyTypes" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.TypeSpec.EmptyTypes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllTypeArguments">
      <MemberSignature Language="C#" Value="public static Mono.CSharp.TypeSpec[] GetAllTypeArguments (Mono.CSharp.TypeSpec type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.CSharp.TypeSpec[] GetAllTypeArguments(class Mono.CSharp.TypeSpec type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeSpec.GetAllTypeArguments(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributeUsage">
      <MemberSignature Language="C#" Value="public AttributeUsageAttribute GetAttributeUsage (Mono.CSharp.PredefinedAttribute pa);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AttributeUsageAttribute GetAttributeUsage(class Mono.CSharp.PredefinedAttribute pa) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeSpec.GetAttributeUsage(Mono.CSharp.PredefinedAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AttributeUsageAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pa" Type="Mono.CSharp.PredefinedAttribute" />
      </Parameters>
      <Docs>
        <param name="pa">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefinition">
      <MemberSignature Language="C#" Value="public virtual Mono.CSharp.TypeSpec GetDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Mono.CSharp.TypeSpec GetDefinition() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeSpec.GetDefinition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetaInfo">
      <MemberSignature Language="C#" Value="public virtual Type GetMetaInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetMetaInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeSpec.GetMetaInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureForDocumentation">
      <MemberSignature Language="C#" Value="public override sealed string GetSignatureForDocumentation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetSignatureForDocumentation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeSpec.GetSignatureForDocumentation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureForDocumentation">
      <MemberSignature Language="C#" Value="public virtual string GetSignatureForDocumentation (bool explicitName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetSignatureForDocumentation(bool explicitName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeSpec.GetSignatureForDocumentation(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="explicitName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="explicitName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureForError">
      <MemberSignature Language="C#" Value="public override string GetSignatureForError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetSignatureForError() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeSpec.GetSignatureForError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureForErrorIncludingAssemblyName">
      <MemberSignature Language="C#" Value="public string GetSignatureForErrorIncludingAssemblyName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetSignatureForErrorIncludingAssemblyName() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeSpec.GetSignatureForErrorIncludingAssemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeNameSignature">
      <MemberSignature Language="C#" Value="protected virtual string GetTypeNameSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetTypeNameSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeSpec.GetTypeNameSignature" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDynamicElement">
      <MemberSignature Language="C#" Value="public bool HasDynamicElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDynamicElement" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.HasDynamicElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ifaces">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IList&lt;Mono.CSharp.TypeSpec&gt; ifaces;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Generic.IList`1&lt;class Mono.CSharp.TypeSpec&gt; ifaces" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.TypeSpec.ifaces" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Mono.CSharp.TypeSpec&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplementsInterface">
      <MemberSignature Language="C#" Value="public bool ImplementsInterface (Mono.CSharp.TypeSpec iface, bool variantly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ImplementsInterface(class Mono.CSharp.TypeSpec iface, bool variantly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeSpec.ImplementsInterface(Mono.CSharp.TypeSpec,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iface" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="variantly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="iface">To be added.</param>
        <param name="variantly">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InflateMember">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.MemberSpec InflateMember (Mono.CSharp.TypeParameterInflator inflator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.MemberSpec InflateMember(valuetype Mono.CSharp.TypeParameterInflator inflator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeSpec.InflateMember(Mono.CSharp.TypeParameterInflator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MemberSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inflator" Type="Mono.CSharp.TypeParameterInflator" />
      </Parameters>
      <Docs>
        <param name="inflator">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="info">
      <MemberSignature Language="C#" Value="protected Type info;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Type info" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.TypeSpec.info" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeMemberCache">
      <MemberSignature Language="C#" Value="protected virtual void InitializeMemberCache (bool onlyTypes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeMemberCache(bool onlyTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeSpec.InitializeMemberCache(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onlyTypes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="onlyTypes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interfaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Mono.CSharp.TypeSpec&gt; Interfaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Mono.CSharp.TypeSpec&gt; Interfaces" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.Interfaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Mono.CSharp.TypeSpec&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public bool IsArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArray" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.IsArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsArrayGenericInterface">
      <MemberSignature Language="C#" Value="public virtual bool IsArrayGenericInterface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArrayGenericInterface" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.IsArrayGenericInterface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAttribute">
      <MemberSignature Language="C#" Value="public bool IsAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttribute" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.IsAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBaseClass">
      <MemberSignature Language="C#" Value="public static bool IsBaseClass (Mono.CSharp.TypeSpec type, Mono.CSharp.TypeSpec baseClass, bool dynamicIsObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBaseClass(class Mono.CSharp.TypeSpec type, class Mono.CSharp.TypeSpec baseClass, bool dynamicIsObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeSpec.IsBaseClass(Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="baseClass" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="dynamicIsObject" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="baseClass">To be added.</param>
        <param name="dynamicIsObject">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClass">
      <MemberSignature Language="C#" Value="public bool IsClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClass" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.IsClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstantCompatible">
      <MemberSignature Language="C#" Value="public bool IsConstantCompatible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstantCompatible" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.IsConstantCompatible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDelegate">
      <MemberSignature Language="C#" Value="public bool IsDelegate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDelegate" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.IsDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnum">
      <MemberSignature Language="C#" Value="public bool IsEnum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnum" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.IsEnum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExpressionTreeType">
      <MemberSignature Language="C#" Value="public virtual bool IsExpressionTreeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExpressionTreeType" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.IsExpressionTreeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGenericOrParentIsGeneric">
      <MemberSignature Language="C#" Value="public bool IsGenericOrParentIsGeneric { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenericOrParentIsGeneric" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.IsGenericOrParentIsGeneric" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGenericParameter">
      <MemberSignature Language="C#" Value="public bool IsGenericParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenericParameter" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.IsGenericParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGenericTask">
      <MemberSignature Language="C#" Value="public virtual bool IsGenericTask { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenericTask" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.IsGenericTask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInterface">
      <MemberSignature Language="C#" Value="public bool IsInterface { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInterface" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.IsInterface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNested">
      <MemberSignature Language="C#" Value="public bool IsNested { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNested" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.IsNested" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNonNullableValueType">
      <MemberSignature Language="C#" Value="public static bool IsNonNullableValueType (Mono.CSharp.TypeSpec t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNonNullableValueType(class Mono.CSharp.TypeSpec t) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeSpec.IsNonNullableValueType(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullableType">
      <MemberSignature Language="C#" Value="public virtual bool IsNullableType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullableType" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.IsNullableType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPointer">
      <MemberSignature Language="C#" Value="public bool IsPointer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPointer" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.IsPointer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReferenceType">
      <MemberSignature Language="C#" Value="public static bool IsReferenceType (Mono.CSharp.TypeSpec t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsReferenceType(class Mono.CSharp.TypeSpec t) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeSpec.IsReferenceType(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSealed">
      <MemberSignature Language="C#" Value="public bool IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSealed" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.IsSealed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpecialRuntimeType">
      <MemberSignature Language="C#" Value="public bool IsSpecialRuntimeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialRuntimeType" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.IsSpecialRuntimeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStruct">
      <MemberSignature Language="C#" Value="public bool IsStruct { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStruct" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.IsStruct" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStructOrEnum">
      <MemberSignature Language="C#" Value="public bool IsStructOrEnum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStructOrEnum" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.IsStructOrEnum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTypeBuilder">
      <MemberSignature Language="C#" Value="public bool IsTypeBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTypeBuilder" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.IsTypeBuilder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnmanaged">
      <MemberSignature Language="C#" Value="public bool IsUnmanaged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnmanaged" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.IsUnmanaged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValueType">
      <MemberSignature Language="C#" Value="public static bool IsValueType (Mono.CSharp.TypeSpec t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValueType(class Mono.CSharp.TypeSpec t) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeSpec.IsValueType(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeGenericType">
      <MemberSignature Language="C#" Value="public Mono.CSharp.InflatedTypeSpec MakeGenericType (Mono.CSharp.IModuleContext context, Mono.CSharp.TypeSpec[] targs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.InflatedTypeSpec MakeGenericType(class Mono.CSharp.IModuleContext context, class Mono.CSharp.TypeSpec[] targs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeSpec.MakeGenericType(Mono.CSharp.IModuleContext,Mono.CSharp.TypeSpec[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.InflatedTypeSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Mono.CSharp.IModuleContext" />
        <Parameter Name="targs" Type="Mono.CSharp.TypeSpec[]" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="targs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberCache">
      <MemberSignature Language="C#" Value="public Mono.CSharp.MemberCache MemberCache { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.MemberCache MemberCache" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.MemberCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MemberCache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberCacheTypes">
      <MemberSignature Language="C#" Value="public Mono.CSharp.MemberCache MemberCacheTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.MemberCache MemberCacheTypes" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.MemberCacheTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MemberCache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberDefinition">
      <MemberSignature Language="C#" Value="public Mono.CSharp.ITypeDefinition MemberDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.ITypeDefinition MemberDefinition" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.MemberDefinition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ITypeDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mutate">
      <MemberSignature Language="C#" Value="public virtual Mono.CSharp.TypeSpec Mutate (Mono.CSharp.TypeParameterMutator mutator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Mono.CSharp.TypeSpec Mutate(class Mono.CSharp.TypeParameterMutator mutator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeSpec.Mutate(Mono.CSharp.TypeParameterMutator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mutator" Type="Mono.CSharp.TypeParameterMutator" />
      </Parameters>
      <Docs>
        <param name="mutator">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveMissingDependencies">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.List&lt;Mono.CSharp.MissingTypeSpecReference&gt; ResolveMissingDependencies (Mono.CSharp.MemberSpec caller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.List`1&lt;class Mono.CSharp.MissingTypeSpecReference&gt; ResolveMissingDependencies(class Mono.CSharp.MemberSpec caller) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeSpec.ResolveMissingDependencies(Mono.CSharp.MemberSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Mono.CSharp.MissingTypeSpecReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="caller" Type="Mono.CSharp.MemberSpec" />
      </Parameters>
      <Docs>
        <param name="caller">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetExtensionMethodContainer">
      <MemberSignature Language="C#" Value="public void SetExtensionMethodContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetExtensionMethodContainer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeSpec.SetExtensionMethodContainer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetaInfo">
      <MemberSignature Language="C#" Value="public void SetMetaInfo (Type info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMetaInfo(class System.Type info) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeSpec.SetMetaInfo(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public virtual Mono.CSharp.TypeSpec[] TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.TypeSpec[] TypeArguments" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeSpec.TypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateInflatedInstancesBaseType">
      <MemberSignature Language="C#" Value="public void UpdateInflatedInstancesBaseType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateInflatedInstancesBaseType() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeSpec.UpdateInflatedInstancesBaseType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>