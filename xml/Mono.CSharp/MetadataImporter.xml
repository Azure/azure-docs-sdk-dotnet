<Type Name="MetadataImporter" FullName="Mono.CSharp.MetadataImporter">
  <TypeSignature Language="C#" Value="public abstract class MetadataImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetadataImporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.MetadataImporter" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MetadataImporter (Mono.CSharp.ModuleContainer module);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.ModuleContainer module) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MetadataImporter.#ctor(Mono.CSharp.ModuleContainer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="module" Type="Mono.CSharp.ModuleContainer" />
      </Parameters>
      <Docs>
        <param name="module">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCompiledType">
      <MemberSignature Language="C#" Value="public abstract void AddCompiledType (System.Reflection.Emit.TypeBuilder builder, Mono.CSharp.TypeSpec spec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCompiledType(class System.Reflection.Emit.TypeBuilder builder, class Mono.CSharp.TypeSpec spec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MetadataImporter.AddCompiledType(System.Reflection.Emit.TypeBuilder,Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Reflection.Emit.TypeBuilder" />
        <Parameter Name="spec" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="spec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assemblies">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Mono.CSharp.IAssemblyDefinition&gt; Assemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Mono.CSharp.IAssemblyDefinition&gt; Assemblies" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MetadataImporter.Assemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Mono.CSharp.IAssemblyDefinition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="assembly_2_definition">
      <MemberSignature Language="C#" Value="protected readonly System.Collections.Generic.Dictionary&lt;System.Reflection.Assembly,Mono.CSharp.IAssemblyDefinition&gt; assembly_2_definition;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class System.Collections.Generic.Dictionary`2&lt;class System.Reflection.Assembly, class Mono.CSharp.IAssemblyDefinition&gt; assembly_2_definition" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.MetadataImporter.assembly_2_definition" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Reflection.Assembly,Mono.CSharp.IAssemblyDefinition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="compiled_types">
      <MemberSignature Language="C#" Value="protected readonly System.Collections.Generic.Dictionary&lt;Type,Mono.CSharp.TypeSpec&gt; compiled_types;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class System.Collections.Generic.Dictionary`2&lt;class System.Type, class Mono.CSharp.TypeSpec&gt; compiled_types" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.MetadataImporter.compiled_types" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Type,Mono.CSharp.TypeSpec&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompilerServicesNamespace">
      <MemberSignature Language="C#" Value="public static readonly string CompilerServicesNamespace;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string CompilerServicesNamespace" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.MetadataImporter.CompilerServicesNamespace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEvent">
      <MemberSignature Language="C#" Value="public Mono.CSharp.EventSpec CreateEvent (System.Reflection.EventInfo ei, Mono.CSharp.TypeSpec declaringType, Mono.CSharp.MethodSpec add, Mono.CSharp.MethodSpec remove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.EventSpec CreateEvent(class System.Reflection.EventInfo ei, class Mono.CSharp.TypeSpec declaringType, class Mono.CSharp.MethodSpec add, class Mono.CSharp.MethodSpec remove) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MetadataImporter.CreateEvent(System.Reflection.EventInfo,Mono.CSharp.TypeSpec,Mono.CSharp.MethodSpec,Mono.CSharp.MethodSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.EventSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ei" Type="System.Reflection.EventInfo" />
        <Parameter Name="declaringType" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="add" Type="Mono.CSharp.MethodSpec" />
        <Parameter Name="remove" Type="Mono.CSharp.MethodSpec" />
      </Parameters>
      <Docs>
        <param name="ei">To be added.</param>
        <param name="declaringType">To be added.</param>
        <param name="add">To be added.</param>
        <param name="remove">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="public Mono.CSharp.FieldSpec CreateField (System.Reflection.FieldInfo fi, Mono.CSharp.TypeSpec declaringType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.FieldSpec CreateField(class System.Reflection.FieldInfo fi, class Mono.CSharp.TypeSpec declaringType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MetadataImporter.CreateField(System.Reflection.FieldInfo,Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.FieldSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fi" Type="System.Reflection.FieldInfo" />
        <Parameter Name="declaringType" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="fi">To be added.</param>
        <param name="declaringType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMethod">
      <MemberSignature Language="C#" Value="public Mono.CSharp.MethodSpec CreateMethod (System.Reflection.MethodBase mb, Mono.CSharp.TypeSpec declaringType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.MethodSpec CreateMethod(class System.Reflection.MethodBase mb, class Mono.CSharp.TypeSpec declaringType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MetadataImporter.CreateMethod(System.Reflection.MethodBase,Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MethodSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mb" Type="System.Reflection.MethodBase" />
        <Parameter Name="declaringType" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="mb">To be added.</param>
        <param name="declaringType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNestedType">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeSpec CreateNestedType (Type type, Mono.CSharp.TypeSpec declaringType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.TypeSpec CreateNestedType(class System.Type type, class Mono.CSharp.TypeSpec declaringType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MetadataImporter.CreateNestedType(System.Type,Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="declaringType" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="declaringType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="public Mono.CSharp.PropertySpec CreateProperty (System.Reflection.PropertyInfo pi, Mono.CSharp.TypeSpec declaringType, Mono.CSharp.MethodSpec get, Mono.CSharp.MethodSpec set);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.PropertySpec CreateProperty(class System.Reflection.PropertyInfo pi, class Mono.CSharp.TypeSpec declaringType, class Mono.CSharp.MethodSpec get, class Mono.CSharp.MethodSpec set) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MetadataImporter.CreateProperty(System.Reflection.PropertyInfo,Mono.CSharp.TypeSpec,Mono.CSharp.MethodSpec,Mono.CSharp.MethodSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.PropertySpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pi" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="declaringType" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="get" Type="Mono.CSharp.MethodSpec" />
        <Parameter Name="set" Type="Mono.CSharp.MethodSpec" />
      </Parameters>
      <Docs>
        <param name="pi">To be added.</param>
        <param name="declaringType">To be added.</param>
        <param name="get">To be added.</param>
        <param name="set">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateType">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeSpec CreateType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.TypeSpec CreateType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MetadataImporter.CreateType(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateType">
      <MemberSignature Language="C#" Value="protected Mono.CSharp.TypeSpec CreateType (Type type, Mono.CSharp.TypeSpec declaringType, Mono.CSharp.MetadataImporter.DynamicTypeReader dtype, bool canImportBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Mono.CSharp.TypeSpec CreateType(class System.Type type, class Mono.CSharp.TypeSpec declaringType, valuetype Mono.CSharp.MetadataImporter/DynamicTypeReader dtype, bool canImportBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MetadataImporter.CreateType(System.Type,Mono.CSharp.TypeSpec,Mono.CSharp.MetadataImporter.DynamicTypeReader,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="declaringType" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="dtype" Type="Mono.CSharp.MetadataImporter+DynamicTypeReader" />
        <Parameter Name="canImportBaseType" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="declaringType">To be added.</param>
        <param name="dtype">To be added.</param>
        <param name="canImportBaseType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetermineKindFromBaseType">
      <MemberSignature Language="C#" Value="protected abstract Mono.CSharp.MemberKind DetermineKindFromBaseType (Type baseType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype Mono.CSharp.MemberKind DetermineKindFromBaseType(class System.Type baseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MetadataImporter.DetermineKindFromBaseType(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MemberKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="baseType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssemblyDefinition">
      <MemberSignature Language="C#" Value="public Mono.CSharp.IAssemblyDefinition GetAssemblyDefinition (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.IAssemblyDefinition GetAssemblyDefinition(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MetadataImporter.GetAssemblyDefinition(System.Reflection.Assembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.IAssemblyDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImportedAssemblyDefinition">
      <MemberSignature Language="C#" Value="public Mono.CSharp.ImportedAssemblyDefinition GetImportedAssemblyDefinition (System.Reflection.AssemblyName assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.ImportedAssemblyDefinition GetImportedAssemblyDefinition(class System.Reflection.AssemblyName assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MetadataImporter.GetImportedAssemblyDefinition(System.Reflection.AssemblyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ImportedAssemblyDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="assemblyName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAttribute">
      <MemberSignature Language="C#" Value="public static bool HasAttribute (System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; attributesData, string attrName, string attrNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasAttribute(class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; attributesData, string attrName, string attrNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MetadataImporter.HasAttribute(System.Collections.Generic.IList{System.Reflection.CustomAttributeData},System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributesData" Type="System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" />
        <Parameter Name="attrName" Type="System.String" />
        <Parameter Name="attrNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributesData">To be added.</param>
        <param name="attrName">To be added.</param>
        <param name="attrNamespace">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasVolatileModifier">
      <MemberSignature Language="C#" Value="protected abstract bool HasVolatileModifier (Type[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool HasVolatileModifier(class System.Type[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MetadataImporter.HasVolatileModifier(System.Type[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modifiers" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="modifiers">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreCompilerGeneratedField">
      <MemberSignature Language="C#" Value="public bool IgnoreCompilerGeneratedField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreCompilerGeneratedField" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MetadataImporter.IgnoreCompilerGeneratedField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnorePrivateMembers">
      <MemberSignature Language="C#" Value="public bool IgnorePrivateMembers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnorePrivateMembers" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MetadataImporter.IgnorePrivateMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="import_cache">
      <MemberSignature Language="C#" Value="protected readonly System.Collections.Generic.Dictionary&lt;Type,Mono.CSharp.TypeSpec&gt; import_cache;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class System.Collections.Generic.Dictionary`2&lt;class System.Type, class Mono.CSharp.TypeSpec&gt; import_cache" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.MetadataImporter.import_cache" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Type,Mono.CSharp.TypeSpec&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportType">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeSpec ImportType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.TypeSpec ImportType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MetadataImporter.ImportType(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportTypeBase">
      <MemberSignature Language="C#" Value="public void ImportTypeBase (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ImportTypeBase(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MetadataImporter.ImportTypeBase(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportTypes">
      <MemberSignature Language="C#" Value="protected void ImportTypes (Type[] types, Mono.CSharp.Namespace targetNamespace, bool importExtensionTypes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ImportTypes(class System.Type[] types, class Mono.CSharp.Namespace targetNamespace, bool importExtensionTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MetadataImporter.ImportTypes(System.Type[],Mono.CSharp.Namespace,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="targetNamespace" Type="Mono.CSharp.Namespace" />
        <Parameter Name="importExtensionTypes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="types">To be added.</param>
        <param name="targetNamespace">To be added.</param>
        <param name="importExtensionTypes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="module">
      <MemberSignature Language="C#" Value="protected readonly Mono.CSharp.ModuleContainer module;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class Mono.CSharp.ModuleContainer module" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.MetadataImporter.module" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ModuleContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>