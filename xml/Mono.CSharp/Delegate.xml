<Type Name="Delegate" FullName="Mono.CSharp.Delegate">
  <TypeSignature Language="C#" Value="public class Delegate : Mono.CSharp.TypeDefinition, Mono.CSharp.IParametersMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Delegate extends Mono.CSharp.TypeDefinition implements class Mono.CSharp.IInterfaceMemberSpec, class Mono.CSharp.IParametersMember" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.Delegate" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.TypeDefinition</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Mono.CSharp.IParametersMember</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Delegate (Mono.CSharp.TypeContainer parent, Mono.CSharp.FullNamedExpression type, Mono.CSharp.Modifiers mod_flags, Mono.CSharp.MemberName name, Mono.CSharp.ParametersCompiled param_list, Mono.CSharp.Attributes attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.TypeContainer parent, class Mono.CSharp.FullNamedExpression type, valuetype Mono.CSharp.Modifiers mod_flags, class Mono.CSharp.MemberName name, class Mono.CSharp.ParametersCompiled param_list, class Mono.CSharp.Attributes attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Delegate.#ctor(Mono.CSharp.TypeContainer,Mono.CSharp.FullNamedExpression,Mono.CSharp.Modifiers,Mono.CSharp.MemberName,Mono.CSharp.ParametersCompiled,Mono.CSharp.Attributes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="Mono.CSharp.TypeContainer" />
        <Parameter Name="type" Type="Mono.CSharp.FullNamedExpression" />
        <Parameter Name="mod_flags" Type="Mono.CSharp.Modifiers" />
        <Parameter Name="name" Type="Mono.CSharp.MemberName" />
        <Parameter Name="param_list" Type="Mono.CSharp.ParametersCompiled" />
        <Parameter Name="attrs" Type="Mono.CSharp.Attributes" />
      </Parameters>
      <Docs>
        <param name="parent">To be added.</param>
        <param name="type">To be added.</param>
        <param name="mod_flags">To be added.</param>
        <param name="name">To be added.</param>
        <param name="param_list">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (Mono.CSharp.StructuralVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class Mono.CSharp.StructuralVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Delegate.Accept(Mono.CSharp.StructuralVisitor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Mono.CSharp.StructuralVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAttributeBuilder">
      <MemberSignature Language="C#" Value="public override void ApplyAttributeBuilder (Mono.CSharp.Attribute a, Mono.CSharp.MethodSpec ctor, byte[] cdata, Mono.CSharp.PredefinedAttributes pa);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyAttributeBuilder(class Mono.CSharp.Attribute a, class Mono.CSharp.MethodSpec ctor, unsigned int8[] cdata, class Mono.CSharp.PredefinedAttributes pa) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Delegate.ApplyAttributeBuilder(Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,System.Byte[],Mono.CSharp.PredefinedAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Mono.CSharp.Attribute" />
        <Parameter Name="ctor" Type="Mono.CSharp.MethodSpec" />
        <Parameter Name="cdata" Type="System.Byte[]" />
        <Parameter Name="pa" Type="Mono.CSharp.PredefinedAttributes" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="ctor">To be added.</param>
        <param name="cdata">To be added.</param>
        <param name="pa">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeTargets">
      <MemberSignature Language="C#" Value="public override AttributeTargets AttributeTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AttributeTargets AttributeTargets" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Delegate.AttributeTargets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AttributeTargets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoDefineMembers">
      <MemberSignature Language="C#" Value="protected override bool DoDefineMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool DoDefineMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Delegate.DoDefineMembers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public override void Emit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Emit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Delegate.Emit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullDelegateDesc">
      <MemberSignature Language="C#" Value="public static string FullDelegateDesc (Mono.CSharp.MethodSpec invoke_method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FullDelegateDesc(class Mono.CSharp.MethodSpec invoke_method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Delegate.FullDelegateDesc(Mono.CSharp.MethodSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invoke_method" Type="Mono.CSharp.MethodSpec" />
      </Parameters>
      <Docs>
        <param name="invoke_method">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConstructor">
      <MemberSignature Language="C#" Value="public static Mono.CSharp.MethodSpec GetConstructor (Mono.CSharp.TypeSpec delType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.CSharp.MethodSpec GetConstructor(class Mono.CSharp.TypeSpec delType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Delegate.GetConstructor(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MethodSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delType" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="delType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInvokeMethod">
      <MemberSignature Language="C#" Value="public static Mono.CSharp.MethodSpec GetInvokeMethod (Mono.CSharp.TypeSpec delType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.CSharp.MethodSpec GetInvokeMethod(class Mono.CSharp.TypeSpec delType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Delegate.GetInvokeMethod(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MethodSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delType" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="delType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameters">
      <MemberSignature Language="C#" Value="public static Mono.CSharp.AParametersCollection GetParameters (Mono.CSharp.TypeSpec delType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.CSharp.AParametersCollection GetParameters(class Mono.CSharp.TypeSpec delType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Delegate.GetParameters(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.AParametersCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delType" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="delType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceExpression">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Expression InstanceExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.Expression InstanceExpression" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Delegate.InstanceExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMethodName">
      <MemberSignature Language="C#" Value="public static readonly string InvokeMethodName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string InvokeMethodName" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.Delegate.InvokeMethodName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTypeCovariant">
      <MemberSignature Language="C#" Value="public static bool IsTypeCovariant (Mono.CSharp.ResolveContext rc, Mono.CSharp.TypeSpec a, Mono.CSharp.TypeSpec b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTypeCovariant(class Mono.CSharp.ResolveContext rc, class Mono.CSharp.TypeSpec a, class Mono.CSharp.TypeSpec b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Delegate.IsTypeCovariant(Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="a" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="b" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeSpec MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.TypeSpec MemberType" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Delegate.MemberType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public Mono.CSharp.AParametersCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.AParametersCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Delegate.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.AParametersCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareEmit">
      <MemberSignature Language="C#" Value="public override void PrepareEmit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void PrepareEmit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Delegate.PrepareEmit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveBaseTypes">
      <MemberSignature Language="C#" Value="protected override Mono.CSharp.TypeSpec[] ResolveBaseTypes (out Mono.CSharp.FullNamedExpression base_class);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Mono.CSharp.TypeSpec[] ResolveBaseTypes(class Mono.CSharp.FullNamedExpression base_class) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Delegate.ResolveBaseTypes(Mono.CSharp.FullNamedExpression@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="base_class" Type="Mono.CSharp.FullNamedExpression&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="base_class">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeAttr">
      <MemberSignature Language="C#" Value="protected override System.Reflection.TypeAttributes TypeAttr { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.TypeAttributes TypeAttr" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Delegate.TypeAttr" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.TypeAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypExpression">
      <MemberSignature Language="C#" Value="public Mono.CSharp.FullNamedExpression TypExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.FullNamedExpression TypExpression" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Delegate.TypExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.FullNamedExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidAttributeTargets">
      <MemberSignature Language="C#" Value="public override string[] ValidAttributeTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ValidAttributeTargets" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Delegate.ValidAttributeTargets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyClsCompliance">
      <MemberSignature Language="C#" Value="protected override bool VerifyClsCompliance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool VerifyClsCompliance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Delegate.VerifyClsCompliance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>