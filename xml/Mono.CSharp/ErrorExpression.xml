<Type Name="ErrorExpression" FullName="Mono.CSharp.ErrorExpression">
  <TypeSignature Language="C#" Value="public class ErrorExpression : Mono.CSharp.EmptyExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ErrorExpression extends Mono.CSharp.EmptyExpression" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.ErrorExpression" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.EmptyExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override object Accept (Mono.CSharp.StructuralVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Accept(class Mono.CSharp.StructuralVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ErrorExpression.Accept(Mono.CSharp.StructuralVisitor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Mono.CSharp.StructuralVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateExpressionTree">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.Expression CreateExpressionTree (Mono.CSharp.ResolveContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.Expression CreateExpressionTree(class Mono.CSharp.ResolveContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ErrorExpression.CreateExpressionTree(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoResolveLValue">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.Expression DoResolveLValue (Mono.CSharp.ResolveContext rc, Mono.CSharp.Expression right_side);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.Expression DoResolveLValue(class Mono.CSharp.ResolveContext rc, class Mono.CSharp.Expression right_side) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ErrorExpression.DoResolveLValue(Mono.CSharp.ResolveContext,Mono.CSharp.Expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="right_side" Type="Mono.CSharp.Expression" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="right_side">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_OperatorCannotBeApplied">
      <MemberSignature Language="C#" Value="public override void Error_OperatorCannotBeApplied (Mono.CSharp.ResolveContext rc, Mono.CSharp.Location loc, string oper, Mono.CSharp.TypeSpec t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Error_OperatorCannotBeApplied(class Mono.CSharp.ResolveContext rc, valuetype Mono.CSharp.Location loc, string oper, class Mono.CSharp.TypeSpec t) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ErrorExpression.Error_OperatorCannotBeApplied(Mono.CSharp.ResolveContext,Mono.CSharp.Location,System.String,Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
        <Parameter Name="oper" Type="System.String" />
        <Parameter Name="t" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="loc">To be added.</param>
        <param name="oper">To be added.</param>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_UnexpectedKind">
      <MemberSignature Language="C#" Value="public override void Error_UnexpectedKind (Mono.CSharp.ResolveContext ec, Mono.CSharp.ResolveFlags flags, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Error_UnexpectedKind(class Mono.CSharp.ResolveContext ec, valuetype Mono.CSharp.ResolveFlags flags, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ErrorExpression.Error_UnexpectedKind(Mono.CSharp.ResolveContext,Mono.CSharp.ResolveFlags,Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="flags" Type="Mono.CSharp.ResolveFlags" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_ValueAssignment">
      <MemberSignature Language="C#" Value="public override void Error_ValueAssignment (Mono.CSharp.ResolveContext rc, Mono.CSharp.Expression rhs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Error_ValueAssignment(class Mono.CSharp.ResolveContext rc, class Mono.CSharp.Expression rhs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ErrorExpression.Error_ValueAssignment(Mono.CSharp.ResolveContext,Mono.CSharp.Expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="rhs" Type="Mono.CSharp.Expression" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="rhs">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_ValueCannotBeConverted">
      <MemberSignature Language="C#" Value="public override void Error_ValueCannotBeConverted (Mono.CSharp.ResolveContext ec, Mono.CSharp.TypeSpec target, bool expl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Error_ValueCannotBeConverted(class Mono.CSharp.ResolveContext ec, class Mono.CSharp.TypeSpec target, bool expl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ErrorExpression.Error_ValueCannotBeConverted(Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="target" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="expl" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="target">To be added.</param>
        <param name="expl">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static readonly Mono.CSharp.ErrorExpression Instance;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Mono.CSharp.ErrorExpression Instance" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.ErrorExpression.Instance" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ErrorExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>