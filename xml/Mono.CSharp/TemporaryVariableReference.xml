<Type Name="TemporaryVariableReference" FullName="Mono.CSharp.TemporaryVariableReference">
  <TypeSignature Language="C#" Value="public class TemporaryVariableReference : Mono.CSharp.VariableReference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TemporaryVariableReference extends Mono.CSharp.VariableReference" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.TemporaryVariableReference" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.VariableReference</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemporaryVariableReference (Mono.CSharp.LocalVariable li, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.LocalVariable li, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TemporaryVariableReference.#ctor(Mono.CSharp.LocalVariable,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="li" Type="Mono.CSharp.LocalVariable" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="li">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Mono.CSharp.TemporaryVariableReference Create (Mono.CSharp.TypeSpec type, Mono.CSharp.Block block, Mono.CSharp.Location loc, bool writeToSymbolFile = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.CSharp.TemporaryVariableReference Create(class Mono.CSharp.TypeSpec type, class Mono.CSharp.Block block, valuetype Mono.CSharp.Location loc, bool writeToSymbolFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TemporaryVariableReference.Create(Mono.CSharp.TypeSpec,Mono.CSharp.Block,Mono.CSharp.Location,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TemporaryVariableReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="block" Type="Mono.CSharp.Block" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
        <Parameter Name="writeToSymbolFile" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="block">To be added.</param>
        <param name="loc">To be added.</param>
        <param name="writeToSymbolFile">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoResolve">
      <MemberSignature Language="C#" Value="protected override Mono.CSharp.Expression DoResolve (Mono.CSharp.ResolveContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Mono.CSharp.Expression DoResolve(class Mono.CSharp.ResolveContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TemporaryVariableReference.DoResolve(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoResolveLValue">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.Expression DoResolveLValue (Mono.CSharp.ResolveContext ec, Mono.CSharp.Expression right_side);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.Expression DoResolveLValue(class Mono.CSharp.ResolveContext ec, class Mono.CSharp.Expression right_side) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TemporaryVariableReference.DoResolveLValue(Mono.CSharp.ResolveContext,Mono.CSharp.Expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="right_side" Type="Mono.CSharp.Expression" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="right_side">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public override void Emit (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Emit(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TemporaryVariableReference.Emit(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitAssign">
      <MemberSignature Language="C#" Value="public void EmitAssign (Mono.CSharp.EmitContext ec, Mono.CSharp.Expression source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EmitAssign(class Mono.CSharp.EmitContext ec, class Mono.CSharp.Expression source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TemporaryVariableReference.EmitAssign(Mono.CSharp.EmitContext,Mono.CSharp.Expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
        <Parameter Name="source" Type="Mono.CSharp.Expression" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHoistedVariable">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.HoistedVariable GetHoistedVariable (Mono.CSharp.AnonymousExpression ae);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.HoistedVariable GetHoistedVariable(class Mono.CSharp.AnonymousExpression ae) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TemporaryVariableReference.GetHoistedVariable(Mono.CSharp.AnonymousExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.HoistedVariable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ae" Type="Mono.CSharp.AnonymousExpression" />
      </Parameters>
      <Docs>
        <param name="ae">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixed">
      <MemberSignature Language="C#" Value="public override bool IsFixed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixed" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TemporaryVariableReference.IsFixed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLockedByStatement">
      <MemberSignature Language="C#" Value="public override bool IsLockedByStatement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLockedByStatement" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TemporaryVariableReference.IsLockedByStatement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRef">
      <MemberSignature Language="C#" Value="public override bool IsRef { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRef" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TemporaryVariableReference.IsRef" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalInfo">
      <MemberSignature Language="C#" Value="public Mono.CSharp.LocalVariable LocalInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.LocalVariable LocalInfo" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TemporaryVariableReference.LocalInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.LocalVariable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TemporaryVariableReference.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHasAddressTaken">
      <MemberSignature Language="C#" Value="public override void SetHasAddressTaken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetHasAddressTaken() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TemporaryVariableReference.SetHasAddressTaken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Variable">
      <MemberSignature Language="C#" Value="protected override Mono.CSharp.ILocalVariable Variable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.ILocalVariable Variable" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TemporaryVariableReference.Variable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ILocalVariable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VariableInfo">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.VariableInfo VariableInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.VariableInfo VariableInfo" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TemporaryVariableReference.VariableInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.VariableInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>