<Type Name="StateMachineInitializer" FullName="Mono.CSharp.StateMachineInitializer">
  <TypeSignature Language="C#" Value="public abstract class StateMachineInitializer : Mono.CSharp.AnonymousExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit StateMachineInitializer extends Mono.CSharp.AnonymousExpression" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.StateMachineInitializer" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.AnonymousExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StateMachineInitializer (Mono.CSharp.ParametersBlock block, Mono.CSharp.TypeDefinition host, Mono.CSharp.TypeSpec returnType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.ParametersBlock block, class Mono.CSharp.TypeDefinition host, class Mono.CSharp.TypeSpec returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.StateMachineInitializer.#ctor(Mono.CSharp.ParametersBlock,Mono.CSharp.TypeDefinition,Mono.CSharp.TypeSpec)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="block" Type="Mono.CSharp.ParametersBlock" />
        <Parameter Name="host" Type="Mono.CSharp.TypeDefinition" />
        <Parameter Name="returnType" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="block">To be added.</param>
        <param name="host">To be added.</param>
        <param name="returnType">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddResumePoint">
      <MemberSignature Language="C#" Value="public int AddResumePoint (Mono.CSharp.ResumableStatement stmt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddResumePoint(class Mono.CSharp.ResumableStatement stmt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.StateMachineInitializer.AddResumePoint(Mono.CSharp.ResumableStatement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stmt" Type="Mono.CSharp.ResumableStatement" />
      </Parameters>
      <Docs>
        <param name="stmt">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BodyEnd">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.Label BodyEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Emit.Label BodyEnd" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.StateMachineInitializer.BodyEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.Label</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBlockContext">
      <MemberSignature Language="C#" Value="protected virtual Mono.CSharp.BlockContext CreateBlockContext (Mono.CSharp.BlockContext bc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Mono.CSharp.BlockContext CreateBlockContext(class Mono.CSharp.BlockContext bc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.StateMachineInitializer.CreateBlockContext(Mono.CSharp.BlockContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.BlockContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bc" Type="Mono.CSharp.BlockContext" />
      </Parameters>
      <Docs>
        <param name="bc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateExpressionTree">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.Expression CreateExpressionTree (Mono.CSharp.ResolveContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.Expression CreateExpressionTree(class Mono.CSharp.ResolveContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.StateMachineInitializer.CreateExpressionTree(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="current_pc">
      <MemberSignature Language="C#" Value="protected System.Reflection.Emit.LocalBuilder current_pc;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Reflection.Emit.LocalBuilder current_pc" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.StateMachineInitializer.current_pc" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.LocalBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentPC">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.LocalBuilder CurrentPC { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Emit.LocalBuilder CurrentPC" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.StateMachineInitializer.CurrentPC" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.LocalBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoResolve">
      <MemberSignature Language="C#" Value="protected override Mono.CSharp.Expression DoResolve (Mono.CSharp.ResolveContext rc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Mono.CSharp.Expression DoResolve(class Mono.CSharp.ResolveContext rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.StateMachineInitializer.DoResolve(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public override void Emit (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Emit(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.StateMachineInitializer.Emit(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitLeave">
      <MemberSignature Language="C#" Value="public void EmitLeave (Mono.CSharp.EmitContext ec, bool unwind_protect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EmitLeave(class Mono.CSharp.EmitContext ec, bool unwind_protect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.StateMachineInitializer.EmitLeave(Mono.CSharp.EmitContext,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
        <Parameter Name="unwind_protect" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="unwind_protect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitMoveNextEpilogue">
      <MemberSignature Language="C#" Value="protected virtual void EmitMoveNextEpilogue (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EmitMoveNextEpilogue(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.StateMachineInitializer.EmitMoveNextEpilogue(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public readonly Mono.CSharp.TypeDefinition Host;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly class Mono.CSharp.TypeDefinition Host" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.StateMachineInitializer.Host" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InjectYield">
      <MemberSignature Language="C#" Value="public virtual void InjectYield (Mono.CSharp.EmitContext ec, Mono.CSharp.Expression expr, int resume_pc, bool unwind_protect, System.Reflection.Emit.Label resume_point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InjectYield(class Mono.CSharp.EmitContext ec, class Mono.CSharp.Expression expr, int32 resume_pc, bool unwind_protect, valuetype System.Reflection.Emit.Label resume_point) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.StateMachineInitializer.InjectYield(Mono.CSharp.EmitContext,Mono.CSharp.Expression,System.Int32,System.Boolean,System.Reflection.Emit.Label)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
        <Parameter Name="expr" Type="Mono.CSharp.Expression" />
        <Parameter Name="resume_pc" Type="System.Int32" />
        <Parameter Name="unwind_protect" Type="System.Boolean" />
        <Parameter Name="resume_point" Type="System.Reflection.Emit.Label" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="expr">To be added.</param>
        <param name="resume_pc">To be added.</param>
        <param name="unwind_protect">To be added.</param>
        <param name="resume_point">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="move_next_error">
      <MemberSignature Language="C#" Value="protected System.Reflection.Emit.Label move_next_error;" />
      <MemberSignature Language="ILAsm" Value=".field family valuetype System.Reflection.Emit.Label move_next_error" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.StateMachineInitializer.move_next_error" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.Label</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="move_next_ok">
      <MemberSignature Language="C#" Value="protected System.Reflection.Emit.Label move_next_ok;" />
      <MemberSignature Language="ILAsm" Value=".field family valuetype System.Reflection.Emit.Label move_next_ok" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.StateMachineInitializer.move_next_ok" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.Label</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="resume_points">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.List&lt;Mono.CSharp.ResumableStatement&gt; resume_points;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Generic.List`1&lt;class Mono.CSharp.ResumableStatement&gt; resume_points" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.StateMachineInitializer.resume_points" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Mono.CSharp.ResumableStatement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStateMachine">
      <MemberSignature Language="C#" Value="public void SetStateMachine (Mono.CSharp.StateMachine stateMachine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetStateMachine(class Mono.CSharp.StateMachine stateMachine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.StateMachineInitializer.SetStateMachine(Mono.CSharp.StateMachine)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateMachine" Type="Mono.CSharp.StateMachine" />
      </Parameters>
      <Docs>
        <param name="stateMachine">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipFinally">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.LocalBuilder SkipFinally { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Emit.LocalBuilder SkipFinally" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.StateMachineInitializer.SkipFinally" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.LocalBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="storey">
      <MemberSignature Language="C#" Value="protected Mono.CSharp.StateMachine storey;" />
      <MemberSignature Language="ILAsm" Value=".field family class Mono.CSharp.StateMachine storey" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.StateMachineInitializer.storey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.StateMachine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Storey">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.AnonymousMethodStorey Storey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.AnonymousMethodStorey Storey" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.StateMachineInitializer.Storey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.AnonymousMethodStorey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>