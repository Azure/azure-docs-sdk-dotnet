<Type Name="FloatLiteral" FullName="Mono.CSharp.FloatLiteral">
  <TypeSignature Language="C#" Value="public class FloatLiteral : Mono.CSharp.FloatConstant, Mono.CSharp.ILiteralConstant" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FloatLiteral extends Mono.CSharp.FloatConstant implements class Mono.CSharp.ILiteralConstant" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.FloatLiteral" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.FloatConstant</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Mono.CSharp.ILiteralConstant</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FloatLiteral (Mono.CSharp.BuiltinTypes types, float f, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.BuiltinTypes types, float32 f, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.FloatLiteral.#ctor(Mono.CSharp.BuiltinTypes,System.Single,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="types" Type="Mono.CSharp.BuiltinTypes" />
        <Parameter Name="f" Type="System.Single" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="types">To be added.</param>
        <param name="f">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override object Accept (Mono.CSharp.StructuralVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Accept(class Mono.CSharp.StructuralVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.FloatLiteral.Accept(Mono.CSharp.StructuralVisitor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Mono.CSharp.StructuralVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiteral">
      <MemberSignature Language="C#" Value="public override bool IsLiteral { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLiteral" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.FloatLiteral.IsLiteral" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>