<Type Name="AnonymousExpression" FullName="Mono.CSharp.AnonymousExpression">
  <TypeSignature Language="C#" Value="public abstract class AnonymousExpression : Mono.CSharp.ExpressionStatement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AnonymousExpression extends Mono.CSharp.ExpressionStatement" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.AnonymousExpression" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.ExpressionStatement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AnonymousExpression (Mono.CSharp.ParametersBlock block, Mono.CSharp.TypeSpec return_type, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.ParametersBlock block, class Mono.CSharp.TypeSpec return_type, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.AnonymousExpression.#ctor(Mono.CSharp.ParametersBlock,Mono.CSharp.TypeSpec,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="block" Type="Mono.CSharp.ParametersBlock" />
        <Parameter Name="return_type" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="block">To be added.</param>
        <param name="return_type">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="block">
      <MemberSignature Language="C#" Value="protected readonly Mono.CSharp.ParametersBlock block;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class Mono.CSharp.ParametersBlock block" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.AnonymousExpression.block" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ParametersBlock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public Mono.CSharp.ParametersBlock Block { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.ParametersBlock Block" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.AnonymousExpression.Block" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ParametersBlock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compatible">
      <MemberSignature Language="C#" Value="public Mono.CSharp.AnonymousExpression Compatible (Mono.CSharp.ResolveContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.AnonymousExpression Compatible(class Mono.CSharp.ResolveContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.AnonymousExpression.Compatible(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.AnonymousExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compatible">
      <MemberSignature Language="C#" Value="public Mono.CSharp.AnonymousExpression Compatible (Mono.CSharp.ResolveContext ec, Mono.CSharp.AnonymousExpression ae);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.AnonymousExpression Compatible(class Mono.CSharp.ResolveContext ec, class Mono.CSharp.AnonymousExpression ae) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.AnonymousExpression.Compatible(Mono.CSharp.ResolveContext,Mono.CSharp.AnonymousExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.AnonymousExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="ae" Type="Mono.CSharp.AnonymousExpression" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="ae">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerType">
      <MemberSignature Language="C#" Value="public abstract string ContainerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContainerType" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.AnonymousExpression.ContainerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsEmitWithAwait">
      <MemberSignature Language="C#" Value="public override bool ContainsEmitWithAwait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ContainsEmitWithAwait() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.AnonymousExpression.ContainsEmitWithAwait" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowAnalysis">
      <MemberSignature Language="C#" Value="public override void FlowAnalysis (Mono.CSharp.FlowAnalysisContext fc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FlowAnalysis(class Mono.CSharp.FlowAnalysisContext fc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.AnonymousExpression.FlowAnalysis(Mono.CSharp.FlowAnalysisContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fc" Type="Mono.CSharp.FlowAnalysisContext" />
      </Parameters>
      <Docs>
        <param name="fc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIterator">
      <MemberSignature Language="C#" Value="public abstract bool IsIterator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIterator" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.AnonymousExpression.IsIterator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkReachable">
      <MemberSignature Language="C#" Value="public override void MarkReachable (Mono.CSharp.Reachability rc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void MarkReachable(valuetype Mono.CSharp.Reachability rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.AnonymousExpression.MarkReachable(Mono.CSharp.Reachability)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.Reachability" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnType">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeSpec ReturnType;" />
      <MemberSignature Language="ILAsm" Value=".field public class Mono.CSharp.TypeSpec ReturnType" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.AnonymousExpression.ReturnType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHasThisAccess">
      <MemberSignature Language="C#" Value="public void SetHasThisAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetHasThisAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.AnonymousExpression.SetHasThisAccess" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Storey">
      <MemberSignature Language="C#" Value="public abstract Mono.CSharp.AnonymousMethodStorey Storey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.AnonymousMethodStorey Storey" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.AnonymousExpression.Storey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.AnonymousMethodStorey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>