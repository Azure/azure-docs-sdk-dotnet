<Type Name="ConstantExpr" FullName="Mono.CSharp.ConstantExpr">
  <TypeSignature Language="C#" Value="public class ConstantExpr : Mono.CSharp.MemberExpr" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConstantExpr extends Mono.CSharp.MemberExpr" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.ConstantExpr" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.MemberExpr</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConstantExpr (Mono.CSharp.ConstSpec constant, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.ConstSpec constant, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ConstantExpr.#ctor(Mono.CSharp.ConstSpec,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="constant" Type="Mono.CSharp.ConstSpec" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="constant">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateExpressionTree">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.Expression CreateExpressionTree (Mono.CSharp.ResolveContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.Expression CreateExpressionTree(class Mono.CSharp.ResolveContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ConstantExpr.CreateExpressionTree(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="protected override Mono.CSharp.TypeSpec DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.TypeSpec DeclaringType" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.ConstantExpr.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoResolve">
      <MemberSignature Language="C#" Value="protected override Mono.CSharp.Expression DoResolve (Mono.CSharp.ResolveContext rc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Mono.CSharp.Expression DoResolve(class Mono.CSharp.ResolveContext rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ConstantExpr.DoResolve(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public override void Emit (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Emit(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ConstantExpr.Emit(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureForError">
      <MemberSignature Language="C#" Value="public override string GetSignatureForError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetSignatureForError() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ConstantExpr.GetSignatureForError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInstance">
      <MemberSignature Language="C#" Value="public override bool IsInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInstance" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.ConstantExpr.IsInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStatic">
      <MemberSignature Language="C#" Value="public override bool IsStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStatic" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.ConstantExpr.IsStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KindName">
      <MemberSignature Language="C#" Value="public override string KindName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KindName" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.ConstantExpr.KindName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.ConstantExpr.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveNameOf">
      <MemberSignature Language="C#" Value="public override void ResolveNameOf (Mono.CSharp.ResolveContext rc, Mono.CSharp.ATypeNameExpression expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResolveNameOf(class Mono.CSharp.ResolveContext rc, class Mono.CSharp.ATypeNameExpression expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ConstantExpr.ResolveNameOf(Mono.CSharp.ResolveContext,Mono.CSharp.ATypeNameExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="expr" Type="Mono.CSharp.ATypeNameExpression" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="expr">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTypeArguments">
      <MemberSignature Language="C#" Value="public override void SetTypeArguments (Mono.CSharp.ResolveContext ec, Mono.CSharp.TypeArguments ta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetTypeArguments(class Mono.CSharp.ResolveContext ec, class Mono.CSharp.TypeArguments ta) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ConstantExpr.SetTypeArguments(Mono.CSharp.ResolveContext,Mono.CSharp.TypeArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="ta" Type="Mono.CSharp.TypeArguments" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="ta">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>