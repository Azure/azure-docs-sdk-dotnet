<Type Name="NamedArgument" FullName="Mono.CSharp.NamedArgument">
  <TypeSignature Language="C#" Value="public class NamedArgument : Mono.CSharp.MovableArgument" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NamedArgument extends Mono.CSharp.MovableArgument" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.NamedArgument" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.MovableArgument</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedArgument (string name, Mono.CSharp.Location loc, Mono.CSharp.Expression expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype Mono.CSharp.Location loc, class Mono.CSharp.Expression expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.NamedArgument.#ctor(System.String,Mono.CSharp.Location,Mono.CSharp.Expression)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
        <Parameter Name="expr" Type="Mono.CSharp.Expression" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="loc">To be added.</param>
        <param name="expr">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedArgument (string name, Mono.CSharp.Location loc, Mono.CSharp.Expression expr, Mono.CSharp.Argument.AType modifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype Mono.CSharp.Location loc, class Mono.CSharp.Expression expr, valuetype Mono.CSharp.Argument/AType modifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.NamedArgument.#ctor(System.String,Mono.CSharp.Location,Mono.CSharp.Expression,Mono.CSharp.Argument.AType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
        <Parameter Name="expr" Type="Mono.CSharp.Expression" />
        <Parameter Name="modifier" Type="Mono.CSharp.Argument+AType" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="loc">To be added.</param>
        <param name="expr">To be added.</param>
        <param name="modifier">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateExpressionTree">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.Expression CreateExpressionTree (Mono.CSharp.ResolveContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.Expression CreateExpressionTree(class Mono.CSharp.ResolveContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.NamedArgument.CreateExpressionTree(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Location Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Mono.CSharp.Location Location" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.NamedArgument.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Location</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public readonly string Name;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly string Name" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.NamedArgument.Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>