<Type Name="TypeParameterInflator" FullName="Mono.CSharp.TypeParameterInflator">
  <TypeSignature Language="C#" Value="public struct TypeParameterInflator" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit TypeParameterInflator extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.TypeParameterInflator" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeParameterInflator (Mono.CSharp.TypeParameterInflator nested, Mono.CSharp.TypeSpec type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Mono.CSharp.TypeParameterInflator nested, class Mono.CSharp.TypeSpec type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterInflator.#ctor(Mono.CSharp.TypeParameterInflator,Mono.CSharp.TypeSpec)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nested" Type="Mono.CSharp.TypeParameterInflator" />
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="nested">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeParameterInflator (Mono.CSharp.IModuleContext context, Mono.CSharp.TypeSpec type, Mono.CSharp.TypeParameterSpec[] tparams, Mono.CSharp.TypeSpec[] targs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.IModuleContext context, class Mono.CSharp.TypeSpec type, class Mono.CSharp.TypeParameterSpec[] tparams, class Mono.CSharp.TypeSpec[] targs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterInflator.#ctor(Mono.CSharp.IModuleContext,Mono.CSharp.TypeSpec,Mono.CSharp.TypeParameterSpec[],Mono.CSharp.TypeSpec[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="Mono.CSharp.IModuleContext" />
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="tparams" Type="Mono.CSharp.TypeParameterSpec[]" />
        <Parameter Name="targs" Type="Mono.CSharp.TypeSpec[]" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="type">To be added.</param>
        <param name="tparams">To be added.</param>
        <param name="targs">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public Mono.CSharp.IModuleContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.IModuleContext Context" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeParameterInflator.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.IModuleContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeSpec Inflate (Mono.CSharp.TypeParameterSpec tp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.TypeSpec Inflate(class Mono.CSharp.TypeParameterSpec tp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterInflator.Inflate(Mono.CSharp.TypeParameterSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tp" Type="Mono.CSharp.TypeParameterSpec" />
      </Parameters>
      <Docs>
        <param name="tp">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeSpec Inflate (Mono.CSharp.TypeSpec type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.TypeSpec Inflate(class Mono.CSharp.TypeSpec type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterInflator.Inflate(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInstance">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeSpec TypeInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.TypeSpec TypeInstance" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeParameterInflator.TypeInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeParameters">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeParameterSpec[] TypeParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.TypeParameterSpec[] TypeParameters" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeParameterInflator.TypeParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeParameterSpec[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>