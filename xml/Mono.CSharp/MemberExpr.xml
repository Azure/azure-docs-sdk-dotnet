<Type Name="MemberExpr" FullName="Mono.CSharp.MemberExpr">
  <TypeSignature Language="C#" Value="public abstract class MemberExpr : Mono.CSharp.Expression, Mono.CSharp.OverloadResolver.IInstanceQualifier" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MemberExpr extends Mono.CSharp.Expression implements class Mono.CSharp.OverloadResolver/IInstanceQualifier" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.MemberExpr" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.Expression</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Mono.CSharp.OverloadResolver+IInstanceQualifier</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MemberExpr ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberExpr.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CandidateToBaseOverride">
      <MemberSignature Language="C#" Value="protected Mono.CSharp.MethodSpec CandidateToBaseOverride (Mono.CSharp.ResolveContext rc, Mono.CSharp.MethodSpec method);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Mono.CSharp.MethodSpec CandidateToBaseOverride(class Mono.CSharp.ResolveContext rc, class Mono.CSharp.MethodSpec method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberExpr.CandidateToBaseOverride(Mono.CSharp.ResolveContext,Mono.CSharp.MethodSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MethodSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="method" Type="Mono.CSharp.MethodSpec" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="method">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckProtectedMemberAccess">
      <MemberSignature Language="C#" Value="protected void CheckProtectedMemberAccess (Mono.CSharp.ResolveContext rc, Mono.CSharp.MemberSpec member);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckProtectedMemberAccess(class Mono.CSharp.ResolveContext rc, class Mono.CSharp.MemberSpec member) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberExpr.CheckProtectedMemberAccess(Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="member" Type="Mono.CSharp.MemberSpec" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="member">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckProtectedMemberAccess&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool CheckProtectedMemberAccess&lt;T&gt; (Mono.CSharp.ResolveContext rc, T member, Mono.CSharp.TypeSpec qualifier) where T : Mono.CSharp.MemberSpec;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CheckProtectedMemberAccess&lt;(class Mono.CSharp.MemberSpec) T&gt;(class Mono.CSharp.ResolveContext rc, !!T member, class Mono.CSharp.TypeSpec qualifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberExpr.CheckProtectedMemberAccess``1(Mono.CSharp.ResolveContext,``0,Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Mono.CSharp.MemberSpec</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="member" Type="T" />
        <Parameter Name="qualifier" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="rc">To be added.</param>
        <param name="member">To be added.</param>
        <param name="qualifier">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="conditional_access_receiver">
      <MemberSignature Language="C#" Value="protected bool conditional_access_receiver;" />
      <MemberSignature Language="ILAsm" Value=".field family bool conditional_access_receiver" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.MemberExpr.conditional_access_receiver" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalAccess">
      <MemberSignature Language="C#" Value="public bool ConditionalAccess { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConditionalAccess" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MemberExpr.ConditionalAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsEmitWithAwait">
      <MemberSignature Language="C#" Value="public override bool ContainsEmitWithAwait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ContainsEmitWithAwait() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberExpr.ContainsEmitWithAwait" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="protected abstract Mono.CSharp.TypeSpec DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.TypeSpec DeclaringType" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MemberExpr.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoBestMemberChecks&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected void DoBestMemberChecks&lt;T&gt; (Mono.CSharp.ResolveContext rc, T member) where T : Mono.CSharp.MemberSpec, Mono.CSharp.IInterfaceMemberSpec;" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DoBestMemberChecks&lt;(class Mono.CSharp.MemberSpec, class Mono.CSharp.IInterfaceMemberSpec) T&gt;(class Mono.CSharp.ResolveContext rc, !!T member) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberExpr.DoBestMemberChecks``1(Mono.CSharp.ResolveContext,``0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Mono.CSharp.MemberSpec</BaseTypeName>
            <InterfaceName>Mono.CSharp.IInterfaceMemberSpec</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="member" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="rc">To be added.</param>
        <param name="member">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitInstance">
      <MemberSignature Language="C#" Value="protected void EmitInstance (Mono.CSharp.EmitContext ec, bool prepare_for_load);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EmitInstance(class Mono.CSharp.EmitContext ec, bool prepare_for_load) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberExpr.EmitInstance(Mono.CSharp.EmitContext,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
        <Parameter Name="prepare_for_load" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="prepare_for_load">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_CannotCallAbstractBase">
      <MemberSignature Language="C#" Value="protected virtual void Error_CannotCallAbstractBase (Mono.CSharp.ResolveContext rc, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Error_CannotCallAbstractBase(class Mono.CSharp.ResolveContext rc, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberExpr.Error_CannotCallAbstractBase(Mono.CSharp.ResolveContext,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_ProtectedMemberAccess">
      <MemberSignature Language="C#" Value="public static void Error_ProtectedMemberAccess (Mono.CSharp.ResolveContext rc, Mono.CSharp.MemberSpec member, Mono.CSharp.TypeSpec qualifier, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Error_ProtectedMemberAccess(class Mono.CSharp.ResolveContext rc, class Mono.CSharp.MemberSpec member, class Mono.CSharp.TypeSpec qualifier, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberExpr.Error_ProtectedMemberAccess(Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec,Mono.CSharp.TypeSpec,Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="member" Type="Mono.CSharp.MemberSpec" />
        <Parameter Name="qualifier" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="member">To be added.</param>
        <param name="qualifier">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowAnalysis">
      <MemberSignature Language="C#" Value="public override void FlowAnalysis (Mono.CSharp.FlowAnalysisContext fc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FlowAnalysis(class Mono.CSharp.FlowAnalysisContext fc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberExpr.FlowAnalysis(Mono.CSharp.FlowAnalysisContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fc" Type="Mono.CSharp.FlowAnalysisContext" />
      </Parameters>
      <Docs>
        <param name="fc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasConditionalAccess">
      <MemberSignature Language="C#" Value="public override bool HasConditionalAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool HasConditionalAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberExpr.HasConditionalAccess" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceExpression">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Expression InstanceExpression;" />
      <MemberSignature Language="ILAsm" Value=".field public class Mono.CSharp.Expression InstanceExpression" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.MemberExpr.InstanceExpression" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBase">
      <MemberSignature Language="C#" Value="public bool IsBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBase" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MemberExpr.IsBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInstance">
      <MemberSignature Language="C#" Value="public abstract bool IsInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInstance" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MemberExpr.IsInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStatic">
      <MemberSignature Language="C#" Value="public abstract bool IsStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStatic" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MemberExpr.IsStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KindName">
      <MemberSignature Language="C#" Value="public abstract string KindName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KindName" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MemberExpr.KindName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mono.CSharp.OverloadResolver+IInstanceQualifier.CheckProtectedMemberAccess">
      <MemberSignature Language="C#" Value="bool OverloadResolver.IInstanceQualifier.CheckProtectedMemberAccess (Mono.CSharp.ResolveContext rc, Mono.CSharp.MemberSpec member);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Mono.CSharp.OverloadResolver.IInstanceQualifier.CheckProtectedMemberAccess(class Mono.CSharp.ResolveContext rc, class Mono.CSharp.MemberSpec member) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberExpr.Mono#CSharp#OverloadResolver#IInstanceQualifier#CheckProtectedMemberAccess(Mono.CSharp.ResolveContext,Mono.CSharp.MemberSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="member" Type="Mono.CSharp.MemberSpec" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="member">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mono.CSharp.OverloadResolver+IInstanceQualifier.InstanceType">
      <MemberSignature Language="C#" Value="Mono.CSharp.TypeSpec Mono.CSharp.OverloadResolver+IInstanceQualifier.InstanceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.TypeSpec Mono.CSharp.OverloadResolver.IInstanceQualifier.InstanceType" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MemberExpr.Mono#CSharp#OverloadResolver#IInstanceQualifier#InstanceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.MemberExpr.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveConditionalAccessReceiver">
      <MemberSignature Language="C#" Value="protected void ResolveConditionalAccessReceiver (Mono.CSharp.ResolveContext rc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ResolveConditionalAccessReceiver(class Mono.CSharp.ResolveContext rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberExpr.ResolveConditionalAccessReceiver(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveInstanceExpression">
      <MemberSignature Language="C#" Value="public bool ResolveInstanceExpression (Mono.CSharp.ResolveContext rc, Mono.CSharp.Expression rhs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ResolveInstanceExpression(class Mono.CSharp.ResolveContext rc, class Mono.CSharp.Expression rhs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberExpr.ResolveInstanceExpression(Mono.CSharp.ResolveContext,Mono.CSharp.Expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="rhs" Type="Mono.CSharp.Expression" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="rhs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveMemberAccess">
      <MemberSignature Language="C#" Value="public virtual Mono.CSharp.MemberExpr ResolveMemberAccess (Mono.CSharp.ResolveContext ec, Mono.CSharp.Expression left, Mono.CSharp.SimpleName original);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Mono.CSharp.MemberExpr ResolveMemberAccess(class Mono.CSharp.ResolveContext ec, class Mono.CSharp.Expression left, class Mono.CSharp.SimpleName original) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberExpr.ResolveMemberAccess(Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.SimpleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MemberExpr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="left" Type="Mono.CSharp.Expression" />
        <Parameter Name="original" Type="Mono.CSharp.SimpleName" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="left">To be added.</param>
        <param name="original">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveNameOf">
      <MemberSignature Language="C#" Value="public virtual void ResolveNameOf (Mono.CSharp.ResolveContext rc, Mono.CSharp.ATypeNameExpression expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResolveNameOf(class Mono.CSharp.ResolveContext rc, class Mono.CSharp.ATypeNameExpression expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberExpr.ResolveNameOf(Mono.CSharp.ResolveContext,Mono.CSharp.ATypeNameExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="expr" Type="Mono.CSharp.ATypeNameExpression" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="expr">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTypeArguments">
      <MemberSignature Language="C#" Value="public abstract void SetTypeArguments (Mono.CSharp.ResolveContext ec, Mono.CSharp.TypeArguments ta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTypeArguments(class Mono.CSharp.ResolveContext ec, class Mono.CSharp.TypeArguments ta) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.MemberExpr.SetTypeArguments(Mono.CSharp.ResolveContext,Mono.CSharp.TypeArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="ta" Type="Mono.CSharp.TypeArguments" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="ta">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>