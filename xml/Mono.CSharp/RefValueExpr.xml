<Type Name="RefValueExpr" FullName="Mono.CSharp.RefValueExpr">
  <TypeSignature Language="C#" Value="public class RefValueExpr : Mono.CSharp.ShimExpression, Mono.CSharp.IAssignMethod, Mono.CSharp.IMemoryLocation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RefValueExpr extends Mono.CSharp.ShimExpression implements class Mono.CSharp.IAssignMethod, class Mono.CSharp.IMemoryLocation" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.RefValueExpr" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.ShimExpression</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Mono.CSharp.IAssignMethod</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Mono.CSharp.IMemoryLocation</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RefValueExpr (Mono.CSharp.Expression expr, Mono.CSharp.FullNamedExpression texpr, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.Expression expr, class Mono.CSharp.FullNamedExpression texpr, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.RefValueExpr.#ctor(Mono.CSharp.Expression,Mono.CSharp.FullNamedExpression,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expr" Type="Mono.CSharp.Expression" />
        <Parameter Name="texpr" Type="Mono.CSharp.FullNamedExpression" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="expr">To be added.</param>
        <param name="texpr">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override object Accept (Mono.CSharp.StructuralVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Accept(class Mono.CSharp.StructuralVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.RefValueExpr.Accept(Mono.CSharp.StructuralVisitor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Mono.CSharp.StructuralVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressOf">
      <MemberSignature Language="C#" Value="public void AddressOf (Mono.CSharp.EmitContext ec, Mono.CSharp.AddressOp mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddressOf(class Mono.CSharp.EmitContext ec, valuetype Mono.CSharp.AddressOp mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.RefValueExpr.AddressOf(Mono.CSharp.EmitContext,Mono.CSharp.AddressOp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
        <Parameter Name="mode" Type="Mono.CSharp.AddressOp" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsEmitWithAwait">
      <MemberSignature Language="C#" Value="public override bool ContainsEmitWithAwait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ContainsEmitWithAwait() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.RefValueExpr.ContainsEmitWithAwait" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoResolve">
      <MemberSignature Language="C#" Value="protected override Mono.CSharp.Expression DoResolve (Mono.CSharp.ResolveContext rc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Mono.CSharp.Expression DoResolve(class Mono.CSharp.ResolveContext rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.RefValueExpr.DoResolve(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoResolveLValue">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.Expression DoResolveLValue (Mono.CSharp.ResolveContext rc, Mono.CSharp.Expression right_side);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.Expression DoResolveLValue(class Mono.CSharp.ResolveContext rc, class Mono.CSharp.Expression right_side) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.RefValueExpr.DoResolveLValue(Mono.CSharp.ResolveContext,Mono.CSharp.Expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="right_side" Type="Mono.CSharp.Expression" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="right_side">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public override void Emit (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Emit(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.RefValueExpr.Emit(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public void Emit (Mono.CSharp.EmitContext ec, bool leave_copy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Emit(class Mono.CSharp.EmitContext ec, bool leave_copy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.RefValueExpr.Emit(Mono.CSharp.EmitContext,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
        <Parameter Name="leave_copy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="leave_copy">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitAssign">
      <MemberSignature Language="C#" Value="public void EmitAssign (Mono.CSharp.EmitContext ec, Mono.CSharp.Expression source, bool leave_copy, bool isCompound);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EmitAssign(class Mono.CSharp.EmitContext ec, class Mono.CSharp.Expression source, bool leave_copy, bool isCompound) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.RefValueExpr.EmitAssign(Mono.CSharp.EmitContext,Mono.CSharp.Expression,System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
        <Parameter Name="source" Type="Mono.CSharp.Expression" />
        <Parameter Name="leave_copy" Type="System.Boolean" />
        <Parameter Name="isCompound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="source">To be added.</param>
        <param name="leave_copy">To be added.</param>
        <param name="isCompound">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeExpression">
      <MemberSignature Language="C#" Value="public Mono.CSharp.FullNamedExpression TypeExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.FullNamedExpression TypeExpression" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.RefValueExpr.TypeExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.FullNamedExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>