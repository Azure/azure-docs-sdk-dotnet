<Type Name="EventSpec" FullName="Mono.CSharp.EventSpec">
  <TypeSignature Language="C#" Value="public class EventSpec : Mono.CSharp.MemberSpec, Mono.CSharp.IInterfaceMemberSpec" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventSpec extends Mono.CSharp.MemberSpec implements class Mono.CSharp.IInterfaceMemberSpec" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.EventSpec" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.MemberSpec</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Mono.CSharp.IInterfaceMemberSpec</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSpec (Mono.CSharp.TypeSpec declaringType, Mono.CSharp.IMemberDefinition definition, Mono.CSharp.TypeSpec eventType, Mono.CSharp.Modifiers modifiers, Mono.CSharp.MethodSpec add, Mono.CSharp.MethodSpec remove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.TypeSpec declaringType, class Mono.CSharp.IMemberDefinition definition, class Mono.CSharp.TypeSpec eventType, valuetype Mono.CSharp.Modifiers modifiers, class Mono.CSharp.MethodSpec add, class Mono.CSharp.MethodSpec remove) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EventSpec.#ctor(Mono.CSharp.TypeSpec,Mono.CSharp.IMemberDefinition,Mono.CSharp.TypeSpec,Mono.CSharp.Modifiers,Mono.CSharp.MethodSpec,Mono.CSharp.MethodSpec)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="declaringType" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="definition" Type="Mono.CSharp.IMemberDefinition" />
        <Parameter Name="eventType" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="modifiers" Type="Mono.CSharp.Modifiers" />
        <Parameter Name="add" Type="Mono.CSharp.MethodSpec" />
        <Parameter Name="remove" Type="Mono.CSharp.MethodSpec" />
      </Parameters>
      <Docs>
        <param name="declaringType">To be added.</param>
        <param name="definition">To be added.</param>
        <param name="eventType">To be added.</param>
        <param name="modifiers">To be added.</param>
        <param name="add">To be added.</param>
        <param name="remove">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessorAdd">
      <MemberSignature Language="C#" Value="public Mono.CSharp.MethodSpec AccessorAdd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.MethodSpec AccessorAdd" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EventSpec.AccessorAdd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MethodSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessorRemove">
      <MemberSignature Language="C#" Value="public Mono.CSharp.MethodSpec AccessorRemove { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.MethodSpec AccessorRemove" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EventSpec.AccessorRemove" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MethodSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackingField">
      <MemberSignature Language="C#" Value="public Mono.CSharp.FieldSpec BackingField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.FieldSpec BackingField" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EventSpec.BackingField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.FieldSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InflateMember">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.MemberSpec InflateMember (Mono.CSharp.TypeParameterInflator inflator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.MemberSpec InflateMember(valuetype Mono.CSharp.TypeParameterInflator inflator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EventSpec.InflateMember(Mono.CSharp.TypeParameterInflator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MemberSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inflator" Type="Mono.CSharp.TypeParameterInflator" />
      </Parameters>
      <Docs>
        <param name="inflator">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeSpec MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.TypeSpec MemberType" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.EventSpec.MemberType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveMissingDependencies">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.List&lt;Mono.CSharp.MissingTypeSpecReference&gt; ResolveMissingDependencies (Mono.CSharp.MemberSpec caller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.List`1&lt;class Mono.CSharp.MissingTypeSpecReference&gt; ResolveMissingDependencies(class Mono.CSharp.MemberSpec caller) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.EventSpec.ResolveMissingDependencies(Mono.CSharp.MemberSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Mono.CSharp.MissingTypeSpecReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="caller" Type="Mono.CSharp.MemberSpec" />
      </Parameters>
      <Docs>
        <param name="caller">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>