<Type Name="AbstractPropertyEventMethod" FullName="Mono.CSharp.AbstractPropertyEventMethod">
  <TypeSignature Language="C#" Value="public abstract class AbstractPropertyEventMethod : Mono.CSharp.MemberCore, Mono.CSharp.IMethodData, Mono.CSharp.IMethodDefinition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AbstractPropertyEventMethod extends Mono.CSharp.MemberCore implements class Mono.CSharp.IMemberContext, class Mono.CSharp.IMemberDefinition, class Mono.CSharp.IMethodData, class Mono.CSharp.IMethodDefinition, class Mono.CSharp.IModuleContext" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.AbstractPropertyEventMethod" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.MemberCore</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Mono.CSharp.IMethodData</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Mono.CSharp.IMethodDefinition</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AbstractPropertyEventMethod (Mono.CSharp.InterfaceMemberBase member, string prefix, Mono.CSharp.Attributes attrs, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.InterfaceMemberBase member, string prefix, class Mono.CSharp.Attributes attrs, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.AbstractPropertyEventMethod.#ctor(Mono.CSharp.InterfaceMemberBase,System.String,Mono.CSharp.Attributes,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="member" Type="Mono.CSharp.InterfaceMemberBase" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="attrs" Type="Mono.CSharp.Attributes" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="member">To be added.</param>
        <param name="prefix">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAttributeBuilder">
      <MemberSignature Language="C#" Value="public override void ApplyAttributeBuilder (Mono.CSharp.Attribute a, Mono.CSharp.MethodSpec ctor, byte[] cdata, Mono.CSharp.PredefinedAttributes pa);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyAttributeBuilder(class Mono.CSharp.Attribute a, class Mono.CSharp.MethodSpec ctor, unsigned int8[] cdata, class Mono.CSharp.PredefinedAttributes pa) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.AbstractPropertyEventMethod.ApplyAttributeBuilder(Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,System.Byte[],Mono.CSharp.PredefinedAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Mono.CSharp.Attribute" />
        <Parameter Name="ctor" Type="Mono.CSharp.MethodSpec" />
        <Parameter Name="cdata" Type="System.Byte[]" />
        <Parameter Name="pa" Type="Mono.CSharp.PredefinedAttributes" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="ctor">To be added.</param>
        <param name="cdata">To be added.</param>
        <param name="pa">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyToExtraTarget">
      <MemberSignature Language="C#" Value="protected virtual void ApplyToExtraTarget (Mono.CSharp.Attribute a, Mono.CSharp.MethodSpec ctor, byte[] cdata, Mono.CSharp.PredefinedAttributes pa);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyToExtraTarget(class Mono.CSharp.Attribute a, class Mono.CSharp.MethodSpec ctor, unsigned int8[] cdata, class Mono.CSharp.PredefinedAttributes pa) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.AbstractPropertyEventMethod.ApplyToExtraTarget(Mono.CSharp.Attribute,Mono.CSharp.MethodSpec,System.Byte[],Mono.CSharp.PredefinedAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Mono.CSharp.Attribute" />
        <Parameter Name="ctor" Type="Mono.CSharp.MethodSpec" />
        <Parameter Name="cdata" Type="System.Byte[]" />
        <Parameter Name="pa" Type="Mono.CSharp.PredefinedAttributes" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="ctor">To be added.</param>
        <param name="cdata">To be added.</param>
        <param name="pa">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="block">
      <MemberSignature Language="C#" Value="protected Mono.CSharp.ToplevelBlock block;" />
      <MemberSignature Language="ILAsm" Value=".field family class Mono.CSharp.ToplevelBlock block" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.AbstractPropertyEventMethod.block" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ToplevelBlock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public Mono.CSharp.ToplevelBlock Block { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.ToplevelBlock Block" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.AbstractPropertyEventMethod.Block" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ToplevelBlock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallingConventions">
      <MemberSignature Language="C#" Value="public System.Reflection.CallingConventions CallingConventions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.CallingConventions CallingConventions" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.AbstractPropertyEventMethod.CallingConventions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.CallingConventions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEmitContext">
      <MemberSignature Language="C#" Value="public Mono.CSharp.EmitContext CreateEmitContext (System.Reflection.Emit.ILGenerator ig, Mono.CompilerServices.SymbolWriter.SourceMethodBuilder sourceMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Mono.CSharp.EmitContext CreateEmitContext(class System.Reflection.Emit.ILGenerator ig, class Mono.CompilerServices.SymbolWriter.SourceMethodBuilder sourceMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.AbstractPropertyEventMethod.CreateEmitContext(System.Reflection.Emit.ILGenerator,Mono.CompilerServices.SymbolWriter.SourceMethodBuilder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.EmitContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ig" Type="System.Reflection.Emit.ILGenerator" />
        <Parameter Name="sourceMethod" Type="Mono.CompilerServices.SymbolWriter.SourceMethodBuilder" />
      </Parameters>
      <Docs>
        <param name="ig">To be added.</param>
        <param name="sourceMethod">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="declarative_security">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.Dictionary&lt;System.Security.Permissions.SecurityAction,System.Security.PermissionSet&gt; declarative_security;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Generic.Dictionary`2&lt;valuetype System.Security.Permissions.SecurityAction, class System.Security.PermissionSet&gt; declarative_security" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.AbstractPropertyEventMethod.declarative_security" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Security.Permissions.SecurityAction,System.Security.PermissionSet&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Define">
      <MemberSignature Language="C#" Value="public override sealed bool Define ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Define() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.AbstractPropertyEventMethod.Define" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocCommentHeader">
      <MemberSignature Language="C#" Value="public override string DocCommentHeader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocCommentHeader" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.AbstractPropertyEventMethod.DocCommentHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public virtual void Emit (Mono.CSharp.TypeDefinition parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Emit(class Mono.CSharp.TypeDefinition parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.AbstractPropertyEventMethod.Emit(Mono.CSharp.TypeDefinition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="Mono.CSharp.TypeDefinition" />
      </Parameters>
      <Docs>
        <param name="parent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableOverloadChecks">
      <MemberSignature Language="C#" Value="public override bool EnableOverloadChecks (Mono.CSharp.MemberCore overload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool EnableOverloadChecks(class Mono.CSharp.MemberCore overload) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.AbstractPropertyEventMethod.EnableOverloadChecks(Mono.CSharp.MemberCore)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="overload" Type="Mono.CSharp.MemberCore" />
      </Parameters>
      <Docs>
        <param name="overload">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCallerMemberName">
      <MemberSignature Language="C#" Value="public override string GetCallerMemberName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetCallerMemberName() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.AbstractPropertyEventMethod.GetCallerMemberName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureForDocumentation">
      <MemberSignature Language="C#" Value="public override string GetSignatureForDocumentation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetSignatureForDocumentation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.AbstractPropertyEventMethod.GetSignatureForDocumentation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAccessor">
      <MemberSignature Language="C#" Value="public bool IsAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAccessor" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.AbstractPropertyEventMethod.IsAccessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClsComplianceRequired">
      <MemberSignature Language="C#" Value="public override bool IsClsComplianceRequired ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsClsComplianceRequired() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.AbstractPropertyEventMethod.IsClsComplianceRequired" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="method_data">
      <MemberSignature Language="C#" Value="protected Mono.CSharp.MethodData method_data;" />
      <MemberSignature Language="ILAsm" Value=".field family class Mono.CSharp.MethodData method_data" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.AbstractPropertyEventMethod.method_data" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MethodData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public Mono.CSharp.MemberName MethodName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.MemberName MethodName" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.AbstractPropertyEventMethod.MethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MemberName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mono.CSharp.IMethodDefinition.Metadata">
      <MemberSignature Language="C#" Value="System.Reflection.MethodBase Mono.CSharp.IMethodDefinition.Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodBase Mono.CSharp.IMethodDefinition.Metadata" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.AbstractPropertyEventMethod.Mono#CSharp#IMethodDefinition#Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterInfo">
      <MemberSignature Language="C#" Value="public abstract Mono.CSharp.ParametersCompiled ParameterInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.ParametersCompiled ParameterInfo" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.AbstractPropertyEventMethod.ParameterInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ParametersCompiled</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterTypes">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeSpec[] ParameterTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.TypeSpec[] ParameterTypes" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.AbstractPropertyEventMethod.ParameterTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="prefix">
      <MemberSignature Language="C#" Value="protected readonly string prefix;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly string prefix" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.AbstractPropertyEventMethod.prefix" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareEmit">
      <MemberSignature Language="C#" Value="public void PrepareEmit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrepareEmit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.AbstractPropertyEventMethod.PrepareEmit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnType">
      <MemberSignature Language="C#" Value="public abstract Mono.CSharp.TypeSpec ReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.TypeSpec ReturnType" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.AbstractPropertyEventMethod.ReturnType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Spec">
      <MemberSignature Language="C#" Value="public Mono.CSharp.MethodSpec Spec { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.MethodSpec Spec" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.AbstractPropertyEventMethod.Spec" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.MethodSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateName">
      <MemberSignature Language="C#" Value="public void UpdateName (Mono.CSharp.InterfaceMemberBase member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateName(class Mono.CSharp.InterfaceMemberBase member) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.AbstractPropertyEventMethod.UpdateName(Mono.CSharp.InterfaceMemberBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="Mono.CSharp.InterfaceMemberBase" />
      </Parameters>
      <Docs>
        <param name="member">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteDebugSymbol">
      <MemberSignature Language="C#" Value="public override void WriteDebugSymbol (Mono.CompilerServices.SymbolWriter.MonoSymbolFile file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteDebugSymbol(class Mono.CompilerServices.SymbolWriter.MonoSymbolFile file) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.AbstractPropertyEventMethod.WriteDebugSymbol(Mono.CompilerServices.SymbolWriter.MonoSymbolFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Mono.CompilerServices.SymbolWriter.MonoSymbolFile" />
      </Parameters>
      <Docs>
        <param name="file">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>