<Type Name="StateMachineMethod" FullName="Mono.CSharp.StateMachineMethod">
  <TypeSignature Language="C#" Value="public class StateMachineMethod : Mono.CSharp.Method" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StateMachineMethod extends Mono.CSharp.Method" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.StateMachineMethod" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.Method</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StateMachineMethod (Mono.CSharp.StateMachine host, Mono.CSharp.StateMachineInitializer expr, Mono.CSharp.FullNamedExpression returnType, Mono.CSharp.Modifiers mod, Mono.CSharp.MemberName name, Mono.CSharp.Block.Flags blockFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.StateMachine host, class Mono.CSharp.StateMachineInitializer expr, class Mono.CSharp.FullNamedExpression returnType, valuetype Mono.CSharp.Modifiers mod, class Mono.CSharp.MemberName name, valuetype Mono.CSharp.Block/Flags blockFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.StateMachineMethod.#ctor(Mono.CSharp.StateMachine,Mono.CSharp.StateMachineInitializer,Mono.CSharp.FullNamedExpression,Mono.CSharp.Modifiers,Mono.CSharp.MemberName,Mono.CSharp.Block.Flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="Mono.CSharp.StateMachine" />
        <Parameter Name="expr" Type="Mono.CSharp.StateMachineInitializer" />
        <Parameter Name="returnType" Type="Mono.CSharp.FullNamedExpression" />
        <Parameter Name="mod" Type="Mono.CSharp.Modifiers" />
        <Parameter Name="name" Type="Mono.CSharp.MemberName" />
        <Parameter Name="blockFlags" Type="Mono.CSharp.Block+Flags" />
      </Parameters>
      <Docs>
        <param name="host">To be added.</param>
        <param name="expr">To be added.</param>
        <param name="returnType">To be added.</param>
        <param name="mod">To be added.</param>
        <param name="name">To be added.</param>
        <param name="blockFlags">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEmitContext">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.EmitContext CreateEmitContext (System.Reflection.Emit.ILGenerator ig, Mono.CompilerServices.SymbolWriter.SourceMethodBuilder sourceMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.EmitContext CreateEmitContext(class System.Reflection.Emit.ILGenerator ig, class Mono.CompilerServices.SymbolWriter.SourceMethodBuilder sourceMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.StateMachineMethod.CreateEmitContext(System.Reflection.Emit.ILGenerator,Mono.CompilerServices.SymbolWriter.SourceMethodBuilder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.EmitContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ig" Type="System.Reflection.Emit.ILGenerator" />
        <Parameter Name="sourceMethod" Type="Mono.CompilerServices.SymbolWriter.SourceMethodBuilder" />
      </Parameters>
      <Docs>
        <param name="ig">To be added.</param>
        <param name="sourceMethod">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>