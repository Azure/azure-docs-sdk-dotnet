<Type Name="ConstantFold" FullName="Mono.CSharp.ConstantFold">
  <TypeSignature Language="C#" Value="public static class ConstantFold" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ConstantFold extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.ConstantFold" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BinaryFold">
      <MemberSignature Language="C#" Value="public static Mono.CSharp.Constant BinaryFold (Mono.CSharp.ResolveContext ec, Mono.CSharp.Binary.Operator oper, Mono.CSharp.Constant left, Mono.CSharp.Constant right, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.CSharp.Constant BinaryFold(class Mono.CSharp.ResolveContext ec, valuetype Mono.CSharp.Binary/Operator oper, class Mono.CSharp.Constant left, class Mono.CSharp.Constant right, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ConstantFold.BinaryFold(Mono.CSharp.ResolveContext,Mono.CSharp.Binary.Operator,Mono.CSharp.Constant,Mono.CSharp.Constant,Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Constant</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="oper" Type="Mono.CSharp.Binary+Operator" />
        <Parameter Name="left" Type="Mono.CSharp.Constant" />
        <Parameter Name="right" Type="Mono.CSharp.Constant" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="oper">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBinaryPromotionsTypes">
      <MemberSignature Language="C#" Value="public static Mono.CSharp.TypeSpec[] CreateBinaryPromotionsTypes (Mono.CSharp.BuiltinTypes types);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.CSharp.TypeSpec[] CreateBinaryPromotionsTypes(class Mono.CSharp.BuiltinTypes types) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ConstantFold.CreateBinaryPromotionsTypes(Mono.CSharp.BuiltinTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="Mono.CSharp.BuiltinTypes" />
      </Parameters>
      <Docs>
        <param name="types">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>