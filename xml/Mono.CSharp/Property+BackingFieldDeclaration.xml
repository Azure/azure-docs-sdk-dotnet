<Type Name="Property+BackingFieldDeclaration" FullName="Mono.CSharp.Property+BackingFieldDeclaration">
  <TypeSignature Language="C#" Value="public sealed class Property.BackingFieldDeclaration : Mono.CSharp.Field" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit Property/BackingFieldDeclaration extends Mono.CSharp.Field" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.Property.BackingFieldDeclaration" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.Field</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BackingFieldDeclaration (Mono.CSharp.Property p, bool readOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.Property p, bool readOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Property.BackingFieldDeclaration.#ctor(Mono.CSharp.Property,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="p" Type="Mono.CSharp.Property" />
        <Parameter Name="readOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="p">To be added.</param>
        <param name="readOnly">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureForError">
      <MemberSignature Language="C#" Value="public override string GetSignatureForError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetSignatureForError() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Property.BackingFieldDeclaration.GetSignatureForError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalProperty">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Property OriginalProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.Property OriginalProperty" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Property.BackingFieldDeclaration.OriginalProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Property</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>