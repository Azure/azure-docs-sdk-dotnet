<Type Name="ParametersBlock" FullName="Mono.CSharp.ParametersBlock">
  <TypeSignature Language="C#" Value="public class ParametersBlock : Mono.CSharp.ExplicitBlock" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParametersBlock extends Mono.CSharp.ExplicitBlock" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.ParametersBlock" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.ExplicitBlock</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ParametersBlock (Mono.CSharp.ParametersBlock source, Mono.CSharp.ParametersCompiled parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.ParametersBlock source, class Mono.CSharp.ParametersCompiled parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ParametersBlock.#ctor(Mono.CSharp.ParametersBlock,Mono.CSharp.ParametersCompiled)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="Mono.CSharp.ParametersBlock" />
        <Parameter Name="parameters" Type="Mono.CSharp.ParametersCompiled" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="parameters">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ParametersBlock (Mono.CSharp.ParametersCompiled parameters, Mono.CSharp.Location start);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.ParametersCompiled parameters, valuetype Mono.CSharp.Location start) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ParametersBlock.#ctor(Mono.CSharp.ParametersCompiled,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="Mono.CSharp.ParametersCompiled" />
        <Parameter Name="start" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="parameters">To be added.</param>
        <param name="start">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParametersBlock (Mono.CSharp.Block parent, Mono.CSharp.ParametersCompiled parameters, Mono.CSharp.Location start, Mono.CSharp.Block.Flags flags = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.Block parent, class Mono.CSharp.ParametersCompiled parameters, valuetype Mono.CSharp.Location start, valuetype Mono.CSharp.Block/Flags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ParametersBlock.#ctor(Mono.CSharp.Block,Mono.CSharp.ParametersCompiled,Mono.CSharp.Location,Mono.CSharp.Block.Flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="Mono.CSharp.Block" />
        <Parameter Name="parameters" Type="Mono.CSharp.ParametersCompiled" />
        <Parameter Name="start" Type="Mono.CSharp.Location" />
        <Parameter Name="flags" Type="Mono.CSharp.Block+Flags" />
      </Parameters>
      <Docs>
        <param name="parent">To be added.</param>
        <param name="parameters">To be added.</param>
        <param name="start">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckControlExit">
      <MemberSignature Language="C#" Value="public void CheckControlExit (Mono.CSharp.FlowAnalysisContext fc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckControlExit(class Mono.CSharp.FlowAnalysisContext fc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ParametersBlock.CheckControlExit(Mono.CSharp.FlowAnalysisContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fc" Type="Mono.CSharp.FlowAnalysisContext" />
      </Parameters>
      <Docs>
        <param name="fc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckControlExit">
      <MemberSignature Language="C#" Value="public virtual void CheckControlExit (Mono.CSharp.FlowAnalysisContext fc, Mono.CSharp.DefiniteAssignmentBitSet dat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckControlExit(class Mono.CSharp.FlowAnalysisContext fc, class Mono.CSharp.DefiniteAssignmentBitSet dat) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ParametersBlock.CheckControlExit(Mono.CSharp.FlowAnalysisContext,Mono.CSharp.DefiniteAssignmentBitSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fc" Type="Mono.CSharp.FlowAnalysisContext" />
        <Parameter Name="dat" Type="Mono.CSharp.DefiniteAssignmentBitSet" />
      </Parameters>
      <Docs>
        <param name="fc">To be added.</param>
        <param name="dat">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneTo">
      <MemberSignature Language="C#" Value="protected override void CloneTo (Mono.CSharp.CloneContext clonectx, Mono.CSharp.Statement t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneTo(class Mono.CSharp.CloneContext clonectx, class Mono.CSharp.Statement t) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ParametersBlock.CloneTo(Mono.CSharp.CloneContext,Mono.CSharp.Statement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clonectx" Type="Mono.CSharp.CloneContext" />
        <Parameter Name="t" Type="Mono.CSharp.Statement" />
      </Parameters>
      <Docs>
        <param name="clonectx">To be added.</param>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToAsyncTask">
      <MemberSignature Language="C#" Value="public Mono.CSharp.ParametersBlock ConvertToAsyncTask (Mono.CSharp.IMemberContext context, Mono.CSharp.TypeDefinition host, Mono.CSharp.ParametersCompiled parameters, Mono.CSharp.TypeSpec returnType, Mono.CSharp.TypeSpec delegateType, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.ParametersBlock ConvertToAsyncTask(class Mono.CSharp.IMemberContext context, class Mono.CSharp.TypeDefinition host, class Mono.CSharp.ParametersCompiled parameters, class Mono.CSharp.TypeSpec returnType, class Mono.CSharp.TypeSpec delegateType, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ParametersBlock.ConvertToAsyncTask(Mono.CSharp.IMemberContext,Mono.CSharp.TypeDefinition,Mono.CSharp.ParametersCompiled,Mono.CSharp.TypeSpec,Mono.CSharp.TypeSpec,Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ParametersBlock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Mono.CSharp.IMemberContext" />
        <Parameter Name="host" Type="Mono.CSharp.TypeDefinition" />
        <Parameter Name="parameters" Type="Mono.CSharp.ParametersCompiled" />
        <Parameter Name="returnType" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="delegateType" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="host">To be added.</param>
        <param name="parameters">To be added.</param>
        <param name="returnType">To be added.</param>
        <param name="delegateType">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToIterator">
      <MemberSignature Language="C#" Value="public Mono.CSharp.ToplevelBlock ConvertToIterator (Mono.CSharp.IMethodData method, Mono.CSharp.TypeDefinition host, Mono.CSharp.TypeSpec iterator_type, bool is_enumerable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.ToplevelBlock ConvertToIterator(class Mono.CSharp.IMethodData method, class Mono.CSharp.TypeDefinition host, class Mono.CSharp.TypeSpec iterator_type, bool is_enumerable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ParametersBlock.ConvertToIterator(Mono.CSharp.IMethodData,Mono.CSharp.TypeDefinition,Mono.CSharp.TypeSpec,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ToplevelBlock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="Mono.CSharp.IMethodData" />
        <Parameter Name="host" Type="Mono.CSharp.TypeDefinition" />
        <Parameter Name="iterator_type" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="is_enumerable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="method">To be added.</param>
        <param name="host">To be added.</param>
        <param name="iterator_type">To be added.</param>
        <param name="is_enumerable">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateExpressionTree">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.Expression CreateExpressionTree (Mono.CSharp.ResolveContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.Expression CreateExpressionTree(class Mono.CSharp.ResolveContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ParametersBlock.CreateExpressionTree(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoFlowAnalysis">
      <MemberSignature Language="C#" Value="protected override bool DoFlowAnalysis (Mono.CSharp.FlowAnalysisContext fc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool DoFlowAnalysis(class Mono.CSharp.FlowAnalysisContext fc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ParametersBlock.DoFlowAnalysis(Mono.CSharp.FlowAnalysisContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fc" Type="Mono.CSharp.FlowAnalysisContext" />
      </Parameters>
      <Docs>
        <param name="fc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public override void Emit (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Emit(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ParametersBlock.Emit(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitEmbedded">
      <MemberSignature Language="C#" Value="public void EmitEmbedded (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EmitEmbedded(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ParametersBlock.EmitEmbedded(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDebugSymbolScopeIndex">
      <MemberSignature Language="C#" Value="public override int GetDebugSymbolScopeIndex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDebugSymbolScopeIndex() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ParametersBlock.GetDebugSymbolScopeIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabel">
      <MemberSignature Language="C#" Value="public Mono.CSharp.LabeledStatement GetLabel (string name, Mono.CSharp.Block block);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.LabeledStatement GetLabel(string name, class Mono.CSharp.Block block) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ParametersBlock.GetLabel(System.String,Mono.CSharp.Block)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.LabeledStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="block" Type="Mono.CSharp.Block" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="block">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterInfo">
      <MemberSignature Language="C#" Value="public Mono.CSharp.ParametersBlock.ParameterInfo GetParameterInfo (Mono.CSharp.Parameter p);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.ParametersBlock/ParameterInfo GetParameterInfo(class Mono.CSharp.Parameter p) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ParametersBlock.GetParameterInfo(Mono.CSharp.Parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ParametersBlock+ParameterInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="Mono.CSharp.Parameter" />
      </Parameters>
      <Docs>
        <param name="p">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterReference">
      <MemberSignature Language="C#" Value="public Mono.CSharp.ParameterReference GetParameterReference (int index, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.ParameterReference GetParameterReference(int32 index, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ParametersBlock.GetParameterReference(System.Int32,Mono.CSharp.Location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ParameterReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasReferenceToStoreyForInstanceLambdas">
      <MemberSignature Language="C#" Value="public bool HasReferenceToStoreyForInstanceLambdas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasReferenceToStoreyForInstanceLambdas" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.ParametersBlock.HasReferenceToStoreyForInstanceLambdas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public bool IsAsync { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.ParametersBlock.IsAsync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExpressionTree">
      <MemberSignature Language="C#" Value="public bool IsExpressionTree { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExpressionTree" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.ParametersBlock.IsExpressionTree" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="labels">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.Dictionary&lt;string,object&gt; labels;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Generic.Dictionary`2&lt;string, object&gt; labels" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.ParametersBlock.labels" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="parameter_info">
      <MemberSignature Language="C#" Value="protected Mono.CSharp.ParametersBlock.ParameterInfo[] parameter_info;" />
      <MemberSignature Language="ILAsm" Value=".field family class Mono.CSharp.ParametersBlock/ParameterInfo[] parameter_info" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.ParametersBlock.parameter_info" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ParametersBlock+ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="parameters">
      <MemberSignature Language="C#" Value="protected Mono.CSharp.ParametersCompiled parameters;" />
      <MemberSignature Language="ILAsm" Value=".field family class Mono.CSharp.ParametersCompiled parameters" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.ParametersBlock.parameters" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ParametersCompiled</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public Mono.CSharp.ParametersCompiled Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.ParametersCompiled Parameters" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.ParametersBlock.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ParametersCompiled</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformClone">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Statement PerformClone (ref System.Collections.Generic.HashSet&lt;Mono.CSharp.LocalVariable&gt; undeclaredVariables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.Statement PerformClone(class System.Collections.Generic.HashSet`1&lt;class Mono.CSharp.LocalVariable&gt; undeclaredVariables) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ParametersBlock.PerformClone(System.Collections.Generic.HashSet{Mono.CSharp.LocalVariable}@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Statement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="undeclaredVariables" Type="System.Collections.Generic.HashSet&lt;Mono.CSharp.LocalVariable&gt;&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="undeclaredVariables">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessParameters">
      <MemberSignature Language="C#" Value="protected void ProcessParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ProcessParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ParametersBlock.ProcessParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public override bool Resolve (Mono.CSharp.BlockContext bc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Resolve(class Mono.CSharp.BlockContext bc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ParametersBlock.Resolve(Mono.CSharp.BlockContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bc" Type="Mono.CSharp.BlockContext" />
      </Parameters>
      <Docs>
        <param name="bc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="resolved">
      <MemberSignature Language="C#" Value="protected bool resolved;" />
      <MemberSignature Language="ILAsm" Value=".field family bool resolved" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.ParametersBlock.resolved" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolved">
      <MemberSignature Language="C#" Value="public bool Resolved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Resolved" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.ParametersBlock.Resolved" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="state_machine">
      <MemberSignature Language="C#" Value="protected Mono.CSharp.StateMachine state_machine;" />
      <MemberSignature Language="ILAsm" Value=".field family class Mono.CSharp.StateMachine state_machine" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.ParametersBlock.state_machine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.StateMachine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateMachine">
      <MemberSignature Language="C#" Value="public Mono.CSharp.StateMachine StateMachine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.StateMachine StateMachine" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.ParametersBlock.StateMachine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.StateMachine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemporaryLocalsCount">
      <MemberSignature Language="C#" Value="public int TemporaryLocalsCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TemporaryLocalsCount" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.ParametersBlock.TemporaryLocalsCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="top_block">
      <MemberSignature Language="C#" Value="protected Mono.CSharp.ToplevelBlock top_block;" />
      <MemberSignature Language="ILAsm" Value=".field family class Mono.CSharp.ToplevelBlock top_block" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.ParametersBlock.top_block" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ToplevelBlock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopBlock">
      <MemberSignature Language="C#" Value="public Mono.CSharp.ToplevelBlock TopBlock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.ToplevelBlock TopBlock" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.ParametersBlock.TopBlock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.ToplevelBlock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>