<Type Name="TypeParameterMutator" FullName="Mono.CSharp.TypeParameterMutator">
  <TypeSignature Language="C#" Value="public class TypeParameterMutator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeParameterMutator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.TypeParameterMutator" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeParameterMutator (Mono.CSharp.TypeParameters mvar, Mono.CSharp.TypeParameters var);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.TypeParameters mvar, class Mono.CSharp.TypeParameters var) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterMutator.#ctor(Mono.CSharp.TypeParameters,Mono.CSharp.TypeParameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mvar" Type="Mono.CSharp.TypeParameters" />
        <Parameter Name="var" Type="Mono.CSharp.TypeParameters" />
      </Parameters>
      <Docs>
        <param name="mvar">To be added.</param>
        <param name="var">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeParameterMutator (Mono.CSharp.TypeParameterSpec[] srcVar, Mono.CSharp.TypeParameters destVar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.TypeParameterSpec[] srcVar, class Mono.CSharp.TypeParameters destVar) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterMutator.#ctor(Mono.CSharp.TypeParameterSpec[],Mono.CSharp.TypeParameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="srcVar" Type="Mono.CSharp.TypeParameterSpec[]" />
        <Parameter Name="destVar" Type="Mono.CSharp.TypeParameters" />
      </Parameters>
      <Docs>
        <param name="srcVar">To be added.</param>
        <param name="destVar">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMemberDeclaringType">
      <MemberSignature Language="C#" Value="public static Mono.CSharp.TypeSpec GetMemberDeclaringType (Mono.CSharp.TypeSpec type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.CSharp.TypeSpec GetMemberDeclaringType(class Mono.CSharp.TypeSpec type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterMutator.GetMemberDeclaringType(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodTypeParameters">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeParameters MethodTypeParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.TypeParameters MethodTypeParameters" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.TypeParameterMutator.MethodTypeParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeParameters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mutate">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeParameterSpec Mutate (Mono.CSharp.TypeParameterSpec tp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.TypeParameterSpec Mutate(class Mono.CSharp.TypeParameterSpec tp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterMutator.Mutate(Mono.CSharp.TypeParameterSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeParameterSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tp" Type="Mono.CSharp.TypeParameterSpec" />
      </Parameters>
      <Docs>
        <param name="tp">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mutate">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeSpec Mutate (Mono.CSharp.TypeSpec ts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.TypeSpec Mutate(class Mono.CSharp.TypeSpec ts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterMutator.Mutate(Mono.CSharp.TypeSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ts" Type="Mono.CSharp.TypeSpec" />
      </Parameters>
      <Docs>
        <param name="ts">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mutate">
      <MemberSignature Language="C#" Value="public Mono.CSharp.TypeSpec[] Mutate (Mono.CSharp.TypeSpec[] targs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.TypeSpec[] Mutate(class Mono.CSharp.TypeSpec[] targs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.TypeParameterMutator.Mutate(Mono.CSharp.TypeSpec[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targs" Type="Mono.CSharp.TypeSpec[]" />
      </Parameters>
      <Docs>
        <param name="targs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>