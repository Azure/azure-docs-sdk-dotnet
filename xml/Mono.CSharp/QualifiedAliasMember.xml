<Type Name="QualifiedAliasMember" FullName="Mono.CSharp.QualifiedAliasMember">
  <TypeSignature Language="C#" Value="public class QualifiedAliasMember : Mono.CSharp.MemberAccess" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QualifiedAliasMember extends Mono.CSharp.MemberAccess" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.QualifiedAliasMember" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.MemberAccess</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QualifiedAliasMember (string alias, string identifier, Mono.CSharp.Location l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string alias, string identifier, valuetype Mono.CSharp.Location l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.QualifiedAliasMember.#ctor(System.String,System.String,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alias" Type="System.String" />
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="l" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="alias">To be added.</param>
        <param name="identifier">To be added.</param>
        <param name="l">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QualifiedAliasMember (string alias, string identifier, Mono.CSharp.TypeArguments targs, Mono.CSharp.Location l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string alias, string identifier, class Mono.CSharp.TypeArguments targs, valuetype Mono.CSharp.Location l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.QualifiedAliasMember.#ctor(System.String,System.String,Mono.CSharp.TypeArguments,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alias" Type="System.String" />
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="targs" Type="Mono.CSharp.TypeArguments" />
        <Parameter Name="l" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="alias">To be added.</param>
        <param name="identifier">To be added.</param>
        <param name="targs">To be added.</param>
        <param name="l">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QualifiedAliasMember (string alias, string identifier, int arity, Mono.CSharp.Location l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string alias, string identifier, int32 arity, valuetype Mono.CSharp.Location l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.QualifiedAliasMember.#ctor(System.String,System.String,System.Int32,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alias" Type="System.String" />
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="arity" Type="System.Int32" />
        <Parameter Name="l" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="alias">To be added.</param>
        <param name="identifier">To be added.</param>
        <param name="arity">To be added.</param>
        <param name="l">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override object Accept (Mono.CSharp.StructuralVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Accept(class Mono.CSharp.StructuralVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.QualifiedAliasMember.Accept(Mono.CSharp.StructuralVisitor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Mono.CSharp.StructuralVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Alias">
      <MemberSignature Language="C#" Value="public string Alias { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Alias" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.QualifiedAliasMember.Alias" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneTo">
      <MemberSignature Language="C#" Value="protected override void CloneTo (Mono.CSharp.CloneContext clonectx, Mono.CSharp.Expression t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneTo(class Mono.CSharp.CloneContext clonectx, class Mono.CSharp.Expression t) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.QualifiedAliasMember.CloneTo(Mono.CSharp.CloneContext,Mono.CSharp.Expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clonectx" Type="Mono.CSharp.CloneContext" />
        <Parameter Name="t" Type="Mono.CSharp.Expression" />
      </Parameters>
      <Docs>
        <param name="clonectx">To be added.</param>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateExpressionFromAlias">
      <MemberSignature Language="C#" Value="public Mono.CSharp.FullNamedExpression CreateExpressionFromAlias (Mono.CSharp.IMemberContext mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.CSharp.FullNamedExpression CreateExpressionFromAlias(class Mono.CSharp.IMemberContext mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.QualifiedAliasMember.CreateExpressionFromAlias(Mono.CSharp.IMemberContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.FullNamedExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mc" Type="Mono.CSharp.IMemberContext" />
      </Parameters>
      <Docs>
        <param name="mc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoResolve">
      <MemberSignature Language="C#" Value="protected override Mono.CSharp.Expression DoResolve (Mono.CSharp.ResolveContext rc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Mono.CSharp.Expression DoResolve(class Mono.CSharp.ResolveContext rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.QualifiedAliasMember.DoResolve(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureForError">
      <MemberSignature Language="C#" Value="public override string GetSignatureForError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetSignatureForError() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.QualifiedAliasMember.GetSignatureForError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalAlias">
      <MemberSignature Language="C#" Value="public static readonly string GlobalAlias;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string GlobalAlias" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.QualifiedAliasMember.GlobalAlias" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasConditionalAccess">
      <MemberSignature Language="C#" Value="public override bool HasConditionalAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool HasConditionalAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.QualifiedAliasMember.HasConditionalAccess" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupNameExpression">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.Expression LookupNameExpression (Mono.CSharp.ResolveContext rc, Mono.CSharp.Expression.MemberLookupRestrictions restrictions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.Expression LookupNameExpression(class Mono.CSharp.ResolveContext rc, valuetype Mono.CSharp.Expression/MemberLookupRestrictions restrictions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.QualifiedAliasMember.LookupNameExpression(Mono.CSharp.ResolveContext,Mono.CSharp.Expression.MemberLookupRestrictions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="restrictions" Type="Mono.CSharp.Expression+MemberLookupRestrictions" />
      </Parameters>
      <Docs>
        <param name="rc">To be added.</param>
        <param name="restrictions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsTypeOrNamespace">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.FullNamedExpression ResolveAsTypeOrNamespace (Mono.CSharp.IMemberContext mc, bool allowUnboundTypeArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.FullNamedExpression ResolveAsTypeOrNamespace(class Mono.CSharp.IMemberContext mc, bool allowUnboundTypeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.QualifiedAliasMember.ResolveAsTypeOrNamespace(Mono.CSharp.IMemberContext,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.FullNamedExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mc" Type="Mono.CSharp.IMemberContext" />
        <Parameter Name="allowUnboundTypeArguments" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mc">To be added.</param>
        <param name="allowUnboundTypeArguments">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>