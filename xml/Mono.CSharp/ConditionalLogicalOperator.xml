<Type Name="ConditionalLogicalOperator" FullName="Mono.CSharp.ConditionalLogicalOperator">
  <TypeSignature Language="C#" Value="public class ConditionalLogicalOperator : Mono.CSharp.UserOperatorCall" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConditionalLogicalOperator extends Mono.CSharp.UserOperatorCall" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.ConditionalLogicalOperator" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.UserOperatorCall</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionalLogicalOperator (Mono.CSharp.MethodSpec oper, Mono.CSharp.Arguments arguments, Func&lt;Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.Expression&gt; expr_tree, bool is_and, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.MethodSpec oper, class Mono.CSharp.Arguments arguments, class System.Func`3&lt;class Mono.CSharp.ResolveContext, class Mono.CSharp.Expression, class Mono.CSharp.Expression&gt; expr_tree, bool is_and, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ConditionalLogicalOperator.#ctor(Mono.CSharp.MethodSpec,Mono.CSharp.Arguments,System.Func{Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.Expression},System.Boolean,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="oper" Type="Mono.CSharp.MethodSpec" />
        <Parameter Name="arguments" Type="Mono.CSharp.Arguments" />
        <Parameter Name="expr_tree" Type="System.Func&lt;Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.Expression&gt;" />
        <Parameter Name="is_and" Type="System.Boolean" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="oper">To be added.</param>
        <param name="arguments">To be added.</param>
        <param name="expr_tree">To be added.</param>
        <param name="is_and">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoResolve">
      <MemberSignature Language="C#" Value="protected override Mono.CSharp.Expression DoResolve (Mono.CSharp.ResolveContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Mono.CSharp.Expression DoResolve(class Mono.CSharp.ResolveContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ConditionalLogicalOperator.DoResolve(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emit">
      <MemberSignature Language="C#" Value="public override void Emit (Mono.CSharp.EmitContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Emit(class Mono.CSharp.EmitContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.ConditionalLogicalOperator.Emit(Mono.CSharp.EmitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.EmitContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>