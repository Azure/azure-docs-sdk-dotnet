<Type Name="MockableElasticSubscriptionResource" FullName="Azure.ResourceManager.Elastic.Mocking.MockableElasticSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableElasticSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableElasticSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Elastic.Mocking.MockableElasticSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableElasticSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableElasticSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Elastic</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableElasticSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Elastic.Mocking.MockableElasticSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Elastic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Elastic.Mocking.MockableElasticSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticUserApiKeyResult&gt; GetApiKey (Azure.ResourceManager.Elastic.Models.ElasticUserEmailId body = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Elastic.Models.ElasticUserApiKeyResult&gt; GetApiKey(class Azure.ResourceManager.Elastic.Models.ElasticUserEmailId body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Elastic.Mocking.MockableElasticSubscriptionResource.GetApiKey(Azure.ResourceManager.Elastic.Models.ElasticUserEmailId,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiKey (Optional body As ElasticUserEmailId = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ElasticUserApiKeyResult)" />
      <MemberSignature Language="F#" Value="abstract member GetApiKey : Azure.ResourceManager.Elastic.Models.ElasticUserEmailId * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticUserApiKeyResult&gt;&#xA;override this.GetApiKey : Azure.ResourceManager.Elastic.Models.ElasticUserEmailId * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticUserApiKeyResult&gt;" Usage="mockableElasticSubscriptionResource.GetApiKey (body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Elastic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticUserApiKeyResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="Azure.ResourceManager.Elastic.Models.ElasticUserEmailId" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="body"> Email Id parameter of the User Organization, of which the API Key must be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetch User API Key from internal database, if it was generated and stored while creating the Elasticsearch Organization.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/getOrganizationApiKey</description></item><item><term>Operation Id</term><description>Organizations_GetApiKey</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticUserApiKeyResult&gt;&gt; GetApiKeyAsync (Azure.ResourceManager.Elastic.Models.ElasticUserEmailId body = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Elastic.Models.ElasticUserApiKeyResult&gt;&gt; GetApiKeyAsync(class Azure.ResourceManager.Elastic.Models.ElasticUserEmailId body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Elastic.Mocking.MockableElasticSubscriptionResource.GetApiKeyAsync(Azure.ResourceManager.Elastic.Models.ElasticUserEmailId,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiKeyAsync (Optional body As ElasticUserEmailId = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ElasticUserApiKeyResult))" />
      <MemberSignature Language="F#" Value="abstract member GetApiKeyAsync : Azure.ResourceManager.Elastic.Models.ElasticUserEmailId * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticUserApiKeyResult&gt;&gt;&#xA;override this.GetApiKeyAsync : Azure.ResourceManager.Elastic.Models.ElasticUserEmailId * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticUserApiKeyResult&gt;&gt;" Usage="mockableElasticSubscriptionResource.GetApiKeyAsync (body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Elastic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticUserApiKeyResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="Azure.ResourceManager.Elastic.Models.ElasticUserEmailId" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="body"> Email Id parameter of the User Organization, of which the API Key must be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetch User API Key from internal database, if it was generated and stored while creating the Elasticsearch Organization.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/getOrganizationApiKey</description></item><item><term>Operation Id</term><description>Organizations_GetApiKey</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElasticMonitors">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Elastic.ElasticMonitorResource&gt; GetElasticMonitors (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Elastic.ElasticMonitorResource&gt; GetElasticMonitors(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Elastic.Mocking.MockableElasticSubscriptionResource.GetElasticMonitors(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElasticMonitors (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ElasticMonitorResource)" />
      <MemberSignature Language="F#" Value="abstract member GetElasticMonitors : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Elastic.ElasticMonitorResource&gt;&#xA;override this.GetElasticMonitors : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Elastic.ElasticMonitorResource&gt;" Usage="mockableElasticSubscriptionResource.GetElasticMonitors cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Elastic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Elastic.ElasticMonitorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all monitors under the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/monitors</description></item><item><term>Operation Id</term><description>Monitors_List</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Elastic.ElasticMonitorResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Elastic.ElasticMonitorResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElasticMonitorsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Elastic.ElasticMonitorResource&gt; GetElasticMonitorsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Elastic.ElasticMonitorResource&gt; GetElasticMonitorsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Elastic.Mocking.MockableElasticSubscriptionResource.GetElasticMonitorsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElasticMonitorsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ElasticMonitorResource)" />
      <MemberSignature Language="F#" Value="abstract member GetElasticMonitorsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Elastic.ElasticMonitorResource&gt;&#xA;override this.GetElasticMonitorsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Elastic.ElasticMonitorResource&gt;" Usage="mockableElasticSubscriptionResource.GetElasticMonitorsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Elastic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Elastic.ElasticMonitorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all monitors under the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/monitors</description></item><item><term>Operation Id</term><description>Monitors_List</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Elastic.ElasticMonitorResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Elastic.ElasticMonitorResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElasticToAzureSubscriptionMapping">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticOrganizationToAzureSubscriptionMappingResult&gt; GetElasticToAzureSubscriptionMapping (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Elastic.Models.ElasticOrganizationToAzureSubscriptionMappingResult&gt; GetElasticToAzureSubscriptionMapping(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Elastic.Mocking.MockableElasticSubscriptionResource.GetElasticToAzureSubscriptionMapping(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElasticToAzureSubscriptionMapping (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ElasticOrganizationToAzureSubscriptionMappingResult)" />
      <MemberSignature Language="F#" Value="abstract member GetElasticToAzureSubscriptionMapping : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticOrganizationToAzureSubscriptionMappingResult&gt;&#xA;override this.GetElasticToAzureSubscriptionMapping : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticOrganizationToAzureSubscriptionMappingResult&gt;" Usage="mockableElasticSubscriptionResource.GetElasticToAzureSubscriptionMapping cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Elastic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticOrganizationToAzureSubscriptionMappingResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get Elastic Organization To Azure Subscription Mapping details for the logged-in user.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/getElasticOrganizationToAzureSubscriptionMapping</description></item><item><term>Operation Id</term><description>Organizations_GetElasticToAzureSubscriptionMapping</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElasticToAzureSubscriptionMappingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticOrganizationToAzureSubscriptionMappingResult&gt;&gt; GetElasticToAzureSubscriptionMappingAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Elastic.Models.ElasticOrganizationToAzureSubscriptionMappingResult&gt;&gt; GetElasticToAzureSubscriptionMappingAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Elastic.Mocking.MockableElasticSubscriptionResource.GetElasticToAzureSubscriptionMappingAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElasticToAzureSubscriptionMappingAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ElasticOrganizationToAzureSubscriptionMappingResult))" />
      <MemberSignature Language="F#" Value="abstract member GetElasticToAzureSubscriptionMappingAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticOrganizationToAzureSubscriptionMappingResult&gt;&gt;&#xA;override this.GetElasticToAzureSubscriptionMappingAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticOrganizationToAzureSubscriptionMappingResult&gt;&gt;" Usage="mockableElasticSubscriptionResource.GetElasticToAzureSubscriptionMappingAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Elastic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticOrganizationToAzureSubscriptionMappingResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get Elastic Organization To Azure Subscription Mapping details for the logged-in user.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/getElasticOrganizationToAzureSubscriptionMapping</description></item><item><term>Operation Id</term><description>Organizations_GetElasticToAzureSubscriptionMapping</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElasticVersions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Elastic.Models.ElasticVersion&gt; GetElasticVersions (string region, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Elastic.Models.ElasticVersion&gt; GetElasticVersions(string region, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Elastic.Mocking.MockableElasticSubscriptionResource.GetElasticVersions(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElasticVersions (region As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ElasticVersion)" />
      <MemberSignature Language="F#" Value="abstract member GetElasticVersions : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Elastic.Models.ElasticVersion&gt;&#xA;override this.GetElasticVersions : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Elastic.Models.ElasticVersion&gt;" Usage="mockableElasticSubscriptionResource.GetElasticVersions (region, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Elastic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Elastic.Models.ElasticVersion&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="region"> Region where elastic deployment will take place. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of available versions for a region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/elasticVersions</description></item><item><term>Operation Id</term><description>ElasticVersions_List</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Elastic.Models.ElasticVersion" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="region" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetElasticVersionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Elastic.Models.ElasticVersion&gt; GetElasticVersionsAsync (string region, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Elastic.Models.ElasticVersion&gt; GetElasticVersionsAsync(string region, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Elastic.Mocking.MockableElasticSubscriptionResource.GetElasticVersionsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElasticVersionsAsync (region As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ElasticVersion)" />
      <MemberSignature Language="F#" Value="abstract member GetElasticVersionsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Elastic.Models.ElasticVersion&gt;&#xA;override this.GetElasticVersionsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Elastic.Models.ElasticVersion&gt;" Usage="mockableElasticSubscriptionResource.GetElasticVersionsAsync (region, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Elastic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Elastic.Models.ElasticVersion&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="region"> Region where elastic deployment will take place. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of available versions for a region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/elasticVersions</description></item><item><term>Operation Id</term><description>ElasticVersions_List</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Elastic.Models.ElasticVersion" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="region" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
