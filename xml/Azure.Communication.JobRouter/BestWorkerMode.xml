<Type Name="BestWorkerMode" FullName="Azure.Communication.JobRouter.BestWorkerMode">
  <TypeSignature Language="C#" Value="public class BestWorkerMode : Azure.Communication.JobRouter.DistributionMode" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BestWorkerMode extends Azure.Communication.JobRouter.DistributionMode" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.Communication.JobRouter.BestWorkerMode" />
  <TypeSignature Language="VB.NET" Value="Public Class BestWorkerMode&#xA;Inherits DistributionMode" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type BestWorkerMode = class&#xA;    inherit DistributionMode" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class BestWorkerMode : Azure.Communication.JobRouter.DistributionMode, System.ClientModel.Primitives.IJsonModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BestWorkerMode extends Azure.Communication.JobRouter.DistributionMode implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.Communication.JobRouter.BestWorkerMode&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.Communication.JobRouter.BestWorkerMode&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class BestWorkerMode&#xA;Inherits DistributionMode&#xA;Implements IJsonModel(Of BestWorkerMode), IPersistableModel(Of BestWorkerMode)" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type BestWorkerMode = class&#xA;    inherit DistributionMode&#xA;    interface IJsonModel&lt;BestWorkerMode&gt;&#xA;    interface IPersistableModel&lt;BestWorkerMode&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Communication.JobRouter.DistributionMode</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Jobs are distributed to the worker with the strongest abilities available. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BestWorkerMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.BestWorkerMode.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of BestWorkerModePolicy with default scoring rule.
            Default scoring formula that uses the number of job labels that the worker labels match, as well as the number of label selectors the worker labels match and/or exceed
            using a logistic function (https://en.wikipedia.org/wiki/Logistic_function).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScoringRule">
      <MemberSignature Language="C#" Value="public Azure.Communication.JobRouter.RouterRule ScoringRule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Communication.JobRouter.RouterRule ScoringRule" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.JobRouter.BestWorkerMode.ScoringRule" />
      <MemberSignature Language="VB.NET" Value="Public Property ScoringRule As RouterRule" />
      <MemberSignature Language="F#" Value="member this.ScoringRule : Azure.Communication.JobRouter.RouterRule with get, set" Usage="Azure.Communication.JobRouter.BestWorkerMode.ScoringRule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.RouterRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             A rule of one of the following types:
            
             StaticRule:  A rule
             providing static rules that always return the same result, regardless of
             input.
             DirectMapRule:  A rule that return the same labels as the input
             labels.
             ExpressionRule: A rule providing inline expression
             rules.
             FunctionRule: A rule providing a binding to an HTTP Triggered Azure
             Function.
             WebhookRule: A rule providing a binding to a webserver following
             OAuth2.0 authentication protocol.
             Please note <see cref="T:Azure.Communication.JobRouter.RouterRule" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
             The available derived classes include <see cref="T:Azure.Communication.JobRouter.DirectMapRouterRule" />, <see cref="T:Azure.Communication.JobRouter.ExpressionRouterRule" />, <see cref="T:Azure.Communication.JobRouter.FunctionRouterRule" />, <see cref="T:Azure.Communication.JobRouter.StaticRouterRule" /> and <see cref="T:Azure.Communication.JobRouter.WebhookRouterRule" />.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScoringRuleOptions">
      <MemberSignature Language="C#" Value="public Azure.Communication.JobRouter.ScoringRuleOptions ScoringRuleOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Communication.JobRouter.ScoringRuleOptions ScoringRuleOptions" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.JobRouter.BestWorkerMode.ScoringRuleOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ScoringRuleOptions As ScoringRuleOptions" />
      <MemberSignature Language="F#" Value="member this.ScoringRuleOptions : Azure.Communication.JobRouter.ScoringRuleOptions with get, set" Usage="Azure.Communication.JobRouter.BestWorkerMode.ScoringRuleOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.ScoringRuleOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Encapsulates all options that can be passed as parameters for scoring rule with
            BestWorkerMode
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.Communication.JobRouter.BestWorkerMode IJsonModel&lt;BestWorkerMode&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.Communication.JobRouter.BestWorkerMode System.ClientModel.Primitives.IJsonModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.BestWorkerMode.System#ClientModel#Primitives#IJsonModel&lt;Azure#Communication#JobRouter#BestWorkerMode&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As BestWorkerMode Implements IJsonModel(Of BestWorkerMode).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Communication.JobRouter.BestWorkerMode&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Communication.JobRouter.BestWorkerMode" Usage="bestWorkerMode.System.ClientModel.Primitives.IJsonModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.BestWorkerMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;BestWorkerMode&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.BestWorkerMode.System#ClientModel#Primitives#IJsonModel&lt;Azure#Communication#JobRouter#BestWorkerMode&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of BestWorkerMode).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="bestWorkerMode.System.ClientModel.Primitives.IJsonModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.Communication.JobRouter.BestWorkerMode IPersistableModel&lt;BestWorkerMode&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.Communication.JobRouter.BestWorkerMode System.ClientModel.Primitives.IPersistableModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.BestWorkerMode.System#ClientModel#Primitives#IPersistableModel&lt;Azure#Communication#JobRouter#BestWorkerMode&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As BestWorkerMode Implements IPersistableModel(Of BestWorkerMode).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Communication.JobRouter.BestWorkerMode&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Communication.JobRouter.BestWorkerMode" Usage="bestWorkerMode.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.BestWorkerMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;BestWorkerMode&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.BestWorkerMode.System#ClientModel#Primitives#IPersistableModel&lt;Azure#Communication#JobRouter#BestWorkerMode&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of BestWorkerMode).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="bestWorkerMode.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;BestWorkerMode&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.BestWorkerMode.System#ClientModel#Primitives#IPersistableModel&lt;Azure#Communication#JobRouter#BestWorkerMode&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of BestWorkerMode).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="bestWorkerMode.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Communication.JobRouter.BestWorkerMode&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
