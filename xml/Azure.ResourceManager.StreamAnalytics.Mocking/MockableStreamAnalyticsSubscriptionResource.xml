<Type Name="MockableStreamAnalyticsSubscriptionResource" FullName="Azure.ResourceManager.StreamAnalytics.Mocking.MockableStreamAnalyticsSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableStreamAnalyticsSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableStreamAnalyticsSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.StreamAnalytics.Mocking.MockableStreamAnalyticsSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableStreamAnalyticsSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableStreamAnalyticsSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.StreamAnalytics</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableStreamAnalyticsSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StreamAnalytics.Mocking.MockableStreamAnalyticsSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StreamAnalytics</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.StreamAnalytics.Mocking.MockableStreamAnalyticsSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuerySubscription">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsQueryCompilationResult&gt; CompileQuerySubscription (Azure.Core.AzureLocation location, Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsCompileQuery compileQuery, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsQueryCompilationResult&gt; CompileQuerySubscription(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsCompileQuery compileQuery, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StreamAnalytics.Mocking.MockableStreamAnalyticsSubscriptionResource.CompileQuerySubscription(Azure.Core.AzureLocation,Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsCompileQuery,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileQuerySubscription (location As AzureLocation, compileQuery As StreamAnalyticsCompileQuery, Optional cancellationToken As CancellationToken = Nothing) As Response(Of StreamAnalyticsQueryCompilationResult)" />
      <MemberSignature Language="F#" Value="abstract member CompileQuerySubscription : Azure.Core.AzureLocation * Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsCompileQuery * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsQueryCompilationResult&gt;&#xA;override this.CompileQuerySubscription : Azure.Core.AzureLocation * Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsCompileQuery * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsQueryCompilationResult&gt;" Usage="mockableStreamAnalyticsSubscriptionResource.CompileQuerySubscription (location, compileQuery, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StreamAnalytics</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsQueryCompilationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="compileQuery" Type="Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsCompileQuery" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The region to which the request is sent. You can find out which regions Azure Stream Analytics is supported in here: https://azure.microsoft.com/en-us/regions/. </param>
        <param name="compileQuery"> The query compilation object which defines the input, output, and transformation for the query compilation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Compile the Stream Analytics query.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/locations/{location}/compileQuery</description></item><item><term>Operation Id</term><description>Subscriptions_CompileQuery</description></item><item><term>Default Api Version</term><description>2021-10-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="compileQuery" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CompileQuerySubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsQueryCompilationResult&gt;&gt; CompileQuerySubscriptionAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsCompileQuery compileQuery, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsQueryCompilationResult&gt;&gt; CompileQuerySubscriptionAsync(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsCompileQuery compileQuery, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StreamAnalytics.Mocking.MockableStreamAnalyticsSubscriptionResource.CompileQuerySubscriptionAsync(Azure.Core.AzureLocation,Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsCompileQuery,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileQuerySubscriptionAsync (location As AzureLocation, compileQuery As StreamAnalyticsCompileQuery, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of StreamAnalyticsQueryCompilationResult))" />
      <MemberSignature Language="F#" Value="abstract member CompileQuerySubscriptionAsync : Azure.Core.AzureLocation * Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsCompileQuery * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsQueryCompilationResult&gt;&gt;&#xA;override this.CompileQuerySubscriptionAsync : Azure.Core.AzureLocation * Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsCompileQuery * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsQueryCompilationResult&gt;&gt;" Usage="mockableStreamAnalyticsSubscriptionResource.CompileQuerySubscriptionAsync (location, compileQuery, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StreamAnalytics</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsQueryCompilationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="compileQuery" Type="Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsCompileQuery" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The region to which the request is sent. You can find out which regions Azure Stream Analytics is supported in here: https://azure.microsoft.com/en-us/regions/. </param>
        <param name="compileQuery"> The query compilation object which defines the input, output, and transformation for the query compilation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Compile the Stream Analytics query.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/locations/{location}/compileQuery</description></item><item><term>Operation Id</term><description>Subscriptions_CompileQuery</description></item><item><term>Default Api Version</term><description>2021-10-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="compileQuery" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuotasSubscriptions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSubscriptionQuota&gt; GetQuotasSubscriptions (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSubscriptionQuota&gt; GetQuotasSubscriptions(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StreamAnalytics.Mocking.MockableStreamAnalyticsSubscriptionResource.GetQuotasSubscriptions(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQuotasSubscriptions (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of StreamAnalyticsSubscriptionQuota)" />
      <MemberSignature Language="F#" Value="abstract member GetQuotasSubscriptions : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSubscriptionQuota&gt;&#xA;override this.GetQuotasSubscriptions : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSubscriptionQuota&gt;" Usage="mockableStreamAnalyticsSubscriptionResource.GetQuotasSubscriptions (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StreamAnalytics</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSubscriptionQuota&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The region to which the request is sent. You can find out which regions Azure Stream Analytics is supported in here: https://azure.microsoft.com/en-us/regions/. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves the subscription's current quota information in a particular region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/locations/{location}/quotas</description></item><item><term>Operation Id</term><description>Subscriptions_ListQuotas</description></item><item><term>Default Api Version</term><description>2021-10-01-preview</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSubscriptionQuota" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQuotasSubscriptionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSubscriptionQuota&gt; GetQuotasSubscriptionsAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSubscriptionQuota&gt; GetQuotasSubscriptionsAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StreamAnalytics.Mocking.MockableStreamAnalyticsSubscriptionResource.GetQuotasSubscriptionsAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQuotasSubscriptionsAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of StreamAnalyticsSubscriptionQuota)" />
      <MemberSignature Language="F#" Value="abstract member GetQuotasSubscriptionsAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSubscriptionQuota&gt;&#xA;override this.GetQuotasSubscriptionsAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSubscriptionQuota&gt;" Usage="mockableStreamAnalyticsSubscriptionResource.GetQuotasSubscriptionsAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StreamAnalytics</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSubscriptionQuota&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The region to which the request is sent. You can find out which regions Azure Stream Analytics is supported in here: https://azure.microsoft.com/en-us/regions/. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves the subscription's current quota information in a particular region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/locations/{location}/quotas</description></item><item><term>Operation Id</term><description>Subscriptions_ListQuotas</description></item><item><term>Default Api Version</term><description>2021-10-01-preview</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSubscriptionQuota" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStreamAnalyticsClusters">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.StreamAnalytics.StreamAnalyticsClusterResource&gt; GetStreamAnalyticsClusters (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.StreamAnalytics.StreamAnalyticsClusterResource&gt; GetStreamAnalyticsClusters(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StreamAnalytics.Mocking.MockableStreamAnalyticsSubscriptionResource.GetStreamAnalyticsClusters(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStreamAnalyticsClusters (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of StreamAnalyticsClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetStreamAnalyticsClusters : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.StreamAnalytics.StreamAnalyticsClusterResource&gt;&#xA;override this.GetStreamAnalyticsClusters : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.StreamAnalytics.StreamAnalyticsClusterResource&gt;" Usage="mockableStreamAnalyticsSubscriptionResource.GetStreamAnalyticsClusters cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StreamAnalytics</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.StreamAnalytics.StreamAnalyticsClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the clusters in the given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/clusters</description></item><item><term>Operation Id</term><description>Clusters_ListBySubscription</description></item><item><term>Default Api Version</term><description>2020-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.StreamAnalytics.StreamAnalyticsClusterResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.StreamAnalytics.StreamAnalyticsClusterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStreamAnalyticsClustersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.StreamAnalytics.StreamAnalyticsClusterResource&gt; GetStreamAnalyticsClustersAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.StreamAnalytics.StreamAnalyticsClusterResource&gt; GetStreamAnalyticsClustersAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StreamAnalytics.Mocking.MockableStreamAnalyticsSubscriptionResource.GetStreamAnalyticsClustersAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStreamAnalyticsClustersAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of StreamAnalyticsClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetStreamAnalyticsClustersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.StreamAnalytics.StreamAnalyticsClusterResource&gt;&#xA;override this.GetStreamAnalyticsClustersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.StreamAnalytics.StreamAnalyticsClusterResource&gt;" Usage="mockableStreamAnalyticsSubscriptionResource.GetStreamAnalyticsClustersAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StreamAnalytics</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.StreamAnalytics.StreamAnalyticsClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the clusters in the given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/clusters</description></item><item><term>Operation Id</term><description>Clusters_ListBySubscription</description></item><item><term>Default Api Version</term><description>2020-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.StreamAnalytics.StreamAnalyticsClusterResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.StreamAnalytics.StreamAnalyticsClusterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStreamingJobs">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.StreamAnalytics.StreamingJobResource&gt; GetStreamingJobs (string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.StreamAnalytics.StreamingJobResource&gt; GetStreamingJobs(string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StreamAnalytics.Mocking.MockableStreamAnalyticsSubscriptionResource.GetStreamingJobs(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStreamingJobs (Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of StreamingJobResource)" />
      <MemberSignature Language="F#" Value="abstract member GetStreamingJobs : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.StreamAnalytics.StreamingJobResource&gt;&#xA;override this.GetStreamingJobs : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.StreamAnalytics.StreamingJobResource&gt;" Usage="mockableStreamAnalyticsSubscriptionResource.GetStreamingJobs (expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StreamAnalytics</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.StreamAnalytics.StreamingJobResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expand"> The $expand OData query parameter. This is a comma-separated list of additional streaming job properties to include in the response, beyond the default set returned when this parameter is absent. The default set is all streaming job properties other than 'inputs', 'transformation', 'outputs', and 'functions'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the streaming jobs in the given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/streamingjobs</description></item><item><term>Operation Id</term><description>StreamingJobs_List</description></item><item><term>Default Api Version</term><description>2021-10-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.StreamAnalytics.StreamingJobResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.StreamAnalytics.StreamingJobResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStreamingJobsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.StreamAnalytics.StreamingJobResource&gt; GetStreamingJobsAsync (string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.StreamAnalytics.StreamingJobResource&gt; GetStreamingJobsAsync(string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StreamAnalytics.Mocking.MockableStreamAnalyticsSubscriptionResource.GetStreamingJobsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStreamingJobsAsync (Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of StreamingJobResource)" />
      <MemberSignature Language="F#" Value="abstract member GetStreamingJobsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.StreamAnalytics.StreamingJobResource&gt;&#xA;override this.GetStreamingJobsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.StreamAnalytics.StreamingJobResource&gt;" Usage="mockableStreamAnalyticsSubscriptionResource.GetStreamingJobsAsync (expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StreamAnalytics</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.StreamAnalytics.StreamingJobResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expand"> The $expand OData query parameter. This is a comma-separated list of additional streaming job properties to include in the response, beyond the default set returned when this parameter is absent. The default set is all streaming job properties other than 'inputs', 'transformation', 'outputs', and 'functions'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the streaming jobs in the given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/streamingjobs</description></item><item><term>Operation Id</term><description>StreamingJobs_List</description></item><item><term>Default Api Version</term><description>2021-10-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.StreamAnalytics.StreamingJobResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.StreamAnalytics.StreamingJobResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SampleInputSubscription">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSampleInputResult&gt; SampleInputSubscription (Azure.WaitUntil waitUntil, Azure.Core.AzureLocation location, Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSampleInputContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSampleInputResult&gt; SampleInputSubscription(valuetype Azure.WaitUntil waitUntil, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSampleInputContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StreamAnalytics.Mocking.MockableStreamAnalyticsSubscriptionResource.SampleInputSubscription(Azure.WaitUntil,Azure.Core.AzureLocation,Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSampleInputContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SampleInputSubscription (waitUntil As WaitUntil, location As AzureLocation, content As StreamAnalyticsSampleInputContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of StreamAnalyticsSampleInputResult)" />
      <MemberSignature Language="F#" Value="abstract member SampleInputSubscription : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSampleInputContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSampleInputResult&gt;&#xA;override this.SampleInputSubscription : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSampleInputContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSampleInputResult&gt;" Usage="mockableStreamAnalyticsSubscriptionResource.SampleInputSubscription (waitUntil, location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StreamAnalytics</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSampleInputResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSampleInputContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="location"> The region to which the request is sent. You can find out which regions Azure Stream Analytics is supported in here: https://azure.microsoft.com/en-us/regions/. </param>
        <param name="content"> Defines the necessary parameters for sampling the Stream Analytics input data. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Sample the Stream Analytics input data.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/locations/{location}/sampleInput</description></item><item><term>Operation Id</term><description>Subscriptions_SampleInput</description></item><item><term>Default Api Version</term><description>2021-10-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SampleInputSubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSampleInputResult&gt;&gt; SampleInputSubscriptionAsync (Azure.WaitUntil waitUntil, Azure.Core.AzureLocation location, Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSampleInputContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSampleInputResult&gt;&gt; SampleInputSubscriptionAsync(valuetype Azure.WaitUntil waitUntil, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSampleInputContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StreamAnalytics.Mocking.MockableStreamAnalyticsSubscriptionResource.SampleInputSubscriptionAsync(Azure.WaitUntil,Azure.Core.AzureLocation,Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSampleInputContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SampleInputSubscriptionAsync (waitUntil As WaitUntil, location As AzureLocation, content As StreamAnalyticsSampleInputContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of StreamAnalyticsSampleInputResult))" />
      <MemberSignature Language="F#" Value="abstract member SampleInputSubscriptionAsync : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSampleInputContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSampleInputResult&gt;&gt;&#xA;override this.SampleInputSubscriptionAsync : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSampleInputContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSampleInputResult&gt;&gt;" Usage="mockableStreamAnalyticsSubscriptionResource.SampleInputSubscriptionAsync (waitUntil, location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StreamAnalytics</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSampleInputResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsSampleInputContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="location"> The region to which the request is sent. You can find out which regions Azure Stream Analytics is supported in here: https://azure.microsoft.com/en-us/regions/. </param>
        <param name="content"> Defines the necessary parameters for sampling the Stream Analytics input data. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Sample the Stream Analytics input data.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/locations/{location}/sampleInput</description></item><item><term>Operation Id</term><description>Subscriptions_SampleInput</description></item><item><term>Default Api Version</term><description>2021-10-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TestInputSubscription">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestDatasourceResult&gt; TestInputSubscription (Azure.WaitUntil waitUntil, Azure.Core.AzureLocation location, Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestDatasourceResult&gt; TestInputSubscription(valuetype Azure.WaitUntil waitUntil, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StreamAnalytics.Mocking.MockableStreamAnalyticsSubscriptionResource.TestInputSubscription(Azure.WaitUntil,Azure.Core.AzureLocation,Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TestInputSubscription (waitUntil As WaitUntil, location As AzureLocation, content As StreamAnalyticsTestContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of StreamAnalyticsTestDatasourceResult)" />
      <MemberSignature Language="F#" Value="abstract member TestInputSubscription : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestDatasourceResult&gt;&#xA;override this.TestInputSubscription : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestDatasourceResult&gt;" Usage="mockableStreamAnalyticsSubscriptionResource.TestInputSubscription (waitUntil, location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StreamAnalytics</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestDatasourceResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="location"> The region to which the request is sent. You can find out which regions Azure Stream Analytics is supported in here: https://azure.microsoft.com/en-us/regions/. </param>
        <param name="content"> Defines the necessary parameters for testing the Stream Analytics input. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Test the Stream Analytics input.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/locations/{location}/testInput</description></item><item><term>Operation Id</term><description>Subscriptions_TestInput</description></item><item><term>Default Api Version</term><description>2021-10-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TestInputSubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestDatasourceResult&gt;&gt; TestInputSubscriptionAsync (Azure.WaitUntil waitUntil, Azure.Core.AzureLocation location, Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestDatasourceResult&gt;&gt; TestInputSubscriptionAsync(valuetype Azure.WaitUntil waitUntil, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StreamAnalytics.Mocking.MockableStreamAnalyticsSubscriptionResource.TestInputSubscriptionAsync(Azure.WaitUntil,Azure.Core.AzureLocation,Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TestInputSubscriptionAsync (waitUntil As WaitUntil, location As AzureLocation, content As StreamAnalyticsTestContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of StreamAnalyticsTestDatasourceResult))" />
      <MemberSignature Language="F#" Value="abstract member TestInputSubscriptionAsync : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestDatasourceResult&gt;&gt;&#xA;override this.TestInputSubscriptionAsync : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestDatasourceResult&gt;&gt;" Usage="mockableStreamAnalyticsSubscriptionResource.TestInputSubscriptionAsync (waitUntil, location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StreamAnalytics</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestDatasourceResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="location"> The region to which the request is sent. You can find out which regions Azure Stream Analytics is supported in here: https://azure.microsoft.com/en-us/regions/. </param>
        <param name="content"> Defines the necessary parameters for testing the Stream Analytics input. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Test the Stream Analytics input.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/locations/{location}/testInput</description></item><item><term>Operation Id</term><description>Subscriptions_TestInput</description></item><item><term>Default Api Version</term><description>2021-10-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TestOutputSubscription">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestDatasourceResult&gt; TestOutputSubscription (Azure.WaitUntil waitUntil, Azure.Core.AzureLocation location, Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestOutput testOutput, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestDatasourceResult&gt; TestOutputSubscription(valuetype Azure.WaitUntil waitUntil, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestOutput testOutput, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StreamAnalytics.Mocking.MockableStreamAnalyticsSubscriptionResource.TestOutputSubscription(Azure.WaitUntil,Azure.Core.AzureLocation,Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestOutput,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TestOutputSubscription (waitUntil As WaitUntil, location As AzureLocation, testOutput As StreamAnalyticsTestOutput, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of StreamAnalyticsTestDatasourceResult)" />
      <MemberSignature Language="F#" Value="abstract member TestOutputSubscription : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestOutput * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestDatasourceResult&gt;&#xA;override this.TestOutputSubscription : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestOutput * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestDatasourceResult&gt;" Usage="mockableStreamAnalyticsSubscriptionResource.TestOutputSubscription (waitUntil, location, testOutput, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StreamAnalytics</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestDatasourceResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="testOutput" Type="Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestOutput" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="location"> The region to which the request is sent. You can find out which regions Azure Stream Analytics is supported in here: https://azure.microsoft.com/en-us/regions/. </param>
        <param name="testOutput"> Defines the necessary parameters for testing the Stream Analytics output. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Test the Stream Analytics output.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/locations/{location}/testOutput</description></item><item><term>Operation Id</term><description>Subscriptions_TestOutput</description></item><item><term>Default Api Version</term><description>2021-10-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="testOutput" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TestOutputSubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestDatasourceResult&gt;&gt; TestOutputSubscriptionAsync (Azure.WaitUntil waitUntil, Azure.Core.AzureLocation location, Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestOutput testOutput, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestDatasourceResult&gt;&gt; TestOutputSubscriptionAsync(valuetype Azure.WaitUntil waitUntil, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestOutput testOutput, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StreamAnalytics.Mocking.MockableStreamAnalyticsSubscriptionResource.TestOutputSubscriptionAsync(Azure.WaitUntil,Azure.Core.AzureLocation,Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestOutput,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TestOutputSubscriptionAsync (waitUntil As WaitUntil, location As AzureLocation, testOutput As StreamAnalyticsTestOutput, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of StreamAnalyticsTestDatasourceResult))" />
      <MemberSignature Language="F#" Value="abstract member TestOutputSubscriptionAsync : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestOutput * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestDatasourceResult&gt;&gt;&#xA;override this.TestOutputSubscriptionAsync : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestOutput * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestDatasourceResult&gt;&gt;" Usage="mockableStreamAnalyticsSubscriptionResource.TestOutputSubscriptionAsync (waitUntil, location, testOutput, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StreamAnalytics</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestDatasourceResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="testOutput" Type="Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestOutput" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="location"> The region to which the request is sent. You can find out which regions Azure Stream Analytics is supported in here: https://azure.microsoft.com/en-us/regions/. </param>
        <param name="testOutput"> Defines the necessary parameters for testing the Stream Analytics output. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Test the Stream Analytics output.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/locations/{location}/testOutput</description></item><item><term>Operation Id</term><description>Subscriptions_TestOutput</description></item><item><term>Default Api Version</term><description>2021-10-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="testOutput" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TestQuerySubscription">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsQueryTestingResult&gt; TestQuerySubscription (Azure.WaitUntil waitUntil, Azure.Core.AzureLocation location, Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestQuery testQuery, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsQueryTestingResult&gt; TestQuerySubscription(valuetype Azure.WaitUntil waitUntil, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestQuery testQuery, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StreamAnalytics.Mocking.MockableStreamAnalyticsSubscriptionResource.TestQuerySubscription(Azure.WaitUntil,Azure.Core.AzureLocation,Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestQuery,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TestQuerySubscription (waitUntil As WaitUntil, location As AzureLocation, testQuery As StreamAnalyticsTestQuery, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of StreamAnalyticsQueryTestingResult)" />
      <MemberSignature Language="F#" Value="abstract member TestQuerySubscription : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestQuery * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsQueryTestingResult&gt;&#xA;override this.TestQuerySubscription : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestQuery * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsQueryTestingResult&gt;" Usage="mockableStreamAnalyticsSubscriptionResource.TestQuerySubscription (waitUntil, location, testQuery, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StreamAnalytics</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsQueryTestingResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="testQuery" Type="Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestQuery" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="location"> The region to which the request is sent. You can find out which regions Azure Stream Analytics is supported in here: https://azure.microsoft.com/en-us/regions/. </param>
        <param name="testQuery"> The query testing object that defines the input, output, and transformation for the query testing. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Test the Stream Analytics query on a sample input.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/locations/{location}/testQuery</description></item><item><term>Operation Id</term><description>Subscriptions_TestQuery</description></item><item><term>Default Api Version</term><description>2021-10-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="testQuery" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TestQuerySubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsQueryTestingResult&gt;&gt; TestQuerySubscriptionAsync (Azure.WaitUntil waitUntil, Azure.Core.AzureLocation location, Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestQuery testQuery, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsQueryTestingResult&gt;&gt; TestQuerySubscriptionAsync(valuetype Azure.WaitUntil waitUntil, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestQuery testQuery, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StreamAnalytics.Mocking.MockableStreamAnalyticsSubscriptionResource.TestQuerySubscriptionAsync(Azure.WaitUntil,Azure.Core.AzureLocation,Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestQuery,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TestQuerySubscriptionAsync (waitUntil As WaitUntil, location As AzureLocation, testQuery As StreamAnalyticsTestQuery, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of StreamAnalyticsQueryTestingResult))" />
      <MemberSignature Language="F#" Value="abstract member TestQuerySubscriptionAsync : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestQuery * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsQueryTestingResult&gt;&gt;&#xA;override this.TestQuerySubscriptionAsync : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestQuery * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsQueryTestingResult&gt;&gt;" Usage="mockableStreamAnalyticsSubscriptionResource.TestQuerySubscriptionAsync (waitUntil, location, testQuery, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StreamAnalytics</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsQueryTestingResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="testQuery" Type="Azure.ResourceManager.StreamAnalytics.Models.StreamAnalyticsTestQuery" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="location"> The region to which the request is sent. You can find out which regions Azure Stream Analytics is supported in here: https://azure.microsoft.com/en-us/regions/. </param>
        <param name="testQuery"> The query testing object that defines the input, output, and transformation for the query testing. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Test the Stream Analytics query on a sample input.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/locations/{location}/testQuery</description></item><item><term>Operation Id</term><description>Subscriptions_TestQuery</description></item><item><term>Default Api Version</term><description>2021-10-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="testQuery" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
