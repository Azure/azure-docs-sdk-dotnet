<Type Name="LoadBasedConfig" FullName="Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig">
  <TypeSignature Language="C#" Value="public class LoadBasedConfig : System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LoadBasedConfig extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig" />
  <TypeSignature Language="VB.NET" Value="Public Class LoadBasedConfig&#xA;Implements IJsonModel(Of LoadBasedConfig), IPersistableModel(Of LoadBasedConfig)" />
  <TypeSignature Language="F#" Value="type LoadBasedConfig = class&#xA;    interface IJsonModel&lt;LoadBasedConfig&gt;&#xA;    interface IPersistableModel&lt;LoadBasedConfig&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Profile of load based Autoscale. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LoadBasedConfig (int minNodes, int maxNodes, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ScalingRule&gt; scalingRules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minNodes, int32 maxNodes, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HDInsight.Containers.Models.ScalingRule&gt; scalingRules) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{Azure.ResourceManager.HDInsight.Containers.Models.ScalingRule})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minNodes As Integer, maxNodes As Integer, scalingRules As IEnumerable(Of ScalingRule))" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig : int * int * seq&lt;Azure.ResourceManager.HDInsight.Containers.Models.ScalingRule&gt; -&gt; Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig" Usage="new Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig (minNodes, maxNodes, scalingRules)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minNodes" Type="System.Int32" />
        <Parameter Name="maxNodes" Type="System.Int32" />
        <Parameter Name="scalingRules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ScalingRule&gt;" />
      </Parameters>
      <Docs>
        <param name="minNodes"> User needs to set the minimum number of nodes for load based scaling, the load based scaling will use this to scale up and scale down between minimum and maximum number of nodes. </param>
        <param name="maxNodes"> User needs to set the maximum number of nodes for load based scaling, the load based scaling will use this to scale up and scale down between minimum and maximum number of nodes. </param>
        <param name="scalingRules"> The scaling rules. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scalingRules" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CooldownPeriod">
      <MemberSignature Language="C#" Value="public int? CooldownPeriod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; CooldownPeriod" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig.CooldownPeriod" />
      <MemberSignature Language="VB.NET" Value="Public Property CooldownPeriod As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.CooldownPeriod : Nullable&lt;int&gt; with get, set" Usage="Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig.CooldownPeriod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> This is a cool down period, this is a time period in seconds, which determines the amount of time that must elapse between a scaling activity started by a rule and the start of the next scaling activity, regardless of the rule that triggers it. The default value is 300 seconds. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxNodes">
      <MemberSignature Language="C#" Value="public int MaxNodes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxNodes" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig.MaxNodes" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxNodes As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxNodes : int with get, set" Usage="Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig.MaxNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> User needs to set the maximum number of nodes for load based scaling, the load based scaling will use this to scale up and scale down between minimum and maximum number of nodes. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinNodes">
      <MemberSignature Language="C#" Value="public int MinNodes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinNodes" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig.MinNodes" />
      <MemberSignature Language="VB.NET" Value="Public Property MinNodes As Integer" />
      <MemberSignature Language="F#" Value="member this.MinNodes : int with get, set" Usage="Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig.MinNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> User needs to set the minimum number of nodes for load based scaling, the load based scaling will use this to scale up and scale down between minimum and maximum number of nodes. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PollIntervalInSeconds">
      <MemberSignature Language="C#" Value="public int? PollIntervalInSeconds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; PollIntervalInSeconds" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig.PollIntervalInSeconds" />
      <MemberSignature Language="VB.NET" Value="Public Property PollIntervalInSeconds As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.PollIntervalInSeconds : Nullable&lt;int&gt; with get, set" Usage="Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig.PollIntervalInSeconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> User can specify the poll interval, this is the time period (in seconds) after which scaling metrics are polled for triggering a scaling operation. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScalingRules">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.ResourceManager.HDInsight.Containers.Models.ScalingRule&gt; ScalingRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.ResourceManager.HDInsight.Containers.Models.ScalingRule&gt; ScalingRules" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig.ScalingRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScalingRules As IList(Of ScalingRule)" />
      <MemberSignature Language="F#" Value="member this.ScalingRules : System.Collections.Generic.IList&lt;Azure.ResourceManager.HDInsight.Containers.Models.ScalingRule&gt;" Usage="Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig.ScalingRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.ResourceManager.HDInsight.Containers.Models.ScalingRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The scaling rules. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig IJsonModel&lt;LoadBasedConfig&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#HDInsight#Containers#Models#LoadBasedConfig&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As LoadBasedConfig Implements IJsonModel(Of LoadBasedConfig).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig" Usage="loadBasedConfig.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;LoadBasedConfig&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#HDInsight#Containers#Models#LoadBasedConfig&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of LoadBasedConfig).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="loadBasedConfig.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig IPersistableModel&lt;LoadBasedConfig&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#HDInsight#Containers#Models#LoadBasedConfig&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As LoadBasedConfig Implements IPersistableModel(Of LoadBasedConfig).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig" Usage="loadBasedConfig.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;LoadBasedConfig&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#HDInsight#Containers#Models#LoadBasedConfig&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of LoadBasedConfig).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="loadBasedConfig.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;LoadBasedConfig&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#HDInsight#Containers#Models#LoadBasedConfig&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of LoadBasedConfig).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="loadBasedConfig.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.Models.LoadBasedConfig&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
