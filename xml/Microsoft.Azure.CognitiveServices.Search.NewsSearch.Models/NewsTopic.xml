<Type Name="NewsTopic" FullName="Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.NewsTopic">
  <TypeSignature Language="C#" Value="public class NewsTopic : Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.Thing" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NewsTopic extends Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.Thing" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.NewsTopic" />
  <TypeSignature Language="VB.NET" Value="Public Class NewsTopic&#xA;Inherits Thing" />
  <TypeSignature Language="F#" Value="type NewsTopic = class&#xA;    inherit Thing" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.CognitiveServices.Search.NewsSearch</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.Thing</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="azure-dotnet">
      <AttributeName>Newtonsoft.Json.JsonObject("News/Topic")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NewsTopic ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.NewsTopic.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.NewsSearch</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the NewsTopic class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NewsTopic (string id = null, string webSearchUrl = null, string name = null, string url = null, Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.ImageObject image = null, string description = null, string alternateName = null, string bingId = null, Nullable&lt;bool&gt; isBreakingNews = null, Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.Query query = null, string newsSearchUrl = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id, string webSearchUrl, string name, string url, class Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.ImageObject image, string description, string alternateName, string bingId, valuetype System.Nullable`1&lt;bool&gt; isBreakingNews, class Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.Query query, string newsSearchUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.NewsTopic.#ctor(System.String,System.String,System.String,System.String,Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.ImageObject,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.Query,System.String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.NewsTopic : string * string * string * string * Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.ImageObject * string * string * string * Nullable&lt;bool&gt; * Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.Query * string -&gt; Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.NewsTopic" Usage="new Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.NewsTopic (id, webSearchUrl, name, url, image, description, alternateName, bingId, isBreakingNews, query, newsSearchUrl)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.NewsSearch</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="webSearchUrl" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="image" Type="Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.ImageObject" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="alternateName" Type="System.String" />
        <Parameter Name="bingId" Type="System.String" />
        <Parameter Name="isBreakingNews" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="query" Type="Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.Query" />
        <Parameter Name="newsSearchUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">A String identifier.</param>
        <param name="webSearchUrl">The URL To Bing's search result for this
            item.</param>
        <param name="name">The name of the thing represented by this
            object.</param>
        <param name="url">The URL to get more information about the thing
            represented by this object.</param>
        <param name="image">An image of the item.</param>
        <param name="description">A short description of the item.</param>
        <param name="alternateName">An alias for the item</param>
        <param name="bingId">An ID that uniquely identifies this
            item.</param>
        <param name="isBreakingNews">A Boolean value that indicates whether
            the topic is considered breaking news. If the topic is considered
            breaking news, the value is true.</param>
        <param name="query">A search query term that returns this trending
            topic.</param>
        <param name="newsSearchUrl">The URL to the Bing News search results
            for the search query term</param>
        <summary>
            Initializes a new instance of the NewsTopic class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBreakingNews">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsBreakingNews { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsBreakingNews" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.NewsTopic.IsBreakingNews" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBreakingNews As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsBreakingNews : Nullable&lt;bool&gt;" Usage="Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.NewsTopic.IsBreakingNews" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.NewsSearch</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="isBreakingNews")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a Boolean value that indicates whether the topic is considered
            breaking news. If the topic is considered breaking news, the value
            is true.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewsSearchUrl">
      <MemberSignature Language="C#" Value="public string NewsSearchUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewsSearchUrl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.NewsTopic.NewsSearchUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewsSearchUrl As String" />
      <MemberSignature Language="F#" Value="member this.NewsSearchUrl : string" Usage="Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.NewsTopic.NewsSearchUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.NewsSearch</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="newsSearchUrl")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the URL to the Bing News search results for the search query
            term
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.Query Query { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.Query Query" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.NewsTopic.Query" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Query As Query" />
      <MemberSignature Language="F#" Value="member this.Query : Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.Query" Usage="Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.NewsTopic.Query" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.NewsSearch</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="query")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.Query</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a search query term that returns this trending topic.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Search.NewsSearch.Models.NewsTopic.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="newsTopic.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.NewsSearch</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>