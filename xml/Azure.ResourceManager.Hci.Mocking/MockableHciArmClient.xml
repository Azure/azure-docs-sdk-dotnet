<Type Name="MockableHciArmClient" FullName="Azure.ResourceManager.Hci.Mocking.MockableHciArmClient">
  <TypeSignature Language="C#" Value="public class MockableHciArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableHciArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableHciArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableHciArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableHciArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArcExtensionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.ArcExtensionResource GetArcExtensionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.ArcExtensionResource GetArcExtensionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetArcExtensionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArcExtensionResource (id As ResourceIdentifier) As ArcExtensionResource" />
      <MemberSignature Language="F#" Value="abstract member GetArcExtensionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.ArcExtensionResource&#xA;override this.GetArcExtensionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.ArcExtensionResource" Usage="mockableHciArmClient.GetArcExtensionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.ArcExtensionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Hci.ArcExtensionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.ArcExtensionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Hci.ArcExtensionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.ArcExtensionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArcSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.ArcSettingResource GetArcSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.ArcSettingResource GetArcSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetArcSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArcSettingResource (id As ResourceIdentifier) As ArcSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetArcSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.ArcSettingResource&#xA;override this.GetArcSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.ArcSettingResource" Usage="mockableHciArmClient.GetArcSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.ArcSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Hci.ArcSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.ArcSettingResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Hci.ArcSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.ArcSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGalleryImageResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.GalleryImageResource GetGalleryImageResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.GalleryImageResource GetGalleryImageResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetGalleryImageResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGalleryImageResource (id As ResourceIdentifier) As GalleryImageResource" />
      <MemberSignature Language="F#" Value="abstract member GetGalleryImageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.GalleryImageResource&#xA;override this.GetGalleryImageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.GalleryImageResource" Usage="mockableHciArmClient.GetGalleryImageResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.GalleryImageResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Hci.GalleryImageResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.GalleryImageResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Hci.GalleryImageResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.GalleryImageResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGuestAgentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.GuestAgentResource GetGuestAgentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.GuestAgentResource GetGuestAgentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetGuestAgentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGuestAgentResource (id As ResourceIdentifier) As GuestAgentResource" />
      <MemberSignature Language="F#" Value="abstract member GetGuestAgentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.GuestAgentResource&#xA;override this.GetGuestAgentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.GuestAgentResource" Usage="mockableHciArmClient.GetGuestAgentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.GuestAgentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Hci.GuestAgentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.GuestAgentResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.Hci.GuestAgentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.GuestAgentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHciClusterDeploymentSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.HciClusterDeploymentSettingResource GetHciClusterDeploymentSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.HciClusterDeploymentSettingResource GetHciClusterDeploymentSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetHciClusterDeploymentSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHciClusterDeploymentSettingResource (id As ResourceIdentifier) As HciClusterDeploymentSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetHciClusterDeploymentSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.HciClusterDeploymentSettingResource&#xA;override this.GetHciClusterDeploymentSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.HciClusterDeploymentSettingResource" Usage="mockableHciArmClient.GetHciClusterDeploymentSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.HciClusterDeploymentSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Hci.HciClusterDeploymentSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.HciClusterDeploymentSettingResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Hci.HciClusterDeploymentSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.HciClusterDeploymentSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHciClusterOfferResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.HciClusterOfferResource GetHciClusterOfferResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.HciClusterOfferResource GetHciClusterOfferResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetHciClusterOfferResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHciClusterOfferResource (id As ResourceIdentifier) As HciClusterOfferResource" />
      <MemberSignature Language="F#" Value="abstract member GetHciClusterOfferResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.HciClusterOfferResource&#xA;override this.GetHciClusterOfferResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.HciClusterOfferResource" Usage="mockableHciArmClient.GetHciClusterOfferResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.HciClusterOfferResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Hci.HciClusterOfferResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.HciClusterOfferResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Hci.HciClusterOfferResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.HciClusterOfferResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHciClusterPublisherResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.HciClusterPublisherResource GetHciClusterPublisherResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.HciClusterPublisherResource GetHciClusterPublisherResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetHciClusterPublisherResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHciClusterPublisherResource (id As ResourceIdentifier) As HciClusterPublisherResource" />
      <MemberSignature Language="F#" Value="abstract member GetHciClusterPublisherResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.HciClusterPublisherResource&#xA;override this.GetHciClusterPublisherResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.HciClusterPublisherResource" Usage="mockableHciArmClient.GetHciClusterPublisherResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.HciClusterPublisherResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Hci.HciClusterPublisherResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.HciClusterPublisherResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Hci.HciClusterPublisherResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.HciClusterPublisherResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHciClusterResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.HciClusterResource GetHciClusterResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.HciClusterResource GetHciClusterResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetHciClusterResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHciClusterResource (id As ResourceIdentifier) As HciClusterResource" />
      <MemberSignature Language="F#" Value="abstract member GetHciClusterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.HciClusterResource&#xA;override this.GetHciClusterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.HciClusterResource" Usage="mockableHciArmClient.GetHciClusterResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.HciClusterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Hci.HciClusterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.HciClusterResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Hci.HciClusterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.HciClusterResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHciClusterSecuritySettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.HciClusterSecuritySettingResource GetHciClusterSecuritySettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.HciClusterSecuritySettingResource GetHciClusterSecuritySettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetHciClusterSecuritySettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHciClusterSecuritySettingResource (id As ResourceIdentifier) As HciClusterSecuritySettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetHciClusterSecuritySettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.HciClusterSecuritySettingResource&#xA;override this.GetHciClusterSecuritySettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.HciClusterSecuritySettingResource" Usage="mockableHciArmClient.GetHciClusterSecuritySettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.HciClusterSecuritySettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Hci.HciClusterSecuritySettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.HciClusterSecuritySettingResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Hci.HciClusterSecuritySettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.HciClusterSecuritySettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHciClusterUpdateResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.HciClusterUpdateResource GetHciClusterUpdateResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.HciClusterUpdateResource GetHciClusterUpdateResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetHciClusterUpdateResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHciClusterUpdateResource (id As ResourceIdentifier) As HciClusterUpdateResource" />
      <MemberSignature Language="F#" Value="abstract member GetHciClusterUpdateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.HciClusterUpdateResource&#xA;override this.GetHciClusterUpdateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.HciClusterUpdateResource" Usage="mockableHciArmClient.GetHciClusterUpdateResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.HciClusterUpdateResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Hci.HciClusterUpdateResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.HciClusterUpdateResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Hci.HciClusterUpdateResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.HciClusterUpdateResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHciClusterUpdateRunResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.HciClusterUpdateRunResource GetHciClusterUpdateRunResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.HciClusterUpdateRunResource GetHciClusterUpdateRunResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetHciClusterUpdateRunResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHciClusterUpdateRunResource (id As ResourceIdentifier) As HciClusterUpdateRunResource" />
      <MemberSignature Language="F#" Value="abstract member GetHciClusterUpdateRunResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.HciClusterUpdateRunResource&#xA;override this.GetHciClusterUpdateRunResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.HciClusterUpdateRunResource" Usage="mockableHciArmClient.GetHciClusterUpdateRunResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.HciClusterUpdateRunResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Hci.HciClusterUpdateRunResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.HciClusterUpdateRunResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Hci.HciClusterUpdateRunResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.HciClusterUpdateRunResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHciClusterUpdateSummaryResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.HciClusterUpdateSummaryResource GetHciClusterUpdateSummaryResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.HciClusterUpdateSummaryResource GetHciClusterUpdateSummaryResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetHciClusterUpdateSummaryResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHciClusterUpdateSummaryResource (id As ResourceIdentifier) As HciClusterUpdateSummaryResource" />
      <MemberSignature Language="F#" Value="abstract member GetHciClusterUpdateSummaryResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.HciClusterUpdateSummaryResource&#xA;override this.GetHciClusterUpdateSummaryResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.HciClusterUpdateSummaryResource" Usage="mockableHciArmClient.GetHciClusterUpdateSummaryResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.HciClusterUpdateSummaryResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Hci.HciClusterUpdateSummaryResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.HciClusterUpdateSummaryResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Hci.HciClusterUpdateSummaryResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.HciClusterUpdateSummaryResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHciEdgeDevice">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Hci.HciEdgeDeviceResource&gt; GetHciEdgeDevice (Azure.Core.ResourceIdentifier scope, string edgeDeviceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Hci.HciEdgeDeviceResource&gt; GetHciEdgeDevice(class Azure.Core.ResourceIdentifier scope, string edgeDeviceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetHciEdgeDevice(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHciEdgeDevice (scope As ResourceIdentifier, edgeDeviceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of HciEdgeDeviceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetHciEdgeDevice : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Hci.HciEdgeDeviceResource&gt;&#xA;override this.GetHciEdgeDevice : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Hci.HciEdgeDeviceResource&gt;" Usage="mockableHciArmClient.GetHciEdgeDevice (scope, edgeDeviceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Hci.HciEdgeDeviceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="edgeDeviceName" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="edgeDeviceName"> Name of Device. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a EdgeDevice
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.AzureStackHCI/edgeDevices/{edgeDeviceName}</description></item><item><term>Operation Id</term><description>EdgeDevices_Get</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Hci.HciEdgeDeviceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="edgeDeviceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="edgeDeviceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHciEdgeDeviceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Hci.HciEdgeDeviceResource&gt;&gt; GetHciEdgeDeviceAsync (Azure.Core.ResourceIdentifier scope, string edgeDeviceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Hci.HciEdgeDeviceResource&gt;&gt; GetHciEdgeDeviceAsync(class Azure.Core.ResourceIdentifier scope, string edgeDeviceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetHciEdgeDeviceAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHciEdgeDeviceAsync (scope As ResourceIdentifier, edgeDeviceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of HciEdgeDeviceResource))" />
      <MemberSignature Language="F#" Value="abstract member GetHciEdgeDeviceAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Hci.HciEdgeDeviceResource&gt;&gt;&#xA;override this.GetHciEdgeDeviceAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Hci.HciEdgeDeviceResource&gt;&gt;" Usage="mockableHciArmClient.GetHciEdgeDeviceAsync (scope, edgeDeviceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Hci.HciEdgeDeviceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="edgeDeviceName" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="edgeDeviceName"> Name of Device. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a EdgeDevice
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.AzureStackHCI/edgeDevices/{edgeDeviceName}</description></item><item><term>Operation Id</term><description>EdgeDevices_Get</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Hci.HciEdgeDeviceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="edgeDeviceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="edgeDeviceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHciEdgeDeviceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.HciEdgeDeviceResource GetHciEdgeDeviceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.HciEdgeDeviceResource GetHciEdgeDeviceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetHciEdgeDeviceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHciEdgeDeviceResource (id As ResourceIdentifier) As HciEdgeDeviceResource" />
      <MemberSignature Language="F#" Value="abstract member GetHciEdgeDeviceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.HciEdgeDeviceResource&#xA;override this.GetHciEdgeDeviceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.HciEdgeDeviceResource" Usage="mockableHciArmClient.GetHciEdgeDeviceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.HciEdgeDeviceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Hci.HciEdgeDeviceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.HciEdgeDeviceResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Hci.HciEdgeDeviceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.HciEdgeDeviceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHciEdgeDevices">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.HciEdgeDeviceCollection GetHciEdgeDevices (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.HciEdgeDeviceCollection GetHciEdgeDevices(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetHciEdgeDevices(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHciEdgeDevices (scope As ResourceIdentifier) As HciEdgeDeviceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetHciEdgeDevices : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.HciEdgeDeviceCollection&#xA;override this.GetHciEdgeDevices : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.HciEdgeDeviceCollection" Usage="mockableHciArmClient.GetHciEdgeDevices scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.HciEdgeDeviceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets a collection of HciEdgeDeviceResources in the ArmClient. </summary>
        <returns> An object representing collection of HciEdgeDeviceResources and their operations over a HciEdgeDeviceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHciSkuResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.HciSkuResource GetHciSkuResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.HciSkuResource GetHciSkuResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetHciSkuResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHciSkuResource (id As ResourceIdentifier) As HciSkuResource" />
      <MemberSignature Language="F#" Value="abstract member GetHciSkuResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.HciSkuResource&#xA;override this.GetHciSkuResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.HciSkuResource" Usage="mockableHciArmClient.GetHciSkuResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.HciSkuResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Hci.HciSkuResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.HciSkuResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Hci.HciSkuResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.HciSkuResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHybridIdentityMetadataResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.HybridIdentityMetadataResource GetHybridIdentityMetadataResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.HybridIdentityMetadataResource GetHybridIdentityMetadataResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetHybridIdentityMetadataResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHybridIdentityMetadataResource (id As ResourceIdentifier) As HybridIdentityMetadataResource" />
      <MemberSignature Language="F#" Value="abstract member GetHybridIdentityMetadataResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.HybridIdentityMetadataResource&#xA;override this.GetHybridIdentityMetadataResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.HybridIdentityMetadataResource" Usage="mockableHciArmClient.GetHybridIdentityMetadataResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.HybridIdentityMetadataResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Hci.HybridIdentityMetadataResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.HybridIdentityMetadataResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.Hci.HybridIdentityMetadataResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.HybridIdentityMetadataResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLogicalNetworkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.LogicalNetworkResource GetLogicalNetworkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.LogicalNetworkResource GetLogicalNetworkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetLogicalNetworkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLogicalNetworkResource (id As ResourceIdentifier) As LogicalNetworkResource" />
      <MemberSignature Language="F#" Value="abstract member GetLogicalNetworkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.LogicalNetworkResource&#xA;override this.GetLogicalNetworkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.LogicalNetworkResource" Usage="mockableHciArmClient.GetLogicalNetworkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.LogicalNetworkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Hci.LogicalNetworkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.LogicalNetworkResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Hci.LogicalNetworkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.LogicalNetworkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMarketplaceGalleryImageResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.MarketplaceGalleryImageResource GetMarketplaceGalleryImageResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.MarketplaceGalleryImageResource GetMarketplaceGalleryImageResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetMarketplaceGalleryImageResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMarketplaceGalleryImageResource (id As ResourceIdentifier) As MarketplaceGalleryImageResource" />
      <MemberSignature Language="F#" Value="abstract member GetMarketplaceGalleryImageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.MarketplaceGalleryImageResource&#xA;override this.GetMarketplaceGalleryImageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.MarketplaceGalleryImageResource" Usage="mockableHciArmClient.GetMarketplaceGalleryImageResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.MarketplaceGalleryImageResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Hci.MarketplaceGalleryImageResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.MarketplaceGalleryImageResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Hci.MarketplaceGalleryImageResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.MarketplaceGalleryImageResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkInterfaceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.NetworkInterfaceResource GetNetworkInterfaceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.NetworkInterfaceResource GetNetworkInterfaceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetNetworkInterfaceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkInterfaceResource (id As ResourceIdentifier) As NetworkInterfaceResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkInterfaceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.NetworkInterfaceResource&#xA;override this.GetNetworkInterfaceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.NetworkInterfaceResource" Usage="mockableHciArmClient.GetNetworkInterfaceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.NetworkInterfaceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Hci.NetworkInterfaceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.NetworkInterfaceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Hci.NetworkInterfaceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.NetworkInterfaceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOfferResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.OfferResource GetOfferResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.OfferResource GetOfferResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetOfferResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOfferResource (id As ResourceIdentifier) As OfferResource" />
      <MemberSignature Language="F#" Value="abstract member GetOfferResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.OfferResource&#xA;override this.GetOfferResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.OfferResource" Usage="mockableHciArmClient.GetOfferResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.Obsolete("This method is now deprecated. Please use the new method `GetHciClusterOfferResource` moving forward.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is now deprecated. Please use the new method `GetHciClusterOfferResource` moving forward.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.OfferResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Hci.OfferResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.OfferResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Hci.OfferResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.OfferResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPublisherResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.PublisherResource GetPublisherResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.PublisherResource GetPublisherResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetPublisherResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPublisherResource (id As ResourceIdentifier) As PublisherResource" />
      <MemberSignature Language="F#" Value="abstract member GetPublisherResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.PublisherResource&#xA;override this.GetPublisherResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.PublisherResource" Usage="mockableHciArmClient.GetPublisherResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.Obsolete("This method is now deprecated. Please use the new method `GetHciClusterPublisherResource` moving forward.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is now deprecated. Please use the new method `GetHciClusterPublisherResource` moving forward.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.PublisherResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Hci.PublisherResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.PublisherResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Hci.PublisherResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.PublisherResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStorageContainerResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.StorageContainerResource GetStorageContainerResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.StorageContainerResource GetStorageContainerResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetStorageContainerResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageContainerResource (id As ResourceIdentifier) As StorageContainerResource" />
      <MemberSignature Language="F#" Value="abstract member GetStorageContainerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.StorageContainerResource&#xA;override this.GetStorageContainerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.StorageContainerResource" Usage="mockableHciArmClient.GetStorageContainerResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.StorageContainerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Hci.StorageContainerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.StorageContainerResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Hci.StorageContainerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.StorageContainerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.UpdateResource GetUpdateResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.UpdateResource GetUpdateResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetUpdateResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUpdateResource (id As ResourceIdentifier) As UpdateResource" />
      <MemberSignature Language="F#" Value="abstract member GetUpdateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.UpdateResource&#xA;override this.GetUpdateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.UpdateResource" Usage="mockableHciArmClient.GetUpdateResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.Obsolete("This method is now deprecated. Please use the new method `GetHciClusterUpdateResource` moving forward.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is now deprecated. Please use the new method `GetHciClusterUpdateResource` moving forward.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.UpdateResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Hci.UpdateResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.UpdateResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Hci.UpdateResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.UpdateResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateRunResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.UpdateRunResource GetUpdateRunResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.UpdateRunResource GetUpdateRunResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetUpdateRunResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUpdateRunResource (id As ResourceIdentifier) As UpdateRunResource" />
      <MemberSignature Language="F#" Value="abstract member GetUpdateRunResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.UpdateRunResource&#xA;override this.GetUpdateRunResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.UpdateRunResource" Usage="mockableHciArmClient.GetUpdateRunResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.Obsolete("This method is now deprecated. Please use the new method `GetHciClusterUpdateRunResource` moving forward.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is now deprecated. Please use the new method `GetHciClusterUpdateRunResource` moving forward.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.UpdateRunResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Hci.UpdateRunResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.UpdateRunResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Hci.UpdateRunResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.UpdateRunResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateSummaryResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.UpdateSummaryResource GetUpdateSummaryResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.UpdateSummaryResource GetUpdateSummaryResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetUpdateSummaryResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUpdateSummaryResource (id As ResourceIdentifier) As UpdateSummaryResource" />
      <MemberSignature Language="F#" Value="abstract member GetUpdateSummaryResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.UpdateSummaryResource&#xA;override this.GetUpdateSummaryResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.UpdateSummaryResource" Usage="mockableHciArmClient.GetUpdateSummaryResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.Obsolete("This method is now deprecated. Please use the new method `GetHciClusterUpdateSummaryResource` moving forward.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is now deprecated. Please use the new method `GetHciClusterUpdateSummaryResource` moving forward.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.UpdateSummaryResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Hci.UpdateSummaryResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.UpdateSummaryResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Hci.UpdateSummaryResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.UpdateSummaryResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualHardDiskResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.VirtualHardDiskResource GetVirtualHardDiskResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.VirtualHardDiskResource GetVirtualHardDiskResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetVirtualHardDiskResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualHardDiskResource (id As ResourceIdentifier) As VirtualHardDiskResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualHardDiskResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.VirtualHardDiskResource&#xA;override this.GetVirtualHardDiskResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.VirtualHardDiskResource" Usage="mockableHciArmClient.GetVirtualHardDiskResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.VirtualHardDiskResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Hci.VirtualHardDiskResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.VirtualHardDiskResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Hci.VirtualHardDiskResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.VirtualHardDiskResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineInstance">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.VirtualMachineInstanceResource GetVirtualMachineInstance (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.VirtualMachineInstanceResource GetVirtualMachineInstance(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetVirtualMachineInstance(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualMachineInstance (scope As ResourceIdentifier) As VirtualMachineInstanceResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualMachineInstance : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.VirtualMachineInstanceResource&#xA;override this.GetVirtualMachineInstance : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.VirtualMachineInstanceResource" Usage="mockableHciArmClient.GetVirtualMachineInstance scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.VirtualMachineInstanceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets an object representing a VirtualMachineInstanceResource along with the instance operations that can be performed on it in the ArmClient. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.VirtualMachineInstanceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineInstanceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Hci.VirtualMachineInstanceResource GetVirtualMachineInstanceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Hci.VirtualMachineInstanceResource GetVirtualMachineInstanceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Hci.Mocking.MockableHciArmClient.GetVirtualMachineInstanceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualMachineInstanceResource (id As ResourceIdentifier) As VirtualMachineInstanceResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualMachineInstanceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.VirtualMachineInstanceResource&#xA;override this.GetVirtualMachineInstanceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Hci.VirtualMachineInstanceResource" Usage="mockableHciArmClient.GetVirtualMachineInstanceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Hci</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Hci.VirtualMachineInstanceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Hci.VirtualMachineInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Hci.VirtualMachineInstanceResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.Hci.VirtualMachineInstanceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Hci.VirtualMachineInstanceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
