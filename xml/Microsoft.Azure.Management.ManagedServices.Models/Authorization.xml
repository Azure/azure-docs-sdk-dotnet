<Type Name="Authorization" FullName="Microsoft.Azure.Management.ManagedServices.Models.Authorization">
  <TypeSignature Language="C#" Value="public class Authorization" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Authorization extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ManagedServices.Models.Authorization" />
  <TypeSignature Language="VB.NET" Value="Public Class Authorization" />
  <TypeSignature Language="F#" Value="type Authorization = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ManagedServices</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Authorization tuple containing principal Id (of user/service
            principal/security group) and role definition id.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Authorization ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ManagedServices.Models.Authorization.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ManagedServices</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the Authorization class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Authorization (string principalId, string roleDefinitionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string principalId, string roleDefinitionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ManagedServices.Models.Authorization.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (principalId As String, roleDefinitionId As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.ManagedServices.Models.Authorization : string * string -&gt; Microsoft.Azure.Management.ManagedServices.Models.Authorization" Usage="new Microsoft.Azure.Management.ManagedServices.Models.Authorization (principalId, roleDefinitionId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ManagedServices</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="principalId" Type="System.String" />
        <Parameter Name="roleDefinitionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="principalId">Principal Id of the security
            group/service principal/user that would be assigned permissions to
            the projected subscription</param>
        <param name="roleDefinitionId">The role definition identifier. This
            role will define all the permissions that the security
            group/service principal/user must have on the projected
            subscription. This role cannot be an owner role.</param>
        <summary>
            Initializes a new instance of the Authorization class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrincipalId">
      <MemberSignature Language="C#" Value="public string PrincipalId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrincipalId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ManagedServices.Models.Authorization.PrincipalId" />
      <MemberSignature Language="VB.NET" Value="Public Property PrincipalId As String" />
      <MemberSignature Language="F#" Value="member this.PrincipalId : string with get, set" Usage="Microsoft.Azure.Management.ManagedServices.Models.Authorization.PrincipalId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ManagedServices</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="principalId")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="principalId")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets principal Id of the security group/service
            principal/user that would be assigned permissions to the projected
            subscription
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleDefinitionId">
      <MemberSignature Language="C#" Value="public string RoleDefinitionId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RoleDefinitionId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ManagedServices.Models.Authorization.RoleDefinitionId" />
      <MemberSignature Language="VB.NET" Value="Public Property RoleDefinitionId As String" />
      <MemberSignature Language="F#" Value="member this.RoleDefinitionId : string with get, set" Usage="Microsoft.Azure.Management.ManagedServices.Models.Authorization.RoleDefinitionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ManagedServices</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="roleDefinitionId")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="roleDefinitionId")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the role definition identifier. This role will define
            all the permissions that the security group/service principal/user
            must have on the projected subscription. This role cannot be an
            owner role.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ManagedServices.Models.Authorization.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="authorization.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ManagedServices</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
