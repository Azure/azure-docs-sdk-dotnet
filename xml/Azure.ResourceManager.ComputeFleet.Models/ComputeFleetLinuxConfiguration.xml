<Type Name="ComputeFleetLinuxConfiguration" FullName="Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration">
  <TypeSignature Language="C#" Value="public class ComputeFleetLinuxConfiguration : System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComputeFleetLinuxConfiguration extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class ComputeFleetLinuxConfiguration&#xA;Implements IJsonModel(Of ComputeFleetLinuxConfiguration), IPersistableModel(Of ComputeFleetLinuxConfiguration)" />
  <TypeSignature Language="F#" Value="type ComputeFleetLinuxConfiguration = class&#xA;    interface IJsonModel&lt;ComputeFleetLinuxConfiguration&gt;&#xA;    interface IPersistableModel&lt;ComputeFleetLinuxConfiguration&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ComputeFleet</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Specifies the Linux operating system settings on the virtual machine. For a
            list of supported Linux distributions, see [Linux on Azure-Endorsed
            Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComputeFleetLinuxConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeFleet</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration" />. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPasswordAuthenticationDisabled">
      <MemberSignature Language="C#" Value="public bool? IsPasswordAuthenticationDisabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsPasswordAuthenticationDisabled" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration.IsPasswordAuthenticationDisabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPasswordAuthenticationDisabled As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsPasswordAuthenticationDisabled : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration.IsPasswordAuthenticationDisabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeFleet</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Specifies whether password authentication should be disabled. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVmAgentPlatformUpdatesEnabled">
      <MemberSignature Language="C#" Value="public bool? IsVmAgentPlatformUpdatesEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsVmAgentPlatformUpdatesEnabled" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration.IsVmAgentPlatformUpdatesEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsVmAgentPlatformUpdatesEnabled As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsVmAgentPlatformUpdatesEnabled : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration.IsVmAgentPlatformUpdatesEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeFleet</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Indicates whether VMAgent Platform Updates is enabled for the Linux virtual
            machine. Default value is false.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVmAgentProvisioned">
      <MemberSignature Language="C#" Value="public bool? IsVmAgentProvisioned { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsVmAgentProvisioned" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration.IsVmAgentProvisioned" />
      <MemberSignature Language="VB.NET" Value="Public Property IsVmAgentProvisioned As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsVmAgentProvisioned : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration.IsVmAgentProvisioned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeFleet</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Indicates whether virtual machine agent should be provisioned on the virtual
            machine. When this property is not specified in the request body, default
            behavior is to set it to true. This will ensure that VM Agent is installed on
            the VM so that extensions can be added to the VM later.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JsonModelWriteCore">
      <MemberSignature Language="C#" Value="protected virtual void JsonModelWriteCore (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void JsonModelWriteCore(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub JsonModelWriteCore (writer As Utf8JsonWriter, options As ModelReaderWriterOptions)" />
      <MemberSignature Language="F#" Value="abstract member JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="computeFleetLinuxConfiguration.JsonModelWriteCore (writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeFleet</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="writer"> The JSON writer. </param>
        <param name="options"> The client options for reading and writing models. </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PatchSettings">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxPatchSettings PatchSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxPatchSettings PatchSettings" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration.PatchSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property PatchSettings As ComputeFleetLinuxPatchSettings" />
      <MemberSignature Language="F#" Value="member this.PatchSettings : Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxPatchSettings with get, set" Usage="Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration.PatchSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeFleet</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxPatchSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> [Preview Feature] Specifies settings related to VM Guest Patching on Linux. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SshPublicKeys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetSshPublicKey&gt; SshPublicKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.ResourceManager.ComputeFleet.Models.ComputeFleetSshPublicKey&gt; SshPublicKeys" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration.SshPublicKeys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SshPublicKeys As IList(Of ComputeFleetSshPublicKey)" />
      <MemberSignature Language="F#" Value="member this.SshPublicKeys : System.Collections.Generic.IList&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetSshPublicKey&gt;" Usage="Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration.SshPublicKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeFleet</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetSshPublicKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The list of SSH public keys used to authenticate with linux based VMs. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration IJsonModel&lt;ComputeFleetLinuxConfiguration&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#ComputeFleet#Models#ComputeFleetLinuxConfiguration&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As ComputeFleetLinuxConfiguration Implements IJsonModel(Of ComputeFleetLinuxConfiguration).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration" Usage="computeFleetLinuxConfiguration.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeFleet</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;ComputeFleetLinuxConfiguration&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#ComputeFleet#Models#ComputeFleetLinuxConfiguration&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of ComputeFleetLinuxConfiguration).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="computeFleetLinuxConfiguration.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeFleet</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration IPersistableModel&lt;ComputeFleetLinuxConfiguration&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#ComputeFleet#Models#ComputeFleetLinuxConfiguration&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As ComputeFleetLinuxConfiguration Implements IPersistableModel(Of ComputeFleetLinuxConfiguration).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration" Usage="computeFleetLinuxConfiguration.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeFleet</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;ComputeFleetLinuxConfiguration&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#ComputeFleet#Models#ComputeFleetLinuxConfiguration&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of ComputeFleetLinuxConfiguration).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="computeFleetLinuxConfiguration.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeFleet</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;ComputeFleetLinuxConfiguration&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#ComputeFleet#Models#ComputeFleetLinuxConfiguration&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of ComputeFleetLinuxConfiguration).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="computeFleetLinuxConfiguration.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ComputeFleet.Models.ComputeFleetLinuxConfiguration&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeFleet</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
