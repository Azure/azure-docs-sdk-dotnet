<Type Name="DataShareResource" FullName="Azure.ResourceManager.DataShare.DataShareResource">
  <TypeSignature Language="C#" Value="public class DataShareResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataShareResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataShare.DataShareResource" />
  <TypeSignature Language="VB.NET" Value="Public Class DataShareResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type DataShareResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing a DataShare along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.DataShare.DataShareResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetDataShareResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.DataShare.DataShareAccountResource" /> using the GetDataShare method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataShareResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.DataShareResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DataShare.DataShareResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string accountName, string shareName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string accountName, string shareName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.DataShareResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, accountName As String, shareName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.DataShare.DataShareResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, accountName, shareName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="shareName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="resourceGroupName">To be added.</param>
        <param name="accountName">To be added.</param>
        <param name="shareName">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.DataShare.DataShareResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataShare.DataShareData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataShare.DataShareData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataShare.DataShareResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As DataShareData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.DataShare.DataShareData" Usage="Azure.ResourceManager.DataShare.DataShareResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataShare.DataShareData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt; Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt; Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.DataShareResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of DataShareOperationResult)" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt;&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt;" Usage="dataShareResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete a share 
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}
            Operation Id: Shares_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt;&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt;&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.DataShareResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of DataShareOperationResult))" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt;&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt;&gt;" Usage="dataShareResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete a share 
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}
            Operation Id: Shares_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.DataShareResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.DataShareResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataShareResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareResource&gt;" Usage="dataShareResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a share 
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}
            Operation Id: Shares_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.DataShareResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.DataShareResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataShareResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareResource&gt;&gt;" Usage="dataShareResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a share 
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}
            Operation Id: Shares_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataShareInvitation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareInvitationResource&gt; GetDataShareInvitation (string invitationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.DataShareInvitationResource&gt; GetDataShareInvitation(string invitationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.DataShareResource.GetDataShareInvitation(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataShareInvitation (invitationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataShareInvitationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataShareInvitation : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareInvitationResource&gt;&#xA;override this.GetDataShareInvitation : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareInvitationResource&gt;" Usage="dataShareResource.GetDataShareInvitation (invitationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareInvitationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invitationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="invitationName"> The name of the invitation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an invitation in a share
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/invitations/{invitationName}
            Operation Id: Invitations_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="invitationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="invitationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataShareInvitationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareInvitationResource&gt;&gt; GetDataShareInvitationAsync (string invitationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.DataShareInvitationResource&gt;&gt; GetDataShareInvitationAsync(string invitationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.DataShareResource.GetDataShareInvitationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataShareInvitationAsync (invitationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataShareInvitationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataShareInvitationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareInvitationResource&gt;&gt;&#xA;override this.GetDataShareInvitationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareInvitationResource&gt;&gt;" Usage="dataShareResource.GetDataShareInvitationAsync (invitationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareInvitationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invitationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="invitationName"> The name of the invitation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an invitation in a share
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/invitations/{invitationName}
            Operation Id: Invitations_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="invitationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="invitationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataShareInvitations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataShare.DataShareInvitationCollection GetDataShareInvitations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataShare.DataShareInvitationCollection GetDataShareInvitations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.DataShareResource.GetDataShareInvitations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataShareInvitations () As DataShareInvitationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataShareInvitations : unit -&gt; Azure.ResourceManager.DataShare.DataShareInvitationCollection&#xA;override this.GetDataShareInvitations : unit -&gt; Azure.ResourceManager.DataShare.DataShareInvitationCollection" Usage="dataShareResource.GetDataShareInvitations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataShare.DataShareInvitationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataShareInvitationResources in the DataShare. </summary>
        <returns> An object representing collection of DataShareInvitationResources and their operations over a DataShareInvitationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataShareSynchronizationSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareSynchronizationSettingResource&gt; GetDataShareSynchronizationSetting (string synchronizationSettingName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.DataShareSynchronizationSettingResource&gt; GetDataShareSynchronizationSetting(string synchronizationSettingName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.DataShareResource.GetDataShareSynchronizationSetting(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataShareSynchronizationSetting (synchronizationSettingName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataShareSynchronizationSettingResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataShareSynchronizationSetting : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareSynchronizationSettingResource&gt;&#xA;override this.GetDataShareSynchronizationSetting : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareSynchronizationSettingResource&gt;" Usage="dataShareResource.GetDataShareSynchronizationSetting (synchronizationSettingName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareSynchronizationSettingResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="synchronizationSettingName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="synchronizationSettingName"> The name of the synchronizationSetting. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a synchronizationSetting in a share
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/synchronizationSettings/{synchronizationSettingName}
            Operation Id: SynchronizationSettings_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="synchronizationSettingName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="synchronizationSettingName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataShareSynchronizationSettingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareSynchronizationSettingResource&gt;&gt; GetDataShareSynchronizationSettingAsync (string synchronizationSettingName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.DataShareSynchronizationSettingResource&gt;&gt; GetDataShareSynchronizationSettingAsync(string synchronizationSettingName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.DataShareResource.GetDataShareSynchronizationSettingAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataShareSynchronizationSettingAsync (synchronizationSettingName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataShareSynchronizationSettingResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataShareSynchronizationSettingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareSynchronizationSettingResource&gt;&gt;&#xA;override this.GetDataShareSynchronizationSettingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareSynchronizationSettingResource&gt;&gt;" Usage="dataShareResource.GetDataShareSynchronizationSettingAsync (synchronizationSettingName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareSynchronizationSettingResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="synchronizationSettingName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="synchronizationSettingName"> The name of the synchronizationSetting. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a synchronizationSetting in a share
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/synchronizationSettings/{synchronizationSettingName}
            Operation Id: SynchronizationSettings_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="synchronizationSettingName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="synchronizationSettingName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataShareSynchronizationSettings">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataShare.DataShareSynchronizationSettingCollection GetDataShareSynchronizationSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataShare.DataShareSynchronizationSettingCollection GetDataShareSynchronizationSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.DataShareResource.GetDataShareSynchronizationSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataShareSynchronizationSettings () As DataShareSynchronizationSettingCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataShareSynchronizationSettings : unit -&gt; Azure.ResourceManager.DataShare.DataShareSynchronizationSettingCollection&#xA;override this.GetDataShareSynchronizationSettings : unit -&gt; Azure.ResourceManager.DataShare.DataShareSynchronizationSettingCollection" Usage="dataShareResource.GetDataShareSynchronizationSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataShare.DataShareSynchronizationSettingCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataShareSynchronizationSettingResources in the DataShare. </summary>
        <returns> An object representing collection of DataShareSynchronizationSettingResources and their operations over a DataShareSynchronizationSettingResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderShareSubscription">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataShare.ProviderShareSubscriptionResource&gt; GetProviderShareSubscription (string providerShareSubscriptionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.ProviderShareSubscriptionResource&gt; GetProviderShareSubscription(string providerShareSubscriptionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.DataShareResource.GetProviderShareSubscription(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderShareSubscription (providerShareSubscriptionId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ProviderShareSubscriptionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetProviderShareSubscription : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.ProviderShareSubscriptionResource&gt;&#xA;override this.GetProviderShareSubscription : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.ProviderShareSubscriptionResource&gt;" Usage="dataShareResource.GetProviderShareSubscription (providerShareSubscriptionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataShare.ProviderShareSubscriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerShareSubscriptionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="providerShareSubscriptionId"> To locate shareSubscription. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get share subscription in a provider share
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/providerShareSubscriptions/{providerShareSubscriptionId}
            Operation Id: ProviderShareSubscriptions_GetByShare
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerShareSubscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerShareSubscriptionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderShareSubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.ProviderShareSubscriptionResource&gt;&gt; GetProviderShareSubscriptionAsync (string providerShareSubscriptionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.ProviderShareSubscriptionResource&gt;&gt; GetProviderShareSubscriptionAsync(string providerShareSubscriptionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.DataShareResource.GetProviderShareSubscriptionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderShareSubscriptionAsync (providerShareSubscriptionId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ProviderShareSubscriptionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetProviderShareSubscriptionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.ProviderShareSubscriptionResource&gt;&gt;&#xA;override this.GetProviderShareSubscriptionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.ProviderShareSubscriptionResource&gt;&gt;" Usage="dataShareResource.GetProviderShareSubscriptionAsync (providerShareSubscriptionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.ProviderShareSubscriptionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerShareSubscriptionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="providerShareSubscriptionId"> To locate shareSubscription. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get share subscription in a provider share
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/providerShareSubscriptions/{providerShareSubscriptionId}
            Operation Id: ProviderShareSubscriptions_GetByShare
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerShareSubscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerShareSubscriptionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderShareSubscriptions">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataShare.ProviderShareSubscriptionCollection GetProviderShareSubscriptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataShare.ProviderShareSubscriptionCollection GetProviderShareSubscriptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.DataShareResource.GetProviderShareSubscriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderShareSubscriptions () As ProviderShareSubscriptionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetProviderShareSubscriptions : unit -&gt; Azure.ResourceManager.DataShare.ProviderShareSubscriptionCollection&#xA;override this.GetProviderShareSubscriptions : unit -&gt; Azure.ResourceManager.DataShare.ProviderShareSubscriptionCollection" Usage="dataShareResource.GetProviderShareSubscriptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataShare.ProviderShareSubscriptionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ProviderShareSubscriptionResources in the DataShare. </summary>
        <returns> An object representing collection of ProviderShareSubscriptionResources and their operations over a ProviderShareSubscriptionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShareDataSet">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataShare.ShareDataSetResource&gt; GetShareDataSet (string dataSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.ShareDataSetResource&gt; GetShareDataSet(string dataSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.DataShareResource.GetShareDataSet(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetShareDataSet (dataSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ShareDataSetResource)" />
      <MemberSignature Language="F#" Value="abstract member GetShareDataSet : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.ShareDataSetResource&gt;&#xA;override this.GetShareDataSet : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.ShareDataSetResource&gt;" Usage="dataShareResource.GetShareDataSet (dataSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataShare.ShareDataSetResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataSetName"> The name of the dataSet. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a DataSet in a share
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/dataSets/{dataSetName}
            Operation Id: DataSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataSetName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetShareDataSetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.ShareDataSetResource&gt;&gt; GetShareDataSetAsync (string dataSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.ShareDataSetResource&gt;&gt; GetShareDataSetAsync(string dataSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.DataShareResource.GetShareDataSetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetShareDataSetAsync (dataSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ShareDataSetResource))" />
      <MemberSignature Language="F#" Value="abstract member GetShareDataSetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.ShareDataSetResource&gt;&gt;&#xA;override this.GetShareDataSetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.ShareDataSetResource&gt;&gt;" Usage="dataShareResource.GetShareDataSetAsync (dataSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.ShareDataSetResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataSetName"> The name of the dataSet. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a DataSet in a share
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/dataSets/{dataSetName}
            Operation Id: DataSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataSetName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetShareDataSets">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataShare.ShareDataSetCollection GetShareDataSets ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataShare.ShareDataSetCollection GetShareDataSets() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.DataShareResource.GetShareDataSets" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetShareDataSets () As ShareDataSetCollection" />
      <MemberSignature Language="F#" Value="abstract member GetShareDataSets : unit -&gt; Azure.ResourceManager.DataShare.ShareDataSetCollection&#xA;override this.GetShareDataSets : unit -&gt; Azure.ResourceManager.DataShare.ShareDataSetCollection" Usage="dataShareResource.GetShareDataSets " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataShare.ShareDataSetCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ShareDataSetResources in the DataShare. </summary>
        <returns> An object representing collection of ShareDataSetResources and their operations over a ShareDataSetResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynchronizationDetails">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt; GetSynchronizationDetails (Azure.ResourceManager.DataShare.Models.ShareSynchronization shareSynchronization, string skipToken = default, string filter = default, string orderby = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt; GetSynchronizationDetails(class Azure.ResourceManager.DataShare.Models.ShareSynchronization shareSynchronization, string skipToken, string filter, string orderby, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.DataShareResource.GetSynchronizationDetails(Azure.ResourceManager.DataShare.Models.ShareSynchronization,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynchronizationDetails (shareSynchronization As ShareSynchronization, Optional skipToken As String = Nothing, Optional filter As String = Nothing, Optional orderby As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SynchronizationDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetSynchronizationDetails : Azure.ResourceManager.DataShare.Models.ShareSynchronization * string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt;&#xA;override this.GetSynchronizationDetails : Azure.ResourceManager.DataShare.Models.ShareSynchronization * string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt;" Usage="dataShareResource.GetSynchronizationDetails (shareSynchronization, skipToken, filter, orderby, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shareSynchronization" Type="Azure.ResourceManager.DataShare.Models.ShareSynchronization" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="shareSynchronization"> Share Synchronization payload. </param>
        <param name="skipToken"> Continuation token. </param>
        <param name="filter"> Filters the results using OData syntax. </param>
        <param name="orderby"> Sorts the results using OData syntax. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List synchronization details
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/listSynchronizationDetails
            Operation Id: Shares_ListSynchronizationDetails
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataShare.Models.SynchronizationDetails" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="shareSynchronization" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynchronizationDetailsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt; GetSynchronizationDetailsAsync (Azure.ResourceManager.DataShare.Models.ShareSynchronization shareSynchronization, string skipToken = default, string filter = default, string orderby = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt; GetSynchronizationDetailsAsync(class Azure.ResourceManager.DataShare.Models.ShareSynchronization shareSynchronization, string skipToken, string filter, string orderby, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.DataShareResource.GetSynchronizationDetailsAsync(Azure.ResourceManager.DataShare.Models.ShareSynchronization,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynchronizationDetailsAsync (shareSynchronization As ShareSynchronization, Optional skipToken As String = Nothing, Optional filter As String = Nothing, Optional orderby As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SynchronizationDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetSynchronizationDetailsAsync : Azure.ResourceManager.DataShare.Models.ShareSynchronization * string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt;&#xA;override this.GetSynchronizationDetailsAsync : Azure.ResourceManager.DataShare.Models.ShareSynchronization * string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt;" Usage="dataShareResource.GetSynchronizationDetailsAsync (shareSynchronization, skipToken, filter, orderby, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shareSynchronization" Type="Azure.ResourceManager.DataShare.Models.ShareSynchronization" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="shareSynchronization"> Share Synchronization payload. </param>
        <param name="skipToken"> Continuation token. </param>
        <param name="filter"> Filters the results using OData syntax. </param>
        <param name="orderby"> Sorts the results using OData syntax. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List synchronization details
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/listSynchronizationDetails
            Operation Id: Shares_ListSynchronizationDetails
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataShare.Models.SynchronizationDetails" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="shareSynchronization" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynchronizations">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.ShareSynchronization&gt; GetSynchronizations (string skipToken = default, string filter = default, string orderby = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataShare.Models.ShareSynchronization&gt; GetSynchronizations(string skipToken, string filter, string orderby, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.DataShareResource.GetSynchronizations(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynchronizations (Optional skipToken As String = Nothing, Optional filter As String = Nothing, Optional orderby As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ShareSynchronization)" />
      <MemberSignature Language="F#" Value="abstract member GetSynchronizations : string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.ShareSynchronization&gt;&#xA;override this.GetSynchronizations : string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.ShareSynchronization&gt;" Usage="dataShareResource.GetSynchronizations (skipToken, filter, orderby, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.ShareSynchronization&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skipToken"> Continuation token. </param>
        <param name="filter"> Filters the results using OData syntax. </param>
        <param name="orderby"> Sorts the results using OData syntax. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List synchronizations of a share
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/listSynchronizations
            Operation Id: Shares_ListSynchronizations
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataShare.Models.ShareSynchronization" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynchronizationsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.ShareSynchronization&gt; GetSynchronizationsAsync (string skipToken = default, string filter = default, string orderby = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataShare.Models.ShareSynchronization&gt; GetSynchronizationsAsync(string skipToken, string filter, string orderby, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.DataShareResource.GetSynchronizationsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynchronizationsAsync (Optional skipToken As String = Nothing, Optional filter As String = Nothing, Optional orderby As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ShareSynchronization)" />
      <MemberSignature Language="F#" Value="abstract member GetSynchronizationsAsync : string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.ShareSynchronization&gt;&#xA;override this.GetSynchronizationsAsync : string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.ShareSynchronization&gt;" Usage="dataShareResource.GetSynchronizationsAsync (skipToken, filter, orderby, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.ShareSynchronization&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skipToken"> Continuation token. </param>
        <param name="filter"> Filters the results using OData syntax. </param>
        <param name="orderby"> Sorts the results using OData syntax. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List synchronizations of a share
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/listSynchronizations
            Operation Id: Shares_ListSynchronizations
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataShare.Models.ShareSynchronization" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataShare.DataShareResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.DataShare.DataShareResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.DataShare.DataShareResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.DataShare.DataShareResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.DataShareResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataShare.DataShareData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataShare.DataShareResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataShare.DataShareData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.DataShareResource.Update(Azure.WaitUntil,Azure.ResourceManager.DataShare.DataShareData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, data As DataShareData, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of DataShareResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.DataShare.DataShareData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.DataShareResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.DataShare.DataShareData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.DataShareResource&gt;" Usage="dataShareResource.Update (waitUntil, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.DataShareResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="data" Type="Azure.ResourceManager.DataShare.DataShareData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="data"> The share payload. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Create a share 
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}
            Operation Id: Shares_Create
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.DataShareResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataShare.DataShareData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataShare.DataShareResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataShare.DataShareData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.DataShareResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.DataShare.DataShareData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, data As DataShareData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of DataShareResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.DataShare.DataShareData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.DataShareResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.DataShare.DataShareData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.DataShareResource&gt;&gt;" Usage="dataShareResource.UpdateAsync (waitUntil, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.DataShareResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="data" Type="Azure.ResourceManager.DataShare.DataShareData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="data"> The share payload. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Create a share 
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}
            Operation Id: Shares_Create
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
