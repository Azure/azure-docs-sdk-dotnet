<Type Name="ShareSubscriptionResource" FullName="Azure.ResourceManager.DataShare.ShareSubscriptionResource">
  <TypeSignature Language="C#" Value="public class ShareSubscriptionResource : Azure.ResourceManager.ArmResource" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ShareSubscriptionResource extends Azure.ResourceManager.ArmResource" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataShare.ShareSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class ShareSubscriptionResource&#xA;Inherits ArmResource" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type ShareSubscriptionResource = class&#xA;    inherit ArmResource" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class ShareSubscriptionResource : Azure.ResourceManager.ArmResource, System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ShareSubscriptionResource extends Azure.ResourceManager.ArmResource implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class ShareSubscriptionResource&#xA;Inherits ArmResource&#xA;Implements IJsonModel(Of ShareSubscriptionData), IPersistableModel(Of ShareSubscriptionData)" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type ShareSubscriptionResource = class&#xA;    inherit ArmResource&#xA;    interface IJsonModel&lt;ShareSubscriptionData&gt;&#xA;    interface IPersistableModel&lt;ShareSubscriptionData&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A Class representing a ShareSubscription along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.DataShare.ShareSubscriptionResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetShareSubscriptionResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.DataShare.DataShareAccountResource" /> using the GetShareSubscription method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ShareSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DataShare.ShareSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelSynchronization">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt; CancelSynchronization (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization shareSubscriptionSynchronization, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt; CancelSynchronization(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization shareSubscriptionSynchronization, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.CancelSynchronization(Azure.WaitUntil,Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelSynchronization (waitUntil As WaitUntil, shareSubscriptionSynchronization As ShareSubscriptionSynchronization, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ShareSubscriptionSynchronization)" />
      <MemberSignature Language="F#" Value="abstract member CancelSynchronization : Azure.WaitUntil * Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&#xA;override this.CancelSynchronization : Azure.WaitUntil * Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;" Usage="shareSubscriptionResource.CancelSynchronization (waitUntil, shareSubscriptionSynchronization, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="shareSubscriptionSynchronization" Type="Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="shareSubscriptionSynchronization"> Share Subscription Synchronization payload. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Request to cancel a synchronization.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/cancelSynchronization</description></item><item><term>Operation Id</term><description>ShareSubscriptions_CancelSynchronization</description></item><item><term>Default Api Version</term><description>2021-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataShare.ShareSubscriptionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="shareSubscriptionSynchronization" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CancelSynchronizationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&gt; CancelSynchronizationAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization shareSubscriptionSynchronization, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&gt; CancelSynchronizationAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization shareSubscriptionSynchronization, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.CancelSynchronizationAsync(Azure.WaitUntil,Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelSynchronizationAsync (waitUntil As WaitUntil, shareSubscriptionSynchronization As ShareSubscriptionSynchronization, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ShareSubscriptionSynchronization))" />
      <MemberSignature Language="F#" Value="abstract member CancelSynchronizationAsync : Azure.WaitUntil * Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&gt;&#xA;override this.CancelSynchronizationAsync : Azure.WaitUntil * Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&gt;" Usage="shareSubscriptionResource.CancelSynchronizationAsync (waitUntil, shareSubscriptionSynchronization, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="shareSubscriptionSynchronization" Type="Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="shareSubscriptionSynchronization"> Share Subscription Synchronization payload. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Request to cancel a synchronization.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/cancelSynchronization</description></item><item><term>Operation Id</term><description>ShareSubscriptions_CancelSynchronization</description></item><item><term>Default Api Version</term><description>2021-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataShare.ShareSubscriptionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="shareSubscriptionSynchronization" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string accountName, string shareSubscriptionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string accountName, string shareSubscriptionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, accountName As String, shareSubscriptionName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.DataShare.ShareSubscriptionResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, accountName, shareSubscriptionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="shareSubscriptionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId"> The subscriptionId. </param>
        <param name="resourceGroupName"> The resourceGroupName. </param>
        <param name="accountName"> The accountName. </param>
        <param name="shareSubscriptionName"> The shareSubscriptionName. </param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.DataShare.ShareSubscriptionResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataShare.ShareSubscriptionData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataShare.ShareSubscriptionData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataShare.ShareSubscriptionResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As ShareSubscriptionData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.DataShare.ShareSubscriptionData" Usage="Azure.ResourceManager.DataShare.ShareSubscriptionResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataShare.ShareSubscriptionData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt; Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt; Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of DataShareOperationResult)" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt;&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt;" Usage="shareSubscriptionResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete a shareSubscription in an account
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}</description></item><item><term>Operation Id</term><description>ShareSubscriptions_Delete</description></item><item><term>Default Api Version</term><description>2021-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataShare.ShareSubscriptionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt;&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt;&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of DataShareOperationResult))" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt;&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt;&gt;" Usage="shareSubscriptionResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete a shareSubscription in an account
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}</description></item><item><term>Operation Id</term><description>ShareSubscriptions_Delete</description></item><item><term>Default Api Version</term><description>2021-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataShare.ShareSubscriptionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ShareSubscriptionResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;" Usage="shareSubscriptionResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a shareSubscription in an account
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}</description></item><item><term>Operation Id</term><description>ShareSubscriptions_Get</description></item><item><term>Default Api Version</term><description>2021-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataShare.ShareSubscriptionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ShareSubscriptionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;&gt;" Usage="shareSubscriptionResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a shareSubscription in an account
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}</description></item><item><term>Operation Id</term><description>ShareSubscriptions_Get</description></item><item><term>Default Api Version</term><description>2021-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataShare.ShareSubscriptionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConsumerSourceDataSets">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.ConsumerSourceDataSet&gt; GetConsumerSourceDataSets (string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataShare.Models.ConsumerSourceDataSet&gt; GetConsumerSourceDataSets(string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetConsumerSourceDataSets(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConsumerSourceDataSets (Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ConsumerSourceDataSet)" />
      <MemberSignature Language="F#" Value="abstract member GetConsumerSourceDataSets : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.ConsumerSourceDataSet&gt;&#xA;override this.GetConsumerSourceDataSets : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.ConsumerSourceDataSet&gt;" Usage="shareSubscriptionResource.GetConsumerSourceDataSets (skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.ConsumerSourceDataSet&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skipToken"> Continuation token. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get source dataSets of a shareSubscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/consumerSourceDataSets</description></item><item><term>Operation Id</term><description>ConsumerSourceDataSets_ListByShareSubscription</description></item><item><term>Default Api Version</term><description>2021-08-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataShare.Models.ConsumerSourceDataSet" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConsumerSourceDataSetsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.ConsumerSourceDataSet&gt; GetConsumerSourceDataSetsAsync (string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataShare.Models.ConsumerSourceDataSet&gt; GetConsumerSourceDataSetsAsync(string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetConsumerSourceDataSetsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConsumerSourceDataSetsAsync (Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ConsumerSourceDataSet)" />
      <MemberSignature Language="F#" Value="abstract member GetConsumerSourceDataSetsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.ConsumerSourceDataSet&gt;&#xA;override this.GetConsumerSourceDataSetsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.ConsumerSourceDataSet&gt;" Usage="shareSubscriptionResource.GetConsumerSourceDataSetsAsync (skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.ConsumerSourceDataSet&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skipToken"> Continuation token. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get source dataSets of a shareSubscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/consumerSourceDataSets</description></item><item><term>Operation Id</term><description>ConsumerSourceDataSets_ListByShareSubscription</description></item><item><term>Default Api Version</term><description>2021-08-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataShare.Models.ConsumerSourceDataSet" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataShareTrigger">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareTriggerResource&gt; GetDataShareTrigger (string triggerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.DataShareTriggerResource&gt; GetDataShareTrigger(string triggerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetDataShareTrigger(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataShareTrigger (triggerName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataShareTriggerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataShareTrigger : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareTriggerResource&gt;&#xA;override this.GetDataShareTrigger : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareTriggerResource&gt;" Usage="shareSubscriptionResource.GetDataShareTrigger (triggerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareTriggerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="triggerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="triggerName"> The name of the trigger. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Trigger in a shareSubscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/triggers/{triggerName}</description></item><item><term>Operation Id</term><description>Triggers_Get</description></item><item><term>Default Api Version</term><description>2021-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataShare.DataShareTriggerResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="triggerName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="triggerName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataShareTriggerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareTriggerResource&gt;&gt; GetDataShareTriggerAsync (string triggerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.DataShareTriggerResource&gt;&gt; GetDataShareTriggerAsync(string triggerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetDataShareTriggerAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataShareTriggerAsync (triggerName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataShareTriggerResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataShareTriggerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareTriggerResource&gt;&gt;&#xA;override this.GetDataShareTriggerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareTriggerResource&gt;&gt;" Usage="shareSubscriptionResource.GetDataShareTriggerAsync (triggerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareTriggerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="triggerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="triggerName"> The name of the trigger. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Trigger in a shareSubscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/triggers/{triggerName}</description></item><item><term>Operation Id</term><description>Triggers_Get</description></item><item><term>Default Api Version</term><description>2021-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataShare.DataShareTriggerResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="triggerName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="triggerName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataShareTriggers">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataShare.DataShareTriggerCollection GetDataShareTriggers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataShare.DataShareTriggerCollection GetDataShareTriggers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetDataShareTriggers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataShareTriggers () As DataShareTriggerCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataShareTriggers : unit -&gt; Azure.ResourceManager.DataShare.DataShareTriggerCollection&#xA;override this.GetDataShareTriggers : unit -&gt; Azure.ResourceManager.DataShare.DataShareTriggerCollection" Usage="shareSubscriptionResource.GetDataShareTriggers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataShare.DataShareTriggerCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataShareTriggerResources in the ShareSubscription. </summary>
        <returns> An object representing collection of DataShareTriggerResources and their operations over a DataShareTriggerResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShareDataSetMapping">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataShare.ShareDataSetMappingResource&gt; GetShareDataSetMapping (string dataSetMappingName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.ShareDataSetMappingResource&gt; GetShareDataSetMapping(string dataSetMappingName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetShareDataSetMapping(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetShareDataSetMapping (dataSetMappingName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ShareDataSetMappingResource)" />
      <MemberSignature Language="F#" Value="abstract member GetShareDataSetMapping : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.ShareDataSetMappingResource&gt;&#xA;override this.GetShareDataSetMapping : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.ShareDataSetMappingResource&gt;" Usage="shareSubscriptionResource.GetShareDataSetMapping (dataSetMappingName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataShare.ShareDataSetMappingResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSetMappingName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataSetMappingName"> The name of the dataSetMapping. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a DataSetMapping in a shareSubscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/dataSetMappings/{dataSetMappingName}</description></item><item><term>Operation Id</term><description>DataSetMappings_Get</description></item><item><term>Default Api Version</term><description>2021-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataShare.ShareDataSetMappingResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataSetMappingName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataSetMappingName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetShareDataSetMappingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.ShareDataSetMappingResource&gt;&gt; GetShareDataSetMappingAsync (string dataSetMappingName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.ShareDataSetMappingResource&gt;&gt; GetShareDataSetMappingAsync(string dataSetMappingName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetShareDataSetMappingAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetShareDataSetMappingAsync (dataSetMappingName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ShareDataSetMappingResource))" />
      <MemberSignature Language="F#" Value="abstract member GetShareDataSetMappingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.ShareDataSetMappingResource&gt;&gt;&#xA;override this.GetShareDataSetMappingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.ShareDataSetMappingResource&gt;&gt;" Usage="shareSubscriptionResource.GetShareDataSetMappingAsync (dataSetMappingName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.ShareDataSetMappingResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSetMappingName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataSetMappingName"> The name of the dataSetMapping. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a DataSetMapping in a shareSubscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/dataSetMappings/{dataSetMappingName}</description></item><item><term>Operation Id</term><description>DataSetMappings_Get</description></item><item><term>Default Api Version</term><description>2021-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataShare.ShareDataSetMappingResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataSetMappingName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataSetMappingName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetShareDataSetMappings">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataShare.ShareDataSetMappingCollection GetShareDataSetMappings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataShare.ShareDataSetMappingCollection GetShareDataSetMappings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetShareDataSetMappings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetShareDataSetMappings () As ShareDataSetMappingCollection" />
      <MemberSignature Language="F#" Value="abstract member GetShareDataSetMappings : unit -&gt; Azure.ResourceManager.DataShare.ShareDataSetMappingCollection&#xA;override this.GetShareDataSetMappings : unit -&gt; Azure.ResourceManager.DataShare.ShareDataSetMappingCollection" Usage="shareSubscriptionResource.GetShareDataSetMappings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataShare.ShareDataSetMappingCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ShareDataSetMappingResources in the ShareSubscription. </summary>
        <returns> An object representing collection of ShareDataSetMappingResources and their operations over a ShareDataSetMappingResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceShareSynchronizationSettings">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.SourceShareSynchronizationSetting&gt; GetSourceShareSynchronizationSettings (string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataShare.Models.SourceShareSynchronizationSetting&gt; GetSourceShareSynchronizationSettings(string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetSourceShareSynchronizationSettings(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSourceShareSynchronizationSettings (Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SourceShareSynchronizationSetting)" />
      <MemberSignature Language="F#" Value="abstract member GetSourceShareSynchronizationSettings : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.SourceShareSynchronizationSetting&gt;&#xA;override this.GetSourceShareSynchronizationSettings : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.SourceShareSynchronizationSetting&gt;" Usage="shareSubscriptionResource.GetSourceShareSynchronizationSettings (skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.SourceShareSynchronizationSetting&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skipToken"> Continuation token. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get synchronization settings set on a share
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/listSourceShareSynchronizationSettings</description></item><item><term>Operation Id</term><description>ShareSubscriptions_ListSourceShareSynchronizationSettings</description></item><item><term>Default Api Version</term><description>2021-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataShare.ShareSubscriptionResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataShare.Models.SourceShareSynchronizationSetting" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceShareSynchronizationSettingsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.SourceShareSynchronizationSetting&gt; GetSourceShareSynchronizationSettingsAsync (string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataShare.Models.SourceShareSynchronizationSetting&gt; GetSourceShareSynchronizationSettingsAsync(string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetSourceShareSynchronizationSettingsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSourceShareSynchronizationSettingsAsync (Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SourceShareSynchronizationSetting)" />
      <MemberSignature Language="F#" Value="abstract member GetSourceShareSynchronizationSettingsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.SourceShareSynchronizationSetting&gt;&#xA;override this.GetSourceShareSynchronizationSettingsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.SourceShareSynchronizationSetting&gt;" Usage="shareSubscriptionResource.GetSourceShareSynchronizationSettingsAsync (skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.SourceShareSynchronizationSetting&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skipToken"> Continuation token. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get synchronization settings set on a share
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/listSourceShareSynchronizationSettings</description></item><item><term>Operation Id</term><description>ShareSubscriptions_ListSourceShareSynchronizationSettings</description></item><item><term>Default Api Version</term><description>2021-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataShare.ShareSubscriptionResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataShare.Models.SourceShareSynchronizationSetting" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynchronizationDetails">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt; GetSynchronizationDetails (Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization shareSubscriptionSynchronization, string skipToken = default, string filter = default, string orderby = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt; GetSynchronizationDetails(class Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization shareSubscriptionSynchronization, string skipToken, string filter, string orderby, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetSynchronizationDetails(Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynchronizationDetails (shareSubscriptionSynchronization As ShareSubscriptionSynchronization, Optional skipToken As String = Nothing, Optional filter As String = Nothing, Optional orderby As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SynchronizationDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetSynchronizationDetails : Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization * string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt;&#xA;override this.GetSynchronizationDetails : Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization * string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt;" Usage="shareSubscriptionResource.GetSynchronizationDetails (shareSubscriptionSynchronization, skipToken, filter, orderby, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shareSubscriptionSynchronization" Type="Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="shareSubscriptionSynchronization"> Share Subscription Synchronization payload. </param>
        <param name="skipToken"> Continuation token. </param>
        <param name="filter"> Filters the results using OData syntax. </param>
        <param name="orderby"> Sorts the results using OData syntax. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List synchronization details
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/listSynchronizationDetails</description></item><item><term>Operation Id</term><description>ShareSubscriptions_ListSynchronizationDetails</description></item><item><term>Default Api Version</term><description>2021-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataShare.ShareSubscriptionResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataShare.Models.SynchronizationDetails" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="shareSubscriptionSynchronization" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynchronizationDetailsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt; GetSynchronizationDetailsAsync (Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization shareSubscriptionSynchronization, string skipToken = default, string filter = default, string orderby = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt; GetSynchronizationDetailsAsync(class Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization shareSubscriptionSynchronization, string skipToken, string filter, string orderby, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetSynchronizationDetailsAsync(Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynchronizationDetailsAsync (shareSubscriptionSynchronization As ShareSubscriptionSynchronization, Optional skipToken As String = Nothing, Optional filter As String = Nothing, Optional orderby As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SynchronizationDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetSynchronizationDetailsAsync : Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization * string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt;&#xA;override this.GetSynchronizationDetailsAsync : Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization * string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt;" Usage="shareSubscriptionResource.GetSynchronizationDetailsAsync (shareSubscriptionSynchronization, skipToken, filter, orderby, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shareSubscriptionSynchronization" Type="Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="shareSubscriptionSynchronization"> Share Subscription Synchronization payload. </param>
        <param name="skipToken"> Continuation token. </param>
        <param name="filter"> Filters the results using OData syntax. </param>
        <param name="orderby"> Sorts the results using OData syntax. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List synchronization details
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/listSynchronizationDetails</description></item><item><term>Operation Id</term><description>ShareSubscriptions_ListSynchronizationDetails</description></item><item><term>Default Api Version</term><description>2021-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataShare.ShareSubscriptionResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataShare.Models.SynchronizationDetails" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="shareSubscriptionSynchronization" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynchronizations">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt; GetSynchronizations (string skipToken = default, string filter = default, string orderby = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt; GetSynchronizations(string skipToken, string filter, string orderby, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetSynchronizations(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynchronizations (Optional skipToken As String = Nothing, Optional filter As String = Nothing, Optional orderby As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ShareSubscriptionSynchronization)" />
      <MemberSignature Language="F#" Value="abstract member GetSynchronizations : string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&#xA;override this.GetSynchronizations : string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;" Usage="shareSubscriptionResource.GetSynchronizations (skipToken, filter, orderby, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skipToken"> Continuation token. </param>
        <param name="filter"> Filters the results using OData syntax. </param>
        <param name="orderby"> Sorts the results using OData syntax. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List synchronizations of a share subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/listSynchronizations</description></item><item><term>Operation Id</term><description>ShareSubscriptions_ListSynchronizations</description></item><item><term>Default Api Version</term><description>2021-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataShare.ShareSubscriptionResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynchronizationsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt; GetSynchronizationsAsync (string skipToken = default, string filter = default, string orderby = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt; GetSynchronizationsAsync(string skipToken, string filter, string orderby, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetSynchronizationsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynchronizationsAsync (Optional skipToken As String = Nothing, Optional filter As String = Nothing, Optional orderby As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ShareSubscriptionSynchronization)" />
      <MemberSignature Language="F#" Value="abstract member GetSynchronizationsAsync : string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&#xA;override this.GetSynchronizationsAsync : string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;" Usage="shareSubscriptionResource.GetSynchronizationsAsync (skipToken, filter, orderby, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skipToken"> Continuation token. </param>
        <param name="filter"> Filters the results using OData syntax. </param>
        <param name="orderby"> Sorts the results using OData syntax. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List synchronizations of a share subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/listSynchronizations</description></item><item><term>Operation Id</term><description>ShareSubscriptions_ListSynchronizations</description></item><item><term>Default Api Version</term><description>2021-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataShare.ShareSubscriptionResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataShare.ShareSubscriptionResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.DataShare.ShareSubscriptionResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.DataShare.ShareSubscriptionResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.DataShare.ShareSubscriptionResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt; Synchronize (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataShare.Models.DataShareSynchronizeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt; Synchronize(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataShare.Models.DataShareSynchronizeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.Synchronize(Azure.WaitUntil,Azure.ResourceManager.DataShare.Models.DataShareSynchronizeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Synchronize (waitUntil As WaitUntil, content As DataShareSynchronizeContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ShareSubscriptionSynchronization)" />
      <MemberSignature Language="F#" Value="abstract member Synchronize : Azure.WaitUntil * Azure.ResourceManager.DataShare.Models.DataShareSynchronizeContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&#xA;override this.Synchronize : Azure.WaitUntil * Azure.ResourceManager.DataShare.Models.DataShareSynchronizeContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;" Usage="shareSubscriptionResource.Synchronize (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataShare.Models.DataShareSynchronizeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Synchronize payload. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Initiate a copy
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/synchronize</description></item><item><term>Operation Id</term><description>ShareSubscriptions_Synchronize</description></item><item><term>Default Api Version</term><description>2021-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataShare.ShareSubscriptionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SynchronizeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&gt; SynchronizeAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataShare.Models.DataShareSynchronizeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&gt; SynchronizeAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataShare.Models.DataShareSynchronizeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.SynchronizeAsync(Azure.WaitUntil,Azure.ResourceManager.DataShare.Models.DataShareSynchronizeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SynchronizeAsync (waitUntil As WaitUntil, content As DataShareSynchronizeContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ShareSubscriptionSynchronization))" />
      <MemberSignature Language="F#" Value="abstract member SynchronizeAsync : Azure.WaitUntil * Azure.ResourceManager.DataShare.Models.DataShareSynchronizeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&gt;&#xA;override this.SynchronizeAsync : Azure.WaitUntil * Azure.ResourceManager.DataShare.Models.DataShareSynchronizeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&gt;" Usage="shareSubscriptionResource.SynchronizeAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataShare.Models.DataShareSynchronizeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Synchronize payload. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Initiate a copy
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/synchronize</description></item><item><term>Operation Id</term><description>ShareSubscriptions_Synchronize</description></item><item><term>Default Api Version</term><description>2021-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataShare.ShareSubscriptionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.DataShare.ShareSubscriptionData IJsonModel&lt;ShareSubscriptionData&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.DataShare.ShareSubscriptionData System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#DataShare#ShareSubscriptionData&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As ShareSubscriptionData Implements IJsonModel(Of ShareSubscriptionData).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataShare.ShareSubscriptionData&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataShare.ShareSubscriptionData" Usage="shareSubscriptionResource.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataShare.ShareSubscriptionData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;ShareSubscriptionData&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#DataShare#ShareSubscriptionData&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of ShareSubscriptionData).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="shareSubscriptionResource.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.DataShare.ShareSubscriptionData IPersistableModel&lt;ShareSubscriptionData&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.DataShare.ShareSubscriptionData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#DataShare#ShareSubscriptionData&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As ShareSubscriptionData Implements IPersistableModel(Of ShareSubscriptionData).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataShare.ShareSubscriptionData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataShare.ShareSubscriptionData" Usage="shareSubscriptionResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataShare.ShareSubscriptionData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;ShareSubscriptionData&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#DataShare#ShareSubscriptionData&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of ShareSubscriptionData).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="shareSubscriptionResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;ShareSubscriptionData&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#DataShare#ShareSubscriptionData&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of ShareSubscriptionData).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="shareSubscriptionResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataShare.ShareSubscriptionData&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataShare.ShareSubscriptionData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataShare.ShareSubscriptionData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.Update(Azure.WaitUntil,Azure.ResourceManager.DataShare.ShareSubscriptionData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, data As ShareSubscriptionData, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ShareSubscriptionResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.DataShare.ShareSubscriptionData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.DataShare.ShareSubscriptionData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;" Usage="shareSubscriptionResource.Update (waitUntil, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="data" Type="Azure.ResourceManager.DataShare.ShareSubscriptionData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="data"> create parameters for shareSubscription. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Create a shareSubscription in an account
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}</description></item><item><term>Operation Id</term><description>ShareSubscriptions_Create</description></item><item><term>Default Api Version</term><description>2021-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataShare.ShareSubscriptionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataShare.ShareSubscriptionData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataShare.ShareSubscriptionData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.DataShare.ShareSubscriptionData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, data As ShareSubscriptionData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ShareSubscriptionResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.DataShare.ShareSubscriptionData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.DataShare.ShareSubscriptionData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;&gt;" Usage="shareSubscriptionResource.UpdateAsync (waitUntil, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="data" Type="Azure.ResourceManager.DataShare.ShareSubscriptionData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="data"> create parameters for shareSubscription. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Create a shareSubscription in an account
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}</description></item><item><term>Operation Id</term><description>ShareSubscriptions_Create</description></item><item><term>Default Api Version</term><description>2021-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataShare.ShareSubscriptionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
