<Type Name="ShareSubscriptionResource" FullName="Azure.ResourceManager.DataShare.ShareSubscriptionResource">
  <TypeSignature Language="C#" Value="public class ShareSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ShareSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataShare.ShareSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class ShareSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type ShareSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing a ShareSubscription along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.DataShare.ShareSubscriptionResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetShareSubscriptionResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.DataShare.DataShareAccountResource" /> using the GetShareSubscription method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ShareSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DataShare.ShareSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelSynchronization">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt; CancelSynchronization (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization shareSubscriptionSynchronization, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt; CancelSynchronization(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization shareSubscriptionSynchronization, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.CancelSynchronization(Azure.WaitUntil,Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelSynchronization (waitUntil As WaitUntil, shareSubscriptionSynchronization As ShareSubscriptionSynchronization, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ShareSubscriptionSynchronization)" />
      <MemberSignature Language="F#" Value="abstract member CancelSynchronization : Azure.WaitUntil * Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&#xA;override this.CancelSynchronization : Azure.WaitUntil * Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;" Usage="shareSubscriptionResource.CancelSynchronization (waitUntil, shareSubscriptionSynchronization, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="shareSubscriptionSynchronization" Type="Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="shareSubscriptionSynchronization"> Share Subscription Synchronization payload. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Request to cancel a synchronization.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/cancelSynchronization
            Operation Id: ShareSubscriptions_CancelSynchronization
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="shareSubscriptionSynchronization" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CancelSynchronizationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&gt; CancelSynchronizationAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization shareSubscriptionSynchronization, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&gt; CancelSynchronizationAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization shareSubscriptionSynchronization, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.CancelSynchronizationAsync(Azure.WaitUntil,Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelSynchronizationAsync (waitUntil As WaitUntil, shareSubscriptionSynchronization As ShareSubscriptionSynchronization, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ShareSubscriptionSynchronization))" />
      <MemberSignature Language="F#" Value="abstract member CancelSynchronizationAsync : Azure.WaitUntil * Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&gt;&#xA;override this.CancelSynchronizationAsync : Azure.WaitUntil * Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&gt;" Usage="shareSubscriptionResource.CancelSynchronizationAsync (waitUntil, shareSubscriptionSynchronization, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="shareSubscriptionSynchronization" Type="Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="shareSubscriptionSynchronization"> Share Subscription Synchronization payload. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Request to cancel a synchronization.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/cancelSynchronization
            Operation Id: ShareSubscriptions_CancelSynchronization
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="shareSubscriptionSynchronization" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string accountName, string shareSubscriptionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string accountName, string shareSubscriptionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, accountName As String, shareSubscriptionName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.DataShare.ShareSubscriptionResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, accountName, shareSubscriptionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="shareSubscriptionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="resourceGroupName">To be added.</param>
        <param name="accountName">To be added.</param>
        <param name="shareSubscriptionName">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.DataShare.ShareSubscriptionResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataShare.ShareSubscriptionData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataShare.ShareSubscriptionData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataShare.ShareSubscriptionResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As ShareSubscriptionData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.DataShare.ShareSubscriptionData" Usage="Azure.ResourceManager.DataShare.ShareSubscriptionResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataShare.ShareSubscriptionData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt; Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt; Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of DataShareOperationResult)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt;&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt;" Usage="shareSubscriptionResource.Delete (waitUntil, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.OperationResponse&gt; Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataShare.Models.OperationResponse&gt; Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of OperationResponse)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.OperationResponse&gt;&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.OperationResponse&gt;" Usage="shareSubscriptionResource.Delete (waitUntil, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.OperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete a shareSubscription in an account
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}
            Operation Id: ShareSubscriptions_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt;&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt;&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of DataShareOperationResult))" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt;&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt;&gt;" Usage="shareSubscriptionResource.DeleteAsync (waitUntil, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.OperationResponse&gt;&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataShare.Models.OperationResponse&gt;&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of OperationResponse))" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.OperationResponse&gt;&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.OperationResponse&gt;&gt;" Usage="shareSubscriptionResource.DeleteAsync (waitUntil, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.DataShareOperationResult&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.OperationResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete a shareSubscription in an account
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}
            Operation Id: ShareSubscriptions_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ShareSubscriptionResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;" Usage="shareSubscriptionResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a shareSubscription in an account
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}
            Operation Id: ShareSubscriptions_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ShareSubscriptionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;&gt;" Usage="shareSubscriptionResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a shareSubscription in an account
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}
            Operation Id: ShareSubscriptions_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConsumerSourceDataSets">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.ConsumerSourceDataSet&gt; GetConsumerSourceDataSets (string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataShare.Models.ConsumerSourceDataSet&gt; GetConsumerSourceDataSets(string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetConsumerSourceDataSets(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConsumerSourceDataSets (Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ConsumerSourceDataSet)" />
      <MemberSignature Language="F#" Value="abstract member GetConsumerSourceDataSets : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.ConsumerSourceDataSet&gt;&#xA;override this.GetConsumerSourceDataSets : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.ConsumerSourceDataSet&gt;" Usage="shareSubscriptionResource.GetConsumerSourceDataSets (skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.ConsumerSourceDataSet&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skipToken"> Continuation token. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get source dataSets of a shareSubscription
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/consumerSourceDataSets
            Operation Id: ConsumerSourceDataSets_ListByShareSubscription
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataShare.Models.ConsumerSourceDataSet" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConsumerSourceDataSetsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.ConsumerSourceDataSet&gt; GetConsumerSourceDataSetsAsync (string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataShare.Models.ConsumerSourceDataSet&gt; GetConsumerSourceDataSetsAsync(string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetConsumerSourceDataSetsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConsumerSourceDataSetsAsync (Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ConsumerSourceDataSet)" />
      <MemberSignature Language="F#" Value="abstract member GetConsumerSourceDataSetsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.ConsumerSourceDataSet&gt;&#xA;override this.GetConsumerSourceDataSetsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.ConsumerSourceDataSet&gt;" Usage="shareSubscriptionResource.GetConsumerSourceDataSetsAsync (skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.ConsumerSourceDataSet&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skipToken"> Continuation token. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get source dataSets of a shareSubscription
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/consumerSourceDataSets
            Operation Id: ConsumerSourceDataSets_ListByShareSubscription
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataShare.Models.ConsumerSourceDataSet" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataSetMapping">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataShare.DataSetMappingResource&gt; GetDataSetMapping (string dataSetMappingName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.DataSetMappingResource&gt; GetDataSetMapping(string dataSetMappingName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetDataSetMapping(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataSetMapping (dataSetMappingName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataSetMappingResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataSetMapping : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.DataSetMappingResource&gt;&#xA;override this.GetDataSetMapping : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.DataSetMappingResource&gt;" Usage="shareSubscriptionResource.GetDataSetMapping (dataSetMappingName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataShare.DataSetMappingResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSetMappingName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="dataSetMappingName"> The name of the dataSetMapping. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a DataSetMapping in a shareSubscription
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/dataSetMappings/{dataSetMappingName}
            Operation Id: DataSetMappings_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataSetMappingName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataSetMappingName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataSetMappingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.DataSetMappingResource&gt;&gt; GetDataSetMappingAsync (string dataSetMappingName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.DataSetMappingResource&gt;&gt; GetDataSetMappingAsync(string dataSetMappingName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetDataSetMappingAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataSetMappingAsync (dataSetMappingName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataSetMappingResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataSetMappingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.DataSetMappingResource&gt;&gt;&#xA;override this.GetDataSetMappingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.DataSetMappingResource&gt;&gt;" Usage="shareSubscriptionResource.GetDataSetMappingAsync (dataSetMappingName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.DataSetMappingResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSetMappingName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="dataSetMappingName"> The name of the dataSetMapping. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a DataSetMapping in a shareSubscription
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/dataSetMappings/{dataSetMappingName}
            Operation Id: DataSetMappings_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataSetMappingName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataSetMappingName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataSetMappings">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataShare.DataSetMappingCollection GetDataSetMappings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataShare.DataSetMappingCollection GetDataSetMappings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetDataSetMappings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataSetMappings () As DataSetMappingCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataSetMappings : unit -&gt; Azure.ResourceManager.DataShare.DataSetMappingCollection&#xA;override this.GetDataSetMappings : unit -&gt; Azure.ResourceManager.DataShare.DataSetMappingCollection" Usage="shareSubscriptionResource.GetDataSetMappings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataShare.DataSetMappingCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataSetMappingResources in the ShareSubscription. </summary>
        <returns> An object representing collection of DataSetMappingResources and their operations over a DataSetMappingResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataShareTrigger">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareTriggerResource&gt; GetDataShareTrigger (string triggerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.DataShareTriggerResource&gt; GetDataShareTrigger(string triggerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetDataShareTrigger(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataShareTrigger (triggerName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataShareTriggerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataShareTrigger : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareTriggerResource&gt;&#xA;override this.GetDataShareTrigger : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareTriggerResource&gt;" Usage="shareSubscriptionResource.GetDataShareTrigger (triggerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareTriggerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="triggerName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="triggerName"> The name of the trigger. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Trigger in a shareSubscription
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/triggers/{triggerName}
            Operation Id: Triggers_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="triggerName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="triggerName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataShareTriggerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareTriggerResource&gt;&gt; GetDataShareTriggerAsync (string triggerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.DataShareTriggerResource&gt;&gt; GetDataShareTriggerAsync(string triggerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetDataShareTriggerAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataShareTriggerAsync (triggerName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataShareTriggerResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataShareTriggerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareTriggerResource&gt;&gt;&#xA;override this.GetDataShareTriggerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareTriggerResource&gt;&gt;" Usage="shareSubscriptionResource.GetDataShareTriggerAsync (triggerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.DataShareTriggerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="triggerName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="triggerName"> The name of the trigger. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Trigger in a shareSubscription
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/triggers/{triggerName}
            Operation Id: Triggers_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="triggerName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="triggerName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataShareTriggers">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataShare.DataShareTriggerCollection GetDataShareTriggers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataShare.DataShareTriggerCollection GetDataShareTriggers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetDataShareTriggers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataShareTriggers () As DataShareTriggerCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataShareTriggers : unit -&gt; Azure.ResourceManager.DataShare.DataShareTriggerCollection&#xA;override this.GetDataShareTriggers : unit -&gt; Azure.ResourceManager.DataShare.DataShareTriggerCollection" Usage="shareSubscriptionResource.GetDataShareTriggers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataShare.DataShareTriggerCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataShareTriggerResources in the ShareSubscription. </summary>
        <returns> An object representing collection of DataShareTriggerResources and their operations over a DataShareTriggerResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShareDataSetMapping">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataShare.ShareDataSetMappingResource&gt; GetShareDataSetMapping (string dataSetMappingName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.ShareDataSetMappingResource&gt; GetShareDataSetMapping(string dataSetMappingName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetShareDataSetMapping(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetShareDataSetMapping (dataSetMappingName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ShareDataSetMappingResource)" />
      <MemberSignature Language="F#" Value="abstract member GetShareDataSetMapping : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.ShareDataSetMappingResource&gt;&#xA;override this.GetShareDataSetMapping : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.ShareDataSetMappingResource&gt;" Usage="shareSubscriptionResource.GetShareDataSetMapping (dataSetMappingName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataShare.ShareDataSetMappingResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSetMappingName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="dataSetMappingName"> The name of the dataSetMapping. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a DataSetMapping in a shareSubscription
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/dataSetMappings/{dataSetMappingName}
            Operation Id: DataSetMappings_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataSetMappingName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataSetMappingName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetShareDataSetMappingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.ShareDataSetMappingResource&gt;&gt; GetShareDataSetMappingAsync (string dataSetMappingName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.ShareDataSetMappingResource&gt;&gt; GetShareDataSetMappingAsync(string dataSetMappingName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetShareDataSetMappingAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetShareDataSetMappingAsync (dataSetMappingName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ShareDataSetMappingResource))" />
      <MemberSignature Language="F#" Value="abstract member GetShareDataSetMappingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.ShareDataSetMappingResource&gt;&gt;&#xA;override this.GetShareDataSetMappingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.ShareDataSetMappingResource&gt;&gt;" Usage="shareSubscriptionResource.GetShareDataSetMappingAsync (dataSetMappingName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.ShareDataSetMappingResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSetMappingName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="dataSetMappingName"> The name of the dataSetMapping. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a DataSetMapping in a shareSubscription
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/dataSetMappings/{dataSetMappingName}
            Operation Id: DataSetMappings_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataSetMappingName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataSetMappingName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetShareDataSetMappings">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataShare.ShareDataSetMappingCollection GetShareDataSetMappings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataShare.ShareDataSetMappingCollection GetShareDataSetMappings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetShareDataSetMappings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetShareDataSetMappings () As ShareDataSetMappingCollection" />
      <MemberSignature Language="F#" Value="abstract member GetShareDataSetMappings : unit -&gt; Azure.ResourceManager.DataShare.ShareDataSetMappingCollection&#xA;override this.GetShareDataSetMappings : unit -&gt; Azure.ResourceManager.DataShare.ShareDataSetMappingCollection" Usage="shareSubscriptionResource.GetShareDataSetMappings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataShare.ShareDataSetMappingCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ShareDataSetMappingResources in the ShareSubscription. </summary>
        <returns> An object representing collection of ShareDataSetMappingResources and their operations over a ShareDataSetMappingResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceShareSynchronizationSettings">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.SourceShareSynchronizationSetting&gt; GetSourceShareSynchronizationSettings (string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataShare.Models.SourceShareSynchronizationSetting&gt; GetSourceShareSynchronizationSettings(string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetSourceShareSynchronizationSettings(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSourceShareSynchronizationSettings (Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SourceShareSynchronizationSetting)" />
      <MemberSignature Language="F#" Value="abstract member GetSourceShareSynchronizationSettings : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.SourceShareSynchronizationSetting&gt;&#xA;override this.GetSourceShareSynchronizationSettings : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.SourceShareSynchronizationSetting&gt;" Usage="shareSubscriptionResource.GetSourceShareSynchronizationSettings (skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.SourceShareSynchronizationSetting&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skipToken"> Continuation token. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get synchronization settings set on a share
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/listSourceShareSynchronizationSettings
            Operation Id: ShareSubscriptions_ListSourceShareSynchronizationSettings
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataShare.Models.SourceShareSynchronizationSetting" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceShareSynchronizationSettingsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.SourceShareSynchronizationSetting&gt; GetSourceShareSynchronizationSettingsAsync (string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataShare.Models.SourceShareSynchronizationSetting&gt; GetSourceShareSynchronizationSettingsAsync(string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetSourceShareSynchronizationSettingsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSourceShareSynchronizationSettingsAsync (Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SourceShareSynchronizationSetting)" />
      <MemberSignature Language="F#" Value="abstract member GetSourceShareSynchronizationSettingsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.SourceShareSynchronizationSetting&gt;&#xA;override this.GetSourceShareSynchronizationSettingsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.SourceShareSynchronizationSetting&gt;" Usage="shareSubscriptionResource.GetSourceShareSynchronizationSettingsAsync (skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.SourceShareSynchronizationSetting&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skipToken"> Continuation token. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get synchronization settings set on a share
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/listSourceShareSynchronizationSettings
            Operation Id: ShareSubscriptions_ListSourceShareSynchronizationSettings
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataShare.Models.SourceShareSynchronizationSetting" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynchronizationDetails">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt; GetSynchronizationDetails (Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization shareSubscriptionSynchronization, string skipToken = default, string filter = default, string orderby = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt; GetSynchronizationDetails(class Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization shareSubscriptionSynchronization, string skipToken, string filter, string orderby, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetSynchronizationDetails(Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynchronizationDetails (shareSubscriptionSynchronization As ShareSubscriptionSynchronization, Optional skipToken As String = Nothing, Optional filter As String = Nothing, Optional orderby As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SynchronizationDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetSynchronizationDetails : Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization * string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt;&#xA;override this.GetSynchronizationDetails : Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization * string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt;" Usage="shareSubscriptionResource.GetSynchronizationDetails (shareSubscriptionSynchronization, skipToken, filter, orderby, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shareSubscriptionSynchronization" Type="Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="shareSubscriptionSynchronization"> Share Subscription Synchronization payload. </param>
        <param name="skipToken"> Continuation token. </param>
        <param name="filter"> Filters the results using OData syntax. </param>
        <param name="orderby"> Sorts the results using OData syntax. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List synchronization details
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/listSynchronizationDetails
            Operation Id: ShareSubscriptions_ListSynchronizationDetails
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataShare.Models.SynchronizationDetails" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="shareSubscriptionSynchronization" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynchronizationDetailsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt; GetSynchronizationDetailsAsync (Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization shareSubscriptionSynchronization, string skipToken = default, string filter = default, string orderby = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt; GetSynchronizationDetailsAsync(class Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization shareSubscriptionSynchronization, string skipToken, string filter, string orderby, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetSynchronizationDetailsAsync(Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynchronizationDetailsAsync (shareSubscriptionSynchronization As ShareSubscriptionSynchronization, Optional skipToken As String = Nothing, Optional filter As String = Nothing, Optional orderby As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SynchronizationDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetSynchronizationDetailsAsync : Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization * string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt;&#xA;override this.GetSynchronizationDetailsAsync : Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization * string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt;" Usage="shareSubscriptionResource.GetSynchronizationDetailsAsync (shareSubscriptionSynchronization, skipToken, filter, orderby, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.SynchronizationDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shareSubscriptionSynchronization" Type="Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="shareSubscriptionSynchronization"> Share Subscription Synchronization payload. </param>
        <param name="skipToken"> Continuation token. </param>
        <param name="filter"> Filters the results using OData syntax. </param>
        <param name="orderby"> Sorts the results using OData syntax. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List synchronization details
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/listSynchronizationDetails
            Operation Id: ShareSubscriptions_ListSynchronizationDetails
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataShare.Models.SynchronizationDetails" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="shareSubscriptionSynchronization" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynchronizations">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt; GetSynchronizations (string skipToken = default, string filter = default, string orderby = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt; GetSynchronizations(string skipToken, string filter, string orderby, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetSynchronizations(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynchronizations (Optional skipToken As String = Nothing, Optional filter As String = Nothing, Optional orderby As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ShareSubscriptionSynchronization)" />
      <MemberSignature Language="F#" Value="abstract member GetSynchronizations : string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&#xA;override this.GetSynchronizations : string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;" Usage="shareSubscriptionResource.GetSynchronizations (skipToken, filter, orderby, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skipToken"> Continuation token. </param>
        <param name="filter"> Filters the results using OData syntax. </param>
        <param name="orderby"> Sorts the results using OData syntax. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List synchronizations of a share subscription
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/listSynchronizations
            Operation Id: ShareSubscriptions_ListSynchronizations
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynchronizationsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt; GetSynchronizationsAsync (string skipToken = default, string filter = default, string orderby = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt; GetSynchronizationsAsync(string skipToken, string filter, string orderby, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetSynchronizationsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynchronizationsAsync (Optional skipToken As String = Nothing, Optional filter As String = Nothing, Optional orderby As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ShareSubscriptionSynchronization)" />
      <MemberSignature Language="F#" Value="abstract member GetSynchronizationsAsync : string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&#xA;override this.GetSynchronizationsAsync : string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;" Usage="shareSubscriptionResource.GetSynchronizationsAsync (skipToken, filter, orderby, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skipToken"> Continuation token. </param>
        <param name="filter"> Filters the results using OData syntax. </param>
        <param name="orderby"> Sorts the results using OData syntax. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List synchronizations of a share subscription
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/listSynchronizations
            Operation Id: ShareSubscriptions_ListSynchronizations
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrigger">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataShare.TriggerResource&gt; GetTrigger (string triggerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.TriggerResource&gt; GetTrigger(string triggerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetTrigger(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTrigger (triggerName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TriggerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetTrigger : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.TriggerResource&gt;&#xA;override this.GetTrigger : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataShare.TriggerResource&gt;" Usage="shareSubscriptionResource.GetTrigger (triggerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataShare.TriggerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="triggerName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="triggerName"> The name of the trigger. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Trigger in a shareSubscription
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/triggers/{triggerName}
            Operation Id: Triggers_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="triggerName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="triggerName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTriggerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.TriggerResource&gt;&gt; GetTriggerAsync (string triggerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataShare.TriggerResource&gt;&gt; GetTriggerAsync(string triggerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetTriggerAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTriggerAsync (triggerName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TriggerResource))" />
      <MemberSignature Language="F#" Value="abstract member GetTriggerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.TriggerResource&gt;&gt;&#xA;override this.GetTriggerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.TriggerResource&gt;&gt;" Usage="shareSubscriptionResource.GetTriggerAsync (triggerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataShare.TriggerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="triggerName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="triggerName"> The name of the trigger. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Trigger in a shareSubscription
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/triggers/{triggerName}
            Operation Id: Triggers_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="triggerName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="triggerName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTriggers">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataShare.TriggerCollection GetTriggers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataShare.TriggerCollection GetTriggers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.GetTriggers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTriggers () As TriggerCollection" />
      <MemberSignature Language="F#" Value="abstract member GetTriggers : unit -&gt; Azure.ResourceManager.DataShare.TriggerCollection&#xA;override this.GetTriggers : unit -&gt; Azure.ResourceManager.DataShare.TriggerCollection" Usage="shareSubscriptionResource.GetTriggers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataShare.TriggerCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of TriggerResources in the ShareSubscription. </summary>
        <returns> An object representing collection of TriggerResources and their operations over a TriggerResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataShare.ShareSubscriptionResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.DataShare.ShareSubscriptionResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.DataShare.ShareSubscriptionResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.DataShare.ShareSubscriptionResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt; Synchronize (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataShare.Models.DataShareSynchronizeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt; Synchronize(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataShare.Models.DataShareSynchronizeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.Synchronize(Azure.WaitUntil,Azure.ResourceManager.DataShare.Models.DataShareSynchronizeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Synchronize (waitUntil As WaitUntil, content As DataShareSynchronizeContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ShareSubscriptionSynchronization)" />
      <MemberSignature Language="F#" Value="abstract member Synchronize : Azure.WaitUntil * Azure.ResourceManager.DataShare.Models.DataShareSynchronizeContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&#xA;override this.Synchronize : Azure.WaitUntil * Azure.ResourceManager.DataShare.Models.DataShareSynchronizeContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;" Usage="shareSubscriptionResource.Synchronize (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataShare.Models.DataShareSynchronizeContent" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Synchronize payload. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Initiate a copy
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/synchronize
            Operation Id: ShareSubscriptions_Synchronize
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt; Synchronize (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataShare.Models.Synchronize synchronize, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt; Synchronize(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataShare.Models.Synchronize synchronize, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.Synchronize(Azure.WaitUntil,Azure.ResourceManager.DataShare.Models.Synchronize,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Synchronize (waitUntil As WaitUntil, synchronize As Synchronize, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ShareSubscriptionSynchronization)" />
      <MemberSignature Language="F#" Value="abstract member Synchronize : Azure.WaitUntil * Azure.ResourceManager.DataShare.Models.Synchronize * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&#xA;override this.Synchronize : Azure.WaitUntil * Azure.ResourceManager.DataShare.Models.Synchronize * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;" Usage="shareSubscriptionResource.Synchronize (waitUntil, synchronize, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="synchronize" Type="Azure.ResourceManager.DataShare.Models.Synchronize" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="synchronize"> Synchronize payload. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Initiate a copy
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/synchronize
            Operation Id: ShareSubscriptions_Synchronize
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="synchronize" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SynchronizeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&gt; SynchronizeAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataShare.Models.DataShareSynchronizeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&gt; SynchronizeAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataShare.Models.DataShareSynchronizeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.SynchronizeAsync(Azure.WaitUntil,Azure.ResourceManager.DataShare.Models.DataShareSynchronizeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SynchronizeAsync (waitUntil As WaitUntil, content As DataShareSynchronizeContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ShareSubscriptionSynchronization))" />
      <MemberSignature Language="F#" Value="abstract member SynchronizeAsync : Azure.WaitUntil * Azure.ResourceManager.DataShare.Models.DataShareSynchronizeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&gt;&#xA;override this.SynchronizeAsync : Azure.WaitUntil * Azure.ResourceManager.DataShare.Models.DataShareSynchronizeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&gt;" Usage="shareSubscriptionResource.SynchronizeAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataShare.Models.DataShareSynchronizeContent" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Synchronize payload. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Initiate a copy
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/synchronize
            Operation Id: ShareSubscriptions_Synchronize
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SynchronizeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&gt; SynchronizeAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataShare.Models.Synchronize synchronize, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&gt; SynchronizeAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataShare.Models.Synchronize synchronize, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.SynchronizeAsync(Azure.WaitUntil,Azure.ResourceManager.DataShare.Models.Synchronize,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SynchronizeAsync (waitUntil As WaitUntil, synchronize As Synchronize, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ShareSubscriptionSynchronization))" />
      <MemberSignature Language="F#" Value="abstract member SynchronizeAsync : Azure.WaitUntil * Azure.ResourceManager.DataShare.Models.Synchronize * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&gt;&#xA;override this.SynchronizeAsync : Azure.WaitUntil * Azure.ResourceManager.DataShare.Models.Synchronize * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&gt;" Usage="shareSubscriptionResource.SynchronizeAsync (waitUntil, synchronize, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.Models.ShareSubscriptionSynchronization&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="synchronize" Type="Azure.ResourceManager.DataShare.Models.Synchronize" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="synchronize"> Synchronize payload. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Initiate a copy
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/synchronize
            Operation Id: ShareSubscriptions_Synchronize
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="synchronize" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataShare.ShareSubscriptionData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataShare.ShareSubscriptionData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.Update(Azure.WaitUntil,Azure.ResourceManager.DataShare.ShareSubscriptionData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, data As ShareSubscriptionData, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ShareSubscriptionResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.DataShare.ShareSubscriptionData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.DataShare.ShareSubscriptionData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;" Usage="shareSubscriptionResource.Update (waitUntil, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="data" Type="Azure.ResourceManager.DataShare.ShareSubscriptionData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="data"> create parameters for shareSubscription. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Create a shareSubscription in an account
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}
            Operation Id: ShareSubscriptions_Create
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataShare.ShareSubscriptionData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataShare.ShareSubscriptionData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataShare.ShareSubscriptionResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.DataShare.ShareSubscriptionData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, data As ShareSubscriptionData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ShareSubscriptionResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.DataShare.ShareSubscriptionData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.DataShare.ShareSubscriptionData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;&gt;" Usage="shareSubscriptionResource.UpdateAsync (waitUntil, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataShare</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataShare.ShareSubscriptionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="data" Type="Azure.ResourceManager.DataShare.ShareSubscriptionData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="data"> create parameters for shareSubscription. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Create a shareSubscription in an account
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}
            Operation Id: ShareSubscriptions_Create
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
