<Type Name="EventHubClientBuilderExtensions" FullName="Microsoft.Extensions.Azure.EventHubClientBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class EventHubClientBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EventHubClientBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Azure.EventHubClientBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module EventHubClientBuilderExtensions" />
  <TypeSignature Language="F#" Value="type EventHubClientBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
               The set of extensions to add the Event Hub client types to the clients builder
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddEventHubConsumerClient&lt;TBuilder&gt;">
      <MemberSignature Language="C#" Value="public static Azure.Core.Extensions.IAzureClientBuilder&lt;Azure.Messaging.EventHubs.EventHubConsumerClient,Azure.Messaging.EventHubs.EventHubConsumerClientOptions&gt; AddEventHubConsumerClient&lt;TBuilder&gt; (this TBuilder builder, string consumerGroup, string partitionId, Azure.Messaging.EventHubs.EventPosition startingPosition, string connectionString) where TBuilder : Azure.Core.Extensions.IAzureClientFactoryBuilder;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.Extensions.IAzureClientBuilder`2&lt;class Azure.Messaging.EventHubs.EventHubConsumerClient, class Azure.Messaging.EventHubs.EventHubConsumerClientOptions&gt; AddEventHubConsumerClient&lt;(class Azure.Core.Extensions.IAzureClientFactoryBuilder) TBuilder&gt;(!!TBuilder builder, string consumerGroup, string partitionId, class Azure.Messaging.EventHubs.EventPosition startingPosition, string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Azure.EventHubClientBuilderExtensions.AddEventHubConsumerClient``1(``0,System.String,System.String,Azure.Messaging.EventHubs.EventPosition,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddEventHubConsumerClient(Of TBuilder As IAzureClientFactoryBuilder) (builder As TBuilder, consumerGroup As String, partitionId As String, startingPosition As EventPosition, connectionString As String) As IAzureClientBuilder(Of EventHubConsumerClient, EventHubConsumerClientOptions)" />
      <MemberSignature Language="F#" Value="static member AddEventHubConsumerClient : 'Builder * string * string * Azure.Messaging.EventHubs.EventPosition * string -&gt; Azure.Core.Extensions.IAzureClientBuilder&lt;Azure.Messaging.EventHubs.EventHubConsumerClient, Azure.Messaging.EventHubs.EventHubConsumerClientOptions&gt; (requires 'Builder :&gt; Azure.Core.Extensions.IAzureClientFactoryBuilder)" Usage="Microsoft.Extensions.Azure.EventHubClientBuilderExtensions.AddEventHubConsumerClient (builder, consumerGroup, partitionId, startingPosition, connectionString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Extensions.IAzureClientBuilder&lt;Azure.Messaging.EventHubs.EventHubConsumerClient,Azure.Messaging.EventHubs.EventHubConsumerClientOptions&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TBuilder">
          <Constraints>
            <InterfaceName>Azure.Core.Extensions.IAzureClientFactoryBuilder</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="TBuilder" RefType="this" />
        <Parameter Name="consumerGroup" Type="System.String" />
        <Parameter Name="partitionId" Type="System.String" />
        <Parameter Name="startingPosition" Type="Azure.Messaging.EventHubs.EventPosition" />
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TBuilder">To be added.</typeparam>
        <param name="builder">To be added.</param>
        <param name="consumerGroup">To be added.</param>
        <param name="partitionId">To be added.</param>
        <param name="startingPosition">To be added.</param>
        <param name="connectionString">To be added.</param>
        <summary>
               Registers a <see cref="T:Azure.Messaging.EventHubs.EventHubConsumerClientOptions" /> instance with the provided <paramref name="connectionString" /></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventHubConsumerClient&lt;TBuilder&gt;">
      <MemberSignature Language="C#" Value="public static Azure.Core.Extensions.IAzureClientBuilder&lt;Azure.Messaging.EventHubs.EventHubConsumerClient,Azure.Messaging.EventHubs.EventHubConsumerClientOptions&gt; AddEventHubConsumerClient&lt;TBuilder&gt; (this TBuilder builder, string consumerGroup, string partitionId, Azure.Messaging.EventHubs.EventPosition startingPosition, string connectionString, string eventHubName) where TBuilder : Azure.Core.Extensions.IAzureClientFactoryBuilder;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.Extensions.IAzureClientBuilder`2&lt;class Azure.Messaging.EventHubs.EventHubConsumerClient, class Azure.Messaging.EventHubs.EventHubConsumerClientOptions&gt; AddEventHubConsumerClient&lt;(class Azure.Core.Extensions.IAzureClientFactoryBuilder) TBuilder&gt;(!!TBuilder builder, string consumerGroup, string partitionId, class Azure.Messaging.EventHubs.EventPosition startingPosition, string connectionString, string eventHubName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Azure.EventHubClientBuilderExtensions.AddEventHubConsumerClient``1(``0,System.String,System.String,Azure.Messaging.EventHubs.EventPosition,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddEventHubConsumerClient(Of TBuilder As IAzureClientFactoryBuilder) (builder As TBuilder, consumerGroup As String, partitionId As String, startingPosition As EventPosition, connectionString As String, eventHubName As String) As IAzureClientBuilder(Of EventHubConsumerClient, EventHubConsumerClientOptions)" />
      <MemberSignature Language="F#" Value="static member AddEventHubConsumerClient : 'Builder * string * string * Azure.Messaging.EventHubs.EventPosition * string * string -&gt; Azure.Core.Extensions.IAzureClientBuilder&lt;Azure.Messaging.EventHubs.EventHubConsumerClient, Azure.Messaging.EventHubs.EventHubConsumerClientOptions&gt; (requires 'Builder :&gt; Azure.Core.Extensions.IAzureClientFactoryBuilder)" Usage="Microsoft.Extensions.Azure.EventHubClientBuilderExtensions.AddEventHubConsumerClient (builder, consumerGroup, partitionId, startingPosition, connectionString, eventHubName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Extensions.IAzureClientBuilder&lt;Azure.Messaging.EventHubs.EventHubConsumerClient,Azure.Messaging.EventHubs.EventHubConsumerClientOptions&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TBuilder">
          <Constraints>
            <InterfaceName>Azure.Core.Extensions.IAzureClientFactoryBuilder</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="TBuilder" RefType="this" />
        <Parameter Name="consumerGroup" Type="System.String" />
        <Parameter Name="partitionId" Type="System.String" />
        <Parameter Name="startingPosition" Type="Azure.Messaging.EventHubs.EventPosition" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TBuilder">To be added.</typeparam>
        <param name="builder">To be added.</param>
        <param name="consumerGroup">To be added.</param>
        <param name="partitionId">To be added.</param>
        <param name="startingPosition">To be added.</param>
        <param name="connectionString">To be added.</param>
        <param name="eventHubName">To be added.</param>
        <summary>
               Registers a <see cref="T:Azure.Messaging.EventHubs.EventHubConsumerClient" /> instance with the provided <paramref name="connectionString" /> and <paramref name="eventHubName" /></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventHubConsumerClient&lt;TBuilder,TConfiguration&gt;">
      <MemberSignature Language="C#" Value="public static Azure.Core.Extensions.IAzureClientBuilder&lt;Azure.Messaging.EventHubs.EventHubConsumerClient,Azure.Messaging.EventHubs.EventHubConsumerClientOptions&gt; AddEventHubConsumerClient&lt;TBuilder,TConfiguration&gt; (this TBuilder builder, TConfiguration configuration) where TBuilder : Azure.Core.Extensions.IAzureClientFactoryBuilderWithConfiguration&lt;TConfiguration&gt;;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.Extensions.IAzureClientBuilder`2&lt;class Azure.Messaging.EventHubs.EventHubConsumerClient, class Azure.Messaging.EventHubs.EventHubConsumerClientOptions&gt; AddEventHubConsumerClient&lt;(class Azure.Core.Extensions.IAzureClientFactoryBuilderWithConfiguration`1&lt;!!TConfiguration&gt;) TBuilder, TConfiguration&gt;(!!TBuilder builder, !!TConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Azure.EventHubClientBuilderExtensions.AddEventHubConsumerClient``2(``0,``1)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddEventHubConsumerClient(Of TBuilder As IAzureClientFactoryBuilderWithConfiguration(Of TConfiguration), TConfiguration As IAzureClientFactoryBuilderWithConfiguration(Of TConfiguration)) (builder As TBuilder, configuration As TConfiguration) As IAzureClientBuilder(Of EventHubConsumerClient, EventHubConsumerClientOptions)" />
      <MemberSignature Language="F#" Value="static member AddEventHubConsumerClient : 'Builder * 'Configuration -&gt; Azure.Core.Extensions.IAzureClientBuilder&lt;Azure.Messaging.EventHubs.EventHubConsumerClient, Azure.Messaging.EventHubs.EventHubConsumerClientOptions&gt; (requires 'Builder :&gt; Azure.Core.Extensions.IAzureClientFactoryBuilderWithConfiguration&lt;'Configuration&gt;)" Usage="Microsoft.Extensions.Azure.EventHubClientBuilderExtensions.AddEventHubConsumerClient (builder, configuration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Extensions.IAzureClientBuilder&lt;Azure.Messaging.EventHubs.EventHubConsumerClient,Azure.Messaging.EventHubs.EventHubConsumerClientOptions&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TBuilder">
          <Constraints>
            <InterfaceName>Azure.Core.Extensions.IAzureClientFactoryBuilderWithConfiguration&lt;TConfiguration&gt;</InterfaceName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TConfiguration" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="TBuilder" RefType="this" />
        <Parameter Name="configuration" Type="TConfiguration" />
      </Parameters>
      <Docs>
        <typeparam name="TBuilder">To be added.</typeparam>
        <typeparam name="TConfiguration">To be added.</typeparam>
        <param name="builder">To be added.</param>
        <param name="configuration">To be added.</param>
        <summary>
               Registers a <see cref="T:Azure.Messaging.EventHubs.EventHubConsumerClient" /> instance with connection options loaded from the provided <paramref name="configuration" /> instance.
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventHubConsumerClientWithNamespace&lt;TBuilder&gt;">
      <MemberSignature Language="C#" Value="public static Azure.Core.Extensions.IAzureClientBuilder&lt;Azure.Messaging.EventHubs.EventHubConsumerClient,Azure.Messaging.EventHubs.EventHubConsumerClientOptions&gt; AddEventHubConsumerClientWithNamespace&lt;TBuilder&gt; (this TBuilder builder, string consumerGroup, string partitionId, Azure.Messaging.EventHubs.EventPosition startingPosition, string fullyQualifiedNamespace, string eventHubName) where TBuilder : Azure.Core.Extensions.IAzureClientFactoryBuilderWithCredential;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.Extensions.IAzureClientBuilder`2&lt;class Azure.Messaging.EventHubs.EventHubConsumerClient, class Azure.Messaging.EventHubs.EventHubConsumerClientOptions&gt; AddEventHubConsumerClientWithNamespace&lt;(class Azure.Core.Extensions.IAzureClientFactoryBuilderWithCredential) TBuilder&gt;(!!TBuilder builder, string consumerGroup, string partitionId, class Azure.Messaging.EventHubs.EventPosition startingPosition, string fullyQualifiedNamespace, string eventHubName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Azure.EventHubClientBuilderExtensions.AddEventHubConsumerClientWithNamespace``1(``0,System.String,System.String,Azure.Messaging.EventHubs.EventPosition,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddEventHubConsumerClientWithNamespace(Of TBuilder As IAzureClientFactoryBuilderWithCredential) (builder As TBuilder, consumerGroup As String, partitionId As String, startingPosition As EventPosition, fullyQualifiedNamespace As String, eventHubName As String) As IAzureClientBuilder(Of EventHubConsumerClient, EventHubConsumerClientOptions)" />
      <MemberSignature Language="F#" Value="static member AddEventHubConsumerClientWithNamespace : 'Builder * string * string * Azure.Messaging.EventHubs.EventPosition * string * string -&gt; Azure.Core.Extensions.IAzureClientBuilder&lt;Azure.Messaging.EventHubs.EventHubConsumerClient, Azure.Messaging.EventHubs.EventHubConsumerClientOptions&gt; (requires 'Builder :&gt; Azure.Core.Extensions.IAzureClientFactoryBuilderWithCredential)" Usage="Microsoft.Extensions.Azure.EventHubClientBuilderExtensions.AddEventHubConsumerClientWithNamespace (builder, consumerGroup, partitionId, startingPosition, fullyQualifiedNamespace, eventHubName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Extensions.IAzureClientBuilder&lt;Azure.Messaging.EventHubs.EventHubConsumerClient,Azure.Messaging.EventHubs.EventHubConsumerClientOptions&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TBuilder">
          <Constraints>
            <InterfaceName>Azure.Core.Extensions.IAzureClientFactoryBuilderWithCredential</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="TBuilder" RefType="this" />
        <Parameter Name="consumerGroup" Type="System.String" />
        <Parameter Name="partitionId" Type="System.String" />
        <Parameter Name="startingPosition" Type="Azure.Messaging.EventHubs.EventPosition" />
        <Parameter Name="fullyQualifiedNamespace" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TBuilder">To be added.</typeparam>
        <param name="builder">To be added.</param>
        <param name="consumerGroup">To be added.</param>
        <param name="partitionId">To be added.</param>
        <param name="startingPosition">To be added.</param>
        <param name="fullyQualifiedNamespace">To be added.</param>
        <param name="eventHubName">To be added.</param>
        <summary>
               Registers a <see cref="T:Azure.Messaging.EventHubs.EventHubConsumerClient" /> instance with the provided <paramref name="fullyQualifiedNamespace" /> and <paramref name="eventHubName" /></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventHubProducerClient&lt;TBuilder&gt;">
      <MemberSignature Language="C#" Value="public static Azure.Core.Extensions.IAzureClientBuilder&lt;Azure.Messaging.EventHubs.EventHubProducerClient,Azure.Messaging.EventHubs.EventHubProducerClientOptions&gt; AddEventHubProducerClient&lt;TBuilder&gt; (this TBuilder builder, string connectionString) where TBuilder : Azure.Core.Extensions.IAzureClientFactoryBuilder;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.Extensions.IAzureClientBuilder`2&lt;class Azure.Messaging.EventHubs.EventHubProducerClient, class Azure.Messaging.EventHubs.EventHubProducerClientOptions&gt; AddEventHubProducerClient&lt;(class Azure.Core.Extensions.IAzureClientFactoryBuilder) TBuilder&gt;(!!TBuilder builder, string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Azure.EventHubClientBuilderExtensions.AddEventHubProducerClient``1(``0,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddEventHubProducerClient(Of TBuilder As IAzureClientFactoryBuilder) (builder As TBuilder, connectionString As String) As IAzureClientBuilder(Of EventHubProducerClient, EventHubProducerClientOptions)" />
      <MemberSignature Language="F#" Value="static member AddEventHubProducerClient : 'Builder * string -&gt; Azure.Core.Extensions.IAzureClientBuilder&lt;Azure.Messaging.EventHubs.EventHubProducerClient, Azure.Messaging.EventHubs.EventHubProducerClientOptions&gt; (requires 'Builder :&gt; Azure.Core.Extensions.IAzureClientFactoryBuilder)" Usage="Microsoft.Extensions.Azure.EventHubClientBuilderExtensions.AddEventHubProducerClient (builder, connectionString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Extensions.IAzureClientBuilder&lt;Azure.Messaging.EventHubs.EventHubProducerClient,Azure.Messaging.EventHubs.EventHubProducerClientOptions&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TBuilder">
          <Constraints>
            <InterfaceName>Azure.Core.Extensions.IAzureClientFactoryBuilder</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="TBuilder" RefType="this" />
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TBuilder">To be added.</typeparam>
        <param name="builder">To be added.</param>
        <param name="connectionString">To be added.</param>
        <summary>
               Registers a <see cref="T:Azure.Messaging.EventHubs.EventHubProducerClient" /> instance with the provided <paramref name="connectionString" /></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventHubProducerClient&lt;TBuilder&gt;">
      <MemberSignature Language="C#" Value="public static Azure.Core.Extensions.IAzureClientBuilder&lt;Azure.Messaging.EventHubs.EventHubProducerClient,Azure.Messaging.EventHubs.EventHubProducerClientOptions&gt; AddEventHubProducerClient&lt;TBuilder&gt; (this TBuilder builder, string connectionString, string eventHubName) where TBuilder : Azure.Core.Extensions.IAzureClientFactoryBuilder;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.Extensions.IAzureClientBuilder`2&lt;class Azure.Messaging.EventHubs.EventHubProducerClient, class Azure.Messaging.EventHubs.EventHubProducerClientOptions&gt; AddEventHubProducerClient&lt;(class Azure.Core.Extensions.IAzureClientFactoryBuilder) TBuilder&gt;(!!TBuilder builder, string connectionString, string eventHubName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Azure.EventHubClientBuilderExtensions.AddEventHubProducerClient``1(``0,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddEventHubProducerClient(Of TBuilder As IAzureClientFactoryBuilder) (builder As TBuilder, connectionString As String, eventHubName As String) As IAzureClientBuilder(Of EventHubProducerClient, EventHubProducerClientOptions)" />
      <MemberSignature Language="F#" Value="static member AddEventHubProducerClient : 'Builder * string * string -&gt; Azure.Core.Extensions.IAzureClientBuilder&lt;Azure.Messaging.EventHubs.EventHubProducerClient, Azure.Messaging.EventHubs.EventHubProducerClientOptions&gt; (requires 'Builder :&gt; Azure.Core.Extensions.IAzureClientFactoryBuilder)" Usage="Microsoft.Extensions.Azure.EventHubClientBuilderExtensions.AddEventHubProducerClient (builder, connectionString, eventHubName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Extensions.IAzureClientBuilder&lt;Azure.Messaging.EventHubs.EventHubProducerClient,Azure.Messaging.EventHubs.EventHubProducerClientOptions&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TBuilder">
          <Constraints>
            <InterfaceName>Azure.Core.Extensions.IAzureClientFactoryBuilder</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="TBuilder" RefType="this" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TBuilder">To be added.</typeparam>
        <param name="builder">To be added.</param>
        <param name="connectionString">To be added.</param>
        <param name="eventHubName">To be added.</param>
        <summary>
               Registers a <see cref="T:Azure.Messaging.EventHubs.EventHubProducerClient" /> instance with the provided <paramref name="connectionString" /> and <paramref name="eventHubName" /></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventHubProducerClient&lt;TBuilder,TConfiguration&gt;">
      <MemberSignature Language="C#" Value="public static Azure.Core.Extensions.IAzureClientBuilder&lt;Azure.Messaging.EventHubs.EventHubProducerClient,Azure.Messaging.EventHubs.EventHubProducerClientOptions&gt; AddEventHubProducerClient&lt;TBuilder,TConfiguration&gt; (this TBuilder builder, TConfiguration configuration) where TBuilder : Azure.Core.Extensions.IAzureClientFactoryBuilderWithConfiguration&lt;TConfiguration&gt;;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.Extensions.IAzureClientBuilder`2&lt;class Azure.Messaging.EventHubs.EventHubProducerClient, class Azure.Messaging.EventHubs.EventHubProducerClientOptions&gt; AddEventHubProducerClient&lt;(class Azure.Core.Extensions.IAzureClientFactoryBuilderWithConfiguration`1&lt;!!TConfiguration&gt;) TBuilder, TConfiguration&gt;(!!TBuilder builder, !!TConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Azure.EventHubClientBuilderExtensions.AddEventHubProducerClient``2(``0,``1)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddEventHubProducerClient(Of TBuilder As IAzureClientFactoryBuilderWithConfiguration(Of TConfiguration), TConfiguration As IAzureClientFactoryBuilderWithConfiguration(Of TConfiguration)) (builder As TBuilder, configuration As TConfiguration) As IAzureClientBuilder(Of EventHubProducerClient, EventHubProducerClientOptions)" />
      <MemberSignature Language="F#" Value="static member AddEventHubProducerClient : 'Builder * 'Configuration -&gt; Azure.Core.Extensions.IAzureClientBuilder&lt;Azure.Messaging.EventHubs.EventHubProducerClient, Azure.Messaging.EventHubs.EventHubProducerClientOptions&gt; (requires 'Builder :&gt; Azure.Core.Extensions.IAzureClientFactoryBuilderWithConfiguration&lt;'Configuration&gt;)" Usage="Microsoft.Extensions.Azure.EventHubClientBuilderExtensions.AddEventHubProducerClient (builder, configuration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Extensions.IAzureClientBuilder&lt;Azure.Messaging.EventHubs.EventHubProducerClient,Azure.Messaging.EventHubs.EventHubProducerClientOptions&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TBuilder">
          <Constraints>
            <InterfaceName>Azure.Core.Extensions.IAzureClientFactoryBuilderWithConfiguration&lt;TConfiguration&gt;</InterfaceName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TConfiguration" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="TBuilder" RefType="this" />
        <Parameter Name="configuration" Type="TConfiguration" />
      </Parameters>
      <Docs>
        <typeparam name="TBuilder">To be added.</typeparam>
        <typeparam name="TConfiguration">To be added.</typeparam>
        <param name="builder">To be added.</param>
        <param name="configuration">To be added.</param>
        <summary>
               Registers a <see cref="T:Azure.Messaging.EventHubs.EventHubProducerClient" /> instance with connection options loaded from the provided <paramref name="configuration" /> instance.
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventHubProducerClientWithNamespace&lt;TBuilder&gt;">
      <MemberSignature Language="C#" Value="public static Azure.Core.Extensions.IAzureClientBuilder&lt;Azure.Messaging.EventHubs.EventHubProducerClient,Azure.Messaging.EventHubs.EventHubProducerClientOptions&gt; AddEventHubProducerClientWithNamespace&lt;TBuilder&gt; (this TBuilder builder, string fullyQualifiedNamespace, string eventHubName) where TBuilder : Azure.Core.Extensions.IAzureClientFactoryBuilderWithCredential;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.Extensions.IAzureClientBuilder`2&lt;class Azure.Messaging.EventHubs.EventHubProducerClient, class Azure.Messaging.EventHubs.EventHubProducerClientOptions&gt; AddEventHubProducerClientWithNamespace&lt;(class Azure.Core.Extensions.IAzureClientFactoryBuilderWithCredential) TBuilder&gt;(!!TBuilder builder, string fullyQualifiedNamespace, string eventHubName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Azure.EventHubClientBuilderExtensions.AddEventHubProducerClientWithNamespace``1(``0,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddEventHubProducerClientWithNamespace(Of TBuilder As IAzureClientFactoryBuilderWithCredential) (builder As TBuilder, fullyQualifiedNamespace As String, eventHubName As String) As IAzureClientBuilder(Of EventHubProducerClient, EventHubProducerClientOptions)" />
      <MemberSignature Language="F#" Value="static member AddEventHubProducerClientWithNamespace : 'Builder * string * string -&gt; Azure.Core.Extensions.IAzureClientBuilder&lt;Azure.Messaging.EventHubs.EventHubProducerClient, Azure.Messaging.EventHubs.EventHubProducerClientOptions&gt; (requires 'Builder :&gt; Azure.Core.Extensions.IAzureClientFactoryBuilderWithCredential)" Usage="Microsoft.Extensions.Azure.EventHubClientBuilderExtensions.AddEventHubProducerClientWithNamespace (builder, fullyQualifiedNamespace, eventHubName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Extensions.IAzureClientBuilder&lt;Azure.Messaging.EventHubs.EventHubProducerClient,Azure.Messaging.EventHubs.EventHubProducerClientOptions&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TBuilder">
          <Constraints>
            <InterfaceName>Azure.Core.Extensions.IAzureClientFactoryBuilderWithCredential</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="TBuilder" RefType="this" />
        <Parameter Name="fullyQualifiedNamespace" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TBuilder">To be added.</typeparam>
        <param name="builder">To be added.</param>
        <param name="fullyQualifiedNamespace">To be added.</param>
        <param name="eventHubName">To be added.</param>
        <summary>
               Registers a <see cref="T:Azure.Messaging.EventHubs.EventHubProducerClient" /> instance with the provided <paramref name="fullyQualifiedNamespace" /> and <paramref name="eventHubName" /></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
