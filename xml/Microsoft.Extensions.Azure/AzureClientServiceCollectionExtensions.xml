<Type Name="AzureClientServiceCollectionExtensions" FullName="Microsoft.Extensions.Azure.AzureClientServiceCollectionExtensions">
  <TypeSignature Language="C#" Value="public static class AzureClientServiceCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AzureClientServiceCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Azure.AzureClientServiceCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module AzureClientServiceCollectionExtensions" />
  <TypeSignature Language="F#" Value="type AzureClientServiceCollectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Azure</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Azure clients builder extensions for <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddAzureClients">
      <MemberSignature Language="C#" Value="public static void AddAzureClients (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Action&lt;Microsoft.Extensions.Azure.AzureClientFactoryBuilder&gt; configureClients);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAzureClients(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class System.Action`1&lt;class Microsoft.Extensions.Azure.AzureClientFactoryBuilder&gt; configureClients) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Azure.AzureClientServiceCollectionExtensions.AddAzureClients(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.Azure.AzureClientFactoryBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddAzureClients (collection As IServiceCollection, configureClients As Action(Of AzureClientFactoryBuilder))" />
      <MemberSignature Language="F#" Value="static member AddAzureClients : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;Microsoft.Extensions.Azure.AzureClientFactoryBuilder&gt; -&gt; unit" Usage="Microsoft.Extensions.Azure.AzureClientServiceCollectionExtensions.AddAzureClients (collection, configureClients)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Azure</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="configureClients" Type="System.Action&lt;Microsoft.Extensions.Azure.AzureClientFactoryBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <param name="configureClients">An <see cref="T:Microsoft.Extensions.Azure.AzureClientFactoryBuilder" /> that can be used to configure the client.</param>
        <summary>
            Adds the <see cref="T:Microsoft.Extensions.Azure.IAzureClientFactory`1" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            Azure SDK log forwarding to <see cref="T:Microsoft.Extensions.Logging.ILogger" /> is enabled once the configured client is created.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAzureClientsCore">
      <MemberSignature Language="C#" Value="public static void AddAzureClientsCore (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAzureClientsCore(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Azure.AzureClientServiceCollectionExtensions.AddAzureClientsCore(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddAzureClientsCore (collection As IServiceCollection)" />
      <MemberSignature Language="F#" Value="static member AddAzureClientsCore : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; unit" Usage="Microsoft.Extensions.Azure.AzureClientServiceCollectionExtensions.AddAzureClientsCore collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Azure</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <summary>
            Adds the minimum essential Azure SDK interop services like <see cref="T:Microsoft.Extensions.Azure.AzureEventSourceLogForwarder" /> and <see cref="T:Microsoft.Extensions.Azure.AzureComponentFactory" /> to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> without registering any client types.
            Azure SDK log forwarding to <see cref="T:Microsoft.Extensions.Logging.ILogger" /> is disabled by default. It can be enabled by calling the <see cref="M:Microsoft.Extensions.Azure.AzureEventSourceLogForwarder.Start" /> method.
            Alternatively, you can use the <see cref="M:Microsoft.Extensions.Azure.AzureClientServiceCollectionExtensions.AddAzureClientsCore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean)" /> overload
            and pass <value>true</value> to enable log forwarding.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAzureClientsCore">
      <MemberSignature Language="C#" Value="public static void AddAzureClientsCore (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, bool enableLogForwarding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAzureClientsCore(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, bool enableLogForwarding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Azure.AzureClientServiceCollectionExtensions.AddAzureClientsCore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddAzureClientsCore (collection As IServiceCollection, enableLogForwarding As Boolean)" />
      <MemberSignature Language="F#" Value="static member AddAzureClientsCore : Microsoft.Extensions.DependencyInjection.IServiceCollection * bool -&gt; unit" Usage="Microsoft.Extensions.Azure.AzureClientServiceCollectionExtensions.AddAzureClientsCore (collection, enableLogForwarding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Azure</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="enableLogForwarding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="collection">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <param name="enableLogForwarding">Whether to enable Azure SDK log forwarding to <see cref="T:Microsoft.Extensions.Logging.ILogger" />. If set to <value>false</value>,
            log forwarding can still be enabled by calling the <see cref="M:Microsoft.Extensions.Azure.AzureEventSourceLogForwarder.Start" /> method. Note that even when setting to <value>true</value>,
            you'll need to either inject the <see cref="T:Microsoft.Extensions.Azure.AzureEventSourceLogForwarder" /> somewhere in your app or retrieve it from the service collection.</param>
        <summary>
            Adds the minimum essential Azure SDK interop services like <see cref="T:Microsoft.Extensions.Azure.AzureEventSourceLogForwarder" /> and <see cref="T:Microsoft.Extensions.Azure.AzureComponentFactory" /> to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> without registering any client types.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
