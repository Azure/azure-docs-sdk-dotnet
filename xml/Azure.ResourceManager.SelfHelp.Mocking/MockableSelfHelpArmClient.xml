<Type Name="MockableSelfHelpArmClient" FullName="Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient">
  <TypeSignature Language="C#" Value="public class MockableSelfHelpArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableSelfHelpArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableSelfHelpArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableSelfHelpArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableSelfHelpArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSelfHelpNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt; CheckSelfHelpNameAvailability (Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent content = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt; CheckSelfHelpNameAvailability(class Azure.Core.ResourceIdentifier scope, class Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.CheckSelfHelpNameAvailability(Azure.Core.ResourceIdentifier,Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckSelfHelpNameAvailability (scope As ResourceIdentifier, Optional content As SelfHelpNameAvailabilityContent = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SelfHelpNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckSelfHelpNameAvailability : Azure.Core.ResourceIdentifier * Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt;&#xA;override this.CheckSelfHelpNameAvailability : Azure.Core.ResourceIdentifier * Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt;" Usage="mockableSelfHelpArmClient.CheckSelfHelpNameAvailability (scope, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="content" Type="Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="content"> The required parameters for availability check. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This API is used to check the uniqueness of a resource name used for a diagnostic, troubleshooter or solutions
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/checkNameAvailability</description></item><item><term>Operation Id</term><description>CheckNameAvailability_CheckAvailability</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSelfHelpNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt;&gt; CheckSelfHelpNameAvailabilityAsync (Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent content = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt;&gt; CheckSelfHelpNameAvailabilityAsync(class Azure.Core.ResourceIdentifier scope, class Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.CheckSelfHelpNameAvailabilityAsync(Azure.Core.ResourceIdentifier,Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckSelfHelpNameAvailabilityAsync (scope As ResourceIdentifier, Optional content As SelfHelpNameAvailabilityContent = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SelfHelpNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckSelfHelpNameAvailabilityAsync : Azure.Core.ResourceIdentifier * Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt;&gt;&#xA;override this.CheckSelfHelpNameAvailabilityAsync : Azure.Core.ResourceIdentifier * Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt;&gt;" Usage="mockableSelfHelpArmClient.CheckSelfHelpNameAvailabilityAsync (scope, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="content" Type="Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="content"> The required parameters for availability check. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This API is used to check the uniqueness of a resource name used for a diagnostic, troubleshooter or solutions
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/checkNameAvailability</description></item><item><term>Operation Id</term><description>CheckNameAvailability_CheckAvailability</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpDiagnostic">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt; GetSelfHelpDiagnostic (Azure.Core.ResourceIdentifier scope, string diagnosticsResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt; GetSelfHelpDiagnostic(class Azure.Core.ResourceIdentifier scope, string diagnosticsResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSelfHelpDiagnostic(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelfHelpDiagnostic (scope As ResourceIdentifier, diagnosticsResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SelfHelpDiagnosticResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSelfHelpDiagnostic : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt;&#xA;override this.GetSelfHelpDiagnostic : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt;" Usage="mockableSelfHelpArmClient.GetSelfHelpDiagnostic (scope, diagnosticsResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="diagnosticsResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="diagnosticsResourceName"> Unique resource name for insight resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the diagnostics using the 'diagnosticsResourceName' you chose while creating the diagnostic.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/diagnostics/{diagnosticsResourceName}</description></item><item><term>Operation Id</term><description>Diagnostics_Get</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="diagnosticsResourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="diagnosticsResourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpDiagnosticAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt;&gt; GetSelfHelpDiagnosticAsync (Azure.Core.ResourceIdentifier scope, string diagnosticsResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt;&gt; GetSelfHelpDiagnosticAsync(class Azure.Core.ResourceIdentifier scope, string diagnosticsResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSelfHelpDiagnosticAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelfHelpDiagnosticAsync (scope As ResourceIdentifier, diagnosticsResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SelfHelpDiagnosticResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSelfHelpDiagnosticAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt;&gt;&#xA;override this.GetSelfHelpDiagnosticAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt;&gt;" Usage="mockableSelfHelpArmClient.GetSelfHelpDiagnosticAsync (scope, diagnosticsResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="diagnosticsResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="diagnosticsResourceName"> Unique resource name for insight resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the diagnostics using the 'diagnosticsResourceName' you chose while creating the diagnostic.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/diagnostics/{diagnosticsResourceName}</description></item><item><term>Operation Id</term><description>Diagnostics_Get</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="diagnosticsResourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="diagnosticsResourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpDiagnosticResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource GetSelfHelpDiagnosticResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource GetSelfHelpDiagnosticResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSelfHelpDiagnosticResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelfHelpDiagnosticResource (id As ResourceIdentifier) As SelfHelpDiagnosticResource" />
      <MemberSignature Language="F#" Value="abstract member GetSelfHelpDiagnosticResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&#xA;override this.GetSelfHelpDiagnosticResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource" Usage="mockableSelfHelpArmClient.GetSelfHelpDiagnosticResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpDiagnostics">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticCollection GetSelfHelpDiagnostics (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticCollection GetSelfHelpDiagnostics(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSelfHelpDiagnostics(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelfHelpDiagnostics (scope As ResourceIdentifier) As SelfHelpDiagnosticCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSelfHelpDiagnostics : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticCollection&#xA;override this.GetSelfHelpDiagnostics : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticCollection" Usage="mockableSelfHelpArmClient.GetSelfHelpDiagnostics scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets a collection of SelfHelpDiagnosticResources in the ArmClient. </summary>
        <returns> An object representing collection of SelfHelpDiagnosticResources and their operations over a SelfHelpDiagnosticResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpDiscoverySolutions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt; GetSelfHelpDiscoverySolutions (Azure.Core.ResourceIdentifier scope, string filter = default, string skiptoken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt; GetSelfHelpDiscoverySolutions(class Azure.Core.ResourceIdentifier scope, string filter, string skiptoken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSelfHelpDiscoverySolutions(Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelfHelpDiscoverySolutions (scope As ResourceIdentifier, Optional filter As String = Nothing, Optional skiptoken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SelfHelpSolutionMetadata)" />
      <MemberSignature Language="F#" Value="abstract member GetSelfHelpDiscoverySolutions : Azure.Core.ResourceIdentifier * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt;&#xA;override this.GetSelfHelpDiscoverySolutions : Azure.Core.ResourceIdentifier * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt;" Usage="mockableSelfHelpArmClient.GetSelfHelpDiscoverySolutions (scope, filter, skiptoken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="skiptoken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="filter"> 'ProblemClassificationId' or 'Id' is a mandatory filter to get solutions ids. It also supports optional 'ResourceType' and 'SolutionType' filters. The filter supports only 'and', 'or' and 'eq' operators. Example: $filter=ProblemClassificationId eq '1ddda5b4-cf6c-4d4f-91ad-bc38ab0e811e'. </param>
        <param name="skiptoken"> Skiptoken is only used if a previous operation returned a partial result. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the relevant Azure diagnostics and solutions using [problemClassification API](https://learn.microsoft.com/rest/api/support/problem-classifications/list?tabs=HTTP)) AND  resourceUri or resourceType.&lt;br/&gt; Discovery Solutions is the initial entry point within Help API, which identifies relevant Azure diagnostics and solutions. We will do our best to return the most effective solutions based on the type of inputs, in the request URL  &lt;br/&gt;&lt;br/&gt; Mandatory input :  problemClassificationId (Use the [problemClassification API](https://learn.microsoft.com/rest/api/support/problem-classifications/list?tabs=HTTP)) &lt;br/&gt;Optional input: resourceUri OR resource Type &lt;br/&gt;&lt;br/&gt; &lt;b&gt;Note: &lt;/b&gt;  ‘requiredInputs’ from Discovery solutions response must be passed via ‘additionalParameters’ as an input to Diagnostics and Solutions API.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/discoverySolutions</description></item><item><term>Operation Id</term><description>DiscoverySolution_List</description></item><item><term>Default Api Version</term><description>2023-09-01-preview</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpDiscoverySolutionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt; GetSelfHelpDiscoverySolutionsAsync (Azure.Core.ResourceIdentifier scope, string filter = default, string skiptoken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt; GetSelfHelpDiscoverySolutionsAsync(class Azure.Core.ResourceIdentifier scope, string filter, string skiptoken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSelfHelpDiscoverySolutionsAsync(Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelfHelpDiscoverySolutionsAsync (scope As ResourceIdentifier, Optional filter As String = Nothing, Optional skiptoken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SelfHelpSolutionMetadata)" />
      <MemberSignature Language="F#" Value="abstract member GetSelfHelpDiscoverySolutionsAsync : Azure.Core.ResourceIdentifier * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt;&#xA;override this.GetSelfHelpDiscoverySolutionsAsync : Azure.Core.ResourceIdentifier * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt;" Usage="mockableSelfHelpArmClient.GetSelfHelpDiscoverySolutionsAsync (scope, filter, skiptoken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="skiptoken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="filter"> 'ProblemClassificationId' or 'Id' is a mandatory filter to get solutions ids. It also supports optional 'ResourceType' and 'SolutionType' filters. The filter supports only 'and', 'or' and 'eq' operators. Example: $filter=ProblemClassificationId eq '1ddda5b4-cf6c-4d4f-91ad-bc38ab0e811e'. </param>
        <param name="skiptoken"> Skiptoken is only used if a previous operation returned a partial result. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the relevant Azure diagnostics and solutions using [problemClassification API](https://learn.microsoft.com/rest/api/support/problem-classifications/list?tabs=HTTP)) AND  resourceUri or resourceType.&lt;br/&gt; Discovery Solutions is the initial entry point within Help API, which identifies relevant Azure diagnostics and solutions. We will do our best to return the most effective solutions based on the type of inputs, in the request URL  &lt;br/&gt;&lt;br/&gt; Mandatory input :  problemClassificationId (Use the [problemClassification API](https://learn.microsoft.com/rest/api/support/problem-classifications/list?tabs=HTTP)) &lt;br/&gt;Optional input: resourceUri OR resource Type &lt;br/&gt;&lt;br/&gt; &lt;b&gt;Note: &lt;/b&gt;  ‘requiredInputs’ from Discovery solutions response must be passed via ‘additionalParameters’ as an input to Diagnostics and Solutions API.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/discoverySolutions</description></item><item><term>Operation Id</term><description>DiscoverySolution_List</description></item><item><term>Default Api Version</term><description>2023-09-01-preview</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpSimplifiedSolution">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionResource&gt; GetSelfHelpSimplifiedSolution (Azure.Core.ResourceIdentifier scope, string simplifiedSolutionsResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionResource&gt; GetSelfHelpSimplifiedSolution(class Azure.Core.ResourceIdentifier scope, string simplifiedSolutionsResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSelfHelpSimplifiedSolution(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelfHelpSimplifiedSolution (scope As ResourceIdentifier, simplifiedSolutionsResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SelfHelpSimplifiedSolutionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSelfHelpSimplifiedSolution : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionResource&gt;&#xA;override this.GetSelfHelpSimplifiedSolution : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionResource&gt;" Usage="mockableSelfHelpArmClient.GetSelfHelpSimplifiedSolution (scope, simplifiedSolutionsResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="simplifiedSolutionsResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="simplifiedSolutionsResourceName"> Simplified Solutions Resource Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the simplified Solutions using the applicable solutionResourceName while creating the simplified Solutions.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/simplifiedSolutions/{simplifiedSolutionsResourceName}</description></item><item><term>Operation Id</term><description>SimplifiedSolutions_Get</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="simplifiedSolutionsResourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="simplifiedSolutionsResourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpSimplifiedSolutionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionResource&gt;&gt; GetSelfHelpSimplifiedSolutionAsync (Azure.Core.ResourceIdentifier scope, string simplifiedSolutionsResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionResource&gt;&gt; GetSelfHelpSimplifiedSolutionAsync(class Azure.Core.ResourceIdentifier scope, string simplifiedSolutionsResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSelfHelpSimplifiedSolutionAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelfHelpSimplifiedSolutionAsync (scope As ResourceIdentifier, simplifiedSolutionsResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SelfHelpSimplifiedSolutionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSelfHelpSimplifiedSolutionAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionResource&gt;&gt;&#xA;override this.GetSelfHelpSimplifiedSolutionAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionResource&gt;&gt;" Usage="mockableSelfHelpArmClient.GetSelfHelpSimplifiedSolutionAsync (scope, simplifiedSolutionsResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="simplifiedSolutionsResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="simplifiedSolutionsResourceName"> Simplified Solutions Resource Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the simplified Solutions using the applicable solutionResourceName while creating the simplified Solutions.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/simplifiedSolutions/{simplifiedSolutionsResourceName}</description></item><item><term>Operation Id</term><description>SimplifiedSolutions_Get</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="simplifiedSolutionsResourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="simplifiedSolutionsResourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpSimplifiedSolutionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionResource GetSelfHelpSimplifiedSolutionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionResource GetSelfHelpSimplifiedSolutionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSelfHelpSimplifiedSolutionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelfHelpSimplifiedSolutionResource (id As ResourceIdentifier) As SelfHelpSimplifiedSolutionResource" />
      <MemberSignature Language="F#" Value="abstract member GetSelfHelpSimplifiedSolutionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionResource&#xA;override this.GetSelfHelpSimplifiedSolutionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionResource" Usage="mockableSelfHelpArmClient.GetSelfHelpSimplifiedSolutionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpSimplifiedSolutions">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionCollection GetSelfHelpSimplifiedSolutions (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionCollection GetSelfHelpSimplifiedSolutions(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSelfHelpSimplifiedSolutions(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelfHelpSimplifiedSolutions (scope As ResourceIdentifier) As SelfHelpSimplifiedSolutionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSelfHelpSimplifiedSolutions : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionCollection&#xA;override this.GetSelfHelpSimplifiedSolutions : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionCollection" Usage="mockableSelfHelpArmClient.GetSelfHelpSimplifiedSolutions scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SelfHelp.SelfHelpSimplifiedSolutionCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets a collection of SelfHelpSimplifiedSolutionResources in the ArmClient. </summary>
        <returns> An object representing collection of SelfHelpSimplifiedSolutionResources and their operations over a SelfHelpSimplifiedSolutionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpSolution">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt; GetSelfHelpSolution (Azure.Core.ResourceIdentifier scope, string solutionResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt; GetSelfHelpSolution(class Azure.Core.ResourceIdentifier scope, string solutionResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSelfHelpSolution(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelfHelpSolution (scope As ResourceIdentifier, solutionResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SelfHelpSolutionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSelfHelpSolution : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;&#xA;override this.GetSelfHelpSolution : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;" Usage="mockableSelfHelpArmClient.GetSelfHelpSolution (scope, solutionResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="solutionResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="solutionResourceName"> Solution resource Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the solution using the applicable solutionResourceName while creating the solution.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/solutions/{solutionResourceName}</description></item><item><term>Operation Id</term><description>Solution_Get</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="solutionResourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="solutionResourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpSolutionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;&gt; GetSelfHelpSolutionAsync (Azure.Core.ResourceIdentifier scope, string solutionResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;&gt; GetSelfHelpSolutionAsync(class Azure.Core.ResourceIdentifier scope, string solutionResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSelfHelpSolutionAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelfHelpSolutionAsync (scope As ResourceIdentifier, solutionResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SelfHelpSolutionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSelfHelpSolutionAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;&gt;&#xA;override this.GetSelfHelpSolutionAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;&gt;" Usage="mockableSelfHelpArmClient.GetSelfHelpSolutionAsync (scope, solutionResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="solutionResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="solutionResourceName"> Solution resource Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the solution using the applicable solutionResourceName while creating the solution.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/solutions/{solutionResourceName}</description></item><item><term>Operation Id</term><description>Solution_Get</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="solutionResourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="solutionResourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpSolutionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource GetSelfHelpSolutionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource GetSelfHelpSolutionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSelfHelpSolutionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelfHelpSolutionResource (id As ResourceIdentifier) As SelfHelpSolutionResource" />
      <MemberSignature Language="F#" Value="abstract member GetSelfHelpSolutionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&#xA;override this.GetSelfHelpSolutionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource" Usage="mockableSelfHelpArmClient.GetSelfHelpSolutionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpSolutions">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SelfHelp.SelfHelpSolutionCollection GetSelfHelpSolutions (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SelfHelp.SelfHelpSolutionCollection GetSelfHelpSolutions(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSelfHelpSolutions(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelfHelpSolutions (scope As ResourceIdentifier) As SelfHelpSolutionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSelfHelpSolutions : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SelfHelp.SelfHelpSolutionCollection&#xA;override this.GetSelfHelpSolutions : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SelfHelp.SelfHelpSolutionCollection" Usage="mockableSelfHelpArmClient.GetSelfHelpSolutions scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SelfHelp.SelfHelpSolutionCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets a collection of SelfHelpSolutionResources in the ArmClient. </summary>
        <returns> An object representing collection of SelfHelpSolutionResources and their operations over a SelfHelpSolutionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpTroubleshooter">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterResource&gt; GetSelfHelpTroubleshooter (Azure.Core.ResourceIdentifier scope, string troubleshooterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterResource&gt; GetSelfHelpTroubleshooter(class Azure.Core.ResourceIdentifier scope, string troubleshooterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSelfHelpTroubleshooter(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelfHelpTroubleshooter (scope As ResourceIdentifier, troubleshooterName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SelfHelpTroubleshooterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSelfHelpTroubleshooter : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterResource&gt;&#xA;override this.GetSelfHelpTroubleshooter : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterResource&gt;" Usage="mockableSelfHelpArmClient.GetSelfHelpTroubleshooter (scope, troubleshooterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="troubleshooterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="troubleshooterName"> Troubleshooter resource Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets troubleshooter instance result which includes the step status/result of the troubleshooter resource name that is being executed.&lt;br/&gt; Get API is used to retrieve the result of a Troubleshooter instance, which includes the status and result of each step in the Troubleshooter workflow. This API requires the Troubleshooter resource name that was created using the Create API.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/troubleshooters/{troubleshooterName}</description></item><item><term>Operation Id</term><description>Troubleshooters_Get</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="troubleshooterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="troubleshooterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpTroubleshooterAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterResource&gt;&gt; GetSelfHelpTroubleshooterAsync (Azure.Core.ResourceIdentifier scope, string troubleshooterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterResource&gt;&gt; GetSelfHelpTroubleshooterAsync(class Azure.Core.ResourceIdentifier scope, string troubleshooterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSelfHelpTroubleshooterAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelfHelpTroubleshooterAsync (scope As ResourceIdentifier, troubleshooterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SelfHelpTroubleshooterResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSelfHelpTroubleshooterAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterResource&gt;&gt;&#xA;override this.GetSelfHelpTroubleshooterAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterResource&gt;&gt;" Usage="mockableSelfHelpArmClient.GetSelfHelpTroubleshooterAsync (scope, troubleshooterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="troubleshooterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="troubleshooterName"> Troubleshooter resource Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets troubleshooter instance result which includes the step status/result of the troubleshooter resource name that is being executed.&lt;br/&gt; Get API is used to retrieve the result of a Troubleshooter instance, which includes the status and result of each step in the Troubleshooter workflow. This API requires the Troubleshooter resource name that was created using the Create API.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/troubleshooters/{troubleshooterName}</description></item><item><term>Operation Id</term><description>Troubleshooters_Get</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="troubleshooterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="troubleshooterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpTroubleshooterResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterResource GetSelfHelpTroubleshooterResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterResource GetSelfHelpTroubleshooterResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSelfHelpTroubleshooterResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelfHelpTroubleshooterResource (id As ResourceIdentifier) As SelfHelpTroubleshooterResource" />
      <MemberSignature Language="F#" Value="abstract member GetSelfHelpTroubleshooterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterResource&#xA;override this.GetSelfHelpTroubleshooterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterResource" Usage="mockableSelfHelpArmClient.GetSelfHelpTroubleshooterResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpTroubleshooters">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterCollection GetSelfHelpTroubleshooters (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterCollection GetSelfHelpTroubleshooters(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSelfHelpTroubleshooters(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelfHelpTroubleshooters (scope As ResourceIdentifier) As SelfHelpTroubleshooterCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSelfHelpTroubleshooters : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterCollection&#xA;override this.GetSelfHelpTroubleshooters : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterCollection" Usage="mockableSelfHelpArmClient.GetSelfHelpTroubleshooters scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SelfHelp.SelfHelpTroubleshooterCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets a collection of SelfHelpTroubleshooterResources in the ArmClient. </summary>
        <returns> An object representing collection of SelfHelpTroubleshooterResources and their operations over a SelfHelpTroubleshooterResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
