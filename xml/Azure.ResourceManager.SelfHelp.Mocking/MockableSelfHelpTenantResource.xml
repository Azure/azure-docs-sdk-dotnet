<Type Name="MockableSelfHelpTenantResource" FullName="Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpTenantResource">
  <TypeSignature Language="C#" Value="public class MockableSelfHelpTenantResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableSelfHelpTenantResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpTenantResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableSelfHelpTenantResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableSelfHelpTenantResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to TenantResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableSelfHelpTenantResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpTenantResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpTenantResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoverSolutions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt; DiscoverSolutions (string filter = default, string skiptoken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt; DiscoverSolutions(string filter, string skiptoken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpTenantResource.DiscoverSolutions(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DiscoverSolutions (Optional filter As String = Nothing, Optional skiptoken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SelfHelpSolutionMetadata)" />
      <MemberSignature Language="F#" Value="abstract member DiscoverSolutions : string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt;&#xA;override this.DiscoverSolutions : string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt;" Usage="mockableSelfHelpTenantResource.DiscoverSolutions (filter, skiptoken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="skiptoken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> 'ProblemClassificationId' is a mandatory filter to get solutions ids. It also supports optional 'ResourceType' and 'SolutionType' filters. The [$filter](https://learn.microsoft.com/en-us/odata/webapi/first-odata-api#filter) supports only 'and', 'or' and 'eq' operators. Example: $filter=ProblemClassificationId eq '1ddda5b4-cf6c-4d4f-91ad-bc38ab0e811e'. </param>
        <param name="skiptoken"> Skiptoken is only used if a previous operation returned a partial result. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the relevant Azure Diagnostics, Solutions and Troubleshooters using [problemClassification API](https://learn.microsoft.com/rest/api/support/problem-classifications/list?tabs=HTTP)) AND  resourceUri or resourceType.&lt;br/&gt; Discovery Solutions is the initial entry point within Help API, which identifies relevant Azure diagnostics and solutions. &lt;br/&gt;&lt;br/&gt; Required Input :  problemClassificationId (Use the [problemClassification API](https://learn.microsoft.com/rest/api/support/problem-classifications/list?tabs=HTTP)) &lt;br/&gt;Optional input: resourceUri OR resource Type &lt;br/&gt;&lt;br/&gt; &lt;b&gt;Note: &lt;/b&gt;  ‘requiredInputs’ from Discovery solutions response must be passed via ‘additionalParameters’ as an input to Diagnostics and Solutions API.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Help/discoverySolutions</description></item><item><term>Operation Id</term><description>DiscoverySolution_List</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoverSolutionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt; DiscoverSolutionsAsync (string filter = default, string skiptoken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt; DiscoverSolutionsAsync(string filter, string skiptoken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpTenantResource.DiscoverSolutionsAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DiscoverSolutionsAsync (Optional filter As String = Nothing, Optional skiptoken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SelfHelpSolutionMetadata)" />
      <MemberSignature Language="F#" Value="abstract member DiscoverSolutionsAsync : string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt;&#xA;override this.DiscoverSolutionsAsync : string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt;" Usage="mockableSelfHelpTenantResource.DiscoverSolutionsAsync (filter, skiptoken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="skiptoken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> 'ProblemClassificationId' is a mandatory filter to get solutions ids. It also supports optional 'ResourceType' and 'SolutionType' filters. The [$filter](https://learn.microsoft.com/en-us/odata/webapi/first-odata-api#filter) supports only 'and', 'or' and 'eq' operators. Example: $filter=ProblemClassificationId eq '1ddda5b4-cf6c-4d4f-91ad-bc38ab0e811e'. </param>
        <param name="skiptoken"> Skiptoken is only used if a previous operation returned a partial result. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the relevant Azure Diagnostics, Solutions and Troubleshooters using [problemClassification API](https://learn.microsoft.com/rest/api/support/problem-classifications/list?tabs=HTTP)) AND  resourceUri or resourceType.&lt;br/&gt; Discovery Solutions is the initial entry point within Help API, which identifies relevant Azure diagnostics and solutions. &lt;br/&gt;&lt;br/&gt; Required Input :  problemClassificationId (Use the [problemClassification API](https://learn.microsoft.com/rest/api/support/problem-classifications/list?tabs=HTTP)) &lt;br/&gt;Optional input: resourceUri OR resource Type &lt;br/&gt;&lt;br/&gt; &lt;b&gt;Note: &lt;/b&gt;  ‘requiredInputs’ from Discovery solutions response must be passed via ‘additionalParameters’ as an input to Diagnostics and Solutions API.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Help/discoverySolutions</description></item><item><term>Operation Id</term><description>DiscoverySolution_List</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoverSolutionsNlp">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SelfHelp.Models.SolutionNlpMetadata&gt; DiscoverSolutionsNlp (Azure.ResourceManager.SelfHelp.Models.DiscoveryNlpContent content = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SelfHelp.Models.SolutionNlpMetadata&gt; DiscoverSolutionsNlp(class Azure.ResourceManager.SelfHelp.Models.DiscoveryNlpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpTenantResource.DiscoverSolutionsNlp(Azure.ResourceManager.SelfHelp.Models.DiscoveryNlpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DiscoverSolutionsNlp (Optional content As DiscoveryNlpContent = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SolutionNlpMetadata)" />
      <MemberSignature Language="F#" Value="abstract member DiscoverSolutionsNlp : Azure.ResourceManager.SelfHelp.Models.DiscoveryNlpContent * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SelfHelp.Models.SolutionNlpMetadata&gt;&#xA;override this.DiscoverSolutionsNlp : Azure.ResourceManager.SelfHelp.Models.DiscoveryNlpContent * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SelfHelp.Models.SolutionNlpMetadata&gt;" Usage="mockableSelfHelpTenantResource.DiscoverSolutionsNlp (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SelfHelp.Models.SolutionNlpMetadata&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.SelfHelp.Models.DiscoveryNlpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Request body for discovering solutions using NLP. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Search for relevant Azure Diagnostics, Solutions and Troubleshooters using a natural language issue summary.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Help/discoverSolutions</description></item><item><term>Operation Id</term><description>DiscoverySolutionNLP_DiscoverSolutions</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SelfHelp.Models.SolutionNlpMetadata" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoverSolutionsNlpAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SelfHelp.Models.SolutionNlpMetadata&gt; DiscoverSolutionsNlpAsync (Azure.ResourceManager.SelfHelp.Models.DiscoveryNlpContent content = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SelfHelp.Models.SolutionNlpMetadata&gt; DiscoverSolutionsNlpAsync(class Azure.ResourceManager.SelfHelp.Models.DiscoveryNlpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpTenantResource.DiscoverSolutionsNlpAsync(Azure.ResourceManager.SelfHelp.Models.DiscoveryNlpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DiscoverSolutionsNlpAsync (Optional content As DiscoveryNlpContent = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SolutionNlpMetadata)" />
      <MemberSignature Language="F#" Value="abstract member DiscoverSolutionsNlpAsync : Azure.ResourceManager.SelfHelp.Models.DiscoveryNlpContent * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SelfHelp.Models.SolutionNlpMetadata&gt;&#xA;override this.DiscoverSolutionsNlpAsync : Azure.ResourceManager.SelfHelp.Models.DiscoveryNlpContent * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SelfHelp.Models.SolutionNlpMetadata&gt;" Usage="mockableSelfHelpTenantResource.DiscoverSolutionsNlpAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SelfHelp.Models.SolutionNlpMetadata&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.SelfHelp.Models.DiscoveryNlpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Request body for discovering solutions using NLP. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Search for relevant Azure Diagnostics, Solutions and Troubleshooters using a natural language issue summary.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Help/discoverSolutions</description></item><item><term>Operation Id</term><description>DiscoverySolutionNLP_DiscoverSolutions</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SelfHelp.Models.SolutionNlpMetadata" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpSolutionById">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionResult&gt; GetSelfHelpSolutionById (string solutionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionResult&gt; GetSelfHelpSolutionById(string solutionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpTenantResource.GetSelfHelpSolutionById(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelfHelpSolutionById (solutionId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SelfHelpSolutionResult)" />
      <MemberSignature Language="F#" Value="abstract member GetSelfHelpSolutionById : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionResult&gt;&#xA;override this.GetSelfHelpSolutionById : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionResult&gt;" Usage="mockableSelfHelpTenantResource.GetSelfHelpSolutionById (solutionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="solutionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="solutionId"> SolutionId is a unique id to identify a solution. You can retrieve the solution id using the Discovery api - https://learn.microsoft.com/en-us/rest/api/help/discovery-solution/list?view=rest-help-2023-09-01-preview&amp;tabs=HTTP. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets Self Help Solutions for a given solutionId. Self Help Solutions consist of rich instructional video tutorials, links and guides to public documentation related to a specific problem that enables users to troubleshoot Azure issues.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Help/selfHelp/{solutionId}</description></item><item><term>Operation Id</term><description>SolutionSelfHelp_Get</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="solutionId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="solutionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpSolutionByIdAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionResult&gt;&gt; GetSelfHelpSolutionByIdAsync (string solutionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionResult&gt;&gt; GetSelfHelpSolutionByIdAsync(string solutionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpTenantResource.GetSelfHelpSolutionByIdAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelfHelpSolutionByIdAsync (solutionId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SelfHelpSolutionResult))" />
      <MemberSignature Language="F#" Value="abstract member GetSelfHelpSolutionByIdAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionResult&gt;&gt;&#xA;override this.GetSelfHelpSolutionByIdAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionResult&gt;&gt;" Usage="mockableSelfHelpTenantResource.GetSelfHelpSolutionByIdAsync (solutionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="solutionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="solutionId"> SolutionId is a unique id to identify a solution. You can retrieve the solution id using the Discovery api - https://learn.microsoft.com/en-us/rest/api/help/discovery-solution/list?view=rest-help-2023-09-01-preview&amp;tabs=HTTP. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets Self Help Solutions for a given solutionId. Self Help Solutions consist of rich instructional video tutorials, links and guides to public documentation related to a specific problem that enables users to troubleshoot Azure issues.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Help/selfHelp/{solutionId}</description></item><item><term>Operation Id</term><description>SolutionSelfHelp_Get</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="solutionId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="solutionId" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
