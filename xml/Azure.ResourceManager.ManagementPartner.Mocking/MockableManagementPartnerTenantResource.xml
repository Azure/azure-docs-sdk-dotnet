<Type Name="MockableManagementPartnerTenantResource" FullName="Azure.ResourceManager.ManagementPartner.Mocking.MockableManagementPartnerTenantResource">
  <TypeSignature Language="C#" Value="public class MockableManagementPartnerTenantResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableManagementPartnerTenantResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ManagementPartner.Mocking.MockableManagementPartnerTenantResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableManagementPartnerTenantResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableManagementPartnerTenantResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ManagementPartner</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to TenantResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableManagementPartnerTenantResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagementPartner.Mocking.MockableManagementPartnerTenantResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagementPartner</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ManagementPartner.Mocking.MockableManagementPartnerTenantResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOperations">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ManagementPartner.Models.OperationResponse&gt; GetOperations (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ManagementPartner.Models.OperationResponse&gt; GetOperations(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagementPartner.Mocking.MockableManagementPartnerTenantResource.GetOperations(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOperations (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of OperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetOperations : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ManagementPartner.Models.OperationResponse&gt;&#xA;override this.GetOperations : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ManagementPartner.Models.OperationResponse&gt;" Usage="mockableManagementPartnerTenantResource.GetOperations cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagementPartner</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ManagementPartner.Models.OperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the operations.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.ManagementPartner/operations</description></item><item><term>Operation Id</term><description>Operation_List</description></item><item><term>Default Api Version</term><description>2018-02-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ManagementPartner.Models.OperationResponse" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOperationsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ManagementPartner.Models.OperationResponse&gt; GetOperationsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ManagementPartner.Models.OperationResponse&gt; GetOperationsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagementPartner.Mocking.MockableManagementPartnerTenantResource.GetOperationsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOperationsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of OperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetOperationsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ManagementPartner.Models.OperationResponse&gt;&#xA;override this.GetOperationsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ManagementPartner.Models.OperationResponse&gt;" Usage="mockableManagementPartnerTenantResource.GetOperationsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagementPartner</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ManagementPartner.Models.OperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the operations.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.ManagementPartner/operations</description></item><item><term>Operation Id</term><description>Operation_List</description></item><item><term>Default Api Version</term><description>2018-02-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ManagementPartner.Models.OperationResponse" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerResponse">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ManagementPartner.PartnerResponseResource&gt; GetPartnerResponse (string partnerId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ManagementPartner.PartnerResponseResource&gt; GetPartnerResponse(string partnerId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagementPartner.Mocking.MockableManagementPartnerTenantResource.GetPartnerResponse(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPartnerResponse (partnerId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PartnerResponseResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPartnerResponse : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ManagementPartner.PartnerResponseResource&gt;&#xA;override this.GetPartnerResponse : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ManagementPartner.PartnerResponseResource&gt;" Usage="mockableManagementPartnerTenantResource.GetPartnerResponse (partnerId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagementPartner</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ManagementPartner.PartnerResponseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partnerId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="partnerId"> Id of the Partner. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the management partner using the partnerId, objectId and tenantId.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.ManagementPartner/partners/{partnerId}</description></item><item><term>Operation Id</term><description>Partner_Get</description></item><item><term>Default Api Version</term><description>2018-02-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ManagementPartner.PartnerResponseResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partnerId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partnerId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerResponseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ManagementPartner.PartnerResponseResource&gt;&gt; GetPartnerResponseAsync (string partnerId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ManagementPartner.PartnerResponseResource&gt;&gt; GetPartnerResponseAsync(string partnerId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagementPartner.Mocking.MockableManagementPartnerTenantResource.GetPartnerResponseAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPartnerResponseAsync (partnerId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PartnerResponseResource))" />
      <MemberSignature Language="F#" Value="abstract member GetPartnerResponseAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ManagementPartner.PartnerResponseResource&gt;&gt;&#xA;override this.GetPartnerResponseAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ManagementPartner.PartnerResponseResource&gt;&gt;" Usage="mockableManagementPartnerTenantResource.GetPartnerResponseAsync (partnerId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagementPartner</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ManagementPartner.PartnerResponseResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partnerId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="partnerId"> Id of the Partner. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the management partner using the partnerId, objectId and tenantId.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.ManagementPartner/partners/{partnerId}</description></item><item><term>Operation Id</term><description>Partner_Get</description></item><item><term>Default Api Version</term><description>2018-02-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ManagementPartner.PartnerResponseResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partnerId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partnerId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerResponses">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagementPartner.PartnerResponseCollection GetPartnerResponses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagementPartner.PartnerResponseCollection GetPartnerResponses() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagementPartner.Mocking.MockableManagementPartnerTenantResource.GetPartnerResponses" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPartnerResponses () As PartnerResponseCollection" />
      <MemberSignature Language="F#" Value="abstract member GetPartnerResponses : unit -&gt; Azure.ResourceManager.ManagementPartner.PartnerResponseCollection&#xA;override this.GetPartnerResponses : unit -&gt; Azure.ResourceManager.ManagementPartner.PartnerResponseCollection" Usage="mockableManagementPartnerTenantResource.GetPartnerResponses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagementPartner</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagementPartner.PartnerResponseCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of PartnerResponseResources in the TenantResource. </summary>
        <returns> An object representing collection of PartnerResponseResources and their operations over a PartnerResponseResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
