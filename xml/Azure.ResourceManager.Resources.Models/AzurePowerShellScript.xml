<Type Name="AzurePowerShellScript" FullName="Azure.ResourceManager.Resources.Models.AzurePowerShellScript">
  <TypeSignature Language="C#" Value="public class AzurePowerShellScript : Azure.ResourceManager.Resources.ArmDeploymentScriptData, System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AzurePowerShellScript extends Azure.ResourceManager.Resources.ArmDeploymentScriptData implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Resources.Models.AzurePowerShellScript" />
  <TypeSignature Language="VB.NET" Value="Public Class AzurePowerShellScript&#xA;Inherits ArmDeploymentScriptData&#xA;Implements IJsonModel(Of AzurePowerShellScript), IPersistableModel(Of AzurePowerShellScript)" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type AzurePowerShellScript = class&#xA;    inherit ArmDeploymentScriptData&#xA;    interface IJsonModel&lt;AzurePowerShellScript&gt;&#xA;    interface IPersistableModel&lt;AzurePowerShellScript&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class AzurePowerShellScript : Azure.ResourceManager.Resources.ArmDeploymentScriptData" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AzurePowerShellScript extends Azure.ResourceManager.Resources.ArmDeploymentScriptData" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class AzurePowerShellScript&#xA;Inherits ArmDeploymentScriptData" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type AzurePowerShellScript = class&#xA;    inherit ArmDeploymentScriptData" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
    <AssemblyVersion>1.6.0.0</AssemblyVersion>
    <AssemblyVersion>1.7.0.0</AssemblyVersion>
    <AssemblyVersion>1.7.1.0</AssemblyVersion>
    <AssemblyVersion>1.7.2.0</AssemblyVersion>
    <AssemblyVersion>1.7.3.0</AssemblyVersion>
    <AssemblyVersion>1.8.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.Resources.ArmDeploymentScriptData</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Object model for the Azure PowerShell script. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AzurePowerShellScript (Azure.Core.AzureLocation location, TimeSpan retentionInterval, string azPowerShellVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Azure.Core.AzureLocation location, valuetype System.TimeSpan retentionInterval, string azPowerShellVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.#ctor(Azure.Core.AzureLocation,System.TimeSpan,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (location As AzureLocation, retentionInterval As TimeSpan, azPowerShellVersion As String)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.Resources.Models.AzurePowerShellScript : Azure.Core.AzureLocation * TimeSpan * string -&gt; Azure.ResourceManager.Resources.Models.AzurePowerShellScript" Usage="new Azure.ResourceManager.Resources.Models.AzurePowerShellScript (location, retentionInterval, azPowerShellVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.7.0.0</AssemblyVersion>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="retentionInterval" Type="System.TimeSpan" />
        <Parameter Name="azPowerShellVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the ACI and the storage account for the deployment script. </param>
        <param name="retentionInterval"> Interval for which the service retains the script resource after it reaches a terminal state. Resource will be deleted when this duration expires. Duration is based on ISO 8601 pattern (for example P1D means one day). </param>
        <param name="azPowerShellVersion"> Azure PowerShell module version to be used. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Resources.Models.AzurePowerShellScript" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="azPowerShellVersion" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public string Arguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Arguments" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public Property Arguments As String" />
      <MemberSignature Language="F#" Value="member this.Arguments : string with get, set" Usage="Azure.ResourceManager.Resources.Models.AzurePowerShellScript.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.7.0.0</AssemblyVersion>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Command line arguments to pass to the script. Arguments are separated by spaces. ex: -Name blue* -Location 'West US 2'. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AzPowerShellVersion">
      <MemberSignature Language="C#" Value="public string AzPowerShellVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AzPowerShellVersion" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.AzPowerShellVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property AzPowerShellVersion As String" />
      <MemberSignature Language="F#" Value="member this.AzPowerShellVersion : string with get, set" Usage="Azure.ResourceManager.Resources.Models.AzurePowerShellScript.AzPowerShellVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.7.0.0</AssemblyVersion>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Azure PowerShell module version to be used. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanupPreference">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Resources.Models.ScriptCleanupOptions? CleanupPreference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Resources.Models.ScriptCleanupOptions&gt; CleanupPreference" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.CleanupPreference" />
      <MemberSignature Language="VB.NET" Value="Public Property CleanupPreference As Nullable(Of ScriptCleanupOptions)" />
      <MemberSignature Language="F#" Value="member this.CleanupPreference : Nullable&lt;Azure.ResourceManager.Resources.Models.ScriptCleanupOptions&gt; with get, set" Usage="Azure.ResourceManager.Resources.Models.AzurePowerShellScript.CleanupPreference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.7.0.0</AssemblyVersion>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.Resources.Models.ScriptCleanupOptions&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The clean up preference when the script execution gets in a terminal state. Default setting is 'Always'. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerGroupName">
      <MemberSignature Language="C#" Value="public string ContainerGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContainerGroupName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.ContainerGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property ContainerGroupName As String" />
      <MemberSignature Language="F#" Value="member this.ContainerGroupName : string with get, set" Usage="Azure.ResourceManager.Resources.Models.AzurePowerShellScript.ContainerGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.7.0.0</AssemblyVersion>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Container group name, if not specified then the name will get auto-generated. Not specifying a 'containerGroupName' indicates the system to generate a unique name which might end up flagging an Azure Policy as non-compliant. Use 'containerGroupName' when you have an Azure Policy that expects a specific naming convention or when you want to fully control the name. 'containerGroupName' property must be between 1 and 63 characters long, must contain only lowercase letters, numbers, and dashes and it cannot start or end with a dash and consecutive dashes are not allowed. To specify a 'containerGroupName', add the following object to properties: { "containerSettings": { "containerGroupName": "contoso-container" } }. If you do not want to specify a 'containerGroupName' then do not add 'containerSettings' property. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvironmentVariables">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.ResourceManager.Resources.Models.ScriptEnvironmentVariable&gt; EnvironmentVariables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.ResourceManager.Resources.Models.ScriptEnvironmentVariable&gt; EnvironmentVariables" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.EnvironmentVariables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvironmentVariables As IList(Of ScriptEnvironmentVariable)" />
      <MemberSignature Language="F#" Value="member this.EnvironmentVariables : System.Collections.Generic.IList&lt;Azure.ResourceManager.Resources.Models.ScriptEnvironmentVariable&gt;" Usage="Azure.ResourceManager.Resources.Models.AzurePowerShellScript.EnvironmentVariables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.7.0.0</AssemblyVersion>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.ResourceManager.Resources.Models.ScriptEnvironmentVariable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The environment variables to pass over to the script. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceUpdateTag">
      <MemberSignature Language="C#" Value="public string ForceUpdateTag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ForceUpdateTag" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.ForceUpdateTag" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceUpdateTag As String" />
      <MemberSignature Language="F#" Value="member this.ForceUpdateTag : string with get, set" Usage="Azure.ResourceManager.Resources.Models.AzurePowerShellScript.ForceUpdateTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.7.0.0</AssemblyVersion>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets or sets how the deployment script should be forced to execute even if the script resource has not changed. Can be current time stamp or a GUID. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outputs">
      <MemberSignature Language="C#" Value="public BinaryData Outputs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData Outputs" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.Outputs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Outputs As BinaryData" />
      <MemberSignature Language="F#" Value="member this.Outputs : BinaryData" Usage="Azure.ResourceManager.Resources.Models.AzurePowerShellScript.Outputs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.7.0.0</AssemblyVersion>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            List of script outputs.
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryScriptUri">
      <MemberSignature Language="C#" Value="public Uri PrimaryScriptUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri PrimaryScriptUri" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.PrimaryScriptUri" />
      <MemberSignature Language="VB.NET" Value="Public Property PrimaryScriptUri As Uri" />
      <MemberSignature Language="F#" Value="member this.PrimaryScriptUri : Uri with get, set" Usage="Azure.ResourceManager.Resources.Models.AzurePowerShellScript.PrimaryScriptUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.7.0.0</AssemblyVersion>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Uri for the script. This is the entry point for the external script. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvisioningState">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Resources.Models.ScriptProvisioningState? ProvisioningState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Resources.Models.ScriptProvisioningState&gt; ProvisioningState" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.ProvisioningState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProvisioningState As Nullable(Of ScriptProvisioningState)" />
      <MemberSignature Language="F#" Value="member this.ProvisioningState : Nullable&lt;Azure.ResourceManager.Resources.Models.ScriptProvisioningState&gt;" Usage="Azure.ResourceManager.Resources.Models.AzurePowerShellScript.ProvisioningState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.7.0.0</AssemblyVersion>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.Resources.Models.ScriptProvisioningState&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> State of the script execution. This only appears in the response. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetentionInterval">
      <MemberSignature Language="C#" Value="public TimeSpan RetentionInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RetentionInterval" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.RetentionInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property RetentionInterval As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.RetentionInterval : TimeSpan with get, set" Usage="Azure.ResourceManager.Resources.Models.AzurePowerShellScript.RetentionInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.7.0.0</AssemblyVersion>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Interval for which the service retains the script resource after it reaches a terminal state. Resource will be deleted when this duration expires. Duration is based on ISO 8601 pattern (for example P1D means one day). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptContent">
      <MemberSignature Language="C#" Value="public string ScriptContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScriptContent" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.ScriptContent" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptContent As String" />
      <MemberSignature Language="F#" Value="member this.ScriptContent : string with get, set" Usage="Azure.ResourceManager.Resources.Models.AzurePowerShellScript.ScriptContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.7.0.0</AssemblyVersion>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Script body. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Resources.Models.ScriptStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Resources.Models.ScriptStatus Status" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As ScriptStatus" />
      <MemberSignature Language="F#" Value="member this.Status : Azure.ResourceManager.Resources.Models.ScriptStatus" Usage="Azure.ResourceManager.Resources.Models.AzurePowerShellScript.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.7.0.0</AssemblyVersion>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.Models.ScriptStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Contains the results of script execution. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccountSettings">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Resources.Models.ScriptStorageConfiguration StorageAccountSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Resources.Models.ScriptStorageConfiguration StorageAccountSettings" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.StorageAccountSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property StorageAccountSettings As ScriptStorageConfiguration" />
      <MemberSignature Language="F#" Value="member this.StorageAccountSettings : Azure.ResourceManager.Resources.Models.ScriptStorageConfiguration with get, set" Usage="Azure.ResourceManager.Resources.Models.AzurePowerShellScript.StorageAccountSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.7.0.0</AssemblyVersion>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.Models.ScriptStorageConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Storage Account settings. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportingScriptUris">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Uri&gt; SupportingScriptUris { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Uri&gt; SupportingScriptUris" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.SupportingScriptUris" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportingScriptUris As IList(Of Uri)" />
      <MemberSignature Language="F#" Value="member this.SupportingScriptUris : System.Collections.Generic.IList&lt;Uri&gt;" Usage="Azure.ResourceManager.Resources.Models.AzurePowerShellScript.SupportingScriptUris" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.7.0.0</AssemblyVersion>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Supporting files for the external script. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.Resources.Models.AzurePowerShellScript IJsonModel&lt;AzurePowerShellScript&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.Resources.Models.AzurePowerShellScript System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#Resources#Models#AzurePowerShellScript&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As AzurePowerShellScript Implements IJsonModel(Of AzurePowerShellScript).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Resources.Models.AzurePowerShellScript&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Resources.Models.AzurePowerShellScript" Usage="azurePowerShellScript.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.Models.AzurePowerShellScript</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;AzurePowerShellScript&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#Resources#Models#AzurePowerShellScript&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of AzurePowerShellScript).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="azurePowerShellScript.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.Resources.Models.AzurePowerShellScript IPersistableModel&lt;AzurePowerShellScript&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.Resources.Models.AzurePowerShellScript System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Resources#Models#AzurePowerShellScript&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As AzurePowerShellScript Implements IPersistableModel(Of AzurePowerShellScript).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Resources.Models.AzurePowerShellScript&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Resources.Models.AzurePowerShellScript" Usage="azurePowerShellScript.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.Models.AzurePowerShellScript</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;AzurePowerShellScript&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Resources#Models#AzurePowerShellScript&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of AzurePowerShellScript).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="azurePowerShellScript.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;AzurePowerShellScript&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Resources#Models#AzurePowerShellScript&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of AzurePowerShellScript).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="azurePowerShellScript.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Resources.Models.AzurePowerShellScript&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public TimeSpan? Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; Timeout" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzurePowerShellScript.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Nullable(Of TimeSpan)" />
      <MemberSignature Language="F#" Value="member this.Timeout : Nullable&lt;TimeSpan&gt; with get, set" Usage="Azure.ResourceManager.Resources.Models.AzurePowerShellScript.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.7.0.0</AssemblyVersion>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Maximum allowed script execution time specified in ISO 8601 format. Default value is P1D. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
