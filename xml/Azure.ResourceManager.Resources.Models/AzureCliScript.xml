<Type Name="AzureCliScript" FullName="Azure.ResourceManager.Resources.Models.AzureCliScript">
  <TypeSignature Language="C#" Value="public class AzureCliScript : Azure.ResourceManager.Resources.ArmDeploymentScriptData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AzureCliScript extends Azure.ResourceManager.Resources.ArmDeploymentScriptData" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Resources.Models.AzureCliScript" />
  <TypeSignature Language="VB.NET" Value="Public Class AzureCliScript&#xA;Inherits ArmDeploymentScriptData" />
  <TypeSignature Language="F#" Value="type AzureCliScript = class&#xA;    inherit ArmDeploymentScriptData" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.Resources.ArmDeploymentScriptData</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Object model for the Azure CLI script. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AzureCliScript (Azure.Core.AzureLocation location, TimeSpan retentionInterval, string azCliVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Azure.Core.AzureLocation location, valuetype System.TimeSpan retentionInterval, string azCliVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Models.AzureCliScript.#ctor(Azure.Core.AzureLocation,System.TimeSpan,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (location As AzureLocation, retentionInterval As TimeSpan, azCliVersion As String)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.Resources.Models.AzureCliScript : Azure.Core.AzureLocation * TimeSpan * string -&gt; Azure.ResourceManager.Resources.Models.AzureCliScript" Usage="new Azure.ResourceManager.Resources.Models.AzureCliScript (location, retentionInterval, azCliVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="retentionInterval" Type="System.TimeSpan" />
        <Parameter Name="azCliVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the ACI and the storage account for the deployment script. </param>
        <param name="retentionInterval"> Interval for which the service retains the script resource after it reaches a terminal state. Resource will be deleted when this duration expires. Duration is based on ISO 8601 pattern (for example P1D means one day). </param>
        <param name="azCliVersion"> Azure CLI module version to be used. </param>
        <summary> Initializes a new instance of AzureCliScript. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="azCliVersion" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public string Arguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Arguments" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzureCliScript.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public Property Arguments As String" />
      <MemberSignature Language="F#" Value="member this.Arguments : string with get, set" Usage="Azure.ResourceManager.Resources.Models.AzureCliScript.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Command line arguments to pass to the script. Arguments are separated by spaces. ex: -Name blue* -Location 'West US 2'. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AzCliVersion">
      <MemberSignature Language="C#" Value="public string AzCliVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AzCliVersion" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzureCliScript.AzCliVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property AzCliVersion As String" />
      <MemberSignature Language="F#" Value="member this.AzCliVersion : string with get, set" Usage="Azure.ResourceManager.Resources.Models.AzureCliScript.AzCliVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Azure CLI module version to be used. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanupPreference">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Resources.Models.ScriptCleanupOptions? CleanupPreference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Resources.Models.ScriptCleanupOptions&gt; CleanupPreference" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzureCliScript.CleanupPreference" />
      <MemberSignature Language="VB.NET" Value="Public Property CleanupPreference As Nullable(Of ScriptCleanupOptions)" />
      <MemberSignature Language="F#" Value="member this.CleanupPreference : Nullable&lt;Azure.ResourceManager.Resources.Models.ScriptCleanupOptions&gt; with get, set" Usage="Azure.ResourceManager.Resources.Models.AzureCliScript.CleanupPreference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.Resources.Models.ScriptCleanupOptions&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The clean up preference when the script execution gets in a terminal state. Default setting is 'Always'. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerGroupName">
      <MemberSignature Language="C#" Value="public string ContainerGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContainerGroupName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzureCliScript.ContainerGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property ContainerGroupName As String" />
      <MemberSignature Language="F#" Value="member this.ContainerGroupName : string with get, set" Usage="Azure.ResourceManager.Resources.Models.AzureCliScript.ContainerGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Container group name, if not specified then the name will get auto-generated. Not specifying a 'containerGroupName' indicates the system to generate a unique name which might end up flagging an Azure Policy as non-compliant. Use 'containerGroupName' when you have an Azure Policy that expects a specific naming convention or when you want to fully control the name. 'containerGroupName' property must be between 1 and 63 characters long, must contain only lowercase letters, numbers, and dashes and it cannot start or end with a dash and consecutive dashes are not allowed. To specify a 'containerGroupName', add the following object to properties: { "containerSettings": { "containerGroupName": "contoso-container" } }. If you do not want to specify a 'containerGroupName' then do not add 'containerSettings' property. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvironmentVariables">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.ResourceManager.Resources.Models.ScriptEnvironmentVariable&gt; EnvironmentVariables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.ResourceManager.Resources.Models.ScriptEnvironmentVariable&gt; EnvironmentVariables" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzureCliScript.EnvironmentVariables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvironmentVariables As IList(Of ScriptEnvironmentVariable)" />
      <MemberSignature Language="F#" Value="member this.EnvironmentVariables : System.Collections.Generic.IList&lt;Azure.ResourceManager.Resources.Models.ScriptEnvironmentVariable&gt;" Usage="Azure.ResourceManager.Resources.Models.AzureCliScript.EnvironmentVariables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.ResourceManager.Resources.Models.ScriptEnvironmentVariable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The environment variables to pass over to the script. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceUpdateTag">
      <MemberSignature Language="C#" Value="public string ForceUpdateTag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ForceUpdateTag" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzureCliScript.ForceUpdateTag" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceUpdateTag As String" />
      <MemberSignature Language="F#" Value="member this.ForceUpdateTag : string with get, set" Usage="Azure.ResourceManager.Resources.Models.AzureCliScript.ForceUpdateTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets or sets how the deployment script should be forced to execute even if the script resource has not changed. Can be current time stamp or a GUID. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outputs">
      <MemberSignature Language="C#" Value="public BinaryData Outputs { get; }" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData Outputs" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzureCliScript.Outputs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Outputs As BinaryData" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="member this.Outputs : BinaryData" Usage="Azure.ResourceManager.Resources.Models.AzureCliScript.Outputs" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;string,BinaryData&gt; Outputs { get; }" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class System.BinaryData&gt; Outputs" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Outputs As IReadOnlyDictionary(Of String, BinaryData)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="member this.Outputs : System.Collections.Generic.IReadOnlyDictionary&lt;string, BinaryData&gt;" Usage="Azure.ResourceManager.Resources.Models.AzureCliScript.Outputs" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">System.BinaryData</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> List of script outputs. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryScriptUri">
      <MemberSignature Language="C#" Value="public Uri PrimaryScriptUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri PrimaryScriptUri" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzureCliScript.PrimaryScriptUri" />
      <MemberSignature Language="VB.NET" Value="Public Property PrimaryScriptUri As Uri" />
      <MemberSignature Language="F#" Value="member this.PrimaryScriptUri : Uri with get, set" Usage="Azure.ResourceManager.Resources.Models.AzureCliScript.PrimaryScriptUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Uri for the script. This is the entry point for the external script. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvisioningState">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Resources.Models.ScriptProvisioningState? ProvisioningState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Resources.Models.ScriptProvisioningState&gt; ProvisioningState" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzureCliScript.ProvisioningState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProvisioningState As Nullable(Of ScriptProvisioningState)" />
      <MemberSignature Language="F#" Value="member this.ProvisioningState : Nullable&lt;Azure.ResourceManager.Resources.Models.ScriptProvisioningState&gt;" Usage="Azure.ResourceManager.Resources.Models.AzureCliScript.ProvisioningState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.Resources.Models.ScriptProvisioningState&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> State of the script execution. This only appears in the response. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetentionInterval">
      <MemberSignature Language="C#" Value="public TimeSpan RetentionInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RetentionInterval" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzureCliScript.RetentionInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property RetentionInterval As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.RetentionInterval : TimeSpan with get, set" Usage="Azure.ResourceManager.Resources.Models.AzureCliScript.RetentionInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Interval for which the service retains the script resource after it reaches a terminal state. Resource will be deleted when this duration expires. Duration is based on ISO 8601 pattern (for example P1D means one day). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptContent">
      <MemberSignature Language="C#" Value="public string ScriptContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScriptContent" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzureCliScript.ScriptContent" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptContent As String" />
      <MemberSignature Language="F#" Value="member this.ScriptContent : string with get, set" Usage="Azure.ResourceManager.Resources.Models.AzureCliScript.ScriptContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Script body. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Resources.Models.ScriptStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Resources.Models.ScriptStatus Status" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzureCliScript.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As ScriptStatus" />
      <MemberSignature Language="F#" Value="member this.Status : Azure.ResourceManager.Resources.Models.ScriptStatus" Usage="Azure.ResourceManager.Resources.Models.AzureCliScript.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.Models.ScriptStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Contains the results of script execution. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccountSettings">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Resources.Models.ScriptStorageConfiguration StorageAccountSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Resources.Models.ScriptStorageConfiguration StorageAccountSettings" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzureCliScript.StorageAccountSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property StorageAccountSettings As ScriptStorageConfiguration" />
      <MemberSignature Language="F#" Value="member this.StorageAccountSettings : Azure.ResourceManager.Resources.Models.ScriptStorageConfiguration with get, set" Usage="Azure.ResourceManager.Resources.Models.AzureCliScript.StorageAccountSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.Models.ScriptStorageConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Storage Account settings. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportingScriptUris">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Uri&gt; SupportingScriptUris { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Uri&gt; SupportingScriptUris" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzureCliScript.SupportingScriptUris" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportingScriptUris As IList(Of Uri)" />
      <MemberSignature Language="F#" Value="member this.SupportingScriptUris : System.Collections.Generic.IList&lt;Uri&gt;" Usage="Azure.ResourceManager.Resources.Models.AzureCliScript.SupportingScriptUris" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Supporting files for the external script. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public TimeSpan? Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; Timeout" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.AzureCliScript.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Nullable(Of TimeSpan)" />
      <MemberSignature Language="F#" Value="member this.Timeout : Nullable&lt;TimeSpan&gt; with get, set" Usage="Azure.ResourceManager.Resources.Models.AzureCliScript.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Maximum allowed script execution time specified in ISO 8601 format. Default value is P1D. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
