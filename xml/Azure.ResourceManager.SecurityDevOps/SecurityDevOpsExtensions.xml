<Type Name="SecurityDevOpsExtensions" FullName="Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions">
  <TypeSignature Language="C#" Value="public static class SecurityDevOpsExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SecurityDevOpsExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SecurityDevOpsExtensions" />
  <TypeSignature Language="F#" Value="type SecurityDevOpsExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.SecurityDevOps. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetAzureDevOpsConnector">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource&gt; GetAzureDevOpsConnector (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string azureDevOpsConnectorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource&gt; GetAzureDevOpsConnector(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string azureDevOpsConnectorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetAzureDevOpsConnector(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzureDevOpsConnector (resourceGroupResource As ResourceGroupResource, azureDevOpsConnectorName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AzureDevOpsConnectorResource)" />
      <MemberSignature Language="F#" Value="static member GetAzureDevOpsConnector : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource&gt;" Usage="Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetAzureDevOpsConnector (resourceGroupResource, azureDevOpsConnectorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="azureDevOpsConnectorName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="azureDevOpsConnectorName"> Name of the AzureDevOps Connector. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a monitored AzureDevOps Connector resource for a given ID.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/azureDevOpsConnectors/{azureDevOpsConnectorName}</description></item><item><term>Operation Id</term><description>AzureDevOpsConnector_Get</description></item><item><term>Default Api Version</term><description>2022-09-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsResourceGroupResource.GetAzureDevOpsConnector(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="azureDevOpsConnectorName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="azureDevOpsConnectorName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAzureDevOpsConnectorAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource&gt;&gt; GetAzureDevOpsConnectorAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string azureDevOpsConnectorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource&gt;&gt; GetAzureDevOpsConnectorAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string azureDevOpsConnectorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetAzureDevOpsConnectorAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzureDevOpsConnectorAsync (resourceGroupResource As ResourceGroupResource, azureDevOpsConnectorName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AzureDevOpsConnectorResource))" />
      <MemberSignature Language="F#" Value="static member GetAzureDevOpsConnectorAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource&gt;&gt;" Usage="Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetAzureDevOpsConnectorAsync (resourceGroupResource, azureDevOpsConnectorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="azureDevOpsConnectorName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="azureDevOpsConnectorName"> Name of the AzureDevOps Connector. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a monitored AzureDevOps Connector resource for a given ID.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/azureDevOpsConnectors/{azureDevOpsConnectorName}</description></item><item><term>Operation Id</term><description>AzureDevOpsConnector_Get</description></item><item><term>Default Api Version</term><description>2022-09-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsResourceGroupResource.GetAzureDevOpsConnectorAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="azureDevOpsConnectorName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="azureDevOpsConnectorName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAzureDevOpsConnectorResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource GetAzureDevOpsConnectorResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource GetAzureDevOpsConnectorResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetAzureDevOpsConnectorResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzureDevOpsConnectorResource (client As ArmClient, id As ResourceIdentifier) As AzureDevOpsConnectorResource" />
      <MemberSignature Language="F#" Value="static member GetAzureDevOpsConnectorResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource" Usage="Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetAzureDevOpsConnectorResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsArmClient.GetAzureDevOpsConnectorResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAzureDevOpsConnectors">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorCollection GetAzureDevOpsConnectors (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorCollection GetAzureDevOpsConnectors(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetAzureDevOpsConnectors(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzureDevOpsConnectors (resourceGroupResource As ResourceGroupResource) As AzureDevOpsConnectorCollection" />
      <MemberSignature Language="F#" Value="static member GetAzureDevOpsConnectors : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorCollection" Usage="Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetAzureDevOpsConnectors resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of AzureDevOpsConnectorResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsResourceGroupResource.GetAzureDevOpsConnectors" /> instead.</description></item></summary>
        <returns> An object representing collection of AzureDevOpsConnectorResources and their operations over a AzureDevOpsConnectorResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAzureDevOpsConnectors">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource&gt; GetAzureDevOpsConnectors (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource&gt; GetAzureDevOpsConnectors(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetAzureDevOpsConnectors(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzureDevOpsConnectors (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AzureDevOpsConnectorResource)" />
      <MemberSignature Language="F#" Value="static member GetAzureDevOpsConnectors : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource&gt;" Usage="Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetAzureDevOpsConnectors (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a list of monitored AzureDevOps Connectors.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.SecurityDevOps/azureDevOpsConnectors</description></item><item><term>Operation Id</term><description>AzureDevOpsConnector_ListBySubscription</description></item><item><term>Default Api Version</term><description>2022-09-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsSubscriptionResource.GetAzureDevOpsConnectors(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAzureDevOpsConnectorsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource&gt; GetAzureDevOpsConnectorsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource&gt; GetAzureDevOpsConnectorsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetAzureDevOpsConnectorsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzureDevOpsConnectorsAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AzureDevOpsConnectorResource)" />
      <MemberSignature Language="F#" Value="static member GetAzureDevOpsConnectorsAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource&gt;" Usage="Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetAzureDevOpsConnectorsAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a list of monitored AzureDevOps Connectors.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.SecurityDevOps/azureDevOpsConnectors</description></item><item><term>Operation Id</term><description>AzureDevOpsConnector_ListBySubscription</description></item><item><term>Default Api Version</term><description>2022-09-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsSubscriptionResource.GetAzureDevOpsConnectors(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAzureDevOpsOrgResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.SecurityDevOps.AzureDevOpsOrgResource GetAzureDevOpsOrgResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.SecurityDevOps.AzureDevOpsOrgResource GetAzureDevOpsOrgResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetAzureDevOpsOrgResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzureDevOpsOrgResource (client As ArmClient, id As ResourceIdentifier) As AzureDevOpsOrgResource" />
      <MemberSignature Language="F#" Value="static member GetAzureDevOpsOrgResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityDevOps.AzureDevOpsOrgResource" Usage="Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetAzureDevOpsOrgResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityDevOps.AzureDevOpsOrgResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsOrgResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityDevOps.AzureDevOpsOrgResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsOrgResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsArmClient.GetAzureDevOpsOrgResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsOrgResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAzureDevOpsProjectResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.SecurityDevOps.AzureDevOpsProjectResource GetAzureDevOpsProjectResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.SecurityDevOps.AzureDevOpsProjectResource GetAzureDevOpsProjectResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetAzureDevOpsProjectResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzureDevOpsProjectResource (client As ArmClient, id As ResourceIdentifier) As AzureDevOpsProjectResource" />
      <MemberSignature Language="F#" Value="static member GetAzureDevOpsProjectResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityDevOps.AzureDevOpsProjectResource" Usage="Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetAzureDevOpsProjectResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityDevOps.AzureDevOpsProjectResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsProjectResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityDevOps.AzureDevOpsProjectResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsProjectResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsArmClient.GetAzureDevOpsProjectResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsProjectResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAzureDevOpsRepoResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.SecurityDevOps.AzureDevOpsRepoResource GetAzureDevOpsRepoResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.SecurityDevOps.AzureDevOpsRepoResource GetAzureDevOpsRepoResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetAzureDevOpsRepoResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzureDevOpsRepoResource (client As ArmClient, id As ResourceIdentifier) As AzureDevOpsRepoResource" />
      <MemberSignature Language="F#" Value="static member GetAzureDevOpsRepoResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityDevOps.AzureDevOpsRepoResource" Usage="Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetAzureDevOpsRepoResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityDevOps.AzureDevOpsRepoResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsRepoResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityDevOps.AzureDevOpsRepoResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsRepoResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsArmClient.GetAzureDevOpsRepoResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsRepoResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGitHubConnector">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource&gt; GetGitHubConnector (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string gitHubConnectorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource&gt; GetGitHubConnector(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string gitHubConnectorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetGitHubConnector(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGitHubConnector (resourceGroupResource As ResourceGroupResource, gitHubConnectorName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of GitHubConnectorResource)" />
      <MemberSignature Language="F#" Value="static member GetGitHubConnector : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource&gt;" Usage="Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetGitHubConnector (resourceGroupResource, gitHubConnectorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="gitHubConnectorName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="gitHubConnectorName"> Name of the GitHub Connector. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a monitored GitHub Connector resource for a given ID.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/gitHubConnectors/{gitHubConnectorName}</description></item><item><term>Operation Id</term><description>GitHubConnector_Get</description></item><item><term>Default Api Version</term><description>2022-09-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsResourceGroupResource.GetGitHubConnector(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="gitHubConnectorName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="gitHubConnectorName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGitHubConnectorAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource&gt;&gt; GetGitHubConnectorAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string gitHubConnectorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource&gt;&gt; GetGitHubConnectorAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string gitHubConnectorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetGitHubConnectorAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGitHubConnectorAsync (resourceGroupResource As ResourceGroupResource, gitHubConnectorName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of GitHubConnectorResource))" />
      <MemberSignature Language="F#" Value="static member GetGitHubConnectorAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource&gt;&gt;" Usage="Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetGitHubConnectorAsync (resourceGroupResource, gitHubConnectorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="gitHubConnectorName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="gitHubConnectorName"> Name of the GitHub Connector. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a monitored GitHub Connector resource for a given ID.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/gitHubConnectors/{gitHubConnectorName}</description></item><item><term>Operation Id</term><description>GitHubConnector_Get</description></item><item><term>Default Api Version</term><description>2022-09-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsResourceGroupResource.GetGitHubConnectorAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="gitHubConnectorName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="gitHubConnectorName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGitHubConnectorResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource GetGitHubConnectorResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource GetGitHubConnectorResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetGitHubConnectorResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGitHubConnectorResource (client As ArmClient, id As ResourceIdentifier) As GitHubConnectorResource" />
      <MemberSignature Language="F#" Value="static member GetGitHubConnectorResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource" Usage="Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetGitHubConnectorResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsArmClient.GetGitHubConnectorResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGitHubConnectors">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.SecurityDevOps.GitHubConnectorCollection GetGitHubConnectors (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.SecurityDevOps.GitHubConnectorCollection GetGitHubConnectors(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetGitHubConnectors(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGitHubConnectors (resourceGroupResource As ResourceGroupResource) As GitHubConnectorCollection" />
      <MemberSignature Language="F#" Value="static member GetGitHubConnectors : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.SecurityDevOps.GitHubConnectorCollection" Usage="Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetGitHubConnectors resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityDevOps.GitHubConnectorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of GitHubConnectorResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsResourceGroupResource.GetGitHubConnectors" /> instead.</description></item></summary>
        <returns> An object representing collection of GitHubConnectorResources and their operations over a GitHubConnectorResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGitHubConnectors">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource&gt; GetGitHubConnectors (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource&gt; GetGitHubConnectors(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetGitHubConnectors(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGitHubConnectors (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of GitHubConnectorResource)" />
      <MemberSignature Language="F#" Value="static member GetGitHubConnectors : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource&gt;" Usage="Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetGitHubConnectors (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a list of monitored GitHub Connectors.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.SecurityDevOps/gitHubConnectors</description></item><item><term>Operation Id</term><description>GitHubConnector_ListBySubscription</description></item><item><term>Default Api Version</term><description>2022-09-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsSubscriptionResource.GetGitHubConnectors(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGitHubConnectorsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource&gt; GetGitHubConnectorsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource&gt; GetGitHubConnectorsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetGitHubConnectorsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGitHubConnectorsAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of GitHubConnectorResource)" />
      <MemberSignature Language="F#" Value="static member GetGitHubConnectorsAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource&gt;" Usage="Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetGitHubConnectorsAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a list of monitored GitHub Connectors.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.SecurityDevOps/gitHubConnectors</description></item><item><term>Operation Id</term><description>GitHubConnector_ListBySubscription</description></item><item><term>Default Api Version</term><description>2022-09-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsSubscriptionResource.GetGitHubConnectors(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGitHubOwnerResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.SecurityDevOps.GitHubOwnerResource GetGitHubOwnerResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.SecurityDevOps.GitHubOwnerResource GetGitHubOwnerResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetGitHubOwnerResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGitHubOwnerResource (client As ArmClient, id As ResourceIdentifier) As GitHubOwnerResource" />
      <MemberSignature Language="F#" Value="static member GetGitHubOwnerResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityDevOps.GitHubOwnerResource" Usage="Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetGitHubOwnerResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityDevOps.GitHubOwnerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityDevOps.GitHubOwnerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityDevOps.GitHubOwnerResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityDevOps.GitHubOwnerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsArmClient.GetGitHubOwnerResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityDevOps.GitHubOwnerResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGitHubRepoResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.SecurityDevOps.GitHubRepoResource GetGitHubRepoResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.SecurityDevOps.GitHubRepoResource GetGitHubRepoResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetGitHubRepoResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGitHubRepoResource (client As ArmClient, id As ResourceIdentifier) As GitHubRepoResource" />
      <MemberSignature Language="F#" Value="static member GetGitHubRepoResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityDevOps.GitHubRepoResource" Usage="Azure.ResourceManager.SecurityDevOps.SecurityDevOpsExtensions.GetGitHubRepoResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityDevOps.GitHubRepoResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityDevOps.GitHubRepoResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityDevOps.GitHubRepoResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityDevOps.GitHubRepoResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsArmClient.GetGitHubRepoResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityDevOps.GitHubRepoResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
