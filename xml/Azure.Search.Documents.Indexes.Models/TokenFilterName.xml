<Type Name="TokenFilterName" FullName="Azure.Search.Documents.Indexes.Models.TokenFilterName">
  <TypeSignature Language="C#" Value="public struct TokenFilterName : IEquatable&lt;Azure.Search.Documents.Indexes.Models.TokenFilterName&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit TokenFilterName extends System.ValueType implements class System.IEquatable`1&lt;valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.Search.Documents.Indexes.Models.TokenFilterName" />
  <TypeSignature Language="VB.NET" Value="Public Structure TokenFilterName&#xA;Implements IEquatable(Of TokenFilterName)" />
  <TypeSignature Language="F#" Value="type TokenFilterName = struct" />
  <AssemblyInfo>
    <AssemblyName>Azure.Search.Documents</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>11.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Azure.Search.Documents.Indexes.Models.TokenFilterName&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Defines the names of all token filters supported by Azure Cognitive Search. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TokenFilterName (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.TokenFilterName.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="F#" Value="new Azure.Search.Documents.Indexes.Models.TokenFilterName : string -&gt; Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="new Azure.Search.Documents.Indexes.Models.TokenFilterName value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.TokenFilterName" /> values are the same. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apostrophe">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName Apostrophe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName Apostrophe" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Apostrophe" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Apostrophe As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.Apostrophe : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.Apostrophe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Strips all characters after an apostrophe (including the apostrophe itself). See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/tr/ApostropheFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArabicNormalization">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName ArabicNormalization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName ArabicNormalization" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.ArabicNormalization" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ArabicNormalization As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.ArabicNormalization : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.ArabicNormalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A token filter that applies the Arabic normalizer to normalize the orthography. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ar/ArabicNormalizationFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsciiFolding">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName AsciiFolding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName AsciiFolding" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.AsciiFolding" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AsciiFolding As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.AsciiFolding : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.AsciiFolding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Converts alphabetic, numeric, and symbolic Unicode characters which are not in the first 127 ASCII characters (the "Basic Latin" Unicode block) into their ASCII equivalents, if such equivalents exist. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CjkBigram">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName CjkBigram { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName CjkBigram" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.CjkBigram" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CjkBigram As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.CjkBigram : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.CjkBigram" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Forms bigrams of CJK terms that are generated from the standard tokenizer. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/cjk/CJKBigramFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CjkWidth">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName CjkWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName CjkWidth" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.CjkWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CjkWidth As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.CjkWidth : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.CjkWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Normalizes CJK width differences. Folds fullwidth ASCII variants into the equivalent basic Latin, and half-width Katakana variants into the equivalent Kana. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/cjk/CJKWidthFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Classic">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName Classic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName Classic" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Classic" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Classic As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.Classic : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.Classic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Removes English possessives, and dots from acronyms. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/ClassicFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonGram">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName CommonGram { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName CommonGram" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.CommonGram" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CommonGram As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.CommonGram : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.CommonGram" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Construct bigrams for frequently occurring terms while indexing. Single terms are still indexed too, with bigrams overlaid. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/commongrams/CommonGramsFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EdgeNGram">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName EdgeNGram { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName EdgeNGram" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.EdgeNGram" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EdgeNGram As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.EdgeNGram : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.EdgeNGram" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Generates n-grams of the given size(s) starting from the front or the back of an input token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Elision">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName Elision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName Elision" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Elision" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Elision As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.Elision : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.Elision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Removes elisions. For example, "l'avion" (the plane) will be converted to "avion" (plane). See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/util/ElisionFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Azure.Search.Documents.Indexes.Models.TokenFilterName other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.TokenFilterName.Equals(Azure.Search.Documents.Indexes.Models.TokenFilterName)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As TokenFilterName) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Azure.Search.Documents.Indexes.Models.TokenFilterName -&gt; bool" Usage="tokenFilterName.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Azure.Search.Documents.Indexes.Models.TokenFilterName" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.TokenFilterName.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tokenFilterName.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GermanNormalization">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName GermanNormalization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName GermanNormalization" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.GermanNormalization" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property GermanNormalization As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.GermanNormalization : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.GermanNormalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Normalizes German characters according to the heuristics of the German2 snowball algorithm. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/de/GermanNormalizationFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.TokenFilterName.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tokenFilterName.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="HindiNormalization">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName HindiNormalization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName HindiNormalization" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.HindiNormalization" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property HindiNormalization As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.HindiNormalization : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.HindiNormalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Normalizes text in Hindi to remove some differences in spelling variations. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/hi/HindiNormalizationFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndicNormalization">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName IndicNormalization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName IndicNormalization" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.IndicNormalization" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IndicNormalization As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.IndicNormalization : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.IndicNormalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Normalizes the Unicode representation of text in Indian languages. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/in/IndicNormalizationFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeywordRepeat">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName KeywordRepeat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName KeywordRepeat" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.KeywordRepeat" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property KeywordRepeat As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.KeywordRepeat : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.KeywordRepeat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Emits each incoming token twice, once as keyword and once as non-keyword. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/KeywordRepeatFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KStem">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName KStem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName KStem" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.KStem" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property KStem As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.KStem : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.KStem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A high-performance kstem filter for English. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/en/KStemFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName Length" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Length" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Length As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.Length : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Removes words that are too long or too short. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/LengthFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Limit">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName Limit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName Limit" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Limit" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Limit As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.Limit : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.Limit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Limits the number of tokens while indexing. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lowercase">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName Lowercase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName Lowercase" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Lowercase" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Lowercase As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.Lowercase : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.Lowercase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Normalizes token text to lower case. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LowerCaseFilter.htm. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NGram">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName NGram { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName NGram" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.NGram" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NGram As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.NGram : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.NGram" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Generates n-grams of the given size(s). See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/NGramTokenFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Azure.Search.Documents.Indexes.Models.TokenFilterName left, Azure.Search.Documents.Indexes.Models.TokenFilterName right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName left, valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.TokenFilterName.op_Equality(Azure.Search.Documents.Indexes.Models.TokenFilterName,Azure.Search.Documents.Indexes.Models.TokenFilterName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As TokenFilterName, right As TokenFilterName) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Azure.Search.Documents.Indexes.Models.TokenFilterName * Azure.Search.Documents.Indexes.Models.TokenFilterName -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Azure.Search.Documents.Indexes.Models.TokenFilterName" />
        <Parameter Name="right" Type="Azure.Search.Documents.Indexes.Models.TokenFilterName" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.TokenFilterName" /> values are the same. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Azure.Search.Documents.Indexes.Models.TokenFilterName (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName op_Implicit(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.TokenFilterName.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.TokenFilterName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As String) As TokenFilterName" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.TokenFilterName" />. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Azure.Search.Documents.Indexes.Models.TokenFilterName left, Azure.Search.Documents.Indexes.Models.TokenFilterName right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName left, valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.TokenFilterName.op_Inequality(Azure.Search.Documents.Indexes.Models.TokenFilterName,Azure.Search.Documents.Indexes.Models.TokenFilterName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As TokenFilterName, right As TokenFilterName) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Azure.Search.Documents.Indexes.Models.TokenFilterName * Azure.Search.Documents.Indexes.Models.TokenFilterName -&gt; bool" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Azure.Search.Documents.Indexes.Models.TokenFilterName" />
        <Parameter Name="right" Type="Azure.Search.Documents.Indexes.Models.TokenFilterName" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.TokenFilterName" /> values are not the same. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersianNormalization">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName PersianNormalization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName PersianNormalization" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.PersianNormalization" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PersianNormalization As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.PersianNormalization : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.PersianNormalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Applies normalization for Persian. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/fa/PersianNormalizationFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Phonetic">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName Phonetic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName Phonetic" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Phonetic" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Phonetic As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.Phonetic : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.Phonetic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Create tokens for phonetic matches. See https://lucene.apache.org/core/4_10_3/analyzers-phonetic/org/apache/lucene/analysis/phonetic/package-tree.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PorterStem">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName PorterStem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName PorterStem" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.PorterStem" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PorterStem As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.PorterStem : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.PorterStem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Uses the Porter stemming algorithm to transform the token stream. See http://tartarus.org/~martin/PorterStemmer. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName Reverse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName Reverse" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Reverse As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.Reverse : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.Reverse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Reverses the token string. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/reverse/ReverseStringFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScandinavianFoldingNormalization">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName ScandinavianFoldingNormalization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName ScandinavianFoldingNormalization" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.ScandinavianFoldingNormalization" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ScandinavianFoldingNormalization As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.ScandinavianFoldingNormalization : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.ScandinavianFoldingNormalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Folds Scandinavian characters åÅäæÄÆ-&amp;gt;a and öÖøØ-&amp;gt;o. It also discriminates against use of double vowels aa, ae, ao, oe and oo, leaving just the first one. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ScandinavianFoldingFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScandinavianNormalization">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName ScandinavianNormalization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName ScandinavianNormalization" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.ScandinavianNormalization" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ScandinavianNormalization As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.ScandinavianNormalization : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.ScandinavianNormalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Normalizes use of the interchangeable Scandinavian characters. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ScandinavianNormalizationFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shingle">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName Shingle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName Shingle" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Shingle" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Shingle As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.Shingle : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.Shingle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Creates combinations of tokens as a single token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/shingle/ShingleFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Snowball">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName Snowball { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName Snowball" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Snowball" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Snowball As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.Snowball : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.Snowball" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A filter that stems words using a Snowball-generated stemmer. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/snowball/SnowballFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoraniNormalization">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName SoraniNormalization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName SoraniNormalization" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.SoraniNormalization" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SoraniNormalization As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.SoraniNormalization : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.SoraniNormalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Normalizes the Unicode representation of Sorani text. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ckb/SoraniNormalizationFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stemmer">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName Stemmer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName Stemmer" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Stemmer" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Stemmer As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.Stemmer : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.Stemmer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Language specific stemming filter. See https://docs.microsoft.com/rest/api/searchservice/Custom-analyzers-in-Azure-Search#TokenFilters. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stopwords">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName Stopwords { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName Stopwords" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Stopwords" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Stopwords As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.Stopwords : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.Stopwords" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Removes stop words from a token stream. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/StopFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.TokenFilterName.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="tokenFilterName.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName Trim { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName Trim" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Trim" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Trim As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.Trim : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.Trim" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Trims leading and trailing whitespace from tokens. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/TrimFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName Truncate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName Truncate" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Truncate" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Truncate As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.Truncate : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.Truncate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Truncates the terms to a specific length. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/TruncateTokenFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unique">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName Unique { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName Unique" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Unique" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Unique As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.Unique : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.Unique" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Filters out tokens with same text as the previous token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/RemoveDuplicatesTokenFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uppercase">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName Uppercase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName Uppercase" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Uppercase" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Uppercase As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.Uppercase : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.Uppercase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Normalizes token text to upper case. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/UpperCaseFilter.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WordDelimiter">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.TokenFilterName WordDelimiter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName WordDelimiter" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.WordDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WordDelimiter As TokenFilterName" />
      <MemberSignature Language="F#" Value="member this.WordDelimiter : Azure.Search.Documents.Indexes.Models.TokenFilterName" Usage="Azure.Search.Documents.Indexes.Models.TokenFilterName.WordDelimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.TokenFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Splits words into subwords and performs optional transformations on subword groups. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
