<Type Name="SimpleField" FullName="Azure.Search.Documents.Indexes.Models.SimpleField">
  <TypeSignature Language="C#" Value="public class SimpleField : Azure.Search.Documents.Indexes.Models.SearchFieldTemplate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SimpleField extends Azure.Search.Documents.Indexes.Models.SearchFieldTemplate" />
  <TypeSignature Language="DocId" Value="T:Azure.Search.Documents.Indexes.Models.SimpleField" />
  <TypeSignature Language="VB.NET" Value="Public Class SimpleField&#xA;Inherits SearchFieldTemplate" />
  <TypeSignature Language="F#" Value="type SimpleField = class&#xA;    inherit SearchFieldTemplate" />
  <AssemblyInfo>
    <AssemblyName>Azure.Search.Documents</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>11.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Search.Documents.Indexes.Models.SearchFieldTemplate</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A simple field using a primitive type or a collection of a primitive type.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SimpleField (string name, Azure.Search.Documents.Indexes.Models.SearchFieldDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype Azure.Search.Documents.Indexes.Models.SearchFieldDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.SimpleField.#ctor(System.String,Azure.Search.Documents.Indexes.Models.SearchFieldDataType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As SearchFieldDataType)" />
      <MemberSignature Language="F#" Value="new Azure.Search.Documents.Indexes.Models.SimpleField : string * Azure.Search.Documents.Indexes.Models.SearchFieldDataType -&gt; Azure.Search.Documents.Indexes.Models.SimpleField" Usage="new Azure.Search.Documents.Indexes.Models.SimpleField (name, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="Azure.Search.Documents.Indexes.Models.SearchFieldDataType" />
      </Parameters>
      <Docs>
        <param name="name">The name of the field, which must be unique within the index or parent field.</param>
        <param name="type">The data type of the field.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.Models.SimpleField" /> class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsFacetable">
      <MemberSignature Language="C#" Value="public bool IsFacetable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFacetable" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.SimpleField.IsFacetable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFacetable As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsFacetable : bool with get, set" Usage="Azure.Search.Documents.Indexes.Models.SimpleField.IsFacetable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the field can be retrieved in facet queries. The default is false.
            </summary>
        <value>To be added.</value>
        <remarks>
            Facets are used in presentation of search results that include hit counts by categories.
            For example, in a search for digital cameras, facets might include branch, megapixels, price, etc.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFilterable">
      <MemberSignature Language="C#" Value="public bool IsFilterable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFilterable" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.SimpleField.IsFilterable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFilterable As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsFilterable : bool with get, set" Usage="Azure.Search.Documents.Indexes.Models.SimpleField.IsFilterable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the field can be referenced in <c>$filter</c> queries. The default is false.
            </summary>
        <value>To be added.</value>
        <remarks>
            Filterable differs from searchable in how strings are handled. Fields of type <see cref="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.String" /> or "Collection(DataType.String)" that are filterable do not undergo word-breaking, so comparisons are for exact matches only.
            For example, if you set such a field <c>f</c> to "sunny day", <c>$filter=f eq 'sunny'</c> will find no matches, but <c>$filter=f eq 'sunny day'</c> will.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHidden">
      <MemberSignature Language="C#" Value="public bool IsHidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHidden" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.SimpleField.IsHidden" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHidden As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsHidden : bool with get, set" Usage="Azure.Search.Documents.Indexes.Models.SimpleField.IsHidden" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets whether the field is returned in search results. The default is false.
            A key field where <see cref="P:Azure.Search.Documents.Indexes.Models.SimpleField.IsKey" /> is true must have this property set to false.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKey">
      <MemberSignature Language="C#" Value="public bool IsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKey" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.SimpleField.IsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property IsKey As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsKey : bool with get, set" Usage="Azure.Search.Documents.Indexes.Models.SimpleField.IsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets whether the field is the key field. The default is false.
            A <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> must have exactly one key field of type <see cref="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.String" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSortable">
      <MemberSignature Language="C#" Value="public bool IsSortable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSortable" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.SimpleField.IsSortable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSortable As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsSortable : bool with get, set" Usage="Azure.Search.Documents.Indexes.Models.SimpleField.IsSortable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether to enable the field can be referenced in <c>$orderby</c> expressions. The default is false.
            </summary>
        <value>To be added.</value>
        <remarks>
            By default Azure Cognitive Search sorts results by score, but in many experiences users may want to sort by fields in the documents.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
