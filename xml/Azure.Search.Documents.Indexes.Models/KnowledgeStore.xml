<Type Name="KnowledgeStore" FullName="Azure.Search.Documents.Indexes.Models.KnowledgeStore">
  <TypeSignature Language="C#" Value="public class KnowledgeStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KnowledgeStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Search.Documents.Indexes.Models.KnowledgeStore" />
  <TypeSignature Language="VB.NET" Value="Public Class KnowledgeStore" />
  <TypeSignature Language="F#" Value="type KnowledgeStore = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Search.Documents</AssemblyName>
    <AssemblyVersion>11.3.0.0</AssemblyVersion>
    <AssemblyVersion>11.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Definition of additional projections to azure blob, table, or files, of enriched data. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KnowledgeStore (string storageConnectionString, System.Collections.Generic.IEnumerable&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection&gt; projections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string storageConnectionString, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection&gt; projections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.KnowledgeStore.#ctor(System.String,System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (storageConnectionString As String, projections As IEnumerable(Of KnowledgeStoreProjection))" />
      <MemberSignature Language="F#" Value="new Azure.Search.Documents.Indexes.Models.KnowledgeStore : string * seq&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection&gt; -&gt; Azure.Search.Documents.Indexes.Models.KnowledgeStore" Usage="new Azure.Search.Documents.Indexes.Models.KnowledgeStore (storageConnectionString, projections)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.3.0.0</AssemblyVersion>
        <AssemblyVersion>11.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storageConnectionString" Type="System.String" />
        <Parameter Name="projections" Type="System.Collections.Generic.IEnumerable&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection&gt;" />
      </Parameters>
      <Docs>
        <param name="storageConnectionString"> The connection string to the storage account projections will be stored in. </param>
        <param name="projections"> A list of additional projections to perform during indexing. </param>
        <summary> Initializes a new instance of KnowledgeStore. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="storageConnectionString" /> or <paramref name="projections" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Projections">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection&gt; Projections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection&gt; Projections" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.KnowledgeStore.Projections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Projections As IList(Of KnowledgeStoreProjection)" />
      <MemberSignature Language="F#" Value="member this.Projections : System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection&gt;" Usage="Azure.Search.Documents.Indexes.Models.KnowledgeStore.Projections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.3.0.0</AssemblyVersion>
        <AssemblyVersion>11.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A list of additional projections to perform during indexing. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageConnectionString">
      <MemberSignature Language="C#" Value="public string StorageConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StorageConnectionString" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.KnowledgeStore.StorageConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Property StorageConnectionString As String" />
      <MemberSignature Language="F#" Value="member this.StorageConnectionString : string with get, set" Usage="Azure.Search.Documents.Indexes.Models.KnowledgeStore.StorageConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.3.0.0</AssemblyVersion>
        <AssemblyVersion>11.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The connection string to the storage account projections will be stored in. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
