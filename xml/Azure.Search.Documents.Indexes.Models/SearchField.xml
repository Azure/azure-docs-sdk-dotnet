<Type Name="SearchField" FullName="Azure.Search.Documents.Indexes.Models.SearchField">
  <TypeSignature Language="C#" Value="public class SearchField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SearchField extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Search.Documents.Indexes.Models.SearchField" />
  <TypeSignature Language="VB.NET" Value="Public Class SearchField" />
  <TypeSignature Language="F#" Value="type SearchField = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Search.Documents</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>11.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Represents a field in an index definition, which describes the name, data type, and search behavior of a field. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchField (string name, Azure.Search.Documents.Indexes.Models.SearchFieldDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype Azure.Search.Documents.Indexes.Models.SearchFieldDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.SearchField.#ctor(System.String,Azure.Search.Documents.Indexes.Models.SearchFieldDataType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As SearchFieldDataType)" />
      <MemberSignature Language="F#" Value="new Azure.Search.Documents.Indexes.Models.SearchField : string * Azure.Search.Documents.Indexes.Models.SearchFieldDataType -&gt; Azure.Search.Documents.Indexes.Models.SearchField" Usage="new Azure.Search.Documents.Indexes.Models.SearchField (name, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="Azure.Search.Documents.Indexes.Models.SearchFieldDataType" />
      </Parameters>
      <Docs>
        <param name="name">The name of the field, which must be unique within the index or parent field.</param>
        <param name="type">The data type of the field.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchField" /> class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="AnalyzerName">
      <MemberSignature Language="C#" Value="public Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName? AnalyzerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName&gt; AnalyzerName" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.SearchField.AnalyzerName" />
      <MemberSignature Language="VB.NET" Value="Public Property AnalyzerName As Nullable(Of LexicalAnalyzerName)" />
      <MemberSignature Language="F#" Value="member this.AnalyzerName : Nullable&lt;Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName&gt; with get, set" Usage="Azure.Search.Documents.Indexes.Models.SearchField.AnalyzerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the analyzer to use for the field.
            This option can be used only with searchable fields and it cannot be set together with either <see cref="P:Azure.Search.Documents.Indexes.Models.SearchField.SearchAnalyzerName" /> or <see cref="P:Azure.Search.Documents.Indexes.Models.SearchField.IndexAnalyzerName" />.
            Once the analyzer is chosen, it cannot be changed for the field.
            Must be null for complex fields.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fields">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.SearchField&gt; Fields { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.Search.Documents.Indexes.Models.SearchField&gt; Fields" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.SearchField.Fields" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Fields As IList(Of SearchField)" />
      <MemberSignature Language="F#" Value="member this.Fields : System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.SearchField&gt;" Usage="Azure.Search.Documents.Indexes.Models.SearchField.Fields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.SearchField&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a list of nested fields if this field is of type <see cref="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.Complex" /> or "Collection(DataType.Complex)".
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexAnalyzerName">
      <MemberSignature Language="C#" Value="public Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName? IndexAnalyzerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName&gt; IndexAnalyzerName" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.SearchField.IndexAnalyzerName" />
      <MemberSignature Language="VB.NET" Value="Public Property IndexAnalyzerName As Nullable(Of LexicalAnalyzerName)" />
      <MemberSignature Language="F#" Value="member this.IndexAnalyzerName : Nullable&lt;Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName&gt; with get, set" Usage="Azure.Search.Documents.Indexes.Models.SearchField.IndexAnalyzerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the analyzer used at indexing time for the field.
            This option can be used only with searchable fields.
            It must be set together with <see cref="P:Azure.Search.Documents.Indexes.Models.SearchField.SearchAnalyzerName" /> and it cannot be set together with the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchField.AnalyzerName" /> option.
            This property cannot be set to the name of a language analyzer; use the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchField.AnalyzerName" /> property instead if you need a language analyzer.
            Once the analyzer is chosen, it cannot be changed for the field.
            Must be null for complex fields. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFacetable">
      <MemberSignature Language="C#" Value="public bool? IsFacetable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsFacetable" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.SearchField.IsFacetable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFacetable As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsFacetable : Nullable&lt;bool&gt; with get, set" Usage="Azure.Search.Documents.Indexes.Models.SearchField.IsFacetable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the field can be retrieved in facet queries. The default is null.
            This property must be null for complex fields, but can be set on simple fields within a complex field.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            Facets are used in presentation of search results that include hit counts by categories.
            For example, in a search for digital cameras, facets might include branch, megapixels, price, etc.
            </para>
          <para>
            This field must be set according to constraints described in the summary, or the server may respond with an error.
            Instead, consider using the <see cref="T:Azure.Search.Documents.Indexes.Models.SimpleField" />, <see cref="T:Azure.Search.Documents.Indexes.Models.SearchableField" />, and <see cref="T:Azure.Search.Documents.Indexes.Models.ComplexField" /> classes to help you more easily create a <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFilterable">
      <MemberSignature Language="C#" Value="public bool? IsFilterable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsFilterable" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.SearchField.IsFilterable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFilterable As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsFilterable : Nullable&lt;bool&gt; with get, set" Usage="Azure.Search.Documents.Indexes.Models.SearchField.IsFilterable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the field can be referenced in <c>$filter</c> queries. The default is null.
            This property must be null for complex fields, but can be set on simple fields within a complex field.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            Filterable differs from searchable in how strings are handled. Fields of type <see cref="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.String" /> or "Collection(DataType.String)" that are filterable do not undergo word-breaking, so comparisons are for exact matches only.
            For example, if you set such a field <c>f</c> to "sunny day", <c>$filter=f eq 'sunny'</c> will find no matches, but <c>$filter=f eq 'sunny day'</c> will.
            </para>
          <para>
            This field must be set according to constraints described in the summary, or the server may respond with an error.
            Instead, consider using the <see cref="T:Azure.Search.Documents.Indexes.Models.SimpleField" />, <see cref="T:Azure.Search.Documents.Indexes.Models.SearchableField" />, and <see cref="T:Azure.Search.Documents.Indexes.Models.ComplexField" /> classes to help you more easily create a <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHidden">
      <MemberSignature Language="C#" Value="public bool? IsHidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsHidden" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.SearchField.IsHidden" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHidden As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsHidden : Nullable&lt;bool&gt; with get, set" Usage="Azure.Search.Documents.Indexes.Models.SearchField.IsHidden" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the field will be returned in a search result. The default is null.
            This property must be true for key fields, and must be null for complex fields.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            You can hide a field from search results if you want to use it only as a filter, for sorting, or for scoring.
            This property can also be changed on existing fields and enabling it does not cause an increase in index storage requirements.
            </para>
          <para>
            This field must be set according to constraints described in the summary, or the server may respond with an error.
            Instead, consider using the <see cref="T:Azure.Search.Documents.Indexes.Models.SimpleField" />, <see cref="T:Azure.Search.Documents.Indexes.Models.SearchableField" />, and <see cref="T:Azure.Search.Documents.Indexes.Models.ComplexField" /> classes to help you more easily create a <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKey">
      <MemberSignature Language="C#" Value="public bool? IsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsKey" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.SearchField.IsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property IsKey As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsKey : Nullable&lt;bool&gt; with get, set" Usage="Azure.Search.Documents.Indexes.Models.SearchField.IsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets whether the field is the key field. The default is null.
            A <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> must have exactly one key field of type <see cref="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.String" />.
            </summary>
        <value>To be added.</value>
        <remarks>
            This field must be set according to constraints described in the summary, or the server may respond with an error.
            Instead, consider using the <see cref="T:Azure.Search.Documents.Indexes.Models.SimpleField" />, <see cref="T:Azure.Search.Documents.Indexes.Models.SearchableField" />, and <see cref="T:Azure.Search.Documents.Indexes.Models.ComplexField" /> classes to help you more easily create a <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSearchable">
      <MemberSignature Language="C#" Value="public bool? IsSearchable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsSearchable" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.SearchField.IsSearchable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSearchable As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsSearchable : Nullable&lt;bool&gt; with get, set" Usage="Azure.Search.Documents.Indexes.Models.SearchField.IsSearchable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the field is full-text searchable. The default is null.
            This means it will undergo analysis such as word-breaking during indexing.
            This property can be true only for <see cref="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.String" /> or "Collection(DataType.String)". It must be false for non-string simple fields, and null for complex fields.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            Full-text searches enable the field value "sunny day" to be split into individual terms "sunny" and "day". This will increase the size of your index.
            </para>
          <para>
            This field must be set according to constraints described in the summary, or the server may respond with an error.
            Instead, consider using the <see cref="T:Azure.Search.Documents.Indexes.Models.SimpleField" />, <see cref="T:Azure.Search.Documents.Indexes.Models.SearchableField" />, and <see cref="T:Azure.Search.Documents.Indexes.Models.ComplexField" /> classes to help you more easily create a <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSortable">
      <MemberSignature Language="C#" Value="public bool? IsSortable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsSortable" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.SearchField.IsSortable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSortable As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsSortable : Nullable&lt;bool&gt; with get, set" Usage="Azure.Search.Documents.Indexes.Models.SearchField.IsSortable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the field can be referenced in a <c>$orderby</c> expression. The default is null.
            A simple field can be sortable only if it is a single-valued type such as <see cref="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.String" /> or <see cref="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.Int32" />.
            </summary>
        <value>To be added.</value>
        <remarks>
            This field must be set according to constraints described in the summary, or the server may respond with an error.
            Instead, consider using the <see cref="T:Azure.Search.Documents.Indexes.Models.SimpleField" />, <see cref="T:Azure.Search.Documents.Indexes.Models.SearchableField" />, and <see cref="T:Azure.Search.Documents.Indexes.Models.ComplexField" /> classes to help you more easily create a <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.SearchField.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Azure.Search.Documents.Indexes.Models.SearchField.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the field.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchAnalyzerName">
      <MemberSignature Language="C#" Value="public Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName? SearchAnalyzerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName&gt; SearchAnalyzerName" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.SearchField.SearchAnalyzerName" />
      <MemberSignature Language="VB.NET" Value="Public Property SearchAnalyzerName As Nullable(Of LexicalAnalyzerName)" />
      <MemberSignature Language="F#" Value="member this.SearchAnalyzerName : Nullable&lt;Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName&gt; with get, set" Usage="Azure.Search.Documents.Indexes.Models.SearchField.SearchAnalyzerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the analyzer used at search time for the field.
            This option can be used only with searchable fields.
            It must be set together with <see cref="P:Azure.Search.Documents.Indexes.Models.SearchField.IndexAnalyzerName" /> and it cannot be set together with the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchField.AnalyzerName" /> option.
            This property cannot be set to the name of a language analyzer; use the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchField.AnalyzerName" /> property instead if you need a language analyzer.
            This analyzer can be updated on an existing field.
            Must be null for complex fields.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynonymMapNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; SynonymMapNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; SynonymMapNames" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.SearchField.SynonymMapNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SynonymMapNames As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.SynonymMapNames : System.Collections.Generic.IList&lt;string&gt;" Usage="Azure.Search.Documents.Indexes.Models.SearchField.SynonymMapNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a list of names of synonym maps associated with this field. Only fields where <see cref="P:Azure.Search.Documents.Indexes.Models.SearchField.IsSearchable" /> is true can have associated synonym maps.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.SearchField.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="searchField.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
            This always returns "<see cref="P:Azure.Search.Documents.Indexes.Models.SearchField.Name" /> : <see cref="P:Azure.Search.Documents.Indexes.Models.SearchField.Type" />" and is meant for debugging purposes.
            </remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Azure.Search.Documents.Indexes.Models.SearchFieldDataType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.Search.Documents.Indexes.Models.SearchFieldDataType Type" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.SearchField.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As SearchFieldDataType" />
      <MemberSignature Language="F#" Value="member this.Type : Azure.Search.Documents.Indexes.Models.SearchFieldDataType" Usage="Azure.Search.Documents.Indexes.Models.SearchField.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.SearchFieldDataType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ge the data type of the field.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
