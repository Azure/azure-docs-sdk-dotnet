<Type Name="PatternTokenizer" FullName="Azure.Search.Documents.Indexes.Models.PatternTokenizer">
  <TypeSignature Language="C#" Value="public class PatternTokenizer : Azure.Search.Documents.Indexes.Models.LexicalTokenizer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PatternTokenizer extends Azure.Search.Documents.Indexes.Models.LexicalTokenizer" />
  <TypeSignature Language="DocId" Value="T:Azure.Search.Documents.Indexes.Models.PatternTokenizer" />
  <TypeSignature Language="VB.NET" Value="Public Class PatternTokenizer&#xA;Inherits LexicalTokenizer" />
  <TypeSignature Language="F#" Value="type PatternTokenizer = class&#xA;    inherit LexicalTokenizer" />
  <AssemblyInfo>
    <AssemblyName>Azure.Search.Documents</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>11.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Search.Documents.Indexes.Models.LexicalTokenizer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Tokenizer that uses regex pattern matching to construct distinct tokens. This tokenizer is implemented using Apache Lucene. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PatternTokenizer (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.PatternTokenizer.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="F#" Value="new Azure.Search.Documents.Indexes.Models.PatternTokenizer : string -&gt; Azure.Search.Documents.Indexes.Models.PatternTokenizer" Usage="new Azure.Search.Documents.Indexes.Models.PatternTokenizer name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the tokenizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
        <summary> Initializes a new instance of PatternTokenizer. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.RegexFlag&gt; Flags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Azure.Search.Documents.Indexes.Models.RegexFlag&gt; Flags" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.PatternTokenizer.Flags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Flags As IList(Of RegexFlag)" />
      <MemberSignature Language="F#" Value="member this.Flags : System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.RegexFlag&gt;" Usage="Azure.Search.Documents.Indexes.Models.PatternTokenizer.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.RegexFlag&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Regular expression flags for <see cref="P:Azure.Search.Documents.Indexes.Models.PatternTokenizer.Pattern" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public int? Group { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Group" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.PatternTokenizer.Group" />
      <MemberSignature Language="VB.NET" Value="Public Property Group As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Group : Nullable&lt;int&gt; with get, set" Usage="Azure.Search.Documents.Indexes.Models.PatternTokenizer.Group" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The zero-based ordinal of the matching group in the regular expression pattern to extract into tokens. Use -1 if you want to use the entire pattern to split the input into tokens, irrespective of matching groups. Default is -1. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public string Pattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pattern" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.PatternTokenizer.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public Property Pattern As String" />
      <MemberSignature Language="F#" Value="member this.Pattern : string with get, set" Usage="Azure.Search.Documents.Indexes.Models.PatternTokenizer.Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A regular expression pattern to match token separators. Default is an expression that matches one or more non-word characters. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
