<Type Name="VectorSearch" FullName="Azure.Search.Documents.Indexes.Models.VectorSearch">
  <TypeSignature Language="C#" Value="public class VectorSearch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VectorSearch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Search.Documents.Indexes.Models.VectorSearch" />
  <TypeSignature Language="VB.NET" Value="Public Class VectorSearch" />
  <TypeSignature Language="F#" Value="type VectorSearch = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Search.Documents</AssemblyName>
    <AssemblyVersion>11.5.0.0</AssemblyVersion>
    <AssemblyVersion>11.5.1.0</AssemblyVersion>
    <AssemblyVersion>11.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Contains configuration options related to vector search. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VectorSearch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.VectorSearch.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.VectorSearch" />. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Algorithms">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.VectorSearchAlgorithmConfiguration&gt; Algorithms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.Search.Documents.Indexes.Models.VectorSearchAlgorithmConfiguration&gt; Algorithms" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.VectorSearch.Algorithms" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Algorithms As IList(Of VectorSearchAlgorithmConfiguration)" />
      <MemberSignature Language="F#" Value="member this.Algorithms : System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.VectorSearchAlgorithmConfiguration&gt;" Usage="Azure.Search.Documents.Indexes.Models.VectorSearch.Algorithms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.VectorSearchAlgorithmConfiguration&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Contains configuration options specific to the algorithm used during indexing or querying.
            Please note <see cref="T:Azure.Search.Documents.Indexes.Models.VectorSearchAlgorithmConfiguration" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.Search.Documents.Indexes.Models.ExhaustiveKnnAlgorithmConfiguration" /> and <see cref="T:Azure.Search.Documents.Indexes.Models.HnswAlgorithmConfiguration" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compressions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.VectorSearchCompression&gt; Compressions { get; }" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.Search.Documents.Indexes.Models.VectorSearchCompression&gt; Compressions" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.VectorSearch.Compressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Compressions As IList(Of VectorSearchCompression)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="member this.Compressions : System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.VectorSearchCompression&gt;" Usage="Azure.Search.Documents.Indexes.Models.VectorSearch.Compressions" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.VectorSearchCompressionConfiguration&gt; Compressions { get; }" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.Search.Documents.Indexes.Models.VectorSearchCompressionConfiguration&gt; Compressions" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Compressions As IList(Of VectorSearchCompressionConfiguration)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="member this.Compressions : System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.VectorSearchCompressionConfiguration&gt;" Usage="Azure.Search.Documents.Indexes.Models.VectorSearch.Compressions" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.VectorSearchCompression&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.VectorSearchCompressionConfiguration&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Contains configuration options specific to the compression method used during indexing or querying.
            Please note <see cref="T:Azure.Search.Documents.Indexes.Models.VectorSearchCompression" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.Search.Documents.Indexes.Models.BinaryQuantizationCompression" /> and <see cref="T:Azure.Search.Documents.Indexes.Models.ScalarQuantizationCompression" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Profiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.VectorSearchProfile&gt; Profiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.Search.Documents.Indexes.Models.VectorSearchProfile&gt; Profiles" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.VectorSearch.Profiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Profiles As IList(Of VectorSearchProfile)" />
      <MemberSignature Language="F#" Value="member this.Profiles : System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.VectorSearchProfile&gt;" Usage="Azure.Search.Documents.Indexes.Models.VectorSearch.Profiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.VectorSearchProfile&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Defines combinations of configurations to use with vector search. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vectorizers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.VectorSearchVectorizer&gt; Vectorizers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.Search.Documents.Indexes.Models.VectorSearchVectorizer&gt; Vectorizers" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.VectorSearch.Vectorizers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Vectorizers As IList(Of VectorSearchVectorizer)" />
      <MemberSignature Language="F#" Value="member this.Vectorizers : System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.VectorSearchVectorizer&gt;" Usage="Azure.Search.Documents.Indexes.Models.VectorSearch.Vectorizers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.VectorSearchVectorizer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Contains configuration options on how to vectorize text vector queries.
            Please note <see cref="T:Azure.Search.Documents.Indexes.Models.VectorSearchVectorizer" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.Search.Documents.Indexes.Models.AzureOpenAIVectorizer" /> and <see cref="T:Azure.Search.Documents.Indexes.Models.WebApiVectorizer" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
