<Type Name="LexicalTokenizerName" FullName="Azure.Search.Documents.Indexes.Models.LexicalTokenizerName">
  <TypeSignature Language="C#" Value="public struct LexicalTokenizerName : IEquatable&lt;Azure.Search.Documents.Indexes.Models.LexicalTokenizerName&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit LexicalTokenizerName extends System.ValueType implements class System.IEquatable`1&lt;valuetype Azure.Search.Documents.Indexes.Models.LexicalTokenizerName&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" />
  <TypeSignature Language="VB.NET" Value="Public Structure LexicalTokenizerName&#xA;Implements IEquatable(Of LexicalTokenizerName)" />
  <TypeSignature Language="F#" Value="type LexicalTokenizerName = struct" />
  <AssemblyInfo>
    <AssemblyName>Azure.Search.Documents</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>11.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Azure.Search.Documents.Indexes.Models.LexicalTokenizerName&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Defines the names of all tokenizers supported by Azure Cognitive Search. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LexicalTokenizerName (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="F#" Value="new Azure.Search.Documents.Indexes.Models.LexicalTokenizerName : string -&gt; Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" Usage="new Azure.Search.Documents.Indexes.Models.LexicalTokenizerName value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" /> values are the same. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Classic">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.LexicalTokenizerName Classic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.LexicalTokenizerName Classic" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.Classic" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Classic As LexicalTokenizerName" />
      <MemberSignature Language="F#" Value="member this.Classic : Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" Usage="Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.Classic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.LexicalTokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Grammar-based tokenizer that is suitable for processing most European-language documents. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/ClassicTokenizer.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EdgeNGram">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.LexicalTokenizerName EdgeNGram { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.LexicalTokenizerName EdgeNGram" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.EdgeNGram" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EdgeNGram As LexicalTokenizerName" />
      <MemberSignature Language="F#" Value="member this.EdgeNGram : Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" Usage="Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.EdgeNGram" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.LexicalTokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Tokenizes the input from an edge into n-grams of the given size(s). See https://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Azure.Search.Documents.Indexes.Models.LexicalTokenizerName other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Azure.Search.Documents.Indexes.Models.LexicalTokenizerName other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.Equals(Azure.Search.Documents.Indexes.Models.LexicalTokenizerName)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As LexicalTokenizerName) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Azure.Search.Documents.Indexes.Models.LexicalTokenizerName -&gt; bool" Usage="lexicalTokenizerName.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="lexicalTokenizerName.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="lexicalTokenizerName.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Keyword">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.LexicalTokenizerName Keyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.LexicalTokenizerName Keyword" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.Keyword" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Keyword As LexicalTokenizerName" />
      <MemberSignature Language="F#" Value="member this.Keyword : Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" Usage="Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.Keyword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.LexicalTokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Emits the entire input as a single token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/KeywordTokenizer.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Letter">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.LexicalTokenizerName Letter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.LexicalTokenizerName Letter" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.Letter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Letter As LexicalTokenizerName" />
      <MemberSignature Language="F#" Value="member this.Letter : Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" Usage="Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.Letter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.LexicalTokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Divides text at non-letters. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LetterTokenizer.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lowercase">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.LexicalTokenizerName Lowercase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.LexicalTokenizerName Lowercase" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.Lowercase" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Lowercase As LexicalTokenizerName" />
      <MemberSignature Language="F#" Value="member this.Lowercase : Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" Usage="Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.Lowercase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.LexicalTokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Divides text at non-letters and converts them to lower case. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LowerCaseTokenizer.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MicrosoftLanguageStemmingTokenizer">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.LexicalTokenizerName MicrosoftLanguageStemmingTokenizer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.LexicalTokenizerName MicrosoftLanguageStemmingTokenizer" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.MicrosoftLanguageStemmingTokenizer" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MicrosoftLanguageStemmingTokenizer As LexicalTokenizerName" />
      <MemberSignature Language="F#" Value="member this.MicrosoftLanguageStemmingTokenizer : Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" Usage="Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.MicrosoftLanguageStemmingTokenizer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.LexicalTokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Divides text using language-specific rules and reduces words to their base forms. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MicrosoftLanguageTokenizer">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.LexicalTokenizerName MicrosoftLanguageTokenizer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.LexicalTokenizerName MicrosoftLanguageTokenizer" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.MicrosoftLanguageTokenizer" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MicrosoftLanguageTokenizer As LexicalTokenizerName" />
      <MemberSignature Language="F#" Value="member this.MicrosoftLanguageTokenizer : Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" Usage="Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.MicrosoftLanguageTokenizer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.LexicalTokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Divides text using language-specific rules. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NGram">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.LexicalTokenizerName NGram { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.LexicalTokenizerName NGram" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.NGram" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NGram As LexicalTokenizerName" />
      <MemberSignature Language="F#" Value="member this.NGram : Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" Usage="Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.NGram" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.LexicalTokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Tokenizes the input into n-grams of the given size(s). See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/NGramTokenizer.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Azure.Search.Documents.Indexes.Models.LexicalTokenizerName left, Azure.Search.Documents.Indexes.Models.LexicalTokenizerName right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype Azure.Search.Documents.Indexes.Models.LexicalTokenizerName left, valuetype Azure.Search.Documents.Indexes.Models.LexicalTokenizerName right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.op_Equality(Azure.Search.Documents.Indexes.Models.LexicalTokenizerName,Azure.Search.Documents.Indexes.Models.LexicalTokenizerName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As LexicalTokenizerName, right As LexicalTokenizerName) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Azure.Search.Documents.Indexes.Models.LexicalTokenizerName * Azure.Search.Documents.Indexes.Models.LexicalTokenizerName -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" />
        <Parameter Name="right" Type="Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" /> values are the same. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Azure.Search.Documents.Indexes.Models.LexicalTokenizerName (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype Azure.Search.Documents.Indexes.Models.LexicalTokenizerName op_Implicit(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As String) As LexicalTokenizerName" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" Usage="Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.LexicalTokenizerName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" />. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Azure.Search.Documents.Indexes.Models.LexicalTokenizerName left, Azure.Search.Documents.Indexes.Models.LexicalTokenizerName right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype Azure.Search.Documents.Indexes.Models.LexicalTokenizerName left, valuetype Azure.Search.Documents.Indexes.Models.LexicalTokenizerName right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.op_Inequality(Azure.Search.Documents.Indexes.Models.LexicalTokenizerName,Azure.Search.Documents.Indexes.Models.LexicalTokenizerName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As LexicalTokenizerName, right As LexicalTokenizerName) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Azure.Search.Documents.Indexes.Models.LexicalTokenizerName * Azure.Search.Documents.Indexes.Models.LexicalTokenizerName -&gt; bool" Usage="Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" />
        <Parameter Name="right" Type="Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" /> values are not the same. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathHierarchy">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.LexicalTokenizerName PathHierarchy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.LexicalTokenizerName PathHierarchy" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.PathHierarchy" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PathHierarchy As LexicalTokenizerName" />
      <MemberSignature Language="F#" Value="member this.PathHierarchy : Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" Usage="Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.PathHierarchy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.LexicalTokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Tokenizer for path-like hierarchies. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/path/PathHierarchyTokenizer.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.LexicalTokenizerName Pattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.LexicalTokenizerName Pattern" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Pattern As LexicalTokenizerName" />
      <MemberSignature Language="F#" Value="member this.Pattern : Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" Usage="Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.LexicalTokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Tokenizer that uses regex pattern matching to construct distinct tokens. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/pattern/PatternTokenizer.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Standard">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.LexicalTokenizerName Standard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.LexicalTokenizerName Standard" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.Standard" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Standard As LexicalTokenizerName" />
      <MemberSignature Language="F#" Value="member this.Standard : Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" Usage="Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.Standard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.LexicalTokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Standard Lucene analyzer; Composed of the standard tokenizer, lowercase filter and stop filter. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/StandardTokenizer.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="lexicalTokenizerName.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="UaxUrlEmail">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.LexicalTokenizerName UaxUrlEmail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.LexicalTokenizerName UaxUrlEmail" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.UaxUrlEmail" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UaxUrlEmail As LexicalTokenizerName" />
      <MemberSignature Language="F#" Value="member this.UaxUrlEmail : Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" Usage="Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.UaxUrlEmail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.LexicalTokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Tokenizes urls and emails as one token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/UAX29URLEmailTokenizer.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Whitespace">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Indexes.Models.LexicalTokenizerName Whitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Indexes.Models.LexicalTokenizerName Whitespace" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.Whitespace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Whitespace As LexicalTokenizerName" />
      <MemberSignature Language="F#" Value="member this.Whitespace : Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" Usage="Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.Whitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.LexicalTokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Divides text at whitespace. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/WhitespaceTokenizer.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
