<Type Name="ChatRequestAssistantMessage" FullName="Azure.AI.Inference.ChatRequestAssistantMessage">
  <TypeSignature Language="C#" Value="public class ChatRequestAssistantMessage : Azure.AI.Inference.ChatRequestMessage, System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChatRequestAssistantMessage extends Azure.AI.Inference.ChatRequestMessage implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.AI.Inference.ChatRequestAssistantMessage&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.AI.Inference.ChatRequestAssistantMessage&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.Inference.ChatRequestAssistantMessage" />
  <TypeSignature Language="VB.NET" Value="Public Class ChatRequestAssistantMessage&#xA;Inherits ChatRequestMessage&#xA;Implements IJsonModel(Of ChatRequestAssistantMessage), IPersistableModel(Of ChatRequestAssistantMessage)" />
  <TypeSignature Language="F#" Value="type ChatRequestAssistantMessage = class&#xA;    inherit ChatRequestMessage&#xA;    interface IJsonModel&lt;ChatRequestAssistantMessage&gt;&#xA;    interface IPersistableModel&lt;ChatRequestAssistantMessage&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.Inference</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.AI.Inference.ChatRequestMessage</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> A request chat message representing response or action from the assistant. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatRequestAssistantMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatRequestAssistantMessage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Inference.ChatRequestAssistantMessage" />. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatRequestAssistantMessage (Azure.AI.Inference.ChatCompletions chatCompletions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.AI.Inference.ChatCompletions chatCompletions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatRequestAssistantMessage.#ctor(Azure.AI.Inference.ChatCompletions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (chatCompletions As ChatCompletions)" />
      <MemberSignature Language="F#" Value="new Azure.AI.Inference.ChatRequestAssistantMessage : Azure.AI.Inference.ChatCompletions -&gt; Azure.AI.Inference.ChatRequestAssistantMessage" Usage="new Azure.AI.Inference.ChatRequestAssistantMessage chatCompletions" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="chatCompletions" Type="Azure.AI.Inference.ChatCompletions" />
      </Parameters>
      <Docs>
        <param name="chatCompletions">
                The <see cref="T:Azure.AI.Inference.ChatCompletions" /> from which the conversation history request message should be created.
            </param>
        <summary>
            Creates a new instance of <see cref="T:Azure.AI.Inference.ChatRequestAssistantMessage" /> from a <see cref="T:Azure.AI.Inference.ChatCompletions" /> with
            an <c>assistant</c> role response.
            </summary>
        <remarks>
                This constructor will copy the <c>content</c>, <c>tool_calls</c>, and <c>function_call</c> from a chat
                completion response into a new <c>assistant</c> role request message.
            </remarks>
        <exception cref="T:System.ArgumentException">
                The <c>role</c> of the provided chat completion response was not <see cref="P:Azure.AI.Inference.ChatRole.Assistant" />.
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatRequestAssistantMessage (string content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatRequestAssistantMessage.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (content As String)" />
      <MemberSignature Language="F#" Value="new Azure.AI.Inference.ChatRequestAssistantMessage : string -&gt; Azure.AI.Inference.ChatRequestAssistantMessage" Usage="new Azure.AI.Inference.ChatRequestAssistantMessage content" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content"> The text content of the message. </param>
        <summary>
            Creates a new instance of <see cref="T:Azure.AI.Inference.ChatRequestAssistantMessage" /> that represents ordinary text content and
            does not feature tool or function calls.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatRequestAssistantMessage (System.Collections.Generic.IEnumerable&lt;Azure.AI.Inference.ChatCompletionsToolCall&gt; toolCalls, string content = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Inference.ChatCompletionsToolCall&gt; toolCalls, string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatRequestAssistantMessage.#ctor(System.Collections.Generic.IEnumerable{Azure.AI.Inference.ChatCompletionsToolCall},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (toolCalls As IEnumerable(Of ChatCompletionsToolCall), Optional content As String = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.AI.Inference.ChatRequestAssistantMessage : seq&lt;Azure.AI.Inference.ChatCompletionsToolCall&gt; * string -&gt; Azure.AI.Inference.ChatRequestAssistantMessage" Usage="new Azure.AI.Inference.ChatRequestAssistantMessage (toolCalls, content)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="toolCalls" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Inference.ChatCompletionsToolCall&gt;" />
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="toolCalls"> The <c>tool_calls</c> made by the model. </param>
        <param name="content"> Optional text content associated with the message. </param>
        <summary>
            Creates a new instance of <see cref="T:Azure.AI.Inference.ChatRequestAssistantMessage" /> that represents <c>tool_calls</c> that
            were provided by the model.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public string Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Content" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Inference.ChatRequestAssistantMessage.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As String" />
      <MemberSignature Language="F#" Value="member this.Content : string with get, set" Usage="Azure.AI.Inference.ChatRequestAssistantMessage.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The content of the message. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JsonModelWriteCore">
      <MemberSignature Language="C#" Value="protected override void JsonModelWriteCore (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void JsonModelWriteCore(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatRequestAssistantMessage.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub JsonModelWriteCore (writer As Utf8JsonWriter, options As ModelReaderWriterOptions)" />
      <MemberSignature Language="F#" Value="override this.JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="chatRequestAssistantMessage.JsonModelWriteCore (writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer"> The JSON writer. </param>
        <param name="options"> The client options for reading and writing models. </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticipantName">
      <MemberSignature Language="C#" Value="public string ParticipantName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParticipantName" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Inference.ChatRequestAssistantMessage.ParticipantName" />
      <MemberSignature Language="VB.NET" Value="Public Property ParticipantName As String" />
      <MemberSignature Language="F#" Value="member this.ParticipantName : string with get, set" Usage="Azure.AI.Inference.ChatRequestAssistantMessage.ParticipantName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An optional <c>name</c> associated with the assistant message. This is typically defined with a <c>system</c>
            message and is used to differentiate between multiple participants of the same role.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.Inference.ChatRequestAssistantMessage IJsonModel&lt;ChatRequestAssistantMessage&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.Inference.ChatRequestAssistantMessage System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatRequestAssistantMessage.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#Inference#ChatRequestAssistantMessage&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As ChatRequestAssistantMessage Implements IJsonModel(Of ChatRequestAssistantMessage).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Inference.ChatRequestAssistantMessage&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Inference.ChatRequestAssistantMessage" Usage="chatRequestAssistantMessage.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Inference.ChatRequestAssistantMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;ChatRequestAssistantMessage&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatRequestAssistantMessage.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#Inference#ChatRequestAssistantMessage&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of ChatRequestAssistantMessage).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="chatRequestAssistantMessage.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.Inference.ChatRequestAssistantMessage IPersistableModel&lt;ChatRequestAssistantMessage&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.Inference.ChatRequestAssistantMessage System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatRequestAssistantMessage.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Inference#ChatRequestAssistantMessage&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As ChatRequestAssistantMessage Implements IPersistableModel(Of ChatRequestAssistantMessage).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Inference.ChatRequestAssistantMessage&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Inference.ChatRequestAssistantMessage" Usage="chatRequestAssistantMessage.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Inference.ChatRequestAssistantMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;ChatRequestAssistantMessage&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatRequestAssistantMessage.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Inference#ChatRequestAssistantMessage&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of ChatRequestAssistantMessage).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="chatRequestAssistantMessage.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;ChatRequestAssistantMessage&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatRequestAssistantMessage.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Inference#ChatRequestAssistantMessage&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of ChatRequestAssistantMessage).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="chatRequestAssistantMessage.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatRequestAssistantMessage&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToolCalls">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.AI.Inference.ChatCompletionsToolCall&gt; ToolCalls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.AI.Inference.ChatCompletionsToolCall&gt; ToolCalls" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Inference.ChatRequestAssistantMessage.ToolCalls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolCalls As IList(Of ChatCompletionsToolCall)" />
      <MemberSignature Language="F#" Value="member this.ToolCalls : System.Collections.Generic.IList&lt;Azure.AI.Inference.ChatCompletionsToolCall&gt;" Usage="Azure.AI.Inference.ChatRequestAssistantMessage.ToolCalls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.AI.Inference.ChatCompletionsToolCall&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The tool calls that must be resolved and have their outputs appended to subsequent input messages for the chat
            completions request to resolve as configured.
            Please note <see cref="T:Azure.AI.Inference.ChatCompletionsToolCall" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.AI.Inference.ChatCompletionsFunctionToolCall" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
