<Type Name="ChatMessageImageContentItem" FullName="Azure.AI.Inference.ChatMessageImageContentItem">
  <TypeSignature Language="C#" Value="public class ChatMessageImageContentItem : Azure.AI.Inference.ChatMessageContentItem, System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChatMessageImageContentItem extends Azure.AI.Inference.ChatMessageContentItem implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.AI.Inference.ChatMessageImageContentItem&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.AI.Inference.ChatMessageImageContentItem&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.Inference.ChatMessageImageContentItem" />
  <TypeSignature Language="VB.NET" Value="Public Class ChatMessageImageContentItem&#xA;Inherits ChatMessageContentItem&#xA;Implements IJsonModel(Of ChatMessageImageContentItem), IPersistableModel(Of ChatMessageImageContentItem)" />
  <TypeSignature Language="F#" Value="type ChatMessageImageContentItem = class&#xA;    inherit ChatMessageContentItem&#xA;    interface IJsonModel&lt;ChatMessageImageContentItem&gt;&#xA;    interface IPersistableModel&lt;ChatMessageImageContentItem&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.Inference</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.AI.Inference.ChatMessageContentItem</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> A structured chat content item containing an image reference. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatMessageImageContentItem (Uri imageUri, Azure.AI.Inference.ChatMessageImageDetailLevel? detailLevel = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri imageUri, valuetype System.Nullable`1&lt;valuetype Azure.AI.Inference.ChatMessageImageDetailLevel&gt; detailLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatMessageImageContentItem.#ctor(System.Uri,System.Nullable{Azure.AI.Inference.ChatMessageImageDetailLevel})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (imageUri As Uri, Optional detailLevel As Nullable(Of ChatMessageImageDetailLevel) = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.AI.Inference.ChatMessageImageContentItem : Uri * Nullable&lt;Azure.AI.Inference.ChatMessageImageDetailLevel&gt; -&gt; Azure.AI.Inference.ChatMessageImageContentItem" Usage="new Azure.AI.Inference.ChatMessageImageContentItem (imageUri, detailLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="imageUri" Type="System.Uri" />
        <Parameter Name="detailLevel" Type="System.Nullable&lt;Azure.AI.Inference.ChatMessageImageDetailLevel&gt;" />
      </Parameters>
      <Docs>
        <param name="imageUri"> An internet location, which must be accessible to the model, from which the image may be retrieved. </param>
        <param name="detailLevel"> The image detail level the model should use when evaluating the image. </param>
        <summary>
            Initializes a new instance of ChatMessageImageContentItem that refers to an image at another location via URL.
            </summary>
        <remarks>
            This constructor should only be used for file references. To use binary data, streams, or a file directly,
            please refer to the alternate constructors.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="imageUri" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatMessageImageContentItem (BinaryData bytes, string mimeType, Azure.AI.Inference.ChatMessageImageDetailLevel? detailLevel = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.BinaryData bytes, string mimeType, valuetype System.Nullable`1&lt;valuetype Azure.AI.Inference.ChatMessageImageDetailLevel&gt; detailLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatMessageImageContentItem.#ctor(System.BinaryData,System.String,System.Nullable{Azure.AI.Inference.ChatMessageImageDetailLevel})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bytes As BinaryData, mimeType As String, Optional detailLevel As Nullable(Of ChatMessageImageDetailLevel) = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.AI.Inference.ChatMessageImageContentItem : BinaryData * string * Nullable&lt;Azure.AI.Inference.ChatMessageImageDetailLevel&gt; -&gt; Azure.AI.Inference.ChatMessageImageContentItem" Usage="new Azure.AI.Inference.ChatMessageImageContentItem (bytes, mimeType, detailLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bytes" Type="System.BinaryData" />
        <Parameter Name="mimeType" Type="System.String" />
        <Parameter Name="detailLevel" Type="System.Nullable&lt;Azure.AI.Inference.ChatMessageImageDetailLevel&gt;" />
      </Parameters>
      <Docs>
        <param name="bytes"> The image data to provide as content. </param>
        <param name="mimeType"> The MIME type, e.g. <c>image/png</c>, matching the format of the image data. </param>
        <param name="detailLevel"> The image detail level the model should use when evaluating the image. </param>
        <summary>
            Initializes a new instance of ChatMessageImageContentItem from a BinaryData instance containing image
            information in a known format.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatMessageImageContentItem (System.IO.Stream stream, string mimeType, Azure.AI.Inference.ChatMessageImageDetailLevel? detailLevel = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string mimeType, valuetype System.Nullable`1&lt;valuetype Azure.AI.Inference.ChatMessageImageDetailLevel&gt; detailLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatMessageImageContentItem.#ctor(System.IO.Stream,System.String,System.Nullable{Azure.AI.Inference.ChatMessageImageDetailLevel})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, mimeType As String, Optional detailLevel As Nullable(Of ChatMessageImageDetailLevel) = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.AI.Inference.ChatMessageImageContentItem : System.IO.Stream * string * Nullable&lt;Azure.AI.Inference.ChatMessageImageDetailLevel&gt; -&gt; Azure.AI.Inference.ChatMessageImageContentItem" Usage="new Azure.AI.Inference.ChatMessageImageContentItem (stream, mimeType, detailLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mimeType" Type="System.String" />
        <Parameter Name="detailLevel" Type="System.Nullable&lt;Azure.AI.Inference.ChatMessageImageDetailLevel&gt;" />
      </Parameters>
      <Docs>
        <param name="stream"> The image data to provide as content. </param>
        <param name="mimeType"> The MIME type, e.g. <c>image/png</c>, matching the format of the image data. </param>
        <param name="detailLevel"> The image detail level the model should use when evaluating the image. </param>
        <summary>
            Initializes a new instance of ChatMessageImageContentItem from a BinaryData instance containing image
            information in a known format.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatMessageImageContentItem (string imageFilePath, string mimeType, Azure.AI.Inference.ChatMessageImageDetailLevel? detailLevel = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string imageFilePath, string mimeType, valuetype System.Nullable`1&lt;valuetype Azure.AI.Inference.ChatMessageImageDetailLevel&gt; detailLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatMessageImageContentItem.#ctor(System.String,System.String,System.Nullable{Azure.AI.Inference.ChatMessageImageDetailLevel})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (imageFilePath As String, mimeType As String, Optional detailLevel As Nullable(Of ChatMessageImageDetailLevel) = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.AI.Inference.ChatMessageImageContentItem : string * string * Nullable&lt;Azure.AI.Inference.ChatMessageImageDetailLevel&gt; -&gt; Azure.AI.Inference.ChatMessageImageContentItem" Usage="new Azure.AI.Inference.ChatMessageImageContentItem (imageFilePath, mimeType, detailLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="imageFilePath" Type="System.String" />
        <Parameter Name="mimeType" Type="System.String" />
        <Parameter Name="detailLevel" Type="System.Nullable&lt;Azure.AI.Inference.ChatMessageImageDetailLevel&gt;" />
      </Parameters>
      <Docs>
        <param name="imageFilePath"> The path to the image to use. </param>
        <param name="mimeType"> The MIME type, e.g. <c>image/png</c>, matching the format of the image data. </param>
        <param name="detailLevel"> The image detail level the model should use when evaluating the image. </param>
        <summary>
            Initializes a new instance of ChatMessageImageContentItem from a file pointer to an image
            in a known format.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.Inference.ChatMessageImageContentItem IJsonModel&lt;ChatMessageImageContentItem&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.Inference.ChatMessageImageContentItem System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatMessageImageContentItem.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#Inference#ChatMessageImageContentItem&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As ChatMessageImageContentItem Implements IJsonModel(Of ChatMessageImageContentItem).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Inference.ChatMessageImageContentItem&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Inference.ChatMessageImageContentItem" Usage="chatMessageImageContentItem.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Inference.ChatMessageImageContentItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;ChatMessageImageContentItem&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatMessageImageContentItem.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#Inference#ChatMessageImageContentItem&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of ChatMessageImageContentItem).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="chatMessageImageContentItem.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.Inference.ChatMessageImageContentItem IPersistableModel&lt;ChatMessageImageContentItem&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.Inference.ChatMessageImageContentItem System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatMessageImageContentItem.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Inference#ChatMessageImageContentItem&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As ChatMessageImageContentItem Implements IPersistableModel(Of ChatMessageImageContentItem).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Inference.ChatMessageImageContentItem&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Inference.ChatMessageImageContentItem" Usage="chatMessageImageContentItem.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Inference.ChatMessageImageContentItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;ChatMessageImageContentItem&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatMessageImageContentItem.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Inference#ChatMessageImageContentItem&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of ChatMessageImageContentItem).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="chatMessageImageContentItem.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;ChatMessageImageContentItem&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatMessageImageContentItem.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Inference#ChatMessageImageContentItem&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of ChatMessageImageContentItem).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="chatMessageImageContentItem.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatMessageImageContentItem&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
