<Type Name="ChatCompletionsOptions" FullName="Azure.AI.Inference.ChatCompletionsOptions">
  <TypeSignature Language="C#" Value="public class ChatCompletionsOptions : System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChatCompletionsOptions extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.AI.Inference.ChatCompletionsOptions&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.AI.Inference.ChatCompletionsOptions&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.Inference.ChatCompletionsOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ChatCompletionsOptions&#xA;Implements IJsonModel(Of ChatCompletionsOptions), IPersistableModel(Of ChatCompletionsOptions)" />
  <TypeSignature Language="F#" Value="type ChatCompletionsOptions = class&#xA;    interface IJsonModel&lt;ChatCompletionsOptions&gt;&#xA;    interface IPersistableModel&lt;ChatCompletionsOptions&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.Inference</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            The configuration information for a chat completions request.
            Completions support a wide variety of tasks and generate text that continues from or "completes"
            provided prompt data.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatCompletionsOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatCompletionsOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Inference.ChatCompletionsOptions" />. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatCompletionsOptions (System.Collections.Generic.IEnumerable&lt;Azure.AI.Inference.ChatRequestMessage&gt; messages);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Inference.ChatRequestMessage&gt; messages) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatCompletionsOptions.#ctor(System.Collections.Generic.IEnumerable{Azure.AI.Inference.ChatRequestMessage})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (messages As IEnumerable(Of ChatRequestMessage))" />
      <MemberSignature Language="F#" Value="new Azure.AI.Inference.ChatCompletionsOptions : seq&lt;Azure.AI.Inference.ChatRequestMessage&gt; -&gt; Azure.AI.Inference.ChatCompletionsOptions" Usage="new Azure.AI.Inference.ChatCompletionsOptions messages" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="messages" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Inference.ChatRequestMessage&gt;" />
      </Parameters>
      <Docs>
        <param name="messages">
            The collection of context messages associated with this chat completions request.
            Typical usage begins with a chat message for the System role that provides instructions for
            the behavior of the assistant, followed by alternating messages between the User and
            Assistant roles.
            Please note <see cref="T:Azure.AI.Inference.ChatRequestMessage" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.AI.Inference.ChatRequestAssistantMessage" />, <see cref="T:Azure.AI.Inference.ChatRequestSystemMessage" />, <see cref="T:Azure.AI.Inference.ChatRequestToolMessage" /> and <see cref="T:Azure.AI.Inference.ChatRequestUserMessage" />.
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Inference.ChatCompletionsOptions" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="messages" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AdditionalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,BinaryData&gt; AdditionalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.BinaryData&gt; AdditionalProperties" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Inference.ChatCompletionsOptions.AdditionalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdditionalProperties As IDictionary(Of String, BinaryData)" />
      <MemberSignature Language="F#" Value="member this.AdditionalProperties : System.Collections.Generic.IDictionary&lt;string, BinaryData&gt;" Usage="Azure.AI.Inference.ChatCompletionsOptions.AdditionalProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Additional Properties
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FrequencyPenalty">
      <MemberSignature Language="C#" Value="public float? FrequencyPenalty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float32&gt; FrequencyPenalty" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Inference.ChatCompletionsOptions.FrequencyPenalty" />
      <MemberSignature Language="VB.NET" Value="Public Property FrequencyPenalty As Nullable(Of Single)" />
      <MemberSignature Language="F#" Value="member this.FrequencyPenalty : Nullable&lt;single&gt; with get, set" Usage="Azure.AI.Inference.ChatCompletionsOptions.FrequencyPenalty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A value that influences the probability of generated tokens appearing based on their cumulative
            frequency in generated text.
            Positive values will make tokens less likely to appear as their frequency increases and
            decrease the likelihood of the model repeating the same statements verbatim.
            Supported range is [-2, 2].
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTokens">
      <MemberSignature Language="C#" Value="public int? MaxTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MaxTokens" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Inference.ChatCompletionsOptions.MaxTokens" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxTokens As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MaxTokens : Nullable&lt;int&gt; with get, set" Usage="Azure.AI.Inference.ChatCompletionsOptions.MaxTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The maximum number of tokens to generate. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Messages">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.AI.Inference.ChatRequestMessage&gt; Messages { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.AI.Inference.ChatRequestMessage&gt; Messages" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Inference.ChatCompletionsOptions.Messages" />
      <MemberSignature Language="VB.NET" Value="Public Property Messages As IList(Of ChatRequestMessage)" />
      <MemberSignature Language="F#" Value="member this.Messages : System.Collections.Generic.IList&lt;Azure.AI.Inference.ChatRequestMessage&gt; with get, set" Usage="Azure.AI.Inference.ChatCompletionsOptions.Messages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.AI.Inference.ChatRequestMessage&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The collection of context messages associated with this chat completions request.
            Typical usage begins with a chat message for the System role that provides instructions for
            the behavior of the assistant, followed by alternating messages between the User and
            Assistant roles.
            Please note <see cref="T:Azure.AI.Inference.ChatRequestMessage" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.AI.Inference.ChatRequestAssistantMessage" />, <see cref="T:Azure.AI.Inference.ChatRequestSystemMessage" />, <see cref="T:Azure.AI.Inference.ChatRequestToolMessage" /> and <see cref="T:Azure.AI.Inference.ChatRequestUserMessage" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public string Model { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Model" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Inference.ChatCompletionsOptions.Model" />
      <MemberSignature Language="VB.NET" Value="Public Property Model As String" />
      <MemberSignature Language="F#" Value="member this.Model : string with get, set" Usage="Azure.AI.Inference.ChatCompletionsOptions.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> ID of the specific AI model to use, if more than one model is available on the endpoint. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NucleusSamplingFactor">
      <MemberSignature Language="C#" Value="public float? NucleusSamplingFactor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float32&gt; NucleusSamplingFactor" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Inference.ChatCompletionsOptions.NucleusSamplingFactor" />
      <MemberSignature Language="VB.NET" Value="Public Property NucleusSamplingFactor As Nullable(Of Single)" />
      <MemberSignature Language="F#" Value="member this.NucleusSamplingFactor : Nullable&lt;single&gt; with get, set" Usage="Azure.AI.Inference.ChatCompletionsOptions.NucleusSamplingFactor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An alternative to sampling with temperature called nucleus sampling. This value causes the
            model to consider the results of tokens with the provided probability mass. As an example, a
            value of 0.15 will cause only the tokens comprising the top 15% of probability mass to be
            considered.
            It is not recommended to modify temperature and top_p for the same completions request as the
            interaction of these two settings is difficult to predict.
            Supported range is [0, 1].
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresencePenalty">
      <MemberSignature Language="C#" Value="public float? PresencePenalty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float32&gt; PresencePenalty" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Inference.ChatCompletionsOptions.PresencePenalty" />
      <MemberSignature Language="VB.NET" Value="Public Property PresencePenalty As Nullable(Of Single)" />
      <MemberSignature Language="F#" Value="member this.PresencePenalty : Nullable&lt;single&gt; with get, set" Usage="Azure.AI.Inference.ChatCompletionsOptions.PresencePenalty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A value that influences the probability of generated tokens appearing based on their existing
            presence in generated text.
            Positive values will make tokens less likely to appear when they already exist and increase the
            model's likelihood to output new topics.
            Supported range is [-2, 2].
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseFormat">
      <MemberSignature Language="C#" Value="public Azure.AI.Inference.ChatCompletionsResponseFormat ResponseFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.Inference.ChatCompletionsResponseFormat ResponseFormat" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Inference.ChatCompletionsOptions.ResponseFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseFormat As ChatCompletionsResponseFormat" />
      <MemberSignature Language="F#" Value="member this.ResponseFormat : Azure.AI.Inference.ChatCompletionsResponseFormat with get, set" Usage="Azure.AI.Inference.ChatCompletionsOptions.ResponseFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Inference.ChatCompletionsResponseFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The format that the model must output. Use this to enable JSON mode instead of the default text mode.
            Note that to enable JSON mode, some AI models may also require you to instruct the model to produce JSON
            via a system or user message.
            Please note <see cref="T:Azure.AI.Inference.ChatCompletionsResponseFormat" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.AI.Inference.ChatCompletionsResponseFormatJSON" /> and <see cref="T:Azure.AI.Inference.ChatCompletionsResponseFormatText" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Seed">
      <MemberSignature Language="C#" Value="public long? Seed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; Seed" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Inference.ChatCompletionsOptions.Seed" />
      <MemberSignature Language="VB.NET" Value="Public Property Seed As Nullable(Of Long)" />
      <MemberSignature Language="F#" Value="member this.Seed : Nullable&lt;int64&gt; with get, set" Usage="Azure.AI.Inference.ChatCompletionsOptions.Seed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If specified, the system will make a best effort to sample deterministically such that repeated requests with the
            same seed and parameters should return the same result. Determinism is not guaranteed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopSequences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; StopSequences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; StopSequences" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Inference.ChatCompletionsOptions.StopSequences" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StopSequences As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.StopSequences : System.Collections.Generic.IList&lt;string&gt;" Usage="Azure.AI.Inference.ChatCompletionsOptions.StopSequences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A collection of textual sequences that will end completions generation. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.Inference.ChatCompletionsOptions IJsonModel&lt;ChatCompletionsOptions&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.Inference.ChatCompletionsOptions System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatCompletionsOptions.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#Inference#ChatCompletionsOptions&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As ChatCompletionsOptions Implements IJsonModel(Of ChatCompletionsOptions).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Inference.ChatCompletionsOptions&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Inference.ChatCompletionsOptions" Usage="chatCompletionsOptions.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Inference.ChatCompletionsOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;ChatCompletionsOptions&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatCompletionsOptions.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#Inference#ChatCompletionsOptions&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of ChatCompletionsOptions).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="chatCompletionsOptions.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.Inference.ChatCompletionsOptions IPersistableModel&lt;ChatCompletionsOptions&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.Inference.ChatCompletionsOptions System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatCompletionsOptions.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Inference#ChatCompletionsOptions&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As ChatCompletionsOptions Implements IPersistableModel(Of ChatCompletionsOptions).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Inference.ChatCompletionsOptions&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Inference.ChatCompletionsOptions" Usage="chatCompletionsOptions.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Inference.ChatCompletionsOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;ChatCompletionsOptions&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatCompletionsOptions.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Inference#ChatCompletionsOptions&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of ChatCompletionsOptions).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="chatCompletionsOptions.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;ChatCompletionsOptions&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatCompletionsOptions.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Inference#ChatCompletionsOptions&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of ChatCompletionsOptions).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="chatCompletionsOptions.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsOptions&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Temperature">
      <MemberSignature Language="C#" Value="public float? Temperature { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float32&gt; Temperature" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Inference.ChatCompletionsOptions.Temperature" />
      <MemberSignature Language="VB.NET" Value="Public Property Temperature As Nullable(Of Single)" />
      <MemberSignature Language="F#" Value="member this.Temperature : Nullable&lt;single&gt; with get, set" Usage="Azure.AI.Inference.ChatCompletionsOptions.Temperature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The sampling temperature to use that controls the apparent creativity of generated completions.
            Higher values will make output more random while lower values will make results more focused
            and deterministic.
            It is not recommended to modify temperature and top_p for the same completions request as the
            interaction of these two settings is difficult to predict.
            Supported range is [0, 1].
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolChoice">
      <MemberSignature Language="C#" Value="public Azure.AI.Inference.ChatCompletionsToolChoice ToolChoice { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.Inference.ChatCompletionsToolChoice ToolChoice" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Inference.ChatCompletionsOptions.ToolChoice" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolChoice As ChatCompletionsToolChoice" />
      <MemberSignature Language="F#" Value="member this.ToolChoice : Azure.AI.Inference.ChatCompletionsToolChoice with get, set" Usage="Azure.AI.Inference.ChatCompletionsOptions.ToolChoice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Inference.ChatCompletionsToolChoice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If specified, the model will configure which of the provided tools it can use for the chat completions response.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tools">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.AI.Inference.ChatCompletionsToolDefinition&gt; Tools { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.AI.Inference.ChatCompletionsToolDefinition&gt; Tools" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Inference.ChatCompletionsOptions.Tools" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tools As IList(Of ChatCompletionsToolDefinition)" />
      <MemberSignature Language="F#" Value="member this.Tools : System.Collections.Generic.IList&lt;Azure.AI.Inference.ChatCompletionsToolDefinition&gt;" Usage="Azure.AI.Inference.ChatCompletionsOptions.Tools" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.AI.Inference.ChatCompletionsToolDefinition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A list of tools the model may request to call. Currently, only functions are supported as a tool. The model
            may response with a function call request and provide the input arguments in JSON format for that function.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
