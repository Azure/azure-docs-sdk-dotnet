<Type Name="ResourceModelWithAllowedPropertySet" FullName="Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet">
  <TypeSignature Language="C#" Value="public class ResourceModelWithAllowedPropertySet : Microsoft.Rest.Azure.IResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResourceModelWithAllowedPropertySet extends System.Object implements class Microsoft.Rest.Azure.IResource" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceModelWithAllowedPropertySet&#xA;Implements IResource" />
  <TypeSignature Language="F#" Value="type ResourceModelWithAllowedPropertySet = class&#xA;    interface IResource" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.MixedReality</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Rest.Azure.IResource</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            The resource model definition containing the full set of allowed
            properties for a resource. Except properties bag, there cannot be a top
            level property outside of this set.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceModelWithAllowedPropertySet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.MixedReality</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the
            ResourceModelWithAllowedPropertySet class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceModelWithAllowedPropertySet (string id = default, string name = default, string type = default, string location = default, string managedBy = default, string kind = default, string etag = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetIdentity identity = default, Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetSku sku = default, Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetPlan plan = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id, string name, string type, string location, string managedBy, string kind, string etag, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, class Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetIdentity identity, class Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetSku sku, class Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetPlan plan) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetIdentity,Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetSku,Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetPlan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional id As String = Nothing, Optional name As String = Nothing, Optional type As String = Nothing, Optional location As String = Nothing, Optional managedBy As String = Nothing, Optional kind As String = Nothing, Optional etag As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional identity As ResourceModelWithAllowedPropertySetIdentity = Nothing, Optional sku As ResourceModelWithAllowedPropertySetSku = Nothing, Optional plan As ResourceModelWithAllowedPropertySetPlan = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet : string * string * string * string * string * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetIdentity * Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetSku * Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetPlan -&gt; Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet" Usage="new Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet (id, name, type, location, managedBy, kind, etag, tags, identity, sku, plan)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.MixedReality</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="location" Type="System.String" />
        <Parameter Name="managedBy" Type="System.String" />
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="etag" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="identity" Type="Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetIdentity" />
        <Parameter Name="sku" Type="Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetSku" />
        <Parameter Name="plan" Type="Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetPlan" />
      </Parameters>
      <Docs>
        <param name="identity">To be added.</param>
        <param name="sku">To be added.</param>
        <param name="plan">To be added.</param>
        <param name="id">Fully qualified resource Id for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        <param name="name">The name of the resource</param>
        <param name="type">The type of the resource. Ex-
            Microsoft.Compute/virtualMachines or
            Microsoft.Storage/storageAccounts..</param>
        <param name="location">The geo-location where the resource
            lives</param>
        <param name="managedBy">The  fully qualified resource ID of the
            resource that manages this resource. Indicates if this resource is
            managed by another azure resource. If this is present, complete
            mode deployment will not delete the resource if it is removed from
            the template since it is managed by another resource.</param>
        <param name="kind">Metadata used by portal/tooling/etc to render
            different UX experiences for resources of the same type; e.g.
            ApiApps are a kind of Microsoft.Web/sites type.  If supported, the
            resource provider must validate and persist this value.</param>
        <param name="etag">The etag field is *not* required. If it is
            provided in the response body, it must also be provided as a header
            per the normal etag convention.  Entity tags are used for comparing
            two or more entities from the same requested resource. HTTP/1.1
            uses entity tags in the etag (section 14.19), If-Match (section
            14.24), If-None-Match (section 14.26), and If-Range (section 14.27)
            header fields. </param>
        <param name="tags">Resource tags.</param>
        <summary>
            Initializes a new instance of the
            ResourceModelWithAllowedPropertySet class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Etag">
      <MemberSignature Language="C#" Value="public string Etag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Etag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet.Etag" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Etag As String" />
      <MemberSignature Language="F#" Value="member this.Etag : string" Usage="Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet.Etag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.MixedReality</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="etag")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="etag")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the etag field is *not* required. If it is provided in the
            response body, it must also be provided as a header per the normal
            etag convention.  Entity tags are used for comparing two or more
            entities from the same requested resource. HTTP/1.1 uses entity
            tags in the etag (section 14.19), If-Match (section 14.24),
            If-None-Match (section 14.26), and If-Range (section 14.27) header
            fields.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.MixedReality</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="id")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="id")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets fully qualified resource Id for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetIdentity Identity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Property Identity As ResourceModelWithAllowedPropertySetIdentity" />
      <MemberSignature Language="F#" Value="member this.Identity : Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetIdentity with get, set" Usage="Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.MixedReality</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="identity")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="identity")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary />
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Kind">
      <MemberSignature Language="C#" Value="public string Kind { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Kind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet.Kind" />
      <MemberSignature Language="VB.NET" Value="Public Property Kind As String" />
      <MemberSignature Language="F#" Value="member this.Kind : string with get, set" Usage="Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet.Kind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.MixedReality</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="kind")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="kind")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets metadata used by portal/tooling/etc to render
            different UX experiences for resources of the same type; e.g.
            ApiApps are a kind of Microsoft.Web/sites type.  If supported, the
            resource provider must validate and persist this value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public string Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As String" />
      <MemberSignature Language="F#" Value="member this.Location : string with get, set" Usage="Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.MixedReality</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="location")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="location")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the geo-location where the resource lives
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedBy">
      <MemberSignature Language="C#" Value="public string ManagedBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ManagedBy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet.ManagedBy" />
      <MemberSignature Language="VB.NET" Value="Public Property ManagedBy As String" />
      <MemberSignature Language="F#" Value="member this.ManagedBy : string with get, set" Usage="Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet.ManagedBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.MixedReality</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="managedBy")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="managedBy")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the  fully qualified resource ID of the resource that
            manages this resource. Indicates if this resource is managed by
            another azure resource. If this is present, complete mode
            deployment will not delete the resource if it is removed from the
            template since it is managed by another resource.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.MixedReality</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="name")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="name")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the resource
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Plan">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetPlan Plan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetPlan Plan" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet.Plan" />
      <MemberSignature Language="VB.NET" Value="Public Property Plan As ResourceModelWithAllowedPropertySetPlan" />
      <MemberSignature Language="F#" Value="member this.Plan : Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetPlan with get, set" Usage="Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet.Plan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.MixedReality</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="plan")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="plan")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetPlan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary />
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sku">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetSku Sku { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetSku Sku" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet.Sku" />
      <MemberSignature Language="VB.NET" Value="Public Property Sku As ResourceModelWithAllowedPropertySetSku" />
      <MemberSignature Language="F#" Value="member this.Sku : Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetSku with get, set" Usage="Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet.Sku" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.MixedReality</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="sku")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="sku")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySetSku</ReturnType>
      </ReturnValue>
      <Docs>
        <summary />
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tags">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Tags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Tags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet.Tags" />
      <MemberSignature Language="VB.NET" Value="Public Property Tags As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.Tags : System.Collections.Generic.IDictionary&lt;string, string&gt; with get, set" Usage="Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet.Tags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.MixedReality</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="tags")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="tags")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets resource tags.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" />
      <MemberSignature Language="F#" Value="member this.Type : string" Usage="Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.MixedReality</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="type")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="type")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the type of the resource. Ex-
            Microsoft.Compute/virtualMachines or
            Microsoft.Storage/storageAccounts..
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.MixedReality.Models.ResourceModelWithAllowedPropertySet.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="resourceModelWithAllowedPropertySet.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.MixedReality</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
