<Type Name="MockableKeyVaultSubscriptionResource" FullName="Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableKeyVaultSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableKeyVaultSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableKeyVaultSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableKeyVaultSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableKeyVaultSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckKeyVaultNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityResult&gt; CheckKeyVaultNameAvailability (Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityResult&gt; CheckKeyVaultNameAvailability(class Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.CheckKeyVaultNameAvailability(Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckKeyVaultNameAvailability (content As KeyVaultNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KeyVaultNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckKeyVaultNameAvailability : Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityResult&gt;&#xA;override this.CheckKeyVaultNameAvailability : Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityResult&gt;" Usage="mockableKeyVaultSubscriptionResource.CheckKeyVaultNameAvailability (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The name of the vault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that the vault name is valid and is not already in use.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/checkNameAvailability</description></item><item><term>Operation Id</term><description>Vaults_CheckNameAvailability</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckKeyVaultNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityResult&gt;&gt; CheckKeyVaultNameAvailabilityAsync (Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityResult&gt;&gt; CheckKeyVaultNameAvailabilityAsync(class Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.CheckKeyVaultNameAvailabilityAsync(Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckKeyVaultNameAvailabilityAsync (content As KeyVaultNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KeyVaultNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckKeyVaultNameAvailabilityAsync : Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityResult&gt;&gt;&#xA;override this.CheckKeyVaultNameAvailabilityAsync : Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityResult&gt;&gt;" Usage="mockableKeyVaultSubscriptionResource.CheckKeyVaultNameAvailabilityAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The name of the vault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that the vault name is valid and is not already in use.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/checkNameAvailability</description></item><item><term>Operation Id</term><description>Vaults_CheckNameAvailability</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckManagedHsmNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityResult&gt; CheckManagedHsmNameAvailability (Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityResult&gt; CheckManagedHsmNameAvailability(class Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.CheckManagedHsmNameAvailability(Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckManagedHsmNameAvailability (content As ManagedHsmNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedHsmNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckManagedHsmNameAvailability : Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityResult&gt;&#xA;override this.CheckManagedHsmNameAvailability : Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityResult&gt;" Usage="mockableKeyVaultSubscriptionResource.CheckManagedHsmNameAvailability (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The name of the managed hsm. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that the managed hsm name is valid and is not already in use.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/checkMhsmNameAvailability</description></item><item><term>Operation Id</term><description>ManagedHsms_CheckMhsmNameAvailability</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckManagedHsmNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityResult&gt;&gt; CheckManagedHsmNameAvailabilityAsync (Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityResult&gt;&gt; CheckManagedHsmNameAvailabilityAsync(class Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.CheckManagedHsmNameAvailabilityAsync(Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckManagedHsmNameAvailabilityAsync (content As ManagedHsmNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedHsmNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckManagedHsmNameAvailabilityAsync : Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityResult&gt;&gt;&#xA;override this.CheckManagedHsmNameAvailabilityAsync : Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityResult&gt;&gt;" Usage="mockableKeyVaultSubscriptionResource.CheckManagedHsmNameAvailabilityAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The name of the managed hsm. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that the managed hsm name is valid and is not already in use.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/checkMhsmNameAvailability</description></item><item><term>Operation Id</term><description>ManagedHsms_CheckMhsmNameAvailability</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedKeyVault">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt; GetDeletedKeyVault (Azure.Core.AzureLocation location, string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt; GetDeletedKeyVault(valuetype Azure.Core.AzureLocation location, string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetDeletedKeyVault(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedKeyVault (location As AzureLocation, vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeletedKeyVaultResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedKeyVault : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;&#xA;override this.GetDeletedKeyVault : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;" Usage="mockableKeyVaultSubscriptionResource.GetDeletedKeyVault (location, vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the deleted vault. </param>
        <param name="vaultName"> The name of the vault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the deleted Azure key vault.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedVaults/{vaultName}</description></item><item><term>Operation Id</term><description>Vaults_GetDeleted</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedKeyVaultAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;&gt; GetDeletedKeyVaultAsync (Azure.Core.AzureLocation location, string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;&gt; GetDeletedKeyVaultAsync(valuetype Azure.Core.AzureLocation location, string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetDeletedKeyVaultAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedKeyVaultAsync (location As AzureLocation, vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeletedKeyVaultResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedKeyVaultAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;&gt;&#xA;override this.GetDeletedKeyVaultAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;&gt;" Usage="mockableKeyVaultSubscriptionResource.GetDeletedKeyVaultAsync (location, vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the deleted vault. </param>
        <param name="vaultName"> The name of the vault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the deleted Azure key vault.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedVaults/{vaultName}</description></item><item><term>Operation Id</term><description>Vaults_GetDeleted</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedKeyVaults">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.KeyVault.DeletedKeyVaultCollection GetDeletedKeyVaults ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.KeyVault.DeletedKeyVaultCollection GetDeletedKeyVaults() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetDeletedKeyVaults" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedKeyVaults () As DeletedKeyVaultCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedKeyVaults : unit -&gt; Azure.ResourceManager.KeyVault.DeletedKeyVaultCollection&#xA;override this.GetDeletedKeyVaults : unit -&gt; Azure.ResourceManager.KeyVault.DeletedKeyVaultCollection" Usage="mockableKeyVaultSubscriptionResource.GetDeletedKeyVaults " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.KeyVault.DeletedKeyVaultCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DeletedKeyVaultResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of DeletedKeyVaultResources and their operations over a DeletedKeyVaultResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedKeyVaults">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt; GetDeletedKeyVaults (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt; GetDeletedKeyVaults(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetDeletedKeyVaults(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedKeyVaults (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DeletedKeyVaultResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedKeyVaults : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;&#xA;override this.GetDeletedKeyVaults : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;" Usage="mockableKeyVaultSubscriptionResource.GetDeletedKeyVaults cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about the deleted vaults in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/deletedVaults</description></item><item><term>Operation Id</term><description>Vaults_ListDeleted</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.KeyVault.DeletedKeyVaultResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedKeyVaultsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt; GetDeletedKeyVaultsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt; GetDeletedKeyVaultsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetDeletedKeyVaultsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedKeyVaultsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DeletedKeyVaultResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedKeyVaultsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;&#xA;override this.GetDeletedKeyVaultsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;" Usage="mockableKeyVaultSubscriptionResource.GetDeletedKeyVaultsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about the deleted vaults in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/deletedVaults</description></item><item><term>Operation Id</term><description>Vaults_ListDeleted</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.KeyVault.DeletedKeyVaultResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedManagedHsm">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt; GetDeletedManagedHsm (Azure.Core.AzureLocation location, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt; GetDeletedManagedHsm(valuetype Azure.Core.AzureLocation location, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetDeletedManagedHsm(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedManagedHsm (location As AzureLocation, name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeletedManagedHsmResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedManagedHsm : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt;&#xA;override this.GetDeletedManagedHsm : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt;" Usage="mockableKeyVaultSubscriptionResource.GetDeletedManagedHsm (location, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the deleted managed HSM. </param>
        <param name="name"> The name of the deleted managed HSM. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified deleted managed HSM.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedManagedHSMs/{name}</description></item><item><term>Operation Id</term><description>ManagedHsms_GetDeleted</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedManagedHsmAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt;&gt; GetDeletedManagedHsmAsync (Azure.Core.AzureLocation location, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt;&gt; GetDeletedManagedHsmAsync(valuetype Azure.Core.AzureLocation location, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetDeletedManagedHsmAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedManagedHsmAsync (location As AzureLocation, name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeletedManagedHsmResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedManagedHsmAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt;&gt;&#xA;override this.GetDeletedManagedHsmAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt;&gt;" Usage="mockableKeyVaultSubscriptionResource.GetDeletedManagedHsmAsync (location, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the deleted managed HSM. </param>
        <param name="name"> The name of the deleted managed HSM. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified deleted managed HSM.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedManagedHSMs/{name}</description></item><item><term>Operation Id</term><description>ManagedHsms_GetDeleted</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedManagedHsms">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.KeyVault.DeletedManagedHsmCollection GetDeletedManagedHsms ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.KeyVault.DeletedManagedHsmCollection GetDeletedManagedHsms() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetDeletedManagedHsms" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedManagedHsms () As DeletedManagedHsmCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedManagedHsms : unit -&gt; Azure.ResourceManager.KeyVault.DeletedManagedHsmCollection&#xA;override this.GetDeletedManagedHsms : unit -&gt; Azure.ResourceManager.KeyVault.DeletedManagedHsmCollection" Usage="mockableKeyVaultSubscriptionResource.GetDeletedManagedHsms " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.KeyVault.DeletedManagedHsmCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DeletedManagedHsmResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of DeletedManagedHsmResources and their operations over a DeletedManagedHsmResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedManagedHsms">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt; GetDeletedManagedHsms (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt; GetDeletedManagedHsms(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetDeletedManagedHsms(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedManagedHsms (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DeletedManagedHsmResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedManagedHsms : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt;&#xA;override this.GetDeletedManagedHsms : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt;" Usage="mockableKeyVaultSubscriptionResource.GetDeletedManagedHsms cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The List operation gets information about the deleted managed HSMs associated with the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/deletedManagedHSMs</description></item><item><term>Operation Id</term><description>ManagedHsms_ListDeleted</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.KeyVault.DeletedManagedHsmResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedManagedHsmsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt; GetDeletedManagedHsmsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt; GetDeletedManagedHsmsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetDeletedManagedHsmsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedManagedHsmsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DeletedManagedHsmResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedManagedHsmsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt;&#xA;override this.GetDeletedManagedHsmsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt;" Usage="mockableKeyVaultSubscriptionResource.GetDeletedManagedHsmsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The List operation gets information about the deleted managed HSMs associated with the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/deletedManagedHSMs</description></item><item><term>Operation Id</term><description>ManagedHsms_ListDeleted</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.KeyVault.DeletedManagedHsmResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyVaults">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.KeyVault.KeyVaultResource&gt; GetKeyVaults (int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.KeyVault.KeyVaultResource&gt; GetKeyVaults(valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetKeyVaults(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeyVaults (Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of KeyVaultResource)" />
      <MemberSignature Language="F#" Value="abstract member GetKeyVaults : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.KeyVault.KeyVaultResource&gt;&#xA;override this.GetKeyVaults : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.KeyVault.KeyVaultResource&gt;" Usage="mockableKeyVaultSubscriptionResource.GetKeyVaults (top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.KeyVault.KeyVaultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> Maximum number of results to return. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The List operation gets information about the vaults associated with the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/vaults</description></item><item><term>Operation Id</term><description>Vaults_ListBySubscription</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.KeyVault.KeyVaultResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyVaultsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.KeyVaultResource&gt; GetKeyVaultsAsync (int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.KeyVault.KeyVaultResource&gt; GetKeyVaultsAsync(valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetKeyVaultsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeyVaultsAsync (Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of KeyVaultResource)" />
      <MemberSignature Language="F#" Value="abstract member GetKeyVaultsAsync : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.KeyVaultResource&gt;&#xA;override this.GetKeyVaultsAsync : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.KeyVaultResource&gt;" Usage="mockableKeyVaultSubscriptionResource.GetKeyVaultsAsync (top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.KeyVaultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> Maximum number of results to return. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The List operation gets information about the vaults associated with the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/vaults</description></item><item><term>Operation Id</term><description>Vaults_ListBySubscription</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.KeyVault.KeyVaultResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedHsms">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.KeyVault.ManagedHsmResource&gt; GetManagedHsms (int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.KeyVault.ManagedHsmResource&gt; GetManagedHsms(valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetManagedHsms(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedHsms (Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ManagedHsmResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedHsms : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.KeyVault.ManagedHsmResource&gt;&#xA;override this.GetManagedHsms : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.KeyVault.ManagedHsmResource&gt;" Usage="mockableKeyVaultSubscriptionResource.GetManagedHsms (top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.KeyVault.ManagedHsmResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> Maximum number of results to return. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The List operation gets information about the managed HSM Pools associated with the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/managedHSMs</description></item><item><term>Operation Id</term><description>ManagedHsms_ListBySubscription</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.KeyVault.ManagedHsmResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedHsmsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.ManagedHsmResource&gt; GetManagedHsmsAsync (int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.KeyVault.ManagedHsmResource&gt; GetManagedHsmsAsync(valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetManagedHsmsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedHsmsAsync (Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ManagedHsmResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedHsmsAsync : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.ManagedHsmResource&gt;&#xA;override this.GetManagedHsmsAsync : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.ManagedHsmResource&gt;" Usage="mockableKeyVaultSubscriptionResource.GetManagedHsmsAsync (top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.ManagedHsmResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> Maximum number of results to return. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The List operation gets information about the managed HSM Pools associated with the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/managedHSMs</description></item><item><term>Operation Id</term><description>ManagedHsms_ListBySubscription</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.KeyVault.ManagedHsmResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
