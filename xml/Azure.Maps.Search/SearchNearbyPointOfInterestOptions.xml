<Type Name="SearchNearbyPointOfInterestOptions" FullName="Azure.Maps.Search.SearchNearbyPointOfInterestOptions">
  <TypeSignature Language="C#" Value="public class SearchNearbyPointOfInterestOptions : Azure.Maps.Search.SearchPointOfInterestOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SearchNearbyPointOfInterestOptions extends Azure.Maps.Search.SearchPointOfInterestOptions" />
  <TypeSignature Language="DocId" Value="T:Azure.Maps.Search.SearchNearbyPointOfInterestOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class SearchNearbyPointOfInterestOptions&#xA;Inherits SearchPointOfInterestOptions" />
  <TypeSignature Language="F#" Value="type SearchNearbyPointOfInterestOptions = class&#xA;    inherit SearchPointOfInterestOptions" />
  <AssemblyInfo>
    <AssemblyName>Azure.Maps.Search</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Maps.Search.SearchPointOfInterestOptions</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Options. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchNearbyPointOfInterestOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Search.SearchNearbyPointOfInterestOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Search</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedPostalCodesFor">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Azure.Maps.Search.Models.SearchIndex&gt; ExtendedPostalCodesFor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.Maps.Search.Models.SearchIndex&gt; ExtendedPostalCodesFor" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Search.SearchNearbyPointOfInterestOptions.ExtendedPostalCodesFor" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedPostalCodesFor As IEnumerable(Of SearchIndex)" />
      <MemberSignature Language="F#" Value="member this.ExtendedPostalCodesFor : seq&lt;Azure.Maps.Search.Models.SearchIndex&gt; with get, set" Usage="Azure.Maps.Search.SearchNearbyPointOfInterestOptions.ExtendedPostalCodesFor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Search</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Azure.Maps.Search.Models.SearchIndex&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Indexes for which extended postal codes should be included in the results.
            
             Available indexes are:
            
              **Addr** = Address ranges
            
              **Geo** = Geographies
            
              **PAD** = Point Addresses
            
              **POI** = Points of Interest
            
              **Str** = Streets
            
              **XStr** = Cross Streets (intersections)
            
             Value should be a comma separated list of index types (in any order) or **None** for no indexes.
            
             By default extended postal codes are included for all indexes except Geo. Extended postal code lists for geographies can be quite long so they have to be explicitly requested when needed.
            
             Usage examples:
            
              extendedPostalCodesFor=POI
            
              extendedPostalCodesFor=PAD,Addr,POI
            
              extendedPostalCodesFor=None
            
             Extended postal code is returned as an **extendedPostalCode** property of an address. Availability is region-dependent.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
