<Type Name="SearchPointOfInterestCategoryOptions" FullName="Azure.Maps.Search.SearchPointOfInterestCategoryOptions">
  <TypeSignature Language="C#" Value="public class SearchPointOfInterestCategoryOptions : Azure.Maps.Search.SearchPointOfInterestOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SearchPointOfInterestCategoryOptions extends Azure.Maps.Search.SearchPointOfInterestOptions" />
  <TypeSignature Language="DocId" Value="T:Azure.Maps.Search.SearchPointOfInterestCategoryOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class SearchPointOfInterestCategoryOptions&#xA;Inherits SearchPointOfInterestOptions" />
  <TypeSignature Language="F#" Value="type SearchPointOfInterestCategoryOptions = class&#xA;    inherit SearchPointOfInterestOptions" />
  <AssemblyInfo>
    <AssemblyName>Azure.Maps.Search</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Maps.Search.SearchPointOfInterestOptions</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Options. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchPointOfInterestCategoryOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Search.SearchPointOfInterestCategoryOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Search</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundingBox">
      <MemberSignature Language="C#" Value="public Azure.Core.GeoJson.GeoBoundingBox BoundingBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.GeoJson.GeoBoundingBox BoundingBox" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Search.SearchPointOfInterestCategoryOptions.BoundingBox" />
      <MemberSignature Language="VB.NET" Value="Public Property BoundingBox As GeoBoundingBox" />
      <MemberSignature Language="F#" Value="member this.BoundingBox : Azure.Core.GeoJson.GeoBoundingBox with get, set" Usage="Azure.Maps.Search.SearchPointOfInterestCategoryOptions.BoundingBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Search</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.GeoJson.GeoBoundingBox</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> bounding box. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedPostalCodesFor">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Azure.Maps.Search.Models.SearchIndex&gt; ExtendedPostalCodesFor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.Maps.Search.Models.SearchIndex&gt; ExtendedPostalCodesFor" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Search.SearchPointOfInterestCategoryOptions.ExtendedPostalCodesFor" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedPostalCodesFor As IEnumerable(Of SearchIndex)" />
      <MemberSignature Language="F#" Value="member this.ExtendedPostalCodesFor : seq&lt;Azure.Maps.Search.Models.SearchIndex&gt; with get, set" Usage="Azure.Maps.Search.SearchPointOfInterestCategoryOptions.ExtendedPostalCodesFor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Search</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Azure.Maps.Search.Models.SearchIndex&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Indexes for which extended postal codes should be included in the results.
            
             Available indexes are:
            
              **Addr** = Address ranges
            
              **Geo** = Geographies
            
              **PAD** = Point Addresses
            
              **POI** = Points of Interest
            
              **Str** = Streets
            
              **XStr** = Cross Streets (intersections)
            
             Value should be a comma separated list of index types (in any order) or **None** for no indexes.
            
             By default extended postal codes are included for all indexes except Geo. Extended postal code lists for geographies can be quite long so they have to be explicitly requested when needed.
            
             Usage examples:
            
              extendedPostalCodesFor=POI
            
              extendedPostalCodesFor=PAD,Addr,POI
            
              extendedPostalCodesFor=None
            
             Extended postal code is returned as an **extendedPostalCode** property of an address. Availability is region-dependent.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTypeAhead">
      <MemberSignature Language="C#" Value="public bool? IsTypeAhead { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsTypeAhead" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Search.SearchPointOfInterestCategoryOptions.IsTypeAhead" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTypeAhead As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsTypeAhead : Nullable&lt;bool&gt; with get, set" Usage="Azure.Maps.Search.SearchPointOfInterestCategoryOptions.IsTypeAhead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Search</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Boolean. If the typeahead flag is set, the query will be interpreted as a partial input and the search will enter predictive mode. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperatingHours">
      <MemberSignature Language="C#" Value="public Azure.Maps.Search.Models.OperatingHoursRange? OperatingHours { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.Maps.Search.Models.OperatingHoursRange&gt; OperatingHours" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Search.SearchPointOfInterestCategoryOptions.OperatingHours" />
      <MemberSignature Language="VB.NET" Value="Public Property OperatingHours As Nullable(Of OperatingHoursRange)" />
      <MemberSignature Language="F#" Value="member this.OperatingHours : Nullable&lt;Azure.Maps.Search.Models.OperatingHoursRange&gt; with get, set" Usage="Azure.Maps.Search.SearchPointOfInterestCategoryOptions.OperatingHours" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Search</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.Maps.Search.Models.OperatingHoursRange&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Hours of operation for a POI (Points of Interest). The availability of hours of operation will vary based on the data available. If not passed, then no opening hours information will be returned.
            Supported value: nextSevenDays
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="query">
      <MemberSignature Language="C#" Value="public string query { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string query" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Search.SearchPointOfInterestCategoryOptions.query" />
      <MemberSignature Language="VB.NET" Value="Public Property query As String" />
      <MemberSignature Language="F#" Value="member this.query : string with get, set" Usage="Azure.Maps.Search.SearchPointOfInterestCategoryOptions.query" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Search</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The POI name to search for (e.g., "statue of liberty", "starbucks", "pizza"). Must be properly URL encoded. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
