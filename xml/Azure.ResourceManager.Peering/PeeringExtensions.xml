<Type Name="PeeringExtensions" FullName="Azure.ResourceManager.Peering.PeeringExtensions">
  <TypeSignature Language="C#" Value="public static class PeeringExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PeeringExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Peering.PeeringExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module PeeringExtensions" />
  <TypeSignature Language="F#" Value="type PeeringExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.Peering. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckPeeringServiceProviderAvailability">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProviderAvailability&gt; CheckPeeringServiceProviderAvailability (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.Peering.Models.CheckPeeringServiceProviderAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;valuetype Azure.ResourceManager.Peering.Models.PeeringServiceProviderAvailability&gt; CheckPeeringServiceProviderAvailability(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.Peering.Models.CheckPeeringServiceProviderAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.CheckPeeringServiceProviderAvailability(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Peering.Models.CheckPeeringServiceProviderAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckPeeringServiceProviderAvailability (subscriptionResource As SubscriptionResource, content As CheckPeeringServiceProviderAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PeeringServiceProviderAvailability)" />
      <MemberSignature Language="F#" Value="static member CheckPeeringServiceProviderAvailability : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.Peering.Models.CheckPeeringServiceProviderAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProviderAvailability&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.CheckPeeringServiceProviderAvailability (subscriptionResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProviderAvailability&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.Peering.Models.CheckPeeringServiceProviderAvailabilityContent" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="content"> The CheckServiceProviderAvailabilityInput indicating customer location and service provider. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks if the peering service provider is present within 1000 miles of customer's location
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/checkServiceProviderAvailability
            Operation Id: CheckServiceProviderAvailability
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckPeeringServiceProviderAvailabilityAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProviderAvailability&gt;&gt; CheckPeeringServiceProviderAvailabilityAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.Peering.Models.CheckPeeringServiceProviderAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;valuetype Azure.ResourceManager.Peering.Models.PeeringServiceProviderAvailability&gt;&gt; CheckPeeringServiceProviderAvailabilityAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.Peering.Models.CheckPeeringServiceProviderAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.CheckPeeringServiceProviderAvailabilityAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Peering.Models.CheckPeeringServiceProviderAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckPeeringServiceProviderAvailabilityAsync (subscriptionResource As SubscriptionResource, content As CheckPeeringServiceProviderAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PeeringServiceProviderAvailability))" />
      <MemberSignature Language="F#" Value="static member CheckPeeringServiceProviderAvailabilityAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.Peering.Models.CheckPeeringServiceProviderAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProviderAvailability&gt;&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.CheckPeeringServiceProviderAvailabilityAsync (subscriptionResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProviderAvailability&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.Peering.Models.CheckPeeringServiceProviderAvailabilityContent" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="content"> The CheckServiceProviderAvailabilityInput indicating customer location and service provider. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks if the peering service provider is present within 1000 miles of customer's location
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/checkServiceProviderAvailability
            Operation Id: CheckServiceProviderAvailability
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckServiceProviderAvailability">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Peering.Models.Enum0&gt; CheckServiceProviderAvailability (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.Peering.Models.CheckServiceProviderAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;valuetype Azure.ResourceManager.Peering.Models.Enum0&gt; CheckServiceProviderAvailability(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.Peering.Models.CheckServiceProviderAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.CheckServiceProviderAvailability(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Peering.Models.CheckServiceProviderAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckServiceProviderAvailability (subscriptionResource As SubscriptionResource, content As CheckServiceProviderAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Enum0)" />
      <MemberSignature Language="F#" Value="static member CheckServiceProviderAvailability : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.Peering.Models.CheckServiceProviderAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Peering.Models.Enum0&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.CheckServiceProviderAvailability (subscriptionResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Peering.Models.Enum0&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="content" Type="Azure.ResourceManager.Peering.Models.CheckServiceProviderAvailabilityContent" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="content"> The CheckServiceProviderAvailabilityInput indicating customer location and service provider. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks if the peering service provider is present within 1000 miles of customer's location
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/checkServiceProviderAvailability
            Operation Id: CheckServiceProviderAvailability
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckServiceProviderAvailabilityAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.Models.Enum0&gt;&gt; CheckServiceProviderAvailabilityAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.Peering.Models.CheckServiceProviderAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;valuetype Azure.ResourceManager.Peering.Models.Enum0&gt;&gt; CheckServiceProviderAvailabilityAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.Peering.Models.CheckServiceProviderAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.CheckServiceProviderAvailabilityAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Peering.Models.CheckServiceProviderAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckServiceProviderAvailabilityAsync (subscriptionResource As SubscriptionResource, content As CheckServiceProviderAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Enum0))" />
      <MemberSignature Language="F#" Value="static member CheckServiceProviderAvailabilityAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.Peering.Models.CheckServiceProviderAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.Models.Enum0&gt;&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.CheckServiceProviderAvailabilityAsync (subscriptionResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.Models.Enum0&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="content" Type="Azure.ResourceManager.Peering.Models.CheckServiceProviderAvailabilityContent" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="content"> The CheckServiceProviderAvailabilityInput indicating customer location and service provider. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks if the peering service provider is present within 1000 miles of customer's location
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/checkServiceProviderAvailability
            Operation Id: CheckServiceProviderAvailability
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCdnPeeringPrefixes">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.CdnPeeringPrefix&gt; GetCdnPeeringPrefixes (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string peeringLocation, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Peering.Models.CdnPeeringPrefix&gt; GetCdnPeeringPrefixes(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string peeringLocation, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetCdnPeeringPrefixes(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCdnPeeringPrefixes (subscriptionResource As SubscriptionResource, peeringLocation As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of CdnPeeringPrefix)" />
      <MemberSignature Language="F#" Value="static member GetCdnPeeringPrefixes : Azure.ResourceManager.Resources.SubscriptionResource * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.CdnPeeringPrefix&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetCdnPeeringPrefixes (subscriptionResource, peeringLocation, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.CdnPeeringPrefix&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="peeringLocation" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="peeringLocation"> The peering location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the advertised prefixes for the specified peering location
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/cdnPeeringPrefixes
            Operation Id: CdnPeeringPrefixes_List
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Peering.Models.CdnPeeringPrefix" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peeringLocation" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCdnPeeringPrefixesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.CdnPeeringPrefix&gt; GetCdnPeeringPrefixesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string peeringLocation, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Peering.Models.CdnPeeringPrefix&gt; GetCdnPeeringPrefixesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string peeringLocation, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetCdnPeeringPrefixesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCdnPeeringPrefixesAsync (subscriptionResource As SubscriptionResource, peeringLocation As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of CdnPeeringPrefix)" />
      <MemberSignature Language="F#" Value="static member GetCdnPeeringPrefixesAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.CdnPeeringPrefix&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetCdnPeeringPrefixesAsync (subscriptionResource, peeringLocation, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.CdnPeeringPrefix&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="peeringLocation" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="peeringLocation"> The peering location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the advertised prefixes for the specified peering location
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/cdnPeeringPrefixes
            Operation Id: CdnPeeringPrefixes_List
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Peering.Models.CdnPeeringPrefix" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peeringLocation" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionMonitorTestResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Peering.ConnectionMonitorTestResource GetConnectionMonitorTestResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Peering.ConnectionMonitorTestResource GetConnectionMonitorTestResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetConnectionMonitorTestResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetConnectionMonitorTestResource (client As ArmClient, id As ResourceIdentifier) As ConnectionMonitorTestResource" />
      <MemberSignature Language="F#" Value="static member GetConnectionMonitorTestResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Peering.ConnectionMonitorTestResource" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetConnectionMonitorTestResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Peering.ConnectionMonitorTestResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Peering.ConnectionMonitorTestResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Peering.ConnectionMonitorTestResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Peering.ConnectionMonitorTestResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Peering.ConnectionMonitorTestResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeerAsn">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Peering.PeerAsnResource&gt; GetPeerAsn (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string peerAsnName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Peering.PeerAsnResource&gt; GetPeerAsn(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string peerAsnName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeerAsn(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeerAsn (subscriptionResource As SubscriptionResource, peerAsnName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PeerAsnResource)" />
      <MemberSignature Language="F#" Value="static member GetPeerAsn : Azure.ResourceManager.Resources.SubscriptionResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Peering.PeerAsnResource&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeerAsn (subscriptionResource, peerAsnName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Peering.PeerAsnResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="peerAsnName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="peerAsnName"> The peer ASN name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the peer ASN with the specified name under the given subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/peerAsns/{peerAsnName}
            Operation Id: PeerAsns_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="peerAsnName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peerAsnName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPeerAsnAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.PeerAsnResource&gt;&gt; GetPeerAsnAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string peerAsnName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Peering.PeerAsnResource&gt;&gt; GetPeerAsnAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string peerAsnName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeerAsnAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeerAsnAsync (subscriptionResource As SubscriptionResource, peerAsnName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PeerAsnResource))" />
      <MemberSignature Language="F#" Value="static member GetPeerAsnAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.PeerAsnResource&gt;&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeerAsnAsync (subscriptionResource, peerAsnName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.PeerAsnResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="peerAsnName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="peerAsnName"> The peer ASN name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the peer ASN with the specified name under the given subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/peerAsns/{peerAsnName}
            Operation Id: PeerAsns_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="peerAsnName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peerAsnName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPeerAsnResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Peering.PeerAsnResource GetPeerAsnResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Peering.PeerAsnResource GetPeerAsnResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeerAsnResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeerAsnResource (client As ArmClient, id As ResourceIdentifier) As PeerAsnResource" />
      <MemberSignature Language="F#" Value="static member GetPeerAsnResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Peering.PeerAsnResource" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeerAsnResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Peering.PeerAsnResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Peering.PeerAsnResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Peering.PeerAsnResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Peering.PeerAsnResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Peering.PeerAsnResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeerAsns">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Peering.PeerAsnCollection GetPeerAsns (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Peering.PeerAsnCollection GetPeerAsns(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeerAsns(Azure.ResourceManager.Resources.SubscriptionResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeerAsns (subscriptionResource As SubscriptionResource) As PeerAsnCollection" />
      <MemberSignature Language="F#" Value="static member GetPeerAsns : Azure.ResourceManager.Resources.SubscriptionResource -&gt; Azure.ResourceManager.Peering.PeerAsnCollection" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeerAsns subscriptionResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Peering.PeerAsnCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of PeerAsnResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of PeerAsnResources and their operations over a PeerAsnResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeering">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Peering.PeeringResource&gt; GetPeering (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string peeringName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Peering.PeeringResource&gt; GetPeering(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string peeringName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeering(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeering (resourceGroupResource As ResourceGroupResource, peeringName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PeeringResource)" />
      <MemberSignature Language="F#" Value="static member GetPeering : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Peering.PeeringResource&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeering (resourceGroupResource, peeringName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Peering.PeeringResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="peeringName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="peeringName"> The name of the peering. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an existing peering with the specified name under the given subscription and resource group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peerings/{peeringName}
            Operation Id: Peerings_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="peeringName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peeringName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.PeeringResource&gt;&gt; GetPeeringAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string peeringName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Peering.PeeringResource&gt;&gt; GetPeeringAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string peeringName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeeringAsync (resourceGroupResource As ResourceGroupResource, peeringName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PeeringResource))" />
      <MemberSignature Language="F#" Value="static member GetPeeringAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.PeeringResource&gt;&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringAsync (resourceGroupResource, peeringName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.PeeringResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="peeringName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="peeringName"> The name of the peering. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an existing peering with the specified name under the given subscription and resource group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peerings/{peeringName}
            Operation Id: Peerings_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="peeringName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peeringName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringLocations">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringLocation&gt; GetPeeringLocations (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.Peering.Models.PeeringLocationsKind kind, Azure.ResourceManager.Peering.Models.PeeringLocationsDirectPeeringType? directPeeringType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Peering.Models.PeeringLocation&gt; GetPeeringLocations(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.ResourceManager.Peering.Models.PeeringLocationsKind kind, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Peering.Models.PeeringLocationsDirectPeeringType&gt; directPeeringType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringLocations(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Peering.Models.PeeringLocationsKind,System.Nullable{Azure.ResourceManager.Peering.Models.PeeringLocationsDirectPeeringType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeeringLocations (subscriptionResource As SubscriptionResource, kind As PeeringLocationsKind, Optional directPeeringType As Nullable(Of PeeringLocationsDirectPeeringType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PeeringLocation)" />
      <MemberSignature Language="F#" Value="static member GetPeeringLocations : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.Peering.Models.PeeringLocationsKind * Nullable&lt;Azure.ResourceManager.Peering.Models.PeeringLocationsDirectPeeringType&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringLocation&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringLocations (subscriptionResource, kind, directPeeringType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringLocation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="kind" Type="Azure.ResourceManager.Peering.Models.PeeringLocationsKind" />
        <Parameter Name="directPeeringType" Type="System.Nullable&lt;Azure.ResourceManager.Peering.Models.PeeringLocationsDirectPeeringType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="kind"> The kind of the peering. </param>
        <param name="directPeeringType"> The type of direct peering. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the available peering locations for the specified kind of peering.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringLocations
            Operation Id: PeeringLocations_List
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Peering.Models.PeeringLocation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringLocationsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringLocation&gt; GetPeeringLocationsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.Peering.Models.PeeringLocationsKind kind, Azure.ResourceManager.Peering.Models.PeeringLocationsDirectPeeringType? directPeeringType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Peering.Models.PeeringLocation&gt; GetPeeringLocationsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.ResourceManager.Peering.Models.PeeringLocationsKind kind, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Peering.Models.PeeringLocationsDirectPeeringType&gt; directPeeringType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringLocationsAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Peering.Models.PeeringLocationsKind,System.Nullable{Azure.ResourceManager.Peering.Models.PeeringLocationsDirectPeeringType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeeringLocationsAsync (subscriptionResource As SubscriptionResource, kind As PeeringLocationsKind, Optional directPeeringType As Nullable(Of PeeringLocationsDirectPeeringType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PeeringLocation)" />
      <MemberSignature Language="F#" Value="static member GetPeeringLocationsAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.Peering.Models.PeeringLocationsKind * Nullable&lt;Azure.ResourceManager.Peering.Models.PeeringLocationsDirectPeeringType&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringLocation&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringLocationsAsync (subscriptionResource, kind, directPeeringType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringLocation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="kind" Type="Azure.ResourceManager.Peering.Models.PeeringLocationsKind" />
        <Parameter Name="directPeeringType" Type="System.Nullable&lt;Azure.ResourceManager.Peering.Models.PeeringLocationsDirectPeeringType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="kind"> The kind of the peering. </param>
        <param name="directPeeringType"> The type of direct peering. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the available peering locations for the specified kind of peering.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringLocations
            Operation Id: PeeringLocations_List
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Peering.Models.PeeringLocation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringRegisteredAsnResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Peering.PeeringRegisteredAsnResource GetPeeringRegisteredAsnResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Peering.PeeringRegisteredAsnResource GetPeeringRegisteredAsnResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringRegisteredAsnResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeeringRegisteredAsnResource (client As ArmClient, id As ResourceIdentifier) As PeeringRegisteredAsnResource" />
      <MemberSignature Language="F#" Value="static member GetPeeringRegisteredAsnResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Peering.PeeringRegisteredAsnResource" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringRegisteredAsnResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Peering.PeeringRegisteredAsnResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Peering.PeeringRegisteredAsnResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Peering.PeeringRegisteredAsnResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Peering.PeeringRegisteredAsnResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Peering.PeeringRegisteredAsnResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringRegisteredPrefixResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Peering.PeeringRegisteredPrefixResource GetPeeringRegisteredPrefixResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Peering.PeeringRegisteredPrefixResource GetPeeringRegisteredPrefixResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringRegisteredPrefixResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeeringRegisteredPrefixResource (client As ArmClient, id As ResourceIdentifier) As PeeringRegisteredPrefixResource" />
      <MemberSignature Language="F#" Value="static member GetPeeringRegisteredPrefixResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Peering.PeeringRegisteredPrefixResource" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringRegisteredPrefixResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Peering.PeeringRegisteredPrefixResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Peering.PeeringRegisteredPrefixResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Peering.PeeringRegisteredPrefixResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Peering.PeeringRegisteredPrefixResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Peering.PeeringRegisteredPrefixResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Peering.PeeringResource GetPeeringResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Peering.PeeringResource GetPeeringResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeeringResource (client As ArmClient, id As ResourceIdentifier) As PeeringResource" />
      <MemberSignature Language="F#" Value="static member GetPeeringResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Peering.PeeringResource" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Peering.PeeringResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Peering.PeeringResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Peering.PeeringResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Peering.PeeringResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Peering.PeeringResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeerings">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Peering.PeeringCollection GetPeerings (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Peering.PeeringCollection GetPeerings(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeerings(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeerings (resourceGroupResource As ResourceGroupResource) As PeeringCollection" />
      <MemberSignature Language="F#" Value="static member GetPeerings : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Peering.PeeringCollection" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeerings resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Peering.PeeringCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of PeeringResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of PeeringResources and their operations over a PeeringResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeerings">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt; GetPeerings (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Peering.PeeringResource&gt; GetPeerings(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeerings(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeerings (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PeeringResource)" />
      <MemberSignature Language="F#" Value="static member GetPeerings : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeerings (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the peerings under the given subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/peerings
            Operation Id: Peerings_ListBySubscription
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Peering.PeeringResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt; GetPeeringsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Peering.PeeringResource&gt; GetPeeringsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeeringsAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PeeringResource)" />
      <MemberSignature Language="F#" Value="static member GetPeeringsAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringsAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the peerings under the given subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/peerings
            Operation Id: Peerings_ListBySubscription
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Peering.PeeringResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringsByLegacyPeering">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt; GetPeeringsByLegacyPeering (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string peeringLocation, Azure.ResourceManager.Peering.Models.LegacyPeeringsKind kind, int? asn = default, Azure.ResourceManager.Peering.Models.DirectPeeringType? directPeeringType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Peering.PeeringResource&gt; GetPeeringsByLegacyPeering(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string peeringLocation, valuetype Azure.ResourceManager.Peering.Models.LegacyPeeringsKind kind, valuetype System.Nullable`1&lt;int32&gt; asn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Peering.Models.DirectPeeringType&gt; directPeeringType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringsByLegacyPeering(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.ResourceManager.Peering.Models.LegacyPeeringsKind,System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.Peering.Models.DirectPeeringType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeeringsByLegacyPeering (subscriptionResource As SubscriptionResource, peeringLocation As String, kind As LegacyPeeringsKind, Optional asn As Nullable(Of Integer) = Nothing, Optional directPeeringType As Nullable(Of DirectPeeringType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PeeringResource)" />
      <MemberSignature Language="F#" Value="static member GetPeeringsByLegacyPeering : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.ResourceManager.Peering.Models.LegacyPeeringsKind * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.Peering.Models.DirectPeeringType&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringsByLegacyPeering (subscriptionResource, peeringLocation, kind, asn, directPeeringType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="peeringLocation" Type="System.String" />
        <Parameter Name="kind" Type="Azure.ResourceManager.Peering.Models.LegacyPeeringsKind" />
        <Parameter Name="asn" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="directPeeringType" Type="System.Nullable&lt;Azure.ResourceManager.Peering.Models.DirectPeeringType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="peeringLocation"> The location of the peering. </param>
        <param name="kind"> The kind of the peering. </param>
        <param name="asn"> The ASN number associated with a legacy peering. </param>
        <param name="directPeeringType"> The direct peering type. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the legacy peerings under the given subscription matching the specified kind and location.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/legacyPeerings
            Operation Id: LegacyPeerings_List
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Peering.PeeringResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peeringLocation" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringsByLegacyPeeringAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt; GetPeeringsByLegacyPeeringAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string peeringLocation, Azure.ResourceManager.Peering.Models.LegacyPeeringsKind kind, int? asn = default, Azure.ResourceManager.Peering.Models.DirectPeeringType? directPeeringType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Peering.PeeringResource&gt; GetPeeringsByLegacyPeeringAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string peeringLocation, valuetype Azure.ResourceManager.Peering.Models.LegacyPeeringsKind kind, valuetype System.Nullable`1&lt;int32&gt; asn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Peering.Models.DirectPeeringType&gt; directPeeringType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringsByLegacyPeeringAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.ResourceManager.Peering.Models.LegacyPeeringsKind,System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.Peering.Models.DirectPeeringType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeeringsByLegacyPeeringAsync (subscriptionResource As SubscriptionResource, peeringLocation As String, kind As LegacyPeeringsKind, Optional asn As Nullable(Of Integer) = Nothing, Optional directPeeringType As Nullable(Of DirectPeeringType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PeeringResource)" />
      <MemberSignature Language="F#" Value="static member GetPeeringsByLegacyPeeringAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.ResourceManager.Peering.Models.LegacyPeeringsKind * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.Peering.Models.DirectPeeringType&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringsByLegacyPeeringAsync (subscriptionResource, peeringLocation, kind, asn, directPeeringType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.PeeringResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="peeringLocation" Type="System.String" />
        <Parameter Name="kind" Type="Azure.ResourceManager.Peering.Models.LegacyPeeringsKind" />
        <Parameter Name="asn" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="directPeeringType" Type="System.Nullable&lt;Azure.ResourceManager.Peering.Models.DirectPeeringType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="peeringLocation"> The location of the peering. </param>
        <param name="kind"> The kind of the peering. </param>
        <param name="asn"> The ASN number associated with a legacy peering. </param>
        <param name="directPeeringType"> The direct peering type. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the legacy peerings under the given subscription matching the specified kind and location.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/legacyPeerings
            Operation Id: LegacyPeerings_List
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Peering.PeeringResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peeringLocation" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringService">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Peering.PeeringServiceResource&gt; GetPeeringService (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string peeringServiceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Peering.PeeringServiceResource&gt; GetPeeringService(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string peeringServiceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringService(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeeringService (resourceGroupResource As ResourceGroupResource, peeringServiceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PeeringServiceResource)" />
      <MemberSignature Language="F#" Value="static member GetPeeringService : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Peering.PeeringServiceResource&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringService (resourceGroupResource, peeringServiceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Peering.PeeringServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="peeringServiceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="peeringServiceName"> The name of the peering. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an existing peering service with the specified name under the given subscription and resource group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peeringServices/{peeringServiceName}
            Operation Id: PeeringServices_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="peeringServiceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peeringServiceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringServiceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.PeeringServiceResource&gt;&gt; GetPeeringServiceAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string peeringServiceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Peering.PeeringServiceResource&gt;&gt; GetPeeringServiceAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string peeringServiceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringServiceAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeeringServiceAsync (resourceGroupResource As ResourceGroupResource, peeringServiceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PeeringServiceResource))" />
      <MemberSignature Language="F#" Value="static member GetPeeringServiceAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.PeeringServiceResource&gt;&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringServiceAsync (resourceGroupResource, peeringServiceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.PeeringServiceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="peeringServiceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="peeringServiceName"> The name of the peering. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an existing peering service with the specified name under the given subscription and resource group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peeringServices/{peeringServiceName}
            Operation Id: PeeringServices_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="peeringServiceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peeringServiceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringServiceCountries">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceCountry&gt; GetPeeringServiceCountries (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Peering.Models.PeeringServiceCountry&gt; GetPeeringServiceCountries(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringServiceCountries(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeeringServiceCountries (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PeeringServiceCountry)" />
      <MemberSignature Language="F#" Value="static member GetPeeringServiceCountries : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceCountry&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringServiceCountries (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceCountry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the available countries for peering service.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServiceCountries
            Operation Id: PeeringServiceCountries_List
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Peering.Models.PeeringServiceCountry" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringServiceCountriesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceCountry&gt; GetPeeringServiceCountriesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Peering.Models.PeeringServiceCountry&gt; GetPeeringServiceCountriesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringServiceCountriesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeeringServiceCountriesAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PeeringServiceCountry)" />
      <MemberSignature Language="F#" Value="static member GetPeeringServiceCountriesAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceCountry&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringServiceCountriesAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceCountry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the available countries for peering service.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServiceCountries
            Operation Id: PeeringServiceCountries_List
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Peering.Models.PeeringServiceCountry" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringServiceLocations">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceLocation&gt; GetPeeringServiceLocations (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string country = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Peering.Models.PeeringServiceLocation&gt; GetPeeringServiceLocations(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string country, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringServiceLocations(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeeringServiceLocations (subscriptionResource As SubscriptionResource, Optional country As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PeeringServiceLocation)" />
      <MemberSignature Language="F#" Value="static member GetPeeringServiceLocations : Azure.ResourceManager.Resources.SubscriptionResource * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceLocation&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringServiceLocations (subscriptionResource, country, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceLocation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="country" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="country"> The country of interest, in which the locations are to be present. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the available locations for peering service.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServiceLocations
            Operation Id: PeeringServiceLocations_List
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Peering.Models.PeeringServiceLocation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringServiceLocationsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceLocation&gt; GetPeeringServiceLocationsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string country = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Peering.Models.PeeringServiceLocation&gt; GetPeeringServiceLocationsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string country, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringServiceLocationsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeeringServiceLocationsAsync (subscriptionResource As SubscriptionResource, Optional country As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PeeringServiceLocation)" />
      <MemberSignature Language="F#" Value="static member GetPeeringServiceLocationsAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceLocation&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringServiceLocationsAsync (subscriptionResource, country, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceLocation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="country" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="country"> The country of interest, in which the locations are to be present. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the available locations for peering service.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServiceLocations
            Operation Id: PeeringServiceLocations_List
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Peering.Models.PeeringServiceLocation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringServicePrefixResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Peering.PeeringServicePrefixResource GetPeeringServicePrefixResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Peering.PeeringServicePrefixResource GetPeeringServicePrefixResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringServicePrefixResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeeringServicePrefixResource (client As ArmClient, id As ResourceIdentifier) As PeeringServicePrefixResource" />
      <MemberSignature Language="F#" Value="static member GetPeeringServicePrefixResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Peering.PeeringServicePrefixResource" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringServicePrefixResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Peering.PeeringServicePrefixResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Peering.PeeringServicePrefixResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Peering.PeeringServicePrefixResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Peering.PeeringServicePrefixResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Peering.PeeringServicePrefixResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringServiceProviders">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProvider&gt; GetPeeringServiceProviders (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Peering.Models.PeeringServiceProvider&gt; GetPeeringServiceProviders(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringServiceProviders(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeeringServiceProviders (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PeeringServiceProvider)" />
      <MemberSignature Language="F#" Value="static member GetPeeringServiceProviders : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProvider&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringServiceProviders (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProvider&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the available peering service locations for the specified kind of peering.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServiceProviders
            Operation Id: PeeringServiceProviders_List
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Peering.Models.PeeringServiceProvider" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringServiceProvidersAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProvider&gt; GetPeeringServiceProvidersAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Peering.Models.PeeringServiceProvider&gt; GetPeeringServiceProvidersAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringServiceProvidersAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeeringServiceProvidersAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PeeringServiceProvider)" />
      <MemberSignature Language="F#" Value="static member GetPeeringServiceProvidersAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProvider&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringServiceProvidersAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.Models.PeeringServiceProvider&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the available peering service locations for the specified kind of peering.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServiceProviders
            Operation Id: PeeringServiceProviders_List
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Peering.Models.PeeringServiceProvider" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringServiceResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Peering.PeeringServiceResource GetPeeringServiceResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Peering.PeeringServiceResource GetPeeringServiceResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringServiceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeeringServiceResource (client As ArmClient, id As ResourceIdentifier) As PeeringServiceResource" />
      <MemberSignature Language="F#" Value="static member GetPeeringServiceResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Peering.PeeringServiceResource" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringServiceResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Peering.PeeringServiceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Peering.PeeringServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Peering.PeeringServiceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Peering.PeeringServiceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Peering.PeeringServiceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringServices">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Peering.PeeringServiceCollection GetPeeringServices (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Peering.PeeringServiceCollection GetPeeringServices(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringServices(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeeringServices (resourceGroupResource As ResourceGroupResource) As PeeringServiceCollection" />
      <MemberSignature Language="F#" Value="static member GetPeeringServices : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Peering.PeeringServiceCollection" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringServices resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Peering.PeeringServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of PeeringServiceResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of PeeringServiceResources and their operations over a PeeringServiceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringServices">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Peering.PeeringServiceResource&gt; GetPeeringServices (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Peering.PeeringServiceResource&gt; GetPeeringServices(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringServices(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeeringServices (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PeeringServiceResource)" />
      <MemberSignature Language="F#" Value="static member GetPeeringServices : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Peering.PeeringServiceResource&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringServices (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Peering.PeeringServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the peerings under the given subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServices
            Operation Id: PeeringServices_ListBySubscription
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Peering.PeeringServiceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringServicesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.PeeringServiceResource&gt; GetPeeringServicesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Peering.PeeringServiceResource&gt; GetPeeringServicesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringServicesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPeeringServicesAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PeeringServiceResource)" />
      <MemberSignature Language="F#" Value="static member GetPeeringServicesAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.PeeringServiceResource&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.GetPeeringServicesAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Peering.PeeringServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all of the peerings under the given subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServices
            Operation Id: PeeringServices_ListBySubscription
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Peering.PeeringServiceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeConnectionMonitorPeeringService">
      <MemberSignature Language="C#" Value="public static Azure.Response InitializeConnectionMonitorPeeringService (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response InitializeConnectionMonitorPeeringService(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.InitializeConnectionMonitorPeeringService(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InitializeConnectionMonitorPeeringService (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="static member InitializeConnectionMonitorPeeringService : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Response" Usage="Azure.ResourceManager.Peering.PeeringExtensions.InitializeConnectionMonitorPeeringService (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Initialize Peering Service for Connection Monitor functionality
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/initializeConnectionMonitor
            Operation Id: PeeringServices_InitializeConnectionMonitor
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeConnectionMonitorPeeringServiceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&gt; InitializeConnectionMonitorPeeringServiceAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; InitializeConnectionMonitorPeeringServiceAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.InitializeConnectionMonitorPeeringServiceAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InitializeConnectionMonitorPeeringServiceAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="static member InitializeConnectionMonitorPeeringServiceAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.InitializeConnectionMonitorPeeringServiceAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Initialize Peering Service for Connection Monitor functionality
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/initializeConnectionMonitor
            Operation Id: PeeringServices_InitializeConnectionMonitor
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializePeeringServiceConnectionMonitor">
      <MemberSignature Language="C#" Value="public static Azure.Response InitializePeeringServiceConnectionMonitor (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response InitializePeeringServiceConnectionMonitor(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.InitializePeeringServiceConnectionMonitor(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InitializePeeringServiceConnectionMonitor (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="static member InitializePeeringServiceConnectionMonitor : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Response" Usage="Azure.ResourceManager.Peering.PeeringExtensions.InitializePeeringServiceConnectionMonitor (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Initialize Peering Service for Connection Monitor functionality
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/initializeConnectionMonitor
            Operation Id: PeeringServices_InitializeConnectionMonitor
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializePeeringServiceConnectionMonitorAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&gt; InitializePeeringServiceConnectionMonitorAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; InitializePeeringServiceConnectionMonitorAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.InitializePeeringServiceConnectionMonitorAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InitializePeeringServiceConnectionMonitorAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="static member InitializePeeringServiceConnectionMonitorAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.InitializePeeringServiceConnectionMonitorAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Initialize Peering Service for Connection Monitor functionality
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/initializeConnectionMonitor
            Operation Id: PeeringServices_InitializeConnectionMonitor
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeLookingGlas">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt; InvokeLookingGlas (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.Peering.Models.LookingGlassCommand command, Azure.ResourceManager.Peering.Models.LookingGlassSourceType sourceType, string sourceLocation, string destinationIP, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt; InvokeLookingGlas(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.ResourceManager.Peering.Models.LookingGlassCommand command, valuetype Azure.ResourceManager.Peering.Models.LookingGlassSourceType sourceType, string sourceLocation, string destinationIP, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.InvokeLookingGlas(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Peering.Models.LookingGlassCommand,Azure.ResourceManager.Peering.Models.LookingGlassSourceType,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InvokeLookingGlas (subscriptionResource As SubscriptionResource, command As LookingGlassCommand, sourceType As LookingGlassSourceType, sourceLocation As String, destinationIP As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of LookingGlassOutput)" />
      <MemberSignature Language="F#" Value="static member InvokeLookingGlas : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.Peering.Models.LookingGlassCommand * Azure.ResourceManager.Peering.Models.LookingGlassSourceType * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.InvokeLookingGlas (subscriptionResource, command, sourceType, sourceLocation, destinationIP, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="command" Type="Azure.ResourceManager.Peering.Models.LookingGlassCommand" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="sourceType" Type="Azure.ResourceManager.Peering.Models.LookingGlassSourceType" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="sourceLocation" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="destinationIP" Type="System.String" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="command"> The command to be executed: ping, traceroute, bgpRoute. </param>
        <param name="sourceType"> The type of the source: Edge site or Azure Region. </param>
        <param name="sourceLocation"> The location of the source. </param>
        <param name="destinationIP"> The IP address of the destination. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Run looking glass functionality
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/lookingGlass
            Operation Id: LookingGlass_Invoke
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceLocation" /> or <paramref name="destinationIP" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="InvokeLookingGlasAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt;&gt; InvokeLookingGlasAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.Peering.Models.LookingGlassCommand command, Azure.ResourceManager.Peering.Models.LookingGlassSourceType sourceType, string sourceLocation, string destinationIP, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt;&gt; InvokeLookingGlasAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.ResourceManager.Peering.Models.LookingGlassCommand command, valuetype Azure.ResourceManager.Peering.Models.LookingGlassSourceType sourceType, string sourceLocation, string destinationIP, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.InvokeLookingGlasAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Peering.Models.LookingGlassCommand,Azure.ResourceManager.Peering.Models.LookingGlassSourceType,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InvokeLookingGlasAsync (subscriptionResource As SubscriptionResource, command As LookingGlassCommand, sourceType As LookingGlassSourceType, sourceLocation As String, destinationIP As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of LookingGlassOutput))" />
      <MemberSignature Language="F#" Value="static member InvokeLookingGlasAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.Peering.Models.LookingGlassCommand * Azure.ResourceManager.Peering.Models.LookingGlassSourceType * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt;&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.InvokeLookingGlasAsync (subscriptionResource, command, sourceType, sourceLocation, destinationIP, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="command" Type="Azure.ResourceManager.Peering.Models.LookingGlassCommand" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="sourceType" Type="Azure.ResourceManager.Peering.Models.LookingGlassSourceType" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="sourceLocation" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="destinationIP" Type="System.String" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="command"> The command to be executed: ping, traceroute, bgpRoute. </param>
        <param name="sourceType"> The type of the source: Edge site or Azure Region. </param>
        <param name="sourceLocation"> The location of the source. </param>
        <param name="destinationIP"> The IP address of the destination. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Run looking glass functionality
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/lookingGlass
            Operation Id: LookingGlass_Invoke
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceLocation" /> or <paramref name="destinationIP" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="InvokeLookingGlass">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt; InvokeLookingGlass (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.Peering.Models.LookingGlassCommand command, Azure.ResourceManager.Peering.Models.LookingGlassSourceType sourceType, string sourceLocation, string destinationIP, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt; InvokeLookingGlass(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.ResourceManager.Peering.Models.LookingGlassCommand command, valuetype Azure.ResourceManager.Peering.Models.LookingGlassSourceType sourceType, string sourceLocation, string destinationIP, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.InvokeLookingGlass(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Peering.Models.LookingGlassCommand,Azure.ResourceManager.Peering.Models.LookingGlassSourceType,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InvokeLookingGlass (subscriptionResource As SubscriptionResource, command As LookingGlassCommand, sourceType As LookingGlassSourceType, sourceLocation As String, destinationIP As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of LookingGlassOutput)" />
      <MemberSignature Language="F#" Value="static member InvokeLookingGlass : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.Peering.Models.LookingGlassCommand * Azure.ResourceManager.Peering.Models.LookingGlassSourceType * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.InvokeLookingGlass (subscriptionResource, command, sourceType, sourceLocation, destinationIP, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="command" Type="Azure.ResourceManager.Peering.Models.LookingGlassCommand" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="sourceType" Type="Azure.ResourceManager.Peering.Models.LookingGlassSourceType" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="sourceLocation" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="destinationIP" Type="System.String" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="command"> The command to be executed: ping, traceroute, bgpRoute. </param>
        <param name="sourceType"> The type of the source: Edge site or Azure Region. </param>
        <param name="sourceLocation"> The location of the source. </param>
        <param name="destinationIP"> The IP address of the destination. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Run looking glass functionality
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/lookingGlass
            Operation Id: LookingGlass_Invoke
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceLocation" /> or <paramref name="destinationIP" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="InvokeLookingGlassAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt;&gt; InvokeLookingGlassAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.Peering.Models.LookingGlassCommand command, Azure.ResourceManager.Peering.Models.LookingGlassSourceType sourceType, string sourceLocation, string destinationIP, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt;&gt; InvokeLookingGlassAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.ResourceManager.Peering.Models.LookingGlassCommand command, valuetype Azure.ResourceManager.Peering.Models.LookingGlassSourceType sourceType, string sourceLocation, string destinationIP, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Peering.PeeringExtensions.InvokeLookingGlassAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Peering.Models.LookingGlassCommand,Azure.ResourceManager.Peering.Models.LookingGlassSourceType,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InvokeLookingGlassAsync (subscriptionResource As SubscriptionResource, command As LookingGlassCommand, sourceType As LookingGlassSourceType, sourceLocation As String, destinationIP As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of LookingGlassOutput))" />
      <MemberSignature Language="F#" Value="static member InvokeLookingGlassAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.Peering.Models.LookingGlassCommand * Azure.ResourceManager.Peering.Models.LookingGlassSourceType * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt;&gt;" Usage="Azure.ResourceManager.Peering.PeeringExtensions.InvokeLookingGlassAsync (subscriptionResource, command, sourceType, sourceLocation, destinationIP, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Peering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Peering.Models.LookingGlassOutput&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="command" Type="Azure.ResourceManager.Peering.Models.LookingGlassCommand" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="sourceType" Type="Azure.ResourceManager.Peering.Models.LookingGlassSourceType" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="sourceLocation" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="destinationIP" Type="System.String" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="command"> The command to be executed: ping, traceroute, bgpRoute. </param>
        <param name="sourceType"> The type of the source: Edge site or Azure Region. </param>
        <param name="sourceLocation"> The location of the source. </param>
        <param name="destinationIP"> The IP address of the destination. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Run looking glass functionality
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Peering/lookingGlass
            Operation Id: LookingGlass_Invoke
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceLocation" /> or <paramref name="destinationIP" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
