<Type Name="HybridConnectivityExtensions" FullName="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions">
  <TypeSignature Language="C#" Value="public static class HybridConnectivityExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HybridConnectivityExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module HybridConnectivityExtensions" />
  <TypeSignature Language="F#" Value="type HybridConnectivityExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.HybridConnectivity. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetEndpointResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridConnectivity.EndpointResource GetEndpointResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridConnectivity.EndpointResource GetEndpointResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetEndpointResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEndpointResource (client As ArmClient, id As ResourceIdentifier) As EndpointResource" />
      <MemberSignature Language="F#" Value="static member GetEndpointResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.EndpointResource" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetEndpointResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridConnectivity.EndpointResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.HybridConnectivity.EndpointResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.HybridConnectivity.EndpointResource.CreateResourceIdentifier(System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.HybridConnectivity.EndpointResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetEndpointResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.HybridConnectivity.EndpointResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEndpointResource">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.EndpointResource&gt; GetEndpointResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string endpointName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.HybridConnectivity.EndpointResource&gt; GetEndpointResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string endpointName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetEndpointResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEndpointResource (client As ArmClient, scope As ResourceIdentifier, endpointName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EndpointResource)" />
      <MemberSignature Language="F#" Value="static member GetEndpointResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.EndpointResource&gt;" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetEndpointResource (client, scope, endpointName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.EndpointResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="endpointName" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="endpointName"> The endpoint name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the endpoint to the resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.HybridConnectivity/endpoints/{endpointName}</description></item><item><term>Operation Id</term><description>Endpoints_Get</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetEndpointResource(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="endpointName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEndpointResourceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.EndpointResource&gt;&gt; GetEndpointResourceAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string endpointName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HybridConnectivity.EndpointResource&gt;&gt; GetEndpointResourceAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string endpointName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetEndpointResourceAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEndpointResourceAsync (client As ArmClient, scope As ResourceIdentifier, endpointName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EndpointResource))" />
      <MemberSignature Language="F#" Value="static member GetEndpointResourceAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.EndpointResource&gt;&gt;" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetEndpointResourceAsync (client, scope, endpointName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.EndpointResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="endpointName" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="endpointName"> The endpoint name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the endpoint to the resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.HybridConnectivity/endpoints/{endpointName}</description></item><item><term>Operation Id</term><description>Endpoints_Get</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetEndpointResourceAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="endpointName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEndpointResources">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridConnectivity.EndpointResourceCollection GetEndpointResources (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridConnectivity.EndpointResourceCollection GetEndpointResources(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetEndpointResources(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEndpointResources (client As ArmClient, scope As ResourceIdentifier) As EndpointResourceCollection" />
      <MemberSignature Language="F#" Value="static member GetEndpointResources : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.EndpointResourceCollection" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetEndpointResources (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridConnectivity.EndpointResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary>
            Gets a collection of EndpointResources in the ArmClient.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetEndpointResources(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> An object representing collection of EndpointResources and their operations over a EndpointResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHybridConnectivityEndpoint">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt; GetHybridConnectivityEndpoint (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string endpointName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt; GetHybridConnectivityEndpoint(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string endpointName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetHybridConnectivityEndpoint(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHybridConnectivityEndpoint (client As ArmClient, scope As ResourceIdentifier, endpointName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of HybridConnectivityEndpointResource)" />
      <MemberSignature Language="F#" Value="static member GetHybridConnectivityEndpoint : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt;" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetHybridConnectivityEndpoint (client, scope, endpointName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="endpointName" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="endpointName"> The endpoint name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the endpoint to the resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.HybridConnectivity/endpoints/{endpointName}</description></item><item><term>Operation Id</term><description>Endpoints_Get</description></item><item><term>Default Api Version</term><description>2023-03-15</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetHybridConnectivityEndpoint(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="endpointName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHybridConnectivityEndpointAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt;&gt; GetHybridConnectivityEndpointAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string endpointName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt;&gt; GetHybridConnectivityEndpointAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string endpointName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetHybridConnectivityEndpointAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHybridConnectivityEndpointAsync (client As ArmClient, scope As ResourceIdentifier, endpointName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of HybridConnectivityEndpointResource))" />
      <MemberSignature Language="F#" Value="static member GetHybridConnectivityEndpointAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt;&gt;" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetHybridConnectivityEndpointAsync (client, scope, endpointName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="endpointName" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="endpointName"> The endpoint name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the endpoint to the resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.HybridConnectivity/endpoints/{endpointName}</description></item><item><term>Operation Id</term><description>Endpoints_Get</description></item><item><term>Default Api Version</term><description>2023-03-15</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetHybridConnectivityEndpointAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="endpointName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHybridConnectivityEndpointResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource GetHybridConnectivityEndpointResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource GetHybridConnectivityEndpointResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetHybridConnectivityEndpointResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHybridConnectivityEndpointResource (client As ArmClient, id As ResourceIdentifier) As HybridConnectivityEndpointResource" />
      <MemberSignature Language="F#" Value="static member GetHybridConnectivityEndpointResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetHybridConnectivityEndpointResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetHybridConnectivityEndpointResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHybridConnectivityEndpoints">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointCollection GetHybridConnectivityEndpoints (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointCollection GetHybridConnectivityEndpoints(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetHybridConnectivityEndpoints(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHybridConnectivityEndpoints (client As ArmClient, scope As ResourceIdentifier) As HybridConnectivityEndpointCollection" />
      <MemberSignature Language="F#" Value="static member GetHybridConnectivityEndpoints : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointCollection" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetHybridConnectivityEndpoints (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary>
            Gets a collection of HybridConnectivityEndpointResources in the ArmClient.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetHybridConnectivityEndpoints(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> An object representing collection of HybridConnectivityEndpointResources and their operations over a HybridConnectivityEndpointResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHybridConnectivityServiceConfigurationResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridConnectivity.HybridConnectivityServiceConfigurationResource GetHybridConnectivityServiceConfigurationResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridConnectivity.HybridConnectivityServiceConfigurationResource GetHybridConnectivityServiceConfigurationResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetHybridConnectivityServiceConfigurationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHybridConnectivityServiceConfigurationResource (client As ArmClient, id As ResourceIdentifier) As HybridConnectivityServiceConfigurationResource" />
      <MemberSignature Language="F#" Value="static member GetHybridConnectivityServiceConfigurationResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.HybridConnectivityServiceConfigurationResource" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetHybridConnectivityServiceConfigurationResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridConnectivity.HybridConnectivityServiceConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityServiceConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityServiceConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityServiceConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetHybridConnectivityServiceConfigurationResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityServiceConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
