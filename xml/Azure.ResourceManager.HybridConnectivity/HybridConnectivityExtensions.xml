<Type Name="HybridConnectivityExtensions" FullName="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions">
  <TypeSignature Language="C#" Value="public static class HybridConnectivityExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HybridConnectivityExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module HybridConnectivityExtensions" />
  <TypeSignature Language="F#" Value="type HybridConnectivityExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.HybridConnectivity. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetHybridConnectivityEndpoint">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt; GetHybridConnectivityEndpoint (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string endpointName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt; GetHybridConnectivityEndpoint(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string endpointName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetHybridConnectivityEndpoint(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHybridConnectivityEndpoint (client As ArmClient, scope As ResourceIdentifier, endpointName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of HybridConnectivityEndpointResource)" />
      <MemberSignature Language="F#" Value="static member GetHybridConnectivityEndpoint : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt;" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetHybridConnectivityEndpoint (client, scope, endpointName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="endpointName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="endpointName"> The endpoint name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the endpoint to the resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.HybridConnectivity/endpoints/{endpointName}</description></item><item><term>Operation Id</term><description>EndpointResource_Get</description></item><item><term>Default Api Version</term><description>2024-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetHybridConnectivityEndpoint(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="endpointName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHybridConnectivityEndpointAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt;&gt; GetHybridConnectivityEndpointAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string endpointName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt;&gt; GetHybridConnectivityEndpointAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string endpointName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetHybridConnectivityEndpointAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHybridConnectivityEndpointAsync (client As ArmClient, scope As ResourceIdentifier, endpointName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of HybridConnectivityEndpointResource))" />
      <MemberSignature Language="F#" Value="static member GetHybridConnectivityEndpointAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt;&gt;" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetHybridConnectivityEndpointAsync (client, scope, endpointName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="endpointName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="endpointName"> The endpoint name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the endpoint to the resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.HybridConnectivity/endpoints/{endpointName}</description></item><item><term>Operation Id</term><description>EndpointResource_Get</description></item><item><term>Default Api Version</term><description>2024-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetHybridConnectivityEndpointAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="endpointName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHybridConnectivityEndpointResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource GetHybridConnectivityEndpointResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource GetHybridConnectivityEndpointResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetHybridConnectivityEndpointResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHybridConnectivityEndpointResource (client As ArmClient, id As ResourceIdentifier) As HybridConnectivityEndpointResource" />
      <MemberSignature Language="F#" Value="static member GetHybridConnectivityEndpointResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetHybridConnectivityEndpointResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetHybridConnectivityEndpointResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHybridConnectivityEndpoints">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointCollection GetHybridConnectivityEndpoints (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointCollection GetHybridConnectivityEndpoints(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetHybridConnectivityEndpoints(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHybridConnectivityEndpoints (client As ArmClient, scope As ResourceIdentifier) As HybridConnectivityEndpointCollection" />
      <MemberSignature Language="F#" Value="static member GetHybridConnectivityEndpoints : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointCollection" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetHybridConnectivityEndpoints (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary>
            Gets a collection of HybridConnectivityEndpointResources in the ArmClient.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetHybridConnectivityEndpoints(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> An object representing collection of HybridConnectivityEndpointResources and their operations over a HybridConnectivityEndpointResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHybridConnectivityServiceConfigurationResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridConnectivity.HybridConnectivityServiceConfigurationResource GetHybridConnectivityServiceConfigurationResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridConnectivity.HybridConnectivityServiceConfigurationResource GetHybridConnectivityServiceConfigurationResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetHybridConnectivityServiceConfigurationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHybridConnectivityServiceConfigurationResource (client As ArmClient, id As ResourceIdentifier) As HybridConnectivityServiceConfigurationResource" />
      <MemberSignature Language="F#" Value="static member GetHybridConnectivityServiceConfigurationResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.HybridConnectivityServiceConfigurationResource" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetHybridConnectivityServiceConfigurationResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridConnectivity.HybridConnectivityServiceConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityServiceConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityServiceConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityServiceConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetHybridConnectivityServiceConfigurationResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityServiceConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicCloudConnector">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource&gt; GetPublicCloudConnector (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string publicCloudConnector, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource&gt; GetPublicCloudConnector(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string publicCloudConnector, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnector(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPublicCloudConnector (resourceGroupResource As ResourceGroupResource, publicCloudConnector As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PublicCloudConnectorResource)" />
      <MemberSignature Language="F#" Value="static member GetPublicCloudConnector : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource&gt;" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnector (resourceGroupResource, publicCloudConnector, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="publicCloudConnector" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="publicCloudConnector"> Represent public cloud connectors resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a PublicCloudConnector
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridConnectivity/publicCloudConnectors/{publicCloudConnector}</description></item><item><term>Operation Id</term><description>PublicCloudConnector_Get</description></item><item><term>Default Api Version</term><description>2024-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityResourceGroupResource.GetPublicCloudConnector(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="publicCloudConnector" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="publicCloudConnector" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicCloudConnectorAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource&gt;&gt; GetPublicCloudConnectorAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string publicCloudConnector, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource&gt;&gt; GetPublicCloudConnectorAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string publicCloudConnector, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPublicCloudConnectorAsync (resourceGroupResource As ResourceGroupResource, publicCloudConnector As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PublicCloudConnectorResource))" />
      <MemberSignature Language="F#" Value="static member GetPublicCloudConnectorAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource&gt;&gt;" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorAsync (resourceGroupResource, publicCloudConnector, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="publicCloudConnector" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="publicCloudConnector"> Represent public cloud connectors resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a PublicCloudConnector
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridConnectivity/publicCloudConnectors/{publicCloudConnector}</description></item><item><term>Operation Id</term><description>PublicCloudConnector_Get</description></item><item><term>Default Api Version</term><description>2024-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityResourceGroupResource.GetPublicCloudConnectorAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="publicCloudConnector" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="publicCloudConnector" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicCloudConnectorResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource GetPublicCloudConnectorResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource GetPublicCloudConnectorResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPublicCloudConnectorResource (client As ArmClient, id As ResourceIdentifier) As PublicCloudConnectorResource" />
      <MemberSignature Language="F#" Value="static member GetPublicCloudConnectorResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetPublicCloudConnectorResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicCloudConnectors">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorCollection GetPublicCloudConnectors (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorCollection GetPublicCloudConnectors(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectors(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPublicCloudConnectors (resourceGroupResource As ResourceGroupResource) As PublicCloudConnectorCollection" />
      <MemberSignature Language="F#" Value="static member GetPublicCloudConnectors : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorCollection" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectors resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of PublicCloudConnectorResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityResourceGroupResource.GetPublicCloudConnectors" /> instead.</description></item></summary>
        <returns> An object representing collection of PublicCloudConnectorResources and their operations over a PublicCloudConnectorResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicCloudConnectors">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource&gt; GetPublicCloudConnectors (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource&gt; GetPublicCloudConnectors(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectors(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPublicCloudConnectors (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PublicCloudConnectorResource)" />
      <MemberSignature Language="F#" Value="static member GetPublicCloudConnectors : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource&gt;" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectors (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List PublicCloudConnector resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.HybridConnectivity/publicCloudConnectors</description></item><item><term>Operation Id</term><description>PublicCloudConnector_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivitySubscriptionResource.GetPublicCloudConnectors(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicCloudConnectorsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource&gt; GetPublicCloudConnectorsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource&gt; GetPublicCloudConnectorsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPublicCloudConnectorsAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PublicCloudConnectorResource)" />
      <MemberSignature Language="F#" Value="static member GetPublicCloudConnectorsAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource&gt;" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorsAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List PublicCloudConnector resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.HybridConnectivity/publicCloudConnectors</description></item><item><term>Operation Id</term><description>PublicCloudConnector_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivitySubscriptionResource.GetPublicCloudConnectors(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicCloudConnectorSolutionConfiguration">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource&gt; GetPublicCloudConnectorSolutionConfiguration (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string solutionConfiguration, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource&gt; GetPublicCloudConnectorSolutionConfiguration(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string solutionConfiguration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorSolutionConfiguration(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPublicCloudConnectorSolutionConfiguration (client As ArmClient, scope As ResourceIdentifier, solutionConfiguration As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PublicCloudConnectorSolutionConfigurationResource)" />
      <MemberSignature Language="F#" Value="static member GetPublicCloudConnectorSolutionConfiguration : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource&gt;" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorSolutionConfiguration (client, scope, solutionConfiguration, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="solutionConfiguration" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="solutionConfiguration"> Represent Solution Configuration Resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a SolutionConfiguration
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.HybridConnectivity/solutionConfigurations/{solutionConfiguration}</description></item><item><term>Operation Id</term><description>SolutionConfiguration_Get</description></item><item><term>Default Api Version</term><description>2024-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetPublicCloudConnectorSolutionConfiguration(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="solutionConfiguration" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="solutionConfiguration" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicCloudConnectorSolutionConfigurationAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource&gt;&gt; GetPublicCloudConnectorSolutionConfigurationAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string solutionConfiguration, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource&gt;&gt; GetPublicCloudConnectorSolutionConfigurationAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string solutionConfiguration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorSolutionConfigurationAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPublicCloudConnectorSolutionConfigurationAsync (client As ArmClient, scope As ResourceIdentifier, solutionConfiguration As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PublicCloudConnectorSolutionConfigurationResource))" />
      <MemberSignature Language="F#" Value="static member GetPublicCloudConnectorSolutionConfigurationAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource&gt;&gt;" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorSolutionConfigurationAsync (client, scope, solutionConfiguration, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="solutionConfiguration" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="solutionConfiguration"> Represent Solution Configuration Resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a SolutionConfiguration
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.HybridConnectivity/solutionConfigurations/{solutionConfiguration}</description></item><item><term>Operation Id</term><description>SolutionConfiguration_Get</description></item><item><term>Default Api Version</term><description>2024-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetPublicCloudConnectorSolutionConfigurationAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="solutionConfiguration" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="solutionConfiguration" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicCloudConnectorSolutionConfigurationResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource GetPublicCloudConnectorSolutionConfigurationResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource GetPublicCloudConnectorSolutionConfigurationResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorSolutionConfigurationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPublicCloudConnectorSolutionConfigurationResource (client As ArmClient, id As ResourceIdentifier) As PublicCloudConnectorSolutionConfigurationResource" />
      <MemberSignature Language="F#" Value="static member GetPublicCloudConnectorSolutionConfigurationResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorSolutionConfigurationResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetPublicCloudConnectorSolutionConfigurationResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicCloudConnectorSolutionConfigurations">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationCollection GetPublicCloudConnectorSolutionConfigurations (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationCollection GetPublicCloudConnectorSolutionConfigurations(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorSolutionConfigurations(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPublicCloudConnectorSolutionConfigurations (client As ArmClient, scope As ResourceIdentifier) As PublicCloudConnectorSolutionConfigurationCollection" />
      <MemberSignature Language="F#" Value="static member GetPublicCloudConnectorSolutionConfigurations : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationCollection" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorSolutionConfigurations (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary>
            Gets a collection of PublicCloudConnectorSolutionConfigurationResources in the ArmClient.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetPublicCloudConnectorSolutionConfigurations(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> An object representing collection of PublicCloudConnectorSolutionConfigurationResources and their operations over a PublicCloudConnectorSolutionConfigurationResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicCloudConnectorSolutionType">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource&gt; GetPublicCloudConnectorSolutionType (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string solutionType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource&gt; GetPublicCloudConnectorSolutionType(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string solutionType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorSolutionType(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPublicCloudConnectorSolutionType (resourceGroupResource As ResourceGroupResource, solutionType As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PublicCloudConnectorSolutionTypeResource)" />
      <MemberSignature Language="F#" Value="static member GetPublicCloudConnectorSolutionType : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource&gt;" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorSolutionType (resourceGroupResource, solutionType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="solutionType" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="solutionType"> Solution Type resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a SolutionTypeResource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridConnectivity/solutionTypes/{solutionType}</description></item><item><term>Operation Id</term><description>SolutionTypeResource_Get</description></item><item><term>Default Api Version</term><description>2024-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityResourceGroupResource.GetPublicCloudConnectorSolutionType(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="solutionType" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="solutionType" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicCloudConnectorSolutionTypeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource&gt;&gt; GetPublicCloudConnectorSolutionTypeAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string solutionType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource&gt;&gt; GetPublicCloudConnectorSolutionTypeAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string solutionType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorSolutionTypeAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPublicCloudConnectorSolutionTypeAsync (resourceGroupResource As ResourceGroupResource, solutionType As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PublicCloudConnectorSolutionTypeResource))" />
      <MemberSignature Language="F#" Value="static member GetPublicCloudConnectorSolutionTypeAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource&gt;&gt;" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorSolutionTypeAsync (resourceGroupResource, solutionType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="solutionType" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="solutionType"> Solution Type resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a SolutionTypeResource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridConnectivity/solutionTypes/{solutionType}</description></item><item><term>Operation Id</term><description>SolutionTypeResource_Get</description></item><item><term>Default Api Version</term><description>2024-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityResourceGroupResource.GetPublicCloudConnectorSolutionTypeAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="solutionType" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="solutionType" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicCloudConnectorSolutionTypeResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource GetPublicCloudConnectorSolutionTypeResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource GetPublicCloudConnectorSolutionTypeResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorSolutionTypeResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPublicCloudConnectorSolutionTypeResource (client As ArmClient, id As ResourceIdentifier) As PublicCloudConnectorSolutionTypeResource" />
      <MemberSignature Language="F#" Value="static member GetPublicCloudConnectorSolutionTypeResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorSolutionTypeResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetPublicCloudConnectorSolutionTypeResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicCloudConnectorSolutionTypes">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeCollection GetPublicCloudConnectorSolutionTypes (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeCollection GetPublicCloudConnectorSolutionTypes(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorSolutionTypes(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPublicCloudConnectorSolutionTypes (resourceGroupResource As ResourceGroupResource) As PublicCloudConnectorSolutionTypeCollection" />
      <MemberSignature Language="F#" Value="static member GetPublicCloudConnectorSolutionTypes : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeCollection" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorSolutionTypes resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of PublicCloudConnectorSolutionTypeResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityResourceGroupResource.GetPublicCloudConnectorSolutionTypes" /> instead.</description></item></summary>
        <returns> An object representing collection of PublicCloudConnectorSolutionTypeResources and their operations over a PublicCloudConnectorSolutionTypeResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicCloudConnectorSolutionTypes">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource&gt; GetPublicCloudConnectorSolutionTypes (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource&gt; GetPublicCloudConnectorSolutionTypes(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorSolutionTypes(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPublicCloudConnectorSolutionTypes (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PublicCloudConnectorSolutionTypeResource)" />
      <MemberSignature Language="F#" Value="static member GetPublicCloudConnectorSolutionTypes : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource&gt;" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorSolutionTypes (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List SolutionTypeResource resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.HybridConnectivity/solutionTypes</description></item><item><term>Operation Id</term><description>SolutionTypeResource_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivitySubscriptionResource.GetPublicCloudConnectorSolutionTypes(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicCloudConnectorSolutionTypesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource&gt; GetPublicCloudConnectorSolutionTypesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource&gt; GetPublicCloudConnectorSolutionTypesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorSolutionTypesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPublicCloudConnectorSolutionTypesAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PublicCloudConnectorSolutionTypeResource)" />
      <MemberSignature Language="F#" Value="static member GetPublicCloudConnectorSolutionTypesAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource&gt;" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudConnectorSolutionTypesAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List SolutionTypeResource resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.HybridConnectivity/solutionTypes</description></item><item><term>Operation Id</term><description>SolutionTypeResource_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivitySubscriptionResource.GetPublicCloudConnectorSolutionTypes(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicCloudInventoryResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridConnectivity.PublicCloudInventoryResource GetPublicCloudInventoryResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridConnectivity.PublicCloudInventoryResource GetPublicCloudInventoryResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudInventoryResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPublicCloudInventoryResource (client As ArmClient, id As ResourceIdentifier) As PublicCloudInventoryResource" />
      <MemberSignature Language="F#" Value="static member GetPublicCloudInventoryResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.PublicCloudInventoryResource" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.GetPublicCloudInventoryResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridConnectivity.PublicCloudInventoryResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudInventoryResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.HybridConnectivity.PublicCloudInventoryResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudInventoryResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetPublicCloudInventoryResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudInventoryResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="PostGenerateAwsTemplate">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.Models.GenerateAwsTemplateResult&gt; PostGenerateAwsTemplate (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.HybridConnectivity.Models.GenerateAwsTemplateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.HybridConnectivity.Models.GenerateAwsTemplateResult&gt; PostGenerateAwsTemplate(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.HybridConnectivity.Models.GenerateAwsTemplateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.PostGenerateAwsTemplate(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.HybridConnectivity.Models.GenerateAwsTemplateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PostGenerateAwsTemplate (subscriptionResource As SubscriptionResource, content As GenerateAwsTemplateContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of GenerateAwsTemplateResult)" />
      <MemberSignature Language="F#" Value="static member PostGenerateAwsTemplate : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.HybridConnectivity.Models.GenerateAwsTemplateContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.Models.GenerateAwsTemplateResult&gt;" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.PostGenerateAwsTemplate (subscriptionResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.Models.GenerateAwsTemplateResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.HybridConnectivity.Models.GenerateAwsTemplateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="content"> ConnectorId and SolutionTypes and their properties to Generate AWS CFT Template. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve AWS Cloud Formation template
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.HybridConnectivity/generateAwsTemplate</description></item><item><term>Operation Id</term><description>GenerateAwsTemplate_Post</description></item><item><term>Default Api Version</term><description>2024-12-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivitySubscriptionResource.PostGenerateAwsTemplate(Azure.ResourceManager.HybridConnectivity.Models.GenerateAwsTemplateContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="PostGenerateAwsTemplateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.Models.GenerateAwsTemplateResult&gt;&gt; PostGenerateAwsTemplateAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.HybridConnectivity.Models.GenerateAwsTemplateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HybridConnectivity.Models.GenerateAwsTemplateResult&gt;&gt; PostGenerateAwsTemplateAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.HybridConnectivity.Models.GenerateAwsTemplateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.PostGenerateAwsTemplateAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.HybridConnectivity.Models.GenerateAwsTemplateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PostGenerateAwsTemplateAsync (subscriptionResource As SubscriptionResource, content As GenerateAwsTemplateContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of GenerateAwsTemplateResult))" />
      <MemberSignature Language="F#" Value="static member PostGenerateAwsTemplateAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.HybridConnectivity.Models.GenerateAwsTemplateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.Models.GenerateAwsTemplateResult&gt;&gt;" Usage="Azure.ResourceManager.HybridConnectivity.HybridConnectivityExtensions.PostGenerateAwsTemplateAsync (subscriptionResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.Models.GenerateAwsTemplateResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.HybridConnectivity.Models.GenerateAwsTemplateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="content"> ConnectorId and SolutionTypes and their properties to Generate AWS CFT Template. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve AWS Cloud Formation template
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.HybridConnectivity/generateAwsTemplate</description></item><item><term>Operation Id</term><description>GenerateAwsTemplate_Post</description></item><item><term>Default Api Version</term><description>2024-12-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivitySubscriptionResource.PostGenerateAwsTemplate(Azure.ResourceManager.HybridConnectivity.Models.GenerateAwsTemplateContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
