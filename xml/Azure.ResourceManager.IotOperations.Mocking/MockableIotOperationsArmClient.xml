<Type Name="MockableIotOperationsArmClient" FullName="Azure.ResourceManager.IotOperations.Mocking.MockableIotOperationsArmClient">
  <TypeSignature Language="C#" Value="public class MockableIotOperationsArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableIotOperationsArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.IotOperations.Mocking.MockableIotOperationsArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableIotOperationsArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableIotOperationsArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableIotOperationsArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotOperations.Mocking.MockableIotOperationsArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.IotOperations.Mocking.MockableIotOperationsArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIotOperationsBrokerAuthenticationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.IotOperations.IotOperationsBrokerAuthenticationResource GetIotOperationsBrokerAuthenticationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.IotOperations.IotOperationsBrokerAuthenticationResource GetIotOperationsBrokerAuthenticationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotOperations.Mocking.MockableIotOperationsArmClient.GetIotOperationsBrokerAuthenticationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotOperationsBrokerAuthenticationResource (id As ResourceIdentifier) As IotOperationsBrokerAuthenticationResource" />
      <MemberSignature Language="F#" Value="abstract member GetIotOperationsBrokerAuthenticationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.IotOperations.IotOperationsBrokerAuthenticationResource&#xA;override this.GetIotOperationsBrokerAuthenticationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.IotOperations.IotOperationsBrokerAuthenticationResource" Usage="mockableIotOperationsArmClient.GetIotOperationsBrokerAuthenticationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.IotOperations.IotOperationsBrokerAuthenticationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.IotOperations.IotOperationsBrokerAuthenticationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.IotOperations.IotOperationsBrokerAuthenticationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.IotOperations.IotOperationsBrokerAuthenticationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.IotOperations.IotOperationsBrokerAuthenticationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIotOperationsBrokerAuthorizationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.IotOperations.IotOperationsBrokerAuthorizationResource GetIotOperationsBrokerAuthorizationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.IotOperations.IotOperationsBrokerAuthorizationResource GetIotOperationsBrokerAuthorizationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotOperations.Mocking.MockableIotOperationsArmClient.GetIotOperationsBrokerAuthorizationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotOperationsBrokerAuthorizationResource (id As ResourceIdentifier) As IotOperationsBrokerAuthorizationResource" />
      <MemberSignature Language="F#" Value="abstract member GetIotOperationsBrokerAuthorizationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.IotOperations.IotOperationsBrokerAuthorizationResource&#xA;override this.GetIotOperationsBrokerAuthorizationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.IotOperations.IotOperationsBrokerAuthorizationResource" Usage="mockableIotOperationsArmClient.GetIotOperationsBrokerAuthorizationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.IotOperations.IotOperationsBrokerAuthorizationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.IotOperations.IotOperationsBrokerAuthorizationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.IotOperations.IotOperationsBrokerAuthorizationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.IotOperations.IotOperationsBrokerAuthorizationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.IotOperations.IotOperationsBrokerAuthorizationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIotOperationsBrokerListenerResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.IotOperations.IotOperationsBrokerListenerResource GetIotOperationsBrokerListenerResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.IotOperations.IotOperationsBrokerListenerResource GetIotOperationsBrokerListenerResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotOperations.Mocking.MockableIotOperationsArmClient.GetIotOperationsBrokerListenerResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotOperationsBrokerListenerResource (id As ResourceIdentifier) As IotOperationsBrokerListenerResource" />
      <MemberSignature Language="F#" Value="abstract member GetIotOperationsBrokerListenerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.IotOperations.IotOperationsBrokerListenerResource&#xA;override this.GetIotOperationsBrokerListenerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.IotOperations.IotOperationsBrokerListenerResource" Usage="mockableIotOperationsArmClient.GetIotOperationsBrokerListenerResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.IotOperations.IotOperationsBrokerListenerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.IotOperations.IotOperationsBrokerListenerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.IotOperations.IotOperationsBrokerListenerResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.IotOperations.IotOperationsBrokerListenerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.IotOperations.IotOperationsBrokerListenerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIotOperationsBrokerResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.IotOperations.IotOperationsBrokerResource GetIotOperationsBrokerResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.IotOperations.IotOperationsBrokerResource GetIotOperationsBrokerResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotOperations.Mocking.MockableIotOperationsArmClient.GetIotOperationsBrokerResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotOperationsBrokerResource (id As ResourceIdentifier) As IotOperationsBrokerResource" />
      <MemberSignature Language="F#" Value="abstract member GetIotOperationsBrokerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.IotOperations.IotOperationsBrokerResource&#xA;override this.GetIotOperationsBrokerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.IotOperations.IotOperationsBrokerResource" Usage="mockableIotOperationsArmClient.GetIotOperationsBrokerResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.IotOperations.IotOperationsBrokerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.IotOperations.IotOperationsBrokerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.IotOperations.IotOperationsBrokerResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.IotOperations.IotOperationsBrokerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.IotOperations.IotOperationsBrokerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIotOperationsDataflowEndpointResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.IotOperations.IotOperationsDataflowEndpointResource GetIotOperationsDataflowEndpointResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.IotOperations.IotOperationsDataflowEndpointResource GetIotOperationsDataflowEndpointResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotOperations.Mocking.MockableIotOperationsArmClient.GetIotOperationsDataflowEndpointResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotOperationsDataflowEndpointResource (id As ResourceIdentifier) As IotOperationsDataflowEndpointResource" />
      <MemberSignature Language="F#" Value="abstract member GetIotOperationsDataflowEndpointResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.IotOperations.IotOperationsDataflowEndpointResource&#xA;override this.GetIotOperationsDataflowEndpointResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.IotOperations.IotOperationsDataflowEndpointResource" Usage="mockableIotOperationsArmClient.GetIotOperationsDataflowEndpointResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.IotOperations.IotOperationsDataflowEndpointResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.IotOperations.IotOperationsDataflowEndpointResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.IotOperations.IotOperationsDataflowEndpointResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.IotOperations.IotOperationsDataflowEndpointResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.IotOperations.IotOperationsDataflowEndpointResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIotOperationsDataflowProfileResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.IotOperations.IotOperationsDataflowProfileResource GetIotOperationsDataflowProfileResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.IotOperations.IotOperationsDataflowProfileResource GetIotOperationsDataflowProfileResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotOperations.Mocking.MockableIotOperationsArmClient.GetIotOperationsDataflowProfileResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotOperationsDataflowProfileResource (id As ResourceIdentifier) As IotOperationsDataflowProfileResource" />
      <MemberSignature Language="F#" Value="abstract member GetIotOperationsDataflowProfileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.IotOperations.IotOperationsDataflowProfileResource&#xA;override this.GetIotOperationsDataflowProfileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.IotOperations.IotOperationsDataflowProfileResource" Usage="mockableIotOperationsArmClient.GetIotOperationsDataflowProfileResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.IotOperations.IotOperationsDataflowProfileResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.IotOperations.IotOperationsDataflowProfileResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.IotOperations.IotOperationsDataflowProfileResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.IotOperations.IotOperationsDataflowProfileResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.IotOperations.IotOperationsDataflowProfileResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIotOperationsDataflowResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.IotOperations.IotOperationsDataflowResource GetIotOperationsDataflowResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.IotOperations.IotOperationsDataflowResource GetIotOperationsDataflowResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotOperations.Mocking.MockableIotOperationsArmClient.GetIotOperationsDataflowResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotOperationsDataflowResource (id As ResourceIdentifier) As IotOperationsDataflowResource" />
      <MemberSignature Language="F#" Value="abstract member GetIotOperationsDataflowResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.IotOperations.IotOperationsDataflowResource&#xA;override this.GetIotOperationsDataflowResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.IotOperations.IotOperationsDataflowResource" Usage="mockableIotOperationsArmClient.GetIotOperationsDataflowResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.IotOperations.IotOperationsDataflowResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.IotOperations.IotOperationsDataflowResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.IotOperations.IotOperationsDataflowResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.IotOperations.IotOperationsDataflowResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.IotOperations.IotOperationsDataflowResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIotOperationsInstanceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.IotOperations.IotOperationsInstanceResource GetIotOperationsInstanceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.IotOperations.IotOperationsInstanceResource GetIotOperationsInstanceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotOperations.Mocking.MockableIotOperationsArmClient.GetIotOperationsInstanceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotOperationsInstanceResource (id As ResourceIdentifier) As IotOperationsInstanceResource" />
      <MemberSignature Language="F#" Value="abstract member GetIotOperationsInstanceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.IotOperations.IotOperationsInstanceResource&#xA;override this.GetIotOperationsInstanceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.IotOperations.IotOperationsInstanceResource" Usage="mockableIotOperationsArmClient.GetIotOperationsInstanceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.IotOperations.IotOperationsInstanceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.IotOperations.IotOperationsInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.IotOperations.IotOperationsInstanceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.IotOperations.IotOperationsInstanceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.IotOperations.IotOperationsInstanceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
