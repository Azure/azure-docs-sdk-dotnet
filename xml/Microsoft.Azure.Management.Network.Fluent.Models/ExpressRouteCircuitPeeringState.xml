<Type Name="ExpressRouteCircuitPeeringState" FullName="Microsoft.Azure.Management.Network.Fluent.Models.ExpressRouteCircuitPeeringState">
  <TypeSignature Language="C#" Value="public static class ExpressRouteCircuitPeeringState" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ExpressRouteCircuitPeeringState extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Network.Fluent.Models.ExpressRouteCircuitPeeringState" />
  <TypeSignature Language="VB.NET" Value="Public Class ExpressRouteCircuitPeeringState" />
  <TypeSignature Language="F#" Value="type ExpressRouteCircuitPeeringState = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressRouteCircuitPeeringState : Microsoft::Azure::Management::ResourceManager::Fluent::Core::ExpandableStringEnum&lt;Microsoft::Azure::Management::Network::Fluent::Models::ExpressRouteCircuitPeeringState ^&gt;" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ExpressRouteCircuitPeeringState : Microsoft::Azure::Management::ResourceManager::Fluent::Core::ExpandableStringEnum&lt;Microsoft::Azure::Management::Network::Fluent::Models::ExpressRouteCircuitPeeringState&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.50</AssemblyVersion>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="azure-dotnet">Microsoft.Azure.Management.ResourceManager.Fluent.Core.ExpandableStringEnum&lt;Microsoft.Azure.Management.Network.Fluent.Models.ExpressRouteCircuitPeeringState&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">Microsoft.Azure.Management.Network.Fluent.Models.ExpressRouteCircuitPeeringState</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Defines values for ExpressRouteCircuitPeeringState.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressRouteCircuitPeeringState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Fluent.Models.ExpressRouteCircuitPeeringState.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressRouteCircuitPeeringState();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; ExpressRouteCircuitPeeringState();" />
      <MemberSignature Language="C++ WINRT" Value=" ExpressRouteCircuitPeeringState();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Disabled">
      <MemberSignature Language="C#" Value="public const string Disabled;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Disabled" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Azure.Management.Network.Fluent.Models.ExpressRouteCircuitPeeringState.Disabled" />
      <MemberSignature Language="VB.NET" Value="Public Const Disabled As String " />
      <MemberSignature Language="F#" Value="val mutable Disabled : string" Usage="Microsoft.Azure.Management.Network.Fluent.Models.ExpressRouteCircuitPeeringState.Disabled" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Azure::Management::Network::Fluent::Models::ExpressRouteCircuitPeeringState ^ Disabled;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::Azure::Management::Network::Fluent::Models::ExpressRouteCircuitPeeringState Disabled;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public const string Enabled;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Enabled" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Azure.Management.Network.Fluent.Models.ExpressRouteCircuitPeeringState.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Const Enabled As String " />
      <MemberSignature Language="F#" Value="val mutable Enabled : string" Usage="Microsoft.Azure.Management.Network.Fluent.Models.ExpressRouteCircuitPeeringState.Enabled" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Azure::Management::Network::Fluent::Models::ExpressRouteCircuitPeeringState ^ Enabled;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::Azure::Management::Network::Fluent::Models::ExpressRouteCircuitPeeringState Enabled;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>