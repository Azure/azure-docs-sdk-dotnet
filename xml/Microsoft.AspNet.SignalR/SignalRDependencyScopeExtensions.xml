<Type Name="SignalRDependencyScopeExtensions" FullName="Microsoft.AspNet.SignalR.SignalRDependencyScopeExtensions">
  <TypeSignature Language="C#" Value="public static class SignalRDependencyScopeExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SignalRDependencyScopeExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNet.SignalR.SignalRDependencyScopeExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SignalRDependencyScopeExtensions" />
  <TypeSignature Language="F#" Value="type SignalRDependencyScopeExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.WindowsAzure.Mobile.Service.SignalR</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Extension methods for <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> facilitating getting the services used 
            by the backend.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetSignalRDependencyResolver">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNet.SignalR.IDependencyResolver GetSignalRDependencyResolver (this System.Web.Http.Dependencies.IDependencyScope services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNet.SignalR.IDependencyResolver GetSignalRDependencyResolver(class System.Web.Http.Dependencies.IDependencyScope services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNet.SignalR.SignalRDependencyScopeExtensions.GetSignalRDependencyResolver(System.Web.Http.Dependencies.IDependencyScope)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSignalRDependencyResolver (services As IDependencyScope) As IDependencyResolver" />
      <MemberSignature Language="F#" Value="static member GetSignalRDependencyResolver : System.Web.Http.Dependencies.IDependencyScope -&gt; Microsoft.AspNet.SignalR.IDependencyResolver" Usage="Microsoft.AspNet.SignalR.SignalRDependencyScopeExtensions.GetSignalRDependencyResolver services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service.SignalR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNet.SignalR.IDependencyResolver</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.Web.Http.Dependencies.IDependencyScope" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> implementation.</param>
        <summary>
            Gets the ASP.NET SignalR <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" /> instance registered with the Dependency Injection engine.
            This enables to configure the dependencies directly for ASP.NET SignalR dependencies.
            </summary>
        <returns>The registered instance.</returns>
        <remarks>If no type is registered then this method throws an <see cref="T:System.InvalidOperationException" />.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
