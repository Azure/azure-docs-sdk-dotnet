<Type Name="IKeys" FullName="Microsoft.Azure.Management.KeyVault.Fluent.IKeys">
  <TypeSignature Language="C#" Value="public interface IKeys : Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating&lt;Microsoft.Azure.Management.KeyVault.Fluent.Key.Definition.IBlank&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingById, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById&lt;Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByName&lt;Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByNameAsync&lt;Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListing&lt;Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IKeys implements class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating`1&lt;class Microsoft.Azure.Management.KeyVault.Fluent.Key.Definition.IBlank&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingById, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById`1&lt;class Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByName`1&lt;class Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByNameAsync`1&lt;class Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListing`1&lt;class Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.KeyVault.Fluent.IKeys" />
  <TypeSignature Language="VB.NET" Value="Public Interface IKeys&#xA;Implements IBeta, ISupportsCreating(Of IBlank), ISupportsDeletingById, ISupportsGettingById(Of IKey), ISupportsGettingByName(Of IKey), ISupportsGettingByNameAsync(Of IKey), ISupportsListing(Of IKey)" />
  <TypeSignature Language="F#" Value="type IKeys = interface&#xA;    interface IBeta&#xA;    interface ISupportsCreating&lt;IBlank&gt;&#xA;    interface ISupportsDeletingById&#xA;    interface ISupportsGettingById&lt;IKey&gt;&#xA;    interface ISupportsGettingByNameAsync&lt;IKey&gt;&#xA;    interface ISupportsGettingByName&lt;IKey&gt;&#xA;    interface ISupportsListing&lt;IKey&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.61</AssemblyVersion>
    <AssemblyVersion>1.0.0.62</AssemblyVersion>
    <AssemblyVersion>1.0.0.63</AssemblyVersion>
    <AssemblyVersion>1.0.0.64</AssemblyVersion>
    <AssemblyVersion>1.0.0.65</AssemblyVersion>
    <AssemblyVersion>1.0.0.66</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating&lt;Microsoft.Azure.Management.KeyVault.Fluent.Key.Definition.IBlank&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingById</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById&lt;Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByName&lt;Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByName&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByNameAsync&lt;Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListing&lt;Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Entry point for Key Vault keys API.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetByNameAndVersion">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.KeyVault.Fluent.IKey GetByNameAndVersion (string name, string version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.KeyVault.Fluent.IKey GetByNameAndVersion(string name, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.KeyVault.Fluent.IKeys.GetByNameAndVersion(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByNameAndVersion (name As String, version As String) As IKey" />
      <MemberSignature Language="F#" Value="abstract member GetByNameAndVersion : string * string -&gt; Microsoft.Azure.Management.KeyVault.Fluent.IKey" Usage="iKeys.GetByNameAndVersion (name, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.KeyVault.Fluent.IKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">the name of the key</param>
        <param name="version">the version of the key</param>
        <summary>
            Gets a Key Vault key.
            </summary>
        <returns>the Key Vault key</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByNameAndVersionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt; GetByNameAndVersionAsync (string name, string version, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt; GetByNameAndVersionAsync(string name, string version, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.KeyVault.Fluent.IKeys.GetByNameAndVersionAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByNameAndVersionAsync (name As String, version As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IKey)" />
      <MemberSignature Language="F#" Value="abstract member GetByNameAndVersionAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt;" Usage="iKeys.GetByNameAndVersionAsync (name, version, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">the name of the key</param>
        <param name="version">the version of the key</param>
        <param name="cancellationToken">cancellationToken the cancellation token</param>
        <summary>
            Gets a Key Vault key.
            </summary>
        <returns>the Key Vault key</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Restore">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.KeyVault.Fluent.IKey Restore (params byte[] backup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.KeyVault.Fluent.IKey Restore(unsigned int8[] backup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.KeyVault.Fluent.IKeys.Restore(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Restore (ParamArray backup As Byte()) As IKey" />
      <MemberSignature Language="F#" Value="abstract member Restore : byte[] -&gt; Microsoft.Azure.Management.KeyVault.Fluent.IKey" Usage="iKeys.Restore backup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.KeyVault.Fluent.IKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backup" Type="System.Byte[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="backup">The backup key.</param>
        <summary>
            Restores a backup key into a Key Vault key.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The key restored from the backup.</return>
      </Docs>
    </Member>
    <Member MemberName="RestoreAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt; RestoreAsync (byte[] backup, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt; RestoreAsync(unsigned int8[] backup, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.KeyVault.Fluent.IKeys.RestoreAsync(System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function RestoreAsync (backup As Byte(), Optional cancellationToken As CancellationToken = Nothing) As Task(Of IKey)" />
      <MemberSignature Language="F#" Value="abstract member RestoreAsync : byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt;" Usage="iKeys.RestoreAsync (backup, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backup" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="backup">The backup key.</param>
        <summary>
            Restores a backup key into a Key Vault key.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The key restored from the backup.</return>
      </Docs>
    </Member>
  </Members>
</Type>
