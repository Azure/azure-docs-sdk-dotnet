<Type Name="IKey" FullName="Microsoft.Azure.Management.KeyVault.Fluent.IKey">
  <TypeSignature Language="C#" Value="public interface IKey : Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasName, Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IIndexable, Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IUpdatable&lt;Microsoft.Azure.Management.KeyVault.Fluent.Key.Update.IUpdate&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IKey implements class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner`1&lt;class Microsoft.Azure.KeyVault.Models.KeyBundle&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasName, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IIndexable, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IUpdatable`1&lt;class Microsoft.Azure.Management.KeyVault.Fluent.Key.Update.IUpdate&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.KeyVault.Fluent.IKey" />
  <TypeSignature Language="VB.NET" Value="Public Interface IKey&#xA;Implements IBeta, IHasId, IHasInner(Of KeyBundle), IHasName, IIndexable, IUpdatable(Of IUpdate)" />
  <TypeSignature Language="F#" Value="type IKey = interface&#xA;    interface IBeta&#xA;    interface IIndexable&#xA;    interface IHasInner&lt;KeyBundle&gt;&#xA;    interface IHasId&#xA;    interface IHasName&#xA;    interface IUpdatable&lt;IUpdate&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasName</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IIndexable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IUpdatable&lt;Microsoft.Azure.Management.KeyVault.Fluent.Key.Update.IUpdate&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An immutable client-side representation of an Azure Key Vault key.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.KeyVault.Models.KeyAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.KeyVault.Models.KeyAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.KeyVault.Fluent.IKey.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As KeyAttributes" />
      <MemberSignature Language="F#" Value="member this.Attributes : Microsoft.Azure.KeyVault.Models.KeyAttributes" Usage="Microsoft.Azure.Management.KeyVault.Fluent.IKey.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.KeyVault.Models.KeyAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the key management attributes.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Backup">
      <MemberSignature Language="C#" Value="public byte[] Backup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] Backup() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.KeyVault.Fluent.IKey.Backup" />
      <MemberSignature Language="VB.NET" Value="Public Function Backup () As Byte()" />
      <MemberSignature Language="F#" Value="abstract member Backup : unit -&gt; byte[]" Usage="iKey.Backup " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>A backup of the specified key be downloaded to the client.</return>
      </Docs>
    </Member>
    <Member MemberName="BackupAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; BackupAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; BackupAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.KeyVault.Fluent.IKey.BackupAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member BackupAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="iKey.BackupAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>A backup of the specified key be downloaded to the client.</return>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public byte[] Decrypt (Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm algorithm, params byte[] content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] Decrypt(class Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm algorithm, unsigned int8[] content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.KeyVault.Fluent.IKey.Decrypt(Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Decrypt (algorithm As JsonWebKeyEncryptionAlgorithm, ParamArray content As Byte()) As Byte()" />
      <MemberSignature Language="F#" Value="abstract member Decrypt : Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm * byte[] -&gt; byte[]" Usage="iKey.Decrypt (algorithm, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm" />
        <Parameter Name="content" Type="System.Byte[]">
          <Attributes>
            <Attribute FrameworkAlternate="azure-dotnet">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="algorithm">The JWK encryption algorithm.</param>
        <param name="content">The content to be decrypted.</param>
        <summary>
            Decrypts a single block of encrypted data.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The decrypted value.</return>
      </Docs>
    </Member>
    <Member MemberName="DecryptAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; DecryptAsync (Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm algorithm, byte[] content, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; DecryptAsync(class Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm algorithm, unsigned int8[] content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.KeyVault.Fluent.IKey.DecryptAsync(Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DecryptAsync : Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="iKey.DecryptAsync (algorithm, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm" />
        <Parameter Name="content" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The JWK encryption algorithm.</param>
        <param name="content">The content to be decrypted.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Decrypts a single block of encrypted data.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The decrypted value.</return>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public byte[] Encrypt (Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm algorithm, params byte[] content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] Encrypt(class Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm algorithm, unsigned int8[] content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.KeyVault.Fluent.IKey.Encrypt(Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (algorithm As JsonWebKeyEncryptionAlgorithm, ParamArray content As Byte()) As Byte()" />
      <MemberSignature Language="F#" Value="abstract member Encrypt : Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm * byte[] -&gt; byte[]" Usage="iKey.Encrypt (algorithm, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm" />
        <Parameter Name="content" Type="System.Byte[]">
          <Attributes>
            <Attribute FrameworkAlternate="azure-dotnet">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="algorithm">The JWK encryption algorithm.</param>
        <param name="content">The content to be encrypted.</param>
        <summary>
            Encrypts an arbitrary sequence of bytes using an encryption key that is stored in a key vault.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The encrypted value.</return>
      </Docs>
    </Member>
    <Member MemberName="EncryptAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; EncryptAsync (Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm algorithm, byte[] content, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; EncryptAsync(class Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm algorithm, unsigned int8[] content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.KeyVault.Fluent.IKey.EncryptAsync(Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member EncryptAsync : Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="iKey.EncryptAsync (algorithm, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm" />
        <Parameter Name="content" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The JWK encryption algorithm.</param>
        <param name="content">The content to be encrypted.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Encrypts an arbitrary sequence of bytes using an encryption key that is stored in a key vault.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The encrypted value.</return>
      </Docs>
    </Member>
    <Member MemberName="JsonWebKey">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.KeyVault.WebKey.JsonWebKey JsonWebKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.KeyVault.WebKey.JsonWebKey JsonWebKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.KeyVault.Fluent.IKey.JsonWebKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JsonWebKey As JsonWebKey" />
      <MemberSignature Language="F#" Value="member this.JsonWebKey : Microsoft.Azure.KeyVault.WebKey.JsonWebKey" Usage="Microsoft.Azure.Management.KeyVault.Fluent.IKey.JsonWebKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.KeyVault.WebKey.JsonWebKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Json web key.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListVersions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt; ListVersions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt; ListVersions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.KeyVault.Fluent.IKey.ListVersions" />
      <MemberSignature Language="VB.NET" Value="Public Function ListVersions () As IEnumerable(Of IKey)" />
      <MemberSignature Language="F#" Value="abstract member ListVersions : unit -&gt; seq&lt;Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt;" Usage="iKey.ListVersions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>A list of individual key versions with the same key name.</return>
      </Docs>
    </Member>
    <Member MemberName="ListVersionsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt; ListVersionsAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt; ListVersionsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.KeyVault.Fluent.IKey.ListVersionsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ListVersionsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt;" Usage="iKey.ListVersionsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.KeyVault.Fluent.IKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>A list of individual key versions with the same key name.</return>
      </Docs>
    </Member>
    <Member MemberName="Managed">
      <MemberSignature Language="C#" Value="public bool Managed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Managed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.KeyVault.Fluent.IKey.Managed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Managed As Boolean" />
      <MemberSignature Language="F#" Value="member this.Managed : bool" Usage="Microsoft.Azure.Management.KeyVault.Fluent.IKey.Managed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets true if the key's lifetime is managed by key vault. If this is a key
            backing a certificate, then managed will be true.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public byte[] Sign (Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeySignatureAlgorithm algorithm, params byte[] digest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] Sign(class Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeySignatureAlgorithm algorithm, unsigned int8[] digest) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.KeyVault.Fluent.IKey.Sign(Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeySignatureAlgorithm,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (algorithm As JsonWebKeySignatureAlgorithm, ParamArray digest As Byte()) As Byte()" />
      <MemberSignature Language="F#" Value="abstract member Sign : Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeySignatureAlgorithm * byte[] -&gt; byte[]" Usage="iKey.Sign (algorithm, digest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeySignatureAlgorithm" />
        <Parameter Name="digest" Type="System.Byte[]">
          <Attributes>
            <Attribute FrameworkAlternate="azure-dotnet">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="algorithm">The JWK signing algorithm.</param>
        <param name="digest">The content to be signed.</param>
        <summary>
            Creates a signature from a digest.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The signature in a byte[] array.</return>
      </Docs>
    </Member>
    <Member MemberName="SignAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; SignAsync (Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeySignatureAlgorithm algorithm, byte[] digest, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; SignAsync(class Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeySignatureAlgorithm algorithm, unsigned int8[] digest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.KeyVault.Fluent.IKey.SignAsync(Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeySignatureAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SignAsync : Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeySignatureAlgorithm * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="iKey.SignAsync (algorithm, digest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeySignatureAlgorithm" />
        <Parameter Name="digest" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The JWK signing algorithm.</param>
        <param name="digest">The content to be signed.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Creates a signature from a digest.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The signature in a byte[] array.</return>
      </Docs>
    </Member>
    <Member MemberName="Tags">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; Tags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; Tags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.KeyVault.Fluent.IKey.Tags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tags As IReadOnlyDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.Tags : System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt;" Usage="Microsoft.Azure.Management.KeyVault.Fluent.IKey.Tags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets application specific metadata in the form of key-value pairs.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnwrapKey">
      <MemberSignature Language="C#" Value="public byte[] UnwrapKey (Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm algorithm, params byte[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] UnwrapKey(class Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm algorithm, unsigned int8[] key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.KeyVault.Fluent.IKey.UnwrapKey(Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UnwrapKey (algorithm As JsonWebKeyEncryptionAlgorithm, ParamArray key As Byte()) As Byte()" />
      <MemberSignature Language="F#" Value="abstract member UnwrapKey : Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm * byte[] -&gt; byte[]" Usage="iKey.UnwrapKey (algorithm, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm" />
        <Parameter Name="key" Type="System.Byte[]">
          <Attributes>
            <Attribute FrameworkAlternate="azure-dotnet">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="algorithm">The JWK encryption algorithm.</param>
        <param name="key">The key to unwrap.</param>
        <summary>
            Unwraps a symmetric key wrapped originally by this Key Vault key.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The unwrapped symmetric key.</return>
      </Docs>
    </Member>
    <Member MemberName="UnwrapKeyAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UnwrapKeyAsync (Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm algorithm, byte[] key, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UnwrapKeyAsync(class Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm algorithm, unsigned int8[] key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.KeyVault.Fluent.IKey.UnwrapKeyAsync(Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UnwrapKeyAsync : Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="iKey.UnwrapKeyAsync (algorithm, key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm" />
        <Parameter Name="key" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The JWK encryption algorithm.</param>
        <param name="key">The key to unwrap.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Unwraps a symmetric key wrapped originally by this Key Vault key.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The unwrapped symmetric key.</return>
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public bool Verify (Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeySignatureAlgorithm algorithm, byte[] digest, params byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Verify(class Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeySignatureAlgorithm algorithm, unsigned int8[] digest, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.KeyVault.Fluent.IKey.Verify(Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeySignatureAlgorithm,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Verify (algorithm As JsonWebKeySignatureAlgorithm, digest As Byte(), ParamArray signature As Byte()) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Verify : Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeySignatureAlgorithm * byte[] * byte[] -&gt; bool" Usage="iKey.Verify (algorithm, digest, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeySignatureAlgorithm" />
        <Parameter Name="digest" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]">
          <Attributes>
            <Attribute FrameworkAlternate="azure-dotnet">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="algorithm">The JWK signing algorithm.</param>
        <param name="digest">The content to be signed.</param>
        <param name="signature">The signature to verify.</param>
        <summary>
            Verifies a signature from a digest.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>True if the signature is valid.</return>
      </Docs>
    </Member>
    <Member MemberName="VerifyAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; VerifyAsync (Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; VerifyAsync(class Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeySignatureAlgorithm algorithm, unsigned int8[] digest, unsigned int8[] signature, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.KeyVault.Fluent.IKey.VerifyAsync(Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeySignatureAlgorithm,System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member VerifyAsync : Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeySignatureAlgorithm * byte[] * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="iKey.VerifyAsync (algorithm, digest, signature, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeySignatureAlgorithm" />
        <Parameter Name="digest" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The JWK signing algorithm.</param>
        <param name="digest">The content to be signed.</param>
        <param name="signature">The signature to verify.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Verifies a signature from a digest.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>True if the signature is valid.</return>
      </Docs>
    </Member>
    <Member MemberName="WrapKey">
      <MemberSignature Language="C#" Value="public byte[] WrapKey (Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm algorithm, params byte[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] WrapKey(class Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm algorithm, unsigned int8[] key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.KeyVault.Fluent.IKey.WrapKey(Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function WrapKey (algorithm As JsonWebKeyEncryptionAlgorithm, ParamArray key As Byte()) As Byte()" />
      <MemberSignature Language="F#" Value="abstract member WrapKey : Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm * byte[] -&gt; byte[]" Usage="iKey.WrapKey (algorithm, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm" />
        <Parameter Name="key" Type="System.Byte[]">
          <Attributes>
            <Attribute FrameworkAlternate="azure-dotnet">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="algorithm">The JWK encryption algorithm.</param>
        <param name="key">The symmetric key to wrap.</param>
        <summary>
            Wraps a symmetric key using the specified algorithm.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The wrapped key.</return>
      </Docs>
    </Member>
    <Member MemberName="WrapKeyAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; WrapKeyAsync (Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm algorithm, byte[] key, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; WrapKeyAsync(class Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm algorithm, unsigned int8[] key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.KeyVault.Fluent.IKey.WrapKeyAsync(Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member WrapKeyAsync : Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="iKey.WrapKeyAsync (algorithm, key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Microsoft.Azure.Management.KeyVault.Fluent.Models.JsonWebKeyEncryptionAlgorithm" />
        <Parameter Name="key" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The JWK encryption algorithm.</param>
        <param name="key">The symmetric key to wrap.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Wraps a symmetric key using the specified algorithm.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The wrapped key.</return>
      </Docs>
    </Member>
  </Members>
</Type>