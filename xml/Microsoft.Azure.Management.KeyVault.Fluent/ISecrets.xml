<Type Name="ISecrets" FullName="Microsoft.Azure.Management.KeyVault.Fluent.ISecrets">
  <TypeSignature Language="C#" Value="public interface ISecrets : Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating&lt;Microsoft.Azure.Management.KeyVault.Fluent.Secret.Definition.IBlank&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingById, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById&lt;Microsoft.Azure.Management.KeyVault.Fluent.ISecret&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByName&lt;Microsoft.Azure.Management.KeyVault.Fluent.ISecret&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByNameAsync&lt;Microsoft.Azure.Management.KeyVault.Fluent.ISecret&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListing&lt;Microsoft.Azure.Management.KeyVault.Fluent.ISecret&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISecrets implements class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating`1&lt;class Microsoft.Azure.Management.KeyVault.Fluent.Secret.Definition.IBlank&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingById, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById`1&lt;class Microsoft.Azure.Management.KeyVault.Fluent.ISecret&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByName`1&lt;class Microsoft.Azure.Management.KeyVault.Fluent.ISecret&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByNameAsync`1&lt;class Microsoft.Azure.Management.KeyVault.Fluent.ISecret&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListing`1&lt;class Microsoft.Azure.Management.KeyVault.Fluent.ISecret&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.KeyVault.Fluent.ISecrets" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISecrets&#xA;Implements IBeta, ISupportsCreating(Of IBlank), ISupportsDeletingById, ISupportsGettingById(Of ISecret), ISupportsGettingByName(Of ISecret), ISupportsGettingByNameAsync(Of ISecret), ISupportsListing(Of ISecret)" />
  <TypeSignature Language="F#" Value="type ISecrets = interface&#xA;    interface IBeta&#xA;    interface ISupportsCreating&lt;IBlank&gt;&#xA;    interface ISupportsDeletingById&#xA;    interface ISupportsGettingById&lt;ISecret&gt;&#xA;    interface ISupportsGettingByNameAsync&lt;ISecret&gt;&#xA;    interface ISupportsGettingByName&lt;ISecret&gt;&#xA;    interface ISupportsListing&lt;ISecret&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating&lt;Microsoft.Azure.Management.KeyVault.Fluent.Secret.Definition.IBlank&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingById</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById&lt;Microsoft.Azure.Management.KeyVault.Fluent.ISecret&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByName&lt;Microsoft.Azure.Management.KeyVault.Fluent.ISecret&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByName&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByNameAsync&lt;Microsoft.Azure.Management.KeyVault.Fluent.ISecret&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListing&lt;Microsoft.Azure.Management.KeyVault.Fluent.ISecret&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Entry point for Key Vault secrets API.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetByNameAndVersion">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.KeyVault.Fluent.ISecret GetByNameAndVersion (string name, string version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.KeyVault.Fluent.ISecret GetByNameAndVersion(string name, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.KeyVault.Fluent.ISecrets.GetByNameAndVersion(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByNameAndVersion (name As String, version As String) As ISecret" />
      <MemberSignature Language="F#" Value="abstract member GetByNameAndVersion : string * string -&gt; Microsoft.Azure.Management.KeyVault.Fluent.ISecret" Usage="iSecrets.GetByNameAndVersion (name, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.KeyVault.Fluent.ISecret</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">the name of the secret</param>
        <param name="version">the version of the secret</param>
        <summary>
            Gets a Key Vault secret.
            </summary>
        <returns>the Key Vault secret</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByNameAndVersionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.KeyVault.Fluent.ISecret&gt; GetByNameAndVersionAsync (string name, string version, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.KeyVault.Fluent.ISecret&gt; GetByNameAndVersionAsync(string name, string version, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.KeyVault.Fluent.ISecrets.GetByNameAndVersionAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetByNameAndVersionAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.KeyVault.Fluent.ISecret&gt;" Usage="iSecrets.GetByNameAndVersionAsync (name, version, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.KeyVault.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.KeyVault.Fluent.ISecret&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">the name of the secret</param>
        <param name="version">the version of the secret</param>
        <param name="cancellationToken">cancellationToken the cancellation token</param>
        <summary>
            Gets a Key Vault secret.
            </summary>
        <returns>the Key Vault secret</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>