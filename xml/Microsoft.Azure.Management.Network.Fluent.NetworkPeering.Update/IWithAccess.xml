<Type Name="IWithAccess" FullName="Microsoft.Azure.Management.Network.Fluent.NetworkPeering.Update.IWithAccess">
  <TypeSignature Language="C#" Value="public interface IWithAccess" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWithAccess" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Network.Fluent.NetworkPeering.Update.IWithAccess" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWithAccess" />
  <TypeSignature Language="F#" Value="type IWithAccess = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            The stage of a network peering update allowing to control access from and to the remote network.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="WithAccessBetweenBothNetworks">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Network.Fluent.NetworkPeering.Update.IUpdate WithAccessBetweenBothNetworks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Network.Fluent.NetworkPeering.Update.IUpdate WithAccessBetweenBothNetworks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Fluent.NetworkPeering.Update.IWithAccess.WithAccessBetweenBothNetworks" />
      <MemberSignature Language="VB.NET" Value="Public Function WithAccessBetweenBothNetworks () As IUpdate" />
      <MemberSignature Language="F#" Value="abstract member WithAccessBetweenBothNetworks : unit -&gt; Microsoft.Azure.Management.Network.Fluent.NetworkPeering.Update.IUpdate" Usage="iWithAccess.WithAccessBetweenBothNetworks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Network.Fluent.NetworkPeering.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Enables access to either peered virtual network from the other.
            This setting will have effect on the remote network only if the remote network is in the same subscription. Otherwise, it will be ignored and you need to change
            the corresponding access setting on the remote network's matching peering explicitly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the update.</return>
      </Docs>
    </Member>
    <Member MemberName="WithoutAccessFromEitherNetwork">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Network.Fluent.NetworkPeering.Update.IUpdate WithoutAccessFromEitherNetwork ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Network.Fluent.NetworkPeering.Update.IUpdate WithoutAccessFromEitherNetwork() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Fluent.NetworkPeering.Update.IWithAccess.WithoutAccessFromEitherNetwork" />
      <MemberSignature Language="VB.NET" Value="Public Function WithoutAccessFromEitherNetwork () As IUpdate" />
      <MemberSignature Language="F#" Value="abstract member WithoutAccessFromEitherNetwork : unit -&gt; Microsoft.Azure.Management.Network.Fluent.NetworkPeering.Update.IUpdate" Usage="iWithAccess.WithoutAccessFromEitherNetwork " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Network.Fluent.NetworkPeering.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Disallows access to either peered network from the other.
            This setting will have effect on the remote network only if the remote network is in the same subscription. Otherwise, it will be ignored and you need to change
            the corresponding access setting on the remote network's matching peering explicitly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the update.</return>
      </Docs>
    </Member>
  </Members>
</Type>