<Type Name="RetryManager" FullName="Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager">
  <TypeSignature Language="C#" Value="public class RetryManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RetryManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides the entry point to the retry functionality.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RetryManager (System.Collections.Generic.IEnumerable&lt;Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy&gt; retryStrategies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy&gt; retryStrategies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="retryStrategies" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy&gt;" />
      </Parameters>
      <Docs>
        <param name="retryStrategies">The complete set of retry strategies.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RetryManager (System.Collections.Generic.IEnumerable&lt;Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy&gt; retryStrategies, string defaultRetryStrategyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy&gt; retryStrategies, string defaultRetryStrategyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy},System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="retryStrategies" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy&gt;" />
        <Parameter Name="defaultRetryStrategyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="retryStrategies">The complete set of retry strategies.</param>
        <param name="defaultRetryStrategyName">The default retry strategy.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager" /> class with the specified retry strategies and default retry strategy name.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RetryManager (System.Collections.Generic.IEnumerable&lt;Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy&gt; retryStrategies, string defaultRetryStrategyName, System.Collections.Generic.IDictionary&lt;string,string&gt; defaultRetryStrategyNamesMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy&gt; retryStrategies, string defaultRetryStrategyName, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; defaultRetryStrategyNamesMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy},System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="retryStrategies" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy&gt;" />
        <Parameter Name="defaultRetryStrategyName" Type="System.String" />
        <Parameter Name="defaultRetryStrategyNamesMap" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="retryStrategies">The complete set of retry strategies.</param>
        <param name="defaultRetryStrategyName">The default retry strategy.</param>
        <param name="defaultRetryStrategyNamesMap">The names of the default strategies for different technologies.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager" /> class with the specified retry strategies and defaults.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRetryStrategyName">
      <MemberSignature Language="C#" Value="public string DefaultRetryStrategyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultRetryStrategyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager.DefaultRetryStrategyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the default retry strategy name.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultRetryStrategy">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy GetDefaultRetryStrategy (string technology);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy GetDefaultRetryStrategy(string technology) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager.GetDefaultRetryStrategy(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="technology" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="technology">The techonolgy to get the default retry strategy for.</param>
        <summary>
            Returns the retry strategy for the specified technology.
            </summary>
        <returns>The retry strategy for the specified technology.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRetryPolicy&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryPolicy&lt;T&gt; GetRetryPolicy&lt;T&gt; () where T : Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ITransientErrorDetectionStrategynew();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryPolicy`1&lt;!!T&gt; GetRetryPolicy&lt;.ctor (class Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ITransientErrorDetectionStrategy) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager.GetRetryPolicy``1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryPolicy&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ITransientErrorDetectionStrategy</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type that implements the <see cref="T:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ITransientErrorDetectionStrategy" /> interface that is responsible for detecting transient conditions.</typeparam>
        <summary>
            Returns a retry policy with the specified error detection strategy and the default retry strategy defined in the configuration. 
            </summary>
        <returns>A new retry policy with the specified error detection strategy and the default retry strategy defined in the configuration.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRetryPolicy&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryPolicy&lt;T&gt; GetRetryPolicy&lt;T&gt; (string retryStrategyName) where T : Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ITransientErrorDetectionStrategynew();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryPolicy`1&lt;!!T&gt; GetRetryPolicy&lt;.ctor (class Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ITransientErrorDetectionStrategy) T&gt;(string retryStrategyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager.GetRetryPolicy``1(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryPolicy&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ITransientErrorDetectionStrategy</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="retryStrategyName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type that implements the <see cref="T:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ITransientErrorDetectionStrategy" /> interface that is responsible for detecting transient conditions.</typeparam>
        <param name="retryStrategyName">The retry strategy name, as defined in the configuration.</param>
        <summary>
            Returns a retry policy with the specified error detection strategy and retry strategy.
            </summary>
        <returns>A new retry policy with the specified error detection strategy and the default retry strategy defined in the configuration.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRetryStrategy">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy GetRetryStrategy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy GetRetryStrategy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager.GetRetryStrategy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns the default retry strategy defined in the configuration.
            </summary>
        <returns>The retry strategy that matches the default strategy.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRetryStrategy">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy GetRetryStrategy (string retryStrategyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy GetRetryStrategy(string retryStrategyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager.GetRetryStrategy(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="retryStrategyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="retryStrategyName">The retry strategy name.</param>
        <summary>
            Returns the retry strategy that matches the specified name.
            </summary>
        <returns>The retry strategy that matches the specified name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager Instance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the default <see cref="T:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager" /> for the application.
            </summary>
        <value>To be added.</value>
        <remarks>You can update the default retry manager by calling the <see cref="M:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager.SetDefault(Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager,System.Boolean)" /> method.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefault">
      <MemberSignature Language="C#" Value="public static void SetDefault (Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager retryManager, bool throwIfSet = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDefault(class Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager retryManager, bool throwIfSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager.SetDefault(Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="retryManager" Type="Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryManager" />
        <Parameter Name="throwIfSet" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="retryManager">The retry manager.</param>
        <param name="throwIfSet">true to throw an exception if the manager is already set; otherwise, false. Defaults to <see langword="true" />.</param>
        <summary>
            Sets the specified retry manager as the default retry manager.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The singleton is already set and <paramref name="throwIfSet" /> is true.</exception>
      </Docs>
    </Member>
  </Members>
</Type>