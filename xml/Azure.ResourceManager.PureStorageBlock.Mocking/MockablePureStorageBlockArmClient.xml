<Type Name="MockablePureStorageBlockArmClient" FullName="Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockArmClient">
  <TypeSignature Language="C#" Value="public class MockablePureStorageBlockArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockablePureStorageBlockArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockablePureStorageBlockArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockablePureStorageBlockArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.PureStorageBlock</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockablePureStorageBlockArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PureStorageBlock</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPureStorageAvsStorageContainerResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PureStorageBlock.PureStorageAvsStorageContainerResource GetPureStorageAvsStorageContainerResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PureStorageBlock.PureStorageAvsStorageContainerResource GetPureStorageAvsStorageContainerResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockArmClient.GetPureStorageAvsStorageContainerResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPureStorageAvsStorageContainerResource (id As ResourceIdentifier) As PureStorageAvsStorageContainerResource" />
      <MemberSignature Language="F#" Value="abstract member GetPureStorageAvsStorageContainerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PureStorageBlock.PureStorageAvsStorageContainerResource&#xA;override this.GetPureStorageAvsStorageContainerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PureStorageBlock.PureStorageAvsStorageContainerResource" Usage="mockablePureStorageBlockArmClient.GetPureStorageAvsStorageContainerResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PureStorageBlock</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PureStorageBlock.PureStorageAvsStorageContainerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.PureStorageBlock.PureStorageAvsStorageContainerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.PureStorageBlock.PureStorageAvsStorageContainerResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.PureStorageBlock.PureStorageAvsStorageContainerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.PureStorageBlock.PureStorageAvsStorageContainerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPureStorageAvsStorageContainerVolumeResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PureStorageBlock.PureStorageAvsStorageContainerVolumeResource GetPureStorageAvsStorageContainerVolumeResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PureStorageBlock.PureStorageAvsStorageContainerVolumeResource GetPureStorageAvsStorageContainerVolumeResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockArmClient.GetPureStorageAvsStorageContainerVolumeResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPureStorageAvsStorageContainerVolumeResource (id As ResourceIdentifier) As PureStorageAvsStorageContainerVolumeResource" />
      <MemberSignature Language="F#" Value="abstract member GetPureStorageAvsStorageContainerVolumeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PureStorageBlock.PureStorageAvsStorageContainerVolumeResource&#xA;override this.GetPureStorageAvsStorageContainerVolumeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PureStorageBlock.PureStorageAvsStorageContainerVolumeResource" Usage="mockablePureStorageBlockArmClient.GetPureStorageAvsStorageContainerVolumeResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PureStorageBlock</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PureStorageBlock.PureStorageAvsStorageContainerVolumeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.PureStorageBlock.PureStorageAvsStorageContainerVolumeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.PureStorageBlock.PureStorageAvsStorageContainerVolumeResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.PureStorageBlock.PureStorageAvsStorageContainerVolumeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.PureStorageBlock.PureStorageAvsStorageContainerVolumeResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPureStorageAvsVmResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PureStorageBlock.PureStorageAvsVmResource GetPureStorageAvsVmResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PureStorageBlock.PureStorageAvsVmResource GetPureStorageAvsVmResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockArmClient.GetPureStorageAvsVmResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPureStorageAvsVmResource (id As ResourceIdentifier) As PureStorageAvsVmResource" />
      <MemberSignature Language="F#" Value="abstract member GetPureStorageAvsVmResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PureStorageBlock.PureStorageAvsVmResource&#xA;override this.GetPureStorageAvsVmResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PureStorageBlock.PureStorageAvsVmResource" Usage="mockablePureStorageBlockArmClient.GetPureStorageAvsVmResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PureStorageBlock</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PureStorageBlock.PureStorageAvsVmResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.PureStorageBlock.PureStorageAvsVmResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.PureStorageBlock.PureStorageAvsVmResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.PureStorageBlock.PureStorageAvsVmResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.PureStorageBlock.PureStorageAvsVmResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPureStorageAvsVmVolumeResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PureStorageBlock.PureStorageAvsVmVolumeResource GetPureStorageAvsVmVolumeResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PureStorageBlock.PureStorageAvsVmVolumeResource GetPureStorageAvsVmVolumeResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockArmClient.GetPureStorageAvsVmVolumeResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPureStorageAvsVmVolumeResource (id As ResourceIdentifier) As PureStorageAvsVmVolumeResource" />
      <MemberSignature Language="F#" Value="abstract member GetPureStorageAvsVmVolumeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PureStorageBlock.PureStorageAvsVmVolumeResource&#xA;override this.GetPureStorageAvsVmVolumeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PureStorageBlock.PureStorageAvsVmVolumeResource" Usage="mockablePureStorageBlockArmClient.GetPureStorageAvsVmVolumeResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PureStorageBlock</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PureStorageBlock.PureStorageAvsVmVolumeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.PureStorageBlock.PureStorageAvsVmVolumeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.PureStorageBlock.PureStorageAvsVmVolumeResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.PureStorageBlock.PureStorageAvsVmVolumeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.PureStorageBlock.PureStorageAvsVmVolumeResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPureStoragePoolResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource GetPureStoragePoolResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource GetPureStoragePoolResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockArmClient.GetPureStoragePoolResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPureStoragePoolResource (id As ResourceIdentifier) As PureStoragePoolResource" />
      <MemberSignature Language="F#" Value="abstract member GetPureStoragePoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource&#xA;override this.GetPureStoragePoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource" Usage="mockablePureStorageBlockArmClient.GetPureStoragePoolResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PureStorageBlock</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPureStorageReservationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource GetPureStorageReservationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource GetPureStorageReservationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockArmClient.GetPureStorageReservationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPureStorageReservationResource (id As ResourceIdentifier) As PureStorageReservationResource" />
      <MemberSignature Language="F#" Value="abstract member GetPureStorageReservationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource&#xA;override this.GetPureStorageReservationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource" Usage="mockablePureStorageBlockArmClient.GetPureStorageReservationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PureStorageBlock</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
