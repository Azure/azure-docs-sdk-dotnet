<Type Name="MockablePureStorageBlockResourceGroupResource" FullName="Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockablePureStorageBlockResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockablePureStorageBlockResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockablePureStorageBlockResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockablePureStorageBlockResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.PureStorageBlock</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockablePureStorageBlockResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PureStorageBlock</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPureStoragePool">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource&gt; GetPureStoragePool (string storagePoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource&gt; GetPureStoragePool(string storagePoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockResourceGroupResource.GetPureStoragePool(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPureStoragePool (storagePoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PureStoragePoolResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPureStoragePool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource&gt;&#xA;override this.GetPureStoragePool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource&gt;" Usage="mockablePureStorageBlockResourceGroupResource.GetPureStoragePool (storagePoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PureStorageBlock</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storagePoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="storagePoolName"> Name of the storage pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a storage pool
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/PureStorage.Block/storagePools/{storagePoolName}</description></item><item><term>Operation Id</term><description>StoragePool_Get</description></item><item><term>Default Api Version</term><description>2024-11-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="storagePoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="storagePoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPureStoragePoolAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource&gt;&gt; GetPureStoragePoolAsync (string storagePoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource&gt;&gt; GetPureStoragePoolAsync(string storagePoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockResourceGroupResource.GetPureStoragePoolAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPureStoragePoolAsync (storagePoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PureStoragePoolResource))" />
      <MemberSignature Language="F#" Value="abstract member GetPureStoragePoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource&gt;&gt;&#xA;override this.GetPureStoragePoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource&gt;&gt;" Usage="mockablePureStorageBlockResourceGroupResource.GetPureStoragePoolAsync (storagePoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PureStorageBlock</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storagePoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="storagePoolName"> Name of the storage pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a storage pool
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/PureStorage.Block/storagePools/{storagePoolName}</description></item><item><term>Operation Id</term><description>StoragePool_Get</description></item><item><term>Default Api Version</term><description>2024-11-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="storagePoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="storagePoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPureStoragePools">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PureStorageBlock.PureStoragePoolCollection GetPureStoragePools ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PureStorageBlock.PureStoragePoolCollection GetPureStoragePools() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockResourceGroupResource.GetPureStoragePools" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPureStoragePools () As PureStoragePoolCollection" />
      <MemberSignature Language="F#" Value="abstract member GetPureStoragePools : unit -&gt; Azure.ResourceManager.PureStorageBlock.PureStoragePoolCollection&#xA;override this.GetPureStoragePools : unit -&gt; Azure.ResourceManager.PureStorageBlock.PureStoragePoolCollection" Usage="mockablePureStorageBlockResourceGroupResource.GetPureStoragePools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PureStorageBlock</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PureStorageBlock.PureStoragePoolCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of PureStoragePoolResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of PureStoragePoolResources and their operations over a PureStoragePoolResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPureStorageReservation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource&gt; GetPureStorageReservation (string reservationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource&gt; GetPureStorageReservation(string reservationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockResourceGroupResource.GetPureStorageReservation(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPureStorageReservation (reservationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PureStorageReservationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPureStorageReservation : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource&gt;&#xA;override this.GetPureStorageReservation : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource&gt;" Usage="mockablePureStorageBlockResourceGroupResource.GetPureStorageReservation (reservationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PureStorageBlock</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reservationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="reservationName"> Name of the reservation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a reservation
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/PureStorage.Block/reservations/{reservationName}</description></item><item><term>Operation Id</term><description>Reservation_Get</description></item><item><term>Default Api Version</term><description>2024-11-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reservationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="reservationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPureStorageReservationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource&gt;&gt; GetPureStorageReservationAsync (string reservationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource&gt;&gt; GetPureStorageReservationAsync(string reservationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockResourceGroupResource.GetPureStorageReservationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPureStorageReservationAsync (reservationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PureStorageReservationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetPureStorageReservationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource&gt;&gt;&#xA;override this.GetPureStorageReservationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource&gt;&gt;" Usage="mockablePureStorageBlockResourceGroupResource.GetPureStorageReservationAsync (reservationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PureStorageBlock</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reservationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="reservationName"> Name of the reservation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a reservation
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/PureStorage.Block/reservations/{reservationName}</description></item><item><term>Operation Id</term><description>Reservation_Get</description></item><item><term>Default Api Version</term><description>2024-11-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reservationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="reservationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPureStorageReservations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PureStorageBlock.PureStorageReservationCollection GetPureStorageReservations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PureStorageBlock.PureStorageReservationCollection GetPureStorageReservations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockResourceGroupResource.GetPureStorageReservations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPureStorageReservations () As PureStorageReservationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetPureStorageReservations : unit -&gt; Azure.ResourceManager.PureStorageBlock.PureStorageReservationCollection&#xA;override this.GetPureStorageReservations : unit -&gt; Azure.ResourceManager.PureStorageBlock.PureStorageReservationCollection" Usage="mockablePureStorageBlockResourceGroupResource.GetPureStorageReservations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PureStorageBlock</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PureStorageBlock.PureStorageReservationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of PureStorageReservationResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of PureStorageReservationResources and their operations over a PureStorageReservationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
