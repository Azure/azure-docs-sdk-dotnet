<Type Name="MockablePureStorageBlockSubscriptionResource" FullName="Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockablePureStorageBlockSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockablePureStorageBlockSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockablePureStorageBlockSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockablePureStorageBlockSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.PureStorageBlock</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockablePureStorageBlockSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PureStorageBlock</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPureStoragePools">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource&gt; GetPureStoragePools (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource&gt; GetPureStoragePools(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockSubscriptionResource.GetPureStoragePools(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPureStoragePools (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PureStoragePoolResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPureStoragePools : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource&gt;&#xA;override this.GetPureStoragePools : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource&gt;" Usage="mockablePureStorageBlockSubscriptionResource.GetPureStoragePools cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PureStorageBlock</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List storage pools by Azure subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/PureStorage.Block/storagePools</description></item><item><term>Operation Id</term><description>StoragePool_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-11-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPureStoragePoolsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource&gt; GetPureStoragePoolsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource&gt; GetPureStoragePoolsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockSubscriptionResource.GetPureStoragePoolsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPureStoragePoolsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PureStoragePoolResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPureStoragePoolsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource&gt;&#xA;override this.GetPureStoragePoolsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource&gt;" Usage="mockablePureStorageBlockSubscriptionResource.GetPureStoragePoolsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PureStorageBlock</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List storage pools by Azure subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/PureStorage.Block/storagePools</description></item><item><term>Operation Id</term><description>StoragePool_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-11-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.PureStorageBlock.PureStoragePoolResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPureStorageReservations">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource&gt; GetPureStorageReservations (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource&gt; GetPureStorageReservations(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockSubscriptionResource.GetPureStorageReservations(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPureStorageReservations (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PureStorageReservationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPureStorageReservations : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource&gt;&#xA;override this.GetPureStorageReservations : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource&gt;" Usage="mockablePureStorageBlockSubscriptionResource.GetPureStorageReservations cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PureStorageBlock</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List reservations by Azure subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/PureStorage.Block/reservations</description></item><item><term>Operation Id</term><description>Reservation_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-11-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPureStorageReservationsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource&gt; GetPureStorageReservationsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource&gt; GetPureStorageReservationsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PureStorageBlock.Mocking.MockablePureStorageBlockSubscriptionResource.GetPureStorageReservationsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPureStorageReservationsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PureStorageReservationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPureStorageReservationsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource&gt;&#xA;override this.GetPureStorageReservationsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource&gt;" Usage="mockablePureStorageBlockSubscriptionResource.GetPureStorageReservationsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PureStorageBlock</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List reservations by Azure subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/PureStorage.Block/reservations</description></item><item><term>Operation Id</term><description>Reservation_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-11-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.PureStorageBlock.PureStorageReservationResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
