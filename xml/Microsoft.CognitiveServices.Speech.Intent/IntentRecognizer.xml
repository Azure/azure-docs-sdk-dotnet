<Type Name="IntentRecognizer" FullName="Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer">
  <TypeSignature Language="C#" Value="public sealed class IntentRecognizer : Microsoft.CognitiveServices.Speech.Recognizer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit IntentRecognizer extends Microsoft.CognitiveServices.Speech.Recognizer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IntentRecognizer&#xA;Inherits Recognizer" />
  <TypeSignature Language="F#" Value="type IntentRecognizer = class&#xA;    inherit Recognizer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CognitiveServices.Speech.Recognizer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Perform intent recognition on the speech input. It returns both recognized text and recognized intent.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntentRecognizer (Microsoft.CognitiveServices.Speech.SpeechConfig speechConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.CognitiveServices.Speech.SpeechConfig speechConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.#ctor(Microsoft.CognitiveServices.Speech.SpeechConfig)" />
      <MemberSignature Language="F#" Value="new Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer : Microsoft.CognitiveServices.Speech.SpeechConfig -&gt; Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer" Usage="new Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer speechConfig" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="speechConfig" Type="Microsoft.CognitiveServices.Speech.SpeechConfig" />
      </Parameters>
      <Docs>
        <param name="speechConfig">Speech configuration</param>
        <summary>
            Creates a new instance of IntentRecognizer.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntentRecognizer (Microsoft.CognitiveServices.Speech.SpeechConfig speechConfig, Microsoft.CognitiveServices.Speech.Audio.AudioConfig audioConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.CognitiveServices.Speech.SpeechConfig speechConfig, class Microsoft.CognitiveServices.Speech.Audio.AudioConfig audioConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.#ctor(Microsoft.CognitiveServices.Speech.SpeechConfig,Microsoft.CognitiveServices.Speech.Audio.AudioConfig)" />
      <MemberSignature Language="F#" Value="new Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer : Microsoft.CognitiveServices.Speech.SpeechConfig * Microsoft.CognitiveServices.Speech.Audio.AudioConfig -&gt; Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer" Usage="new Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer (speechConfig, audioConfig)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="speechConfig" Type="Microsoft.CognitiveServices.Speech.SpeechConfig" />
        <Parameter Name="audioConfig" Type="Microsoft.CognitiveServices.Speech.Audio.AudioConfig" />
      </Parameters>
      <Docs>
        <param name="speechConfig">Speech configuration</param>
        <param name="audioConfig">Audio configuration</param>
        <summary>
            Creates a new instance of IntentRecognizer.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAllIntents">
      <MemberSignature Language="C#" Value="public void AddAllIntents (Microsoft.CognitiveServices.Speech.Intent.LanguageUnderstandingModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAllIntents(class Microsoft.CognitiveServices.Speech.Intent.LanguageUnderstandingModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.AddAllIntents(Microsoft.CognitiveServices.Speech.Intent.LanguageUnderstandingModel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAllIntents (model As LanguageUnderstandingModel)" />
      <MemberSignature Language="F#" Value="member this.AddAllIntents : Microsoft.CognitiveServices.Speech.Intent.LanguageUnderstandingModel -&gt; unit" Usage="intentRecognizer.AddAllIntents model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.CognitiveServices.Speech.Intent.LanguageUnderstandingModel" />
      </Parameters>
      <Docs>
        <param name="model">The language understanding model from Language Understanding service.</param>
        <summary>
            Adds all intents from the specified Language Understanding Model.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAllIntents">
      <MemberSignature Language="C#" Value="public void AddAllIntents (Microsoft.CognitiveServices.Speech.Intent.LanguageUnderstandingModel model, string intentId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAllIntents(class Microsoft.CognitiveServices.Speech.Intent.LanguageUnderstandingModel model, string intentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.AddAllIntents(Microsoft.CognitiveServices.Speech.Intent.LanguageUnderstandingModel,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAllIntents (model As LanguageUnderstandingModel, intentId As String)" />
      <MemberSignature Language="F#" Value="member this.AddAllIntents : Microsoft.CognitiveServices.Speech.Intent.LanguageUnderstandingModel * string -&gt; unit" Usage="intentRecognizer.AddAllIntents (model, intentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.CognitiveServices.Speech.Intent.LanguageUnderstandingModel" />
        <Parameter Name="intentId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="model">The language understanding model from Language Understanding service.</param>
        <param name="intentId">A custom string id to be returned in the IntentRecognitionResult's IntentId property.</param>
        <summary>
            Adds all intents from the specified Language Understanding Model.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIntent">
      <MemberSignature Language="C#" Value="public void AddIntent (string simplePhrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddIntent(string simplePhrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.AddIntent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddIntent (simplePhrase As String)" />
      <MemberSignature Language="F#" Value="member this.AddIntent : string -&gt; unit" Usage="intentRecognizer.AddIntent simplePhrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="simplePhrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="simplePhrase">The phrase corresponding to the intent.</param>
        <summary>
            Adds a simple phrase that may be spoken by the user, indicating a specific user intent.
            </summary>
        <remarks>Once recognized, the IntentRecognitionResult's IntentId property will match the simplePhrase specified here.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIntent">
      <MemberSignature Language="C#" Value="public void AddIntent (Microsoft.CognitiveServices.Speech.Intent.LanguageUnderstandingModel model, string intentName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddIntent(class Microsoft.CognitiveServices.Speech.Intent.LanguageUnderstandingModel model, string intentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.AddIntent(Microsoft.CognitiveServices.Speech.Intent.LanguageUnderstandingModel,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddIntent (model As LanguageUnderstandingModel, intentName As String)" />
      <MemberSignature Language="F#" Value="member this.AddIntent : Microsoft.CognitiveServices.Speech.Intent.LanguageUnderstandingModel * string -&gt; unit" Usage="intentRecognizer.AddIntent (model, intentName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.CognitiveServices.Speech.Intent.LanguageUnderstandingModel" />
        <Parameter Name="intentName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="model">The language understanding model containing the intent.</param>
        <param name="intentName">The name of the single intent to be included from the language understanding model.</param>
        <summary>
            Adds a single intent by name from the specified Language Understanding Model.
            </summary>
        <remarks>Once recognized, the IntentRecognitionResult's IntentId property will contain the intentName specified here.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIntent">
      <MemberSignature Language="C#" Value="public void AddIntent (Microsoft.CognitiveServices.Speech.Intent.LanguageUnderstandingModel model, string intentName, string intentId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddIntent(class Microsoft.CognitiveServices.Speech.Intent.LanguageUnderstandingModel model, string intentName, string intentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.AddIntent(Microsoft.CognitiveServices.Speech.Intent.LanguageUnderstandingModel,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddIntent (model As LanguageUnderstandingModel, intentName As String, intentId As String)" />
      <MemberSignature Language="F#" Value="member this.AddIntent : Microsoft.CognitiveServices.Speech.Intent.LanguageUnderstandingModel * string * string -&gt; unit" Usage="intentRecognizer.AddIntent (model, intentName, intentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.CognitiveServices.Speech.Intent.LanguageUnderstandingModel" />
        <Parameter Name="intentName" Type="System.String" />
        <Parameter Name="intentId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="model">The language understanding model containing the intent.</param>
        <param name="intentName">The name of the single intent to be included from the language understanding model.</param>
        <param name="intentId">A custom id string to be returned in the IntentRecognitionResult's IntentId property.</param>
        <summary>
            Adds a single intent by name from the specified Language Understanding Model.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIntent">
      <MemberSignature Language="C#" Value="public void AddIntent (string intentId, string phrase);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddIntent(string intentId, string phrase) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.AddIntent(System.String,System.String)" FrameworkAlternate="azure-dotnet;azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddIntent (intentId As String, phrase As String)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="member this.AddIntent : string * string -&gt; unit" Usage="intentRecognizer.AddIntent (simplePhrase, intentId)" FrameworkAlternate="azure-dotnet;azure-dotnet-preview" />
      <MemberSignature Language="C#" Value="public void AddIntent (string simplePhrase, string intentId);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddIntent(string simplePhrase, string intentId) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddIntent (simplePhrase As String, intentId As String)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intentId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet;azure-dotnet-preview" />
        <Parameter Name="simplePhrase" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="phrase" Type="System.String" Index="1" />
      </Parameters>
      <Docs>
        <param name="intentId">A custom id string to be returned in the IntentRecognitionResult's IntentId property.</param>
        <param name="simplePhrase">The phrase corresponding to the intent.</param>
        <param name="phrase">A string that specifies the phrase representing the intent.</param>
        <summary>
            Adds a simple phrase that may be spoken by the user, indicating a specific user intent.
            </summary>
        <remarks>Once recognized, the result's intent id will match the id supplied here.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationToken">
      <MemberSignature Language="C#" Value="public string AuthorizationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthorizationToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.AuthorizationToken" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthorizationToken As String" />
      <MemberSignature Language="F#" Value="member this.AuthorizationToken : string with get, set" Usage="Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.AuthorizationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets/sets authorization token used to communicate with the service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Canceled">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.Intent.IntentRecognitionCanceledEventArgs&gt; Canceled;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.Intent.IntentRecognitionCanceledEventArgs&gt; Canceled" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.Canceled" />
      <MemberSignature Language="VB.NET" Value="Public Event Canceled As EventHandler(Of IntentRecognitionCanceledEventArgs) " />
      <MemberSignature Language="F#" Value="member this.Canceled : EventHandler&lt;Microsoft.CognitiveServices.Speech.Intent.IntentRecognitionCanceledEventArgs&gt; " Usage="member this.Canceled : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.Intent.IntentRecognitionCanceledEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.Intent.IntentRecognitionCanceledEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The event <see cref="E:Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.Canceled" /> signals that the intent recognition was canceled.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="intentRecognizer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.PropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CognitiveServices.Speech.PropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As PropertyCollection" />
      <MemberSignature Language="F#" Value="member this.Properties : Microsoft.CognitiveServices.Speech.PropertyCollection" Usage="Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the collection or properties and their values defined for this <see cref="T:Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Recognized">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.Intent.IntentRecognitionEventArgs&gt; Recognized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.Intent.IntentRecognitionEventArgs&gt; Recognized" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.Recognized" />
      <MemberSignature Language="VB.NET" Value="Public Event Recognized As EventHandler(Of IntentRecognitionEventArgs) " />
      <MemberSignature Language="F#" Value="member this.Recognized : EventHandler&lt;Microsoft.CognitiveServices.Speech.Intent.IntentRecognitionEventArgs&gt; " Usage="member this.Recognized : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.Intent.IntentRecognitionEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.Intent.IntentRecognitionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The event <see cref="E:Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.Recognized" /> signals that a final recognition result is received.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecognizeOnceAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.CognitiveServices.Speech.Intent.IntentRecognitionResult&gt; RecognizeOnceAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.CognitiveServices.Speech.Intent.IntentRecognitionResult&gt; RecognizeOnceAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.RecognizeOnceAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function RecognizeOnceAsync () As Task(Of IntentRecognitionResult)" />
      <MemberSignature Language="F#" Value="member this.RecognizeOnceAsync : unit -&gt; System.Threading.Tasks.Task&lt;Microsoft.CognitiveServices.Speech.Intent.IntentRecognitionResult&gt;" Usage="intentRecognizer.RecognizeOnceAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.CognitiveServices.Speech.Intent.IntentRecognitionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Starts intent recognition, and stops after the first utterance is recognized. The task returns the recognition text and intent as result.
            Note: RecognizeOnceAsync() returns when the first utterance has been recognized, so it is suitable only for single shot recognition like command or query. For long-running recognition, use StartContinuousRecognitionAsync() instead.
            </summary>
        <returns>A task representing the recognition operation. The task returns a value of <see cref="T:Microsoft.CognitiveServices.Speech.Intent.IntentRecognitionResult" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Recognizing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.Intent.IntentRecognitionEventArgs&gt; Recognizing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.Intent.IntentRecognitionEventArgs&gt; Recognizing" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.Recognizing" />
      <MemberSignature Language="VB.NET" Value="Public Event Recognizing As EventHandler(Of IntentRecognitionEventArgs) " />
      <MemberSignature Language="F#" Value="member this.Recognizing : EventHandler&lt;Microsoft.CognitiveServices.Speech.Intent.IntentRecognitionEventArgs&gt; " Usage="member this.Recognizing : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.Intent.IntentRecognitionEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.Intent.IntentRecognitionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The event <see cref="E:Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.Recognizing" /> signals that an intermediate recognition result is received.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeechRecognitionLanguage">
      <MemberSignature Language="C#" Value="public string SpeechRecognitionLanguage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SpeechRecognitionLanguage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.SpeechRecognitionLanguage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpeechRecognitionLanguage As String" />
      <MemberSignature Language="F#" Value="member this.SpeechRecognitionLanguage : string" Usage="Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.SpeechRecognitionLanguage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the language name that is used for recognition.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartContinuousRecognitionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartContinuousRecognitionAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartContinuousRecognitionAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.StartContinuousRecognitionAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function StartContinuousRecognitionAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.StartContinuousRecognitionAsync : unit -&gt; System.Threading.Tasks.Task" Usage="intentRecognizer.StartContinuousRecognitionAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Starts speech recognition on a continuous audio stream, until StopContinuousRecognitionAsync() is called.
            User must subscribe to events to receive recognition results.
            </summary>
        <returns>A task representing the asynchronous operation that starts the recognition.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartKeywordRecognitionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartKeywordRecognitionAsync (Microsoft.CognitiveServices.Speech.KeywordRecognitionModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartKeywordRecognitionAsync(class Microsoft.CognitiveServices.Speech.KeywordRecognitionModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.StartKeywordRecognitionAsync(Microsoft.CognitiveServices.Speech.KeywordRecognitionModel)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartKeywordRecognitionAsync (model As KeywordRecognitionModel) As Task" />
      <MemberSignature Language="F#" Value="member this.StartKeywordRecognitionAsync : Microsoft.CognitiveServices.Speech.KeywordRecognitionModel -&gt; System.Threading.Tasks.Task" Usage="intentRecognizer.StartKeywordRecognitionAsync model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.CognitiveServices.Speech.KeywordRecognitionModel" />
      </Parameters>
      <Docs>
        <param name="model">The keyword recognition model that specifies the keyword to be recognized.</param>
        <summary>
            Starts speech recognition on a continuous audio stream with keyword spotting, until StopKeywordRecognitionAsync() is called.
            User must subscribe to events to receive recognition results.
            Note: Key word spotting functionality is only available on the Cognitive Services Device SDK. This functionality is currently not included in the SDK itself.
            </summary>
        <returns>A task representing the asynchronous operation that starts the recognition.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopContinuousRecognitionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StopContinuousRecognitionAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StopContinuousRecognitionAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.StopContinuousRecognitionAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function StopContinuousRecognitionAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.StopContinuousRecognitionAsync : unit -&gt; System.Threading.Tasks.Task" Usage="intentRecognizer.StopContinuousRecognitionAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Stops continuous intent recognition.
            </summary>
        <returns>A task representing the asynchronous operation that stops the recognition.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopKeywordRecognitionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StopKeywordRecognitionAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StopKeywordRecognitionAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer.StopKeywordRecognitionAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function StopKeywordRecognitionAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.StopKeywordRecognitionAsync : unit -&gt; System.Threading.Tasks.Task" Usage="intentRecognizer.StopKeywordRecognitionAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Stops continuous speech recognition with keyword spotting.
            Note: Key word spotting functionality is only available on the Cognitive Services Device SDK. This functionality is currently not included in the SDK itself.
            </summary>
        <returns>A task representing the asynchronous operation that stops the recognition.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>