<Type Name="BatchTask" FullName="Azure.Compute.Batch.BatchTask">
  <TypeSignature Language="C#" Value="public class BatchTask : System.ClientModel.Primitives.IJsonModel&lt;Azure.Compute.Batch.BatchTask&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.Compute.Batch.BatchTask&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BatchTask extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.Compute.Batch.BatchTask&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.Compute.Batch.BatchTask&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.Compute.Batch.BatchTask" />
  <TypeSignature Language="VB.NET" Value="Public Class BatchTask&#xA;Implements IJsonModel(Of BatchTask), IPersistableModel(Of BatchTask)" />
  <TypeSignature Language="F#" Value="type BatchTask = class&#xA;    interface IJsonModel&lt;BatchTask&gt;&#xA;    interface IPersistableModel&lt;BatchTask&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.Compute.Batch</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.Compute.Batch.BatchTask&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.Compute.Batch.BatchTask&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Batch will retry Tasks when a recovery operation is triggered on a Node.
            Examples of recovery operations include (but are not limited to) when an
            unhealthy Node is rebooted or a Compute Node disappeared due to host failure.
            Retries due to recovery operations are independent of and are not counted
            against the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal
            retry due to a recovery operation may occur. Because of this, all Tasks should
            be idempotent. This means Tasks need to tolerate being interrupted and
            restarted without causing any corruption or duplicate data. The best practice
            for long running Tasks is to use some form of checkpointing.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BatchTask ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Compute.Batch.BatchTask.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of <see cref="T:Azure.Compute.Batch.BatchTask" />. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AffinityInfo">
      <MemberSignature Language="C#" Value="public Azure.Compute.Batch.AffinityInfo AffinityInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Compute.Batch.AffinityInfo AffinityInfo" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.AffinityInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffinityInfo As AffinityInfo" />
      <MemberSignature Language="F#" Value="member this.AffinityInfo : Azure.Compute.Batch.AffinityInfo" Usage="Azure.Compute.Batch.BatchTask.AffinityInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Compute.Batch.AffinityInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A locality hint that can be used by the Batch service to select a Compute Node on which to start the new Task. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationPackageReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Azure.Compute.Batch.BatchApplicationPackageReference&gt; ApplicationPackageReferences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Compute.Batch.BatchApplicationPackageReference&gt; ApplicationPackageReferences" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.ApplicationPackageReferences" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationPackageReferences As IReadOnlyList(Of BatchApplicationPackageReference)" />
      <MemberSignature Language="F#" Value="member this.ApplicationPackageReferences : System.Collections.Generic.IReadOnlyList&lt;Azure.Compute.Batch.BatchApplicationPackageReference&gt;" Usage="Azure.Compute.Batch.BatchTask.ApplicationPackageReferences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Azure.Compute.Batch.BatchApplicationPackageReference&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A list of Packages that the Batch service will deploy to the Compute Node before running the command line. Application packages are downloaded and deployed to a shared directory, not the Task working directory. Therefore, if a referenced package is already on the Node, and is up to date, then it is not re-downloaded; the existing copy on the Compute Node is used. If a referenced Package cannot be installed, for example because the package has been deleted or because download failed, the Task fails. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationTokenSettings">
      <MemberSignature Language="C#" Value="public Azure.Compute.Batch.AuthenticationTokenSettings AuthenticationTokenSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Compute.Batch.AuthenticationTokenSettings AuthenticationTokenSettings" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.AuthenticationTokenSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationTokenSettings As AuthenticationTokenSettings" />
      <MemberSignature Language="F#" Value="member this.AuthenticationTokenSettings : Azure.Compute.Batch.AuthenticationTokenSettings" Usage="Azure.Compute.Batch.BatchTask.AuthenticationTokenSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Compute.Batch.AuthenticationTokenSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The settings for an authentication token that the Task can use to perform Batch service operations. If this property is set, the Batch service provides the Task with an authentication token which can be used to authenticate Batch service operations without requiring an Account access key. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment variable. The operations that the Task can carry out using the token depend on the settings. For example, a Task can request Job permissions in order to add other Tasks to the Job, or check the status of the Job or of other Tasks under the Job. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandLine">
      <MemberSignature Language="C#" Value="public string CommandLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandLine" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.CommandLine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandLine As String" />
      <MemberSignature Language="F#" Value="member this.CommandLine : string" Usage="Azure.Compute.Batch.BatchTask.CommandLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The command line of the Task. For multi-instance Tasks, the command line is executed as the primary Task, after the primary Task and all subtasks have finished executing the coordination command line. The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Constraints">
      <MemberSignature Language="C#" Value="public Azure.Compute.Batch.BatchTaskConstraints Constraints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Compute.Batch.BatchTaskConstraints Constraints" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.Constraints" />
      <MemberSignature Language="VB.NET" Value="Public Property Constraints As BatchTaskConstraints" />
      <MemberSignature Language="F#" Value="member this.Constraints : Azure.Compute.Batch.BatchTaskConstraints with get, set" Usage="Azure.Compute.Batch.BatchTask.Constraints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Compute.Batch.BatchTaskConstraints</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The execution constraints that apply to this Task. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerSettings">
      <MemberSignature Language="C#" Value="public Azure.Compute.Batch.BatchTaskContainerSettings ContainerSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Compute.Batch.BatchTaskContainerSettings ContainerSettings" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.ContainerSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainerSettings As BatchTaskContainerSettings" />
      <MemberSignature Language="F#" Value="member this.ContainerSettings : Azure.Compute.Batch.BatchTaskContainerSettings" Usage="Azure.Compute.Batch.BatchTask.ContainerSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Compute.Batch.BatchTaskContainerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The settings for the container under which the Task runs. If the Pool that will run this Task has containerConfiguration set, this must be set as well. If the Pool that will run this Task doesn't have containerConfiguration set, this must not be set. When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreationTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset? CreationTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; CreationTime" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.CreationTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CreationTime As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="F#" Value="member this.CreationTime : Nullable&lt;DateTimeOffset&gt;" Usage="Azure.Compute.Batch.BatchTask.CreationTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The creation time of the Task. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependsOn">
      <MemberSignature Language="C#" Value="public Azure.Compute.Batch.BatchTaskDependencies DependsOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Compute.Batch.BatchTaskDependencies DependsOn" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.DependsOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependsOn As BatchTaskDependencies" />
      <MemberSignature Language="F#" Value="member this.DependsOn : Azure.Compute.Batch.BatchTaskDependencies" Usage="Azure.Compute.Batch.BatchTask.DependsOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Compute.Batch.BatchTaskDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The Tasks that this Task depends on. This Task will not be scheduled until all Tasks that it depends on have completed successfully. If any of those Tasks fail and exhaust their retry counts, this Task will never be scheduled. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="Azure.Compute.Batch.BatchTask.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A display name for the Task. The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvironmentSettings">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Azure.Compute.Batch.EnvironmentSetting&gt; EnvironmentSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Compute.Batch.EnvironmentSetting&gt; EnvironmentSettings" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.EnvironmentSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvironmentSettings As IReadOnlyList(Of EnvironmentSetting)" />
      <MemberSignature Language="F#" Value="member this.EnvironmentSettings : System.Collections.Generic.IReadOnlyList&lt;Azure.Compute.Batch.EnvironmentSetting&gt;" Usage="Azure.Compute.Batch.BatchTask.EnvironmentSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Azure.Compute.Batch.EnvironmentSetting&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A list of environment variable settings for the Task. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ETag">
      <MemberSignature Language="C#" Value="public string ETag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ETag" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.ETag" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ETag As String" />
      <MemberSignature Language="F#" Value="member this.ETag : string" Usage="Azure.Compute.Batch.BatchTask.ETag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The ETag of the Task. This is an opaque string. You can use it to detect whether the Task has changed between requests. In particular, you can be pass the ETag when updating a Task to specify that your changes should take effect only if nobody else has modified the Task in the meantime. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionInfo">
      <MemberSignature Language="C#" Value="public Azure.Compute.Batch.BatchTaskExecutionInfo ExecutionInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Compute.Batch.BatchTaskExecutionInfo ExecutionInfo" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.ExecutionInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExecutionInfo As BatchTaskExecutionInfo" />
      <MemberSignature Language="F#" Value="member this.ExecutionInfo : Azure.Compute.Batch.BatchTaskExecutionInfo" Usage="Azure.Compute.Batch.BatchTask.ExecutionInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Compute.Batch.BatchTaskExecutionInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Information about the execution of the Task. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitConditions">
      <MemberSignature Language="C#" Value="public Azure.Compute.Batch.ExitConditions ExitConditions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Compute.Batch.ExitConditions ExitConditions" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.ExitConditions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExitConditions As ExitConditions" />
      <MemberSignature Language="F#" Value="member this.ExitConditions : Azure.Compute.Batch.ExitConditions" Usage="Azure.Compute.Batch.BatchTask.ExitConditions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Compute.Batch.ExitConditions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> How the Batch service should respond when the Task completes. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="Azure.Compute.Batch.BatchTask.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A string that uniquely identifies the Task within the Job. The ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastModified">
      <MemberSignature Language="C#" Value="public DateTimeOffset? LastModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; LastModified" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.LastModified" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastModified As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="F#" Value="member this.LastModified : Nullable&lt;DateTimeOffset&gt;" Usage="Azure.Compute.Batch.BatchTask.LastModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The last modified time of the Task. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiInstanceSettings">
      <MemberSignature Language="C#" Value="public Azure.Compute.Batch.MultiInstanceSettings MultiInstanceSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Compute.Batch.MultiInstanceSettings MultiInstanceSettings" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.MultiInstanceSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MultiInstanceSettings As MultiInstanceSettings" />
      <MemberSignature Language="F#" Value="member this.MultiInstanceSettings : Azure.Compute.Batch.MultiInstanceSettings" Usage="Azure.Compute.Batch.BatchTask.MultiInstanceSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Compute.Batch.MultiInstanceSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> An object that indicates that the Task is a multi-instance Task, and contains information about how to run the multi-instance Task. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeInfo">
      <MemberSignature Language="C#" Value="public Azure.Compute.Batch.BatchNodeInfo NodeInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Compute.Batch.BatchNodeInfo NodeInfo" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.NodeInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NodeInfo As BatchNodeInfo" />
      <MemberSignature Language="F#" Value="member this.NodeInfo : Azure.Compute.Batch.BatchNodeInfo" Usage="Azure.Compute.Batch.BatchTask.NodeInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Compute.Batch.BatchNodeInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Information about the Compute Node on which the Task ran. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Azure.Compute.Batch.OutputFile&gt; OutputFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Compute.Batch.OutputFile&gt; OutputFiles" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.OutputFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputFiles As IReadOnlyList(Of OutputFile)" />
      <MemberSignature Language="F#" Value="member this.OutputFiles : System.Collections.Generic.IReadOnlyList&lt;Azure.Compute.Batch.OutputFile&gt;" Usage="Azure.Compute.Batch.BatchTask.OutputFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Azure.Compute.Batch.OutputFile&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A list of files that the Batch service will upload from the Compute Node after running the command line. For multi-instance Tasks, the files will only be uploaded from the Compute Node on which the primary Task is executed. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousState">
      <MemberSignature Language="C#" Value="public Azure.Compute.Batch.BatchTaskState? PreviousState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.Compute.Batch.BatchTaskState&gt; PreviousState" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.PreviousState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousState As Nullable(Of BatchTaskState)" />
      <MemberSignature Language="F#" Value="member this.PreviousState : Nullable&lt;Azure.Compute.Batch.BatchTaskState&gt;" Usage="Azure.Compute.Batch.BatchTask.PreviousState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.Compute.Batch.BatchTaskState&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The previous state of the Task. This property is not set if the Task is in its initial Active state. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousStateTransitionTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset? PreviousStateTransitionTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; PreviousStateTransitionTime" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.PreviousStateTransitionTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousStateTransitionTime As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="F#" Value="member this.PreviousStateTransitionTime : Nullable&lt;DateTimeOffset&gt;" Usage="Azure.Compute.Batch.BatchTask.PreviousStateTransitionTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The time at which the Task entered its previous state. This property is not set if the Task is in its initial Active state. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredSlots">
      <MemberSignature Language="C#" Value="public int? RequiredSlots { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; RequiredSlots" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.RequiredSlots" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequiredSlots As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.RequiredSlots : Nullable&lt;int&gt;" Usage="Azure.Compute.Batch.BatchTask.RequiredSlots" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The number of scheduling slots that the Task requires to run. The default is 1. A Task can only be scheduled to run on a compute node if the node has enough free scheduling slots available. For multi-instance Tasks, this must be 1. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Azure.Compute.Batch.ResourceFile&gt; ResourceFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Compute.Batch.ResourceFile&gt; ResourceFiles" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.ResourceFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResourceFiles As IReadOnlyList(Of ResourceFile)" />
      <MemberSignature Language="F#" Value="member this.ResourceFiles : System.Collections.Generic.IReadOnlyList&lt;Azure.Compute.Batch.ResourceFile&gt;" Usage="Azure.Compute.Batch.BatchTask.ResourceFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Azure.Compute.Batch.ResourceFile&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A list of files that the Batch service will download to the Compute Node before running the command line. For multi-instance Tasks, the resource files will only be downloaded to the Compute Node on which the primary Task is executed. There is a maximum size for the list of resource files.  When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public Azure.Compute.Batch.BatchTaskState? State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.Compute.Batch.BatchTaskState&gt; State" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Nullable(Of BatchTaskState)" />
      <MemberSignature Language="F#" Value="member this.State : Nullable&lt;Azure.Compute.Batch.BatchTaskState&gt;" Usage="Azure.Compute.Batch.BatchTask.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.Compute.Batch.BatchTaskState&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The current state of the Task. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateTransitionTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset? StateTransitionTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; StateTransitionTime" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.StateTransitionTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StateTransitionTime As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="F#" Value="member this.StateTransitionTime : Nullable&lt;DateTimeOffset&gt;" Usage="Azure.Compute.Batch.BatchTask.StateTransitionTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The time at which the Task entered its current state. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stats">
      <MemberSignature Language="C#" Value="public Azure.Compute.Batch.BatchTaskStatistics Stats { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Compute.Batch.BatchTaskStatistics Stats" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.Stats" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Stats As BatchTaskStatistics" />
      <MemberSignature Language="F#" Value="member this.Stats : Azure.Compute.Batch.BatchTaskStatistics" Usage="Azure.Compute.Batch.BatchTask.Stats" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Compute.Batch.BatchTaskStatistics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Resource usage statistics for the Task. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.Compute.Batch.BatchTask&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.Compute.Batch.BatchTask IJsonModel&lt;BatchTask&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.Compute.Batch.BatchTask System.ClientModel.Primitives.IJsonModel&lt;Azure.Compute.Batch.BatchTask&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Compute.Batch.BatchTask.System#ClientModel#Primitives#IJsonModel&lt;Azure#Compute#Batch#BatchTask&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As BatchTask Implements IJsonModel(Of BatchTask).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.Compute.Batch.BatchTask&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Compute.Batch.BatchTask&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.Compute.Batch.BatchTask&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Compute.Batch.BatchTask" Usage="batchTask.System.ClientModel.Primitives.IJsonModel&lt;Azure.Compute.Batch.BatchTask&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Compute.Batch.BatchTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.Compute.Batch.BatchTask&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;BatchTask&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.Compute.Batch.BatchTask&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Compute.Batch.BatchTask.System#ClientModel#Primitives#IJsonModel&lt;Azure#Compute#Batch#BatchTask&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of BatchTask).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.Compute.Batch.BatchTask&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.Compute.Batch.BatchTask&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="batchTask.System.ClientModel.Primitives.IJsonModel&lt;Azure.Compute.Batch.BatchTask&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.Compute.Batch.BatchTask&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.Compute.Batch.BatchTask IPersistableModel&lt;BatchTask&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.Compute.Batch.BatchTask System.ClientModel.Primitives.IPersistableModel&lt;Azure.Compute.Batch.BatchTask&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Compute.Batch.BatchTask.System#ClientModel#Primitives#IPersistableModel&lt;Azure#Compute#Batch#BatchTask&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As BatchTask Implements IPersistableModel(Of BatchTask).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.Compute.Batch.BatchTask&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Compute.Batch.BatchTask&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Compute.Batch.BatchTask&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Compute.Batch.BatchTask" Usage="batchTask.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Compute.Batch.BatchTask&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Compute.Batch.BatchTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.Compute.Batch.BatchTask&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;BatchTask&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.Compute.Batch.BatchTask&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Compute.Batch.BatchTask.System#ClientModel#Primitives#IPersistableModel&lt;Azure#Compute#Batch#BatchTask&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of BatchTask).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.Compute.Batch.BatchTask&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Compute.Batch.BatchTask&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="batchTask.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Compute.Batch.BatchTask&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.Compute.Batch.BatchTask&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;BatchTask&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.Compute.Batch.BatchTask&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Compute.Batch.BatchTask.System#ClientModel#Primitives#IPersistableModel&lt;Azure#Compute#Batch#BatchTask&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of BatchTask).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.Compute.Batch.BatchTask&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Compute.Batch.BatchTask&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="batchTask.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Compute.Batch.BatchTask&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public string Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As String" />
      <MemberSignature Language="F#" Value="member this.Url : string" Usage="Azure.Compute.Batch.BatchTask.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The URL of the Task. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserIdentity">
      <MemberSignature Language="C#" Value="public Azure.Compute.Batch.UserIdentity UserIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Compute.Batch.UserIdentity UserIdentity" />
      <MemberSignature Language="DocId" Value="P:Azure.Compute.Batch.BatchTask.UserIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserIdentity As UserIdentity" />
      <MemberSignature Language="F#" Value="member this.UserIdentity : Azure.Compute.Batch.UserIdentity" Usage="Azure.Compute.Batch.BatchTask.UserIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Compute.Batch.UserIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The user identity under which the Task runs. If omitted, the Task runs as a non-administrative user unique to the Task. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
