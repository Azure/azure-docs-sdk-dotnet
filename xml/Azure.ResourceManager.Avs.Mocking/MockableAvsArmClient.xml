<Type Name="MockableAvsArmClient" FullName="Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient">
  <TypeSignature Language="C#" Value="public class MockableAvsArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableAvsArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableAvsArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableAvsArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableAvsArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvsCloudLinkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.AvsCloudLinkResource GetAvsCloudLinkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.AvsCloudLinkResource GetAvsCloudLinkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient.GetAvsCloudLinkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvsCloudLinkResource (id As ResourceIdentifier) As AvsCloudLinkResource" />
      <MemberSignature Language="F#" Value="abstract member GetAvsCloudLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.AvsCloudLinkResource&#xA;override this.GetAvsCloudLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.AvsCloudLinkResource" Usage="mockableAvsArmClient.GetAvsCloudLinkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.AvsCloudLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Avs.AvsCloudLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Avs.AvsCloudLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Avs.AvsCloudLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Avs.AvsCloudLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvsPrivateCloudAddonResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.AvsPrivateCloudAddonResource GetAvsPrivateCloudAddonResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.AvsPrivateCloudAddonResource GetAvsPrivateCloudAddonResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient.GetAvsPrivateCloudAddonResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvsPrivateCloudAddonResource (id As ResourceIdentifier) As AvsPrivateCloudAddonResource" />
      <MemberSignature Language="F#" Value="abstract member GetAvsPrivateCloudAddonResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.AvsPrivateCloudAddonResource&#xA;override this.GetAvsPrivateCloudAddonResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.AvsPrivateCloudAddonResource" Usage="mockableAvsArmClient.GetAvsPrivateCloudAddonResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.AvsPrivateCloudAddonResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Avs.AvsPrivateCloudAddonResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Avs.AvsPrivateCloudAddonResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Avs.AvsPrivateCloudAddonResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Avs.AvsPrivateCloudAddonResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvsPrivateCloudClusterResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.AvsPrivateCloudClusterResource GetAvsPrivateCloudClusterResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.AvsPrivateCloudClusterResource GetAvsPrivateCloudClusterResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient.GetAvsPrivateCloudClusterResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvsPrivateCloudClusterResource (id As ResourceIdentifier) As AvsPrivateCloudClusterResource" />
      <MemberSignature Language="F#" Value="abstract member GetAvsPrivateCloudClusterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.AvsPrivateCloudClusterResource&#xA;override this.GetAvsPrivateCloudClusterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.AvsPrivateCloudClusterResource" Usage="mockableAvsArmClient.GetAvsPrivateCloudClusterResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.AvsPrivateCloudClusterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Avs.AvsPrivateCloudClusterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Avs.AvsPrivateCloudClusterResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Avs.AvsPrivateCloudClusterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Avs.AvsPrivateCloudClusterResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvsPrivateCloudClusterVirtualMachineResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.AvsPrivateCloudClusterVirtualMachineResource GetAvsPrivateCloudClusterVirtualMachineResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.AvsPrivateCloudClusterVirtualMachineResource GetAvsPrivateCloudClusterVirtualMachineResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient.GetAvsPrivateCloudClusterVirtualMachineResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvsPrivateCloudClusterVirtualMachineResource (id As ResourceIdentifier) As AvsPrivateCloudClusterVirtualMachineResource" />
      <MemberSignature Language="F#" Value="abstract member GetAvsPrivateCloudClusterVirtualMachineResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.AvsPrivateCloudClusterVirtualMachineResource&#xA;override this.GetAvsPrivateCloudClusterVirtualMachineResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.AvsPrivateCloudClusterVirtualMachineResource" Usage="mockableAvsArmClient.GetAvsPrivateCloudClusterVirtualMachineResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.AvsPrivateCloudClusterVirtualMachineResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Avs.AvsPrivateCloudClusterVirtualMachineResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Avs.AvsPrivateCloudClusterVirtualMachineResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Avs.AvsPrivateCloudClusterVirtualMachineResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Avs.AvsPrivateCloudClusterVirtualMachineResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvsPrivateCloudDatastoreResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.AvsPrivateCloudDatastoreResource GetAvsPrivateCloudDatastoreResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.AvsPrivateCloudDatastoreResource GetAvsPrivateCloudDatastoreResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient.GetAvsPrivateCloudDatastoreResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvsPrivateCloudDatastoreResource (id As ResourceIdentifier) As AvsPrivateCloudDatastoreResource" />
      <MemberSignature Language="F#" Value="abstract member GetAvsPrivateCloudDatastoreResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.AvsPrivateCloudDatastoreResource&#xA;override this.GetAvsPrivateCloudDatastoreResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.AvsPrivateCloudDatastoreResource" Usage="mockableAvsArmClient.GetAvsPrivateCloudDatastoreResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.AvsPrivateCloudDatastoreResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Avs.AvsPrivateCloudDatastoreResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Avs.AvsPrivateCloudDatastoreResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Avs.AvsPrivateCloudDatastoreResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Avs.AvsPrivateCloudDatastoreResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvsPrivateCloudResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.AvsPrivateCloudResource GetAvsPrivateCloudResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.AvsPrivateCloudResource GetAvsPrivateCloudResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient.GetAvsPrivateCloudResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvsPrivateCloudResource (id As ResourceIdentifier) As AvsPrivateCloudResource" />
      <MemberSignature Language="F#" Value="abstract member GetAvsPrivateCloudResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.AvsPrivateCloudResource&#xA;override this.GetAvsPrivateCloudResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.AvsPrivateCloudResource" Usage="mockableAvsArmClient.GetAvsPrivateCloudResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.AvsPrivateCloudResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Avs.AvsPrivateCloudResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Avs.AvsPrivateCloudResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Avs.AvsPrivateCloudResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Avs.AvsPrivateCloudResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteAuthorizationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.ExpressRouteAuthorizationResource GetExpressRouteAuthorizationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.ExpressRouteAuthorizationResource GetExpressRouteAuthorizationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient.GetExpressRouteAuthorizationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteAuthorizationResource (id As ResourceIdentifier) As ExpressRouteAuthorizationResource" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteAuthorizationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.ExpressRouteAuthorizationResource&#xA;override this.GetExpressRouteAuthorizationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.ExpressRouteAuthorizationResource" Usage="mockableAvsArmClient.GetExpressRouteAuthorizationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.ExpressRouteAuthorizationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Avs.ExpressRouteAuthorizationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Avs.ExpressRouteAuthorizationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Avs.ExpressRouteAuthorizationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Avs.ExpressRouteAuthorizationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalReachConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.GlobalReachConnectionResource GetGlobalReachConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.GlobalReachConnectionResource GetGlobalReachConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient.GetGlobalReachConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalReachConnectionResource (id As ResourceIdentifier) As GlobalReachConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalReachConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.GlobalReachConnectionResource&#xA;override this.GetGlobalReachConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.GlobalReachConnectionResource" Usage="mockableAvsArmClient.GetGlobalReachConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.GlobalReachConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Avs.GlobalReachConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Avs.GlobalReachConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Avs.GlobalReachConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Avs.GlobalReachConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHcxEnterpriseSiteResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.HcxEnterpriseSiteResource GetHcxEnterpriseSiteResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.HcxEnterpriseSiteResource GetHcxEnterpriseSiteResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient.GetHcxEnterpriseSiteResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHcxEnterpriseSiteResource (id As ResourceIdentifier) As HcxEnterpriseSiteResource" />
      <MemberSignature Language="F#" Value="abstract member GetHcxEnterpriseSiteResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.HcxEnterpriseSiteResource&#xA;override this.GetHcxEnterpriseSiteResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.HcxEnterpriseSiteResource" Usage="mockableAvsArmClient.GetHcxEnterpriseSiteResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.HcxEnterpriseSiteResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Avs.HcxEnterpriseSiteResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Avs.HcxEnterpriseSiteResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Avs.HcxEnterpriseSiteResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Avs.HcxEnterpriseSiteResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPlacementPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.PlacementPolicyResource GetPlacementPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.PlacementPolicyResource GetPlacementPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient.GetPlacementPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPlacementPolicyResource (id As ResourceIdentifier) As PlacementPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetPlacementPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.PlacementPolicyResource&#xA;override this.GetPlacementPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.PlacementPolicyResource" Usage="mockableAvsArmClient.GetPlacementPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.PlacementPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Avs.PlacementPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Avs.PlacementPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Avs.PlacementPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Avs.PlacementPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScriptCmdletResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.ScriptCmdletResource GetScriptCmdletResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.ScriptCmdletResource GetScriptCmdletResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient.GetScriptCmdletResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScriptCmdletResource (id As ResourceIdentifier) As ScriptCmdletResource" />
      <MemberSignature Language="F#" Value="abstract member GetScriptCmdletResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.ScriptCmdletResource&#xA;override this.GetScriptCmdletResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.ScriptCmdletResource" Usage="mockableAvsArmClient.GetScriptCmdletResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.ScriptCmdletResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Avs.ScriptCmdletResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Avs.ScriptCmdletResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Avs.ScriptCmdletResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Avs.ScriptCmdletResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScriptExecutionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.ScriptExecutionResource GetScriptExecutionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.ScriptExecutionResource GetScriptExecutionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient.GetScriptExecutionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScriptExecutionResource (id As ResourceIdentifier) As ScriptExecutionResource" />
      <MemberSignature Language="F#" Value="abstract member GetScriptExecutionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.ScriptExecutionResource&#xA;override this.GetScriptExecutionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.ScriptExecutionResource" Usage="mockableAvsArmClient.GetScriptExecutionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.ScriptExecutionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Avs.ScriptExecutionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Avs.ScriptExecutionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Avs.ScriptExecutionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Avs.ScriptExecutionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScriptPackageResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.ScriptPackageResource GetScriptPackageResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.ScriptPackageResource GetScriptPackageResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient.GetScriptPackageResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScriptPackageResource (id As ResourceIdentifier) As ScriptPackageResource" />
      <MemberSignature Language="F#" Value="abstract member GetScriptPackageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.ScriptPackageResource&#xA;override this.GetScriptPackageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.ScriptPackageResource" Usage="mockableAvsArmClient.GetScriptPackageResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.ScriptPackageResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Avs.ScriptPackageResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Avs.ScriptPackageResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Avs.ScriptPackageResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Avs.ScriptPackageResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkDhcpResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.WorkloadNetworkDhcpResource GetWorkloadNetworkDhcpResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.WorkloadNetworkDhcpResource GetWorkloadNetworkDhcpResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient.GetWorkloadNetworkDhcpResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkDhcpResource (id As ResourceIdentifier) As WorkloadNetworkDhcpResource" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkDhcpResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.WorkloadNetworkDhcpResource&#xA;override this.GetWorkloadNetworkDhcpResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.WorkloadNetworkDhcpResource" Usage="mockableAvsArmClient.GetWorkloadNetworkDhcpResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.WorkloadNetworkDhcpResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkDhcpResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Avs.WorkloadNetworkDhcpResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkDhcpResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkDhcpResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkDnsServiceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.WorkloadNetworkDnsServiceResource GetWorkloadNetworkDnsServiceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.WorkloadNetworkDnsServiceResource GetWorkloadNetworkDnsServiceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient.GetWorkloadNetworkDnsServiceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkDnsServiceResource (id As ResourceIdentifier) As WorkloadNetworkDnsServiceResource" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkDnsServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.WorkloadNetworkDnsServiceResource&#xA;override this.GetWorkloadNetworkDnsServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.WorkloadNetworkDnsServiceResource" Usage="mockableAvsArmClient.GetWorkloadNetworkDnsServiceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.WorkloadNetworkDnsServiceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkDnsServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Avs.WorkloadNetworkDnsServiceResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkDnsServiceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkDnsServiceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkDnsZoneResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.WorkloadNetworkDnsZoneResource GetWorkloadNetworkDnsZoneResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.WorkloadNetworkDnsZoneResource GetWorkloadNetworkDnsZoneResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient.GetWorkloadNetworkDnsZoneResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkDnsZoneResource (id As ResourceIdentifier) As WorkloadNetworkDnsZoneResource" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkDnsZoneResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.WorkloadNetworkDnsZoneResource&#xA;override this.GetWorkloadNetworkDnsZoneResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.WorkloadNetworkDnsZoneResource" Usage="mockableAvsArmClient.GetWorkloadNetworkDnsZoneResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.WorkloadNetworkDnsZoneResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkDnsZoneResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Avs.WorkloadNetworkDnsZoneResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkDnsZoneResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkDnsZoneResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkGatewayResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.WorkloadNetworkGatewayResource GetWorkloadNetworkGatewayResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.WorkloadNetworkGatewayResource GetWorkloadNetworkGatewayResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient.GetWorkloadNetworkGatewayResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkGatewayResource (id As ResourceIdentifier) As WorkloadNetworkGatewayResource" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkGatewayResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.WorkloadNetworkGatewayResource&#xA;override this.GetWorkloadNetworkGatewayResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.WorkloadNetworkGatewayResource" Usage="mockableAvsArmClient.GetWorkloadNetworkGatewayResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.WorkloadNetworkGatewayResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkGatewayResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Avs.WorkloadNetworkGatewayResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkGatewayResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkGatewayResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkPortMirroringProfileResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.WorkloadNetworkPortMirroringProfileResource GetWorkloadNetworkPortMirroringProfileResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.WorkloadNetworkPortMirroringProfileResource GetWorkloadNetworkPortMirroringProfileResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient.GetWorkloadNetworkPortMirroringProfileResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkPortMirroringProfileResource (id As ResourceIdentifier) As WorkloadNetworkPortMirroringProfileResource" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkPortMirroringProfileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.WorkloadNetworkPortMirroringProfileResource&#xA;override this.GetWorkloadNetworkPortMirroringProfileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.WorkloadNetworkPortMirroringProfileResource" Usage="mockableAvsArmClient.GetWorkloadNetworkPortMirroringProfileResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.WorkloadNetworkPortMirroringProfileResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkPortMirroringProfileResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Avs.WorkloadNetworkPortMirroringProfileResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkPortMirroringProfileResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkPortMirroringProfileResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkPublicIPResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.WorkloadNetworkPublicIPResource GetWorkloadNetworkPublicIPResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.WorkloadNetworkPublicIPResource GetWorkloadNetworkPublicIPResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient.GetWorkloadNetworkPublicIPResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkPublicIPResource (id As ResourceIdentifier) As WorkloadNetworkPublicIPResource" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkPublicIPResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.WorkloadNetworkPublicIPResource&#xA;override this.GetWorkloadNetworkPublicIPResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.WorkloadNetworkPublicIPResource" Usage="mockableAvsArmClient.GetWorkloadNetworkPublicIPResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.WorkloadNetworkPublicIPResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkPublicIPResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Avs.WorkloadNetworkPublicIPResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkPublicIPResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkPublicIPResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.WorkloadNetworkResource GetWorkloadNetworkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.WorkloadNetworkResource GetWorkloadNetworkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient.GetWorkloadNetworkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkResource (id As ResourceIdentifier) As WorkloadNetworkResource" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.WorkloadNetworkResource&#xA;override this.GetWorkloadNetworkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.WorkloadNetworkResource" Usage="mockableAvsArmClient.GetWorkloadNetworkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.WorkloadNetworkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Avs.WorkloadNetworkResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Avs.Models.WorkloadNetworkName)" /> to create a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkSegmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.WorkloadNetworkSegmentResource GetWorkloadNetworkSegmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.WorkloadNetworkSegmentResource GetWorkloadNetworkSegmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient.GetWorkloadNetworkSegmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkSegmentResource (id As ResourceIdentifier) As WorkloadNetworkSegmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkSegmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.WorkloadNetworkSegmentResource&#xA;override this.GetWorkloadNetworkSegmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.WorkloadNetworkSegmentResource" Usage="mockableAvsArmClient.GetWorkloadNetworkSegmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.WorkloadNetworkSegmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkSegmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Avs.WorkloadNetworkSegmentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkSegmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkSegmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkVirtualMachineResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.WorkloadNetworkVirtualMachineResource GetWorkloadNetworkVirtualMachineResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.WorkloadNetworkVirtualMachineResource GetWorkloadNetworkVirtualMachineResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient.GetWorkloadNetworkVirtualMachineResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkVirtualMachineResource (id As ResourceIdentifier) As WorkloadNetworkVirtualMachineResource" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkVirtualMachineResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.WorkloadNetworkVirtualMachineResource&#xA;override this.GetWorkloadNetworkVirtualMachineResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.WorkloadNetworkVirtualMachineResource" Usage="mockableAvsArmClient.GetWorkloadNetworkVirtualMachineResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.WorkloadNetworkVirtualMachineResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkVirtualMachineResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Avs.WorkloadNetworkVirtualMachineResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkVirtualMachineResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkVirtualMachineResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkVmGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.WorkloadNetworkVmGroupResource GetWorkloadNetworkVmGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.WorkloadNetworkVmGroupResource GetWorkloadNetworkVmGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.Mocking.MockableAvsArmClient.GetWorkloadNetworkVmGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkVmGroupResource (id As ResourceIdentifier) As WorkloadNetworkVmGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkVmGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.WorkloadNetworkVmGroupResource&#xA;override this.GetWorkloadNetworkVmGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Avs.WorkloadNetworkVmGroupResource" Usage="mockableAvsArmClient.GetWorkloadNetworkVmGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.WorkloadNetworkVmGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkVmGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Avs.WorkloadNetworkVmGroupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkVmGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Avs.WorkloadNetworkVmGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
