<Type Name="RadiologyCodeWithTypes" FullName="Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes">
  <TypeSignature Language="C#" Value="public class RadiologyCodeWithTypes : System.ClientModel.Primitives.IJsonModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RadiologyCodeWithTypes extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes" />
  <TypeSignature Language="VB.NET" Value="Public Class RadiologyCodeWithTypes&#xA;Implements IJsonModel(Of RadiologyCodeWithTypes), IPersistableModel(Of RadiologyCodeWithTypes)" />
  <TypeSignature Language="F#" Value="type RadiologyCodeWithTypes = class&#xA;    interface IJsonModel&lt;RadiologyCodeWithTypes&gt;&#xA;    interface IPersistableModel&lt;RadiologyCodeWithTypes&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.Health.Insights.RadiologyInsights</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Radiology code with types : used in imaging procedure recommendation for contrast and view. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Code">
      <MemberSignature Language="C#" Value="public Azure.Health.Insights.RadiologyInsights.FhirR4CodeableConcept Code { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Health.Insights.RadiologyInsights.FhirR4CodeableConcept Code" />
      <MemberSignature Language="DocId" Value="P:Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes.Code" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Code As FhirR4CodeableConcept" />
      <MemberSignature Language="F#" Value="member this.Code : Azure.Health.Insights.RadiologyInsights.FhirR4CodeableConcept" Usage="Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes.Code" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Health.Insights.RadiologyInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Health.Insights.RadiologyInsights.FhirR4CodeableConcept</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The SNOMED CT code indicates whether imaging was conducted with or without contrast in the case of contrast, and in the case of views, it denotes the number of views. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes IJsonModel&lt;RadiologyCodeWithTypes&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes System.ClientModel.Primitives.IJsonModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes.System#ClientModel#Primitives#IJsonModel&lt;Azure#Health#Insights#RadiologyInsights#RadiologyCodeWithTypes&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As RadiologyCodeWithTypes Implements IJsonModel(Of RadiologyCodeWithTypes).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes" Usage="radiologyCodeWithTypes.System.ClientModel.Primitives.IJsonModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Health.Insights.RadiologyInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;RadiologyCodeWithTypes&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes.System#ClientModel#Primitives#IJsonModel&lt;Azure#Health#Insights#RadiologyInsights#RadiologyCodeWithTypes&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of RadiologyCodeWithTypes).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="radiologyCodeWithTypes.System.ClientModel.Primitives.IJsonModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Health.Insights.RadiologyInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes IPersistableModel&lt;RadiologyCodeWithTypes&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes System.ClientModel.Primitives.IPersistableModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes.System#ClientModel#Primitives#IPersistableModel&lt;Azure#Health#Insights#RadiologyInsights#RadiologyCodeWithTypes&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As RadiologyCodeWithTypes Implements IPersistableModel(Of RadiologyCodeWithTypes).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes" Usage="radiologyCodeWithTypes.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Health.Insights.RadiologyInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;RadiologyCodeWithTypes&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes.System#ClientModel#Primitives#IPersistableModel&lt;Azure#Health#Insights#RadiologyInsights#RadiologyCodeWithTypes&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of RadiologyCodeWithTypes).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="radiologyCodeWithTypes.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Health.Insights.RadiologyInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;RadiologyCodeWithTypes&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes.System#ClientModel#Primitives#IPersistableModel&lt;Azure#Health#Insights#RadiologyInsights#RadiologyCodeWithTypes&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of RadiologyCodeWithTypes).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="radiologyCodeWithTypes.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Health.Insights.RadiologyInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Types">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Azure.Health.Insights.RadiologyInsights.FhirR4CodeableConcept&gt; Types { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Health.Insights.RadiologyInsights.FhirR4CodeableConcept&gt; Types" />
      <MemberSignature Language="DocId" Value="P:Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes.Types" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Types As IReadOnlyList(Of FhirR4CodeableConcept)" />
      <MemberSignature Language="F#" Value="member this.Types : System.Collections.Generic.IReadOnlyList&lt;Azure.Health.Insights.RadiologyInsights.FhirR4CodeableConcept&gt;" Usage="Azure.Health.Insights.RadiologyInsights.RadiologyCodeWithTypes.Types" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Health.Insights.RadiologyInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Azure.Health.Insights.RadiologyInsights.FhirR4CodeableConcept&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The collection of types will indicate the contrast substance used in the case of contrast and, in the case of views, it will specify the types of views, such as lateral and frontal, etc. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
