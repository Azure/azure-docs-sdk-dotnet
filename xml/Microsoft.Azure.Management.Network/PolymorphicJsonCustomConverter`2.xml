<Type Name="PolymorphicJsonCustomConverter&lt;T1,T2&gt;" FullName="Microsoft.Azure.Management.Network.PolymorphicJsonCustomConverter&lt;T1,T2&gt;">
  <TypeSignature Language="C#" Value="public class PolymorphicJsonCustomConverter&lt;T1,T2&gt; : Newtonsoft.Json.JsonConverter where T1 : class where T2 : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PolymorphicJsonCustomConverter`2&lt;class T1, class T2&gt; extends Newtonsoft.Json.JsonConverter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Network.PolymorphicJsonCustomConverter`2" />
  <TypeSignature Language="VB.NET" Value="Public Class PolymorphicJsonCustomConverter(Of T1, T2)&#xA;Inherits JsonConverter" />
  <TypeSignature Language="F#" Value="type PolymorphicJsonCustomConverter&lt;'T1, 'T2 (requires 'T1 : null and 'T2 : null)&gt; = class&#xA;    inherit JsonConverter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Network</AssemblyName>
    <AssemblyVersion>20.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Newtonsoft.Json.JsonConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T1">To be added.</typeparam>
    <typeparam name="T2">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PolymorphicJsonCustomConverter (string firstDiscriminatorField, string secondDiscriminatorField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string firstDiscriminatorField, string secondDiscriminatorField) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.PolymorphicJsonCustomConverter`2.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (firstDiscriminatorField As String, secondDiscriminatorField As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.Network.PolymorphicJsonCustomConverter&lt;'T1, 'T2 (requires 'T1 : null and 'T2 : null)&gt; : string * string -&gt; Microsoft.Azure.Management.Network.PolymorphicJsonCustomConverter&lt;'T1, 'T2 (requires 'T1 : null and 'T2 : null)&gt;" Usage="new Microsoft.Azure.Management.Network.PolymorphicJsonCustomConverter&lt;'T1, 'T2 (requires 'T1 : null and 'T2 : null)&gt; (firstDiscriminatorField, secondDiscriminatorField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network</AssemblyName>
        <AssemblyVersion>20.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="firstDiscriminatorField" Type="System.String" />
        <Parameter Name="secondDiscriminatorField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="firstDiscriminatorField">The field on which to choose first child type.</param>
        <param name="secondDiscriminatorField">The field on which to choose second child type.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Management.Network.PolymorphicJsonCustomConverter`2" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public override bool CanConvert (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvert(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.PolymorphicJsonCustomConverter`2.CanConvert(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvert (objectType As Type) As Boolean" />
      <MemberSignature Language="F#" Value="override this.CanConvert : Type -&gt; bool" Usage="polymorphicJsonCustomConverter.CanConvert objectType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network</AssemblyName>
        <AssemblyVersion>20.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">Type of the object.</param>
        <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
        <returns>
          <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadJson">
      <MemberSignature Language="C#" Value="public override object ReadJson (Newtonsoft.Json.JsonReader reader, Type objectType, object existingValue, Newtonsoft.Json.JsonSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadJson(class Newtonsoft.Json.JsonReader reader, class System.Type objectType, object existingValue, class Newtonsoft.Json.JsonSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.PolymorphicJsonCustomConverter`2.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadJson (reader As JsonReader, objectType As Type, existingValue As Object, serializer As JsonSerializer) As Object" />
      <MemberSignature Language="F#" Value="override this.ReadJson : Newtonsoft.Json.JsonReader * Type * obj * Newtonsoft.Json.JsonSerializer -&gt; obj" Usage="polymorphicJsonCustomConverter.ReadJson (reader, objectType, existingValue, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network</AssemblyName>
        <AssemblyVersion>20.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="Newtonsoft.Json.JsonReader" />
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="existingValue" Type="System.Object" />
        <Parameter Name="serializer" Type="Newtonsoft.Json.JsonSerializer" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param>
        <param name="objectType">Type of the object.</param>
        <param name="existingValue">The existing value of object being read.</param>
        <param name="serializer">The calling serializer.</param>
        <summary>
            Reads the JSON representation of the object.
            </summary>
        <returns>
            The object value.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteJson">
      <MemberSignature Language="C#" Value="public override void WriteJson (Newtonsoft.Json.JsonWriter writer, object value, Newtonsoft.Json.JsonSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteJson(class Newtonsoft.Json.JsonWriter writer, object value, class Newtonsoft.Json.JsonSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.PolymorphicJsonCustomConverter`2.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteJson (writer As JsonWriter, value As Object, serializer As JsonSerializer)" />
      <MemberSignature Language="F#" Value="override this.WriteJson : Newtonsoft.Json.JsonWriter * obj * Newtonsoft.Json.JsonSerializer -&gt; unit" Usage="polymorphicJsonCustomConverter.WriteJson (writer, value, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network</AssemblyName>
        <AssemblyVersion>20.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="Newtonsoft.Json.JsonWriter" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="serializer" Type="Newtonsoft.Json.JsonSerializer" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param>
        <param name="value">The value.</param>
        <param name="serializer">The calling serializer.</param>
        <summary>
            Writes the JSON representation of the object.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
