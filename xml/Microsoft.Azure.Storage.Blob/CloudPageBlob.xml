<Type Name="CloudPageBlob" FullName="Microsoft.Azure.Storage.Blob.CloudPageBlob">
  <TypeSignature Language="C#" Value="public class CloudPageBlob : Microsoft.Azure.Storage.Blob.CloudBlob, Microsoft.Azure.Storage.Blob.ICloudBlob" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CloudPageBlob extends Microsoft.Azure.Storage.Blob.CloudBlob implements class Microsoft.Azure.Storage.Blob.ICloudBlob, class Microsoft.Azure.Storage.Blob.IListBlobItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" />
  <TypeSignature Language="VB.NET" Value="Public Class CloudPageBlob&#xA;Inherits CloudBlob&#xA;Implements ICloudBlob" />
  <TypeSignature Language="F#" Value="type CloudPageBlob = class&#xA;    inherit CloudBlob&#xA;    interface ICloudBlob&#xA;    interface IListBlobItem" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
    <AssemblyVersion>11.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Storage.Blob.CloudBlob</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Storage.Blob.ICloudBlob</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Storage.Blob.IListBlobItem</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents a Microsoft Azure page blob.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CloudPageBlob (Uri blobAbsoluteUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobAbsoluteUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobAbsoluteUri As Uri)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Storage.Blob.CloudPageBlob : Uri -&gt; Microsoft.Azure.Storage.Blob.CloudPageBlob" Usage="new Microsoft.Azure.Storage.Blob.CloudPageBlob blobAbsoluteUri" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobAbsoluteUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="blobAbsoluteUri">The absolute URI to the blob.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> class using an absolute URI to the blob.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CloudPageBlob (Uri blobAbsoluteUri, Microsoft.Azure.Storage.Auth.StorageCredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobAbsoluteUri, class Microsoft.Azure.Storage.Auth.StorageCredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.#ctor(System.Uri,Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobAbsoluteUri As Uri, credentials As StorageCredentials)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Storage.Blob.CloudPageBlob : Uri * Microsoft.Azure.Storage.Auth.StorageCredentials -&gt; Microsoft.Azure.Storage.Blob.CloudPageBlob" Usage="new Microsoft.Azure.Storage.Blob.CloudPageBlob (blobAbsoluteUri, credentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobAbsoluteUri" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.Azure.Storage.Auth.StorageCredentials" />
      </Parameters>
      <Docs>
        <param name="blobAbsoluteUri">The absolute URI to the blob.</param>
        <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials" /> object.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> class using an absolute URI to the blob.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CloudPageBlob (Uri blobAbsoluteUri, Microsoft.Azure.Storage.Blob.CloudBlobClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobAbsoluteUri, class Microsoft.Azure.Storage.Blob.CloudBlobClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.#ctor(System.Uri,Microsoft.Azure.Storage.Blob.CloudBlobClient)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobAbsoluteUri As Uri, client As CloudBlobClient)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Storage.Blob.CloudPageBlob : Uri * Microsoft.Azure.Storage.Blob.CloudBlobClient -&gt; Microsoft.Azure.Storage.Blob.CloudPageBlob" Usage="new Microsoft.Azure.Storage.Blob.CloudPageBlob (blobAbsoluteUri, client)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobAbsoluteUri" Type="System.Uri" />
        <Parameter Name="client" Type="Microsoft.Azure.Storage.Blob.CloudBlobClient" />
      </Parameters>
      <Docs>
        <param name="blobAbsoluteUri">The absolute URI to the blob.</param>
        <param name="client">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient" /> object.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> class using an absolute URI to the blob.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CloudPageBlob (Microsoft.Azure.Storage.StorageUri blobAbsoluteUri, DateTimeOffset? snapshotTime, Microsoft.Azure.Storage.Auth.StorageCredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Azure.Storage.StorageUri blobAbsoluteUri, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; snapshotTime, class Microsoft.Azure.Storage.Auth.StorageCredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.#ctor(Microsoft.Azure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobAbsoluteUri As StorageUri, snapshotTime As Nullable(Of DateTimeOffset), credentials As StorageCredentials)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Storage.Blob.CloudPageBlob : Microsoft.Azure.Storage.StorageUri * Nullable&lt;DateTimeOffset&gt; * Microsoft.Azure.Storage.Auth.StorageCredentials -&gt; Microsoft.Azure.Storage.Blob.CloudPageBlob" Usage="new Microsoft.Azure.Storage.Blob.CloudPageBlob (blobAbsoluteUri, snapshotTime, credentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobAbsoluteUri" Type="Microsoft.Azure.Storage.StorageUri" />
        <Parameter Name="snapshotTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="credentials" Type="Microsoft.Azure.Storage.Auth.StorageCredentials" />
      </Parameters>
      <Docs>
        <param name="blobAbsoluteUri">The absolute URI to the blob. The service assumes this is the URI for the blob in the primary location.</param>
        <param name="snapshotTime">A <see cref="T:System.DateTimeOffset" /> specifying the snapshot timestamp, if the blob is a snapshot.</param>
        <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials" /> object.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> class using an absolute URI to the blob.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CloudPageBlob (Microsoft.Azure.Storage.StorageUri blobAbsoluteUri, DateTimeOffset? snapshotTime, Microsoft.Azure.Storage.Blob.CloudBlobClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Azure.Storage.StorageUri blobAbsoluteUri, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; snapshotTime, class Microsoft.Azure.Storage.Blob.CloudBlobClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.#ctor(Microsoft.Azure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.CloudBlobClient)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobAbsoluteUri As StorageUri, snapshotTime As Nullable(Of DateTimeOffset), client As CloudBlobClient)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Storage.Blob.CloudPageBlob : Microsoft.Azure.Storage.StorageUri * Nullable&lt;DateTimeOffset&gt; * Microsoft.Azure.Storage.Blob.CloudBlobClient -&gt; Microsoft.Azure.Storage.Blob.CloudPageBlob" Usage="new Microsoft.Azure.Storage.Blob.CloudPageBlob (blobAbsoluteUri, snapshotTime, client)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobAbsoluteUri" Type="Microsoft.Azure.Storage.StorageUri" />
        <Parameter Name="snapshotTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="client" Type="Microsoft.Azure.Storage.Blob.CloudBlobClient" />
      </Parameters>
      <Docs>
        <param name="blobAbsoluteUri">The absolute URI to the blob. The service assumes this is the URI for the blob in the primary location.</param>
        <param name="snapshotTime">A <see cref="T:System.DateTimeOffset" /> specifying the snapshot timestamp, if the blob is a snapshot.</param>
        <param name="client">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient" /> object.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> class using an absolute URI to the blob.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CloudPageBlob (Uri blobAbsoluteUri, DateTimeOffset? snapshotTime, Microsoft.Azure.Storage.Auth.StorageCredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobAbsoluteUri, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; snapshotTime, class Microsoft.Azure.Storage.Auth.StorageCredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobAbsoluteUri As Uri, snapshotTime As Nullable(Of DateTimeOffset), credentials As StorageCredentials)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Storage.Blob.CloudPageBlob : Uri * Nullable&lt;DateTimeOffset&gt; * Microsoft.Azure.Storage.Auth.StorageCredentials -&gt; Microsoft.Azure.Storage.Blob.CloudPageBlob" Usage="new Microsoft.Azure.Storage.Blob.CloudPageBlob (blobAbsoluteUri, snapshotTime, credentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobAbsoluteUri" Type="System.Uri" />
        <Parameter Name="snapshotTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="credentials" Type="Microsoft.Azure.Storage.Auth.StorageCredentials" />
      </Parameters>
      <Docs>
        <param name="blobAbsoluteUri">The absolute URI to the blob.</param>
        <param name="snapshotTime">A <see cref="T:System.DateTimeOffset" /> specifying the snapshot timestamp, if the blob is a snapshot.</param>
        <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials" /> object.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> class using an absolute URI to the blob.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CloudPageBlob (Uri blobAbsoluteUri, DateTimeOffset? snapshotTime, Microsoft.Azure.Storage.Blob.CloudBlobClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobAbsoluteUri, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; snapshotTime, class Microsoft.Azure.Storage.Blob.CloudBlobClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.CloudBlobClient)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobAbsoluteUri As Uri, snapshotTime As Nullable(Of DateTimeOffset), client As CloudBlobClient)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Storage.Blob.CloudPageBlob : Uri * Nullable&lt;DateTimeOffset&gt; * Microsoft.Azure.Storage.Blob.CloudBlobClient -&gt; Microsoft.Azure.Storage.Blob.CloudPageBlob" Usage="new Microsoft.Azure.Storage.Blob.CloudPageBlob (blobAbsoluteUri, snapshotTime, client)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobAbsoluteUri" Type="System.Uri" />
        <Parameter Name="snapshotTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="client" Type="Microsoft.Azure.Storage.Blob.CloudBlobClient" />
      </Parameters>
      <Docs>
        <param name="blobAbsoluteUri">The absolute URI to the blob.</param>
        <param name="snapshotTime">A <see cref="T:System.DateTimeOffset" /> specifying the snapshot timestamp, if the blob is a snapshot.</param>
        <param name="client">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient" /> object.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> class using an absolute URI to the blob.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginClearPages">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginClearPages (long startOffset, long length, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginClearPages(int64 startOffset, int64 length, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginClearPages(System.Int64,System.Int64,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginClearPages (startOffset As Long, length As Long, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginClearPages : int64 * int64 * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginClearPages : int64 * int64 * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginClearPages (startOffset, length, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startOffset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="startOffset">The offset at which to begin clearing pages, in bytes. The offset must be a multiple of 512.</param>
        <param name="length">The length of the data range to be cleared, in bytes. The length must be a multiple of 512.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to clear pages from a page blob.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginClearPages">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginClearPages (long startOffset, long length, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginClearPages(int64 startOffset, int64 length, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginClearPages(System.Int64,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginClearPages (startOffset As Long, length As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginClearPages : int64 * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginClearPages : int64 * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginClearPages (startOffset, length, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startOffset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="startOffset">The offset at which to begin clearing pages, in bytes. The offset must be a multiple of 512.</param>
        <param name="length">The length of the data range to be cleared, in bytes. The length must be a multiple of 512.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to clear pages from a page blob.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreate">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginCreate (long size, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginCreate(int64 size, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginCreate(System.Int64,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginCreate (size As Long, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginCreate : int64 * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginCreate : int64 * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginCreate (size, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="size">The maximum size of the page blob, in bytes.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to create a page blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting,
            use <see cref="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginCreate(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreate">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginCreate (long size, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginCreate(int64 size, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginCreate(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginCreate (size As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginCreate : int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginCreate : int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginCreate (size, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="size">The maximum size of the blob, in bytes.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to create a page blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition" />
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition" />.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreate">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginCreate (long size, Microsoft.Azure.Storage.Blob.PremiumPageBlobTier? premiumPageBlobTier, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginCreate(int64 size, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; premiumPageBlobTier, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginCreate(System.Int64,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginCreate (size As Long, premiumPageBlobTier As Nullable(Of PremiumPageBlobTier), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginCreate : int64 * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginCreate : int64 * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginCreate (size, premiumPageBlobTier, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="premiumPageBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="size">The maximum size of the blob, in bytes.</param>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to create a page blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition" />
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition" />.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreateSnapshot">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginCreateSnapshot (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginCreateSnapshot(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginCreateSnapshot(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginCreateSnapshot (callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginCreateSnapshot : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginCreateSnapshot : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginCreateSnapshot (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to create a snapshot of the blob.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreateSnapshot">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginCreateSnapshot (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginCreateSnapshot(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginCreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginCreateSnapshot (metadata As IDictionary(Of String, String), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginCreateSnapshot : System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginCreateSnapshot : System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginCreateSnapshot (metadata, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request, or <c>null</c>.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to create a snapshot of the blob.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetPageRanges">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginGetPageRanges (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginGetPageRanges(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginGetPageRanges(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginGetPageRanges (callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginGetPageRanges : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginGetPageRanges : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginGetPageRanges (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to return a collection of valid page ranges and their starting and ending bytes.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetPageRanges">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginGetPageRanges (long? offset, long? length, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginGetPageRanges(valuetype System.Nullable`1&lt;int64&gt; offset, valuetype System.Nullable`1&lt;int64&gt; length, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginGetPageRanges(System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginGetPageRanges (offset As Nullable(Of Long), length As Nullable(Of Long), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginGetPageRanges : Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginGetPageRanges : Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginGetPageRanges (offset, length, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="offset">The starting offset of the data range over which to list page ranges, in bytes. Must be a multiple of 512.</param>
        <param name="length">The length of the data range over which to list page ranges, in bytes. Must be a multiple of 512.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to return a collection of valid page ranges and their starting and ending bytes.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetPageRangesDiff">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginGetPageRangesDiff (DateTimeOffset previousSnapshotTime, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginGetPageRangesDiff(valuetype System.DateTimeOffset previousSnapshotTime, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginGetPageRangesDiff(System.DateTimeOffset,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginGetPageRangesDiff (previousSnapshotTime As DateTimeOffset, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginGetPageRangesDiff : DateTimeOffset * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginGetPageRangesDiff : DateTimeOffset * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginGetPageRangesDiff (previousSnapshotTime, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previousSnapshotTime" Type="System.DateTimeOffset" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="previousSnapshotTime">A <see cref="T:System.DateTimeOffset" /> representing the snapshot timestamp to use as the starting point for the diff. If this CloudPageBlob represents a snapshot, the previousSnapshotTime parameter must be prior to the current snapshot timestamp.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to return the collection of page ranges that differ between a specified snapshot and this object.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetPageRangesDiff">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginGetPageRangesDiff (DateTimeOffset previousSnapshotTime, long? offset, long? length, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginGetPageRangesDiff(valuetype System.DateTimeOffset previousSnapshotTime, valuetype System.Nullable`1&lt;int64&gt; offset, valuetype System.Nullable`1&lt;int64&gt; length, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginGetPageRangesDiff(System.DateTimeOffset,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginGetPageRangesDiff (previousSnapshotTime As DateTimeOffset, offset As Nullable(Of Long), length As Nullable(Of Long), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginGetPageRangesDiff : DateTimeOffset * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginGetPageRangesDiff : DateTimeOffset * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginGetPageRangesDiff (previousSnapshotTime, offset, length, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previousSnapshotTime" Type="System.DateTimeOffset" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="previousSnapshotTime">A <see cref="T:System.DateTimeOffset" /> representing the snapshot timestamp to use as the starting point for the diff. If this CloudPageBlob represents a snapshot, the previousSnapshotTime parameter must be prior to the current snapshot timestamp.</param>
        <param name="offset">The starting offset of the data range over which to list page ranges, in bytes. Must be a multiple of 512.</param>
        <param name="length">The length of the data range over which to list page ranges, in bytes. Must be a multiple of 512.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to return the collection of page ranges that differ between a specified snapshot and this object.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginOpenWrite">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginOpenWrite (long? size, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginOpenWrite(valuetype System.Nullable`1&lt;int64&gt; size, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginOpenWrite(System.Nullable{System.Int64},System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginOpenWrite (size As Nullable(Of Long), callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginOpenWrite : Nullable&lt;int64&gt; * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginOpenWrite : Nullable&lt;int64&gt; * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginOpenWrite (size, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="size">The size of the page blob, in bytes. The size must be a multiple of 512. If <c>null</c>, the page blob must already exist.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to open a stream for writing to the blob. If the blob already exists, then existing data in the blob may be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>
          <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" /> method under the covers.</para>
          <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudPageBlob.StreamWriteSizeInBytes" /> property before calling this method to specify the page size to write, in multiples of 512 bytes, 
            ranging from between 512 and 4 MB inclusive.</para>
          <para>To throw an exception if the blob exists instead of overwriting it, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginOpenWrite(System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginOpenWrite">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginOpenWrite (long? size, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginOpenWrite(valuetype System.Nullable`1&lt;int64&gt; size, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginOpenWrite(System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginOpenWrite (size As Nullable(Of Long), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginOpenWrite : Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginOpenWrite : Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginOpenWrite (size, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="size">The size of the page blob, in bytes. The size must be a multiple of 512. If <c>null</c>, the page blob must already exist.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to open a stream for writing to the blob. If the blob already exists, then existing data in the blob may be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>
          <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" /> method under the covers.</para>
          <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudPageBlob.StreamWriteSizeInBytes" /> property before calling this method to specify the page size to write, in multiples of 512 bytes, 
            ranging from between 512 and 4 MB inclusive.</para>
          <para>To throw an exception if the blob exists instead of overwriting it, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition" />
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResize">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginResize (long size, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginResize(int64 size, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginResize(System.Int64,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginResize (size As Long, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginResize : int64 * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginResize : int64 * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginResize (size, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="size">The size of the page blob, in bytes.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to resize the page blob to the specified size.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResize">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginResize (long size, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginResize(int64 size, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginResize(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginResize (size As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginResize : int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginResize : int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginResize (size, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="size">The size of the blob, in bytes.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to resize the page blob to the specified size.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSetPremiumBlobTier">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginSetPremiumBlobTier (Microsoft.Azure.Storage.Blob.PremiumPageBlobTier premiumPageBlobTier, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginSetPremiumBlobTier(valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier premiumPageBlobTier, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginSetPremiumBlobTier(Microsoft.Azure.Storage.Blob.PremiumPageBlobTier,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginSetPremiumBlobTier (premiumPageBlobTier As PremiumPageBlobTier, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginSetPremiumBlobTier : Microsoft.Azure.Storage.Blob.PremiumPageBlobTier * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginSetPremiumBlobTier : Microsoft.Azure.Storage.Blob.PremiumPageBlobTier * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginSetPremiumBlobTier (premiumPageBlobTier, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="premiumPageBlobTier" Type="Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to set the tier of the premium blob.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSetPremiumBlobTier">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginSetPremiumBlobTier (Microsoft.Azure.Storage.Blob.PremiumPageBlobTier premiumPageBlobTier, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginSetPremiumBlobTier(valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier premiumPageBlobTier, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginSetPremiumBlobTier(Microsoft.Azure.Storage.Blob.PremiumPageBlobTier,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginSetPremiumBlobTier (premiumPageBlobTier As PremiumPageBlobTier, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginSetPremiumBlobTier : Microsoft.Azure.Storage.Blob.PremiumPageBlobTier * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginSetPremiumBlobTier : Microsoft.Azure.Storage.Blob.PremiumPageBlobTier * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginSetPremiumBlobTier (premiumPageBlobTier, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="premiumPageBlobTier" Type="Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request, or <c>null</c>.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to set the tier of the premium blob.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSetSequenceNumber">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginSetSequenceNumber (Microsoft.Azure.Storage.Blob.SequenceNumberAction sequenceNumberAction, long? sequenceNumber, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginSetSequenceNumber(valuetype Microsoft.Azure.Storage.Blob.SequenceNumberAction sequenceNumberAction, valuetype System.Nullable`1&lt;int64&gt; sequenceNumber, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginSetSequenceNumber(Microsoft.Azure.Storage.Blob.SequenceNumberAction,System.Nullable{System.Int64},System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginSetSequenceNumber (sequenceNumberAction As SequenceNumberAction, sequenceNumber As Nullable(Of Long), callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginSetSequenceNumber : Microsoft.Azure.Storage.Blob.SequenceNumberAction * Nullable&lt;int64&gt; * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginSetSequenceNumber : Microsoft.Azure.Storage.Blob.SequenceNumberAction * Nullable&lt;int64&gt; * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginSetSequenceNumber (sequenceNumberAction, sequenceNumber, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumberAction" Type="Microsoft.Azure.Storage.Blob.SequenceNumberAction" />
        <Parameter Name="sequenceNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sequenceNumberAction">A value of type <see cref="T:Microsoft.Azure.Storage.Blob.SequenceNumberAction" />, indicating the operation to perform on the sequence number.</param>
        <param name="sequenceNumber">The sequence number. Set this parameter to <c>null</c> if <paramref name="sequenceNumberAction" /> is equal to <see cref="F:SequenceNumberAction.Increment" />.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to set the page blob's sequence number.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSetSequenceNumber">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginSetSequenceNumber (Microsoft.Azure.Storage.Blob.SequenceNumberAction sequenceNumberAction, long? sequenceNumber, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginSetSequenceNumber(valuetype Microsoft.Azure.Storage.Blob.SequenceNumberAction sequenceNumberAction, valuetype System.Nullable`1&lt;int64&gt; sequenceNumber, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginSetSequenceNumber(Microsoft.Azure.Storage.Blob.SequenceNumberAction,System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginSetSequenceNumber (sequenceNumberAction As SequenceNumberAction, sequenceNumber As Nullable(Of Long), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginSetSequenceNumber : Microsoft.Azure.Storage.Blob.SequenceNumberAction * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginSetSequenceNumber : Microsoft.Azure.Storage.Blob.SequenceNumberAction * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginSetSequenceNumber (sequenceNumberAction, sequenceNumber, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumberAction" Type="Microsoft.Azure.Storage.Blob.SequenceNumberAction" />
        <Parameter Name="sequenceNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sequenceNumberAction">A value of type <see cref="T:Microsoft.Azure.Storage.Blob.SequenceNumberAction" />, indicating the operation to perform on the sequence number.</param>
        <param name="sequenceNumber">The sequence number. Set this parameter to <c>null</c> if <paramref name="sequenceNumberAction" /> is equal to <see cref="F:SequenceNumberAction.Increment" />.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to set the page blob's sequence number.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginStartCopy">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginStartCopy (Microsoft.Azure.Storage.Blob.CloudPageBlob source, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginStartCopy(class Microsoft.Azure.Storage.Blob.CloudPageBlob source, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginStartCopy(Microsoft.Azure.Storage.Blob.CloudPageBlob,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginStartCopy (source As CloudPageBlob, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="override this.BeginStartCopy : Microsoft.Azure.Storage.Blob.CloudPageBlob * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginStartCopy (source, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Azure.Storage.Blob.CloudPageBlob" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> that is the source blob.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to start copying another page blob's contents, properties, and metadata to this page blob.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginStartCopy">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginStartCopy (Microsoft.Azure.Storage.Blob.CloudPageBlob source, Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, Microsoft.Azure.Storage.AccessCondition destAccessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginStartCopy(class Microsoft.Azure.Storage.Blob.CloudPageBlob source, class Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, class Microsoft.Azure.Storage.AccessCondition destAccessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginStartCopy(Microsoft.Azure.Storage.Blob.CloudPageBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginStartCopy (source As CloudPageBlob, sourceAccessCondition As AccessCondition, destAccessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="override this.BeginStartCopy : Microsoft.Azure.Storage.Blob.CloudPageBlob * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginStartCopy (source, sourceAccessCondition, destAccessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Azure.Storage.Blob.CloudPageBlob" />
        <Parameter Name="sourceAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="destAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> that is the source blob.</param>
        <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
        <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to start copying another page blob's contents, properties, and metadata to this page blob.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginStartCopy">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginStartCopy (Microsoft.Azure.Storage.Blob.CloudPageBlob source, Microsoft.Azure.Storage.Blob.PremiumPageBlobTier? premiumPageBlobTier, Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, Microsoft.Azure.Storage.AccessCondition destAccessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginStartCopy(class Microsoft.Azure.Storage.Blob.CloudPageBlob source, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; premiumPageBlobTier, class Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, class Microsoft.Azure.Storage.AccessCondition destAccessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginStartCopy(Microsoft.Azure.Storage.Blob.CloudPageBlob,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginStartCopy (source As CloudPageBlob, premiumPageBlobTier As Nullable(Of PremiumPageBlobTier), sourceAccessCondition As AccessCondition, destAccessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="override this.BeginStartCopy : Microsoft.Azure.Storage.Blob.CloudPageBlob * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginStartCopy (source, premiumPageBlobTier, sourceAccessCondition, destAccessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Azure.Storage.Blob.CloudPageBlob" />
        <Parameter Name="premiumPageBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt;" />
        <Parameter Name="sourceAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="destAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> that is the source blob.</param>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
        <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to start copying another page blob's contents, properties, and metadata to this page blob.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginStartIncrementalCopy">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginStartIncrementalCopy (Microsoft.Azure.Storage.Blob.CloudPageBlob sourceSnapshot, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginStartIncrementalCopy(class Microsoft.Azure.Storage.Blob.CloudPageBlob sourceSnapshot, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginStartIncrementalCopy(Microsoft.Azure.Storage.Blob.CloudPageBlob,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginStartIncrementalCopy (sourceSnapshot As CloudPageBlob, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginStartIncrementalCopy : Microsoft.Azure.Storage.Blob.CloudPageBlob * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginStartIncrementalCopy : Microsoft.Azure.Storage.Blob.CloudPageBlob * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginStartIncrementalCopy (sourceSnapshot, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceSnapshot" Type="Microsoft.Azure.Storage.Blob.CloudPageBlob" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sourceSnapshot">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> that is the source blob which must be a snapshot.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to start an incremental copy of another page blob's contents, properties, and metadata to this page blob.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginStartIncrementalCopy">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginStartIncrementalCopy (Microsoft.Azure.Storage.Blob.CloudPageBlob sourceSnapshot, Microsoft.Azure.Storage.AccessCondition destAccessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginStartIncrementalCopy(class Microsoft.Azure.Storage.Blob.CloudPageBlob sourceSnapshot, class Microsoft.Azure.Storage.AccessCondition destAccessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginStartIncrementalCopy(Microsoft.Azure.Storage.Blob.CloudPageBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginStartIncrementalCopy (sourceSnapshot As CloudPageBlob, destAccessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginStartIncrementalCopy : Microsoft.Azure.Storage.Blob.CloudPageBlob * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginStartIncrementalCopy : Microsoft.Azure.Storage.Blob.CloudPageBlob * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginStartIncrementalCopy (sourceSnapshot, destAccessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceSnapshot" Type="Microsoft.Azure.Storage.Blob.CloudPageBlob" />
        <Parameter Name="destAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sourceSnapshot">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> that is the source blob which must be a snapshot.</param>
        <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to start an incremental copy of another page blob's contents, properties, and metadata to this page blob.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginStartIncrementalCopy">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginStartIncrementalCopy (Uri sourceSnapshot, Microsoft.Azure.Storage.AccessCondition destAccessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginStartIncrementalCopy(class System.Uri sourceSnapshot, class Microsoft.Azure.Storage.AccessCondition destAccessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginStartIncrementalCopy(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginStartIncrementalCopy (sourceSnapshot As Uri, destAccessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginStartIncrementalCopy : Uri * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginStartIncrementalCopy : Uri * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginStartIncrementalCopy (sourceSnapshot, destAccessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceSnapshot" Type="System.Uri" />
        <Parameter Name="destAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sourceSnapshot">The <see cref="T:System.Uri" /> of the source blob which must be a snapshot.</param>
        <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to start copying another blob's contents, properties, and metadata to this blob.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUploadFromByteArray">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromByteArray (byte[] buffer, int index, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromByteArray(unsigned int8[] buffer, int32 index, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginUploadFromByteArray (buffer As Byte(), index As Integer, count As Integer, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginUploadFromByteArray : byte[] * int * int * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginUploadFromByteArray : byte[] * int * int * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginUploadFromByteArray (buffer, index, count, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">An array of bytes.</param>
        <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
        <param name="count">The number of bytes to be written to the blob.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload the contents of a byte array to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUploadFromByteArray">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromByteArray (byte[] buffer, int index, int count, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromByteArray(unsigned int8[] buffer, int32 index, int32 count, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginUploadFromByteArray (buffer As Byte(), index As Integer, count As Integer, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginUploadFromByteArray : byte[] * int * int * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginUploadFromByteArray : byte[] * int * int * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginUploadFromByteArray (buffer, index, count, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">An array of bytes.</param>
        <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
        <param name="count">The number of bytes to be written to the blob.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload the contents of a byte array to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUploadFromByteArray">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromByteArray (byte[] buffer, int index, int count, Microsoft.Azure.Storage.Blob.PremiumPageBlobTier? premiumPageBlobTier, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromByteArray(unsigned int8[] buffer, int32 index, int32 count, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; premiumPageBlobTier, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginUploadFromByteArray (buffer As Byte(), index As Integer, count As Integer, premiumPageBlobTier As Nullable(Of PremiumPageBlobTier), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginUploadFromByteArray : byte[] * int * int * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginUploadFromByteArray : byte[] * int * int * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginUploadFromByteArray (buffer, index, count, premiumPageBlobTier, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="premiumPageBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">An array of bytes.</param>
        <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
        <param name="count">The number of bytes to be written to the blob.</param>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload the contents of a byte array to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUploadFromFile">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromFile (string path, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromFile(string path, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromFile(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginUploadFromFile (path As String, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginUploadFromFile : string * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginUploadFromFile : string * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginUploadFromFile (path, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromFile(System.String,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="path">A string containing the file path providing the blob content.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload a file to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUploadFromFile">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromFile (string path, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromFile(string path, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginUploadFromFile (path As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginUploadFromFile : string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginUploadFromFile : string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginUploadFromFile (path, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="path">A string containing the file path providing the blob content.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload a file to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUploadFromFile">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromFile (string path, Microsoft.Azure.Storage.Blob.PremiumPageBlobTier? premiumPageBlobTier, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromFile(string path, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; premiumPageBlobTier, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromFile(System.String,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginUploadFromFile (path As String, premiumPageBlobTier As Nullable(Of PremiumPageBlobTier), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginUploadFromFile : string * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginUploadFromFile : string * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginUploadFromFile (path, premiumPageBlobTier, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="premiumPageBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="path">A string containing the file path providing the blob content.</param>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload a file to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUploadFromStream">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromStream (System.IO.Stream source, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromStream(class System.IO.Stream source, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromStream(System.IO.Stream,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginUploadFromStream (source As Stream, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginUploadFromStream : System.IO.Stream * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginUploadFromStream : System.IO.Stream * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginUploadFromStream (source, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUploadFromStream">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromStream (System.IO.Stream source, long length, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromStream(class System.IO.Stream source, int64 length, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginUploadFromStream (source As Stream, length As Long, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginUploadFromStream : System.IO.Stream * int64 * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginUploadFromStream : System.IO.Stream * int64 * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginUploadFromStream (source, length, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="length">Specifies the number of bytes from the Stream source to upload from the start position.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUploadFromStream">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromStream (System.IO.Stream source, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromStream(class System.IO.Stream source, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginUploadFromStream (source As Stream, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginUploadFromStream : System.IO.Stream * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginUploadFromStream : System.IO.Stream * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginUploadFromStream (source, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUploadFromStream">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromStream (System.IO.Stream source, long length, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromStream(class System.IO.Stream source, int64 length, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginUploadFromStream (source As Stream, length As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginUploadFromStream : System.IO.Stream * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginUploadFromStream : System.IO.Stream * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginUploadFromStream (source, length, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="length">Specifies the number of bytes from the Stream source to upload from the start position.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUploadFromStream">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromStream (System.IO.Stream source, Microsoft.Azure.Storage.Blob.PremiumPageBlobTier? premiumPageBlobTier, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromStream(class System.IO.Stream source, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; premiumPageBlobTier, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromStream(System.IO.Stream,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginUploadFromStream (source As Stream, premiumPageBlobTier As Nullable(Of PremiumPageBlobTier), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginUploadFromStream : System.IO.Stream * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginUploadFromStream : System.IO.Stream * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginUploadFromStream (source, premiumPageBlobTier, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="premiumPageBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUploadFromStream">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromStream (System.IO.Stream source, long length, Microsoft.Azure.Storage.Blob.PremiumPageBlobTier? premiumPageBlobTier, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromStream(class System.IO.Stream source, int64 length, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; premiumPageBlobTier, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginUploadFromStream (source As Stream, length As Long, premiumPageBlobTier As Nullable(Of PremiumPageBlobTier), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginUploadFromStream : System.IO.Stream * int64 * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginUploadFromStream : System.IO.Stream * int64 * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginUploadFromStream (source, length, premiumPageBlobTier, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="premiumPageBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="length">Specifies the number of bytes from the Stream source to upload from the start position.</param>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWritePages">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginWritePages (System.IO.Stream pageData, long startOffset, Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginWritePages(class System.IO.Stream pageData, int64 startOffset, class Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginWritePages(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginWritePages (pageData As Stream, startOffset As Long, contentChecksum As Checksum, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginWritePages : System.IO.Stream * int64 * Microsoft.Azure.Storage.Shared.Protocol.Checksum * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginWritePages : System.IO.Stream * int64 * Microsoft.Azure.Storage.Shared.Protocol.Checksum * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginWritePages (pageData, startOffset, contentChecksum, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageData" Type="System.IO.Stream" />
        <Parameter Name="startOffset" Type="System.Int64" />
        <Parameter Name="contentChecksum" Type="Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pageData">A <see cref="T:System.IO.Stream" /> object providing the page data.</param>
        <param name="startOffset">The offset at which to begin writing, in bytes. The offset must be a multiple of 512.</param>
        <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to write pages to a page blob.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum" /> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5" /> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64" /> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWritePages">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginWritePages (System.IO.Stream pageData, long startOffset, Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginWritePages(class System.IO.Stream pageData, int64 startOffset, class Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginWritePages(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginWritePages (pageData As Stream, startOffset As Long, contentChecksum As Checksum, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginWritePages : System.IO.Stream * int64 * Microsoft.Azure.Storage.Shared.Protocol.Checksum * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginWritePages : System.IO.Stream * int64 * Microsoft.Azure.Storage.Shared.Protocol.Checksum * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginWritePages (pageData, startOffset, contentChecksum, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageData" Type="System.IO.Stream" />
        <Parameter Name="startOffset" Type="System.Int64" />
        <Parameter Name="contentChecksum" Type="Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pageData">A <see cref="T:System.IO.Stream" /> object providing the page data.</param>
        <param name="startOffset">The offset at which to begin writing, in bytes. The offset must be a multiple of 512.</param>
        <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to write pages to a page blob.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum" /> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5" /> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64" /> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWritePages">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginWritePages (Uri sourceUri, long offset, long count, long startOffset, Microsoft.Azure.Storage.Shared.Protocol.Checksum sourceContentChecksum, Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, Microsoft.Azure.Storage.AccessCondition destAccessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginWritePages(class System.Uri sourceUri, int64 offset, int64 count, int64 startOffset, class Microsoft.Azure.Storage.Shared.Protocol.Checksum sourceContentChecksum, class Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, class Microsoft.Azure.Storage.AccessCondition destAccessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginWritePages(System.Uri,System.Int64,System.Int64,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginWritePages (sourceUri As Uri, offset As Long, count As Long, startOffset As Long, sourceContentChecksum As Checksum, sourceAccessCondition As AccessCondition, destAccessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginWritePages : Uri * int64 * int64 * int64 * Microsoft.Azure.Storage.Shared.Protocol.Checksum * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginWritePages : Uri * int64 * int64 * int64 * Microsoft.Azure.Storage.Shared.Protocol.Checksum * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudPageBlob.BeginWritePages (sourceUri, offset, count, startOffset, sourceContentChecksum, sourceAccessCondition, destAccessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="count" Type="System.Int64" />
        <Parameter Name="startOffset" Type="System.Int64" />
        <Parameter Name="sourceContentChecksum" Type="Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
        <Parameter Name="sourceAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="destAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sourceContentChecksum">To be added.</param>
        <param name="sourceUri">A <see cref="T:System.Uri" /> specifying the absolute URI to the source blob.</param>
        <param name="offset">The byte offset in the source at which to begin retrieving content.</param>
        <param name="count">The number of bytes from the source to return, or <c>null</c> to return all bytes through the end of the blob.</param>
        <param name="startOffset">The offset at which to begin writing, in bytes. The offset must be a multiple of 512.</param>
        <param name="sourceContentMd5">The MD5 calculated for the range of bytes of the source.</param>
        <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
        <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to write pages to a page blob.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearPages">
      <MemberSignature Language="C#" Value="public virtual void ClearPages (long startOffset, long length, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearPages(int64 startOffset, int64 length, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ClearPages(System.Int64,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearPages (startOffset As Long, length As Long, Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member ClearPages : int64 * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.ClearPages : int64 * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudPageBlob.ClearPages (startOffset, length, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startOffset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="startOffset">The offset at which to begin clearing pages, in bytes. The offset must be a multiple of 512.</param>
        <param name="length">The length of the data range to be cleared, in bytes. The length must be a multiple of 512.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Clears pages from a page blob.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearPagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ClearPagesAsync (long startOffset, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ClearPagesAsync(int64 startOffset, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ClearPagesAsync(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ClearPagesAsync (startOffset As Long, length As Long) As Task" />
      <MemberSignature Language="F#" Value="abstract member ClearPagesAsync : int64 * int64 -&gt; System.Threading.Tasks.Task&#xA;override this.ClearPagesAsync : int64 * int64 -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.ClearPagesAsync (startOffset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startOffset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="startOffset">The offset at which to begin clearing pages, in bytes. The offset must be a multiple of 512.</param>
        <param name="length">The length of the data range to be cleared, in bytes. The length must be a multiple of 512.</param>
        <summary>
            Initiates an asynchronous operation to clear pages from a page blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearPagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ClearPagesAsync (long startOffset, long length, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ClearPagesAsync(int64 startOffset, int64 length, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ClearPagesAsync(System.Int64,System.Int64,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ClearPagesAsync (startOffset As Long, length As Long, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member ClearPagesAsync : int64 * int64 * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.ClearPagesAsync : int64 * int64 * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.ClearPagesAsync (startOffset, length, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startOffset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="startOffset">The offset at which to begin clearing pages, in bytes. The offset must be a multiple of 512.</param>
        <param name="length">The length of the data range to be cleared, in bytes. The length must be a multiple of 512.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to clear pages from a page blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearPagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ClearPagesAsync (long startOffset, long length, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ClearPagesAsync(int64 startOffset, int64 length, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ClearPagesAsync(System.Int64,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ClearPagesAsync (startOffset As Long, length As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member ClearPagesAsync : int64 * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&#xA;override this.ClearPagesAsync : int64 * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.ClearPagesAsync (startOffset, length, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startOffset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="startOffset">The offset at which to begin clearing pages, in bytes. The offset must be a multiple of 512.</param>
        <param name="length">The length of the data range to be cleared, in bytes. The length must be a multiple of 512.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to clear pages from a page blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearPagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ClearPagesAsync (long startOffset, long length, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ClearPagesAsync(int64 startOffset, int64 length, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ClearPagesAsync(System.Int64,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ClearPagesAsync (startOffset As Long, length As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member ClearPagesAsync : int64 * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.ClearPagesAsync : int64 * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.ClearPagesAsync (startOffset, length, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startOffset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="startOffset">The offset at which to begin clearing pages, in bytes. The offset must be a multiple of 512.</param>
        <param name="length">The length of the data range to be cleared, in bytes. The length must be a multiple of 512.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to clear pages from a page blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual void Create (long size, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Create(int64 size, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.Create(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Create (size As Long, Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member Create : int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.Create : int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudPageBlob.Create (size, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="size">The maximum size of the page blob, in bytes.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Creates a page blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition" />
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual void Create (long size, Microsoft.Azure.Storage.Blob.PremiumPageBlobTier? premiumPageBlobTier, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Create(int64 size, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; premiumPageBlobTier, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.Create(System.Int64,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Create (size As Long, premiumPageBlobTier As Nullable(Of PremiumPageBlobTier), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext)" />
      <MemberSignature Language="F#" Value="abstract member Create : int64 * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.Create : int64 * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudPageBlob.Create (size, premiumPageBlobTier, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="premiumPageBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="size">The maximum size of the page blob, in bytes.</param>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Creates a page blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition" />
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CreateAsync (long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CreateAsync(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateAsync(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (size As Long) As Task" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : int64 -&gt; System.Threading.Tasks.Task&#xA;override this.CreateAsync : int64 -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.CreateAsync size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">The maximum size of the blob, in bytes.</param>
        <summary>
            Initiates an asynchronous operation to create a page blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting,
            use <see cref="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateAsync(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CreateAsync (long size, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CreateAsync(int64 size, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateAsync(System.Int64,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (size As Long, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : int64 * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CreateAsync : int64 * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.CreateAsync (size, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="size">The maximum size of the blob, in bytes.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to create a page blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting,
            use <see cref="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateAsync(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CreateAsync (long size, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CreateAsync(int64 size, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateAsync(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (size As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&#xA;override this.CreateAsync : int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.CreateAsync (size, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="size">The maximum size of the blob, in bytes.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to create a page blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition" />
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CreateAsync (long size, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CreateAsync(int64 size, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateAsync(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (size As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CreateAsync : int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.CreateAsync (size, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="size">The maximum size of the blob, in bytes.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to create a page blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition" />
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CreateAsync (long size, Microsoft.Azure.Storage.Blob.PremiumPageBlobTier? premiumPageBlobTier, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CreateAsync(int64 size, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; premiumPageBlobTier, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateAsync(System.Int64,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (size As Long, premiumPageBlobTier As Nullable(Of PremiumPageBlobTier), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : int64 * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CreateAsync : int64 * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.CreateAsync (size, premiumPageBlobTier, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="premiumPageBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="size">The maximum size of the blob, in bytes.</param>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to create a page blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition" />
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSnapshot">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.Blob.CloudPageBlob CreateSnapshot (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.Blob.CloudPageBlob CreateSnapshot(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSnapshot (Optional metadata As IDictionary(Of String, String) = Nothing, Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing) As CloudPageBlob" />
      <MemberSignature Language="F#" Value="abstract member CreateSnapshot : System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; Microsoft.Azure.Storage.Blob.CloudPageBlob&#xA;override this.CreateSnapshot : System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; Microsoft.Azure.Storage.Blob.CloudPageBlob" Usage="cloudPageBlob.CreateSnapshot (metadata, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.Blob.CloudPageBlob</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request, or <c>null</c>. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Creates a snapshot of the blob.
            </summary>
        <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> object that is a blob snapshot.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSnapshotAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudPageBlob&gt; CreateSnapshotAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.Blob.CloudPageBlob&gt; CreateSnapshotAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateSnapshotAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSnapshotAsync () As Task(Of CloudPageBlob)" />
      <MemberSignature Language="F#" Value="abstract member CreateSnapshotAsync : unit -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudPageBlob&gt;&#xA;override this.CreateSnapshotAsync : unit -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudPageBlob&gt;" Usage="cloudPageBlob.CreateSnapshotAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudPageBlob&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Initiates an asynchronous operation to create a snapshot of the blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSnapshotAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudPageBlob&gt; CreateSnapshotAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.Blob.CloudPageBlob&gt; CreateSnapshotAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateSnapshotAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSnapshotAsync (cancellationToken As CancellationToken) As Task(Of CloudPageBlob)" />
      <MemberSignature Language="F#" Value="abstract member CreateSnapshotAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudPageBlob&gt;&#xA;override this.CreateSnapshotAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudPageBlob&gt;" Usage="cloudPageBlob.CreateSnapshotAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudPageBlob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to create a snapshot of the blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSnapshotAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudPageBlob&gt; CreateSnapshotAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.Blob.CloudPageBlob&gt; CreateSnapshotAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSnapshotAsync (metadata As IDictionary(Of String, String), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of CloudPageBlob)" />
      <MemberSignature Language="F#" Value="abstract member CreateSnapshotAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudPageBlob&gt;&#xA;override this.CreateSnapshotAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudPageBlob&gt;" Usage="cloudPageBlob.CreateSnapshotAsync (metadata, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudPageBlob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to create a snapshot of the blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSnapshotAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudPageBlob&gt; CreateSnapshotAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.Blob.CloudPageBlob&gt; CreateSnapshotAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSnapshotAsync (metadata As IDictionary(Of String, String), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of CloudPageBlob)" />
      <MemberSignature Language="F#" Value="abstract member CreateSnapshotAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudPageBlob&gt;&#xA;override this.CreateSnapshotAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudPageBlob&gt;" Usage="cloudPageBlob.CreateSnapshotAsync (metadata, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudPageBlob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to create a snapshot of the blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndClearPages">
      <MemberSignature Language="C#" Value="public virtual void EndClearPages (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndClearPages(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndClearPages(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndClearPages (asyncResult As IAsyncResult)" />
      <MemberSignature Language="F#" Value="abstract member EndClearPages : IAsyncResult -&gt; unit&#xA;override this.EndClearPages : IAsyncResult -&gt; unit" Usage="cloudPageBlob.EndClearPages asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to clear pages from a page blob.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCreate">
      <MemberSignature Language="C#" Value="public virtual void EndCreate (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCreate(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndCreate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndCreate (asyncResult As IAsyncResult)" />
      <MemberSignature Language="F#" Value="abstract member EndCreate : IAsyncResult -&gt; unit&#xA;override this.EndCreate : IAsyncResult -&gt; unit" Usage="cloudPageBlob.EndCreate asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to create a page blob.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCreateSnapshot">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.Blob.CloudPageBlob EndCreateSnapshot (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.Blob.CloudPageBlob EndCreateSnapshot(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndCreateSnapshot(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndCreateSnapshot (asyncResult As IAsyncResult) As CloudPageBlob" />
      <MemberSignature Language="F#" Value="abstract member EndCreateSnapshot : IAsyncResult -&gt; Microsoft.Azure.Storage.Blob.CloudPageBlob&#xA;override this.EndCreateSnapshot : IAsyncResult -&gt; Microsoft.Azure.Storage.Blob.CloudPageBlob" Usage="cloudPageBlob.EndCreateSnapshot asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.Blob.CloudPageBlob</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to create a snapshot of the blob.
            </summary>
        <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> object that is a blob snapshot.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetPageRanges">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.PageRange&gt; EndGetPageRanges (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Storage.Blob.PageRange&gt; EndGetPageRanges(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndGetPageRanges(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndGetPageRanges (asyncResult As IAsyncResult) As IEnumerable(Of PageRange)" />
      <MemberSignature Language="F#" Value="abstract member EndGetPageRanges : IAsyncResult -&gt; seq&lt;Microsoft.Azure.Storage.Blob.PageRange&gt;&#xA;override this.EndGetPageRanges : IAsyncResult -&gt; seq&lt;Microsoft.Azure.Storage.Blob.PageRange&gt;" Usage="cloudPageBlob.EndGetPageRanges asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.PageRange&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to return a collection of valid page ranges and their starting and ending bytes.
            </summary>
        <returns>An enumerable collection of page ranges.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetPageRangesDiff">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.PageDiffRange&gt; EndGetPageRangesDiff (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Storage.Blob.PageDiffRange&gt; EndGetPageRangesDiff(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndGetPageRangesDiff(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndGetPageRangesDiff (asyncResult As IAsyncResult) As IEnumerable(Of PageDiffRange)" />
      <MemberSignature Language="F#" Value="abstract member EndGetPageRangesDiff : IAsyncResult -&gt; seq&lt;Microsoft.Azure.Storage.Blob.PageDiffRange&gt;&#xA;override this.EndGetPageRangesDiff : IAsyncResult -&gt; seq&lt;Microsoft.Azure.Storage.Blob.PageDiffRange&gt;" Usage="cloudPageBlob.EndGetPageRangesDiff asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.PageDiffRange&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to return the collection of page ranges that differ between a specified snapshot and this object.
            </summary>
        <returns>An enumerable collection of page ranges.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOpenWrite">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.Blob.CloudBlobStream EndOpenWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.Blob.CloudBlobStream EndOpenWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndOpenWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndOpenWrite (asyncResult As IAsyncResult) As CloudBlobStream" />
      <MemberSignature Language="F#" Value="abstract member EndOpenWrite : IAsyncResult -&gt; Microsoft.Azure.Storage.Blob.CloudBlobStream&#xA;override this.EndOpenWrite : IAsyncResult -&gt; Microsoft.Azure.Storage.Blob.CloudBlobStream" Usage="cloudPageBlob.EndOpenWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.Blob.CloudBlobStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to open a stream for writing to the blob.
            </summary>
        <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream" /> object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndResize">
      <MemberSignature Language="C#" Value="public virtual void EndResize (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndResize(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndResize(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndResize (asyncResult As IAsyncResult)" />
      <MemberSignature Language="F#" Value="abstract member EndResize : IAsyncResult -&gt; unit&#xA;override this.EndResize : IAsyncResult -&gt; unit" Usage="cloudPageBlob.EndResize asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to resize the page blob.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSetPremiumBlobTier">
      <MemberSignature Language="C#" Value="public virtual void EndSetPremiumBlobTier (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndSetPremiumBlobTier(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndSetPremiumBlobTier(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndSetPremiumBlobTier (asyncResult As IAsyncResult)" />
      <MemberSignature Language="F#" Value="abstract member EndSetPremiumBlobTier : IAsyncResult -&gt; unit&#xA;override this.EndSetPremiumBlobTier : IAsyncResult -&gt; unit" Usage="cloudPageBlob.EndSetPremiumBlobTier asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to set the tier of the premium blob.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSetSequenceNumber">
      <MemberSignature Language="C#" Value="public virtual void EndSetSequenceNumber (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndSetSequenceNumber(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndSetSequenceNumber(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndSetSequenceNumber (asyncResult As IAsyncResult)" />
      <MemberSignature Language="F#" Value="abstract member EndSetSequenceNumber : IAsyncResult -&gt; unit&#xA;override this.EndSetSequenceNumber : IAsyncResult -&gt; unit" Usage="cloudPageBlob.EndSetSequenceNumber asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to set the page blob's sequence number.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndStartIncrementalCopy">
      <MemberSignature Language="C#" Value="public virtual string EndStartIncrementalCopy (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string EndStartIncrementalCopy(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndStartIncrementalCopy(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndStartIncrementalCopy (asyncResult As IAsyncResult) As String" />
      <MemberSignature Language="F#" Value="abstract member EndStartIncrementalCopy : IAsyncResult -&gt; string&#xA;override this.EndStartIncrementalCopy : IAsyncResult -&gt; string" Usage="cloudPageBlob.EndStartIncrementalCopy asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to start an incremental copy of another blob's contents, properties, and metadata to this blob.
            </summary>
        <returns>A string containing the copy ID associated with the copy operation.</returns>
        <remarks>
            This method fetches the blob's ETag, last-modified time, and part of the copy state.
            The copy ID and copy status fields are fetched, and the rest of the copy state is cleared.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUploadFromByteArray">
      <MemberSignature Language="C#" Value="public virtual void EndUploadFromByteArray (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndUploadFromByteArray(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndUploadFromByteArray(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndUploadFromByteArray (asyncResult As IAsyncResult)" />
      <MemberSignature Language="F#" Value="abstract member EndUploadFromByteArray : IAsyncResult -&gt; unit&#xA;override this.EndUploadFromByteArray : IAsyncResult -&gt; unit" Usage="cloudPageBlob.EndUploadFromByteArray asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndUploadFromByteArray(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to upload the contents of a byte array to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUploadFromFile">
      <MemberSignature Language="C#" Value="public virtual void EndUploadFromFile (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndUploadFromFile(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndUploadFromFile(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndUploadFromFile (asyncResult As IAsyncResult)" />
      <MemberSignature Language="F#" Value="abstract member EndUploadFromFile : IAsyncResult -&gt; unit&#xA;override this.EndUploadFromFile : IAsyncResult -&gt; unit" Usage="cloudPageBlob.EndUploadFromFile asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndUploadFromFile(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to upload a file to a page blob. 
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUploadFromStream">
      <MemberSignature Language="C#" Value="public virtual void EndUploadFromStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndUploadFromStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndUploadFromStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndUploadFromStream (asyncResult As IAsyncResult)" />
      <MemberSignature Language="F#" Value="abstract member EndUploadFromStream : IAsyncResult -&gt; unit&#xA;override this.EndUploadFromStream : IAsyncResult -&gt; unit" Usage="cloudPageBlob.EndUploadFromStream asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndUploadFromStream(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to upload a stream to a page blob. 
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWritePages">
      <MemberSignature Language="C#" Value="public virtual void EndWritePages (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndWritePages(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndWritePages(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndWritePages (asyncResult As IAsyncResult)" />
      <MemberSignature Language="F#" Value="abstract member EndWritePages : IAsyncResult -&gt; unit&#xA;override this.EndWritePages : IAsyncResult -&gt; unit" Usage="cloudPageBlob.EndWritePages asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to write pages to a page blob.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPageRanges">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.PageRange&gt; GetPageRanges (long? offset = default, long? length = default, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Storage.Blob.PageRange&gt; GetPageRanges(valuetype System.Nullable`1&lt;int64&gt; offset, valuetype System.Nullable`1&lt;int64&gt; length, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRanges(System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPageRanges (Optional offset As Nullable(Of Long) = Nothing, Optional length As Nullable(Of Long) = Nothing, Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing) As IEnumerable(Of PageRange)" />
      <MemberSignature Language="F#" Value="abstract member GetPageRanges : Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; seq&lt;Microsoft.Azure.Storage.Blob.PageRange&gt;&#xA;override this.GetPageRanges : Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; seq&lt;Microsoft.Azure.Storage.Blob.PageRange&gt;" Usage="cloudPageBlob.GetPageRanges (offset, length, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.PageRange&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="offset">The starting offset of the data range over which to list page ranges, in bytes. Must be a multiple of 512.</param>
        <param name="length">The length of the data range over which to list page ranges, in bytes. Must be a multiple of 512.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Gets a collection of valid page ranges and their starting and ending bytes.
            </summary>
        <returns>An enumerable collection of page ranges.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPageRangesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.PageRange&gt;&gt; GetPageRangesAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Storage.Blob.PageRange&gt;&gt; GetPageRangesAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPageRangesAsync () As Task(Of IEnumerable(Of PageRange))" />
      <MemberSignature Language="F#" Value="abstract member GetPageRangesAsync : unit -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Storage.Blob.PageRange&gt;&gt;&#xA;override this.GetPageRangesAsync : unit -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Storage.Blob.PageRange&gt;&gt;" Usage="cloudPageBlob.GetPageRangesAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.PageRange&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Initiates an asynchronous operation to return a collection of page ranges and their starting and ending bytes.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that is an enumerable collection of type <see cref="T:Microsoft.Azure.Storage.Blob.PageRange" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPageRangesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.PageRange&gt;&gt; GetPageRangesAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Storage.Blob.PageRange&gt;&gt; GetPageRangesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPageRangesAsync (cancellationToken As CancellationToken) As Task(Of IEnumerable(Of PageRange))" />
      <MemberSignature Language="F#" Value="abstract member GetPageRangesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Storage.Blob.PageRange&gt;&gt;&#xA;override this.GetPageRangesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Storage.Blob.PageRange&gt;&gt;" Usage="cloudPageBlob.GetPageRangesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.PageRange&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to return a collection of page ranges and their starting and ending bytes.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that is an enumerable collection of type <see cref="T:Microsoft.Azure.Storage.Blob.PageRange" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPageRangesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.PageRange&gt;&gt; GetPageRangesAsync (long? offset, long? length, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Storage.Blob.PageRange&gt;&gt; GetPageRangesAsync(valuetype System.Nullable`1&lt;int64&gt; offset, valuetype System.Nullable`1&lt;int64&gt; length, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPageRangesAsync (offset As Nullable(Of Long), length As Nullable(Of Long), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of IEnumerable(Of PageRange))" />
      <MemberSignature Language="F#" Value="abstract member GetPageRangesAsync : Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Storage.Blob.PageRange&gt;&gt;&#xA;override this.GetPageRangesAsync : Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Storage.Blob.PageRange&gt;&gt;" Usage="cloudPageBlob.GetPageRangesAsync (offset, length, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.PageRange&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="offset">The starting offset of the data range, in bytes. Must be a multiple of 512.</param>
        <param name="length">The length of the data range, in bytes. Must be a multiple of 512.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to return a collection of page ranges and their starting and ending bytes.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that is an enumerable collection of type <see cref="T:Microsoft.Azure.Storage.Blob.PageRange" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPageRangesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.PageRange&gt;&gt; GetPageRangesAsync (long? offset, long? length, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Storage.Blob.PageRange&gt;&gt; GetPageRangesAsync(valuetype System.Nullable`1&lt;int64&gt; offset, valuetype System.Nullable`1&lt;int64&gt; length, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPageRangesAsync (offset As Nullable(Of Long), length As Nullable(Of Long), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of IEnumerable(Of PageRange))" />
      <MemberSignature Language="F#" Value="abstract member GetPageRangesAsync : Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Storage.Blob.PageRange&gt;&gt;&#xA;override this.GetPageRangesAsync : Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Storage.Blob.PageRange&gt;&gt;" Usage="cloudPageBlob.GetPageRangesAsync (offset, length, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.PageRange&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="offset">The starting offset of the data range, in bytes. Must be a multiple of 512.</param>
        <param name="length">The length of the data range, in bytes. Must be a multiple of 512.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to return a collection of page ranges and their starting and ending bytes.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that is an enumerable collection of type <see cref="T:Microsoft.Azure.Storage.Blob.PageRange" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPageRangesDiff">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.PageDiffRange&gt; GetPageRangesDiff (DateTimeOffset previousSnapshotTime, long? offset = default, long? length = default, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Storage.Blob.PageDiffRange&gt; GetPageRangesDiff(valuetype System.DateTimeOffset previousSnapshotTime, valuetype System.Nullable`1&lt;int64&gt; offset, valuetype System.Nullable`1&lt;int64&gt; length, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesDiff(System.DateTimeOffset,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPageRangesDiff (previousSnapshotTime As DateTimeOffset, Optional offset As Nullable(Of Long) = Nothing, Optional length As Nullable(Of Long) = Nothing, Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing) As IEnumerable(Of PageDiffRange)" />
      <MemberSignature Language="F#" Value="abstract member GetPageRangesDiff : DateTimeOffset * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; seq&lt;Microsoft.Azure.Storage.Blob.PageDiffRange&gt;&#xA;override this.GetPageRangesDiff : DateTimeOffset * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; seq&lt;Microsoft.Azure.Storage.Blob.PageDiffRange&gt;" Usage="cloudPageBlob.GetPageRangesDiff (previousSnapshotTime, offset, length, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.PageDiffRange&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previousSnapshotTime" Type="System.DateTimeOffset" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="previousSnapshotTime">A <see cref="T:System.DateTimeOffset" /> representing the snapshot timestamp to use as the starting point for the diff. If this CloudPageBlob represents a snapshot, the previousSnapshotTime parameter must be prior to the current snapshot timestamp.</param>
        <param name="offset">The starting offset of the data range over which to list page ranges, in bytes. Must be a multiple of 512.</param>
        <param name="length">The length of the data range over which to list page ranges, in bytes. Must be a multiple of 512.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Gets the collection of page ranges that differ between a specified snapshot and this object.
            </summary>
        <returns>An enumerable collection of page ranges.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPageRangesDiffAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.PageDiffRange&gt;&gt; GetPageRangesDiffAsync (DateTimeOffset previousSnapshotTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Storage.Blob.PageDiffRange&gt;&gt; GetPageRangesDiffAsync(valuetype System.DateTimeOffset previousSnapshotTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesDiffAsync(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPageRangesDiffAsync (previousSnapshotTime As DateTimeOffset) As Task(Of IEnumerable(Of PageDiffRange))" />
      <MemberSignature Language="F#" Value="abstract member GetPageRangesDiffAsync : DateTimeOffset -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Storage.Blob.PageDiffRange&gt;&gt;&#xA;override this.GetPageRangesDiffAsync : DateTimeOffset -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Storage.Blob.PageDiffRange&gt;&gt;" Usage="cloudPageBlob.GetPageRangesDiffAsync previousSnapshotTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.PageDiffRange&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previousSnapshotTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="previousSnapshotTime">A <see cref="T:System.DateTimeOffset" /> representing the snapshot timestamp to use as the starting point for the diff. If this CloudPageBlob represents a snapshot, the previousSnapshotTime parameter must be prior to the current snapshot timestamp.</param>
        <summary>
            Initiates an asynchronous operation to return the collection of page ranges that differ between a specified snapshot and this object.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that is an enumerable collection of type <see cref="T:Microsoft.Azure.Storage.Blob.PageRange" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPageRangesDiffAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.PageDiffRange&gt;&gt; GetPageRangesDiffAsync (DateTimeOffset previousSnapshotTime, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Storage.Blob.PageDiffRange&gt;&gt; GetPageRangesDiffAsync(valuetype System.DateTimeOffset previousSnapshotTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesDiffAsync(System.DateTimeOffset,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPageRangesDiffAsync (previousSnapshotTime As DateTimeOffset, cancellationToken As CancellationToken) As Task(Of IEnumerable(Of PageDiffRange))" />
      <MemberSignature Language="F#" Value="abstract member GetPageRangesDiffAsync : DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Storage.Blob.PageDiffRange&gt;&gt;&#xA;override this.GetPageRangesDiffAsync : DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Storage.Blob.PageDiffRange&gt;&gt;" Usage="cloudPageBlob.GetPageRangesDiffAsync (previousSnapshotTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.PageDiffRange&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previousSnapshotTime" Type="System.DateTimeOffset" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="previousSnapshotTime">A <see cref="T:System.DateTimeOffset" /> representing the snapshot timestamp to use as the starting point for the diff. If this CloudPageBlob represents a snapshot, the previousSnapshotTime parameter must be prior to the current snapshot timestamp.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to return the collection of page ranges that differ between a specified snapshot and this object.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that is an enumerable collection of type <see cref="T:Microsoft.Azure.Storage.Blob.PageRange" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPageRangesDiffAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.PageDiffRange&gt;&gt; GetPageRangesDiffAsync (DateTimeOffset previousSnapshotTime, long? offset, long? length, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Storage.Blob.PageDiffRange&gt;&gt; GetPageRangesDiffAsync(valuetype System.DateTimeOffset previousSnapshotTime, valuetype System.Nullable`1&lt;int64&gt; offset, valuetype System.Nullable`1&lt;int64&gt; length, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesDiffAsync(System.DateTimeOffset,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPageRangesDiffAsync (previousSnapshotTime As DateTimeOffset, offset As Nullable(Of Long), length As Nullable(Of Long), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of IEnumerable(Of PageDiffRange))" />
      <MemberSignature Language="F#" Value="abstract member GetPageRangesDiffAsync : DateTimeOffset * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Storage.Blob.PageDiffRange&gt;&gt;&#xA;override this.GetPageRangesDiffAsync : DateTimeOffset * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Storage.Blob.PageDiffRange&gt;&gt;" Usage="cloudPageBlob.GetPageRangesDiffAsync (previousSnapshotTime, offset, length, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.PageDiffRange&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previousSnapshotTime" Type="System.DateTimeOffset" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="previousSnapshotTime">A <see cref="T:System.DateTimeOffset" /> representing the snapshot timestamp to use as the starting point for the diff. If this CloudPageBlob represents a snapshot, the previousSnapshotTime parameter must be prior to the current snapshot timestamp.</param>
        <param name="offset">The starting offset of the data range, in bytes. Must be a multiple of 512.</param>
        <param name="length">The length of the data range, in bytes. Must be a multiple of 512.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to return the collection of page ranges that differ between a specified snapshot and this object.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that is an enumerable collection of type <see cref="T:Microsoft.Azure.Storage.Blob.PageRange" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPageRangesDiffAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.PageDiffRange&gt;&gt; GetPageRangesDiffAsync (DateTimeOffset previousSnapshotTime, long? offset, long? length, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Storage.Blob.PageDiffRange&gt;&gt; GetPageRangesDiffAsync(valuetype System.DateTimeOffset previousSnapshotTime, valuetype System.Nullable`1&lt;int64&gt; offset, valuetype System.Nullable`1&lt;int64&gt; length, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesDiffAsync(System.DateTimeOffset,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPageRangesDiffAsync (previousSnapshotTime As DateTimeOffset, offset As Nullable(Of Long), length As Nullable(Of Long), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of IEnumerable(Of PageDiffRange))" />
      <MemberSignature Language="F#" Value="abstract member GetPageRangesDiffAsync : DateTimeOffset * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Storage.Blob.PageDiffRange&gt;&gt;&#xA;override this.GetPageRangesDiffAsync : DateTimeOffset * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Storage.Blob.PageDiffRange&gt;&gt;" Usage="cloudPageBlob.GetPageRangesDiffAsync (previousSnapshotTime, offset, length, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.PageDiffRange&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previousSnapshotTime" Type="System.DateTimeOffset" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="previousSnapshotTime">A <see cref="T:System.DateTimeOffset" /> representing the snapshot timestamp to use as the starting point for the diff. If this CloudPageBlob represents a snapshot, the previousSnapshotTime parameter must be prior to the current snapshot timestamp.</param>
        <param name="offset">The starting offset of the data range, in bytes. Must be a multiple of 512.</param>
        <param name="length">The length of the data range, in bytes. Must be a multiple of 512.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to return the collection of page ranges that differ between a specified snapshot and this object.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that is an enumerable collection of type <see cref="T:Microsoft.Azure.Storage.Blob.PageRange" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.Blob.CloudBlobStream OpenWrite (long? size, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.Blob.CloudBlobStream OpenWrite(valuetype System.Nullable`1&lt;int64&gt; size, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.OpenWrite(System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenWrite (size As Nullable(Of Long), Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing) As CloudBlobStream" />
      <MemberSignature Language="F#" Value="abstract member OpenWrite : Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; Microsoft.Azure.Storage.Blob.CloudBlobStream&#xA;override this.OpenWrite : Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; Microsoft.Azure.Storage.Blob.CloudBlobStream" Usage="cloudPageBlob.OpenWrite (size, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.Blob.CloudBlobStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="size">The size of the page blob, in bytes. The size must be a multiple of 512. If <c>null</c>, the page blob must already exist.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Opens a stream for writing to the blob. If the blob already exists, then existing data in the blob may be overwritten.
            </summary>
        <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream" /> object.</returns>
        <remarks>
          <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" /> method under the covers.</para>
          <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudPageBlob.StreamWriteSizeInBytes" /> property before calling this method to specify the block size to write, in bytes, 
            ranging from between 16 KB and 4 MB inclusive.</para>
          <para>To throw an exception if the blob exists instead of overwriting it, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition" />
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt; OpenWriteAsync (long? size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.Blob.CloudBlobStream&gt; OpenWriteAsync(valuetype System.Nullable`1&lt;int64&gt; size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.OpenWriteAsync(System.Nullable{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenWriteAsync (size As Nullable(Of Long)) As Task(Of CloudBlobStream)" />
      <MemberSignature Language="F#" Value="abstract member OpenWriteAsync : Nullable&lt;int64&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;&#xA;override this.OpenWriteAsync : Nullable&lt;int64&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;" Usage="cloudPageBlob.OpenWriteAsync size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Nullable&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="size">The size of the page blob, in bytes. The size must be a multiple of 512. If <c>null</c>, the page blob must already exist.</param>
        <summary>
            Initiates an asynchronous operation to open a stream for writing to the blob. If the blob already exists, then existing data in the blob may be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream" /> that represents the asynchronous operation.</returns>
        <remarks>
          <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" /> method under the covers.</para>
          <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudPageBlob.StreamWriteSizeInBytes" /> property before calling this method to specify the page size to write, in multiples of 512 bytes, 
            ranging from between 512 and 4 MB inclusive.</para>
          <para>To throw an exception if the blob exists instead of overwriting it, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.OpenWriteAsync(System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt; OpenWriteAsync (long? size, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.Blob.CloudBlobStream&gt; OpenWriteAsync(valuetype System.Nullable`1&lt;int64&gt; size, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.OpenWriteAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenWriteAsync (size As Nullable(Of Long), cancellationToken As CancellationToken) As Task(Of CloudBlobStream)" />
      <MemberSignature Language="F#" Value="abstract member OpenWriteAsync : Nullable&lt;int64&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;&#xA;override this.OpenWriteAsync : Nullable&lt;int64&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;" Usage="cloudPageBlob.OpenWriteAsync (size, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="size">The size of the page blob, in bytes. The size must be a multiple of 512. If <c>null</c>, the page blob must already exist.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to open a stream for writing to the blob. If the blob already exists, then existing data in the blob may be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream" /> that represents the asynchronous operation.</returns>
        <remarks>
          <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" /> method under the covers.</para>
          <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudPageBlob.StreamWriteSizeInBytes" /> property before calling this method to specify the page size to write, in multiples of 512 bytes, 
            ranging from between 512 and 4 MB inclusive.</para>
          <para>To throw an exception if the blob exists instead of overwriting it, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.OpenWriteAsync(System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt; OpenWriteAsync (long? size, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.Blob.CloudBlobStream&gt; OpenWriteAsync(valuetype System.Nullable`1&lt;int64&gt; size, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.OpenWriteAsync(System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenWriteAsync (size As Nullable(Of Long), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of CloudBlobStream)" />
      <MemberSignature Language="F#" Value="abstract member OpenWriteAsync : Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;&#xA;override this.OpenWriteAsync : Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;" Usage="cloudPageBlob.OpenWriteAsync (size, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="size">The size of the page blob, in bytes. The size must be a multiple of 512. If <c>null</c>, the page blob must already exist.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to open a stream for writing to the blob. If the blob already exists, then existing data in the blob may be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream" /> that represents the asynchronous operation.</returns>
        <remarks>
          <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" /> method under the covers.</para>
          <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudPageBlob.StreamWriteSizeInBytes" /> property before calling this method to specify the page size to write, in multiples of 512 bytes, 
            ranging from between 512 and 4 MB inclusive.</para>
          <para>To throw an exception if the blob exists instead of overwriting it, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition" />
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt; OpenWriteAsync (long? size, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.Blob.CloudBlobStream&gt; OpenWriteAsync(valuetype System.Nullable`1&lt;int64&gt; size, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.OpenWriteAsync(System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenWriteAsync (size As Nullable(Of Long), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of CloudBlobStream)" />
      <MemberSignature Language="F#" Value="abstract member OpenWriteAsync : Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;&#xA;override this.OpenWriteAsync : Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;" Usage="cloudPageBlob.OpenWriteAsync (size, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="size">The size of the page blob, in bytes. The size must be a multiple of 512. If <c>null</c>, the page blob must already exist.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to open a stream for writing to the blob. If the blob already exists, then existing data in the blob may be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream" /> that represents the asynchronous operation.</returns>
        <remarks>
          <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" /> method under the covers.</para>
          <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudPageBlob.StreamWriteSizeInBytes" /> property before calling this method to specify the page size to write, in multiples of 512 bytes, 
            ranging from between 512 and 4 MB inclusive.</para>
          <para>To throw an exception if the blob exists instead of overwriting it, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition" />
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt; OpenWriteAsync (long? size, Microsoft.Azure.Storage.Blob.PremiumPageBlobTier? premiumPageBlobTier, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.Blob.CloudBlobStream&gt; OpenWriteAsync(valuetype System.Nullable`1&lt;int64&gt; size, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; premiumPageBlobTier, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.OpenWriteAsync(System.Nullable{System.Int64},System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenWriteAsync (size As Nullable(Of Long), premiumPageBlobTier As Nullable(Of PremiumPageBlobTier), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of CloudBlobStream)" />
      <MemberSignature Language="F#" Value="abstract member OpenWriteAsync : Nullable&lt;int64&gt; * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;&#xA;override this.OpenWriteAsync : Nullable&lt;int64&gt; * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;" Usage="cloudPageBlob.OpenWriteAsync (size, premiumPageBlobTier, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="premiumPageBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="size">The size of the page blob, in bytes. The size must be a multiple of 512. If <c>null</c>, the page blob must already exist.</param>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to open a stream for writing to the blob. If the blob already exists, then existing data in the blob may be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream" /> that represents the asynchronous operation.</returns>
        <remarks>
          <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" /> method under the covers.</para>
          <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudPageBlob.StreamWriteSizeInBytes" /> property before calling this method to specify the page size to write, in multiples of 512 bytes, 
            ranging from between 512 and 4 MB inclusive.</para>
          <para>To throw an exception if the blob exists instead of overwriting it, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition" />
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public virtual void Resize (long size, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Resize(int64 size, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.Resize(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Resize (size As Long, Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member Resize : int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.Resize : int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudPageBlob.Resize (size, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="size">The size of the page blob, in bytes.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Resizes the page blob to the specified size.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResizeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ResizeAsync (long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ResizeAsync(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ResizeAsync(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResizeAsync (size As Long) As Task" />
      <MemberSignature Language="F#" Value="abstract member ResizeAsync : int64 -&gt; System.Threading.Tasks.Task&#xA;override this.ResizeAsync : int64 -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.ResizeAsync size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">The size of the blob, in bytes.</param>
        <summary>
            Initiates an asynchronous operation to resize the page blob to the specified size.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResizeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ResizeAsync (long size, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ResizeAsync(int64 size, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ResizeAsync(System.Int64,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResizeAsync (size As Long, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member ResizeAsync : int64 * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.ResizeAsync : int64 * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.ResizeAsync (size, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="size">The size of the blob, in bytes.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to resize the page blob to the specified size.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResizeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ResizeAsync (long size, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ResizeAsync(int64 size, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ResizeAsync(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResizeAsync (size As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member ResizeAsync : int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&#xA;override this.ResizeAsync : int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.ResizeAsync (size, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="size">The size of the blob, in bytes.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to resize the page blob to the specified size.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResizeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ResizeAsync (long size, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ResizeAsync(int64 size, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ResizeAsync(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResizeAsync (size As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member ResizeAsync : int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.ResizeAsync : int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.ResizeAsync (size, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="size">The size of the blob, in bytes.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to resize the page blob to the specified size.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPremiumBlobTier">
      <MemberSignature Language="C#" Value="public virtual void SetPremiumBlobTier (Microsoft.Azure.Storage.Blob.PremiumPageBlobTier premiumPageBlobTier, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPremiumBlobTier(valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier premiumPageBlobTier, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetPremiumBlobTier(Microsoft.Azure.Storage.Blob.PremiumPageBlobTier,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetPremiumBlobTier (premiumPageBlobTier As PremiumPageBlobTier, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member SetPremiumBlobTier : Microsoft.Azure.Storage.Blob.PremiumPageBlobTier * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.SetPremiumBlobTier : Microsoft.Azure.Storage.Blob.PremiumPageBlobTier * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudPageBlob.SetPremiumBlobTier (premiumPageBlobTier, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="premiumPageBlobTier" Type="Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request, or <c>null</c>. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Sets the tier of the premium blob.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPremiumBlobTierAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetPremiumBlobTierAsync (Microsoft.Azure.Storage.Blob.PremiumPageBlobTier premiumPageBlobTier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetPremiumBlobTierAsync(valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier premiumPageBlobTier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetPremiumBlobTierAsync(Microsoft.Azure.Storage.Blob.PremiumPageBlobTier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetPremiumBlobTierAsync (premiumPageBlobTier As PremiumPageBlobTier) As Task" />
      <MemberSignature Language="F#" Value="abstract member SetPremiumBlobTierAsync : Microsoft.Azure.Storage.Blob.PremiumPageBlobTier -&gt; System.Threading.Tasks.Task&#xA;override this.SetPremiumBlobTierAsync : Microsoft.Azure.Storage.Blob.PremiumPageBlobTier -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.SetPremiumBlobTierAsync premiumPageBlobTier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="premiumPageBlobTier" Type="Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" />
      </Parameters>
      <Docs>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <summary>
            Initiates an asynchronous operation to set the tier of the premium blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPremiumBlobTierAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetPremiumBlobTierAsync (Microsoft.Azure.Storage.Blob.PremiumPageBlobTier premiumPageBlobTier, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetPremiumBlobTierAsync(valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier premiumPageBlobTier, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetPremiumBlobTierAsync(Microsoft.Azure.Storage.Blob.PremiumPageBlobTier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetPremiumBlobTierAsync (premiumPageBlobTier As PremiumPageBlobTier, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member SetPremiumBlobTierAsync : Microsoft.Azure.Storage.Blob.PremiumPageBlobTier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SetPremiumBlobTierAsync : Microsoft.Azure.Storage.Blob.PremiumPageBlobTier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.SetPremiumBlobTierAsync (premiumPageBlobTier, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="premiumPageBlobTier" Type="Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to set the tier of the premium blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPremiumBlobTierAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetPremiumBlobTierAsync (Microsoft.Azure.Storage.Blob.PremiumPageBlobTier premiumPageBlobTier, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetPremiumBlobTierAsync(valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier premiumPageBlobTier, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetPremiumBlobTierAsync(Microsoft.Azure.Storage.Blob.PremiumPageBlobTier,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetPremiumBlobTierAsync (premiumPageBlobTier As PremiumPageBlobTier, options As BlobRequestOptions, operationContext As OperationContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member SetPremiumBlobTierAsync : Microsoft.Azure.Storage.Blob.PremiumPageBlobTier * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&#xA;override this.SetPremiumBlobTierAsync : Microsoft.Azure.Storage.Blob.PremiumPageBlobTier * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.SetPremiumBlobTierAsync (premiumPageBlobTier, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="premiumPageBlobTier" Type="Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to set the tier of the premium blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPremiumBlobTierAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetPremiumBlobTierAsync (Microsoft.Azure.Storage.Blob.PremiumPageBlobTier premiumPageBlobTier, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetPremiumBlobTierAsync(valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier premiumPageBlobTier, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetPremiumBlobTierAsync(Microsoft.Azure.Storage.Blob.PremiumPageBlobTier,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetPremiumBlobTierAsync (premiumPageBlobTier As PremiumPageBlobTier, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member SetPremiumBlobTierAsync : Microsoft.Azure.Storage.Blob.PremiumPageBlobTier * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SetPremiumBlobTierAsync : Microsoft.Azure.Storage.Blob.PremiumPageBlobTier * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.SetPremiumBlobTierAsync (premiumPageBlobTier, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="premiumPageBlobTier" Type="Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to set the premium tier of the blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSequenceNumber">
      <MemberSignature Language="C#" Value="public virtual void SetSequenceNumber (Microsoft.Azure.Storage.Blob.SequenceNumberAction sequenceNumberAction, long? sequenceNumber, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSequenceNumber(valuetype Microsoft.Azure.Storage.Blob.SequenceNumberAction sequenceNumberAction, valuetype System.Nullable`1&lt;int64&gt; sequenceNumber, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetSequenceNumber(Microsoft.Azure.Storage.Blob.SequenceNumberAction,System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetSequenceNumber (sequenceNumberAction As SequenceNumberAction, sequenceNumber As Nullable(Of Long), Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member SetSequenceNumber : Microsoft.Azure.Storage.Blob.SequenceNumberAction * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.SetSequenceNumber : Microsoft.Azure.Storage.Blob.SequenceNumberAction * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudPageBlob.SetSequenceNumber (sequenceNumberAction, sequenceNumber, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumberAction" Type="Microsoft.Azure.Storage.Blob.SequenceNumberAction" />
        <Parameter Name="sequenceNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="sequenceNumberAction">A value of type <see cref="T:Microsoft.Azure.Storage.Blob.SequenceNumberAction" />, indicating the operation to perform on the sequence number.</param>
        <param name="sequenceNumber">The sequence number. Set this parameter to <c>null</c> if <paramref name="sequenceNumberAction" /> is equal to <see cref="F:SequenceNumberAction.Increment" />.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Sets the page blob's sequence number.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSequenceNumberAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetSequenceNumberAsync (Microsoft.Azure.Storage.Blob.SequenceNumberAction sequenceNumberAction, long? sequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetSequenceNumberAsync(valuetype Microsoft.Azure.Storage.Blob.SequenceNumberAction sequenceNumberAction, valuetype System.Nullable`1&lt;int64&gt; sequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetSequenceNumberAsync(Microsoft.Azure.Storage.Blob.SequenceNumberAction,System.Nullable{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetSequenceNumberAsync (sequenceNumberAction As SequenceNumberAction, sequenceNumber As Nullable(Of Long)) As Task" />
      <MemberSignature Language="F#" Value="abstract member SetSequenceNumberAsync : Microsoft.Azure.Storage.Blob.SequenceNumberAction * Nullable&lt;int64&gt; -&gt; System.Threading.Tasks.Task&#xA;override this.SetSequenceNumberAsync : Microsoft.Azure.Storage.Blob.SequenceNumberAction * Nullable&lt;int64&gt; -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.SetSequenceNumberAsync (sequenceNumberAction, sequenceNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumberAction" Type="Microsoft.Azure.Storage.Blob.SequenceNumberAction" />
        <Parameter Name="sequenceNumber" Type="System.Nullable&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="sequenceNumberAction">A value of type <see cref="T:Microsoft.Azure.Storage.Blob.SequenceNumberAction" />, indicating the operation to perform on the sequence number.</param>
        <param name="sequenceNumber">The sequence number. Set this parameter to <c>null</c> if <paramref name="sequenceNumberAction" /> is equal to <see cref="F:SequenceNumberAction.Increment" />.</param>
        <summary>
            Initiates an asynchronous operation to set the page blob's sequence number.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSequenceNumberAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetSequenceNumberAsync (Microsoft.Azure.Storage.Blob.SequenceNumberAction sequenceNumberAction, long? sequenceNumber, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetSequenceNumberAsync(valuetype Microsoft.Azure.Storage.Blob.SequenceNumberAction sequenceNumberAction, valuetype System.Nullable`1&lt;int64&gt; sequenceNumber, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetSequenceNumberAsync(Microsoft.Azure.Storage.Blob.SequenceNumberAction,System.Nullable{System.Int64},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetSequenceNumberAsync (sequenceNumberAction As SequenceNumberAction, sequenceNumber As Nullable(Of Long), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member SetSequenceNumberAsync : Microsoft.Azure.Storage.Blob.SequenceNumberAction * Nullable&lt;int64&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SetSequenceNumberAsync : Microsoft.Azure.Storage.Blob.SequenceNumberAction * Nullable&lt;int64&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.SetSequenceNumberAsync (sequenceNumberAction, sequenceNumber, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumberAction" Type="Microsoft.Azure.Storage.Blob.SequenceNumberAction" />
        <Parameter Name="sequenceNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sequenceNumberAction">A value of type <see cref="T:Microsoft.Azure.Storage.Blob.SequenceNumberAction" />, indicating the operation to perform on the sequence number.</param>
        <param name="sequenceNumber">The sequence number. Set this parameter to <c>null</c> if <paramref name="sequenceNumberAction" /> is equal to <see cref="F:SequenceNumberAction.Increment" />.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to set the page blob's sequence number.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSequenceNumberAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetSequenceNumberAsync (Microsoft.Azure.Storage.Blob.SequenceNumberAction sequenceNumberAction, long? sequenceNumber, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetSequenceNumberAsync(valuetype Microsoft.Azure.Storage.Blob.SequenceNumberAction sequenceNumberAction, valuetype System.Nullable`1&lt;int64&gt; sequenceNumber, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetSequenceNumberAsync(Microsoft.Azure.Storage.Blob.SequenceNumberAction,System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetSequenceNumberAsync (sequenceNumberAction As SequenceNumberAction, sequenceNumber As Nullable(Of Long), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member SetSequenceNumberAsync : Microsoft.Azure.Storage.Blob.SequenceNumberAction * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&#xA;override this.SetSequenceNumberAsync : Microsoft.Azure.Storage.Blob.SequenceNumberAction * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.SetSequenceNumberAsync (sequenceNumberAction, sequenceNumber, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumberAction" Type="Microsoft.Azure.Storage.Blob.SequenceNumberAction" />
        <Parameter Name="sequenceNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="sequenceNumberAction">A value of type <see cref="T:Microsoft.Azure.Storage.Blob.SequenceNumberAction" />, indicating the operation to perform on the sequence number.</param>
        <param name="sequenceNumber">The sequence number. Set this parameter to <c>null</c> if <paramref name="sequenceNumberAction" /> is equal to <see cref="F:SequenceNumberAction.Increment" />.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to set the page blob's sequence number.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSequenceNumberAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetSequenceNumberAsync (Microsoft.Azure.Storage.Blob.SequenceNumberAction sequenceNumberAction, long? sequenceNumber, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetSequenceNumberAsync(valuetype Microsoft.Azure.Storage.Blob.SequenceNumberAction sequenceNumberAction, valuetype System.Nullable`1&lt;int64&gt; sequenceNumber, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetSequenceNumberAsync(Microsoft.Azure.Storage.Blob.SequenceNumberAction,System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetSequenceNumberAsync (sequenceNumberAction As SequenceNumberAction, sequenceNumber As Nullable(Of Long), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member SetSequenceNumberAsync : Microsoft.Azure.Storage.Blob.SequenceNumberAction * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SetSequenceNumberAsync : Microsoft.Azure.Storage.Blob.SequenceNumberAction * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.SetSequenceNumberAsync (sequenceNumberAction, sequenceNumber, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumberAction" Type="Microsoft.Azure.Storage.Blob.SequenceNumberAction" />
        <Parameter Name="sequenceNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sequenceNumberAction">A value of type <see cref="T:Microsoft.Azure.Storage.Blob.SequenceNumberAction" />, indicating the operation to perform on the sequence number.</param>
        <param name="sequenceNumber">The sequence number. Set this parameter to <c>null</c> if <paramref name="sequenceNumberAction" /> is equal to <see cref="F:SequenceNumberAction.Increment" />.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to set the page blob's sequence number.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopy">
      <MemberSignature Language="C#" Value="public virtual string StartCopy (Microsoft.Azure.Storage.Blob.CloudPageBlob source, Microsoft.Azure.Storage.AccessCondition sourceAccessCondition = default, Microsoft.Azure.Storage.AccessCondition destAccessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string StartCopy(class Microsoft.Azure.Storage.Blob.CloudPageBlob source, class Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, class Microsoft.Azure.Storage.AccessCondition destAccessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartCopy(Microsoft.Azure.Storage.Blob.CloudPageBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCopy (source As CloudPageBlob, Optional sourceAccessCondition As AccessCondition = Nothing, Optional destAccessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing) As String" />
      <MemberSignature Language="F#" Value="override this.StartCopy : Microsoft.Azure.Storage.Blob.CloudPageBlob * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; string" Usage="cloudPageBlob.StartCopy (source, sourceAccessCondition, destAccessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Azure.Storage.Blob.CloudPageBlob" />
        <Parameter Name="sourceAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="destAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="source">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> that is the source blob.</param>
        <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
        <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Begins an operation to start copying another page blob's contents, properties, and metadata to this page blob.
            </summary>
        <returns>The copy ID associated with the copy operation.</returns>
        <remarks>
            This method fetches the blob's ETag, last-modified time, and part of the copy state.
            The copy ID and copy status fields are fetched, and the rest of the copy state is cleared.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopy">
      <MemberSignature Language="C#" Value="public virtual string StartCopy (Microsoft.Azure.Storage.Blob.CloudPageBlob source, Microsoft.Azure.Storage.Blob.PremiumPageBlobTier? premiumPageBlobTier, Microsoft.Azure.Storage.AccessCondition sourceAccessCondition = default, Microsoft.Azure.Storage.AccessCondition destAccessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string StartCopy(class Microsoft.Azure.Storage.Blob.CloudPageBlob source, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; premiumPageBlobTier, class Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, class Microsoft.Azure.Storage.AccessCondition destAccessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartCopy(Microsoft.Azure.Storage.Blob.CloudPageBlob,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCopy (source As CloudPageBlob, premiumPageBlobTier As Nullable(Of PremiumPageBlobTier), Optional sourceAccessCondition As AccessCondition = Nothing, Optional destAccessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing) As String" />
      <MemberSignature Language="F#" Value="override this.StartCopy : Microsoft.Azure.Storage.Blob.CloudPageBlob * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; string" Usage="cloudPageBlob.StartCopy (source, premiumPageBlobTier, sourceAccessCondition, destAccessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Azure.Storage.Blob.CloudPageBlob" />
        <Parameter Name="premiumPageBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt;" />
        <Parameter Name="sourceAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="destAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="source">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> that is the source blob.</param>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
        <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Begins an operation to start copying another page blob's contents, properties, and metadata to this page blob.
            </summary>
        <returns>The copy ID associated with the copy operation.</returns>
        <remarks>
            This method fetches the blob's ETag, last-modified time, and part of the copy state.
            The copy ID and copy status fields are fetched, and the rest of the copy state is cleared.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; StartCopyAsync (Microsoft.Azure.Storage.Blob.CloudPageBlob source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; StartCopyAsync(class Microsoft.Azure.Storage.Blob.CloudPageBlob source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudPageBlob)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCopyAsync (source As CloudPageBlob) As Task(Of String)" />
      <MemberSignature Language="F#" Value="override this.StartCopyAsync : Microsoft.Azure.Storage.Blob.CloudPageBlob -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="cloudPageBlob.StartCopyAsync source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Azure.Storage.Blob.CloudPageBlob" />
      </Parameters>
      <Docs>
        <param name="source">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> that is the source blob.</param>
        <summary>
            Initiates an asynchronous operation to start copying another blob's contents, properties, and metadata
            to this page blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <c>string</c> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; StartCopyAsync (Microsoft.Azure.Storage.Blob.CloudPageBlob source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; StartCopyAsync(class Microsoft.Azure.Storage.Blob.CloudPageBlob source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudPageBlob,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCopyAsync (source As CloudPageBlob, cancellationToken As CancellationToken) As Task(Of String)" />
      <MemberSignature Language="F#" Value="override this.StartCopyAsync : Microsoft.Azure.Storage.Blob.CloudPageBlob * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="cloudPageBlob.StartCopyAsync (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Azure.Storage.Blob.CloudPageBlob" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> that is the source blob.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to start copying another blob's contents, properties, and metadata
            to this page blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <c>string</c> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; StartCopyAsync (Microsoft.Azure.Storage.Blob.CloudPageBlob source, Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, Microsoft.Azure.Storage.AccessCondition destAccessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; StartCopyAsync(class Microsoft.Azure.Storage.Blob.CloudPageBlob source, class Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, class Microsoft.Azure.Storage.AccessCondition destAccessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudPageBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCopyAsync (source As CloudPageBlob, sourceAccessCondition As AccessCondition, destAccessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of String)" />
      <MemberSignature Language="F#" Value="override this.StartCopyAsync : Microsoft.Azure.Storage.Blob.CloudPageBlob * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="cloudPageBlob.StartCopyAsync (source, sourceAccessCondition, destAccessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Azure.Storage.Blob.CloudPageBlob" />
        <Parameter Name="sourceAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="destAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="source">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> that is the source blob.</param>
        <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
        <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to start copying another blob's contents, properties, and metadata
            to this page blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <c>string</c> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; StartCopyAsync (Microsoft.Azure.Storage.Blob.CloudPageBlob source, Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, Microsoft.Azure.Storage.AccessCondition destAccessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; StartCopyAsync(class Microsoft.Azure.Storage.Blob.CloudPageBlob source, class Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, class Microsoft.Azure.Storage.AccessCondition destAccessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudPageBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCopyAsync (source As CloudPageBlob, sourceAccessCondition As AccessCondition, destAccessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of String)" />
      <MemberSignature Language="F#" Value="override this.StartCopyAsync : Microsoft.Azure.Storage.Blob.CloudPageBlob * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="cloudPageBlob.StartCopyAsync (source, sourceAccessCondition, destAccessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Azure.Storage.Blob.CloudPageBlob" />
        <Parameter Name="sourceAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="destAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> that is the source blob.</param>
        <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
        <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to start copying another blob's contents, properties, and metadata
            to this page blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <c>string</c> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; StartCopyAsync (Microsoft.Azure.Storage.Blob.CloudPageBlob source, Microsoft.Azure.Storage.Blob.PremiumPageBlobTier? premiumPageBlobTier, Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, Microsoft.Azure.Storage.AccessCondition destAccessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; StartCopyAsync(class Microsoft.Azure.Storage.Blob.CloudPageBlob source, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; premiumPageBlobTier, class Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, class Microsoft.Azure.Storage.AccessCondition destAccessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudPageBlob,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCopyAsync (source As CloudPageBlob, premiumPageBlobTier As Nullable(Of PremiumPageBlobTier), sourceAccessCondition As AccessCondition, destAccessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of String)" />
      <MemberSignature Language="F#" Value="override this.StartCopyAsync : Microsoft.Azure.Storage.Blob.CloudPageBlob * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="cloudPageBlob.StartCopyAsync (source, premiumPageBlobTier, sourceAccessCondition, destAccessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Azure.Storage.Blob.CloudPageBlob" />
        <Parameter Name="premiumPageBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt;" />
        <Parameter Name="sourceAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="destAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> that is the source blob.</param>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
        <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to start copying another blob's contents, properties, and metadata
            to this page blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <c>string</c> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartIncrementalCopy">
      <MemberSignature Language="C#" Value="public virtual string StartIncrementalCopy (Microsoft.Azure.Storage.Blob.CloudPageBlob sourceSnapshot, Microsoft.Azure.Storage.AccessCondition destAccessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string StartIncrementalCopy(class Microsoft.Azure.Storage.Blob.CloudPageBlob sourceSnapshot, class Microsoft.Azure.Storage.AccessCondition destAccessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartIncrementalCopy(Microsoft.Azure.Storage.Blob.CloudPageBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartIncrementalCopy (sourceSnapshot As CloudPageBlob, Optional destAccessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing) As String" />
      <MemberSignature Language="F#" Value="abstract member StartIncrementalCopy : Microsoft.Azure.Storage.Blob.CloudPageBlob * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; string&#xA;override this.StartIncrementalCopy : Microsoft.Azure.Storage.Blob.CloudPageBlob * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; string" Usage="cloudPageBlob.StartIncrementalCopy (sourceSnapshot, destAccessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceSnapshot" Type="Microsoft.Azure.Storage.Blob.CloudPageBlob" />
        <Parameter Name="destAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="sourceSnapshot">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> that is the source blob which must be a snapshot.</param>
        <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Begins an operation to start an incremental copy of another page blob's contents, properties, and metadata to this page blob.
            </summary>
        <returns>The copy ID associated with the copy operation.</returns>
        <remarks>
            This method fetches the blob's ETag, last-modified time, and part of the copy state.
            The copy ID and copy status fields are fetched, and the rest of the copy state is cleared.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartIncrementalCopy">
      <MemberSignature Language="C#" Value="public virtual string StartIncrementalCopy (Uri sourceSnapshotUri, Microsoft.Azure.Storage.AccessCondition destAccessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string StartIncrementalCopy(class System.Uri sourceSnapshotUri, class Microsoft.Azure.Storage.AccessCondition destAccessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartIncrementalCopy(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartIncrementalCopy (sourceSnapshotUri As Uri, Optional destAccessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing) As String" />
      <MemberSignature Language="F#" Value="abstract member StartIncrementalCopy : Uri * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; string&#xA;override this.StartIncrementalCopy : Uri * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; string" Usage="cloudPageBlob.StartIncrementalCopy (sourceSnapshotUri, destAccessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceSnapshotUri" Type="System.Uri" />
        <Parameter Name="destAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="sourceSnapshotUri">The <see cref="T:System.Uri" /> of the source blob which must be a snapshot.</param>
        <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Begins an operation to start an incremental copy of another page blob's contents, properties, and metadata to this page blob.
            </summary>
        <returns>The copy ID associated with the copy operation.</returns>
        <remarks>
            This method fetches the blob's ETag, last-modified time, and part of the copy state.
            The copy ID and copy status fields are fetched, and the rest of the copy state is cleared.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartIncrementalCopyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; StartIncrementalCopyAsync (Microsoft.Azure.Storage.Blob.CloudPageBlob source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; StartIncrementalCopyAsync(class Microsoft.Azure.Storage.Blob.CloudPageBlob source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartIncrementalCopyAsync(Microsoft.Azure.Storage.Blob.CloudPageBlob)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartIncrementalCopyAsync (source As CloudPageBlob) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member StartIncrementalCopyAsync : Microsoft.Azure.Storage.Blob.CloudPageBlob -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.StartIncrementalCopyAsync : Microsoft.Azure.Storage.Blob.CloudPageBlob -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="cloudPageBlob.StartIncrementalCopyAsync source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Azure.Storage.Blob.CloudPageBlob" />
      </Parameters>
      <Docs>
        <param name="source">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> that is the source blob which must be a snapshot.</param>
        <summary>
            Initiates an asynchronous operation to start an incremental copy of another blob's contents, properties, and metadata
            to this page blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <c>string</c> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartIncrementalCopyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; StartIncrementalCopyAsync (Microsoft.Azure.Storage.Blob.CloudPageBlob source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; StartIncrementalCopyAsync(class Microsoft.Azure.Storage.Blob.CloudPageBlob source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartIncrementalCopyAsync(Microsoft.Azure.Storage.Blob.CloudPageBlob,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartIncrementalCopyAsync (source As CloudPageBlob, cancellationToken As CancellationToken) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member StartIncrementalCopyAsync : Microsoft.Azure.Storage.Blob.CloudPageBlob * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.StartIncrementalCopyAsync : Microsoft.Azure.Storage.Blob.CloudPageBlob * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="cloudPageBlob.StartIncrementalCopyAsync (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Azure.Storage.Blob.CloudPageBlob" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> that is the source blob which must be a snapshot.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to start an incremental copy of another blob's contents, properties, and metadata
            to this page blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <c>string</c> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartIncrementalCopyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; StartIncrementalCopyAsync (Microsoft.Azure.Storage.Blob.CloudPageBlob sourceSnapshot, Microsoft.Azure.Storage.AccessCondition destAccessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; StartIncrementalCopyAsync(class Microsoft.Azure.Storage.Blob.CloudPageBlob sourceSnapshot, class Microsoft.Azure.Storage.AccessCondition destAccessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartIncrementalCopyAsync(Microsoft.Azure.Storage.Blob.CloudPageBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartIncrementalCopyAsync (sourceSnapshot As CloudPageBlob, destAccessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member StartIncrementalCopyAsync : Microsoft.Azure.Storage.Blob.CloudPageBlob * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.StartIncrementalCopyAsync : Microsoft.Azure.Storage.Blob.CloudPageBlob * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="cloudPageBlob.StartIncrementalCopyAsync (sourceSnapshot, destAccessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceSnapshot" Type="Microsoft.Azure.Storage.Blob.CloudPageBlob" />
        <Parameter Name="destAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceSnapshot">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> that is the source blob which must be a snapshot.</param>
        <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to start an incremental copy of another blob's contents, properties, and metadata
            to this page blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <c>string</c> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartIncrementalCopyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; StartIncrementalCopyAsync (Uri sourceSnapshotUri, Microsoft.Azure.Storage.AccessCondition destAccessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; StartIncrementalCopyAsync(class System.Uri sourceSnapshotUri, class Microsoft.Azure.Storage.AccessCondition destAccessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartIncrementalCopyAsync(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartIncrementalCopyAsync (sourceSnapshotUri As Uri, destAccessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member StartIncrementalCopyAsync : Uri * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.StartIncrementalCopyAsync : Uri * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="cloudPageBlob.StartIncrementalCopyAsync (sourceSnapshotUri, destAccessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceSnapshotUri" Type="System.Uri" />
        <Parameter Name="destAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceSnapshotUri">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob" /> that is the source blob which must be a snapshot.</param>
        <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to start an incremental copy of another blob's contents, properties, and metadata
            to this page blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <c>string</c> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StreamWriteSizeInBytes">
      <MemberSignature Language="C#" Value="public int StreamWriteSizeInBytes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StreamWriteSizeInBytes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Storage.Blob.CloudPageBlob.StreamWriteSizeInBytes" />
      <MemberSignature Language="VB.NET" Value="Public Property StreamWriteSizeInBytes As Integer" />
      <MemberSignature Language="F#" Value="member this.StreamWriteSizeInBytes : int with get, set" Usage="Microsoft.Azure.Storage.Blob.CloudPageBlob.StreamWriteSizeInBytes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Azure.Storage.Blob.ICloudBlob.StreamWriteSizeInBytes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the number of bytes to buffer when writing to a page blob stream.
            </summary>
        <value>The number of bytes to buffer, ranging from between 512 bytes and 4 MB inclusive.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromByteArray">
      <MemberSignature Language="C#" Value="public virtual void UploadFromByteArray (byte[] buffer, int index, int count, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UploadFromByteArray(unsigned int8[] buffer, int32 index, int32 count, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UploadFromByteArray (buffer As Byte(), index As Integer, count As Integer, Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member UploadFromByteArray : byte[] * int * int * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.UploadFromByteArray : byte[] * int * int * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudPageBlob.UploadFromByteArray (buffer, index, count, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="buffer">An array of bytes.</param>
        <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
        <param name="count">The number of bytes to be written to the blob.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Uploads the contents of a byte array to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromByteArray">
      <MemberSignature Language="C#" Value="public virtual void UploadFromByteArray (byte[] buffer, int index, int count, Microsoft.Azure.Storage.Blob.PremiumPageBlobTier? premiumPageBlobTier, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UploadFromByteArray(unsigned int8[] buffer, int32 index, int32 count, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; premiumPageBlobTier, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UploadFromByteArray (buffer As Byte(), index As Integer, count As Integer, premiumPageBlobTier As Nullable(Of PremiumPageBlobTier), Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member UploadFromByteArray : byte[] * int * int * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.UploadFromByteArray : byte[] * int * int * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudPageBlob.UploadFromByteArray (buffer, index, count, premiumPageBlobTier, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="premiumPageBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="buffer">An array of bytes.</param>
        <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
        <param name="count">The number of bytes to be written to the blob.</param>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Uploads the contents of a byte array to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromByteArrayAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromByteArrayAsync (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromByteArrayAsync(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromByteArrayAsync (buffer As Byte(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromByteArrayAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromByteArrayAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.UploadFromByteArrayAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">An array of bytes.</param>
        <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
        <param name="count">The number of bytes to be written to the blob.</param>
        <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromByteArrayAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromByteArrayAsync (byte[] buffer, int index, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromByteArrayAsync(unsigned int8[] buffer, int32 index, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromByteArrayAsync (buffer As Byte(), index As Integer, count As Integer, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromByteArrayAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromByteArrayAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.UploadFromByteArrayAsync (buffer, index, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">An array of bytes.</param>
        <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
        <param name="count">The number of bytes to be written to the blob.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromByteArrayAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromByteArrayAsync (byte[] buffer, int index, int count, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromByteArrayAsync(unsigned int8[] buffer, int32 index, int32 count, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromByteArrayAsync (buffer As Byte(), index As Integer, count As Integer, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromByteArrayAsync : byte[] * int * int * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromByteArrayAsync : byte[] * int * int * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.UploadFromByteArrayAsync (buffer, index, count, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="buffer">An array of bytes.</param>
        <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
        <param name="count">The number of bytes to be written to the blob.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromByteArrayAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromByteArrayAsync (byte[] buffer, int index, int count, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromByteArrayAsync(unsigned int8[] buffer, int32 index, int32 count, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromByteArrayAsync (buffer As Byte(), index As Integer, count As Integer, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromByteArrayAsync : byte[] * int * int * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromByteArrayAsync : byte[] * int * int * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.UploadFromByteArrayAsync (buffer, index, count, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">An array of bytes.</param>
        <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
        <param name="count">The number of bytes to be written to the blob.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromByteArrayAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromByteArrayAsync (byte[] buffer, int index, int count, Microsoft.Azure.Storage.Blob.PremiumPageBlobTier? premiumPageBlobTier, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromByteArrayAsync(unsigned int8[] buffer, int32 index, int32 count, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; premiumPageBlobTier, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromByteArrayAsync (buffer As Byte(), index As Integer, count As Integer, premiumPageBlobTier As Nullable(Of PremiumPageBlobTier), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromByteArrayAsync : byte[] * int * int * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromByteArrayAsync : byte[] * int * int * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.UploadFromByteArrayAsync (buffer, index, count, premiumPageBlobTier, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="premiumPageBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">An array of bytes.</param>
        <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
        <param name="count">The number of bytes to be written to the blob.</param>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromByteArrayAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromByteArrayAsync (byte[] buffer, int index, int count, Microsoft.Azure.Storage.Blob.PremiumPageBlobTier? premiumPageBlobTier, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromByteArrayAsync(unsigned int8[] buffer, int32 index, int32 count, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; premiumPageBlobTier, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.IProgress`1&lt;class Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromByteArrayAsync (buffer As Byte(), index As Integer, count As Integer, premiumPageBlobTier As Nullable(Of PremiumPageBlobTier), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, progressHandler As IProgress(Of StorageProgress), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromByteArrayAsync : byte[] * int * int * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromByteArrayAsync : byte[] * int * int * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.UploadFromByteArrayAsync (buffer, index, count, premiumPageBlobTier, accessCondition, options, operationContext, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="premiumPageBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">An array of bytes.</param>
        <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
        <param name="count">The number of bytes to be written to the blob.</param>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="progressHandler"> A <see cref="T:System.IProgress`1" /> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress" /> messages.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromFile">
      <MemberSignature Language="C#" Value="public virtual void UploadFromFile (string path, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UploadFromFile(string path, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UploadFromFile (path As String, Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member UploadFromFile : string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.UploadFromFile : string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudPageBlob.UploadFromFile (path, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="path">A string containing the file path providing the blob content.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Uploads a file to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromFile">
      <MemberSignature Language="C#" Value="public virtual void UploadFromFile (string path, Microsoft.Azure.Storage.Blob.PremiumPageBlobTier? premiumPageBlobTier, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UploadFromFile(string path, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; premiumPageBlobTier, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromFile(System.String,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UploadFromFile (path As String, premiumPageBlobTier As Nullable(Of PremiumPageBlobTier), Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member UploadFromFile : string * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.UploadFromFile : string * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudPageBlob.UploadFromFile (path, premiumPageBlobTier, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="premiumPageBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="path">A string containing the file path providing the blob content.</param>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Uploads a file to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromFileAsync (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromFileAsync(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromFileAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromFileAsync (path As String) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromFileAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromFileAsync : string -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.UploadFromFileAsync path" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">A string containing the file path providing the blob content.</param>
        <summary>
            Initiates an asynchronous operation to upload a file to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromFileAsync (string path, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromFileAsync(string path, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromFileAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromFileAsync (path As String, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromFileAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromFileAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.UploadFromFileAsync (path, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">A string containing the file path providing the blob content.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a file to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromFileAsync (string path, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromFileAsync(string path, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromFileAsync (path As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromFileAsync : string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromFileAsync : string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.UploadFromFileAsync (path, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="path">A string containing the file path providing the blob content.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to upload a file to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromFileAsync (string path, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromFileAsync(string path, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromFileAsync (path As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromFileAsync : string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromFileAsync : string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.UploadFromFileAsync (path, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">A string containing the file path providing the blob content.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a file to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromFileAsync (string path, Microsoft.Azure.Storage.Blob.PremiumPageBlobTier? premiumPageBlobTier, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromFileAsync(string path, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; premiumPageBlobTier, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromFileAsync(System.String,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromFileAsync (path As String, premiumPageBlobTier As Nullable(Of PremiumPageBlobTier), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromFileAsync : string * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromFileAsync : string * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.UploadFromFileAsync (path, premiumPageBlobTier, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="premiumPageBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">A string containing the file path providing the blob content.</param>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a file to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromFileAsync (string path, Microsoft.Azure.Storage.Blob.PremiumPageBlobTier? premiumPageBlobTier, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromFileAsync(string path, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; premiumPageBlobTier, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.IProgress`1&lt;class Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromFileAsync(System.String,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromFileAsync (path As String, premiumPageBlobTier As Nullable(Of PremiumPageBlobTier), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, progressHandler As IProgress(Of StorageProgress), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromFileAsync : string * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromFileAsync : string * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.UploadFromFileAsync (path, premiumPageBlobTier, accessCondition, options, operationContext, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="premiumPageBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">A string containing the file path providing the blob content.</param>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="progressHandler"> A <see cref="T:System.IProgress`1" /> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress" /> messages.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a file to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStream">
      <MemberSignature Language="C#" Value="public virtual void UploadFromStream (System.IO.Stream source, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UploadFromStream(class System.IO.Stream source, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UploadFromStream (source As Stream, Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStream : System.IO.Stream * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.UploadFromStream : System.IO.Stream * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudPageBlob.UploadFromStream (source, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Uploads a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStream">
      <MemberSignature Language="C#" Value="public virtual void UploadFromStream (System.IO.Stream source, long length, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UploadFromStream(class System.IO.Stream source, int64 length, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UploadFromStream (source As Stream, length As Long, Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStream : System.IO.Stream * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.UploadFromStream : System.IO.Stream * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudPageBlob.UploadFromStream (source, length, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="length">The number of bytes to write from the source stream at its current position.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Uploads a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStream">
      <MemberSignature Language="C#" Value="public virtual void UploadFromStream (System.IO.Stream source, Microsoft.Azure.Storage.Blob.PremiumPageBlobTier? premiumPageBlobTier, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UploadFromStream(class System.IO.Stream source, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; premiumPageBlobTier, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStream(System.IO.Stream,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UploadFromStream (source As Stream, premiumPageBlobTier As Nullable(Of PremiumPageBlobTier), Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStream : System.IO.Stream * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.UploadFromStream : System.IO.Stream * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudPageBlob.UploadFromStream (source, premiumPageBlobTier, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="premiumPageBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Uploads a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStream">
      <MemberSignature Language="C#" Value="public virtual void UploadFromStream (System.IO.Stream source, long length, Microsoft.Azure.Storage.Blob.PremiumPageBlobTier? premiumPageBlobTier, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UploadFromStream(class System.IO.Stream source, int64 length, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; premiumPageBlobTier, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStream(System.IO.Stream,System.Int64,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UploadFromStream (source As Stream, length As Long, premiumPageBlobTier As Nullable(Of PremiumPageBlobTier), Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStream : System.IO.Stream * int64 * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.UploadFromStream : System.IO.Stream * int64 * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudPageBlob.UploadFromStream (source, length, premiumPageBlobTier, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="premiumPageBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="length">The number of bytes to write from the source stream at its current position.</param>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Uploads a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromStreamAsync (System.IO.Stream source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromStreamAsync(class System.IO.Stream source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromStreamAsync (source As Stream) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStreamAsync : System.IO.Stream -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromStreamAsync : System.IO.Stream -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.UploadFromStreamAsync source" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <summary>
            Initiates an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromStreamAsync (System.IO.Stream source, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromStreamAsync(class System.IO.Stream source, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromStreamAsync (source As Stream, length As Long) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStreamAsync : System.IO.Stream * int64 -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromStreamAsync : System.IO.Stream * int64 -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.UploadFromStreamAsync (source, length)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="length">The number of bytes to write from the source stream at its current position.</param>
        <summary>
            Initiates an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromStreamAsync (System.IO.Stream source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromStreamAsync(class System.IO.Stream source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromStreamAsync (source As Stream, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStreamAsync : System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromStreamAsync : System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.UploadFromStreamAsync (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromStreamAsync (System.IO.Stream source, long length, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromStreamAsync(class System.IO.Stream source, int64 length, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromStreamAsync (source As Stream, length As Long, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStreamAsync : System.IO.Stream * int64 * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromStreamAsync : System.IO.Stream * int64 * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.UploadFromStreamAsync (source, length, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="length">The number of bytes to write from the source stream at its current position.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromStreamAsync (System.IO.Stream source, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromStreamAsync(class System.IO.Stream source, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromStreamAsync (source As Stream, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStreamAsync : System.IO.Stream * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromStreamAsync : System.IO.Stream * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.UploadFromStreamAsync (source, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromStreamAsync (System.IO.Stream source, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromStreamAsync(class System.IO.Stream source, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromStreamAsync (source As Stream, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStreamAsync : System.IO.Stream * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromStreamAsync : System.IO.Stream * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.UploadFromStreamAsync (source, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromStreamAsync (System.IO.Stream source, long length, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromStreamAsync(class System.IO.Stream source, int64 length, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromStreamAsync (source As Stream, length As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStreamAsync : System.IO.Stream * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromStreamAsync : System.IO.Stream * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.UploadFromStreamAsync (source, length, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="length">The number of bytes to write from the source stream at its current position.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromStreamAsync (System.IO.Stream source, long length, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromStreamAsync(class System.IO.Stream source, int64 length, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromStreamAsync (source As Stream, length As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStreamAsync : System.IO.Stream * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromStreamAsync : System.IO.Stream * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.UploadFromStreamAsync (source, length, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="length">The number of bytes to write from the source stream at its current position.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromStreamAsync (System.IO.Stream source, Microsoft.Azure.Storage.Blob.PremiumPageBlobTier? premiumPageBlobTier, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromStreamAsync(class System.IO.Stream source, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; premiumPageBlobTier, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromStreamAsync (source As Stream, premiumPageBlobTier As Nullable(Of PremiumPageBlobTier), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStreamAsync : System.IO.Stream * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromStreamAsync : System.IO.Stream * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.UploadFromStreamAsync (source, premiumPageBlobTier, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="premiumPageBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromStreamAsync (System.IO.Stream source, long length, Microsoft.Azure.Storage.Blob.PremiumPageBlobTier? premiumPageBlobTier, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromStreamAsync(class System.IO.Stream source, int64 length, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; premiumPageBlobTier, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromStreamAsync (source As Stream, length As Long, premiumPageBlobTier As Nullable(Of PremiumPageBlobTier), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStreamAsync : System.IO.Stream * int64 * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromStreamAsync : System.IO.Stream * int64 * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.UploadFromStreamAsync (source, length, premiumPageBlobTier, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="premiumPageBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="length">The number of bytes to write from the source stream at its current position.</param>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromStreamAsync (System.IO.Stream source, Microsoft.Azure.Storage.Blob.PremiumPageBlobTier? premiumPageBlobTier, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromStreamAsync(class System.IO.Stream source, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; premiumPageBlobTier, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.IProgress`1&lt;class Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromStreamAsync (source As Stream, premiumPageBlobTier As Nullable(Of PremiumPageBlobTier), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, progressHandler As IProgress(Of StorageProgress), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStreamAsync : System.IO.Stream * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromStreamAsync : System.IO.Stream * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.UploadFromStreamAsync (source, premiumPageBlobTier, accessCondition, options, operationContext, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="premiumPageBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="progressHandler"> A <see cref="T:System.IProgress`1" /> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress" /> messages.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromStreamAsync (System.IO.Stream source, long length, Microsoft.Azure.Storage.Blob.PremiumPageBlobTier? premiumPageBlobTier, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromStreamAsync(class System.IO.Stream source, int64 length, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; premiumPageBlobTier, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.IProgress`1&lt;class Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromStreamAsync (source As Stream, length As Long, premiumPageBlobTier As Nullable(Of PremiumPageBlobTier), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, progressHandler As IProgress(Of StorageProgress), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStreamAsync : System.IO.Stream * int64 * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromStreamAsync : System.IO.Stream * int64 * Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.UploadFromStreamAsync (source, length, premiumPageBlobTier, accessCondition, options, operationContext, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="premiumPageBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.PremiumPageBlobTier&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="length">The number of bytes to write from the source stream at its current position.</param>
        <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" /> representing the tier to set.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="progressHandler"> A <see cref="T:System.IProgress`1" /> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress" /> messages.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePages">
      <MemberSignature Language="C#" Value="public virtual void WritePages (System.IO.Stream pageData, long startOffset, Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum = default, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WritePages(class System.IO.Stream pageData, int64 startOffset, class Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.WritePages(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WritePages (pageData As Stream, startOffset As Long, Optional contentChecksum As Checksum = Nothing, Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member WritePages : System.IO.Stream * int64 * Microsoft.Azure.Storage.Shared.Protocol.Checksum * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.WritePages : System.IO.Stream * int64 * Microsoft.Azure.Storage.Shared.Protocol.Checksum * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudPageBlob.WritePages (pageData, startOffset, contentChecksum, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageData" Type="System.IO.Stream" />
        <Parameter Name="startOffset" Type="System.Int64" />
        <Parameter Name="contentChecksum" Type="Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="pageData">A <see cref="T:System.IO.Stream" /> object providing the page data.</param>
        <param name="startOffset">The offset at which to begin writing, in bytes. The offset must be a multiple of 512.</param>
        <param name="contentChecksum">An optional hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Writes pages to a page blob.
            </summary>
        <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum" /> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5" /> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64" /> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePages">
      <MemberSignature Language="C#" Value="public virtual void WritePages (Uri sourceUri, long offset, long count, long startOffset, Microsoft.Azure.Storage.Shared.Protocol.Checksum sourceContentChecksum = default, Microsoft.Azure.Storage.AccessCondition sourceAccessCondition = default, Microsoft.Azure.Storage.AccessCondition destAccessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WritePages(class System.Uri sourceUri, int64 offset, int64 count, int64 startOffset, class Microsoft.Azure.Storage.Shared.Protocol.Checksum sourceContentChecksum, class Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, class Microsoft.Azure.Storage.AccessCondition destAccessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.WritePages(System.Uri,System.Int64,System.Int64,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WritePages (sourceUri As Uri, offset As Long, count As Long, startOffset As Long, Optional sourceContentChecksum As Checksum = Nothing, Optional sourceAccessCondition As AccessCondition = Nothing, Optional destAccessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member WritePages : Uri * int64 * int64 * int64 * Microsoft.Azure.Storage.Shared.Protocol.Checksum * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.WritePages : Uri * int64 * int64 * int64 * Microsoft.Azure.Storage.Shared.Protocol.Checksum * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudPageBlob.WritePages (sourceUri, offset, count, startOffset, sourceContentChecksum, sourceAccessCondition, destAccessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="count" Type="System.Int64" />
        <Parameter Name="startOffset" Type="System.Int64" />
        <Parameter Name="sourceContentChecksum" Type="Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
        <Parameter Name="sourceAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="destAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="sourceContentChecksum">To be added.</param>
        <param name="sourceUri">A <see cref="T:System.Uri" /> specifying the absolute URI to the source blob.</param>
        <param name="offset">The byte offset in the source at which to begin retrieving content.</param>
        <param name="count">The number of bytes from the source to return, or <c>null</c> to return all bytes through the end of the blob.</param>
        <param name="startOffset">The offset at which to begin writing, in bytes. The offset must be a multiple of 512.</param>
        <param name="sourceContentMd5">The MD5 calculated for the range of bytes of the source.</param>
        <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
        <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Writes pages to a page blob.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WritePagesAsync (System.IO.Stream pageData, long startOffset, Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WritePagesAsync(class System.IO.Stream pageData, int64 startOffset, class Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.WritePagesAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WritePagesAsync (pageData As Stream, startOffset As Long, contentChecksum As Checksum) As Task" />
      <MemberSignature Language="F#" Value="abstract member WritePagesAsync : System.IO.Stream * int64 * Microsoft.Azure.Storage.Shared.Protocol.Checksum -&gt; System.Threading.Tasks.Task&#xA;override this.WritePagesAsync : System.IO.Stream * int64 * Microsoft.Azure.Storage.Shared.Protocol.Checksum -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.WritePagesAsync (pageData, startOffset, contentChecksum)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageData" Type="System.IO.Stream" />
        <Parameter Name="startOffset" Type="System.Int64" />
        <Parameter Name="contentChecksum" Type="Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
      </Parameters>
      <Docs>
        <param name="pageData">A <see cref="T:System.IO.Stream" /> object providing the page data.</param>
        <param name="startOffset">The offset at which to begin writing, in bytes. The offset must be a multiple of 512.</param>
        <param name="contentChecksum">An optional hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
        <summary>
            Initiates an asynchronous operation to write pages to a page blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum" /> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5" /> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64" /> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WritePagesAsync (System.IO.Stream pageData, long startOffset, Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WritePagesAsync(class System.IO.Stream pageData, int64 startOffset, class Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.WritePagesAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WritePagesAsync (pageData As Stream, startOffset As Long, contentChecksum As Checksum, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member WritePagesAsync : System.IO.Stream * int64 * Microsoft.Azure.Storage.Shared.Protocol.Checksum * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.WritePagesAsync : System.IO.Stream * int64 * Microsoft.Azure.Storage.Shared.Protocol.Checksum * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.WritePagesAsync (pageData, startOffset, contentChecksum, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageData" Type="System.IO.Stream" />
        <Parameter Name="startOffset" Type="System.Int64" />
        <Parameter Name="contentChecksum" Type="Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pageData">A <see cref="T:System.IO.Stream" /> object providing the page data.</param>
        <param name="startOffset">The offset at which to begin writing, in bytes. The offset must be a multiple of 512.</param>
        <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to write pages to a page blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum" /> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5" /> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64" /> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WritePagesAsync (System.IO.Stream pageData, long startOffset, Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WritePagesAsync(class System.IO.Stream pageData, int64 startOffset, class Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.WritePagesAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WritePagesAsync (pageData As Stream, startOffset As Long, contentChecksum As Checksum, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member WritePagesAsync : System.IO.Stream * int64 * Microsoft.Azure.Storage.Shared.Protocol.Checksum * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&#xA;override this.WritePagesAsync : System.IO.Stream * int64 * Microsoft.Azure.Storage.Shared.Protocol.Checksum * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.WritePagesAsync (pageData, startOffset, contentChecksum, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageData" Type="System.IO.Stream" />
        <Parameter Name="startOffset" Type="System.Int64" />
        <Parameter Name="contentChecksum" Type="Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="pageData">A <see cref="T:System.IO.Stream" /> object providing the page data.</param>
        <param name="startOffset">The offset at which to begin writing, in bytes. The offset must be a multiple of 512.</param>
        <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to write pages to a page blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum" /> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5" /> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64" /> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WritePagesAsync (System.IO.Stream pageData, long startOffset, Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WritePagesAsync(class System.IO.Stream pageData, int64 startOffset, class Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.WritePagesAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WritePagesAsync (pageData As Stream, startOffset As Long, contentChecksum As Checksum, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member WritePagesAsync : System.IO.Stream * int64 * Microsoft.Azure.Storage.Shared.Protocol.Checksum * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.WritePagesAsync : System.IO.Stream * int64 * Microsoft.Azure.Storage.Shared.Protocol.Checksum * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.WritePagesAsync (pageData, startOffset, contentChecksum, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageData" Type="System.IO.Stream" />
        <Parameter Name="startOffset" Type="System.Int64" />
        <Parameter Name="contentChecksum" Type="Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pageData">A <see cref="T:System.IO.Stream" /> object providing the page data.</param>
        <param name="startOffset">The offset at which to begin writing, in bytes. The offset must be a multiple of 512.</param>
        <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to write pages to a page blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum" /> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5" /> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64" /> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WritePagesAsync (System.IO.Stream pageData, long startOffset, Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WritePagesAsync(class System.IO.Stream pageData, int64 startOffset, class Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.IProgress`1&lt;class Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.WritePagesAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WritePagesAsync (pageData As Stream, startOffset As Long, contentChecksum As Checksum, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, progressHandler As IProgress(Of StorageProgress), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member WritePagesAsync : System.IO.Stream * int64 * Microsoft.Azure.Storage.Shared.Protocol.Checksum * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.WritePagesAsync : System.IO.Stream * int64 * Microsoft.Azure.Storage.Shared.Protocol.Checksum * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.WritePagesAsync (pageData, startOffset, contentChecksum, accessCondition, options, operationContext, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageData" Type="System.IO.Stream" />
        <Parameter Name="startOffset" Type="System.Int64" />
        <Parameter Name="contentChecksum" Type="Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pageData">A <see cref="T:System.IO.Stream" /> object providing the page data.</param>
        <param name="startOffset">The offset at which to begin writing, in bytes. The offset must be a multiple of 512.</param>
        <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="progressHandler"> A <see cref="T:System.IProgress`1" /> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress" /> messages.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to write pages to a page blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum" /> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5" /> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64" /> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WritePagesAsync (Uri sourceUri, long offset, long count, long startOffset, Microsoft.Azure.Storage.Shared.Protocol.Checksum sourceContentChecksum, Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, Microsoft.Azure.Storage.AccessCondition destAccessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WritePagesAsync(class System.Uri sourceUri, int64 offset, int64 count, int64 startOffset, class Microsoft.Azure.Storage.Shared.Protocol.Checksum sourceContentChecksum, class Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, class Microsoft.Azure.Storage.AccessCondition destAccessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.WritePagesAsync(System.Uri,System.Int64,System.Int64,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WritePagesAsync (sourceUri As Uri, offset As Long, count As Long, startOffset As Long, sourceContentChecksum As Checksum, sourceAccessCondition As AccessCondition, destAccessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member WritePagesAsync : Uri * int64 * int64 * int64 * Microsoft.Azure.Storage.Shared.Protocol.Checksum * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.WritePagesAsync : Uri * int64 * int64 * int64 * Microsoft.Azure.Storage.Shared.Protocol.Checksum * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudPageBlob.WritePagesAsync (sourceUri, offset, count, startOffset, sourceContentChecksum, sourceAccessCondition, destAccessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="count" Type="System.Int64" />
        <Parameter Name="startOffset" Type="System.Int64" />
        <Parameter Name="sourceContentChecksum" Type="Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
        <Parameter Name="sourceAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="destAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceContentChecksum">To be added.</param>
        <param name="sourceUri">A <see cref="T:System.Uri" /> specifying the absolute URI to the source blob.</param>
        <param name="offset">The byte offset in the source at which to begin retrieving content.</param>
        <param name="count">The number of bytes from the source to return, or <c>null</c> to return all bytes through the end of the blob.</param>
        <param name="startOffset">The offset at which to begin writing, in bytes. The offset must be a multiple of 512.</param>
        <param name="sourceContentMd5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
        <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
        <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to write pages to a page blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
