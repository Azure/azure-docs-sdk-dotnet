<Type Name="CloudBlockBlob" FullName="Microsoft.Azure.Storage.Blob.CloudBlockBlob">
  <TypeSignature Language="C#" Value="public class CloudBlockBlob : Microsoft.Azure.Storage.Blob.CloudBlob, Microsoft.Azure.Storage.Blob.ICloudBlob" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CloudBlockBlob extends Microsoft.Azure.Storage.Blob.CloudBlob implements class Microsoft.Azure.Storage.Blob.ICloudBlob, class Microsoft.Azure.Storage.Blob.IListBlobItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob" />
  <TypeSignature Language="VB.NET" Value="Public Class CloudBlockBlob&#xA;Inherits CloudBlob&#xA;Implements ICloudBlob" />
  <TypeSignature Language="F#" Value="type CloudBlockBlob = class&#xA;    inherit CloudBlob&#xA;    interface ICloudBlob&#xA;    interface IListBlobItem" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
    <AssemblyVersion>11.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Storage.Blob.CloudBlob</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Storage.Blob.ICloudBlob</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Storage.Blob.IListBlobItem</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents a blob that is uploaded as a set of blocks.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CloudBlockBlob (Uri blobAbsoluteUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobAbsoluteUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobAbsoluteUri As Uri)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Storage.Blob.CloudBlockBlob : Uri -&gt; Microsoft.Azure.Storage.Blob.CloudBlockBlob" Usage="new Microsoft.Azure.Storage.Blob.CloudBlockBlob blobAbsoluteUri" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobAbsoluteUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="blobAbsoluteUri">A <see cref="T:System.Uri" /> specifying the absolute URI to the blob.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob" /> class using an absolute URI to the blob.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CloudBlockBlob (Uri blobAbsoluteUri, Microsoft.Azure.Storage.Auth.StorageCredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobAbsoluteUri, class Microsoft.Azure.Storage.Auth.StorageCredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.#ctor(System.Uri,Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobAbsoluteUri As Uri, credentials As StorageCredentials)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Storage.Blob.CloudBlockBlob : Uri * Microsoft.Azure.Storage.Auth.StorageCredentials -&gt; Microsoft.Azure.Storage.Blob.CloudBlockBlob" Usage="new Microsoft.Azure.Storage.Blob.CloudBlockBlob (blobAbsoluteUri, credentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobAbsoluteUri" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.Azure.Storage.Auth.StorageCredentials" />
      </Parameters>
      <Docs>
        <param name="blobAbsoluteUri">A <see cref="T:System.Uri" /> specifying the absolute URI to the blob.</param>
        <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials" /> object.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob" /> class using an absolute URI to the blob.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CloudBlockBlob (Uri blobAbsoluteUri, Microsoft.Azure.Storage.Blob.CloudBlobClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobAbsoluteUri, class Microsoft.Azure.Storage.Blob.CloudBlobClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.#ctor(System.Uri,Microsoft.Azure.Storage.Blob.CloudBlobClient)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobAbsoluteUri As Uri, client As CloudBlobClient)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Storage.Blob.CloudBlockBlob : Uri * Microsoft.Azure.Storage.Blob.CloudBlobClient -&gt; Microsoft.Azure.Storage.Blob.CloudBlockBlob" Usage="new Microsoft.Azure.Storage.Blob.CloudBlockBlob (blobAbsoluteUri, client)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobAbsoluteUri" Type="System.Uri" />
        <Parameter Name="client" Type="Microsoft.Azure.Storage.Blob.CloudBlobClient" />
      </Parameters>
      <Docs>
        <param name="blobAbsoluteUri">A <see cref="T:System.Uri" /> specifying the absolute URI to the blob.</param>
        <param name="client">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient" /> object.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob" /> class using an absolute URI to the blob.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CloudBlockBlob (Microsoft.Azure.Storage.StorageUri blobAbsoluteUri, DateTimeOffset? snapshotTime, Microsoft.Azure.Storage.Auth.StorageCredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Azure.Storage.StorageUri blobAbsoluteUri, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; snapshotTime, class Microsoft.Azure.Storage.Auth.StorageCredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.#ctor(Microsoft.Azure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobAbsoluteUri As StorageUri, snapshotTime As Nullable(Of DateTimeOffset), credentials As StorageCredentials)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Storage.Blob.CloudBlockBlob : Microsoft.Azure.Storage.StorageUri * Nullable&lt;DateTimeOffset&gt; * Microsoft.Azure.Storage.Auth.StorageCredentials -&gt; Microsoft.Azure.Storage.Blob.CloudBlockBlob" Usage="new Microsoft.Azure.Storage.Blob.CloudBlockBlob (blobAbsoluteUri, snapshotTime, credentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobAbsoluteUri" Type="Microsoft.Azure.Storage.StorageUri" />
        <Parameter Name="snapshotTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="credentials" Type="Microsoft.Azure.Storage.Auth.StorageCredentials" />
      </Parameters>
      <Docs>
        <param name="blobAbsoluteUri">A <see cref="T:Microsoft.Azure.Storage.StorageUri" /> containing the absolute URI to the blob at both the primary and secondary locations.</param>
        <param name="snapshotTime">A <see cref="T:System.DateTimeOffset" /> specifying the snapshot timestamp, if the blob is a snapshot.</param>
        <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials" /> object.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob" /> class using an absolute URI to the blob.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CloudBlockBlob (Microsoft.Azure.Storage.StorageUri blobAbsoluteUri, DateTimeOffset? snapshotTime, Microsoft.Azure.Storage.Blob.CloudBlobClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Azure.Storage.StorageUri blobAbsoluteUri, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; snapshotTime, class Microsoft.Azure.Storage.Blob.CloudBlobClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.#ctor(Microsoft.Azure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.CloudBlobClient)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobAbsoluteUri As StorageUri, snapshotTime As Nullable(Of DateTimeOffset), client As CloudBlobClient)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Storage.Blob.CloudBlockBlob : Microsoft.Azure.Storage.StorageUri * Nullable&lt;DateTimeOffset&gt; * Microsoft.Azure.Storage.Blob.CloudBlobClient -&gt; Microsoft.Azure.Storage.Blob.CloudBlockBlob" Usage="new Microsoft.Azure.Storage.Blob.CloudBlockBlob (blobAbsoluteUri, snapshotTime, client)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobAbsoluteUri" Type="Microsoft.Azure.Storage.StorageUri" />
        <Parameter Name="snapshotTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="client" Type="Microsoft.Azure.Storage.Blob.CloudBlobClient" />
      </Parameters>
      <Docs>
        <param name="blobAbsoluteUri">A <see cref="T:Microsoft.Azure.Storage.StorageUri" /> containing the absolute URI to the blob at both the primary and secondary locations.</param>
        <param name="snapshotTime">A <see cref="T:System.DateTimeOffset" /> specifying the snapshot timestamp, if the blob is a snapshot.</param>
        <param name="client">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient" /> object.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob" /> class using an absolute URI to the blob.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CloudBlockBlob (Uri blobAbsoluteUri, DateTimeOffset? snapshotTime, Microsoft.Azure.Storage.Auth.StorageCredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobAbsoluteUri, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; snapshotTime, class Microsoft.Azure.Storage.Auth.StorageCredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobAbsoluteUri As Uri, snapshotTime As Nullable(Of DateTimeOffset), credentials As StorageCredentials)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Storage.Blob.CloudBlockBlob : Uri * Nullable&lt;DateTimeOffset&gt; * Microsoft.Azure.Storage.Auth.StorageCredentials -&gt; Microsoft.Azure.Storage.Blob.CloudBlockBlob" Usage="new Microsoft.Azure.Storage.Blob.CloudBlockBlob (blobAbsoluteUri, snapshotTime, credentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobAbsoluteUri" Type="System.Uri" />
        <Parameter Name="snapshotTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="credentials" Type="Microsoft.Azure.Storage.Auth.StorageCredentials" />
      </Parameters>
      <Docs>
        <param name="blobAbsoluteUri">A <see cref="T:System.Uri" /> specifying the absolute URI to the blob.</param>
        <param name="snapshotTime">A <see cref="T:System.DateTimeOffset" /> specifying the snapshot timestamp, if the blob is a snapshot.</param>
        <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials" /> object.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob" /> class using an absolute URI to the blob.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CloudBlockBlob (Uri blobAbsoluteUri, DateTimeOffset? snapshotTime, Microsoft.Azure.Storage.Blob.CloudBlobClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobAbsoluteUri, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; snapshotTime, class Microsoft.Azure.Storage.Blob.CloudBlobClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.CloudBlobClient)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobAbsoluteUri As Uri, snapshotTime As Nullable(Of DateTimeOffset), client As CloudBlobClient)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Storage.Blob.CloudBlockBlob : Uri * Nullable&lt;DateTimeOffset&gt; * Microsoft.Azure.Storage.Blob.CloudBlobClient -&gt; Microsoft.Azure.Storage.Blob.CloudBlockBlob" Usage="new Microsoft.Azure.Storage.Blob.CloudBlockBlob (blobAbsoluteUri, snapshotTime, client)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobAbsoluteUri" Type="System.Uri" />
        <Parameter Name="snapshotTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="client" Type="Microsoft.Azure.Storage.Blob.CloudBlobClient" />
      </Parameters>
      <Docs>
        <param name="blobAbsoluteUri">A <see cref="T:System.Uri" /> specifying the absolute URI to the blob.</param>
        <param name="snapshotTime">A <see cref="T:System.DateTimeOffset" /> specifying the snapshot timestamp, if the blob is a snapshot.</param>
        <param name="client">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient" /> object.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob" /> class using an absolute URI to the blob.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreateSnapshot">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginCreateSnapshot (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginCreateSnapshot(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginCreateSnapshot(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginCreateSnapshot (callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginCreateSnapshot : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginCreateSnapshot : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginCreateSnapshot (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to create a snapshot of the blob.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreateSnapshot">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginCreateSnapshot (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginCreateSnapshot(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginCreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginCreateSnapshot (metadata As IDictionary(Of String, String), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginCreateSnapshot : System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginCreateSnapshot : System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginCreateSnapshot (metadata, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request, or <c>null</c>.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to create a snapshot of the blob.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDownloadBlockList">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginDownloadBlockList (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginDownloadBlockList(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginDownloadBlockList(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginDownloadBlockList (callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginDownloadBlockList : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginDownloadBlockList : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginDownloadBlockList (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to return an enumerable collection of the blob's blocks, 
            using the specified block list filter.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDownloadBlockList">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginDownloadBlockList (Microsoft.Azure.Storage.Blob.BlockListingFilter blockListingFilter, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginDownloadBlockList(valuetype Microsoft.Azure.Storage.Blob.BlockListingFilter blockListingFilter, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginDownloadBlockList(Microsoft.Azure.Storage.Blob.BlockListingFilter,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginDownloadBlockList (blockListingFilter As BlockListingFilter, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginDownloadBlockList : Microsoft.Azure.Storage.Blob.BlockListingFilter * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginDownloadBlockList : Microsoft.Azure.Storage.Blob.BlockListingFilter * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginDownloadBlockList (blockListingFilter, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockListingFilter" Type="Microsoft.Azure.Storage.Blob.BlockListingFilter" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="blockListingFilter">A <see cref="T:Microsoft.Azure.Storage.Blob.BlockListingFilter" /> enumeration value that indicates whether to return 
            committed blocks, uncommitted blocks, or both.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to return an enumerable collection of the blob's blocks, 
            using the specified block list filter.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDownloadText">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginDownloadText (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginDownloadText(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginDownloadText(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginDownloadText (callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginDownloadText : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginDownloadText : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginDownloadText (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to download the blob's contents as a string.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDownloadText">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginDownloadText (System.Text.Encoding encoding, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginDownloadText(class System.Text.Encoding encoding, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginDownloadText(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginDownloadText (encoding As Encoding, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginDownloadText : System.Text.Encoding * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginDownloadText : System.Text.Encoding * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginDownloadText (encoding, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="encoding">An object that indicates the text encoding to use.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to download the blob's contents as a string.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginOpenWrite">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginOpenWrite (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginOpenWrite(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginOpenWrite(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginOpenWrite (callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginOpenWrite : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginOpenWrite : AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginOpenWrite (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to open a stream for writing to the blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>
          <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" /> method under the covers.</para>
          <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StreamWriteSizeInBytes" /> property before calling this method to specify the block size to write, in bytes, 
            ranging from between 16 KB and 100 MB inclusive.</para>
          <para>To throw an exception if the blob exists instead of overwriting it, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginOpenWrite(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginOpenWrite">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginOpenWrite (Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginOpenWrite(class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginOpenWrite(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginOpenWrite (accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginOpenWrite : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginOpenWrite : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginOpenWrite (accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to open a stream for writing to the blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>
          <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" /> method under the covers.</para>
          <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StreamWriteSizeInBytes" /> property before calling this method to specify the block size to write, in bytes, 
            ranging from between 16 KB and 100 MB inclusive.</para>
          <para>To throw an exception if the blob exists instead of overwriting it, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition" />
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginPutBlock">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginPutBlock (string blockId, System.IO.Stream blockData, Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginPutBlock(string blockId, class System.IO.Stream blockData, class Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginPutBlock(System.String,System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginPutBlock (blockId As String, blockData As Stream, contentChecksum As Checksum, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginPutBlock : string * System.IO.Stream * Microsoft.Azure.Storage.Shared.Protocol.Checksum * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginPutBlock : string * System.IO.Stream * Microsoft.Azure.Storage.Shared.Protocol.Checksum * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginPutBlock (blockId, blockData, contentChecksum, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockId" Type="System.String" />
        <Parameter Name="blockData" Type="System.IO.Stream" />
        <Parameter Name="contentChecksum" Type="Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="blockId">A Base64-encoded string that identifies the block.</param>
        <param name="blockData">A <see cref="T:System.IO.Stream" /> object that provides the data for the block.</param>
        <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload a single block.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum" /> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5" /> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64" /> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginPutBlock">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginPutBlock (string blockId, Uri sourceUri, long? offset, long? count, Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginPutBlock(string blockId, class System.Uri sourceUri, valuetype System.Nullable`1&lt;int64&gt; offset, valuetype System.Nullable`1&lt;int64&gt; count, class Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginPutBlock(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginPutBlock (blockId As String, sourceUri As Uri, offset As Nullable(Of Long), count As Nullable(Of Long), contentChecksum As Checksum, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginPutBlock : string * Uri * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.Shared.Protocol.Checksum * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginPutBlock : string * Uri * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.Shared.Protocol.Checksum * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginPutBlock (blockId, sourceUri, offset, count, contentChecksum, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockId" Type="System.String" />
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="count" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="contentChecksum" Type="Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="blockId">A Base64-encoded string that identifies the block.</param>
        <param name="sourceUri">A <see cref="T:System.Uri" /> specifying the absolute URI to the source blob.</param>
        <param name="offset">The byte offset at which to begin returning content.</param>
        <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
        <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload a single block.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum" /> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5" /> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64" /> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginPutBlock">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginPutBlock (string blockId, System.IO.Stream blockData, Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginPutBlock(string blockId, class System.IO.Stream blockData, class Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginPutBlock(System.String,System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginPutBlock (blockId As String, blockData As Stream, contentChecksum As Checksum, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginPutBlock : string * System.IO.Stream * Microsoft.Azure.Storage.Shared.Protocol.Checksum * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginPutBlock : string * System.IO.Stream * Microsoft.Azure.Storage.Shared.Protocol.Checksum * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginPutBlock (blockId, blockData, contentChecksum, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockId" Type="System.String" />
        <Parameter Name="blockData" Type="System.IO.Stream" />
        <Parameter Name="contentChecksum" Type="Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="blockId">A Base64-encoded string that identifies the block.</param>
        <param name="blockData">A <see cref="T:System.IO.Stream" /> object that provides the data for the block.</param>
        <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request, or <c>null</c>. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload a single block.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum" /> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5" /> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64" /> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginPutBlockList">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginPutBlockList (System.Collections.Generic.IEnumerable&lt;string&gt; blockList, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginPutBlockList(class System.Collections.Generic.IEnumerable`1&lt;string&gt; blockList, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginPutBlockList(System.Collections.Generic.IEnumerable{System.String},System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginPutBlockList (blockList As IEnumerable(Of String), callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginPutBlockList : seq&lt;string&gt; * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginPutBlockList : seq&lt;string&gt; * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginPutBlockList (blockList, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockList" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="blockList">An enumerable collection of block IDs, as Base64-encoded strings.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload a list of blocks to a new or existing blob. 
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginPutBlockList">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginPutBlockList (System.Collections.Generic.IEnumerable&lt;string&gt; blockList, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginPutBlockList(class System.Collections.Generic.IEnumerable`1&lt;string&gt; blockList, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginPutBlockList(System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginPutBlockList (blockList As IEnumerable(Of String), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginPutBlockList : seq&lt;string&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginPutBlockList : seq&lt;string&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginPutBlockList (blockList, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockList" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="blockList">An enumerable collection of block IDs, as Base64-encoded strings.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload a list of blocks to a new or existing blob. 
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSetStandardBlobTier">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginSetStandardBlobTier (Microsoft.Azure.Storage.Blob.StandardBlobTier standardBlobTier, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginSetStandardBlobTier(valuetype Microsoft.Azure.Storage.Blob.StandardBlobTier standardBlobTier, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginSetStandardBlobTier(Microsoft.Azure.Storage.Blob.StandardBlobTier,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginSetStandardBlobTier (standardBlobTier As StandardBlobTier, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginSetStandardBlobTier : Microsoft.Azure.Storage.Blob.StandardBlobTier * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginSetStandardBlobTier : Microsoft.Azure.Storage.Blob.StandardBlobTier * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginSetStandardBlobTier (standardBlobTier, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standardBlobTier" Type="Microsoft.Azure.Storage.Blob.StandardBlobTier" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="standardBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier" /> representing the tier to set.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to set the tier of the blob on a standard storage account.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSetStandardBlobTier">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginSetStandardBlobTier (Microsoft.Azure.Storage.Blob.StandardBlobTier standardBlobTier, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginSetStandardBlobTier(valuetype Microsoft.Azure.Storage.Blob.StandardBlobTier standardBlobTier, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginSetStandardBlobTier(Microsoft.Azure.Storage.Blob.StandardBlobTier,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginSetStandardBlobTier (standardBlobTier As StandardBlobTier, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginSetStandardBlobTier : Microsoft.Azure.Storage.Blob.StandardBlobTier * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginSetStandardBlobTier : Microsoft.Azure.Storage.Blob.StandardBlobTier * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginSetStandardBlobTier (standardBlobTier, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standardBlobTier" Type="Microsoft.Azure.Storage.Blob.StandardBlobTier" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="standardBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier" /> representing the tier to set.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request, or <c>null</c>.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to set the tier of the blob on a standard storage account.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginStartCopy">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginStartCopy (Microsoft.Azure.Storage.Blob.CloudBlockBlob source, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginStartCopy(class Microsoft.Azure.Storage.Blob.CloudBlockBlob source, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginStartCopy(Microsoft.Azure.Storage.Blob.CloudBlockBlob,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginStartCopy (source As CloudBlockBlob, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="override this.BeginStartCopy : Microsoft.Azure.Storage.Blob.CloudBlockBlob * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginStartCopy (source, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Azure.Storage.Blob.CloudBlockBlob" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob" /> object.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to start copying another block blob's contents, properties, and metadata to this block blob.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginStartCopy">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginStartCopy (Microsoft.Azure.Storage.Blob.CloudBlockBlob source, Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, Microsoft.Azure.Storage.AccessCondition destAccessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginStartCopy(class Microsoft.Azure.Storage.Blob.CloudBlockBlob source, class Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, class Microsoft.Azure.Storage.AccessCondition destAccessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginStartCopy(Microsoft.Azure.Storage.Blob.CloudBlockBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginStartCopy (source As CloudBlockBlob, sourceAccessCondition As AccessCondition, destAccessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="override this.BeginStartCopy : Microsoft.Azure.Storage.Blob.CloudBlockBlob * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginStartCopy (source, sourceAccessCondition, destAccessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Azure.Storage.Blob.CloudBlockBlob" />
        <Parameter Name="sourceAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="destAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob" /> object.</param>
        <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
        <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to start copying another block blob's contents, properties, and metadata to this block blob.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginStartCopy">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginStartCopy (Microsoft.Azure.Storage.Blob.CloudBlockBlob source, Microsoft.Azure.Storage.Blob.StandardBlobTier? standardBlockBlobTier, Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, Microsoft.Azure.Storage.AccessCondition destAccessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginStartCopy(class Microsoft.Azure.Storage.Blob.CloudBlockBlob source, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.StandardBlobTier&gt; standardBlockBlobTier, class Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, class Microsoft.Azure.Storage.AccessCondition destAccessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginStartCopy(Microsoft.Azure.Storage.Blob.CloudBlockBlob,System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginStartCopy (source As CloudBlockBlob, standardBlockBlobTier As Nullable(Of StandardBlobTier), sourceAccessCondition As AccessCondition, destAccessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="override this.BeginStartCopy : Microsoft.Azure.Storage.Blob.CloudBlockBlob * Nullable&lt;Microsoft.Azure.Storage.Blob.StandardBlobTier&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginStartCopy (source, standardBlockBlobTier, sourceAccessCondition, destAccessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Azure.Storage.Blob.CloudBlockBlob" />
        <Parameter Name="standardBlockBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.StandardBlobTier&gt;" />
        <Parameter Name="sourceAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="destAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob" /> object.</param>
        <param name="standardBlockBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier" /> representing the tier to set.</param>
        <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
        <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to start copying another block blob's contents, properties, and metadata to this block blob.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUploadFromByteArray">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromByteArray (byte[] buffer, int index, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromByteArray(unsigned int8[] buffer, int32 index, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginUploadFromByteArray (buffer As Byte(), index As Integer, count As Integer, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginUploadFromByteArray : byte[] * int * int * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginUploadFromByteArray : byte[] * int * int * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginUploadFromByteArray (buffer, index, count, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">An array of bytes.</param>
        <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
        <param name="count">The number of bytes to be written to the blob.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload the contents of a byte array to a blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUploadFromByteArray">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromByteArray (byte[] buffer, int index, int count, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromByteArray(unsigned int8[] buffer, int32 index, int32 count, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginUploadFromByteArray (buffer As Byte(), index As Integer, count As Integer, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginUploadFromByteArray : byte[] * int * int * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginUploadFromByteArray : byte[] * int * int * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginUploadFromByteArray (buffer, index, count, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">An array of bytes.</param>
        <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
        <param name="count">The number of bytes to be written to the blob.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload the contents of a byte array to a blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUploadFromFile">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromFile (string path, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromFile(string path, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromFile(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginUploadFromFile (path As String, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginUploadFromFile : string * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginUploadFromFile : string * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginUploadFromFile (path, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromFile(System.String,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="path">A string containing the file path providing the blob content.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload a file to a blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUploadFromFile">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromFile (string path, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromFile(string path, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginUploadFromFile (path As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginUploadFromFile : string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginUploadFromFile : string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginUploadFromFile (path, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="path">A string containing the file path providing the blob content.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload a file to a blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUploadFromStream">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromStream (System.IO.Stream source, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromStream(class System.IO.Stream source, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromStream(System.IO.Stream,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginUploadFromStream (source As Stream, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginUploadFromStream : System.IO.Stream * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginUploadFromStream : System.IO.Stream * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginUploadFromStream (source, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUploadFromStream">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromStream (System.IO.Stream source, long length, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromStream(class System.IO.Stream source, int64 length, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginUploadFromStream (source As Stream, length As Long, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginUploadFromStream : System.IO.Stream * int64 * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginUploadFromStream : System.IO.Stream * int64 * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginUploadFromStream (source, length, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="length">The number of bytes to write from the source stream at its current position.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUploadFromStream">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromStream (System.IO.Stream source, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromStream(class System.IO.Stream source, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginUploadFromStream (source As Stream, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginUploadFromStream : System.IO.Stream * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginUploadFromStream : System.IO.Stream * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginUploadFromStream (source, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUploadFromStream">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromStream (System.IO.Stream source, long length, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadFromStream(class System.IO.Stream source, int64 length, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginUploadFromStream (source As Stream, length As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginUploadFromStream : System.IO.Stream * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginUploadFromStream : System.IO.Stream * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginUploadFromStream (source, length, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="length">The number of bytes to write from the source stream at its current position.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUploadText">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadText (string content, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadText(string content, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadText(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginUploadText (content As String, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginUploadText : string * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginUploadText : string * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginUploadText (content, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="content">A string containing the text to upload.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload a string of text to a blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUploadText">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadText (string content, System.Text.Encoding encoding, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.ICancellableAsyncResult BeginUploadText(string content, class System.Text.Encoding encoding, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadText(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginUploadText (content As String, encoding As Encoding, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult" />
      <MemberSignature Language="F#" Value="abstract member BeginUploadText : string * System.Text.Encoding * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult&#xA;override this.BeginUploadText : string * System.Text.Encoding * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * AsyncCallback * obj -&gt; Microsoft.Azure.Storage.ICancellableAsyncResult" Usage="cloudBlockBlob.BeginUploadText (content, encoding, accessCondition, options, operationContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.ICancellableAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="content">A string containing the text to upload.</param>
        <param name="encoding">A <see cref="T:System.Text.Encoding" /> object that indicates the text encoding to use. If <c>null</c>, UTF-8 will be used.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that will receive notification when the asynchronous operation completes.</param>
        <param name="state">A user-defined object that will be passed to the callback delegate.</param>
        <summary>
            Begins an asynchronous operation to upload a string of text to a blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult" /> that references the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSnapshot">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.Blob.CloudBlockBlob CreateSnapshot (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.Blob.CloudBlockBlob CreateSnapshot(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.CreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSnapshot (Optional metadata As IDictionary(Of String, String) = Nothing, Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing) As CloudBlockBlob" />
      <MemberSignature Language="F#" Value="abstract member CreateSnapshot : System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; Microsoft.Azure.Storage.Blob.CloudBlockBlob&#xA;override this.CreateSnapshot : System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; Microsoft.Azure.Storage.Blob.CloudBlockBlob" Usage="cloudBlockBlob.CreateSnapshot (metadata, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.Blob.CloudBlockBlob</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request, or <c>null</c>. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Creates a snapshot of the blob.
            </summary>
        <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob" /> object that is a blob snapshot.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSnapshotAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlockBlob&gt; CreateSnapshotAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.Blob.CloudBlockBlob&gt; CreateSnapshotAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.CreateSnapshotAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSnapshotAsync () As Task(Of CloudBlockBlob)" />
      <MemberSignature Language="F#" Value="abstract member CreateSnapshotAsync : unit -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlockBlob&gt;&#xA;override this.CreateSnapshotAsync : unit -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlockBlob&gt;" Usage="cloudBlockBlob.CreateSnapshotAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlockBlob&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Initiates an asynchronous operation to create a snapshot of the blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSnapshotAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlockBlob&gt; CreateSnapshotAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.Blob.CloudBlockBlob&gt; CreateSnapshotAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.CreateSnapshotAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSnapshotAsync (cancellationToken As CancellationToken) As Task(Of CloudBlockBlob)" />
      <MemberSignature Language="F#" Value="abstract member CreateSnapshotAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlockBlob&gt;&#xA;override this.CreateSnapshotAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlockBlob&gt;" Usage="cloudBlockBlob.CreateSnapshotAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlockBlob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to create a snapshot of the blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSnapshotAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlockBlob&gt; CreateSnapshotAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.Blob.CloudBlockBlob&gt; CreateSnapshotAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSnapshotAsync (metadata As IDictionary(Of String, String), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of CloudBlockBlob)" />
      <MemberSignature Language="F#" Value="abstract member CreateSnapshotAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlockBlob&gt;&#xA;override this.CreateSnapshotAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlockBlob&gt;" Usage="cloudBlockBlob.CreateSnapshotAsync (metadata, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlockBlob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to create a snapshot of the blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSnapshotAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlockBlob&gt; CreateSnapshotAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.Blob.CloudBlockBlob&gt; CreateSnapshotAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSnapshotAsync (metadata As IDictionary(Of String, String), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of CloudBlockBlob)" />
      <MemberSignature Language="F#" Value="abstract member CreateSnapshotAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlockBlob&gt;&#xA;override this.CreateSnapshotAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlockBlob&gt;" Usage="cloudBlockBlob.CreateSnapshotAsync (metadata, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlockBlob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to create a snapshot of the blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadBlockList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.ListBlockItem&gt; DownloadBlockList (Microsoft.Azure.Storage.Blob.BlockListingFilter blockListingFilter = Microsoft.Azure.Storage.Blob.BlockListingFilter.Committed, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Storage.Blob.ListBlockItem&gt; DownloadBlockList(valuetype Microsoft.Azure.Storage.Blob.BlockListingFilter blockListingFilter, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadBlockList(Microsoft.Azure.Storage.Blob.BlockListingFilter,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadBlockList (Optional blockListingFilter As BlockListingFilter = Microsoft.Azure.Storage.Blob.BlockListingFilter.Committed, Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing) As IEnumerable(Of ListBlockItem)" />
      <MemberSignature Language="F#" Value="abstract member DownloadBlockList : Microsoft.Azure.Storage.Blob.BlockListingFilter * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; seq&lt;Microsoft.Azure.Storage.Blob.ListBlockItem&gt;&#xA;override this.DownloadBlockList : Microsoft.Azure.Storage.Blob.BlockListingFilter * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; seq&lt;Microsoft.Azure.Storage.Blob.ListBlockItem&gt;" Usage="cloudBlockBlob.DownloadBlockList (blockListingFilter, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.ListBlockItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockListingFilter" Type="Microsoft.Azure.Storage.Blob.BlockListingFilter" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="blockListingFilter">A <see cref="T:Microsoft.Azure.Storage.Blob.BlockListingFilter" /> enumeration value that indicates whether to return 
            committed blocks, uncommitted blocks, or both.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Returns an enumerable collection of the blob's blocks, using the specified block list filter.
            </summary>
        <returns>An enumerable collection of objects implementing <see cref="T:Microsoft.Azure.Storage.Blob.ListBlockItem" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadBlockListAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.ListBlockItem&gt;&gt; DownloadBlockListAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Storage.Blob.ListBlockItem&gt;&gt; DownloadBlockListAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadBlockListAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadBlockListAsync () As Task(Of IEnumerable(Of ListBlockItem))" />
      <MemberSignature Language="F#" Value="abstract member DownloadBlockListAsync : unit -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Storage.Blob.ListBlockItem&gt;&gt;&#xA;override this.DownloadBlockListAsync : unit -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Storage.Blob.ListBlockItem&gt;&gt;" Usage="cloudBlockBlob.DownloadBlockListAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.ListBlockItem&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Initiates an asynchronous operation to return an enumerable collection of the blob's blocks, 
            using the specified block list filter.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that is an enumerable collection of type <see cref="T:Microsoft.Azure.Storage.Blob.ListBlockItem" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadBlockListAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.ListBlockItem&gt;&gt; DownloadBlockListAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Storage.Blob.ListBlockItem&gt;&gt; DownloadBlockListAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadBlockListAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadBlockListAsync (cancellationToken As CancellationToken) As Task(Of IEnumerable(Of ListBlockItem))" />
      <MemberSignature Language="F#" Value="abstract member DownloadBlockListAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Storage.Blob.ListBlockItem&gt;&gt;&#xA;override this.DownloadBlockListAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Storage.Blob.ListBlockItem&gt;&gt;" Usage="cloudBlockBlob.DownloadBlockListAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.ListBlockItem&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to return an enumerable collection of the blob's blocks, 
            using the specified block list filter.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that is an enumerable collection of type <see cref="T:Microsoft.Azure.Storage.Blob.ListBlockItem" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadBlockListAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.ListBlockItem&gt;&gt; DownloadBlockListAsync (Microsoft.Azure.Storage.Blob.BlockListingFilter blockListingFilter, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Storage.Blob.ListBlockItem&gt;&gt; DownloadBlockListAsync(valuetype Microsoft.Azure.Storage.Blob.BlockListingFilter blockListingFilter, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadBlockListAsync(Microsoft.Azure.Storage.Blob.BlockListingFilter,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadBlockListAsync (blockListingFilter As BlockListingFilter, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of IEnumerable(Of ListBlockItem))" />
      <MemberSignature Language="F#" Value="abstract member DownloadBlockListAsync : Microsoft.Azure.Storage.Blob.BlockListingFilter * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Storage.Blob.ListBlockItem&gt;&gt;&#xA;override this.DownloadBlockListAsync : Microsoft.Azure.Storage.Blob.BlockListingFilter * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Storage.Blob.ListBlockItem&gt;&gt;" Usage="cloudBlockBlob.DownloadBlockListAsync (blockListingFilter, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.ListBlockItem&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockListingFilter" Type="Microsoft.Azure.Storage.Blob.BlockListingFilter" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="blockListingFilter">A <see cref="T:Microsoft.Azure.Storage.Blob.BlockListingFilter" /> enumeration value that indicates whether to return
            committed blocks, uncommitted blocks, or both.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to return an enumerable collection of the blob's blocks, 
            using the specified block list filter.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that is an enumerable collection of type <see cref="T:Microsoft.Azure.Storage.Blob.ListBlockItem" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadBlockListAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.ListBlockItem&gt;&gt; DownloadBlockListAsync (Microsoft.Azure.Storage.Blob.BlockListingFilter blockListingFilter, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Storage.Blob.ListBlockItem&gt;&gt; DownloadBlockListAsync(valuetype Microsoft.Azure.Storage.Blob.BlockListingFilter blockListingFilter, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadBlockListAsync(Microsoft.Azure.Storage.Blob.BlockListingFilter,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadBlockListAsync (blockListingFilter As BlockListingFilter, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of IEnumerable(Of ListBlockItem))" />
      <MemberSignature Language="F#" Value="abstract member DownloadBlockListAsync : Microsoft.Azure.Storage.Blob.BlockListingFilter * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Storage.Blob.ListBlockItem&gt;&gt;&#xA;override this.DownloadBlockListAsync : Microsoft.Azure.Storage.Blob.BlockListingFilter * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Storage.Blob.ListBlockItem&gt;&gt;" Usage="cloudBlockBlob.DownloadBlockListAsync (blockListingFilter, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.ListBlockItem&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockListingFilter" Type="Microsoft.Azure.Storage.Blob.BlockListingFilter" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="blockListingFilter">A <see cref="T:Microsoft.Azure.Storage.Blob.BlockListingFilter" /> enumeration value that indicates whether to return 
            committed blocks, uncommitted blocks, or both.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to return an enumerable collection of the blob's blocks, 
            using the specified block list filter.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object that is an enumerable collection of type <see cref="T:Microsoft.Azure.Storage.Blob.ListBlockItem" /> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadText">
      <MemberSignature Language="C#" Value="public virtual string DownloadText (System.Text.Encoding encoding = default, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DownloadText(class System.Text.Encoding encoding, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadText(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadText (Optional encoding As Encoding = Nothing, Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing) As String" />
      <MemberSignature Language="F#" Value="abstract member DownloadText : System.Text.Encoding * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; string&#xA;override this.DownloadText : System.Text.Encoding * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; string" Usage="cloudBlockBlob.DownloadText (encoding, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="encoding">An object that indicates the text encoding to use.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Downloads the blob's contents as a string.
            </summary>
        <returns>The contents of the blob, as a string.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadTextAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; DownloadTextAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; DownloadTextAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadTextAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadTextAsync () As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member DownloadTextAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.DownloadTextAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="cloudBlockBlob.DownloadTextAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Initiates an asynchronous operation to download the blob's contents as a string.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <c>string</c> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadTextAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; DownloadTextAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; DownloadTextAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadTextAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadTextAsync (cancellationToken As CancellationToken) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member DownloadTextAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.DownloadTextAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="cloudBlockBlob.DownloadTextAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to download the blob's contents as a string.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <c>string</c> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadTextAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; DownloadTextAsync (System.Text.Encoding encoding, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; DownloadTextAsync(class System.Text.Encoding encoding, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadTextAsync(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadTextAsync (encoding As Encoding, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member DownloadTextAsync : System.Text.Encoding * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.DownloadTextAsync : System.Text.Encoding * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="cloudBlockBlob.DownloadTextAsync (encoding, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="encoding">An object that indicates the text encoding to use.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to download the blob's contents as a string.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <c>string</c> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadTextAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; DownloadTextAsync (System.Text.Encoding encoding, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; DownloadTextAsync(class System.Text.Encoding encoding, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadTextAsync(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadTextAsync (encoding As Encoding, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member DownloadTextAsync : System.Text.Encoding * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.DownloadTextAsync : System.Text.Encoding * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="cloudBlockBlob.DownloadTextAsync (encoding, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="encoding">An object that indicates the text encoding to use.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to download the blob's contents as a string.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <c>string</c> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadTextAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; DownloadTextAsync (System.Text.Encoding encoding, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; DownloadTextAsync(class System.Text.Encoding encoding, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.IProgress`1&lt;class Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadTextAsync(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadTextAsync (encoding As Encoding, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, progressHandler As IProgress(Of StorageProgress), cancellationToken As CancellationToken) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member DownloadTextAsync : System.Text.Encoding * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.DownloadTextAsync : System.Text.Encoding * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="cloudBlockBlob.DownloadTextAsync (encoding, accessCondition, options, operationContext, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="encoding">An object that indicates the text encoding to use.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="progressHandler"> A <see cref="T:System.IProgress`1" /> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress" /> messages.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to download the blob's contents as a string.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <c>string</c> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCreateSnapshot">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.Blob.CloudBlockBlob EndCreateSnapshot (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.Blob.CloudBlockBlob EndCreateSnapshot(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndCreateSnapshot(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndCreateSnapshot (asyncResult As IAsyncResult) As CloudBlockBlob" />
      <MemberSignature Language="F#" Value="abstract member EndCreateSnapshot : IAsyncResult -&gt; Microsoft.Azure.Storage.Blob.CloudBlockBlob&#xA;override this.EndCreateSnapshot : IAsyncResult -&gt; Microsoft.Azure.Storage.Blob.CloudBlockBlob" Usage="cloudBlockBlob.EndCreateSnapshot asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.Blob.CloudBlockBlob</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to create a snapshot of the blob.
            </summary>
        <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob" /> object that is a blob snapshot.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDownloadBlockList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.ListBlockItem&gt; EndDownloadBlockList (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Storage.Blob.ListBlockItem&gt; EndDownloadBlockList(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndDownloadBlockList(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndDownloadBlockList (asyncResult As IAsyncResult) As IEnumerable(Of ListBlockItem)" />
      <MemberSignature Language="F#" Value="abstract member EndDownloadBlockList : IAsyncResult -&gt; seq&lt;Microsoft.Azure.Storage.Blob.ListBlockItem&gt;&#xA;override this.EndDownloadBlockList : IAsyncResult -&gt; seq&lt;Microsoft.Azure.Storage.Blob.ListBlockItem&gt;" Usage="cloudBlockBlob.EndDownloadBlockList asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Storage.Blob.ListBlockItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to return an enumerable collection of the blob's blocks, 
            using the specified block list filter.
            </summary>
        <returns>An enumerable collection of objects implementing <see cref="T:Microsoft.Azure.Storage.Blob.ListBlockItem" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDownloadText">
      <MemberSignature Language="C#" Value="public virtual string EndDownloadText (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string EndDownloadText(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndDownloadText(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndDownloadText (asyncResult As IAsyncResult) As String" />
      <MemberSignature Language="F#" Value="abstract member EndDownloadText : IAsyncResult -&gt; string&#xA;override this.EndDownloadText : IAsyncResult -&gt; string" Usage="cloudBlockBlob.EndDownloadText asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to download the blob's contents as a string.
            </summary>
        <returns>The contents of the blob, as a string.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOpenWrite">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.Blob.CloudBlobStream EndOpenWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.Blob.CloudBlobStream EndOpenWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndOpenWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndOpenWrite (asyncResult As IAsyncResult) As CloudBlobStream" />
      <MemberSignature Language="F#" Value="abstract member EndOpenWrite : IAsyncResult -&gt; Microsoft.Azure.Storage.Blob.CloudBlobStream&#xA;override this.EndOpenWrite : IAsyncResult -&gt; Microsoft.Azure.Storage.Blob.CloudBlobStream" Usage="cloudBlockBlob.EndOpenWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.Blob.CloudBlobStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to open a stream for writing to the blob.
            </summary>
        <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream" /> to be used for writing to the blob.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndPutBlock">
      <MemberSignature Language="C#" Value="public virtual void EndPutBlock (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndPutBlock(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndPutBlock(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndPutBlock (asyncResult As IAsyncResult)" />
      <MemberSignature Language="F#" Value="abstract member EndPutBlock : IAsyncResult -&gt; unit&#xA;override this.EndPutBlock : IAsyncResult -&gt; unit" Usage="cloudBlockBlob.EndPutBlock asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to upload a single block.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndPutBlockList">
      <MemberSignature Language="C#" Value="public virtual void EndPutBlockList (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndPutBlockList(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndPutBlockList(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndPutBlockList (asyncResult As IAsyncResult)" />
      <MemberSignature Language="F#" Value="abstract member EndPutBlockList : IAsyncResult -&gt; unit&#xA;override this.EndPutBlockList : IAsyncResult -&gt; unit" Usage="cloudBlockBlob.EndPutBlockList asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to upload a list of blocks to a new or existing blob.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSetStandardBlobTier">
      <MemberSignature Language="C#" Value="public virtual void EndSetStandardBlobTier (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndSetStandardBlobTier(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndSetStandardBlobTier(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndSetStandardBlobTier (asyncResult As IAsyncResult)" />
      <MemberSignature Language="F#" Value="abstract member EndSetStandardBlobTier : IAsyncResult -&gt; unit&#xA;override this.EndSetStandardBlobTier : IAsyncResult -&gt; unit" Usage="cloudBlockBlob.EndSetStandardBlobTier asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to set the tier of the blob on a standard storage account.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUploadFromByteArray">
      <MemberSignature Language="C#" Value="public virtual void EndUploadFromByteArray (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndUploadFromByteArray(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndUploadFromByteArray(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndUploadFromByteArray (asyncResult As IAsyncResult)" />
      <MemberSignature Language="F#" Value="abstract member EndUploadFromByteArray : IAsyncResult -&gt; unit&#xA;override this.EndUploadFromByteArray : IAsyncResult -&gt; unit" Usage="cloudBlockBlob.EndUploadFromByteArray asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndUploadFromByteArray(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to upload the contents of a byte array to a blob.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUploadFromFile">
      <MemberSignature Language="C#" Value="public virtual void EndUploadFromFile (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndUploadFromFile(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndUploadFromFile(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndUploadFromFile (asyncResult As IAsyncResult)" />
      <MemberSignature Language="F#" Value="abstract member EndUploadFromFile : IAsyncResult -&gt; unit&#xA;override this.EndUploadFromFile : IAsyncResult -&gt; unit" Usage="cloudBlockBlob.EndUploadFromFile asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndUploadFromFile(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to upload a file to a blob. 
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUploadFromStream">
      <MemberSignature Language="C#" Value="public virtual void EndUploadFromStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndUploadFromStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndUploadFromStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndUploadFromStream (asyncResult As IAsyncResult)" />
      <MemberSignature Language="F#" Value="abstract member EndUploadFromStream : IAsyncResult -&gt; unit&#xA;override this.EndUploadFromStream : IAsyncResult -&gt; unit" Usage="cloudBlockBlob.EndUploadFromStream asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndUploadFromStream(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to upload a stream to a block blob. 
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUploadText">
      <MemberSignature Language="C#" Value="public virtual void EndUploadText (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndUploadText(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndUploadText(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndUploadText (asyncResult As IAsyncResult)" />
      <MemberSignature Language="F#" Value="abstract member EndUploadText : IAsyncResult -&gt; unit&#xA;override this.EndUploadText : IAsyncResult -&gt; unit" Usage="cloudBlockBlob.EndUploadText asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references the pending asynchronous operation.</param>
        <summary>
            Ends an asynchronous operation to upload a string of text to a blob. 
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Storage.Blob.CloudBlobStream OpenWrite (Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Storage.Blob.CloudBlobStream OpenWrite(class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.OpenWrite(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenWrite (Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing) As CloudBlobStream" />
      <MemberSignature Language="F#" Value="abstract member OpenWrite : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; Microsoft.Azure.Storage.Blob.CloudBlobStream&#xA;override this.OpenWrite : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; Microsoft.Azure.Storage.Blob.CloudBlobStream" Usage="cloudBlockBlob.OpenWrite (accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Storage.Blob.CloudBlobStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Opens a stream for writing to the blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream" /> to be used for writing to the blob.</returns>
        <remarks>
          <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" /> method under the covers.</para>
          <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StreamWriteSizeInBytes" /> property before calling this method to specify the block size to write, in bytes, 
            ranging from between 16 KB and 100 MB inclusive.</para>
          <para>To throw an exception if the blob exists instead of overwriting it, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition" />
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt; OpenWriteAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.Blob.CloudBlobStream&gt; OpenWriteAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.OpenWriteAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenWriteAsync () As Task(Of CloudBlobStream)" />
      <MemberSignature Language="F#" Value="abstract member OpenWriteAsync : unit -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;&#xA;override this.OpenWriteAsync : unit -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;" Usage="cloudBlockBlob.OpenWriteAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Initiates an asynchronous operation to open a stream for writing to the blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream" /> that represents the asynchronous operation.</returns>
        <remarks>
          <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" /> method under the covers.</para>
          <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StreamWriteSizeInBytes" /> property before calling this method to specify the block size to write, in bytes, 
            ranging from between 16 KB and 100 MB inclusive.</para>
          <para>To throw an exception if the blob exists instead of overwriting it, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.OpenWriteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt; OpenWriteAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.Blob.CloudBlobStream&gt; OpenWriteAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.OpenWriteAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenWriteAsync (cancellationToken As CancellationToken) As Task(Of CloudBlobStream)" />
      <MemberSignature Language="F#" Value="abstract member OpenWriteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;&#xA;override this.OpenWriteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;" Usage="cloudBlockBlob.OpenWriteAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to open a stream for writing to the blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream" /> that represents the asynchronous operation.</returns>
        <remarks>
          <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" /> method under the covers.</para>
          <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StreamWriteSizeInBytes" /> property before calling this method to specify the block size to write, in bytes, 
            ranging from between 16 KB and 100 MB inclusive.</para>
          <para>To throw an exception if the blob exists instead of overwriting it, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.OpenWriteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt; OpenWriteAsync (Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.Blob.CloudBlobStream&gt; OpenWriteAsync(class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.OpenWriteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenWriteAsync (accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of CloudBlobStream)" />
      <MemberSignature Language="F#" Value="abstract member OpenWriteAsync : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;&#xA;override this.OpenWriteAsync : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;" Usage="cloudBlockBlob.OpenWriteAsync (accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to open a stream for writing to the blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream" /> that represents the asynchronous operation.</returns>
        <remarks>
          <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" /> method under the covers.</para>
          <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StreamWriteSizeInBytes" /> property before calling this method to specify the block size to write, in bytes, 
            ranging from between 16 KB and 100 MB inclusive.</para>
          <para>To throw an exception if the blob exists instead of overwriting it, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition" />
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt; OpenWriteAsync (Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Storage.Blob.CloudBlobStream&gt; OpenWriteAsync(class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.OpenWriteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenWriteAsync (accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of CloudBlobStream)" />
      <MemberSignature Language="F#" Value="abstract member OpenWriteAsync : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;&#xA;override this.OpenWriteAsync : Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;" Usage="cloudBlockBlob.OpenWriteAsync (accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Storage.Blob.CloudBlobStream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to open a stream for writing to the blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream" /> that represents the asynchronous operation.</returns>
        <remarks>
          <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" /> method under the covers.</para>
          <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StreamWriteSizeInBytes" /> property before calling this method to specify the block size to write, in bytes, 
            ranging from between 16 KB and 100 MB inclusive.</para>
          <para>To throw an exception if the blob exists instead of overwriting it, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition" />
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PutBlock">
      <MemberSignature Language="C#" Value="public virtual void PutBlock (string blockId, System.IO.Stream blockData, Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PutBlock(string blockId, class System.IO.Stream blockData, class Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlock(System.String,System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PutBlock (blockId As String, blockData As Stream, contentChecksum As Checksum, Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member PutBlock : string * System.IO.Stream * Microsoft.Azure.Storage.Shared.Protocol.Checksum * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.PutBlock : string * System.IO.Stream * Microsoft.Azure.Storage.Shared.Protocol.Checksum * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudBlockBlob.PutBlock (blockId, blockData, contentChecksum, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockId" Type="System.String" />
        <Parameter Name="blockData" Type="System.IO.Stream" />
        <Parameter Name="contentChecksum" Type="Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="blockId">A Base64-encoded string that identifies the block.</param>
        <param name="blockData">A <see cref="T:System.IO.Stream" /> object that provides the data for the block.</param>
        <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Uploads a single block.
            </summary>
        <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum" /> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5" /> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64" /> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PutBlock">
      <MemberSignature Language="C#" Value="public void PutBlock (string blockId, Uri sourceUri, long? offset, long? count, Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PutBlock(string blockId, class System.Uri sourceUri, valuetype System.Nullable`1&lt;int64&gt; offset, valuetype System.Nullable`1&lt;int64&gt; count, class Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlock(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PutBlock (blockId As String, sourceUri As Uri, offset As Nullable(Of Long), count As Nullable(Of Long), contentChecksum As Checksum, Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="member this.PutBlock : string * Uri * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.Shared.Protocol.Checksum * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudBlockBlob.PutBlock (blockId, sourceUri, offset, count, contentChecksum, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockId" Type="System.String" />
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="count" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="contentChecksum" Type="Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="blockId">A Base64-encoded string that identifies the block.</param>
        <param name="sourceUri">A <see cref="T:System.Uri" /> specifying the absolute URI to the source blob.</param>
        <param name="offset">The byte offset at which to begin returning content.</param>
        <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
        <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Uploads a single block, copying from a source URI.
            </summary>
        <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum" /> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5" /> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64" /> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PutBlock">
      <MemberSignature Language="C#" Value="public virtual void PutBlock (string blockId, Uri sourceUri, long? offset, long? count, string contentMD5, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PutBlock(string blockId, class System.Uri sourceUri, valuetype System.Nullable`1&lt;int64&gt; offset, valuetype System.Nullable`1&lt;int64&gt; count, string contentMD5, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlock(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PutBlock (blockId As String, sourceUri As Uri, offset As Nullable(Of Long), count As Nullable(Of Long), contentMD5 As String, Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member PutBlock : string * Uri * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.PutBlock : string * Uri * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudBlockBlob.PutBlock (blockId, sourceUri, offset, count, contentMD5, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockId" Type="System.String" />
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="count" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="contentMD5" Type="System.String" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="blockId">A Base64-encoded string that identifies the block.</param>
        <param name="sourceUri">A <see cref="T:System.Uri" /> specifying the absolute URI to the source blob.</param>
        <param name="offset">The byte offset at which to begin returning content.</param>
        <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
        <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Uploads a single block, copying from a source URI.
            </summary>
        <remarks>
            Clients may send the Content-MD5 header for a given Put Block operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentMD5" /> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PutBlockAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task PutBlockAsync (string blockId, System.IO.Stream blockData, Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task PutBlockAsync(string blockId, class System.IO.Stream blockData, class Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum)" />
      <MemberSignature Language="VB.NET" Value="Public Function PutBlockAsync (blockId As String, blockData As Stream, Optional contentChecksum As Checksum = Nothing) As Task" />
      <MemberSignature Language="F#" Value="member this.PutBlockAsync : string * System.IO.Stream * Microsoft.Azure.Storage.Shared.Protocol.Checksum -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.PutBlockAsync (blockId, blockData, contentChecksum)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockId" Type="System.String" />
        <Parameter Name="blockData" Type="System.IO.Stream" />
        <Parameter Name="contentChecksum" Type="Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
      </Parameters>
      <Docs>
        <param name="blockId">A Base64-encoded string that identifies the block.</param>
        <param name="blockData">A <see cref="T:System.IO.Stream" /> object that provides the data for the block.</param>
        <param name="contentChecksum">An optional hash value used to ensure transactional integrity. May be <c>null</c>.</param>
        <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PutBlockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task PutBlockAsync (string blockId, System.IO.Stream blockData, string contentMD5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task PutBlockAsync(string blockId, class System.IO.Stream blockData, string contentMD5) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PutBlockAsync (blockId As String, blockData As Stream, contentMD5 As String) As Task" />
      <MemberSignature Language="F#" Value="abstract member PutBlockAsync : string * System.IO.Stream * string -&gt; System.Threading.Tasks.Task&#xA;override this.PutBlockAsync : string * System.IO.Stream * string -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.PutBlockAsync (blockId, blockData, contentMD5)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockId" Type="System.String" />
        <Parameter Name="blockData" Type="System.IO.Stream" />
        <Parameter Name="contentMD5" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="blockId">A Base64-encoded string that identifies the block.</param>
        <param name="blockData">A <see cref="T:System.IO.Stream" /> object that provides the data for the block.</param>
        <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
        <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>
            Clients may send the Content-MD5 header for a given Put Block operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentMD5" /> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5" /> property is set to <c>true</c> and the <paramref name="contentMD5" /> parameter is set 
            to <c>null</c>, then the client library will calculate the MD5 value internally.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PutBlockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task PutBlockAsync (string blockId, System.IO.Stream blockData, string contentMD5, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task PutBlockAsync(string blockId, class System.IO.Stream blockData, string contentMD5, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PutBlockAsync (blockId As String, blockData As Stream, contentMD5 As String, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member PutBlockAsync : string * System.IO.Stream * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.PutBlockAsync : string * System.IO.Stream * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.PutBlockAsync (blockId, blockData, contentMD5, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockId" Type="System.String" />
        <Parameter Name="blockData" Type="System.IO.Stream" />
        <Parameter Name="contentMD5" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="blockId">A Base64-encoded string that identifies the block.</param>
        <param name="blockData">A <see cref="T:System.IO.Stream" /> object that provides the data for the block.</param>
        <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>
            Clients may send the Content-MD5 header for a given Put Block operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentMD5" /> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5" /> property is set to <c>true</c> and the <paramref name="contentMD5" /> parameter is set 
            to <c>null</c>, then the client library will calculate the MD5 value internally.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PutBlockAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task PutBlockAsync (string blockId, Uri sourceUri, long? offset, long? count, Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task PutBlockAsync(string blockId, class System.Uri sourceUri, valuetype System.Nullable`1&lt;int64&gt; offset, valuetype System.Nullable`1&lt;int64&gt; count, class Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.Shared.Protocol.Checksum)" />
      <MemberSignature Language="VB.NET" Value="Public Function PutBlockAsync (blockId As String, sourceUri As Uri, offset As Nullable(Of Long), count As Nullable(Of Long), Optional contentChecksum As Checksum = Nothing) As Task" />
      <MemberSignature Language="F#" Value="member this.PutBlockAsync : string * Uri * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.Shared.Protocol.Checksum -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.PutBlockAsync (blockId, sourceUri, offset, count, contentChecksum)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockId" Type="System.String" />
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="count" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="contentChecksum" Type="Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
      </Parameters>
      <Docs>
        <param name="blockId">A Base64-encoded string that identifies the block.</param>
        <param name="sourceUri">A <see cref="T:System.Uri" /> specifying the absolute URI to the source blob.</param>
        <param name="offset">The byte offset at which to begin returning content.</param>
        <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
        <param name="contentChecksum">An optional hash value used to ensure transactional integrity. May be <c>null</c>.</param>
        <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PutBlockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task PutBlockAsync (string blockId, Uri sourceUri, long? offset, long? count, string contentMD5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task PutBlockAsync(string blockId, class System.Uri sourceUri, valuetype System.Nullable`1&lt;int64&gt; offset, valuetype System.Nullable`1&lt;int64&gt; count, string contentMD5) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PutBlockAsync (blockId As String, sourceUri As Uri, offset As Nullable(Of Long), count As Nullable(Of Long), contentMD5 As String) As Task" />
      <MemberSignature Language="F#" Value="abstract member PutBlockAsync : string * Uri * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * string -&gt; System.Threading.Tasks.Task&#xA;override this.PutBlockAsync : string * Uri * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * string -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.PutBlockAsync (blockId, sourceUri, offset, count, contentMD5)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockId" Type="System.String" />
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="count" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="contentMD5" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="blockId">A Base64-encoded string that identifies the block.</param>
        <param name="sourceUri">A <see cref="T:System.Uri" /> specifying the absolute URI to the source blob.</param>
        <param name="offset">The byte offset at which to begin returning content.</param>
        <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
        <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
        <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>
            Clients may send the Content-MD5 header for a given Put Block operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentMD5" /> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PutBlockAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task PutBlockAsync (string blockId, System.IO.Stream blockData, Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task PutBlockAsync(string blockId, class System.IO.Stream blockData, class Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function PutBlockAsync (blockId As String, blockData As Stream, contentChecksum As Checksum, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task" />
      <MemberSignature Language="F#" Value="member this.PutBlockAsync : string * System.IO.Stream * Microsoft.Azure.Storage.Shared.Protocol.Checksum * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.PutBlockAsync (blockId, blockData, contentChecksum, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockId" Type="System.String" />
        <Parameter Name="blockData" Type="System.IO.Stream" />
        <Parameter Name="contentChecksum" Type="Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="blockId">A Base64-encoded string that identifies the block.</param>
        <param name="blockData">A <see cref="T:System.IO.Stream" /> object that provides the data for the block.</param>
        <param name="contentChecksum">An optional hash value used to ensure transactional integrity. May be <c>null</c>.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PutBlockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task PutBlockAsync (string blockId, System.IO.Stream blockData, string contentMD5, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task PutBlockAsync(string blockId, class System.IO.Stream blockData, string contentMD5, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PutBlockAsync (blockId As String, blockData As Stream, contentMD5 As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member PutBlockAsync : string * System.IO.Stream * string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&#xA;override this.PutBlockAsync : string * System.IO.Stream * string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.PutBlockAsync (blockId, blockData, contentMD5, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockId" Type="System.String" />
        <Parameter Name="blockData" Type="System.IO.Stream" />
        <Parameter Name="contentMD5" Type="System.String" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="blockId">A Base64-encoded string that identifies the block.</param>
        <param name="blockData">A <see cref="T:System.IO.Stream" /> object that provides the data for the block.</param>
        <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>
            Clients may send the Content-MD5 header for a given Put Block operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentMD5" /> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5" /> property is set to <c>true</c> and the <paramref name="contentMD5" /> parameter is set 
            to <c>null</c>, then the client library will calculate the MD5 value internally.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PutBlockAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task PutBlockAsync (string blockId, Uri sourceUri, long? offset, long? count, Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task PutBlockAsync(string blockId, class System.Uri sourceUri, valuetype System.Nullable`1&lt;int64&gt; offset, valuetype System.Nullable`1&lt;int64&gt; count, class Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function PutBlockAsync (blockId As String, sourceUri As Uri, offset As Nullable(Of Long), count As Nullable(Of Long), contentChecksum As Checksum, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="member this.PutBlockAsync : string * Uri * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.Shared.Protocol.Checksum * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.PutBlockAsync (blockId, sourceUri, offset, count, contentChecksum, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockId" Type="System.String" />
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="count" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="contentChecksum" Type="Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="blockId">A Base64-encoded string that identifies the block.</param>
        <param name="sourceUri">A <see cref="T:System.Uri" /> specifying the absolute URI to the source blob.</param>
        <param name="offset">The byte offset at which to begin returning content.</param>
        <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
        <param name="contentChecksum">An optional hash value used to ensure transactional integrity. May be <c>null</c>.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PutBlockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task PutBlockAsync (string blockId, Uri sourceUri, long? offset, long? count, string contentMD5, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task PutBlockAsync(string blockId, class System.Uri sourceUri, valuetype System.Nullable`1&lt;int64&gt; offset, valuetype System.Nullable`1&lt;int64&gt; count, string contentMD5, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PutBlockAsync (blockId As String, sourceUri As Uri, offset As Nullable(Of Long), count As Nullable(Of Long), contentMD5 As String, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member PutBlockAsync : string * Uri * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.PutBlockAsync : string * Uri * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.PutBlockAsync (blockId, sourceUri, offset, count, contentMD5, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockId" Type="System.String" />
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="count" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="contentMD5" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="blockId">A Base64-encoded string that identifies the block.</param>
        <param name="sourceUri">A <see cref="T:System.Uri" /> specifying the absolute URI to the source blob.</param>
        <param name="offset">The byte offset at which to begin returning content.</param>
        <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
        <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>
            Clients may send the Content-MD5 header for a given Put Block operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentMD5" /> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PutBlockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task PutBlockAsync (string blockId, System.IO.Stream blockData, string contentMD5, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task PutBlockAsync(string blockId, class System.IO.Stream blockData, string contentMD5, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PutBlockAsync (blockId As String, blockData As Stream, contentMD5 As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member PutBlockAsync : string * System.IO.Stream * string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.PutBlockAsync : string * System.IO.Stream * string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.PutBlockAsync (blockId, blockData, contentMD5, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockId" Type="System.String" />
        <Parameter Name="blockData" Type="System.IO.Stream" />
        <Parameter Name="contentMD5" Type="System.String" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="blockId">A Base64-encoded string that identifies the block.</param>
        <param name="blockData">A <see cref="T:System.IO.Stream" /> object that provides the data for the block.</param>
        <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>
            Clients may send the Content-MD5 header for a given Put Block operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentMD5" /> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5" /> property is set to <c>true</c> and the <paramref name="contentMD5" /> parameter is set 
            to <c>null</c>, then the client library will calculate the MD5 value internally.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PutBlockAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task PutBlockAsync (string blockId, System.IO.Stream blockData, Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task PutBlockAsync(string blockId, class System.IO.Stream blockData, class Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.IProgress`1&lt;class Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function PutBlockAsync (blockId As String, blockData As Stream, contentChecksum As Checksum, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, progressHandler As IProgress(Of StorageProgress), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="member this.PutBlockAsync : string * System.IO.Stream * Microsoft.Azure.Storage.Shared.Protocol.Checksum * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.PutBlockAsync (blockId, blockData, contentChecksum, accessCondition, options, operationContext, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockId" Type="System.String" />
        <Parameter Name="blockData" Type="System.IO.Stream" />
        <Parameter Name="contentChecksum" Type="Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="blockId">A Base64-encoded string that identifies the block.</param>
        <param name="blockData">A <see cref="T:System.IO.Stream" /> object that provides the data for the block.</param>
        <param name="contentChecksum">An optional hash value used to ensure transactional integrity. May be <c>null</c>.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="progressHandler"> A <see cref="T:System.IProgress`1" /> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress" /> messages.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PutBlockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task PutBlockAsync (string blockId, System.IO.Stream blockData, string contentMD5, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task PutBlockAsync(string blockId, class System.IO.Stream blockData, string contentMD5, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.IProgress`1&lt;class Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PutBlockAsync (blockId As String, blockData As Stream, contentMD5 As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, progressHandler As IProgress(Of StorageProgress), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member PutBlockAsync : string * System.IO.Stream * string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.PutBlockAsync : string * System.IO.Stream * string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.PutBlockAsync (blockId, blockData, contentMD5, accessCondition, options, operationContext, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockId" Type="System.String" />
        <Parameter Name="blockData" Type="System.IO.Stream" />
        <Parameter Name="contentMD5" Type="System.String" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="blockId">A Base64-encoded string that identifies the block.</param>
        <param name="blockData">A <see cref="T:System.IO.Stream" /> object that provides the data for the block.</param>
        <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="progressHandler"> A <see cref="T:System.IProgress`1" /> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress" /> messages.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>
            Clients may send the Content-MD5 header for a given Put Block operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentMD5" /> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5" /> property is set to <c>true</c> and the <paramref name="contentMD5" /> parameter is set 
            to <c>null</c>, then the client library will calculate the MD5 value internally.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PutBlockAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task PutBlockAsync (string blockId, Uri sourceUri, long? offset, long? count, Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task PutBlockAsync(string blockId, class System.Uri sourceUri, valuetype System.Nullable`1&lt;int64&gt; offset, valuetype System.Nullable`1&lt;int64&gt; count, class Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function PutBlockAsync (blockId As String, sourceUri As Uri, offset As Nullable(Of Long), count As Nullable(Of Long), contentChecksum As Checksum, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task" />
      <MemberSignature Language="F#" Value="member this.PutBlockAsync : string * Uri * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.Shared.Protocol.Checksum * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.PutBlockAsync (blockId, sourceUri, offset, count, contentChecksum, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockId" Type="System.String" />
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="count" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="contentChecksum" Type="Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="blockId">A Base64-encoded string that identifies the block.</param>
        <param name="sourceUri">A <see cref="T:System.Uri" /> specifying the absolute URI to the source blob.</param>
        <param name="offset">The byte offset at which to begin returning content.</param>
        <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
        <param name="contentChecksum">An optional hash value used to ensure transactional integrity. May be <c>null</c>.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PutBlockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task PutBlockAsync (string blockId, Uri sourceUri, long? offset, long? count, string contentMD5, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task PutBlockAsync(string blockId, class System.Uri sourceUri, valuetype System.Nullable`1&lt;int64&gt; offset, valuetype System.Nullable`1&lt;int64&gt; count, string contentMD5, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PutBlockAsync (blockId As String, sourceUri As Uri, offset As Nullable(Of Long), count As Nullable(Of Long), contentMD5 As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member PutBlockAsync : string * Uri * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&#xA;override this.PutBlockAsync : string * Uri * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.PutBlockAsync (blockId, sourceUri, offset, count, contentMD5, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockId" Type="System.String" />
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="count" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="contentMD5" Type="System.String" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="blockId">A Base64-encoded string that identifies the block.</param>
        <param name="sourceUri">A <see cref="T:System.Uri" /> specifying the absolute URI to the source blob.</param>
        <param name="offset">The byte offset at which to begin returning content.</param>
        <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
        <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>
            Clients may send the Content-MD5 header for a given Put Block operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentMD5" /> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PutBlockAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task PutBlockAsync (string blockId, Uri sourceUri, long? offset, long? count, Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task PutBlockAsync(string blockId, class System.Uri sourceUri, valuetype System.Nullable`1&lt;int64&gt; offset, valuetype System.Nullable`1&lt;int64&gt; count, class Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function PutBlockAsync (blockId As String, sourceUri As Uri, offset As Nullable(Of Long), count As Nullable(Of Long), contentChecksum As Checksum, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="member this.PutBlockAsync : string * Uri * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Microsoft.Azure.Storage.Shared.Protocol.Checksum * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.PutBlockAsync (blockId, sourceUri, offset, count, contentChecksum, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockId" Type="System.String" />
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="count" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="contentChecksum" Type="Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="blockId">A Base64-encoded string that identifies the block.</param>
        <param name="sourceUri">A <see cref="T:System.Uri" /> specifying the absolute URI to the source blob.</param>
        <param name="offset">The byte offset at which to begin returning content.</param>
        <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
        <param name="contentChecksum">An optional hash value used to ensure transactional integrity. May be <c>null</c>.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PutBlockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task PutBlockAsync (string blockId, Uri sourceUri, long? offset, long? count, string contentMD5, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task PutBlockAsync(string blockId, class System.Uri sourceUri, valuetype System.Nullable`1&lt;int64&gt; offset, valuetype System.Nullable`1&lt;int64&gt; count, string contentMD5, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PutBlockAsync (blockId As String, sourceUri As Uri, offset As Nullable(Of Long), count As Nullable(Of Long), contentMD5 As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member PutBlockAsync : string * Uri * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.PutBlockAsync : string * Uri * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.PutBlockAsync (blockId, sourceUri, offset, count, contentMD5, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockId" Type="System.String" />
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="count" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="contentMD5" Type="System.String" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="blockId">A Base64-encoded string that identifies the block.</param>
        <param name="sourceUri">A <see cref="T:System.Uri" /> specifying the absolute URI to the source blob.</param>
        <param name="offset">The byte offset at which to begin returning content.</param>
        <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
        <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>
            Clients may send the Content-MD5 header for a given Put Block operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentMD5" /> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PutBlockList">
      <MemberSignature Language="C#" Value="public virtual void PutBlockList (System.Collections.Generic.IEnumerable&lt;string&gt; blockList, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PutBlockList(class System.Collections.Generic.IEnumerable`1&lt;string&gt; blockList, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockList(System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PutBlockList (blockList As IEnumerable(Of String), Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member PutBlockList : seq&lt;string&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.PutBlockList : seq&lt;string&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudBlockBlob.PutBlockList (blockList, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockList" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="blockList">An enumerable collection of block IDs, as Base64-encoded strings.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Uploads a list of blocks to a new or existing blob. 
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PutBlockListAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task PutBlockListAsync (System.Collections.Generic.IEnumerable&lt;string&gt; blockList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task PutBlockListAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; blockList) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockListAsync(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PutBlockListAsync (blockList As IEnumerable(Of String)) As Task" />
      <MemberSignature Language="F#" Value="abstract member PutBlockListAsync : seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&#xA;override this.PutBlockListAsync : seq&lt;string&gt; -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.PutBlockListAsync blockList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockList" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="blockList">An enumerable collection of block IDs, as Base64-encoded strings.</param>
        <summary>
            Initiates an asynchronous operation to upload a list of blocks to a new or existing blob. 
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PutBlockListAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task PutBlockListAsync (System.Collections.Generic.IEnumerable&lt;string&gt; blockList, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task PutBlockListAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; blockList, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockListAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PutBlockListAsync (blockList As IEnumerable(Of String), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member PutBlockListAsync : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.PutBlockListAsync : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.PutBlockListAsync (blockList, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockList" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="blockList">An enumerable collection of block IDs, as Base64-encoded strings.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a list of blocks to a new or existing blob. 
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PutBlockListAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task PutBlockListAsync (System.Collections.Generic.IEnumerable&lt;string&gt; blockList, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task PutBlockListAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; blockList, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockListAsync(System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PutBlockListAsync (blockList As IEnumerable(Of String), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member PutBlockListAsync : seq&lt;string&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&#xA;override this.PutBlockListAsync : seq&lt;string&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.PutBlockListAsync (blockList, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockList" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="blockList">An enumerable collection of block IDs, as Base64-encoded strings.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to upload a list of blocks to a new or existing blob. 
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PutBlockListAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task PutBlockListAsync (System.Collections.Generic.IEnumerable&lt;string&gt; blockList, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task PutBlockListAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; blockList, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockListAsync(System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PutBlockListAsync (blockList As IEnumerable(Of String), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member PutBlockListAsync : seq&lt;string&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.PutBlockListAsync : seq&lt;string&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.PutBlockListAsync (blockList, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockList" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="blockList">An enumerable collection of block IDs, as Base64-encoded strings.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a list of blocks to a new or existing blob. 
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStandardBlobTier">
      <MemberSignature Language="C#" Value="public virtual void SetStandardBlobTier (Microsoft.Azure.Storage.Blob.StandardBlobTier standardBlobTier, Microsoft.Azure.Storage.Blob.RehydratePriority? rehydratePriority = default, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStandardBlobTier(valuetype Microsoft.Azure.Storage.Blob.StandardBlobTier standardBlobTier, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.RehydratePriority&gt; rehydratePriority, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.SetStandardBlobTier(Microsoft.Azure.Storage.Blob.StandardBlobTier,System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetStandardBlobTier (standardBlobTier As StandardBlobTier, Optional rehydratePriority As Nullable(Of RehydratePriority) = Nothing, Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member SetStandardBlobTier : Microsoft.Azure.Storage.Blob.StandardBlobTier * Nullable&lt;Microsoft.Azure.Storage.Blob.RehydratePriority&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.SetStandardBlobTier : Microsoft.Azure.Storage.Blob.StandardBlobTier * Nullable&lt;Microsoft.Azure.Storage.Blob.RehydratePriority&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudBlockBlob.SetStandardBlobTier (standardBlobTier, rehydratePriority, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standardBlobTier" Type="Microsoft.Azure.Storage.Blob.StandardBlobTier" />
        <Parameter Name="rehydratePriority" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.RehydratePriority&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="rehydratePriority">To be added.</param>
        <param name="standardBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier" /> representing the tier to set.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request, or <c>null</c>. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Sets the tier of the blob on a standard storage account.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStandardBlobTierAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetStandardBlobTierAsync (Microsoft.Azure.Storage.Blob.StandardBlobTier standardBlobTier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetStandardBlobTierAsync(valuetype Microsoft.Azure.Storage.Blob.StandardBlobTier standardBlobTier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.SetStandardBlobTierAsync(Microsoft.Azure.Storage.Blob.StandardBlobTier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetStandardBlobTierAsync (standardBlobTier As StandardBlobTier) As Task" />
      <MemberSignature Language="F#" Value="abstract member SetStandardBlobTierAsync : Microsoft.Azure.Storage.Blob.StandardBlobTier -&gt; System.Threading.Tasks.Task&#xA;override this.SetStandardBlobTierAsync : Microsoft.Azure.Storage.Blob.StandardBlobTier -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.SetStandardBlobTierAsync standardBlobTier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standardBlobTier" Type="Microsoft.Azure.Storage.Blob.StandardBlobTier" />
      </Parameters>
      <Docs>
        <param name="standardBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier" /> representing the tier to set.</param>
        <summary>
            Initiates an asynchronous operation to set the tier of the blob on a standard storage account.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStandardBlobTierAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetStandardBlobTierAsync (Microsoft.Azure.Storage.Blob.StandardBlobTier standardBlobTier, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetStandardBlobTierAsync(valuetype Microsoft.Azure.Storage.Blob.StandardBlobTier standardBlobTier, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.SetStandardBlobTierAsync(Microsoft.Azure.Storage.Blob.StandardBlobTier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetStandardBlobTierAsync (standardBlobTier As StandardBlobTier, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member SetStandardBlobTierAsync : Microsoft.Azure.Storage.Blob.StandardBlobTier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SetStandardBlobTierAsync : Microsoft.Azure.Storage.Blob.StandardBlobTier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.SetStandardBlobTierAsync (standardBlobTier, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standardBlobTier" Type="Microsoft.Azure.Storage.Blob.StandardBlobTier" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="standardBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier" /> representing the tier to set.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to set the tier of the blob on a standard storage account.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStandardBlobTierAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetStandardBlobTierAsync (Microsoft.Azure.Storage.Blob.StandardBlobTier standardBlobTier, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetStandardBlobTierAsync(valuetype Microsoft.Azure.Storage.Blob.StandardBlobTier standardBlobTier, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.SetStandardBlobTierAsync(Microsoft.Azure.Storage.Blob.StandardBlobTier,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetStandardBlobTierAsync (standardBlobTier As StandardBlobTier, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member SetStandardBlobTierAsync : Microsoft.Azure.Storage.Blob.StandardBlobTier * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&#xA;override this.SetStandardBlobTierAsync : Microsoft.Azure.Storage.Blob.StandardBlobTier * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.SetStandardBlobTierAsync (standardBlobTier, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standardBlobTier" Type="Microsoft.Azure.Storage.Blob.StandardBlobTier" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="standardBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier" /> representing the tier to set.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to set the tier of the blob on a standard storage account.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStandardBlobTierAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetStandardBlobTierAsync (Microsoft.Azure.Storage.Blob.StandardBlobTier standardBlobTier, Microsoft.Azure.Storage.Blob.RehydratePriority? rehydratePriority, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetStandardBlobTierAsync(valuetype Microsoft.Azure.Storage.Blob.StandardBlobTier standardBlobTier, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.RehydratePriority&gt; rehydratePriority, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.SetStandardBlobTierAsync(Microsoft.Azure.Storage.Blob.StandardBlobTier,System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetStandardBlobTierAsync (standardBlobTier As StandardBlobTier, rehydratePriority As Nullable(Of RehydratePriority), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member SetStandardBlobTierAsync : Microsoft.Azure.Storage.Blob.StandardBlobTier * Nullable&lt;Microsoft.Azure.Storage.Blob.RehydratePriority&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SetStandardBlobTierAsync : Microsoft.Azure.Storage.Blob.StandardBlobTier * Nullable&lt;Microsoft.Azure.Storage.Blob.RehydratePriority&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.SetStandardBlobTierAsync (standardBlobTier, rehydratePriority, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standardBlobTier" Type="Microsoft.Azure.Storage.Blob.StandardBlobTier" />
        <Parameter Name="rehydratePriority" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.RehydratePriority&gt;" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="rehydratePriority">To be added.</param>
        <param name="standardBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier" /> representing the tier to set.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to set the tier of the blob on a standard storage account.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopy">
      <MemberSignature Language="C#" Value="public virtual string StartCopy (Microsoft.Azure.Storage.Blob.CloudBlockBlob source, Microsoft.Azure.Storage.Blob.StandardBlobTier? standardBlockBlobTier = default, Microsoft.Azure.Storage.Blob.RehydratePriority? rehydratePriority = default, Microsoft.Azure.Storage.AccessCondition sourceAccessCondition = default, Microsoft.Azure.Storage.AccessCondition destAccessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string StartCopy(class Microsoft.Azure.Storage.Blob.CloudBlockBlob source, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.StandardBlobTier&gt; standardBlockBlobTier, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.RehydratePriority&gt; rehydratePriority, class Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, class Microsoft.Azure.Storage.AccessCondition destAccessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StartCopy(Microsoft.Azure.Storage.Blob.CloudBlockBlob,System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCopy (source As CloudBlockBlob, Optional standardBlockBlobTier As Nullable(Of StandardBlobTier) = Nothing, Optional rehydratePriority As Nullable(Of RehydratePriority) = Nothing, Optional sourceAccessCondition As AccessCondition = Nothing, Optional destAccessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing) As String" />
      <MemberSignature Language="F#" Value="override this.StartCopy : Microsoft.Azure.Storage.Blob.CloudBlockBlob * Nullable&lt;Microsoft.Azure.Storage.Blob.StandardBlobTier&gt; * Nullable&lt;Microsoft.Azure.Storage.Blob.RehydratePriority&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; string" Usage="cloudBlockBlob.StartCopy (source, standardBlockBlobTier, rehydratePriority, sourceAccessCondition, destAccessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Azure.Storage.Blob.CloudBlockBlob" />
        <Parameter Name="standardBlockBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.StandardBlobTier&gt;" />
        <Parameter Name="rehydratePriority" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.RehydratePriority&gt;" />
        <Parameter Name="sourceAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="destAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob" /> object.</param>
        <param name="standardBlockBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier" /> representing the tier to set.</param>
        <param name="rehydratePriority">The priority with which to rehydrate an archived blob.</param>
        <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
        <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Begins an operation to start copying another block blob's contents, properties, and metadata to this block blob.
            </summary>
        <returns>The copy ID associated with the copy operation.</returns>
        <remarks>
            This method fetches the blob's ETag, last-modified time, and part of the copy state.
            The copy ID and copy status fields are fetched, and the rest of the copy state is cleared.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopy">
      <MemberSignature Language="C#" Value="public string StartCopy (Microsoft.Azure.Storage.Blob.CloudBlockBlob source, Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, bool syncCopy, Microsoft.Azure.Storage.Blob.StandardBlobTier? standardBlockBlobTier, Microsoft.Azure.Storage.Blob.RehydratePriority? rehydratePriority, Microsoft.Azure.Storage.AccessCondition sourceAccessCondition = default, Microsoft.Azure.Storage.AccessCondition destAccessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string StartCopy(class Microsoft.Azure.Storage.Blob.CloudBlockBlob source, class Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, bool syncCopy, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.StandardBlobTier&gt; standardBlockBlobTier, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.RehydratePriority&gt; rehydratePriority, class Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, class Microsoft.Azure.Storage.AccessCondition destAccessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StartCopy(Microsoft.Azure.Storage.Blob.CloudBlockBlob,Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.Boolean,System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartCopy (source As CloudBlockBlob, contentChecksum As Checksum, syncCopy As Boolean, standardBlockBlobTier As Nullable(Of StandardBlobTier), rehydratePriority As Nullable(Of RehydratePriority), Optional sourceAccessCondition As AccessCondition = Nothing, Optional destAccessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing) As String" />
      <MemberSignature Language="F#" Value="override this.StartCopy : Microsoft.Azure.Storage.Blob.CloudBlockBlob * Microsoft.Azure.Storage.Shared.Protocol.Checksum * bool * Nullable&lt;Microsoft.Azure.Storage.Blob.StandardBlobTier&gt; * Nullable&lt;Microsoft.Azure.Storage.Blob.RehydratePriority&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; string" Usage="cloudBlockBlob.StartCopy (source, contentChecksum, syncCopy, standardBlockBlobTier, rehydratePriority, sourceAccessCondition, destAccessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Azure.Storage.Blob.CloudBlockBlob" />
        <Parameter Name="contentChecksum" Type="Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
        <Parameter Name="syncCopy" Type="System.Boolean" />
        <Parameter Name="standardBlockBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.StandardBlobTier&gt;" />
        <Parameter Name="rehydratePriority" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.RehydratePriority&gt;" />
        <Parameter Name="sourceAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="destAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob" /> object.</param>
        <param name="contentChecksum">An hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
        <param name="syncCopy">A boolean to enable synchronous server copy of blobs.</param>
        <param name="standardBlockBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier" /> representing the tier to set.</param>
        <param name="rehydratePriority">The priority with which to rehydrate an archived blob.</param>
        <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
        <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Begins an operation to start copying another block blob's contents, properties, and metadata to this block blob.
            </summary>
        <returns>The copy ID associated with the copy operation.</returns>
        <remarks>
            This method fetches the blob's ETag, last-modified time, and part of the copy state.
            The copy ID and copy status fields are fetched, and the rest of the copy state is cleared.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; StartCopyAsync (Microsoft.Azure.Storage.Blob.CloudBlockBlob source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; StartCopyAsync(class Microsoft.Azure.Storage.Blob.CloudBlockBlob source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudBlockBlob)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCopyAsync (source As CloudBlockBlob) As Task(Of String)" />
      <MemberSignature Language="F#" Value="override this.StartCopyAsync : Microsoft.Azure.Storage.Blob.CloudBlockBlob -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="cloudBlockBlob.StartCopyAsync source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Azure.Storage.Blob.CloudBlockBlob" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob" /> object.</param>
        <summary>
            Initiates an asynchronous operation to start copying another block blob's contents, properties, and metadata to this block blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <c>string</c> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; StartCopyAsync (Microsoft.Azure.Storage.Blob.CloudBlockBlob source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; StartCopyAsync(class Microsoft.Azure.Storage.Blob.CloudBlockBlob source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudBlockBlob,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCopyAsync (source As CloudBlockBlob, cancellationToken As CancellationToken) As Task(Of String)" />
      <MemberSignature Language="F#" Value="override this.StartCopyAsync : Microsoft.Azure.Storage.Blob.CloudBlockBlob * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="cloudBlockBlob.StartCopyAsync (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Azure.Storage.Blob.CloudBlockBlob" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob" /> object.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to start copying another block blob's contents, properties, and metadata to this block blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <c>string</c> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; StartCopyAsync (Microsoft.Azure.Storage.Blob.CloudBlockBlob source, Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, Microsoft.Azure.Storage.AccessCondition destAccessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; StartCopyAsync(class Microsoft.Azure.Storage.Blob.CloudBlockBlob source, class Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, class Microsoft.Azure.Storage.AccessCondition destAccessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudBlockBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCopyAsync (source As CloudBlockBlob, sourceAccessCondition As AccessCondition, destAccessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of String)" />
      <MemberSignature Language="F#" Value="override this.StartCopyAsync : Microsoft.Azure.Storage.Blob.CloudBlockBlob * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="cloudBlockBlob.StartCopyAsync (source, sourceAccessCondition, destAccessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Azure.Storage.Blob.CloudBlockBlob" />
        <Parameter Name="sourceAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="destAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob" /> object.</param>
        <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
        <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to start copying another block blob's contents, properties, and metadata to this block blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <c>string</c> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; StartCopyAsync (Microsoft.Azure.Storage.Blob.CloudBlockBlob source, Microsoft.Azure.Storage.Blob.StandardBlobTier? standardBlockBlobTier, Microsoft.Azure.Storage.Blob.RehydratePriority? rehydratePriority, Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, Microsoft.Azure.Storage.AccessCondition destAccessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; StartCopyAsync(class Microsoft.Azure.Storage.Blob.CloudBlockBlob source, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.StandardBlobTier&gt; standardBlockBlobTier, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.RehydratePriority&gt; rehydratePriority, class Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, class Microsoft.Azure.Storage.AccessCondition destAccessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudBlockBlob,System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCopyAsync (source As CloudBlockBlob, standardBlockBlobTier As Nullable(Of StandardBlobTier), rehydratePriority As Nullable(Of RehydratePriority), sourceAccessCondition As AccessCondition, destAccessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of String)" />
      <MemberSignature Language="F#" Value="override this.StartCopyAsync : Microsoft.Azure.Storage.Blob.CloudBlockBlob * Nullable&lt;Microsoft.Azure.Storage.Blob.StandardBlobTier&gt; * Nullable&lt;Microsoft.Azure.Storage.Blob.RehydratePriority&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="cloudBlockBlob.StartCopyAsync (source, standardBlockBlobTier, rehydratePriority, sourceAccessCondition, destAccessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Azure.Storage.Blob.CloudBlockBlob" />
        <Parameter Name="standardBlockBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.StandardBlobTier&gt;" />
        <Parameter Name="rehydratePriority" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.RehydratePriority&gt;" />
        <Parameter Name="sourceAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="destAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob" /> object.</param>
        <param name="standardBlockBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier" /> representing the tier to set.</param>
        <param name="rehydratePriority">The priority with which to rehydrate an archived blob.</param>
        <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
        <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to start copying another block blob's contents, properties, and metadata to this block blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <c>string</c> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopyAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; StartCopyAsync (Microsoft.Azure.Storage.Blob.CloudBlockBlob source, Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, bool incrementalCopy, bool syncCopy, Microsoft.Azure.Storage.Blob.StandardBlobTier? standardBlockBlobTier, Microsoft.Azure.Storage.Blob.RehydratePriority? rehydratePriority, Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, Microsoft.Azure.Storage.AccessCondition destAccessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; StartCopyAsync(class Microsoft.Azure.Storage.Blob.CloudBlockBlob source, class Microsoft.Azure.Storage.Shared.Protocol.Checksum contentChecksum, bool incrementalCopy, bool syncCopy, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.StandardBlobTier&gt; standardBlockBlobTier, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Storage.Blob.RehydratePriority&gt; rehydratePriority, class Microsoft.Azure.Storage.AccessCondition sourceAccessCondition, class Microsoft.Azure.Storage.AccessCondition destAccessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudBlockBlob,Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.Boolean,System.Boolean,System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartCopyAsync (source As CloudBlockBlob, contentChecksum As Checksum, incrementalCopy As Boolean, syncCopy As Boolean, standardBlockBlobTier As Nullable(Of StandardBlobTier), rehydratePriority As Nullable(Of RehydratePriority), sourceAccessCondition As AccessCondition, destAccessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of String)" />
      <MemberSignature Language="F#" Value="override this.StartCopyAsync : Microsoft.Azure.Storage.Blob.CloudBlockBlob * Microsoft.Azure.Storage.Shared.Protocol.Checksum * bool * bool * Nullable&lt;Microsoft.Azure.Storage.Blob.StandardBlobTier&gt; * Nullable&lt;Microsoft.Azure.Storage.Blob.RehydratePriority&gt; * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="cloudBlockBlob.StartCopyAsync (source, contentChecksum, incrementalCopy, syncCopy, standardBlockBlobTier, rehydratePriority, sourceAccessCondition, destAccessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Azure.Storage.Blob.CloudBlockBlob" />
        <Parameter Name="contentChecksum" Type="Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
        <Parameter Name="incrementalCopy" Type="System.Boolean" />
        <Parameter Name="syncCopy" Type="System.Boolean" />
        <Parameter Name="standardBlockBlobTier" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.StandardBlobTier&gt;" />
        <Parameter Name="rehydratePriority" Type="System.Nullable&lt;Microsoft.Azure.Storage.Blob.RehydratePriority&gt;" />
        <Parameter Name="sourceAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="destAccessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob" /> object.</param>
        <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
        <param name="syncCopy">A boolean to enable synchronous server copy of blobs.</param>
        <param name="incrementalCopy">A boolean indicating whether or not this is an incremental copy.</param>
        <param name="standardBlockBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier" /> representing the tier to set. Only valid on block blobs.</param>
        <param name="rehydratePriority">The priority with which to rehydrate an archived blob.</param>
        <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
        <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to start copying another block blob's contents, properties, and metadata to this block blob.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object of type <c>string</c> that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StreamWriteSizeInBytes">
      <MemberSignature Language="C#" Value="public int StreamWriteSizeInBytes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StreamWriteSizeInBytes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StreamWriteSizeInBytes" />
      <MemberSignature Language="VB.NET" Value="Public Property StreamWriteSizeInBytes As Integer" />
      <MemberSignature Language="F#" Value="member this.StreamWriteSizeInBytes : int with get, set" Usage="Microsoft.Azure.Storage.Blob.CloudBlockBlob.StreamWriteSizeInBytes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Azure.Storage.Blob.ICloudBlob.StreamWriteSizeInBytes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the block size for writing to a block blob.
            </summary>
        <value>The size of a block, in bytes, ranging from between 16 KB and 100 MB inclusive.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromByteArray">
      <MemberSignature Language="C#" Value="public virtual void UploadFromByteArray (byte[] buffer, int index, int count, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UploadFromByteArray(unsigned int8[] buffer, int32 index, int32 count, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UploadFromByteArray (buffer As Byte(), index As Integer, count As Integer, Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member UploadFromByteArray : byte[] * int * int * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.UploadFromByteArray : byte[] * int * int * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudBlockBlob.UploadFromByteArray (buffer, index, count, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="buffer">An array of bytes.</param>
        <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
        <param name="count">The number of bytes to be written to the blob.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Uploads the contents of a byte array to a blob. If the blob already exists, it will be overwritten.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromByteArrayAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromByteArrayAsync (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromByteArrayAsync(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromByteArrayAsync (buffer As Byte(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromByteArrayAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromByteArrayAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.UploadFromByteArrayAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">An array of bytes.</param>
        <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
        <param name="count">The number of bytes to be written to the blob.</param>
        <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromByteArrayAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromByteArrayAsync (byte[] buffer, int index, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromByteArrayAsync(unsigned int8[] buffer, int32 index, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromByteArrayAsync (buffer As Byte(), index As Integer, count As Integer, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromByteArrayAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromByteArrayAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.UploadFromByteArrayAsync (buffer, index, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">An array of bytes.</param>
        <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
        <param name="count">The number of bytes to be written to the blob.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromByteArrayAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromByteArrayAsync (byte[] buffer, int index, int count, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromByteArrayAsync(unsigned int8[] buffer, int32 index, int32 count, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromByteArrayAsync (buffer As Byte(), index As Integer, count As Integer, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromByteArrayAsync : byte[] * int * int * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromByteArrayAsync : byte[] * int * int * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.UploadFromByteArrayAsync (buffer, index, count, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="buffer">An array of bytes.</param>
        <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
        <param name="count">The number of bytes to be written to the blob.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromByteArrayAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromByteArrayAsync (byte[] buffer, int index, int count, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromByteArrayAsync(unsigned int8[] buffer, int32 index, int32 count, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromByteArrayAsync (buffer As Byte(), index As Integer, count As Integer, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromByteArrayAsync : byte[] * int * int * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromByteArrayAsync : byte[] * int * int * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.UploadFromByteArrayAsync (buffer, index, count, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">An array of bytes.</param>
        <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
        <param name="count">The number of bytes to be written to the blob.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromByteArrayAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromByteArrayAsync (byte[] buffer, int index, int count, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromByteArrayAsync(unsigned int8[] buffer, int32 index, int32 count, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.IProgress`1&lt;class Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromByteArrayAsync (buffer As Byte(), index As Integer, count As Integer, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, progressHandler As IProgress(Of StorageProgress), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromByteArrayAsync : byte[] * int * int * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromByteArrayAsync : byte[] * int * int * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.UploadFromByteArrayAsync (buffer, index, count, accessCondition, options, operationContext, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">An array of bytes.</param>
        <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
        <param name="count">The number of bytes to be written to the blob.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="progressHandler"> A <see cref="T:System.IProgress`1" /> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress" /> messages.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromFile">
      <MemberSignature Language="C#" Value="public virtual void UploadFromFile (string path, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UploadFromFile(string path, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UploadFromFile (path As String, Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member UploadFromFile : string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.UploadFromFile : string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudBlockBlob.UploadFromFile (path, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="path">A string containing the file path providing the blob content.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Uploads a file to the Blob service. If the blob already exists, it will be overwritten.
            </summary>
        <remarks>
            ## Examples
            [!code-csharp[Upload_From_File_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/BlobUploadDownloadTest.cs#sample_UploadBlob_EndToEnd "Upload From File Sample")] 
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromFileAsync (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromFileAsync(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromFileAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromFileAsync (path As String) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromFileAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromFileAsync : string -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.UploadFromFileAsync path" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">A string containing the file path providing the blob content.</param>
        <summary>
            Initiates an asynchronous operation to upload a file to a blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromFileAsync (string path, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromFileAsync(string path, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromFileAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromFileAsync (path As String, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromFileAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromFileAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.UploadFromFileAsync (path, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">A string containing the file path providing the blob content.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a file to a blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromFileAsync (string path, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromFileAsync(string path, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromFileAsync (path As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromFileAsync : string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromFileAsync : string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.UploadFromFileAsync (path, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="path">A string containing the file path providing the blob content.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to upload a file to a blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromFileAsync (string path, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromFileAsync(string path, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromFileAsync (path As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromFileAsync : string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromFileAsync : string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.UploadFromFileAsync (path, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">A string containing the file path providing the blob content.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a file to a blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromFileAsync (string path, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromFileAsync(string path, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.IProgress`1&lt;class Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromFileAsync (path As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, progressHandler As IProgress(Of StorageProgress), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromFileAsync : string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromFileAsync : string * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.UploadFromFileAsync (path, accessCondition, options, operationContext, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">A string containing the file path providing the blob content.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="progressHandler"> A <see cref="T:System.IProgress`1" /> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress" /> messages.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a file to a blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStream">
      <MemberSignature Language="C#" Value="public virtual void UploadFromStream (System.IO.Stream source, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UploadFromStream(class System.IO.Stream source, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UploadFromStream (source As Stream, Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStream : System.IO.Stream * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.UploadFromStream : System.IO.Stream * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudBlockBlob.UploadFromStream (source, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Uploads a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStream">
      <MemberSignature Language="C#" Value="public virtual void UploadFromStream (System.IO.Stream source, long length, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UploadFromStream(class System.IO.Stream source, int64 length, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UploadFromStream (source As Stream, length As Long, Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStream : System.IO.Stream * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.UploadFromStream : System.IO.Stream * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudBlockBlob.UploadFromStream (source, length, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="length">The number of bytes to write from the source stream at its current position.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Uploads a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromStreamAsync (System.IO.Stream source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromStreamAsync(class System.IO.Stream source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromStreamAsync (source As Stream) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStreamAsync : System.IO.Stream -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromStreamAsync : System.IO.Stream -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.UploadFromStreamAsync source" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <summary>
            Initiates an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromStreamAsync (System.IO.Stream source, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromStreamAsync(class System.IO.Stream source, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromStreamAsync (source As Stream, length As Long) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStreamAsync : System.IO.Stream * int64 -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromStreamAsync : System.IO.Stream * int64 -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.UploadFromStreamAsync (source, length)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="length">The number of bytes to write from the source stream at its current position.</param>
        <summary>
            Initiates an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromStreamAsync (System.IO.Stream source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromStreamAsync(class System.IO.Stream source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromStreamAsync (source As Stream, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStreamAsync : System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromStreamAsync : System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.UploadFromStreamAsync (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromStreamAsync (System.IO.Stream source, long length, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromStreamAsync(class System.IO.Stream source, int64 length, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromStreamAsync (source As Stream, length As Long, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStreamAsync : System.IO.Stream * int64 * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromStreamAsync : System.IO.Stream * int64 * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.UploadFromStreamAsync (source, length, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="length">The number of bytes to write from the source stream at its current position.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromStreamAsync (System.IO.Stream source, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromStreamAsync(class System.IO.Stream source, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromStreamAsync (source As Stream, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStreamAsync : System.IO.Stream * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromStreamAsync : System.IO.Stream * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.UploadFromStreamAsync (source, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromStreamAsync (System.IO.Stream source, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromStreamAsync(class System.IO.Stream source, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromStreamAsync (source As Stream, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStreamAsync : System.IO.Stream * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromStreamAsync : System.IO.Stream * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.UploadFromStreamAsync (source, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromStreamAsync (System.IO.Stream source, long length, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromStreamAsync(class System.IO.Stream source, int64 length, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromStreamAsync (source As Stream, length As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStreamAsync : System.IO.Stream * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromStreamAsync : System.IO.Stream * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.UploadFromStreamAsync (source, length, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="length">The number of bytes to write from the source stream at its current position.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromStreamAsync (System.IO.Stream source, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromStreamAsync(class System.IO.Stream source, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.IProgress`1&lt;class Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromStreamAsync (source As Stream, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, progressHandler As IProgress(Of StorageProgress), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStreamAsync : System.IO.Stream * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromStreamAsync : System.IO.Stream * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.UploadFromStreamAsync (source, accessCondition, options, operationContext, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="progressHandler"> A <see cref="T:System.IProgress`1" /> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress" /> messages.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromStreamAsync (System.IO.Stream source, long length, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromStreamAsync(class System.IO.Stream source, int64 length, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromStreamAsync (source As Stream, length As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStreamAsync : System.IO.Stream * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromStreamAsync : System.IO.Stream * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.UploadFromStreamAsync (source, length, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="length">The number of bytes to write from the source stream at its current position.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFromStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadFromStreamAsync (System.IO.Stream source, long length, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadFromStreamAsync(class System.IO.Stream source, int64 length, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.IProgress`1&lt;class Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFromStreamAsync (source As Stream, length As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, progressHandler As IProgress(Of StorageProgress), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadFromStreamAsync : System.IO.Stream * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadFromStreamAsync : System.IO.Stream * int64 * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.UploadFromStreamAsync (source, length, accessCondition, options, operationContext, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.IO.Stream" /> object providing the blob content.</param>
        <param name="length">The number of bytes to write from the source stream at its current position.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="progressHandler"> A <see cref="T:System.IProgress`1" /> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress" /> messages.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadText">
      <MemberSignature Language="C#" Value="public virtual void UploadText (string content, System.Text.Encoding encoding = default, Microsoft.Azure.Storage.AccessCondition accessCondition = default, Microsoft.Azure.Storage.Blob.BlobRequestOptions options = default, Microsoft.Azure.Storage.OperationContext operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UploadText(string content, class System.Text.Encoding encoding, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadText(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UploadText (content As String, Optional encoding As Encoding = Nothing, Optional accessCondition As AccessCondition = Nothing, Optional options As BlobRequestOptions = Nothing, Optional operationContext As OperationContext = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member UploadText : string * System.Text.Encoding * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit&#xA;override this.UploadText : string * System.Text.Encoding * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; unit" Usage="cloudBlockBlob.UploadText (content, encoding, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="content">A string containing the text to upload.</param>
        <param name="encoding">A <see cref="T:System.Text.Encoding" /> object that indicates the text encoding to use. If <c>null</c>, UTF-8 will be used.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Uploads a string of text to a blob. If the blob already exists, it will be overwritten.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadTextAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadTextAsync (string content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadTextAsync(string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadTextAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadTextAsync (content As String) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadTextAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.UploadTextAsync : string -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.UploadTextAsync content" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content">A string containing the text to upload.</param>
        <summary>
            Initiates an asynchronous operation to upload a string of text to a blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadTextAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadTextAsync (string content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadTextAsync(string content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadTextAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadTextAsync (content As String, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadTextAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadTextAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.UploadTextAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">A string containing the text to upload.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a string of text to a blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadTextAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadTextAsync (string content, System.Text.Encoding encoding, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadTextAsync(string content, class System.Text.Encoding encoding, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadTextAsync (content As String, encoding As Encoding, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadTextAsync : string * System.Text.Encoding * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task&#xA;override this.UploadTextAsync : string * System.Text.Encoding * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.UploadTextAsync (content, encoding, accessCondition, options, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
      </Parameters>
      <Docs>
        <param name="content">A string containing the text to upload.</param>
        <param name="encoding">A <see cref="T:System.Text.Encoding" /> object that indicates the text encoding to use. If <c>null</c>, UTF-8 will be used.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <summary>
            Initiates an asynchronous operation to upload a string of text to a blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadTextAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadTextAsync (string content, System.Text.Encoding encoding, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadTextAsync(string content, class System.Text.Encoding encoding, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadTextAsync (content As String, encoding As Encoding, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadTextAsync : string * System.Text.Encoding * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadTextAsync : string * System.Text.Encoding * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.UploadTextAsync (content, encoding, accessCondition, options, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">A string containing the text to upload.</param>
        <param name="encoding">A <see cref="T:System.Text.Encoding" /> object that indicates the text encoding to use. If <c>null</c>, UTF-8 will be used.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a string of text to a blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadTextAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadTextAsync (string content, System.Text.Encoding encoding, Microsoft.Azure.Storage.AccessCondition accessCondition, Microsoft.Azure.Storage.Blob.BlobRequestOptions options, Microsoft.Azure.Storage.OperationContext operationContext, IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadTextAsync(string content, class System.Text.Encoding encoding, class Microsoft.Azure.Storage.AccessCondition accessCondition, class Microsoft.Azure.Storage.Blob.BlobRequestOptions options, class Microsoft.Azure.Storage.OperationContext operationContext, class System.IProgress`1&lt;class Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadTextAsync (content As String, encoding As Encoding, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, progressHandler As IProgress(Of StorageProgress), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadTextAsync : string * System.Text.Encoding * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadTextAsync : string * System.Text.Encoding * Microsoft.Azure.Storage.AccessCondition * Microsoft.Azure.Storage.Blob.BlobRequestOptions * Microsoft.Azure.Storage.OperationContext * IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cloudBlockBlob.UploadTextAsync (content, encoding, accessCondition, options, operationContext, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Storage.Blob</AssemblyName>
        <AssemblyVersion>11.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Azure.Storage.DoesServiceRequest]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Azure.Storage.DoesServiceRequest&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="accessCondition" Type="Microsoft.Azure.Storage.AccessCondition" />
        <Parameter Name="options" Type="Microsoft.Azure.Storage.Blob.BlobRequestOptions" />
        <Parameter Name="operationContext" Type="Microsoft.Azure.Storage.OperationContext" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Microsoft.Azure.Storage.Core.Util.StorageProgress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">A string containing the text to upload.</param>
        <param name="encoding">A <see cref="T:System.Text.Encoding" /> object that indicates the text encoding to use. If <c>null</c>, UTF-8 will be used.</param>
        <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition" /> object that represents the condition that must be met in order for the request to proceed.</param>
        <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions" /> object that specifies additional options for the request.</param>
        <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext" /> object that represents the context for the current operation.</param>
        <param name="progressHandler"> A <see cref="T:System.IProgress`1" /> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress" /> messages.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for a task to complete.</param>
        <summary>
            Initiates an asynchronous operation to upload a string of text to a blob. If the blob already exists, it will be overwritten.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
