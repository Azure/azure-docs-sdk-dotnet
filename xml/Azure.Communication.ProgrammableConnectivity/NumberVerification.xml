<Type Name="NumberVerification" FullName="Azure.Communication.ProgrammableConnectivity.NumberVerification">
  <TypeSignature Language="C#" Value="public class NumberVerification" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NumberVerification extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Communication.ProgrammableConnectivity.NumberVerification" />
  <TypeSignature Language="VB.NET" Value="Public Class NumberVerification" />
  <TypeSignature Language="F#" Value="type NumberVerification = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Communication.ProgrammableConnectivity</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
               Number operations include Frontend Authentication.
            
               Users first make a call to the endpoint /Number:verify, which returns a redirect to the device's
               Network. This is followed by the device to authenticate directly with the Network. The Network
               responds with a token and a redirect. This token can be exchanged with APC for a code.
            
               Users make a second call to the endpoint /Number:verify including the code. The code is used
               to verify the device number. The second response is a 200 containing the result of the query.
            
               For more information on the steps required to use Number Verificaiton, see the APC documentation.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NumberVerification ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.ProgrammableConnectivity.NumberVerification.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.ProgrammableConnectivity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of NumberVerification for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.ProgrammableConnectivity.NumberVerification.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.Communication.ProgrammableConnectivity.NumberVerification.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.ProgrammableConnectivity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyWithCode">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.ProgrammableConnectivity.NumberVerificationResult&gt; VerifyWithCode (string apcGatewayId, Azure.Communication.ProgrammableConnectivity.NumberVerificationWithCodeContent body, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.ProgrammableConnectivity.NumberVerificationResult&gt; VerifyWithCode(string apcGatewayId, class Azure.Communication.ProgrammableConnectivity.NumberVerificationWithCodeContent body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.ProgrammableConnectivity.NumberVerification.VerifyWithCode(System.String,Azure.Communication.ProgrammableConnectivity.NumberVerificationWithCodeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyWithCode (apcGatewayId As String, body As NumberVerificationWithCodeContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NumberVerificationResult)" />
      <MemberSignature Language="F#" Value="abstract member VerifyWithCode : string * Azure.Communication.ProgrammableConnectivity.NumberVerificationWithCodeContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.ProgrammableConnectivity.NumberVerificationResult&gt;&#xA;override this.VerifyWithCode : string * Azure.Communication.ProgrammableConnectivity.NumberVerificationWithCodeContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.ProgrammableConnectivity.NumberVerificationResult&gt;" Usage="numberVerification.VerifyWithCode (apcGatewayId, body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.ProgrammableConnectivity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.ProgrammableConnectivity.NumberVerificationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="apcGatewayId" Type="System.String" />
        <Parameter Name="body" Type="Azure.Communication.ProgrammableConnectivity.NumberVerificationWithCodeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="apcGatewayId"> The identifier of the APC Gateway resource which should handle this request. </param>
        <param name="body"> Body parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Verifies the phone number (MSISDN) associated with a device. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="apcGatewayId" /> or <paramref name="body" /> is null. </exception>
        <example>
This sample shows how to call VerifyWithCode.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "2024-02-09-preview");

NumberVerificationWithCodeContent body = new NumberVerificationWithCodeContent("<apcCode>");
Response<NumberVerificationResult> response = client.VerifyWithCode("<apcGatewayId>", body);
]]></code>
This sample shows how to call VerifyWithCode with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "2024-02-09-preview");

NumberVerificationWithCodeContent body = new NumberVerificationWithCodeContent("<apcCode>");
Response<NumberVerificationResult> response = client.VerifyWithCode("<apcGatewayId>", body);
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="VerifyWithCode">
      <MemberSignature Language="C#" Value="public virtual Azure.Response VerifyWithCode (string apcGatewayId, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response VerifyWithCode(string apcGatewayId, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.ProgrammableConnectivity.NumberVerification.VerifyWithCode(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyWithCode (apcGatewayId As String, content As RequestContent, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member VerifyWithCode : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response&#xA;override this.VerifyWithCode : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response" Usage="numberVerification.VerifyWithCode (apcGatewayId, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.ProgrammableConnectivity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="apcGatewayId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="apcGatewayId"> The identifier of the APC Gateway resource which should handle this request. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Verifies the phone number (MSISDN) associated with a device.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item><item><description>
            Please try the simpler <see cref="M:Azure.Communication.ProgrammableConnectivity.NumberVerification.VerifyWithCode(System.String,Azure.Communication.ProgrammableConnectivity.NumberVerificationWithCodeContent,System.Threading.CancellationToken)" /> convenience overload with strongly typed models first.
            </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="apcGatewayId" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call VerifyWithCode and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "2024-02-09-preview");

using RequestContent content = RequestContent.Create(new
{
    apcCode = "<apcCode>",
});
Response response = client.VerifyWithCode("<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("verificationResult").ToString());
]]></code>
This sample shows how to call VerifyWithCode with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "2024-02-09-preview");

using RequestContent content = RequestContent.Create(new
{
    apcCode = "<apcCode>",
});
Response response = client.VerifyWithCode("<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("verificationResult").ToString());
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="VerifyWithCodeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.ProgrammableConnectivity.NumberVerificationResult&gt;&gt; VerifyWithCodeAsync (string apcGatewayId, Azure.Communication.ProgrammableConnectivity.NumberVerificationWithCodeContent body, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.ProgrammableConnectivity.NumberVerificationResult&gt;&gt; VerifyWithCodeAsync(string apcGatewayId, class Azure.Communication.ProgrammableConnectivity.NumberVerificationWithCodeContent body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.ProgrammableConnectivity.NumberVerification.VerifyWithCodeAsync(System.String,Azure.Communication.ProgrammableConnectivity.NumberVerificationWithCodeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyWithCodeAsync (apcGatewayId As String, body As NumberVerificationWithCodeContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NumberVerificationResult))" />
      <MemberSignature Language="F#" Value="abstract member VerifyWithCodeAsync : string * Azure.Communication.ProgrammableConnectivity.NumberVerificationWithCodeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.ProgrammableConnectivity.NumberVerificationResult&gt;&gt;&#xA;override this.VerifyWithCodeAsync : string * Azure.Communication.ProgrammableConnectivity.NumberVerificationWithCodeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.ProgrammableConnectivity.NumberVerificationResult&gt;&gt;" Usage="numberVerification.VerifyWithCodeAsync (apcGatewayId, body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.ProgrammableConnectivity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.ProgrammableConnectivity.NumberVerificationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="apcGatewayId" Type="System.String" />
        <Parameter Name="body" Type="Azure.Communication.ProgrammableConnectivity.NumberVerificationWithCodeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="apcGatewayId"> The identifier of the APC Gateway resource which should handle this request. </param>
        <param name="body"> Body parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Verifies the phone number (MSISDN) associated with a device. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="apcGatewayId" /> or <paramref name="body" /> is null. </exception>
        <example>
This sample shows how to call VerifyWithCodeAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "2024-02-09-preview");

NumberVerificationWithCodeContent body = new NumberVerificationWithCodeContent("<apcCode>");
Response<NumberVerificationResult> response = await client.VerifyWithCodeAsync("<apcGatewayId>", body);
]]></code>
This sample shows how to call VerifyWithCodeAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "2024-02-09-preview");

NumberVerificationWithCodeContent body = new NumberVerificationWithCodeContent("<apcCode>");
Response<NumberVerificationResult> response = await client.VerifyWithCodeAsync("<apcGatewayId>", body);
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="VerifyWithCodeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; VerifyWithCodeAsync (string apcGatewayId, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; VerifyWithCodeAsync(string apcGatewayId, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.ProgrammableConnectivity.NumberVerification.VerifyWithCodeAsync(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyWithCodeAsync (apcGatewayId As String, content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member VerifyWithCodeAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.VerifyWithCodeAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="numberVerification.VerifyWithCodeAsync (apcGatewayId, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.ProgrammableConnectivity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="apcGatewayId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="apcGatewayId"> The identifier of the APC Gateway resource which should handle this request. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Verifies the phone number (MSISDN) associated with a device.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item><item><description>
            Please try the simpler <see cref="M:Azure.Communication.ProgrammableConnectivity.NumberVerification.VerifyWithCodeAsync(System.String,Azure.Communication.ProgrammableConnectivity.NumberVerificationWithCodeContent,System.Threading.CancellationToken)" /> convenience overload with strongly typed models first.
            </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="apcGatewayId" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call VerifyWithCodeAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "2024-02-09-preview");

using RequestContent content = RequestContent.Create(new
{
    apcCode = "<apcCode>",
});
Response response = await client.VerifyWithCodeAsync("<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("verificationResult").ToString());
]]></code>
This sample shows how to call VerifyWithCodeAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "2024-02-09-preview");

using RequestContent content = RequestContent.Create(new
{
    apcCode = "<apcCode>",
});
Response response = await client.VerifyWithCodeAsync("<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("verificationResult").ToString());
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="VerifyWithoutCode">
      <MemberSignature Language="C#" Value="public virtual Azure.Response VerifyWithoutCode (string apcGatewayId, Azure.Communication.ProgrammableConnectivity.NumberVerificationWithoutCodeContent numberVerificationWithoutCodeContent, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response VerifyWithoutCode(string apcGatewayId, class Azure.Communication.ProgrammableConnectivity.NumberVerificationWithoutCodeContent numberVerificationWithoutCodeContent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.ProgrammableConnectivity.NumberVerification.VerifyWithoutCode(System.String,Azure.Communication.ProgrammableConnectivity.NumberVerificationWithoutCodeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyWithoutCode (apcGatewayId As String, numberVerificationWithoutCodeContent As NumberVerificationWithoutCodeContent, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member VerifyWithoutCode : string * Azure.Communication.ProgrammableConnectivity.NumberVerificationWithoutCodeContent * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.VerifyWithoutCode : string * Azure.Communication.ProgrammableConnectivity.NumberVerificationWithoutCodeContent * System.Threading.CancellationToken -&gt; Azure.Response" Usage="numberVerification.VerifyWithoutCode (apcGatewayId, numberVerificationWithoutCodeContent, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.ProgrammableConnectivity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="apcGatewayId" Type="System.String" />
        <Parameter Name="numberVerificationWithoutCodeContent" Type="Azure.Communication.ProgrammableConnectivity.NumberVerificationWithoutCodeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="apcGatewayId"> The identifier of the APC Gateway resource which should handle this request. </param>
        <param name="numberVerificationWithoutCodeContent"> Request to verify number of device - first call. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Verifies the phone number (MSISDN) associated with a device. As part of the frontend authorization flow, the device is redirected to the operator network to authenticate directly. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="apcGatewayId" /> or <paramref name="numberVerificationWithoutCodeContent" /> is null. </exception>
        <example>
This sample shows how to call VerifyWithoutCode.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "2024-02-09-preview");

NumberVerificationWithoutCodeContent body = new NumberVerificationWithoutCodeContent(new NetworkIdentifier("<identifierType>", "<identifier>"), new Uri("http://localhost:3000"));
Response response = client.VerifyWithoutCode("<apcGatewayId>", body);
]]></code>
This sample shows how to call VerifyWithoutCode with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "2024-02-09-preview");

NumberVerificationWithoutCodeContent body = new NumberVerificationWithoutCodeContent(new NetworkIdentifier("<identifierType>", "<identifier>"), new Uri("http://localhost:3000"))
{
    PhoneNumber = "<phoneNumber>",
    HashedPhoneNumber = "<hashedPhoneNumber>",
};
Response response = client.VerifyWithoutCode("<apcGatewayId>", body);
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="VerifyWithoutCode">
      <MemberSignature Language="C#" Value="public virtual Azure.Response VerifyWithoutCode (string apcGatewayId, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response VerifyWithoutCode(string apcGatewayId, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.ProgrammableConnectivity.NumberVerification.VerifyWithoutCode(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyWithoutCode (apcGatewayId As String, content As RequestContent, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member VerifyWithoutCode : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response&#xA;override this.VerifyWithoutCode : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response" Usage="numberVerification.VerifyWithoutCode (apcGatewayId, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.ProgrammableConnectivity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="apcGatewayId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="apcGatewayId"> The identifier of the APC Gateway resource which should handle this request. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Verifies the phone number (MSISDN) associated with a device. As part of the frontend authorization flow, the device is redirected to the operator network to authenticate directly.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item><item><description>
            Please try the simpler <see cref="M:Azure.Communication.ProgrammableConnectivity.NumberVerification.VerifyWithoutCode(System.String,Azure.Communication.ProgrammableConnectivity.NumberVerificationWithoutCodeContent,System.Threading.CancellationToken)" /> convenience overload with strongly typed models first.
            </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="apcGatewayId" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call VerifyWithoutCode.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "2024-02-09-preview");

using RequestContent content = RequestContent.Create(new
{
    networkIdentifier = new
    {
        identifierType = "<identifierType>",
        identifier = "<identifier>",
    },
    redirectUri = "http://localhost:3000",
});
Response response = client.VerifyWithoutCode("<apcGatewayId>", content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call VerifyWithoutCode with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "2024-02-09-preview");

using RequestContent content = RequestContent.Create(new
{
    networkIdentifier = new
    {
        identifierType = "<identifierType>",
        identifier = "<identifier>",
    },
    phoneNumber = "<phoneNumber>",
    hashedPhoneNumber = "<hashedPhoneNumber>",
    redirectUri = "http://localhost:3000",
});
Response response = client.VerifyWithoutCode("<apcGatewayId>", content);

Console.WriteLine(response.Status);
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="VerifyWithoutCodeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; VerifyWithoutCodeAsync (string apcGatewayId, Azure.Communication.ProgrammableConnectivity.NumberVerificationWithoutCodeContent numberVerificationWithoutCodeContent, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; VerifyWithoutCodeAsync(string apcGatewayId, class Azure.Communication.ProgrammableConnectivity.NumberVerificationWithoutCodeContent numberVerificationWithoutCodeContent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.ProgrammableConnectivity.NumberVerification.VerifyWithoutCodeAsync(System.String,Azure.Communication.ProgrammableConnectivity.NumberVerificationWithoutCodeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyWithoutCodeAsync (apcGatewayId As String, numberVerificationWithoutCodeContent As NumberVerificationWithoutCodeContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member VerifyWithoutCodeAsync : string * Azure.Communication.ProgrammableConnectivity.NumberVerificationWithoutCodeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.VerifyWithoutCodeAsync : string * Azure.Communication.ProgrammableConnectivity.NumberVerificationWithoutCodeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="numberVerification.VerifyWithoutCodeAsync (apcGatewayId, numberVerificationWithoutCodeContent, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.ProgrammableConnectivity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="apcGatewayId" Type="System.String" />
        <Parameter Name="numberVerificationWithoutCodeContent" Type="Azure.Communication.ProgrammableConnectivity.NumberVerificationWithoutCodeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="apcGatewayId"> The identifier of the APC Gateway resource which should handle this request. </param>
        <param name="numberVerificationWithoutCodeContent"> Request to verify number of device - first call. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Verifies the phone number (MSISDN) associated with a device. As part of the frontend authorization flow, the device is redirected to the operator network to authenticate directly. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="apcGatewayId" /> or <paramref name="numberVerificationWithoutCodeContent" /> is null. </exception>
        <example>
This sample shows how to call VerifyWithoutCodeAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "2024-02-09-preview");

NumberVerificationWithoutCodeContent body = new NumberVerificationWithoutCodeContent(new NetworkIdentifier("<identifierType>", "<identifier>"), new Uri("http://localhost:3000"));
Response response = await client.VerifyWithoutCodeAsync("<apcGatewayId>", body);
]]></code>
This sample shows how to call VerifyWithoutCodeAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "2024-02-09-preview");

NumberVerificationWithoutCodeContent body = new NumberVerificationWithoutCodeContent(new NetworkIdentifier("<identifierType>", "<identifier>"), new Uri("http://localhost:3000"))
{
    PhoneNumber = "<phoneNumber>",
    HashedPhoneNumber = "<hashedPhoneNumber>",
};
Response response = await client.VerifyWithoutCodeAsync("<apcGatewayId>", body);
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="VerifyWithoutCodeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; VerifyWithoutCodeAsync (string apcGatewayId, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; VerifyWithoutCodeAsync(string apcGatewayId, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.ProgrammableConnectivity.NumberVerification.VerifyWithoutCodeAsync(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyWithoutCodeAsync (apcGatewayId As String, content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member VerifyWithoutCodeAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.VerifyWithoutCodeAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="numberVerification.VerifyWithoutCodeAsync (apcGatewayId, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.ProgrammableConnectivity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="apcGatewayId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="apcGatewayId"> The identifier of the APC Gateway resource which should handle this request. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Verifies the phone number (MSISDN) associated with a device. As part of the frontend authorization flow, the device is redirected to the operator network to authenticate directly.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item><item><description>
            Please try the simpler <see cref="M:Azure.Communication.ProgrammableConnectivity.NumberVerification.VerifyWithoutCodeAsync(System.String,Azure.Communication.ProgrammableConnectivity.NumberVerificationWithoutCodeContent,System.Threading.CancellationToken)" /> convenience overload with strongly typed models first.
            </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="apcGatewayId" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call VerifyWithoutCodeAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "2024-02-09-preview");

using RequestContent content = RequestContent.Create(new
{
    networkIdentifier = new
    {
        identifierType = "<identifierType>",
        identifier = "<identifier>",
    },
    redirectUri = "http://localhost:3000",
});
Response response = await client.VerifyWithoutCodeAsync("<apcGatewayId>", content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call VerifyWithoutCodeAsync with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
NumberVerification client = new ProgrammableConnectivityClient(endpoint, credential).GetNumberVerificationClient(apiVersion: "2024-02-09-preview");

using RequestContent content = RequestContent.Create(new
{
    networkIdentifier = new
    {
        identifierType = "<identifierType>",
        identifier = "<identifier>",
    },
    phoneNumber = "<phoneNumber>",
    hashedPhoneNumber = "<hashedPhoneNumber>",
    redirectUri = "http://localhost:3000",
});
Response response = await client.VerifyWithoutCodeAsync("<apcGatewayId>", content);

Console.WriteLine(response.Status);
]]></code></example>
      </Docs>
    </Member>
  </Members>
</Type>
