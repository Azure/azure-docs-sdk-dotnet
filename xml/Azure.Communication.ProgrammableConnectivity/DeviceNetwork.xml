<Type Name="DeviceNetwork" FullName="Azure.Communication.ProgrammableConnectivity.DeviceNetwork">
  <TypeSignature Language="C#" Value="public class DeviceNetwork" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DeviceNetwork extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Communication.ProgrammableConnectivity.DeviceNetwork" />
  <TypeSignature Language="VB.NET" Value="Public Class DeviceNetwork" />
  <TypeSignature Language="F#" Value="type DeviceNetwork = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Communication.ProgrammableConnectivity</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The DeviceNetwork sub-client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DeviceNetwork ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.ProgrammableConnectivity.DeviceNetwork.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.ProgrammableConnectivity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of DeviceNetwork for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.ProgrammableConnectivity.DeviceNetwork.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.Communication.ProgrammableConnectivity.DeviceNetwork.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.ProgrammableConnectivity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Retrieve">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.ProgrammableConnectivity.NetworkRetrievalResult&gt; Retrieve (string apcGatewayId, Azure.Communication.ProgrammableConnectivity.NetworkIdentifier networkIdentifier, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.ProgrammableConnectivity.NetworkRetrievalResult&gt; Retrieve(string apcGatewayId, class Azure.Communication.ProgrammableConnectivity.NetworkIdentifier networkIdentifier, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.ProgrammableConnectivity.DeviceNetwork.Retrieve(System.String,Azure.Communication.ProgrammableConnectivity.NetworkIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Retrieve (apcGatewayId As String, networkIdentifier As NetworkIdentifier, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NetworkRetrievalResult)" />
      <MemberSignature Language="F#" Value="abstract member Retrieve : string * Azure.Communication.ProgrammableConnectivity.NetworkIdentifier * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.ProgrammableConnectivity.NetworkRetrievalResult&gt;&#xA;override this.Retrieve : string * Azure.Communication.ProgrammableConnectivity.NetworkIdentifier * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.ProgrammableConnectivity.NetworkRetrievalResult&gt;" Usage="deviceNetwork.Retrieve (apcGatewayId, networkIdentifier, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.ProgrammableConnectivity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.ProgrammableConnectivity.NetworkRetrievalResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="apcGatewayId" Type="System.String" />
        <Parameter Name="networkIdentifier" Type="Azure.Communication.ProgrammableConnectivity.NetworkIdentifier" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="apcGatewayId"> The identifier of the APC Gateway resource which should handle this request. </param>
        <param name="networkIdentifier"> Identifier for the network to be queried. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Retrieves the network a given device is on. Returns network in a networkCode format that can be used for other APIs. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="apcGatewayId" /> or <paramref name="networkIdentifier" /> is null. </exception>
        <example>
This sample shows how to call Retrieve.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeviceNetwork client = new ProgrammableConnectivityClient(endpoint, credential).GetDeviceNetworkClient(apiVersion: "2024-02-09-preview");

NetworkIdentifier networkIdentifier = new NetworkIdentifier("<identifierType>", "<identifier>");
Response<NetworkRetrievalResult> response = client.Retrieve("<apcGatewayId>", networkIdentifier);
]]></code>
This sample shows how to call Retrieve with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeviceNetwork client = new ProgrammableConnectivityClient(endpoint, credential).GetDeviceNetworkClient(apiVersion: "2024-02-09-preview");

NetworkIdentifier networkIdentifier = new NetworkIdentifier("<identifierType>", "<identifier>");
Response<NetworkRetrievalResult> response = client.Retrieve("<apcGatewayId>", networkIdentifier);
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="Retrieve">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Retrieve (string apcGatewayId, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Retrieve(string apcGatewayId, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.ProgrammableConnectivity.DeviceNetwork.Retrieve(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Retrieve (apcGatewayId As String, content As RequestContent, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Retrieve : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response&#xA;override this.Retrieve : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response" Usage="deviceNetwork.Retrieve (apcGatewayId, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.ProgrammableConnectivity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="apcGatewayId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="apcGatewayId"> The identifier of the APC Gateway resource which should handle this request. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Retrieves the network a given device is on. Returns network in a networkCode format that can be used for other APIs.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item><item><description>
            Please try the simpler <see cref="M:Azure.Communication.ProgrammableConnectivity.DeviceNetwork.Retrieve(System.String,Azure.Communication.ProgrammableConnectivity.NetworkIdentifier,System.Threading.CancellationToken)" /> convenience overload with strongly typed models first.
            </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="apcGatewayId" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call Retrieve and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeviceNetwork client = new ProgrammableConnectivityClient(endpoint, credential).GetDeviceNetworkClient(apiVersion: "2024-02-09-preview");

using RequestContent content = RequestContent.Create(new
{
    identifierType = "<identifierType>",
    identifier = "<identifier>",
});
Response response = client.Retrieve("<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("networkCode").ToString());
]]></code>
This sample shows how to call Retrieve with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeviceNetwork client = new ProgrammableConnectivityClient(endpoint, credential).GetDeviceNetworkClient(apiVersion: "2024-02-09-preview");

using RequestContent content = RequestContent.Create(new
{
    identifierType = "<identifierType>",
    identifier = "<identifier>",
});
Response response = client.Retrieve("<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("networkCode").ToString());
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="RetrieveAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.ProgrammableConnectivity.NetworkRetrievalResult&gt;&gt; RetrieveAsync (string apcGatewayId, Azure.Communication.ProgrammableConnectivity.NetworkIdentifier networkIdentifier, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.ProgrammableConnectivity.NetworkRetrievalResult&gt;&gt; RetrieveAsync(string apcGatewayId, class Azure.Communication.ProgrammableConnectivity.NetworkIdentifier networkIdentifier, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.ProgrammableConnectivity.DeviceNetwork.RetrieveAsync(System.String,Azure.Communication.ProgrammableConnectivity.NetworkIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RetrieveAsync (apcGatewayId As String, networkIdentifier As NetworkIdentifier, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NetworkRetrievalResult))" />
      <MemberSignature Language="F#" Value="abstract member RetrieveAsync : string * Azure.Communication.ProgrammableConnectivity.NetworkIdentifier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.ProgrammableConnectivity.NetworkRetrievalResult&gt;&gt;&#xA;override this.RetrieveAsync : string * Azure.Communication.ProgrammableConnectivity.NetworkIdentifier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.ProgrammableConnectivity.NetworkRetrievalResult&gt;&gt;" Usage="deviceNetwork.RetrieveAsync (apcGatewayId, networkIdentifier, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.ProgrammableConnectivity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.ProgrammableConnectivity.NetworkRetrievalResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="apcGatewayId" Type="System.String" />
        <Parameter Name="networkIdentifier" Type="Azure.Communication.ProgrammableConnectivity.NetworkIdentifier" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="apcGatewayId"> The identifier of the APC Gateway resource which should handle this request. </param>
        <param name="networkIdentifier"> Identifier for the network to be queried. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Retrieves the network a given device is on. Returns network in a networkCode format that can be used for other APIs. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="apcGatewayId" /> or <paramref name="networkIdentifier" /> is null. </exception>
        <example>
This sample shows how to call RetrieveAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeviceNetwork client = new ProgrammableConnectivityClient(endpoint, credential).GetDeviceNetworkClient(apiVersion: "2024-02-09-preview");

NetworkIdentifier networkIdentifier = new NetworkIdentifier("<identifierType>", "<identifier>");
Response<NetworkRetrievalResult> response = await client.RetrieveAsync("<apcGatewayId>", networkIdentifier);
]]></code>
This sample shows how to call RetrieveAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeviceNetwork client = new ProgrammableConnectivityClient(endpoint, credential).GetDeviceNetworkClient(apiVersion: "2024-02-09-preview");

NetworkIdentifier networkIdentifier = new NetworkIdentifier("<identifierType>", "<identifier>");
Response<NetworkRetrievalResult> response = await client.RetrieveAsync("<apcGatewayId>", networkIdentifier);
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="RetrieveAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; RetrieveAsync (string apcGatewayId, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; RetrieveAsync(string apcGatewayId, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.ProgrammableConnectivity.DeviceNetwork.RetrieveAsync(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RetrieveAsync (apcGatewayId As String, content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member RetrieveAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.RetrieveAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="deviceNetwork.RetrieveAsync (apcGatewayId, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.ProgrammableConnectivity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="apcGatewayId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="apcGatewayId"> The identifier of the APC Gateway resource which should handle this request. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Retrieves the network a given device is on. Returns network in a networkCode format that can be used for other APIs.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item><item><description>
            Please try the simpler <see cref="M:Azure.Communication.ProgrammableConnectivity.DeviceNetwork.RetrieveAsync(System.String,Azure.Communication.ProgrammableConnectivity.NetworkIdentifier,System.Threading.CancellationToken)" /> convenience overload with strongly typed models first.
            </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="apcGatewayId" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call RetrieveAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeviceNetwork client = new ProgrammableConnectivityClient(endpoint, credential).GetDeviceNetworkClient(apiVersion: "2024-02-09-preview");

using RequestContent content = RequestContent.Create(new
{
    identifierType = "<identifierType>",
    identifier = "<identifier>",
});
Response response = await client.RetrieveAsync("<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("networkCode").ToString());
]]></code>
This sample shows how to call RetrieveAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeviceNetwork client = new ProgrammableConnectivityClient(endpoint, credential).GetDeviceNetworkClient(apiVersion: "2024-02-09-preview");

using RequestContent content = RequestContent.Create(new
{
    identifierType = "<identifierType>",
    identifier = "<identifier>",
});
Response response = await client.RetrieveAsync("<apcGatewayId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("networkCode").ToString());
]]></code></example>
      </Docs>
    </Member>
  </Members>
</Type>
