<Type Name="ServicePrincipalImpl" FullName="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl">
  <TypeSignature Language="C#" Value="public class ServicePrincipalImpl : Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.CreatableUpdatable&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal,Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ServicePrincipalInner,Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl,Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId,Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate&gt;, Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate&gt;, Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate&gt;, Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal, Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IDefinition, Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ServicePrincipalInner&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasName, Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IAppliable&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IUpdatable&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServicePrincipalImpl extends Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.CreatableUpdatable`5&lt;class Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal, class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ServicePrincipalInner, class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId, class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate&gt; implements class Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryObject, class Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential`1&lt;class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate&gt;, class Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential`1&lt;class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate&gt;, class Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal, class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IBlank, class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IDefinition, class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithApplication, class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithApplicationBeta, class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate, class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCredential, class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCredentialBeta, class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithRoleAssignment, class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithRoleAssignmentBeta, class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate, class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithCredential, class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithCredentialBeta, class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithRoleAssignment, class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithRoleAssignmentBeta, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner`1&lt;class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ServicePrincipalInner&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager`1&lt;class Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasName, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IAppliable`1&lt;class Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable`1&lt;class Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IIndexable, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IUpdatable`1&lt;class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl" />
  <TypeSignature Language="VB.NET" Value="Public Class ServicePrincipalImpl&#xA;Inherits CreatableUpdatable(Of IServicePrincipal, ServicePrincipalInner, ServicePrincipalImpl, IHasId, IUpdate)&#xA;Implements IAppliable(Of IServicePrincipal), IBeta, ICreatable(Of IServicePrincipal), IDefinition, IHasCredential(Of IUpdate), IHasCredential(Of IWithCreate), IHasId, IHasInner(Of ServicePrincipalInner), IHasManager(Of GraphRbacManager), IHasName, IServicePrincipal, IUpdatable(Of IUpdate), IUpdate" />
  <TypeSignature Language="F#" Value="type ServicePrincipalImpl = class&#xA;    inherit CreatableUpdatable&lt;IServicePrincipal, ServicePrincipalInner, ServicePrincipalImpl, IHasId, IUpdate&gt;&#xA;    interface IServicePrincipal&#xA;    interface IBeta&#xA;    interface IActiveDirectoryObject&#xA;    interface IIndexable&#xA;    interface IHasId&#xA;    interface IHasName&#xA;    interface IHasManager&lt;GraphRbacManager&gt;&#xA;    interface IHasInner&lt;ServicePrincipalInner&gt;&#xA;    interface IUpdatable&lt;IUpdate&gt;&#xA;    interface IDefinition&#xA;    interface IBlank&#xA;    interface IWithApplication&#xA;    interface IWithApplicationBeta&#xA;    interface IWithCreate&#xA;    interface ICreatable&lt;IServicePrincipal&gt;&#xA;    interface IWithCredential&#xA;    interface IWithCredentialBeta&#xA;    interface IWithRoleAssignment&#xA;    interface IWithRoleAssignmentBeta&#xA;    interface IUpdate&#xA;    interface IAppliable&lt;IServicePrincipal&gt;&#xA;    interface IWithCredential&#xA;    interface IWithCredentialBeta&#xA;    interface IWithRoleAssignment&#xA;    interface IWithRoleAssignmentBeta&#xA;    interface IHasCredential&lt;IWithCreate&gt;&#xA;    interface IHasCredential&lt;IUpdate&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.CreatableUpdatable&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal,Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ServicePrincipalInner,Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl,Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId,Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!1">Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ServicePrincipalInner</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!2">Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!3">Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!4">Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IDefinition</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ServicePrincipalInner&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasName</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IAppliable&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IUpdatable&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Implementation for ServicePrincipal and its parent interfaces.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplicationId">
      <MemberSignature Language="C#" Value="public string ApplicationId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ApplicationId() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.ApplicationId" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplicationId () As String" />
      <MemberSignature Language="F#" Value="member this.ApplicationId : unit -&gt; string" Usage="servicePrincipalImpl.ApplicationId " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificateCredentials">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;string,Microsoft.Azure.Management.Graph.RBAC.Fluent.ICertificateCredential&gt; CertificateCredentials ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class Microsoft.Azure.Management.Graph.RBAC.Fluent.ICertificateCredential&gt; CertificateCredentials() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.CertificateCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Function CertificateCredentials () As IReadOnlyDictionary(Of String, ICertificateCredential)" />
      <MemberSignature Language="F#" Value="member this.CertificateCredentials : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;string, Microsoft.Azure.Management.Graph.RBAC.Fluent.ICertificateCredential&gt;" Usage="servicePrincipalImpl.CertificateCredentials " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,Microsoft.Azure.Management.Graph.RBAC.Fluent.ICertificateCredential&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal&gt; CreateResourceAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal&gt; CreateResourceAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.CreateResourceAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.CreateResourceAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal&gt;" Usage="servicePrincipalImpl.CreateResourceAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineCertificateCredential&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredentialImpl&lt;T&gt; DefineCertificateCredential&lt;T&gt; (string name) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredentialImpl`1&lt;!!T&gt; DefineCertificateCredential&lt;class T&gt;(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.DefineCertificateCredential``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineCertificateCredential(Of T As Class) (name As String) As CertificateCredentialImpl(Of T)" />
      <MemberSignature Language="F#" Value="member this.DefineCertificateCredential : string -&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredentialImpl&lt;'T (requires 'T : null)&gt; (requires 'T : null)" Usage="servicePrincipalImpl.DefineCertificateCredential name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredentialImpl&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefinePasswordCredential&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredentialImpl&lt;T&gt; DefinePasswordCredential&lt;T&gt; (string name) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredentialImpl`1&lt;!!T&gt; DefinePasswordCredential&lt;class T&gt;(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.DefinePasswordCredential``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefinePasswordCredential(Of T As Class) (name As String) As PasswordCredentialImpl(Of T)" />
      <MemberSignature Language="F#" Value="member this.DefinePasswordCredential : string -&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredentialImpl&lt;'T (requires 'T : null)&gt; (requires 'T : null)" Usage="servicePrincipalImpl.DefinePasswordCredential name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredentialImpl&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInnerAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ServicePrincipalInner&gt; GetInnerAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ServicePrincipalInner&gt; GetInnerAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.GetInnerAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetInnerAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ServicePrincipalInner&gt;" Usage="servicePrincipalImpl.GetInnerAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ServicePrincipalInner&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Id() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Id" />
      <MemberSignature Language="VB.NET" Value="Public Function Id () As String" />
      <MemberSignature Language="F#" Value="member this.Id : unit -&gt; string" Usage="servicePrincipalImpl.Id " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInCreateMode">
      <MemberSignature Language="C#" Value="public bool IsInCreateMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInCreateMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.IsInCreateMode" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInCreateMode () As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsInCreateMode : unit -&gt; bool" Usage="servicePrincipalImpl.IsInCreateMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Manager">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager Manager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager Manager() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Manager" />
      <MemberSignature Language="VB.NET" Value="Public Function Manager () As GraphRbacManager" />
      <MemberSignature Language="F#" Value="member this.Manager : unit -&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager" Usage="servicePrincipalImpl.Manager " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate&gt;.WithCertificateCredential">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate IHasCredential&lt;IWithCreate&gt;.WithCertificateCredential (Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredentialImpl&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate&gt; credential);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate&gt;.WithCertificateCredential(class Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredentialImpl`1&lt;class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate&gt; credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#Graph#RBAC#Fluent#IHasCredential&lt;Microsoft#Azure#Management#Graph#RBAC#Fluent#ServicePrincipal#Definition#IWithCreate&gt;#WithCertificateCredential(Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredentialImpl{Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate})" />
      <MemberSignature Language="VB.NET" Value="Function WithCertificateCredential (credential As CertificateCredentialImpl(Of IWithCreate)) As IWithCreate Implements IHasCredential(Of IWithCreate).WithCertificateCredential" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential`1.WithCertificateCredential(Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredentialImpl{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredentialImpl&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate&gt;" />
      </Parameters>
      <Docs>
        <param name="credential">The credential to attach to.</param>
        <summary>
            Attach a credential to this model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The interface itself.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate&gt;.WithPasswordCredential">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate IHasCredential&lt;IWithCreate&gt;.WithPasswordCredential (Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredentialImpl&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate&gt; credential);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate&gt;.WithPasswordCredential(class Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredentialImpl`1&lt;class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate&gt; credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#Graph#RBAC#Fluent#IHasCredential&lt;Microsoft#Azure#Management#Graph#RBAC#Fluent#ServicePrincipal#Definition#IWithCreate&gt;#WithPasswordCredential(Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredentialImpl{Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate})" />
      <MemberSignature Language="VB.NET" Value="Function WithPasswordCredential (credential As PasswordCredentialImpl(Of IWithCreate)) As IWithCreate Implements IHasCredential(Of IWithCreate).WithPasswordCredential" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential`1.WithPasswordCredential(Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredentialImpl{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredentialImpl&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate&gt;" />
      </Parameters>
      <Docs>
        <param name="credential">The credential to attach to.</param>
        <summary>
            Attach a credential to this model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The interface itself.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate&gt;.WithCertificateCredential">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate IHasCredential&lt;IUpdate&gt;.WithCertificateCredential (Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredentialImpl&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate&gt; credential);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate&gt;.WithCertificateCredential(class Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredentialImpl`1&lt;class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate&gt; credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#Graph#RBAC#Fluent#IHasCredential&lt;Microsoft#Azure#Management#Graph#RBAC#Fluent#ServicePrincipal#Update#IUpdate&gt;#WithCertificateCredential(Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredentialImpl{Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate})" />
      <MemberSignature Language="VB.NET" Value="Function WithCertificateCredential (credential As CertificateCredentialImpl(Of IUpdate)) As IUpdate Implements IHasCredential(Of IUpdate).WithCertificateCredential" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential`1.WithCertificateCredential(Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredentialImpl{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredentialImpl&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate&gt;" />
      </Parameters>
      <Docs>
        <param name="credential">The credential to attach to.</param>
        <summary>
            Attach a credential to this model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The interface itself.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate&gt;.WithPasswordCredential">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate IHasCredential&lt;IUpdate&gt;.WithPasswordCredential (Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredentialImpl&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate&gt; credential);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate&gt;.WithPasswordCredential(class Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredentialImpl`1&lt;class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate&gt; credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#Graph#RBAC#Fluent#IHasCredential&lt;Microsoft#Azure#Management#Graph#RBAC#Fluent#ServicePrincipal#Update#IUpdate&gt;#WithPasswordCredential(Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredentialImpl{Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate})" />
      <MemberSignature Language="VB.NET" Value="Function WithPasswordCredential (credential As PasswordCredentialImpl(Of IUpdate)) As IUpdate Implements IHasCredential(Of IUpdate).WithPasswordCredential" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential`1.WithPasswordCredential(Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredentialImpl{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredentialImpl&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate&gt;" />
      </Parameters>
      <Docs>
        <param name="credential">The credential to attach to.</param>
        <summary>
            Attach a credential to this model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The interface itself.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.ApplicationId">
      <MemberSignature Language="C#" Value="string Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.ApplicationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.ApplicationId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#Graph#RBAC#Fluent#IServicePrincipal#ApplicationId" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ApplicationId As String Implements IServicePrincipal.ApplicationId" />
      <MemberSignature Language="F#" Usage="Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.ApplicationId" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.ApplicationId</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets app id.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.CertificateCredentials">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IReadOnlyDictionary&lt;string,Microsoft.Azure.Management.Graph.RBAC.Fluent.ICertificateCredential&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.CertificateCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class Microsoft.Azure.Management.Graph.RBAC.Fluent.ICertificateCredential&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.CertificateCredentials" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#Graph#RBAC#Fluent#IServicePrincipal#CertificateCredentials" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CertificateCredentials As IReadOnlyDictionary(Of String, ICertificateCredential) Implements IServicePrincipal.CertificateCredentials" />
      <MemberSignature Language="F#" Usage="Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.CertificateCredentials" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.CertificateCredentials</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,Microsoft.Azure.Management.Graph.RBAC.Fluent.ICertificateCredential&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the mapping of certificate credentials from their names.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.PasswordCredentials">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IReadOnlyDictionary&lt;string,Microsoft.Azure.Management.Graph.RBAC.Fluent.IPasswordCredential&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.PasswordCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class Microsoft.Azure.Management.Graph.RBAC.Fluent.IPasswordCredential&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.PasswordCredentials" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#Graph#RBAC#Fluent#IServicePrincipal#PasswordCredentials" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property PasswordCredentials As IReadOnlyDictionary(Of String, IPasswordCredential) Implements IServicePrincipal.PasswordCredentials" />
      <MemberSignature Language="F#" Usage="Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.PasswordCredentials" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.PasswordCredentials</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,Microsoft.Azure.Management.Graph.RBAC.Fluent.IPasswordCredential&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the mapping of password credentials from their names.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.RoleAssignments">
      <MemberSignature Language="C#" Value="System.Collections.Generic.ISet&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignment&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.RoleAssignments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ISet`1&lt;class Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignment&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.RoleAssignments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#Graph#RBAC#Fluent#IServicePrincipal#RoleAssignments" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property RoleAssignments As ISet(Of IRoleAssignment) Implements IServicePrincipal.RoleAssignments" />
      <MemberSignature Language="F#" Usage="Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.RoleAssignments" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.RoleAssignments</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignment&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the mapping from scopes to role assignments.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.ServicePrincipalNames">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IReadOnlyList&lt;string&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.ServicePrincipalNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.ServicePrincipalNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#Graph#RBAC#Fluent#IServicePrincipal#ServicePrincipalNames" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ServicePrincipalNames As IReadOnlyList(Of String) Implements IServicePrincipal.ServicePrincipalNames" />
      <MemberSignature Language="F#" Usage="Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.ServicePrincipalNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.ServicePrincipalNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the list of names.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithApplicationBeta.WithExistingApplication">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate IWithApplicationBeta.WithExistingApplication (Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithApplicationBeta.WithExistingApplication(class Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication application) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#Graph#RBAC#Fluent#ServicePrincipal#Definition#IWithApplicationBeta#WithExistingApplication(Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication)" />
      <MemberSignature Language="VB.NET" Value="Function WithExistingApplication (application As IActiveDirectoryApplication) As IWithCreate Implements IWithApplicationBeta.WithExistingApplication" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithApplicationBeta.WithExistingApplication(Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication" />
      </Parameters>
      <Docs>
        <param name="application">The application.</param>
        <summary>
            Specifies an existing application to use by the service principal.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the service principal definition.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithApplicationBeta.WithExistingApplication">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate IWithApplicationBeta.WithExistingApplication (string id);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithApplicationBeta.WithExistingApplication(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#Graph#RBAC#Fluent#ServicePrincipal#Definition#IWithApplicationBeta#WithExistingApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function WithExistingApplication (id As String) As IWithCreate Implements IWithApplicationBeta.WithExistingApplication" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithApplicationBeta.WithExistingApplication(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The app ID of the application.</param>
        <summary>
            Specifies an existing application by its app ID.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the service principal definition.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithApplicationBeta.WithNewApplication">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate IWithApplicationBeta.WithNewApplication (Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication&gt; applicationCreatable);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithApplicationBeta.WithNewApplication(class Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable`1&lt;class Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication&gt; applicationCreatable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#Graph#RBAC#Fluent#ServicePrincipal#Definition#IWithApplicationBeta#WithNewApplication(Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable{Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication})" />
      <MemberSignature Language="VB.NET" Value="Function WithNewApplication (applicationCreatable As ICreatable(Of IActiveDirectoryApplication)) As IWithCreate Implements IWithApplicationBeta.WithNewApplication" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithApplicationBeta.WithNewApplication(Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable{Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationCreatable" Type="Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication&gt;" />
      </Parameters>
      <Docs>
        <param name="applicationCreatable">The new application's creatable.</param>
        <summary>
            Specifies a new application to create and use by the service principal.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the service principal definition.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithApplicationBeta.WithNewApplication">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate IWithApplicationBeta.WithNewApplication (string signOnUrl);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithApplicationBeta.WithNewApplication(string signOnUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#Graph#RBAC#Fluent#ServicePrincipal#Definition#IWithApplicationBeta#WithNewApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function WithNewApplication (signOnUrl As String) As IWithCreate Implements IWithApplicationBeta.WithNewApplication" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithApplicationBeta.WithNewApplication(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOnUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="signOnUrl">The new application's sign on URL.</param>
        <summary>
            Specifies a new application to create and use by the service principal.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the service principal definition.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCredentialBeta.DefineCertificateCredential">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.Definition.IBlank&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate&gt; IWithCredentialBeta.DefineCertificateCredential (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.Definition.IBlank`1&lt;class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCredentialBeta.DefineCertificateCredential(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#Graph#RBAC#Fluent#ServicePrincipal#Definition#IWithCredentialBeta#DefineCertificateCredential(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function DefineCertificateCredential (name As String) As IBlank(Of IWithCreate) Implements IWithCredentialBeta.DefineCertificateCredential" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCredentialBeta.DefineCertificateCredential(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.Definition.IBlank&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The descriptive name of the certificate credential.</param>
        <summary>
            Starts the definition of a certificate credential.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The first stage in certificate credential definition.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCredentialBeta.DefinePasswordCredential">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.Definition.IBlank&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate&gt; IWithCredentialBeta.DefinePasswordCredential (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.Definition.IBlank`1&lt;class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCredentialBeta.DefinePasswordCredential(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#Graph#RBAC#Fluent#ServicePrincipal#Definition#IWithCredentialBeta#DefinePasswordCredential(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function DefinePasswordCredential (name As String) As IBlank(Of IWithCreate) Implements IWithCredentialBeta.DefinePasswordCredential" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCredentialBeta.DefinePasswordCredential(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.Definition.IBlank&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The descriptive name of the password credential.</param>
        <summary>
            Starts the definition of a password credential.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The first stage in password credential definition.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithRoleAssignmentBeta.WithNewRole">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate IWithRoleAssignmentBeta.WithNewRole (Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole role, string scope);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithRoleAssignmentBeta.WithNewRole(class Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole role, string scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#Graph#RBAC#Fluent#ServicePrincipal#Definition#IWithRoleAssignmentBeta#WithNewRole(Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function WithNewRole (role As BuiltInRole, scope As String) As IWithCreate Implements IWithRoleAssignmentBeta.WithNewRole" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithRoleAssignmentBeta.WithNewRole(Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole" />
        <Parameter Name="scope" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">The role to assign to the service principal.</param>
        <param name="scope">The scope the service principal can access.</param>
        <summary>
            Assigns a new role to the service principal.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the service principal definition.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithRoleAssignmentBeta.WithNewRoleInResourceGroup">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate IWithRoleAssignmentBeta.WithNewRoleInResourceGroup (Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole role, Microsoft.Azure.Management.ResourceManager.Fluent.IResourceGroup resourceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithRoleAssignmentBeta.WithNewRoleInResourceGroup(class Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole role, class Microsoft.Azure.Management.ResourceManager.Fluent.IResourceGroup resourceGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#Graph#RBAC#Fluent#ServicePrincipal#Definition#IWithRoleAssignmentBeta#WithNewRoleInResourceGroup(Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole,Microsoft.Azure.Management.ResourceManager.Fluent.IResourceGroup)" />
      <MemberSignature Language="VB.NET" Value="Function WithNewRoleInResourceGroup (role As BuiltInRole, resourceGroup As IResourceGroup) As IWithCreate Implements IWithRoleAssignmentBeta.WithNewRoleInResourceGroup" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithRoleAssignmentBeta.WithNewRoleInResourceGroup(Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole,Microsoft.Azure.Management.ResourceManager.Fluent.IResourceGroup)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole" />
        <Parameter Name="resourceGroup" Type="Microsoft.Azure.Management.ResourceManager.Fluent.IResourceGroup" />
      </Parameters>
      <Docs>
        <param name="role">The role to assign to the service principal.</param>
        <param name="resourceGroup">The resource group the service principal can access.</param>
        <summary>
            Assigns a new role to the service principal.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the service principal definition.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithRoleAssignmentBeta.WithNewRoleInSubscription">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate IWithRoleAssignmentBeta.WithNewRoleInSubscription (Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole role, string subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithRoleAssignmentBeta.WithNewRoleInSubscription(class Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole role, string subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#Graph#RBAC#Fluent#ServicePrincipal#Definition#IWithRoleAssignmentBeta#WithNewRoleInSubscription(Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function WithNewRoleInSubscription (role As BuiltInRole, subscriptionId As String) As IWithCreate Implements IWithRoleAssignmentBeta.WithNewRoleInSubscription" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithRoleAssignmentBeta.WithNewRoleInSubscription(Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole" />
        <Parameter Name="subscriptionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">The role to assign to the service principal.</param>
        <param name="subscriptionId">The subscription the service principal can access.</param>
        <summary>
            Assigns a new role to the service principal.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the service principal definition.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithCredentialBeta.DefineCertificateCredential">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.UpdateDefinition.IBlank&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate&gt; IWithCredentialBeta.DefineCertificateCredential (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.UpdateDefinition.IBlank`1&lt;class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithCredentialBeta.DefineCertificateCredential(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#Graph#RBAC#Fluent#ServicePrincipal#Update#IWithCredentialBeta#DefineCertificateCredential(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function DefineCertificateCredential (name As String) As IBlank(Of IUpdate) Implements IWithCredentialBeta.DefineCertificateCredential" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithCredentialBeta.DefineCertificateCredential(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.UpdateDefinition.IBlank&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The descriptive name of the certificate credential.</param>
        <summary>
            Starts the definition of a certificate credential.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The first stage in certificate credential definition.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithCredentialBeta.DefinePasswordCredential">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.UpdateDefinition.IBlank&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate&gt; IWithCredentialBeta.DefinePasswordCredential (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.UpdateDefinition.IBlank`1&lt;class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithCredentialBeta.DefinePasswordCredential(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#Graph#RBAC#Fluent#ServicePrincipal#Update#IWithCredentialBeta#DefinePasswordCredential(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function DefinePasswordCredential (name As String) As IBlank(Of IUpdate) Implements IWithCredentialBeta.DefinePasswordCredential" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithCredentialBeta.DefinePasswordCredential(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.UpdateDefinition.IBlank&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The descriptive name of the password credential.</param>
        <summary>
            Starts the definition of a password credential.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The first stage in password credential definition.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithCredentialBeta.WithoutCredential">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate IWithCredentialBeta.WithoutCredential (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithCredentialBeta.WithoutCredential(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#Graph#RBAC#Fluent#ServicePrincipal#Update#IWithCredentialBeta#WithoutCredential(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function WithoutCredential (name As String) As IUpdate Implements IWithCredentialBeta.WithoutCredential" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithCredentialBeta.WithoutCredential(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the key.</param>
        <summary>
            Removes a key.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the application update.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithRoleAssignmentBeta.WithNewRole">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate IWithRoleAssignmentBeta.WithNewRole (Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole role, string scope);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithRoleAssignmentBeta.WithNewRole(class Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole role, string scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#Graph#RBAC#Fluent#ServicePrincipal#Update#IWithRoleAssignmentBeta#WithNewRole(Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function WithNewRole (role As BuiltInRole, scope As String) As IUpdate Implements IWithRoleAssignmentBeta.WithNewRole" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithRoleAssignmentBeta.WithNewRole(Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole" />
        <Parameter Name="scope" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">The role to assign to the service principal.</param>
        <param name="scope">The scope the service principal can access.</param>
        <summary>
            Assigns a new role to the service principal.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the service principal update.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithRoleAssignmentBeta.WithNewRoleInResourceGroup">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate IWithRoleAssignmentBeta.WithNewRoleInResourceGroup (Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole role, Microsoft.Azure.Management.ResourceManager.Fluent.IResourceGroup resourceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithRoleAssignmentBeta.WithNewRoleInResourceGroup(class Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole role, class Microsoft.Azure.Management.ResourceManager.Fluent.IResourceGroup resourceGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#Graph#RBAC#Fluent#ServicePrincipal#Update#IWithRoleAssignmentBeta#WithNewRoleInResourceGroup(Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole,Microsoft.Azure.Management.ResourceManager.Fluent.IResourceGroup)" />
      <MemberSignature Language="VB.NET" Value="Function WithNewRoleInResourceGroup (role As BuiltInRole, resourceGroup As IResourceGroup) As IUpdate Implements IWithRoleAssignmentBeta.WithNewRoleInResourceGroup" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithRoleAssignmentBeta.WithNewRoleInResourceGroup(Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole,Microsoft.Azure.Management.ResourceManager.Fluent.IResourceGroup)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole" />
        <Parameter Name="resourceGroup" Type="Microsoft.Azure.Management.ResourceManager.Fluent.IResourceGroup" />
      </Parameters>
      <Docs>
        <param name="role">The role to assign to the service principal.</param>
        <param name="resourceGroup">The resource group the service principal can access.</param>
        <summary>
            Assigns a new role to the service principal.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the service principal update.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithRoleAssignmentBeta.WithNewRoleInSubscription">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate IWithRoleAssignmentBeta.WithNewRoleInSubscription (Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole role, string subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithRoleAssignmentBeta.WithNewRoleInSubscription(class Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole role, string subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#Graph#RBAC#Fluent#ServicePrincipal#Update#IWithRoleAssignmentBeta#WithNewRoleInSubscription(Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function WithNewRoleInSubscription (role As BuiltInRole, subscriptionId As String) As IUpdate Implements IWithRoleAssignmentBeta.WithNewRoleInSubscription" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithRoleAssignmentBeta.WithNewRoleInSubscription(Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole" />
        <Parameter Name="subscriptionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">The role to assign to the service principal.</param>
        <param name="subscriptionId">The subscription the service principal can access.</param>
        <summary>
            Assigns a new role to the service principal.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the service principal update.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithRoleAssignmentBeta.WithoutRole">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate IWithRoleAssignmentBeta.WithoutRole (Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignment roleAssignment);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithRoleAssignmentBeta.WithoutRole(class Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignment roleAssignment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#Graph#RBAC#Fluent#ServicePrincipal#Update#IWithRoleAssignmentBeta#WithoutRole(Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignment)" />
      <MemberSignature Language="VB.NET" Value="Function WithoutRole (roleAssignment As IRoleAssignment) As IUpdate Implements IWithRoleAssignmentBeta.WithoutRole" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithRoleAssignmentBeta.WithoutRole(Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignment)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleAssignment" Type="Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignment" />
      </Parameters>
      <Docs>
        <param name="roleAssignment">The role assignment to remove.</param>
        <summary>
            Removes a role from the service principal.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the service principal update.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.Id">
      <MemberSignature Language="C#" Value="string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.Id" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#IHasId#Id" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Id As String Implements IHasId.Id" />
      <MemberSignature Language="F#" Usage="Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.Id" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.Id</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager&gt;.Manager">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager&gt;.Manager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager&gt;.Manager" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#IHasManager&lt;Microsoft#Azure#Management#Graph#RBAC#Fluent#GraphRbacManager&gt;#Manager" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Manager As GraphRbacManager Implements IHasManager(Of GraphRbacManager).Manager" />
      <MemberSignature Language="F#" Usage="Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager&gt;.Manager" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager`1.Manager</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordCredentials">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;string,Microsoft.Azure.Management.Graph.RBAC.Fluent.IPasswordCredential&gt; PasswordCredentials ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class Microsoft.Azure.Management.Graph.RBAC.Fluent.IPasswordCredential&gt; PasswordCredentials() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.PasswordCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Function PasswordCredentials () As IReadOnlyDictionary(Of String, IPasswordCredential)" />
      <MemberSignature Language="F#" Value="member this.PasswordCredentials : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;string, Microsoft.Azure.Management.Graph.RBAC.Fluent.IPasswordCredential&gt;" Usage="servicePrincipalImpl.PasswordCredentials " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,Microsoft.Azure.Management.Graph.RBAC.Fluent.IPasswordCredential&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal&gt; RefreshAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal&gt; RefreshAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.RefreshAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.RefreshAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal&gt;" Usage="servicePrincipalImpl.RefreshAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleAssignments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ISet&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignment&gt; RoleAssignments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ISet`1&lt;class Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignment&gt; RoleAssignments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.RoleAssignments" />
      <MemberSignature Language="VB.NET" Value="Public Function RoleAssignments () As ISet(Of IRoleAssignment)" />
      <MemberSignature Language="F#" Value="member this.RoleAssignments : unit -&gt; System.Collections.Generic.ISet&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignment&gt;" Usage="servicePrincipalImpl.RoleAssignments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignment&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServicePrincipalNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;string&gt; ServicePrincipalNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; ServicePrincipalNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.ServicePrincipalNames" />
      <MemberSignature Language="VB.NET" Value="Public Function ServicePrincipalNames () As IReadOnlyList(Of String)" />
      <MemberSignature Language="F#" Value="member this.ServicePrincipalNames : unit -&gt; System.Collections.Generic.IReadOnlyList&lt;string&gt;" Usage="servicePrincipalImpl.ServicePrincipalNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithCertificateCredential&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl WithCertificateCredential&lt;T&gt; (Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredentialImpl&lt;T&gt; credential) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl WithCertificateCredential&lt;class T&gt;(class Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredentialImpl`1&lt;!!T&gt; credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.WithCertificateCredential``1(Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredentialImpl{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithCertificateCredential(Of T As Class) (credential As CertificateCredentialImpl(Of T)) As ServicePrincipalImpl" />
      <MemberSignature Language="F#" Value="member this.WithCertificateCredential : Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredentialImpl&lt;'T (requires 'T : null)&gt; -&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl (requires 'T : null)" Usage="servicePrincipalImpl.WithCertificateCredential credential" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="credential" Type="Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredentialImpl&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="credential">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithExistingApplication">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl WithExistingApplication (Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl WithExistingApplication(class Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication application) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.WithExistingApplication(Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithExistingApplication (application As IActiveDirectoryApplication) As ServicePrincipalImpl" />
      <MemberSignature Language="F#" Value="member this.WithExistingApplication : Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication -&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl" Usage="servicePrincipalImpl.WithExistingApplication application" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication" />
      </Parameters>
      <Docs>
        <param name="application">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithExistingApplication">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl WithExistingApplication (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl WithExistingApplication(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.WithExistingApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithExistingApplication (id As String) As ServicePrincipalImpl" />
      <MemberSignature Language="F#" Value="member this.WithExistingApplication : string -&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl" Usage="servicePrincipalImpl.WithExistingApplication id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithNewApplication">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl WithNewApplication (Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication&gt; applicationCreatable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl WithNewApplication(class Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable`1&lt;class Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication&gt; applicationCreatable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.WithNewApplication(Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable{Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithNewApplication (applicationCreatable As ICreatable(Of IActiveDirectoryApplication)) As ServicePrincipalImpl" />
      <MemberSignature Language="F#" Value="member this.WithNewApplication : Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication&gt; -&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl" Usage="servicePrincipalImpl.WithNewApplication applicationCreatable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationCreatable" Type="Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable&lt;Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication&gt;" />
      </Parameters>
      <Docs>
        <param name="applicationCreatable">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithNewApplication">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl WithNewApplication (string signOnUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl WithNewApplication(string signOnUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.WithNewApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithNewApplication (signOnUrl As String) As ServicePrincipalImpl" />
      <MemberSignature Language="F#" Value="member this.WithNewApplication : string -&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl" Usage="servicePrincipalImpl.WithNewApplication signOnUrl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOnUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="signOnUrl">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithNewRole">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl WithNewRole (Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole role, string scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl WithNewRole(class Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole role, string scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.WithNewRole(Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithNewRole (role As BuiltInRole, scope As String) As ServicePrincipalImpl" />
      <MemberSignature Language="F#" Value="member this.WithNewRole : Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole * string -&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl" Usage="servicePrincipalImpl.WithNewRole (role, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole" />
        <Parameter Name="scope" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">To be added.</param>
        <param name="scope">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithNewRoleInResourceGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl WithNewRoleInResourceGroup (Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole role, Microsoft.Azure.Management.ResourceManager.Fluent.IResourceGroup resourceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl WithNewRoleInResourceGroup(class Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole role, class Microsoft.Azure.Management.ResourceManager.Fluent.IResourceGroup resourceGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.WithNewRoleInResourceGroup(Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole,Microsoft.Azure.Management.ResourceManager.Fluent.IResourceGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithNewRoleInResourceGroup (role As BuiltInRole, resourceGroup As IResourceGroup) As ServicePrincipalImpl" />
      <MemberSignature Language="F#" Value="member this.WithNewRoleInResourceGroup : Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole * Microsoft.Azure.Management.ResourceManager.Fluent.IResourceGroup -&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl" Usage="servicePrincipalImpl.WithNewRoleInResourceGroup (role, resourceGroup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole" />
        <Parameter Name="resourceGroup" Type="Microsoft.Azure.Management.ResourceManager.Fluent.IResourceGroup" />
      </Parameters>
      <Docs>
        <param name="role">To be added.</param>
        <param name="resourceGroup">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithNewRoleInSubscription">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl WithNewRoleInSubscription (Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole role, string subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl WithNewRoleInSubscription(class Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole role, string subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.WithNewRoleInSubscription(Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithNewRoleInSubscription (role As BuiltInRole, subscriptionId As String) As ServicePrincipalImpl" />
      <MemberSignature Language="F#" Value="member this.WithNewRoleInSubscription : Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole * string -&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl" Usage="servicePrincipalImpl.WithNewRoleInSubscription (role, subscriptionId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole" />
        <Parameter Name="subscriptionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">To be added.</param>
        <param name="subscriptionId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithoutCredential">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl WithoutCredential (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl WithoutCredential(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.WithoutCredential(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithoutCredential (name As String) As ServicePrincipalImpl" />
      <MemberSignature Language="F#" Value="member this.WithoutCredential : string -&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl" Usage="servicePrincipalImpl.WithoutCredential name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithoutRole">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl WithoutRole (Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignment roleAssignment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl WithoutRole(class Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignment roleAssignment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.WithoutRole(Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignment)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithoutRole (roleAssignment As IRoleAssignment) As ServicePrincipalImpl" />
      <MemberSignature Language="F#" Value="member this.WithoutRole : Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignment -&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl" Usage="servicePrincipalImpl.WithoutRole roleAssignment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleAssignment" Type="Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignment" />
      </Parameters>
      <Docs>
        <param name="roleAssignment">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithPasswordCredential&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl WithPasswordCredential&lt;T&gt; (Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredentialImpl&lt;T&gt; credential) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl WithPasswordCredential&lt;class T&gt;(class Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredentialImpl`1&lt;!!T&gt; credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl.WithPasswordCredential``1(Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredentialImpl{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithPasswordCredential(Of T As Class) (credential As PasswordCredentialImpl(Of T)) As ServicePrincipalImpl" />
      <MemberSignature Language="F#" Value="member this.WithPasswordCredential : Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredentialImpl&lt;'T (requires 'T : null)&gt; -&gt; Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl (requires 'T : null)" Usage="servicePrincipalImpl.WithPasswordCredential credential" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Graph.RBAC.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="credential" Type="Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredentialImpl&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="credential">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>