<Type Name="DurableTaskExtension" FullName="Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension">
  <TypeSignature Language="C#" Value="public class DurableTaskExtension : DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskActivity&gt;, DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskOrchestration&gt;, IDisposable, Microsoft.Azure.WebJobs.Host.Config.IExtensionConfigProvider, Microsoft.Azure.WebJobs.IAsyncConverter&lt;System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DurableTaskExtension extends System.Object implements class DurableTask.Core.INameVersionObjectManager`1&lt;class DurableTask.Core.TaskActivity&gt;, class DurableTask.Core.INameVersionObjectManager`1&lt;class DurableTask.Core.TaskOrchestration&gt;, class Microsoft.Azure.WebJobs.Host.Config.IExtensionConfigProvider, class Microsoft.Azure.WebJobs.IAsyncConverter`2&lt;class System.Net.Http.HttpRequestMessage, class System.Net.Http.HttpResponseMessage&gt;, class System.IDisposable" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension" />
  <TypeSignature Language="VB.NET" Value="Public Class DurableTaskExtension&#xA;Implements IAsyncConverter(Of HttpRequestMessage, HttpResponseMessage), IDisposable, IExtensionConfigProvider, INameVersionObjectManager(Of TaskActivity), INameVersionObjectManager(Of TaskOrchestration)" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type DurableTaskExtension = class&#xA;    interface IExtensionConfigProvider&#xA;    interface IDisposable&#xA;    interface IAsyncConverter&lt;HttpRequestMessage, HttpResponseMessage&gt;&#xA;    interface INameVersionObjectManager&lt;TaskOrchestration&gt;&#xA;    interface INameVersionObjectManager&lt;TaskActivity&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class DurableTaskExtension : DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskActivity&gt;, DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskOrchestration&gt;, Microsoft.Azure.WebJobs.Host.Config.IExtensionConfigProvider, Microsoft.Azure.WebJobs.IAsyncConverter&lt;System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage&gt;" FrameworkAlternate="azure-dotnet-legacy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DurableTaskExtension extends System.Object implements class DurableTask.Core.INameVersionObjectManager`1&lt;class DurableTask.Core.TaskActivity&gt;, class DurableTask.Core.INameVersionObjectManager`1&lt;class DurableTask.Core.TaskOrchestration&gt;, class Microsoft.Azure.WebJobs.Host.Config.IExtensionConfigProvider, class Microsoft.Azure.WebJobs.IAsyncConverter`2&lt;class System.Net.Http.HttpRequestMessage, class System.Net.Http.HttpResponseMessage&gt;" FrameworkAlternate="azure-dotnet-legacy" />
  <TypeSignature Language="VB.NET" Value="Public Class DurableTaskExtension&#xA;Implements IAsyncConverter(Of HttpRequestMessage, HttpResponseMessage), IExtensionConfigProvider, INameVersionObjectManager(Of TaskActivity), INameVersionObjectManager(Of TaskOrchestration)" FrameworkAlternate="azure-dotnet-legacy" />
  <TypeSignature Language="F#" Value="type DurableTaskExtension = class&#xA;    interface IExtensionConfigProvider&#xA;    interface IAsyncConverter&lt;HttpRequestMessage, HttpResponseMessage&gt;&#xA;    interface INameVersionObjectManager&lt;TaskOrchestration&gt;&#xA;    interface INameVersionObjectManager&lt;TaskActivity&gt;" FrameworkAlternate="azure-dotnet-legacy" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskActivity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskOrchestration&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.WebJobs.Host.Config.IExtensionConfigProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.WebJobs.IAsyncConverter&lt;System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.Azure.WebJobs.Description.Extension("DurableTask", "DurableTask")]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.Azure.WebJobs.Description.Extension("DurableTask", "DurableTask")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Configuration for the Durable Functions extension.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DurableTaskExtension (Microsoft.Extensions.Options.IOptions&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions&gt; options, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, Microsoft.Azure.WebJobs.INameResolver nameResolver, Microsoft.Azure.WebJobs.Extensions.DurableTask.IConnectionStringResolver connectionStringResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Options.IOptions`1&lt;class Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions&gt; options, class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, class Microsoft.Azure.WebJobs.INameResolver nameResolver, class Microsoft.Azure.WebJobs.Extensions.DurableTask.IConnectionStringResolver connectionStringResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions},Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Azure.WebJobs.INameResolver,Microsoft.Azure.WebJobs.Extensions.DurableTask.IConnectionStringResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As IOptions(Of DurableTaskOptions), loggerFactory As ILoggerFactory, nameResolver As INameResolver, connectionStringResolver As IConnectionStringResolver)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension : Microsoft.Extensions.Options.IOptions&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions&gt; * Microsoft.Extensions.Logging.ILoggerFactory * Microsoft.Azure.WebJobs.INameResolver * Microsoft.Azure.WebJobs.Extensions.DurableTask.IConnectionStringResolver -&gt; Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension" Usage="new Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension (options, loggerFactory, nameResolver, connectionStringResolver)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Extensions.Options.IOptions&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions&gt;" Index="0" FrameworkAlternate="azure-dotnet-legacy" />
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" Index="1" FrameworkAlternate="azure-dotnet-legacy" />
        <Parameter Name="nameResolver" Type="Microsoft.Azure.WebJobs.INameResolver" Index="2" FrameworkAlternate="azure-dotnet-legacy" />
        <Parameter Name="connectionStringResolver" Type="Microsoft.Azure.WebJobs.Extensions.DurableTask.IConnectionStringResolver" Index="3" FrameworkAlternate="azure-dotnet-legacy" />
      </Parameters>
      <Docs>
        <param name="options">The configuration options for this extension.</param>
        <param name="loggerFactory">The logger factory used for extension-specific logging and orchestration tracking.</param>
        <param name="nameResolver">The name resolver to use for looking up application settings.</param>
        <param name="connectionStringResolver">The resolver to use for looking up connection strings.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DurableTaskExtension (Microsoft.Extensions.Options.IOptions&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions&gt; options, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, Microsoft.Azure.WebJobs.INameResolver nameResolver, Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurabilityProviderFactory orchestrationServiceFactory, Microsoft.Azure.WebJobs.Extensions.DurableTask.IApplicationLifetimeWrapper hostLifetimeService, Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableHttpMessageHandlerFactory durableHttpMessageHandlerFactory = default, Microsoft.Azure.WebJobs.Extensions.DurableTask.ILifeCycleNotificationHelper lifeCycleNotificationHelper = default, Microsoft.Azure.WebJobs.Extensions.DurableTask.IMessageSerializerSettingsFactory messageSerializerSettingsFactory = default, Microsoft.Azure.WebJobs.Extensions.DurableTask.IErrorSerializerSettingsFactory errorSerializerSettingsFactory = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Options.IOptions`1&lt;class Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions&gt; options, class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, class Microsoft.Azure.WebJobs.INameResolver nameResolver, class Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurabilityProviderFactory orchestrationServiceFactory, class Microsoft.Azure.WebJobs.Extensions.DurableTask.IApplicationLifetimeWrapper hostLifetimeService, class Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableHttpMessageHandlerFactory durableHttpMessageHandlerFactory, class Microsoft.Azure.WebJobs.Extensions.DurableTask.ILifeCycleNotificationHelper lifeCycleNotificationHelper, class Microsoft.Azure.WebJobs.Extensions.DurableTask.IMessageSerializerSettingsFactory messageSerializerSettingsFactory, class Microsoft.Azure.WebJobs.Extensions.DurableTask.IErrorSerializerSettingsFactory errorSerializerSettingsFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions},Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Azure.WebJobs.INameResolver,Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurabilityProviderFactory,Microsoft.Azure.WebJobs.Extensions.DurableTask.IApplicationLifetimeWrapper,Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableHttpMessageHandlerFactory,Microsoft.Azure.WebJobs.Extensions.DurableTask.ILifeCycleNotificationHelper,Microsoft.Azure.WebJobs.Extensions.DurableTask.IMessageSerializerSettingsFactory,Microsoft.Azure.WebJobs.Extensions.DurableTask.IErrorSerializerSettingsFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As IOptions(Of DurableTaskOptions), loggerFactory As ILoggerFactory, nameResolver As INameResolver, orchestrationServiceFactory As IDurabilityProviderFactory, hostLifetimeService As IApplicationLifetimeWrapper, Optional durableHttpMessageHandlerFactory As IDurableHttpMessageHandlerFactory = Nothing, Optional lifeCycleNotificationHelper As ILifeCycleNotificationHelper = Nothing, Optional messageSerializerSettingsFactory As IMessageSerializerSettingsFactory = Nothing, Optional errorSerializerSettingsFactory As IErrorSerializerSettingsFactory = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension : Microsoft.Extensions.Options.IOptions&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions&gt; * Microsoft.Extensions.Logging.ILoggerFactory * Microsoft.Azure.WebJobs.INameResolver * Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurabilityProviderFactory * Microsoft.Azure.WebJobs.Extensions.DurableTask.IApplicationLifetimeWrapper * Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableHttpMessageHandlerFactory * Microsoft.Azure.WebJobs.Extensions.DurableTask.ILifeCycleNotificationHelper * Microsoft.Azure.WebJobs.Extensions.DurableTask.IMessageSerializerSettingsFactory * Microsoft.Azure.WebJobs.Extensions.DurableTask.IErrorSerializerSettingsFactory -&gt; Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension" Usage="new Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension (options, loggerFactory, nameResolver, orchestrationServiceFactory, hostLifetimeService, durableHttpMessageHandlerFactory, lifeCycleNotificationHelper, messageSerializerSettingsFactory, errorSerializerSettingsFactory)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Extensions.Options.IOptions&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions&gt;" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="nameResolver" Type="Microsoft.Azure.WebJobs.INameResolver" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="orchestrationServiceFactory" Type="Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurabilityProviderFactory" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="hostLifetimeService" Type="Microsoft.Azure.WebJobs.Extensions.DurableTask.IApplicationLifetimeWrapper" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="durableHttpMessageHandlerFactory" Type="Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableHttpMessageHandlerFactory" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="lifeCycleNotificationHelper" Type="Microsoft.Azure.WebJobs.Extensions.DurableTask.ILifeCycleNotificationHelper" Index="6" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="messageSerializerSettingsFactory" Type="Microsoft.Azure.WebJobs.Extensions.DurableTask.IMessageSerializerSettingsFactory" Index="7" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="errorSerializerSettingsFactory" Type="Microsoft.Azure.WebJobs.Extensions.DurableTask.IErrorSerializerSettingsFactory" Index="8" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">The configuration options for this extension.</param>
        <param name="loggerFactory">The logger factory used for extension-specific logging and orchestration tracking.</param>
        <param name="nameResolver">The name resolver to use for looking up application settings.</param>
        <param name="orchestrationServiceFactory">The factory used to create orchestration service based on the configured storage provider.</param>
        <param name="durableHttpMessageHandlerFactory">The HTTP message handler that handles HTTP requests and HTTP responses.</param>
        <param name="hostLifetimeService">The host shutdown notification service for detecting and reacting to host shutdowns.</param>
        <param name="lifeCycleNotificationHelper">The lifecycle notification helper used for custom orchestration tracking.</param>
        <param name="messageSerializerSettingsFactory">The factory used to create <see cref="T:Newtonsoft.Json.JsonSerializerSettings" /> for message settings.</param>
        <param name="errorSerializerSettingsFactory">The factory used to create <see cref="T:Newtonsoft.Json.JsonSerializerSettings" /> for error settings.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteTaskHubAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DeleteTaskHubAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DeleteTaskHubAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.DeleteTaskHubAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteTaskHubAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.DeleteTaskHubAsync : unit -&gt; System.Threading.Tasks.Task" Usage="durableTaskExtension.DeleteTaskHubAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Deletes all data stored in the current task hub.
            </summary>
        <returns>A task representing the async delete operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="durableTaskExtension.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskActivity&gt;.Add">
      <MemberSignature Language="C#" Value="void INameVersionObjectManager&lt;TaskActivity&gt;.Add (DurableTask.Core.ObjectCreator&lt;DurableTask.Core.TaskActivity&gt; creator);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskActivity&gt;.Add(class DurableTask.Core.ObjectCreator`1&lt;class DurableTask.Core.TaskActivity&gt; creator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.DurableTask#Core#INameVersionObjectManager&lt;DurableTask#Core#TaskActivity&gt;#Add(DurableTask.Core.ObjectCreator{DurableTask.Core.TaskActivity})" />
      <MemberSignature Language="VB.NET" Value="Sub Add (creator As ObjectCreator(Of TaskActivity)) Implements INameVersionObjectManager(Of TaskActivity).Add" />
      <MemberSignature Language="F#" Value="abstract member DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskActivity&gt;.Add : DurableTask.Core.ObjectCreator&lt;DurableTask.Core.TaskActivity&gt; -&gt; unit&#xA;override this.DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskActivity&gt;.Add : DurableTask.Core.ObjectCreator&lt;DurableTask.Core.TaskActivity&gt; -&gt; unit" Usage="durableTaskExtension.DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskActivity&gt;.Add creator" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:DurableTask.Core.INameVersionObjectManager`1.Add(DurableTask.Core.ObjectCreator{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="creator" Type="DurableTask.Core.ObjectCreator&lt;DurableTask.Core.TaskActivity&gt;" />
      </Parameters>
      <Docs>
        <param name="creator">This parameter is not used.</param>
        <summary>
            Called by the durable task framework: Not used.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskActivity&gt;.GetObject">
      <MemberSignature Language="C#" Value="DurableTask.Core.TaskActivity INameVersionObjectManager&lt;TaskActivity&gt;.GetObject (string name, string version);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class DurableTask.Core.TaskActivity DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskActivity&gt;.GetObject(string name, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.DurableTask#Core#INameVersionObjectManager&lt;DurableTask#Core#TaskActivity&gt;#GetObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetObject (name As String, version As String) As TaskActivity Implements INameVersionObjectManager(Of TaskActivity).GetObject" />
      <MemberSignature Language="F#" Value="abstract member DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskActivity&gt;.GetObject : string * string -&gt; DurableTask.Core.TaskActivity&#xA;override this.DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskActivity&gt;.GetObject : string * string -&gt; DurableTask.Core.TaskActivity" Usage="durableTaskExtension.DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskActivity&gt;.GetObject (name, version)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:DurableTask.Core.INameVersionObjectManager`1.GetObject(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DurableTask.Core.TaskActivity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the activity to return.</param>
        <param name="version">Not used.</param>
        <summary>
            Called by the Durable Task Framework: Returns the specified <see cref="T:DurableTask.Core.TaskActivity" />.
            </summary>
        <returns>An activity shim that delegates execution to an activity function.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskOrchestration&gt;.Add">
      <MemberSignature Language="C#" Value="void INameVersionObjectManager&lt;TaskOrchestration&gt;.Add (DurableTask.Core.ObjectCreator&lt;DurableTask.Core.TaskOrchestration&gt; creator);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskOrchestration&gt;.Add(class DurableTask.Core.ObjectCreator`1&lt;class DurableTask.Core.TaskOrchestration&gt; creator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.DurableTask#Core#INameVersionObjectManager&lt;DurableTask#Core#TaskOrchestration&gt;#Add(DurableTask.Core.ObjectCreator{DurableTask.Core.TaskOrchestration})" />
      <MemberSignature Language="VB.NET" Value="Sub Add (creator As ObjectCreator(Of TaskOrchestration)) Implements INameVersionObjectManager(Of TaskOrchestration).Add" />
      <MemberSignature Language="F#" Value="abstract member DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskOrchestration&gt;.Add : DurableTask.Core.ObjectCreator&lt;DurableTask.Core.TaskOrchestration&gt; -&gt; unit&#xA;override this.DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskOrchestration&gt;.Add : DurableTask.Core.ObjectCreator&lt;DurableTask.Core.TaskOrchestration&gt; -&gt; unit" Usage="durableTaskExtension.DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskOrchestration&gt;.Add creator" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:DurableTask.Core.INameVersionObjectManager`1.Add(DurableTask.Core.ObjectCreator{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="creator" Type="DurableTask.Core.ObjectCreator&lt;DurableTask.Core.TaskOrchestration&gt;" />
      </Parameters>
      <Docs>
        <param name="creator">This parameter is not used.</param>
        <summary>
            Called by the Durable Task Framework: Not used.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskOrchestration&gt;.GetObject">
      <MemberSignature Language="C#" Value="DurableTask.Core.TaskOrchestration INameVersionObjectManager&lt;TaskOrchestration&gt;.GetObject (string name, string version);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class DurableTask.Core.TaskOrchestration DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskOrchestration&gt;.GetObject(string name, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.DurableTask#Core#INameVersionObjectManager&lt;DurableTask#Core#TaskOrchestration&gt;#GetObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetObject (name As String, version As String) As TaskOrchestration Implements INameVersionObjectManager(Of TaskOrchestration).GetObject" />
      <MemberSignature Language="F#" Value="abstract member DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskOrchestration&gt;.GetObject : string * string -&gt; DurableTask.Core.TaskOrchestration&#xA;override this.DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskOrchestration&gt;.GetObject : string * string -&gt; DurableTask.Core.TaskOrchestration" Usage="durableTaskExtension.DurableTask.Core.INameVersionObjectManager&lt;DurableTask.Core.TaskOrchestration&gt;.GetObject (name, version)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:DurableTask.Core.INameVersionObjectManager`1.GetObject(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DurableTask.Core.TaskOrchestration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the orchestration to return.</param>
        <param name="version">Not used.</param>
        <summary>
            Called by the Durable Task Framework: Returns the specified <see cref="T:DurableTask.Core.TaskOrchestration" />.
            </summary>
        <returns>An orchestration shim that delegates execution to an orchestrator function.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClient">
      <MemberSignature Language="C#" Value="protected internal virtual Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableClient GetClient (Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClientAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableClient GetClient(class Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClientAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.GetClient(Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClientAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetClient (attribute As DurableClientAttribute) As IDurableClient" />
      <MemberSignature Language="F#" Value="abstract member GetClient : Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClientAttribute -&gt; Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableClient&#xA;override this.GetClient : Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClientAttribute -&gt; Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableClient" Usage="durableTaskExtension.GetClient attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClientAttribute" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="attribute">The attribute containing the client configuration parameters.</param>
        <summary>
            Gets a <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableClient" /> using configuration from a <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClientAttribute" /> instance.
            </summary>
        <returns>Returns a <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableClient" /> instance. The returned instance may be a cached instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClient">
      <MemberSignature Language="C#" Value="protected internal virtual Microsoft.Azure.WebJobs.DurableOrchestrationClient GetClient (Microsoft.Azure.WebJobs.OrchestrationClientAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class Microsoft.Azure.WebJobs.DurableOrchestrationClient GetClient(class Microsoft.Azure.WebJobs.OrchestrationClientAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.GetClient(Microsoft.Azure.WebJobs.OrchestrationClientAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetClient (attribute As OrchestrationClientAttribute) As DurableOrchestrationClient" />
      <MemberSignature Language="F#" Value="abstract member GetClient : Microsoft.Azure.WebJobs.OrchestrationClientAttribute -&gt; Microsoft.Azure.WebJobs.DurableOrchestrationClient&#xA;override this.GetClient : Microsoft.Azure.WebJobs.OrchestrationClientAttribute -&gt; Microsoft.Azure.WebJobs.DurableOrchestrationClient" Usage="durableTaskExtension.GetClient attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.WebJobs.DurableOrchestrationClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="Microsoft.Azure.WebJobs.OrchestrationClientAttribute" Index="0" FrameworkAlternate="azure-dotnet-legacy" />
      </Parameters>
      <Docs>
        <param name="attribute">The attribute containing the client configuration parameters.</param>
        <summary>
            Gets a <see cref="T:Microsoft.Azure.WebJobs.DurableOrchestrationClient" /> using configuration from a <see cref="T:Microsoft.Azure.WebJobs.OrchestrationClientAttribute" /> instance.
            </summary>
        <returns>Returns a <see cref="T:Microsoft.Azure.WebJobs.DurableOrchestrationClient" /> instance. The returned instance may be a cached instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.WebJobs.Host.Config.IExtensionConfigProvider.Initialize">
      <MemberSignature Language="C#" Value="void IExtensionConfigProvider.Initialize (Microsoft.Azure.WebJobs.Host.Config.ExtensionConfigContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Azure.WebJobs.Host.Config.IExtensionConfigProvider.Initialize(class Microsoft.Azure.WebJobs.Host.Config.ExtensionConfigContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.Microsoft#Azure#WebJobs#Host#Config#IExtensionConfigProvider#Initialize(Microsoft.Azure.WebJobs.Host.Config.ExtensionConfigContext)" />
      <MemberSignature Language="VB.NET" Value="Sub Initialize (context As ExtensionConfigContext) Implements IExtensionConfigProvider.Initialize" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Azure.WebJobs.Host.Config.IExtensionConfigProvider.Initialize : Microsoft.Azure.WebJobs.Host.Config.ExtensionConfigContext -&gt; unit&#xA;override this.Microsoft.Azure.WebJobs.Host.Config.IExtensionConfigProvider.Initialize : Microsoft.Azure.WebJobs.Host.Config.ExtensionConfigContext -&gt; unit" Usage="durableTaskExtension.Microsoft.Azure.WebJobs.Host.Config.IExtensionConfigProvider.Initialize context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.WebJobs.Host.Config.IExtensionConfigProvider.Initialize(Microsoft.Azure.WebJobs.Host.Config.ExtensionConfigContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Azure.WebJobs.Host.Config.ExtensionConfigContext" />
      </Parameters>
      <Docs>
        <param name="context">Extension context provided by WebJobs.</param>
        <summary>
            Internal initialization call from the WebJobs host.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.WebJobs.IAsyncConverter&lt;System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage&gt;.ConvertAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; IAsyncConverter&lt;HttpRequestMessage,HttpResponseMessage&gt;.ConvertAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; Microsoft.Azure.WebJobs.IAsyncConverter&lt;System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage&gt;.ConvertAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.Microsoft#Azure#WebJobs#IAsyncConverter&lt;System#Net#Http#HttpRequestMessage,System#Net#Http#HttpResponseMessage&gt;#ConvertAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Function ConvertAsync (request As HttpRequestMessage, cancellationToken As CancellationToken) As Task(Of HttpResponseMessage) Implements IAsyncConverter(Of HttpRequestMessage, HttpResponseMessage).ConvertAsync" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Azure.WebJobs.IAsyncConverter&lt;System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage&gt;.ConvertAsync : System.Net.Http.HttpRequestMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;&#xA;override this.Microsoft.Azure.WebJobs.IAsyncConverter&lt;System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage&gt;.ConvertAsync : System.Net.Http.HttpRequestMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="durableTaskExtension.Microsoft.Azure.WebJobs.IAsyncConverter&lt;System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage&gt;.ConvertAsync (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.WebJobs.IAsyncConverter`2.ConvertAsync(`0,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
