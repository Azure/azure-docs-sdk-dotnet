<Type Name="DocumentModelAdministrationClient" FullName="Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient">
  <TypeSignature Language="C#" Value="public class DocumentModelAdministrationClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DocumentModelAdministrationClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient" />
  <TypeSignature Language="VB.NET" Value="Public Class DocumentModelAdministrationClient" />
  <TypeSignature Language="F#" Value="type DocumentModelAdministrationClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The client to use to connect with the Form Recognizer Azure Cognitive Service to build models from
            custom documents. It also supports listing, copying, and deleting models, creating composed models, and accessing account
            properties.
            </summary>
    <remarks>
            This client only works with <see cref="F:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentAnalysisClientOptions.ServiceVersion.V2022_08_31" /> and up.
            If you want to use a lower version, please use the <see cref="T:Azure.AI.FormRecognizer.Training.FormTrainingClient" />.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DocumentModelAdministrationClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DocumentModelAdministrationClient (Uri endpoint, Azure.AzureKeyCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.#ctor(System.Uri,Azure.AzureKeyCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential)" />
      <MemberSignature Language="F#" Value="new Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient : Uri * Azure.AzureKeyCredential -&gt; Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient" Usage="new Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">The endpoint to use for connecting to the Form Recognizer Azure Cognitive Service.</param>
        <param name="credential">A credential used to authenticate to an Azure Service.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient" /> class.
            </summary>
        <remarks>
            Both the <paramref name="endpoint" /> URI string and the <paramref name="credential" /><c>string</c> key
            can be found in the Azure Portal.
            For more information see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/formrecognizer/Azure.AI.FormRecognizer/README.md#authenticate-the-client"> here</see>.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DocumentModelAdministrationClient (Uri endpoint, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient : Uri * Azure.Core.TokenCredential -&gt; Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient" Usage="new Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">The endpoint to use for connecting to the Form Recognizer Azure Cognitive Service.</param>
        <param name="credential">A credential used to authenticate to an Azure Service.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient" /> class.
            </summary>
        <remarks>
            The <paramref name="endpoint" /> URI string can be found in the Azure Portal.
            For more information see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/formrecognizer/Azure.AI.FormRecognizer/README.md#authenticate-the-client"> here</see>.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DocumentModelAdministrationClient (Uri endpoint, Azure.AzureKeyCredential credential, Azure.AI.FormRecognizer.DocumentAnalysis.DocumentAnalysisClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential, class Azure.AI.FormRecognizer.DocumentAnalysis.DocumentAnalysisClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.#ctor(System.Uri,Azure.AzureKeyCredential,Azure.AI.FormRecognizer.DocumentAnalysis.DocumentAnalysisClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential, options As DocumentAnalysisClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient : Uri * Azure.AzureKeyCredential * Azure.AI.FormRecognizer.DocumentAnalysis.DocumentAnalysisClientOptions -&gt; Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient" Usage="new Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
        <Parameter Name="options" Type="Azure.AI.FormRecognizer.DocumentAnalysis.DocumentAnalysisClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">The endpoint to use for connecting to the Form Recognizer Azure Cognitive Service.</param>
        <param name="credential">A credential used to authenticate to an Azure Service.</param>
        <param name="options">A set of options to apply when configuring the client.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient" /> class.
            </summary>
        <remarks>
            Both the <paramref name="endpoint" /> URI string and the <paramref name="credential" /><c>string</c> key
            can be found in the Azure Portal.
            For more information see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/formrecognizer/Azure.AI.FormRecognizer/README.md#authenticate-the-client"> here</see>.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DocumentModelAdministrationClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.AI.FormRecognizer.DocumentAnalysis.DocumentAnalysisClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.AI.FormRecognizer.DocumentAnalysis.DocumentAnalysisClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.AI.FormRecognizer.DocumentAnalysis.DocumentAnalysisClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, options As DocumentAnalysisClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient : Uri * Azure.Core.TokenCredential * Azure.AI.FormRecognizer.DocumentAnalysis.DocumentAnalysisClientOptions -&gt; Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient" Usage="new Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.AI.FormRecognizer.DocumentAnalysis.DocumentAnalysisClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">The endpoint to use for connecting to the Form Recognizer Azure Cognitive Service.</param>
        <param name="credential">A credential used to authenticate to an Azure Service.</param>
        <param name="options">A set of options to apply when configuring the client.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient" /> class.
            </summary>
        <remarks>
            The <paramref name="endpoint" /> URI string can be found in the Azure Portal.
            For more information see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/formrecognizer/Azure.AI.FormRecognizer/README.md#authenticate-the-client"> here</see>.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildDocumentModel">
      <MemberSignature Language="C#" Value="public virtual Azure.AI.FormRecognizer.DocumentAnalysis.BuildDocumentModelOperation BuildDocumentModel (Azure.WaitUntil waitUntil, Uri blobContainerUri, Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode buildMode, string modelId = default, string prefix = default, Azure.AI.FormRecognizer.DocumentAnalysis.BuildDocumentModelOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AI.FormRecognizer.DocumentAnalysis.BuildDocumentModelOperation BuildDocumentModel(valuetype Azure.WaitUntil waitUntil, class System.Uri blobContainerUri, valuetype Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode buildMode, string modelId, string prefix, class Azure.AI.FormRecognizer.DocumentAnalysis.BuildDocumentModelOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.BuildDocumentModel(Azure.WaitUntil,System.Uri,Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode,System.String,System.String,Azure.AI.FormRecognizer.DocumentAnalysis.BuildDocumentModelOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildDocumentModel (waitUntil As WaitUntil, blobContainerUri As Uri, buildMode As DocumentBuildMode, Optional modelId As String = Nothing, Optional prefix As String = Nothing, Optional options As BuildDocumentModelOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As BuildDocumentModelOperation" />
      <MemberSignature Language="F#" Value="abstract member BuildDocumentModel : Azure.WaitUntil * Uri * Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode * string * string * Azure.AI.FormRecognizer.DocumentAnalysis.BuildDocumentModelOptions * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.DocumentAnalysis.BuildDocumentModelOperation&#xA;override this.BuildDocumentModel : Azure.WaitUntil * Uri * Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode * string * string * Azure.AI.FormRecognizer.DocumentAnalysis.BuildDocumentModelOptions * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.DocumentAnalysis.BuildDocumentModelOperation" Usage="documentModelAdministrationClient.BuildDocumentModel (waitUntil, blobContainerUri, buildMode, modelId, prefix, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.FormRecognizer.DocumentAnalysis.BuildDocumentModelOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="blobContainerUri" Type="System.Uri" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="buildMode" Type="Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="modelId" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="prefix" Type="System.String" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="Azure.AI.FormRecognizer.DocumentAnalysis.BuildDocumentModelOptions" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="6" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service;
            <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation.
            </param>
        <param name="blobContainerUri">
            An externally accessible Azure Blob Storage container URI pointing to the container that has your training files.
            Note that a container URI without SAS is accepted only when the container is public or has a managed identity
            configured.
            For more information on setting up a training data set, see <see href="https://aka.ms/azsdk/formrecognizer/buildcustommodel">this article</see>.
            </param>
        <param name="buildMode">
            The technique to use to build the model. Use:
            <list type="bullet"><item><term><see cref="P:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode.Template" /></term><description>
                  When the custom documents all have the same layout. Fields are expected to be in the same place
                  across documents. Build time tends to be considerably shorter than <see cref="P:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode.Neural" />
                  mode.
                </description></item><item><term><see cref="P:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode.Neural" /></term><description>
                  Recommended mode when custom documents have different layouts. Fields are expected to be the same but
                  they can be placed in different positions across documents.
                </description></item></list>
            For more information see <see href="https://aka.ms/azsdk/formrecognizer/buildmode">here</see>.
            </param>
        <param name="modelId">A unique ID for your model. If not specified, a model ID will be created for you.</param>
        <param name="prefix">A case-sensitive prefix string to filter documents in the source path for building a model. For example, you may use the prefix to restrict subfolders.</param>
        <param name="options">A set of options available for configuring the request. For example, set a model description or set a filter to apply
            to the documents in the source path.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Build a custom document analysis model from a collection of documents in an Azure Blob Storage container.
            </summary>
        <returns>
            A <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.BuildDocumentModelOperation" /> to wait on this long-running operation. Its Value upon successful
            completion will contain meta-data about the created custom model.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildDocumentModelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.DocumentAnalysis.BuildDocumentModelOperation&gt; BuildDocumentModelAsync (Azure.WaitUntil waitUntil, Uri blobContainerUri, Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode buildMode, string modelId = default, string prefix = default, Azure.AI.FormRecognizer.DocumentAnalysis.BuildDocumentModelOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.BuildDocumentModelOperation&gt; BuildDocumentModelAsync(valuetype Azure.WaitUntil waitUntil, class System.Uri blobContainerUri, valuetype Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode buildMode, string modelId, string prefix, class Azure.AI.FormRecognizer.DocumentAnalysis.BuildDocumentModelOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.BuildDocumentModelAsync(Azure.WaitUntil,System.Uri,Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode,System.String,System.String,Azure.AI.FormRecognizer.DocumentAnalysis.BuildDocumentModelOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildDocumentModelAsync (waitUntil As WaitUntil, blobContainerUri As Uri, buildMode As DocumentBuildMode, Optional modelId As String = Nothing, Optional prefix As String = Nothing, Optional options As BuildDocumentModelOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of BuildDocumentModelOperation)" />
      <MemberSignature Language="F#" Value="abstract member BuildDocumentModelAsync : Azure.WaitUntil * Uri * Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode * string * string * Azure.AI.FormRecognizer.DocumentAnalysis.BuildDocumentModelOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.DocumentAnalysis.BuildDocumentModelOperation&gt;&#xA;override this.BuildDocumentModelAsync : Azure.WaitUntil * Uri * Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode * string * string * Azure.AI.FormRecognizer.DocumentAnalysis.BuildDocumentModelOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.DocumentAnalysis.BuildDocumentModelOperation&gt;" Usage="documentModelAdministrationClient.BuildDocumentModelAsync (waitUntil, blobContainerUri, buildMode, modelId, prefix, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.DocumentAnalysis.BuildDocumentModelOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="blobContainerUri" Type="System.Uri" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="buildMode" Type="Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="modelId" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="prefix" Type="System.String" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="Azure.AI.FormRecognizer.DocumentAnalysis.BuildDocumentModelOptions" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="6" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service;
            <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation.
            </param>
        <param name="blobContainerUri">
            An externally accessible Azure Blob Storage container URI pointing to the container that has your training files.
            Note that a container URI without SAS is accepted only when the container is public or has a managed identity
            configured.
            For more information on setting up a training data set, see <see href="https://aka.ms/azsdk/formrecognizer/buildcustommodel">this article</see>.
            </param>
        <param name="buildMode">
            The technique to use to build the model. Use:
            <list type="bullet"><item><term><see cref="P:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode.Template" /></term><description>
                  When the custom documents all have the same layout. Fields are expected to be in the same place
                  across documents. Build time tends to be considerably shorter than <see cref="P:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode.Neural" />
                  mode.
                </description></item><item><term><see cref="P:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode.Neural" /></term><description>
                  Recommended mode when custom documents have different layouts. Fields are expected to be the same but
                  they can be placed in different positions across documents.
                </description></item></list>
            For more information see <see href="https://aka.ms/azsdk/formrecognizer/buildmode">here</see>.
            </param>
        <param name="modelId">A unique ID for your model. If not specified, a model ID will be created for you.</param>
        <param name="prefix">A case-sensitive prefix string to filter documents in the source path for building a model. For example, you may use the prefix to restrict subfolders.</param>
        <param name="options">A set of options available for configuring the request. For example, set a model description or set a filter to apply
            to the documents in the source path.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Build a custom model from a collection of documents in an Azure Blob Storage container.
            </summary>
        <returns>
            A <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.BuildDocumentModelOperation" /> to wait on this long-running operation. Its Value upon successful
            completion will contain meta-data about the created custom model.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildModel">
      <MemberSignature Language="C#" Value="public virtual Azure.AI.FormRecognizer.DocumentAnalysis.BuildModelOperation BuildModel (Azure.WaitUntil waitUntil, Uri blobContainerUri, Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode buildMode, string modelId = default, Azure.AI.FormRecognizer.DocumentAnalysis.BuildModelOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AI.FormRecognizer.DocumentAnalysis.BuildModelOperation BuildModel(valuetype Azure.WaitUntil waitUntil, class System.Uri blobContainerUri, valuetype Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode buildMode, string modelId, class Azure.AI.FormRecognizer.DocumentAnalysis.BuildModelOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.BuildModel(Azure.WaitUntil,System.Uri,Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode,System.String,Azure.AI.FormRecognizer.DocumentAnalysis.BuildModelOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildModel (waitUntil As WaitUntil, blobContainerUri As Uri, buildMode As DocumentBuildMode, Optional modelId As String = Nothing, Optional options As BuildModelOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As BuildModelOperation" />
      <MemberSignature Language="F#" Value="abstract member BuildModel : Azure.WaitUntil * Uri * Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode * string * Azure.AI.FormRecognizer.DocumentAnalysis.BuildModelOptions * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.DocumentAnalysis.BuildModelOperation&#xA;override this.BuildModel : Azure.WaitUntil * Uri * Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode * string * Azure.AI.FormRecognizer.DocumentAnalysis.BuildModelOptions * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.DocumentAnalysis.BuildModelOperation" Usage="documentModelAdministrationClient.BuildModel (waitUntil, blobContainerUri, buildMode, modelId, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.FormRecognizer.DocumentAnalysis.BuildModelOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="blobContainerUri" Type="System.Uri" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="buildMode" Type="Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="modelId" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="Azure.AI.FormRecognizer.DocumentAnalysis.BuildModelOptions" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service;
            <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation.
            </param>
        <param name="blobContainerUri">
            An externally accessible Azure Blob Storage container URI pointing to the container that has your training files.
            Note that a container URI without SAS is accepted only when the container is public or has a managed identity
            configured.
            For more information on setting up a training data set, see <see href="https://aka.ms/azsdk/formrecognizer/buildcustommodel">this article</see>.
            </param>
        <param name="buildMode">
            The technique to use to build the model. Use:
            <list type="bullet"><item><term><see cref="P:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode.Template" /></term><description>
                  When the custom documents all have the same layout. Fields are expected to be in the same place
                  across documents. Build time tends to be considerably shorter than <see cref="P:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode.Neural" />
                  mode.
                </description></item><item><term><see cref="P:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode.Neural" /></term><description>
                  Recommended mode when custom documents have different layouts. Fields are expected to be the same but
                  they can be placed in different positions across documents.
                </description></item></list>
            For more information see <see href="https://aka.ms/azsdk/formrecognizer/buildmode">here</see>.
            </param>
        <param name="modelId">A unique ID for your model. If not specified, a model ID will be created for you.</param>
        <param name="options">A set of options available for configuring the request. For example, set a model description or set a filter to apply
            to the documents in the source path.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Build a custom document analysis model from a collection of documents in an Azure Blob Storage container.
            </summary>
        <returns>
            A <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.BuildModelOperation" /> to wait on this long-running operation. Its Value upon successful
            completion will contain meta-data about the created custom model.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildModelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.DocumentAnalysis.BuildModelOperation&gt; BuildModelAsync (Azure.WaitUntil waitUntil, Uri blobContainerUri, Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode buildMode, string modelId = default, Azure.AI.FormRecognizer.DocumentAnalysis.BuildModelOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.BuildModelOperation&gt; BuildModelAsync(valuetype Azure.WaitUntil waitUntil, class System.Uri blobContainerUri, valuetype Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode buildMode, string modelId, class Azure.AI.FormRecognizer.DocumentAnalysis.BuildModelOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.BuildModelAsync(Azure.WaitUntil,System.Uri,Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode,System.String,Azure.AI.FormRecognizer.DocumentAnalysis.BuildModelOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildModelAsync (waitUntil As WaitUntil, blobContainerUri As Uri, buildMode As DocumentBuildMode, Optional modelId As String = Nothing, Optional options As BuildModelOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of BuildModelOperation)" />
      <MemberSignature Language="F#" Value="abstract member BuildModelAsync : Azure.WaitUntil * Uri * Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode * string * Azure.AI.FormRecognizer.DocumentAnalysis.BuildModelOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.DocumentAnalysis.BuildModelOperation&gt;&#xA;override this.BuildModelAsync : Azure.WaitUntil * Uri * Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode * string * Azure.AI.FormRecognizer.DocumentAnalysis.BuildModelOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.DocumentAnalysis.BuildModelOperation&gt;" Usage="documentModelAdministrationClient.BuildModelAsync (waitUntil, blobContainerUri, buildMode, modelId, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.DocumentAnalysis.BuildModelOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="blobContainerUri" Type="System.Uri" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="buildMode" Type="Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="modelId" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="Azure.AI.FormRecognizer.DocumentAnalysis.BuildModelOptions" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service;
            <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation.
            </param>
        <param name="blobContainerUri">
            An externally accessible Azure Blob Storage container URI pointing to the container that has your training files.
            Note that a container URI without SAS is accepted only when the container is public or has a managed identity
            configured.
            For more information on setting up a training data set, see <see href="https://aka.ms/azsdk/formrecognizer/buildcustommodel">this article</see>.
            </param>
        <param name="buildMode">
            The technique to use to build the model. Use:
            <list type="bullet"><item><term><see cref="P:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode.Template" /></term><description>
                  When the custom documents all have the same layout. Fields are expected to be in the same place
                  across documents. Build time tends to be considerably shorter than <see cref="P:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode.Neural" />
                  mode.
                </description></item><item><term><see cref="P:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentBuildMode.Neural" /></term><description>
                  Recommended mode when custom documents have different layouts. Fields are expected to be the same but
                  they can be placed in different positions across documents.
                </description></item></list>
            For more information see <see href="https://aka.ms/azsdk/formrecognizer/buildmode">here</see>.
            </param>
        <param name="modelId">A unique ID for your model. If not specified, a model ID will be created for you.</param>
        <param name="options">A set of options available for configuring the request. For example, set a model description or set a filter to apply
            to the documents in the source path.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Build a custom model from a collection of documents in an Azure Blob Storage container.
            </summary>
        <returns>
            A <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.BuildModelOperation" /> to wait on this long-running operation. Its Value upon successful
            completion will contain meta-data about the created custom model.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComposeDocumentModel">
      <MemberSignature Language="C#" Value="public virtual Azure.AI.FormRecognizer.DocumentAnalysis.ComposeDocumentModelOperation ComposeDocumentModel (Azure.WaitUntil waitUntil, System.Collections.Generic.IEnumerable&lt;string&gt; componentModelIds, string modelId = default, string description = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AI.FormRecognizer.DocumentAnalysis.ComposeDocumentModelOperation ComposeDocumentModel(valuetype Azure.WaitUntil waitUntil, class System.Collections.Generic.IEnumerable`1&lt;string&gt; componentModelIds, string modelId, string description, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.ComposeDocumentModel(Azure.WaitUntil,System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ComposeDocumentModel (waitUntil As WaitUntil, componentModelIds As IEnumerable(Of String), Optional modelId As String = Nothing, Optional description As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ComposeDocumentModelOperation" />
      <MemberSignature Language="F#" Value="abstract member ComposeDocumentModel : Azure.WaitUntil * seq&lt;string&gt; * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.DocumentAnalysis.ComposeDocumentModelOperation&#xA;override this.ComposeDocumentModel : Azure.WaitUntil * seq&lt;string&gt; * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.DocumentAnalysis.ComposeDocumentModelOperation" Usage="documentModelAdministrationClient.ComposeDocumentModel (waitUntil, componentModelIds, modelId, description, tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.FormRecognizer.DocumentAnalysis.ComposeDocumentModelOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="componentModelIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="modelId" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="description" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service;
            <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation.
            </param>
        <param name="componentModelIds">List of model ids to use in the composition.</param>
        <param name="modelId">A unique ID for your model. If not specified, a model ID will be created for you.</param>
        <param name="description">An optional description to add to the model.</param>
        <param name="tags">A list of user-defined key-value tag attributes associated with the model.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Composes a model from a collection of existing models.
            A model built by composition allows multiple models to be called with a single model ID. When a document is
            submitted to be analyzed with its model ID, a classification step is first performed to route it to the correct
            custom model.
            </summary>
        <returns>
          <para>A <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.ComposeDocumentModelOperation" /> to wait on this long-running operation. Its Value upon successful
            completion will contain meta-data about the built model.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComposeDocumentModelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.DocumentAnalysis.ComposeDocumentModelOperation&gt; ComposeDocumentModelAsync (Azure.WaitUntil waitUntil, System.Collections.Generic.IEnumerable&lt;string&gt; componentModelIds, string modelId = default, string description = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.ComposeDocumentModelOperation&gt; ComposeDocumentModelAsync(valuetype Azure.WaitUntil waitUntil, class System.Collections.Generic.IEnumerable`1&lt;string&gt; componentModelIds, string modelId, string description, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.ComposeDocumentModelAsync(Azure.WaitUntil,System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ComposeDocumentModelAsync (waitUntil As WaitUntil, componentModelIds As IEnumerable(Of String), Optional modelId As String = Nothing, Optional description As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ComposeDocumentModelOperation)" />
      <MemberSignature Language="F#" Value="abstract member ComposeDocumentModelAsync : Azure.WaitUntil * seq&lt;string&gt; * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.DocumentAnalysis.ComposeDocumentModelOperation&gt;&#xA;override this.ComposeDocumentModelAsync : Azure.WaitUntil * seq&lt;string&gt; * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.DocumentAnalysis.ComposeDocumentModelOperation&gt;" Usage="documentModelAdministrationClient.ComposeDocumentModelAsync (waitUntil, componentModelIds, modelId, description, tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.DocumentAnalysis.ComposeDocumentModelOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="componentModelIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="modelId" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="description" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service;
            <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation.
            </param>
        <param name="componentModelIds">List of model ids to use in the composition.</param>
        <param name="modelId">A unique ID for your model. If not specified, a model ID will be created for you.</param>
        <param name="description">An optional description to add to the model.</param>
        <param name="tags">A list of user-defined key-value tag attributes associated with the model.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Composes a model from a collection of existing models.
            A model built by composition allows multiple models to be called with a single model ID. When a document is
            submitted to be analyzed with its model ID, a classification step is first performed to route it to the correct
            custom model.
            </summary>
        <returns>
          <para>A <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.ComposeDocumentModelOperation" /> to wait on this long-running operation. Its Value upon successful
            completion will contain meta-data about the built model.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComposeModel">
      <MemberSignature Language="C#" Value="public virtual Azure.AI.FormRecognizer.DocumentAnalysis.ComposeModelOperation ComposeModel (Azure.WaitUntil waitUntil, System.Collections.Generic.IEnumerable&lt;string&gt; componentModelIds, string modelId = default, string description = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AI.FormRecognizer.DocumentAnalysis.ComposeModelOperation ComposeModel(valuetype Azure.WaitUntil waitUntil, class System.Collections.Generic.IEnumerable`1&lt;string&gt; componentModelIds, string modelId, string description, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.ComposeModel(Azure.WaitUntil,System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ComposeModel (waitUntil As WaitUntil, componentModelIds As IEnumerable(Of String), Optional modelId As String = Nothing, Optional description As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ComposeModelOperation" />
      <MemberSignature Language="F#" Value="abstract member ComposeModel : Azure.WaitUntil * seq&lt;string&gt; * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.DocumentAnalysis.ComposeModelOperation&#xA;override this.ComposeModel : Azure.WaitUntil * seq&lt;string&gt; * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.DocumentAnalysis.ComposeModelOperation" Usage="documentModelAdministrationClient.ComposeModel (waitUntil, componentModelIds, modelId, description, tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.FormRecognizer.DocumentAnalysis.ComposeModelOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="componentModelIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="modelId" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="description" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service;
            <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation.
            </param>
        <param name="componentModelIds">List of model ids to use in the composition.</param>
        <param name="modelId">A unique ID for your model. If not specified, a model ID will be created for you.</param>
        <param name="description">An optional description to add to the model.</param>
        <param name="tags">A list of user-defined key-value tag attributes associated with the model.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Composes a model from a collection of existing models.
            A model built by composition allows multiple models to be called with a single model ID. When a document is
            submitted to be analyzed with its model ID, a classification step is first performed to route it to the correct
            custom model.
            </summary>
        <returns>
          <para>A <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.ComposeModelOperation" /> to wait on this long-running operation. Its Value upon successful
            completion will contain meta-data about the built model.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComposeModelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.DocumentAnalysis.ComposeModelOperation&gt; ComposeModelAsync (Azure.WaitUntil waitUntil, System.Collections.Generic.IEnumerable&lt;string&gt; componentModelIds, string modelId = default, string description = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.ComposeModelOperation&gt; ComposeModelAsync(valuetype Azure.WaitUntil waitUntil, class System.Collections.Generic.IEnumerable`1&lt;string&gt; componentModelIds, string modelId, string description, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.ComposeModelAsync(Azure.WaitUntil,System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ComposeModelAsync (waitUntil As WaitUntil, componentModelIds As IEnumerable(Of String), Optional modelId As String = Nothing, Optional description As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ComposeModelOperation)" />
      <MemberSignature Language="F#" Value="abstract member ComposeModelAsync : Azure.WaitUntil * seq&lt;string&gt; * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.DocumentAnalysis.ComposeModelOperation&gt;&#xA;override this.ComposeModelAsync : Azure.WaitUntil * seq&lt;string&gt; * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.DocumentAnalysis.ComposeModelOperation&gt;" Usage="documentModelAdministrationClient.ComposeModelAsync (waitUntil, componentModelIds, modelId, description, tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.DocumentAnalysis.ComposeModelOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="componentModelIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="modelId" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="description" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service;
            <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation.
            </param>
        <param name="componentModelIds">List of model ids to use in the composition.</param>
        <param name="modelId">A unique ID for your model. If not specified, a model ID will be created for you.</param>
        <param name="description">An optional description to add to the model.</param>
        <param name="tags">A list of user-defined key-value tag attributes associated with the model.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Composes a model from a collection of existing models.
            A model built by composition allows multiple models to be called with a single model ID. When a document is
            submitted to be analyzed with its model ID, a classification step is first performed to route it to the correct
            custom model.
            </summary>
        <returns>
          <para>A <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.ComposeModelOperation" /> to wait on this long-running operation. Its Value upon successful
            completion will contain meta-data about the built model.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyDocumentModelTo">
      <MemberSignature Language="C#" Value="public virtual Azure.AI.FormRecognizer.DocumentAnalysis.CopyDocumentModelToOperation CopyDocumentModelTo (Azure.WaitUntil waitUntil, string modelId, Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization target, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AI.FormRecognizer.DocumentAnalysis.CopyDocumentModelToOperation CopyDocumentModelTo(valuetype Azure.WaitUntil waitUntil, string modelId, class Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization target, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.CopyDocumentModelTo(Azure.WaitUntil,System.String,Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CopyDocumentModelTo (waitUntil As WaitUntil, modelId As String, target As DocumentModelCopyAuthorization, Optional cancellationToken As CancellationToken = Nothing) As CopyDocumentModelToOperation" />
      <MemberSignature Language="F#" Value="abstract member CopyDocumentModelTo : Azure.WaitUntil * string * Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.DocumentAnalysis.CopyDocumentModelToOperation&#xA;override this.CopyDocumentModelTo : Azure.WaitUntil * string * Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.DocumentAnalysis.CopyDocumentModelToOperation" Usage="documentModelAdministrationClient.CopyDocumentModelTo (waitUntil, modelId, target, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.FormRecognizer.DocumentAnalysis.CopyDocumentModelToOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="modelId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="target" Type="Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service;
            <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation.
            </param>
        <param name="modelId">Model identifier of the model to copy to the target Form Recognizer resource.</param>
        <param name="target">A <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization" /> with the copy authorization to the target Form Recognizer resource.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Copy a custom model stored in this resource (the source) to the user specified
            target Form Recognizer resource.
            </summary>
        <returns>A <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.CopyDocumentModelToOperation" /> to wait on this long-running operation.  Its <see cref="P:Azure.AI.FormRecognizer.DocumentAnalysis.CopyDocumentModelToOperation.Value" /> upon successful
            completion will contain meta-data about the model copied.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyDocumentModelToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.DocumentAnalysis.CopyDocumentModelToOperation&gt; CopyDocumentModelToAsync (Azure.WaitUntil waitUntil, string modelId, Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization target, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.CopyDocumentModelToOperation&gt; CopyDocumentModelToAsync(valuetype Azure.WaitUntil waitUntil, string modelId, class Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization target, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.CopyDocumentModelToAsync(Azure.WaitUntil,System.String,Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CopyDocumentModelToAsync (waitUntil As WaitUntil, modelId As String, target As DocumentModelCopyAuthorization, Optional cancellationToken As CancellationToken = Nothing) As Task(Of CopyDocumentModelToOperation)" />
      <MemberSignature Language="F#" Value="abstract member CopyDocumentModelToAsync : Azure.WaitUntil * string * Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.DocumentAnalysis.CopyDocumentModelToOperation&gt;&#xA;override this.CopyDocumentModelToAsync : Azure.WaitUntil * string * Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.DocumentAnalysis.CopyDocumentModelToOperation&gt;" Usage="documentModelAdministrationClient.CopyDocumentModelToAsync (waitUntil, modelId, target, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.DocumentAnalysis.CopyDocumentModelToOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="modelId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="target" Type="Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service;
            <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation.
            </param>
        <param name="modelId">Model identifier of the model to copy to the target Form Recognizer resource.</param>
        <param name="target">A <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization" /> with the copy authorization to the target Form Recognizer resource.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Copy a custom model stored in this resource (the source) to the user specified
            target Form Recognizer resource.
            </summary>
        <returns>A <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.CopyDocumentModelToOperation" /> to wait on this long-running operation.  Its <see cref="P:Azure.AI.FormRecognizer.DocumentAnalysis.CopyDocumentModelToOperation.Value" /> upon successful
            completion will contain meta-data about the model copied.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyModelTo">
      <MemberSignature Language="C#" Value="public virtual Azure.AI.FormRecognizer.DocumentAnalysis.CopyModelToOperation CopyModelTo (Azure.WaitUntil waitUntil, string modelId, Azure.AI.FormRecognizer.DocumentAnalysis.CopyAuthorization target, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AI.FormRecognizer.DocumentAnalysis.CopyModelToOperation CopyModelTo(valuetype Azure.WaitUntil waitUntil, string modelId, class Azure.AI.FormRecognizer.DocumentAnalysis.CopyAuthorization target, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.CopyModelTo(Azure.WaitUntil,System.String,Azure.AI.FormRecognizer.DocumentAnalysis.CopyAuthorization,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CopyModelTo (waitUntil As WaitUntil, modelId As String, target As CopyAuthorization, Optional cancellationToken As CancellationToken = Nothing) As CopyModelToOperation" />
      <MemberSignature Language="F#" Value="abstract member CopyModelTo : Azure.WaitUntil * string * Azure.AI.FormRecognizer.DocumentAnalysis.CopyAuthorization * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.DocumentAnalysis.CopyModelToOperation&#xA;override this.CopyModelTo : Azure.WaitUntil * string * Azure.AI.FormRecognizer.DocumentAnalysis.CopyAuthorization * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.DocumentAnalysis.CopyModelToOperation" Usage="documentModelAdministrationClient.CopyModelTo (waitUntil, modelId, target, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.FormRecognizer.DocumentAnalysis.CopyModelToOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="modelId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="target" Type="Azure.AI.FormRecognizer.DocumentAnalysis.CopyAuthorization" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service;
            <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation.
            </param>
        <param name="modelId">Model identifier of the model to copy to the target Form Recognizer resource.</param>
        <param name="target">A <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.CopyAuthorization" /> with the copy authorization to the target Form Recognizer resource.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Copy a custom model stored in this resource (the source) to the user specified
            target Form Recognizer resource.
            </summary>
        <returns>A <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.CopyModelToOperation" /> to wait on this long-running operation.  Its <see cref="P:Azure.AI.FormRecognizer.DocumentAnalysis.CopyModelToOperation.Value" /> upon successful
            completion will contain meta-data about the model copied.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyModelToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.DocumentAnalysis.CopyModelToOperation&gt; CopyModelToAsync (Azure.WaitUntil waitUntil, string modelId, Azure.AI.FormRecognizer.DocumentAnalysis.CopyAuthorization target, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.CopyModelToOperation&gt; CopyModelToAsync(valuetype Azure.WaitUntil waitUntil, string modelId, class Azure.AI.FormRecognizer.DocumentAnalysis.CopyAuthorization target, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.CopyModelToAsync(Azure.WaitUntil,System.String,Azure.AI.FormRecognizer.DocumentAnalysis.CopyAuthorization,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CopyModelToAsync (waitUntil As WaitUntil, modelId As String, target As CopyAuthorization, Optional cancellationToken As CancellationToken = Nothing) As Task(Of CopyModelToOperation)" />
      <MemberSignature Language="F#" Value="abstract member CopyModelToAsync : Azure.WaitUntil * string * Azure.AI.FormRecognizer.DocumentAnalysis.CopyAuthorization * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.DocumentAnalysis.CopyModelToOperation&gt;&#xA;override this.CopyModelToAsync : Azure.WaitUntil * string * Azure.AI.FormRecognizer.DocumentAnalysis.CopyAuthorization * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.DocumentAnalysis.CopyModelToOperation&gt;" Usage="documentModelAdministrationClient.CopyModelToAsync (waitUntil, modelId, target, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.DocumentAnalysis.CopyModelToOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="modelId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="target" Type="Azure.AI.FormRecognizer.DocumentAnalysis.CopyAuthorization" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service;
            <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation.
            </param>
        <param name="modelId">Model identifier of the model to copy to the target Form Recognizer resource.</param>
        <param name="target">A <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.CopyAuthorization" /> with the copy authorization to the target Form Recognizer resource.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Copy a custom model stored in this resource (the source) to the user specified
            target Form Recognizer resource.
            </summary>
        <returns>A <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.CopyModelToOperation" /> to wait on this long-running operation.  Its <see cref="P:Azure.AI.FormRecognizer.DocumentAnalysis.CopyModelToOperation.Value" /> upon successful
            completion will contain meta-data about the model copied.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDocumentModel">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteDocumentModel (string modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteDocumentModel(string modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.DeleteDocumentModel(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteDocumentModel (modelId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteDocumentModel : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteDocumentModel : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="documentModelAdministrationClient.DeleteDocumentModel (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="modelId">The ID of the model to delete.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes the model with the specified model ID.
            </summary>
        <returns>A <see cref="T:Azure.Response" /> representing the result of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDocumentModelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteDocumentModelAsync (string modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteDocumentModelAsync(string modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.DeleteDocumentModelAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteDocumentModelAsync (modelId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteDocumentModelAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteDocumentModelAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="documentModelAdministrationClient.DeleteDocumentModelAsync (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="modelId">The ID of the model to delete.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes the model with the specified model ID.
            </summary>
        <returns>A <see cref="T:Azure.Response" /> representing the result of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteModel">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteModel (string modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteModel(string modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.DeleteModel(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteModel (modelId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteModel : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteModel : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="documentModelAdministrationClient.DeleteModel (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="modelId">The ID of the model to delete.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes the model with the specified model ID.
            </summary>
        <returns>A <see cref="T:Azure.Response" /> representing the result of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteModelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteModelAsync (string modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteModelAsync(string modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.DeleteModelAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteModelAsync (modelId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteModelAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteModelAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="documentModelAdministrationClient.DeleteModelAsync (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="modelId">The ID of the model to delete.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes the model with the specified model ID.
            </summary>
        <returns>A <see cref="T:Azure.Response" /> representing the result of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCopyAuthorization">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization&gt; GetCopyAuthorization (string modelId = default, string description = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization&gt; GetCopyAuthorization(string modelId, string description, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.GetCopyAuthorization(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCopyAuthorization (Optional modelId As String = Nothing, Optional description As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DocumentModelCopyAuthorization)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetCopyAuthorization : string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization&gt;&#xA;override this.GetCopyAuthorization : string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization&gt;" Usage="documentModelAdministrationClient.GetCopyAuthorization (modelId, description, tags, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.CopyAuthorization&gt; GetCopyAuthorization (string modelId = default, string description = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.CopyAuthorization&gt; GetCopyAuthorization(string modelId, string description, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCopyAuthorization (Optional modelId As String = Nothing, Optional description As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CopyAuthorization)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetCopyAuthorization : string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.CopyAuthorization&gt;&#xA;override this.GetCopyAuthorization : string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.CopyAuthorization&gt;" Usage="documentModelAdministrationClient.GetCopyAuthorization (modelId, description, tags, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.CopyAuthorization&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId">A unique ID for your copied model. If not specified, a model ID will be created for you.</param>
        <param name="description">An optional description to add to the model.</param>
        <param name="tags">A list of user-defined key-value tag attributes associated with the model.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Generate authorization for copying a custom model into the target Form Recognizer resource.
            </summary>
        <returns>A <see cref="T:Azure.Response`1" /> representing the result of the operation. It can be cast to <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization" /> containing
            the authorization information necessary to copy a custom model into a target Form Recognizer resource.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCopyAuthorizationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization&gt;&gt; GetCopyAuthorizationAsync (string modelId = default, string description = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization&gt;&gt; GetCopyAuthorizationAsync(string modelId, string description, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.GetCopyAuthorizationAsync(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCopyAuthorizationAsync (Optional modelId As String = Nothing, Optional description As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DocumentModelCopyAuthorization))" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetCopyAuthorizationAsync : string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization&gt;&gt;&#xA;override this.GetCopyAuthorizationAsync : string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization&gt;&gt;" Usage="documentModelAdministrationClient.GetCopyAuthorizationAsync (modelId, description, tags, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.CopyAuthorization&gt;&gt; GetCopyAuthorizationAsync (string modelId = default, string description = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.CopyAuthorization&gt;&gt; GetCopyAuthorizationAsync(string modelId, string description, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCopyAuthorizationAsync (Optional modelId As String = Nothing, Optional description As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CopyAuthorization))" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetCopyAuthorizationAsync : string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.CopyAuthorization&gt;&gt;&#xA;override this.GetCopyAuthorizationAsync : string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.CopyAuthorization&gt;&gt;" Usage="documentModelAdministrationClient.GetCopyAuthorizationAsync (modelId, description, tags, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.CopyAuthorization&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId">A unique ID for your copied model. If not specified, a model ID will be created for you.</param>
        <param name="description">An optional description to add to the model.</param>
        <param name="tags">A list of user-defined key-value tag attributes associated with the model.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Generate authorization for copying a custom model into the target Form Recognizer resource.
            </summary>
        <returns>A <see cref="T:Azure.Response`1" /> representing the result of the operation. It can be cast to <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelCopyAuthorization" /> containing
            the authorization information necessary to copy a custom model into a target Form Recognizer resource.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocumentModel">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelDetails&gt; GetDocumentModel (string modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelDetails&gt; GetDocumentModel(string modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.GetDocumentModel(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDocumentModel (modelId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DocumentModelDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetDocumentModel : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelDetails&gt;&#xA;override this.GetDocumentModel : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelDetails&gt;" Usage="documentModelAdministrationClient.GetDocumentModel (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="modelId">The ID of the model to retrieve.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets information about a model, including the types of documents it can recognize and the fields it will extract for each document type.
            </summary>
        <returns>A <see cref="T:Azure.Response`1" /> representing the result of the operation. It can be cast to a <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelDetails" /> containing
            information about the requested model.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocumentModelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelDetails&gt;&gt; GetDocumentModelAsync (string modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelDetails&gt;&gt; GetDocumentModelAsync(string modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.GetDocumentModelAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDocumentModelAsync (modelId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DocumentModelDetails))" />
      <MemberSignature Language="F#" Value="abstract member GetDocumentModelAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelDetails&gt;&gt;&#xA;override this.GetDocumentModelAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelDetails&gt;&gt;" Usage="documentModelAdministrationClient.GetDocumentModelAsync (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelDetails&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="modelId">The ID of the model to retrieve.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets information about a model, including the types of documents it can recognize and the fields it will extract for each document type.
            </summary>
        <returns>A <see cref="T:Azure.Response`1" /> representing the result of the operation. It can be cast to a <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelDetails" /> containing
            information about the requested model.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocumentModels">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelSummary&gt; GetDocumentModels (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelSummary&gt; GetDocumentModels(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.GetDocumentModels(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDocumentModels (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DocumentModelSummary)" />
      <MemberSignature Language="F#" Value="abstract member GetDocumentModels : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelSummary&gt;&#xA;override this.GetDocumentModels : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelSummary&gt;" Usage="documentModelAdministrationClient.GetDocumentModels cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets a collection of items describing the models available on this Cognitive Services Account.
            </summary>
        <returns>A collection of <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelSummary" /> items.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocumentModelsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelSummary&gt; GetDocumentModelsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelSummary&gt; GetDocumentModelsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.GetDocumentModelsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDocumentModelsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DocumentModelSummary)" />
      <MemberSignature Language="F#" Value="abstract member GetDocumentModelsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelSummary&gt;&#xA;override this.GetDocumentModelsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelSummary&gt;" Usage="documentModelAdministrationClient.GetDocumentModelsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets a collection of items describing the models available on this Cognitive Services Account.
            </summary>
        <returns>A collection of <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelSummary" /> items.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModel">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelDetails&gt; GetModel (string modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelDetails&gt; GetModel(string modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.GetModel(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetModel (modelId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DocumentModelDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetModel : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelDetails&gt;&#xA;override this.GetModel : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelDetails&gt;" Usage="documentModelAdministrationClient.GetModel (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="modelId">The ID of the model to retrieve.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets information about a model, including the types of documents it can recognize and the fields it will extract for each document type.
            </summary>
        <returns>A <see cref="T:Azure.Response`1" /> representing the result of the operation. It can be cast to a <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelDetails" /> containing
            information about the requested model.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelDetails&gt;&gt; GetModelAsync (string modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelDetails&gt;&gt; GetModelAsync(string modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.GetModelAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetModelAsync (modelId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DocumentModelDetails))" />
      <MemberSignature Language="F#" Value="abstract member GetModelAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelDetails&gt;&gt;&#xA;override this.GetModelAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelDetails&gt;&gt;" Usage="documentModelAdministrationClient.GetModelAsync (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelDetails&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="modelId">The ID of the model to retrieve.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets information about a model, including the types of documents it can recognize and the fields it will extract for each document type.
            </summary>
        <returns>A <see cref="T:Azure.Response`1" /> representing the result of the operation. It can be cast to a <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelDetails" /> containing
            information about the requested model.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModels">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelSummary&gt; GetModels (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelSummary&gt; GetModels(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.GetModels(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetModels (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DocumentModelSummary)" />
      <MemberSignature Language="F#" Value="abstract member GetModels : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelSummary&gt;&#xA;override this.GetModels : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelSummary&gt;" Usage="documentModelAdministrationClient.GetModels cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets a collection of items describing the models available on this Cognitive Services Account.
            </summary>
        <returns>A collection of <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelSummary" /> items.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModelsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelSummary&gt; GetModelsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelSummary&gt; GetModelsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.GetModelsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetModelsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DocumentModelSummary)" />
      <MemberSignature Language="F#" Value="abstract member GetModelsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelSummary&gt;&#xA;override this.GetModelsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelSummary&gt;" Usage="documentModelAdministrationClient.GetModelsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets a collection of items describing the models available on this Cognitive Services Account.
            </summary>
        <returns>A collection of <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelSummary" /> items.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOperation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.OperationDetails&gt; GetOperation (string operationId, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.OperationDetails&gt; GetOperation(string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.GetOperation(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOperation (operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of OperationDetails)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetOperation : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.OperationDetails&gt;&#xA;override this.GetOperation : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.OperationDetails&gt;" Usage="documentModelAdministrationClient.GetOperation (operationId, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelOperationDetails&gt; GetOperation (string operationId, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelOperationDetails&gt; GetOperation(string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOperation (operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DocumentModelOperationDetails)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetOperation : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelOperationDetails&gt;&#xA;override this.GetOperation : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelOperationDetails&gt;" Usage="documentModelAdministrationClient.GetOperation (operationId, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.OperationDetails&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelOperationDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operationId">The operation ID.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Get a document model operation by its ID. Note that operation information only persists for 24 hours.
            </summary>
        <returns>A <see cref="T:Azure.Response`1" /> representing the result of the operation. It can be cast to a <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.OperationDetails" /> containing
            information about the requested model.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOperationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.OperationDetails&gt;&gt; GetOperationAsync (string operationId, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.OperationDetails&gt;&gt; GetOperationAsync(string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.GetOperationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOperationAsync (operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of OperationDetails))" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetOperationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.OperationDetails&gt;&gt;&#xA;override this.GetOperationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.OperationDetails&gt;&gt;" Usage="documentModelAdministrationClient.GetOperationAsync (operationId, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelOperationDetails&gt;&gt; GetOperationAsync (string operationId, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelOperationDetails&gt;&gt; GetOperationAsync(string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOperationAsync (operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DocumentModelOperationDetails))" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetOperationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelOperationDetails&gt;&gt;&#xA;override this.GetOperationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelOperationDetails&gt;&gt;" Usage="documentModelAdministrationClient.GetOperationAsync (operationId, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.OperationDetails&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelOperationDetails&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operationId">The operation ID.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Get a document model operation by its ID. Note that operation information only persists for 24 hours.
            </summary>
        <returns>A <see cref="T:Azure.Response`1" /> representing the result of the operation. It can be cast to a <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.OperationDetails" /> containing
            information about the requested model.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOperations">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.OperationSummary&gt; GetOperations (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.OperationSummary&gt; GetOperations(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.GetOperations(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOperations (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of OperationSummary)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetOperations : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.OperationSummary&gt;&#xA;override this.GetOperations : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.OperationSummary&gt;" Usage="documentModelAdministrationClient.GetOperations cancellationToken" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelOperationSummary&gt; GetOperations (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelOperationSummary&gt; GetOperations(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOperations (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DocumentModelOperationSummary)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetOperations : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelOperationSummary&gt;&#xA;override this.GetOperations : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelOperationSummary&gt;" Usage="documentModelAdministrationClient.GetOperations cancellationToken" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">Azure.Pageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.OperationSummary&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">Azure.Pageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelOperationSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Lists all document model operations associated with the Form Recognizer resource. Note that operation information only persists for 24 hours.
            </summary>
        <returns>A collection of <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.OperationSummary" /> items.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOperationsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.OperationSummary&gt; GetOperationsAsync (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.OperationSummary&gt; GetOperationsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.GetOperationsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOperationsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of OperationSummary)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetOperationsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.OperationSummary&gt;&#xA;override this.GetOperationsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.OperationSummary&gt;" Usage="documentModelAdministrationClient.GetOperationsAsync cancellationToken" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelOperationSummary&gt; GetOperationsAsync (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelOperationSummary&gt; GetOperationsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOperationsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DocumentModelOperationSummary)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetOperationsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelOperationSummary&gt;&#xA;override this.GetOperationsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelOperationSummary&gt;" Usage="documentModelAdministrationClient.GetOperationsAsync cancellationToken" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">Azure.AsyncPageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.OperationSummary&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">Azure.AsyncPageable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelOperationSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Lists all document model operations associated with the Form Recognizer resource. Note that operation information only persists for 24 hours.
            </summary>
        <returns>A collection of <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.OperationSummary" /> items.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceDetails">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.ResourceDetails&gt; GetResourceDetails (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.ResourceDetails&gt; GetResourceDetails(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.GetResourceDetails(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceDetails (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResourceDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetResourceDetails : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.ResourceDetails&gt;&#xA;override this.GetResourceDetails : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.ResourceDetails&gt;" Usage="documentModelAdministrationClient.GetResourceDetails cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.ResourceDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets the number of built models on this Form Recognizer resource and the resource limits.
            </summary>
        <returns>A <see cref="T:Azure.Response`1" /> representing the result of the operation. It can be cast to an <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.ResourceDetails" /> containing
            the resource information.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceDetailsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.ResourceDetails&gt;&gt; GetResourceDetailsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.FormRecognizer.DocumentAnalysis.ResourceDetails&gt;&gt; GetResourceDetailsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentModelAdministrationClient.GetResourceDetailsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceDetailsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResourceDetails))" />
      <MemberSignature Language="F#" Value="abstract member GetResourceDetailsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.ResourceDetails&gt;&gt;&#xA;override this.GetResourceDetailsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.ResourceDetails&gt;&gt;" Usage="documentModelAdministrationClient.GetResourceDetailsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.DocumentAnalysis.ResourceDetails&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets the number of built models on this Form Recognizer resource and the resource limits.
            </summary>
        <returns>A <see cref="T:Azure.Response`1" /> representing the result of the operation. It can be cast to an <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.ResourceDetails" /> containing
            the resource information.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
