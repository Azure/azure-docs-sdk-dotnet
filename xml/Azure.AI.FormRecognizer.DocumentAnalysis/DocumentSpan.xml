<Type Name="DocumentSpan" FullName="Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan">
  <TypeSignature Language="C#" Value="public readonly struct DocumentSpan : IEquatable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit DocumentSpan extends System.ValueType implements class System.IEquatable`1&lt;valuetype Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan" />
  <TypeSignature Language="VB.NET" Value="Public Structure DocumentSpan&#xA;Implements IEquatable(Of DocumentSpan)" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type DocumentSpan = struct" />
  <TypeSignature Language="C#" Value="public readonly struct DocumentSpan" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit DocumentSpan extends System.ValueType" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Structure DocumentSpan" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.IEquatable&lt;Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Contiguous region of the concatenated content property, specified as an offset and length. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan.Equals(Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As DocumentSpan) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan -&gt; bool" Usage="documentSpan.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="other">An object to compare with this <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan" />.</param>
        <summary>
            Indicates whether the current <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan" /> is equal to another object of the same type.
            They are considered equal if they have the same <see cref="P:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan.Index" /> and the same <see cref="P:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan.Length" />.
            </summary>
        <returns>
          <c>true</c> if the current <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan" /> is equal to the <paramref name="other" /> parameter; otherwise, <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="documentSpan.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="obj">An object to compare with this <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan" />.</param>
        <summary>
            Indicates whether the current <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan" /> is equal to another object. They are considered
            equal if they have the same type, the same <see cref="P:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan.Index" />, and the same <see cref="P:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan.Length" />.
            </summary>
        <returns>
          <c>true</c> if the current <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan" /> is equal to the <paramref name="obj" /> parameter; otherwise, <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="documentSpan.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the hash code for this instance.</summary>
        <returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Zero-based index of the content represented by the span.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Number of characters in the content represented by the span.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As Integer" />
      <MemberSignature Language="F#" Value="member this.Offset : int" Usage="Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Zero-based index of the content represented by the span. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="documentSpan.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a <c>string</c> representation of this <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan" />.
            </summary>
        <returns>A <c>string</c> representation of this <see cref="T:Azure.AI.FormRecognizer.DocumentAnalysis.DocumentSpan" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
