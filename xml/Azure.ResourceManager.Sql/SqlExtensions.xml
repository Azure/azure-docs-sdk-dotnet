<Type Name="SqlExtensions" FullName="Azure.ResourceManager.Sql.SqlExtensions">
  <TypeSignature Language="C#" Value="public static class SqlExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqlExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Sql.SqlExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SqlExtensions" />
  <TypeSignature Language="F#" Value="type SqlExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.Sql. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckSqlServerNameAvailability">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Sql.Models.SqlNameAvailabilityResponse&gt; CheckSqlServerNameAvailability (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.Sql.Models.SqlNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Sql.Models.SqlNameAvailabilityResponse&gt; CheckSqlServerNameAvailability(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.Sql.Models.SqlNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.CheckSqlServerNameAvailability(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Sql.Models.SqlNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckSqlServerNameAvailability (subscriptionResource As SubscriptionResource, content As SqlNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SqlNameAvailabilityResponse)" />
      <MemberSignature Language="F#" Value="static member CheckSqlServerNameAvailability : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.Sql.Models.SqlNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.Models.SqlNameAvailabilityResponse&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.CheckSqlServerNameAvailability (subscriptionResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.Models.SqlNameAvailabilityResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.Sql.Models.SqlNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="content"> The name availability request parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Determines whether a resource can be created with the specified name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/checkNameAvailability</description></item><item><term>Operation Id</term><description>Servers_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.SqlServerResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.CheckSqlServerNameAvailability(Azure.ResourceManager.Sql.Models.SqlNameAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSqlServerNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.Models.SqlNameAvailabilityResponse&gt;&gt; CheckSqlServerNameAvailabilityAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.Sql.Models.SqlNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.Models.SqlNameAvailabilityResponse&gt;&gt; CheckSqlServerNameAvailabilityAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.Sql.Models.SqlNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.CheckSqlServerNameAvailabilityAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Sql.Models.SqlNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckSqlServerNameAvailabilityAsync (subscriptionResource As SubscriptionResource, content As SqlNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SqlNameAvailabilityResponse))" />
      <MemberSignature Language="F#" Value="static member CheckSqlServerNameAvailabilityAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.Sql.Models.SqlNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.Models.SqlNameAvailabilityResponse&gt;&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.CheckSqlServerNameAvailabilityAsync (subscriptionResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.Models.SqlNameAvailabilityResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.Sql.Models.SqlNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="content"> The name availability request parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Determines whether a resource can be created with the specified name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/checkNameAvailability</description></item><item><term>Operation Id</term><description>Servers_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.SqlServerResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.CheckSqlServerNameAvailability(Azure.ResourceManager.Sql.Models.SqlNameAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupShortTermRetentionPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.BackupShortTermRetentionPolicyResource GetBackupShortTermRetentionPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.BackupShortTermRetentionPolicyResource GetBackupShortTermRetentionPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetBackupShortTermRetentionPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBackupShortTermRetentionPolicyResource (client As ArmClient, id As ResourceIdentifier) As BackupShortTermRetentionPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetBackupShortTermRetentionPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.BackupShortTermRetentionPolicyResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetBackupShortTermRetentionPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.BackupShortTermRetentionPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.BackupShortTermRetentionPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.BackupShortTermRetentionPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.ShortTermRetentionPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.BackupShortTermRetentionPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetBackupShortTermRetentionPolicyResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.BackupShortTermRetentionPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCapabilitiesByLocation">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Sql.Models.SqlLocationCapabilities&gt; GetCapabilitiesByLocation (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, Azure.ResourceManager.Sql.Models.SqlCapabilityGroup? include = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Sql.Models.SqlLocationCapabilities&gt; GetCapabilitiesByLocation(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlCapabilityGroup&gt; include, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetCapabilitiesByLocation(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.Nullable{Azure.ResourceManager.Sql.Models.SqlCapabilityGroup},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCapabilitiesByLocation (subscriptionResource As SubscriptionResource, locationName As AzureLocation, Optional include As Nullable(Of SqlCapabilityGroup) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SqlLocationCapabilities)" />
      <MemberSignature Language="F#" Value="static member GetCapabilitiesByLocation : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlCapabilityGroup&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.Models.SqlLocationCapabilities&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetCapabilitiesByLocation (subscriptionResource, locationName, include, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.Models.SqlLocationCapabilities&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="include" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlCapabilityGroup&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location name whose capabilities are retrieved. </param>
        <param name="include"> If specified, restricts the response to only include the selected item. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the subscription capabilities available for the specified location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/capabilities</description></item><item><term>Operation Id</term><description>Capabilities_ListByLocation</description></item><item><term>Default Api Version</term><description>2020-11-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetCapabilitiesByLocation(Azure.Core.AzureLocation,System.Nullable{Azure.ResourceManager.Sql.Models.SqlCapabilityGroup},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCapabilitiesByLocationAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.Models.SqlLocationCapabilities&gt;&gt; GetCapabilitiesByLocationAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, Azure.ResourceManager.Sql.Models.SqlCapabilityGroup? include = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.Models.SqlLocationCapabilities&gt;&gt; GetCapabilitiesByLocationAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlCapabilityGroup&gt; include, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetCapabilitiesByLocationAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.Nullable{Azure.ResourceManager.Sql.Models.SqlCapabilityGroup},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCapabilitiesByLocationAsync (subscriptionResource As SubscriptionResource, locationName As AzureLocation, Optional include As Nullable(Of SqlCapabilityGroup) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SqlLocationCapabilities))" />
      <MemberSignature Language="F#" Value="static member GetCapabilitiesByLocationAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlCapabilityGroup&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.Models.SqlLocationCapabilities&gt;&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetCapabilitiesByLocationAsync (subscriptionResource, locationName, include, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.Models.SqlLocationCapabilities&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="include" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlCapabilityGroup&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location name whose capabilities are retrieved. </param>
        <param name="include"> If specified, restricts the response to only include the selected item. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the subscription capabilities available for the specified location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/capabilities</description></item><item><term>Operation Id</term><description>Capabilities_ListByLocation</description></item><item><term>Default Api Version</term><description>2020-11-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetCapabilitiesByLocation(Azure.Core.AzureLocation,System.Nullable{Azure.ResourceManager.Sql.Models.SqlCapabilityGroup},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseAdvancedThreatProtectionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.DatabaseAdvancedThreatProtectionResource GetDatabaseAdvancedThreatProtectionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.DatabaseAdvancedThreatProtectionResource GetDatabaseAdvancedThreatProtectionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetDatabaseAdvancedThreatProtectionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDatabaseAdvancedThreatProtectionResource (client As ArmClient, id As ResourceIdentifier) As DatabaseAdvancedThreatProtectionResource" />
      <MemberSignature Language="F#" Value="static member GetDatabaseAdvancedThreatProtectionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.DatabaseAdvancedThreatProtectionResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetDatabaseAdvancedThreatProtectionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.DatabaseAdvancedThreatProtectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.DatabaseAdvancedThreatProtectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.DatabaseAdvancedThreatProtectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.AdvancedThreatProtectionName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.DatabaseAdvancedThreatProtectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetDatabaseAdvancedThreatProtectionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.DatabaseAdvancedThreatProtectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataMaskingPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.DataMaskingPolicyResource GetDataMaskingPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.DataMaskingPolicyResource GetDataMaskingPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetDataMaskingPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataMaskingPolicyResource (client As ArmClient, id As ResourceIdentifier) As DataMaskingPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetDataMaskingPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.DataMaskingPolicyResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetDataMaskingPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.DataMaskingPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.DataMaskingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.DataMaskingPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.DataMaskingPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetDataMaskingPolicyResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.DataMaskingPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataWarehouseUserActivityResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.DataWarehouseUserActivityResource GetDataWarehouseUserActivityResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.DataWarehouseUserActivityResource GetDataWarehouseUserActivityResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetDataWarehouseUserActivityResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataWarehouseUserActivityResource (client As ArmClient, id As ResourceIdentifier) As DataWarehouseUserActivityResource" />
      <MemberSignature Language="F#" Value="static member GetDataWarehouseUserActivityResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.DataWarehouseUserActivityResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetDataWarehouseUserActivityResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.DataWarehouseUserActivityResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.DataWarehouseUserActivityResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.DataWarehouseUserActivityResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.DataWarehouseUserActivityName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.DataWarehouseUserActivityResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetDataWarehouseUserActivityResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.DataWarehouseUserActivityResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedServer">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Sql.DeletedServerResource&gt; GetDeletedServer (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, string deletedServerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Sql.DeletedServerResource&gt; GetDeletedServer(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, string deletedServerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetDeletedServer(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDeletedServer (subscriptionResource As SubscriptionResource, locationName As AzureLocation, deletedServerName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeletedServerResource)" />
      <MemberSignature Language="F#" Value="static member GetDeletedServer : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.DeletedServerResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetDeletedServer (subscriptionResource, locationName, deletedServerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.DeletedServerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="deletedServerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The name of the region where the resource is located. </param>
        <param name="deletedServerName"> The name of the deleted server. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a deleted server.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/deletedServers/{deletedServerName}</description></item><item><term>Operation Id</term><description>DeletedServers_Get</description></item><item><term>Default Api Version</term><description>2020-11-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.DeletedServerResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetDeletedServer(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="deletedServerName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="deletedServerName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedServerAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.DeletedServerResource&gt;&gt; GetDeletedServerAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, string deletedServerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.DeletedServerResource&gt;&gt; GetDeletedServerAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, string deletedServerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetDeletedServerAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDeletedServerAsync (subscriptionResource As SubscriptionResource, locationName As AzureLocation, deletedServerName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeletedServerResource))" />
      <MemberSignature Language="F#" Value="static member GetDeletedServerAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.DeletedServerResource&gt;&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetDeletedServerAsync (subscriptionResource, locationName, deletedServerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.DeletedServerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="deletedServerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The name of the region where the resource is located. </param>
        <param name="deletedServerName"> The name of the deleted server. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a deleted server.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/deletedServers/{deletedServerName}</description></item><item><term>Operation Id</term><description>DeletedServers_Get</description></item><item><term>Default Api Version</term><description>2020-11-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.DeletedServerResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetDeletedServerAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="deletedServerName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="deletedServerName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedServerResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.DeletedServerResource GetDeletedServerResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.DeletedServerResource GetDeletedServerResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetDeletedServerResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDeletedServerResource (client As ArmClient, id As ResourceIdentifier) As DeletedServerResource" />
      <MemberSignature Language="F#" Value="static member GetDeletedServerResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.DeletedServerResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetDeletedServerResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.DeletedServerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.DeletedServerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.DeletedServerResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.DeletedServerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetDeletedServerResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.DeletedServerResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedServers">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.DeletedServerCollection GetDeletedServers (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.DeletedServerCollection GetDeletedServers(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetDeletedServers(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDeletedServers (subscriptionResource As SubscriptionResource, locationName As AzureLocation) As DeletedServerCollection" />
      <MemberSignature Language="F#" Value="static member GetDeletedServers : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation -&gt; Azure.ResourceManager.Sql.DeletedServerCollection" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetDeletedServers (subscriptionResource, locationName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.DeletedServerCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The name of the region where the resource is located. </param>
        <summary>
            Gets a collection of DeletedServerResources in the SubscriptionResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetDeletedServers(Azure.Core.AzureLocation)" /> instead.</description></item></summary>
        <returns> An object representing collection of DeletedServerResources and their operations over a DeletedServerResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedServers">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.DeletedServerResource&gt; GetDeletedServers (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.DeletedServerResource&gt; GetDeletedServers(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetDeletedServers(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDeletedServers (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DeletedServerResource)" />
      <MemberSignature Language="F#" Value="static member GetDeletedServers : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.DeletedServerResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetDeletedServers (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.DeletedServerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of all deleted servers in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/deletedServers</description></item><item><term>Operation Id</term><description>DeletedServers_List</description></item><item><term>Default Api Version</term><description>2020-11-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.DeletedServerResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetDeletedServers(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.DeletedServerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedServersAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.DeletedServerResource&gt; GetDeletedServersAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.DeletedServerResource&gt; GetDeletedServersAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetDeletedServersAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDeletedServersAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DeletedServerResource)" />
      <MemberSignature Language="F#" Value="static member GetDeletedServersAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.DeletedServerResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetDeletedServersAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.DeletedServerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of all deleted servers in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/deletedServers</description></item><item><term>Operation Id</term><description>DeletedServers_List</description></item><item><term>Default Api Version</term><description>2020-11-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.DeletedServerResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetDeletedServers(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.DeletedServerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDistributedAvailabilityGroupResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource GetDistributedAvailabilityGroupResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource GetDistributedAvailabilityGroupResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetDistributedAvailabilityGroupResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDistributedAvailabilityGroupResource (client As ArmClient, id As ResourceIdentifier) As DistributedAvailabilityGroupResource" />
      <MemberSignature Language="F#" Value="static member GetDistributedAvailabilityGroupResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetDistributedAvailabilityGroupResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetDistributedAvailabilityGroupResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetElasticPoolResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ElasticPoolResource GetElasticPoolResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ElasticPoolResource GetElasticPoolResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetElasticPoolResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetElasticPoolResource (client As ArmClient, id As ResourceIdentifier) As ElasticPoolResource" />
      <MemberSignature Language="F#" Value="static member GetElasticPoolResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ElasticPoolResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetElasticPoolResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ElasticPoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Sql.ElasticPoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ElasticPoolResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Sql.ElasticPoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetElasticPoolResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ElasticPoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptionProtectorResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.EncryptionProtectorResource GetEncryptionProtectorResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.EncryptionProtectorResource GetEncryptionProtectorResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetEncryptionProtectorResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEncryptionProtectorResource (client As ArmClient, id As ResourceIdentifier) As EncryptionProtectorResource" />
      <MemberSignature Language="F#" Value="static member GetEncryptionProtectorResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.EncryptionProtectorResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetEncryptionProtectorResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.EncryptionProtectorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Sql.EncryptionProtectorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.EncryptionProtectorResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.EncryptionProtectorName)" /> to create an <see cref="T:Azure.ResourceManager.Sql.EncryptionProtectorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetEncryptionProtectorResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.EncryptionProtectorResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEndpointCertificateResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.EndpointCertificateResource GetEndpointCertificateResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.EndpointCertificateResource GetEndpointCertificateResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetEndpointCertificateResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEndpointCertificateResource (client As ArmClient, id As ResourceIdentifier) As EndpointCertificateResource" />
      <MemberSignature Language="F#" Value="static member GetEndpointCertificateResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.EndpointCertificateResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetEndpointCertificateResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.EndpointCertificateResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Sql.EndpointCertificateResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.EndpointCertificateResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Sql.EndpointCertificateResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetEndpointCertificateResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.EndpointCertificateResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExtendedDatabaseBlobAuditingPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ExtendedDatabaseBlobAuditingPolicyResource GetExtendedDatabaseBlobAuditingPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ExtendedDatabaseBlobAuditingPolicyResource GetExtendedDatabaseBlobAuditingPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetExtendedDatabaseBlobAuditingPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetExtendedDatabaseBlobAuditingPolicyResource (client As ArmClient, id As ResourceIdentifier) As ExtendedDatabaseBlobAuditingPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetExtendedDatabaseBlobAuditingPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ExtendedDatabaseBlobAuditingPolicyResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetExtendedDatabaseBlobAuditingPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ExtendedDatabaseBlobAuditingPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Sql.ExtendedDatabaseBlobAuditingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ExtendedDatabaseBlobAuditingPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName)" /> to create an <see cref="T:Azure.ResourceManager.Sql.ExtendedDatabaseBlobAuditingPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetExtendedDatabaseBlobAuditingPolicyResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ExtendedDatabaseBlobAuditingPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExtendedServerBlobAuditingPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource GetExtendedServerBlobAuditingPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource GetExtendedServerBlobAuditingPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetExtendedServerBlobAuditingPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetExtendedServerBlobAuditingPolicyResource (client As ArmClient, id As ResourceIdentifier) As ExtendedServerBlobAuditingPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetExtendedServerBlobAuditingPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetExtendedServerBlobAuditingPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName)" /> to create an <see cref="T:Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetExtendedServerBlobAuditingPolicyResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFailoverGroupResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.FailoverGroupResource GetFailoverGroupResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.FailoverGroupResource GetFailoverGroupResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetFailoverGroupResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFailoverGroupResource (client As ArmClient, id As ResourceIdentifier) As FailoverGroupResource" />
      <MemberSignature Language="F#" Value="static member GetFailoverGroupResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.FailoverGroupResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetFailoverGroupResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.FailoverGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.FailoverGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.FailoverGroupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.FailoverGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetFailoverGroupResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.FailoverGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGeoBackupPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.GeoBackupPolicyResource GetGeoBackupPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.GeoBackupPolicyResource GetGeoBackupPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetGeoBackupPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGeoBackupPolicyResource (client As ArmClient, id As ResourceIdentifier) As GeoBackupPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetGeoBackupPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.GeoBackupPolicyResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetGeoBackupPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.GeoBackupPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.GeoBackupPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.GeoBackupPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.GeoBackupPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.GeoBackupPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetGeoBackupPolicyResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.GeoBackupPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstanceFailoverGroup">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Sql.InstanceFailoverGroupResource&gt; GetInstanceFailoverGroup (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, string failoverGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Sql.InstanceFailoverGroupResource&gt; GetInstanceFailoverGroup(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, string failoverGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetInstanceFailoverGroup(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetInstanceFailoverGroup (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, failoverGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of InstanceFailoverGroupResource)" />
      <MemberSignature Language="F#" Value="static member GetInstanceFailoverGroup : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.InstanceFailoverGroupResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetInstanceFailoverGroup (resourceGroupResource, locationName, failoverGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.InstanceFailoverGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="failoverGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The name of the region where the resource is located. </param>
        <param name="failoverGroupName"> The name of the failover group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a failover group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/instanceFailoverGroups/{failoverGroupName}</description></item><item><term>Operation Id</term><description>InstanceFailoverGroups_Get</description></item><item><term>Default Api Version</term><description>2022-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.InstanceFailoverGroupResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetInstanceFailoverGroup(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="failoverGroupName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="failoverGroupName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstanceFailoverGroupAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.InstanceFailoverGroupResource&gt;&gt; GetInstanceFailoverGroupAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, string failoverGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.InstanceFailoverGroupResource&gt;&gt; GetInstanceFailoverGroupAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, string failoverGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetInstanceFailoverGroupAsync(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetInstanceFailoverGroupAsync (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, failoverGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of InstanceFailoverGroupResource))" />
      <MemberSignature Language="F#" Value="static member GetInstanceFailoverGroupAsync : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.InstanceFailoverGroupResource&gt;&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetInstanceFailoverGroupAsync (resourceGroupResource, locationName, failoverGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.InstanceFailoverGroupResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="failoverGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The name of the region where the resource is located. </param>
        <param name="failoverGroupName"> The name of the failover group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a failover group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/instanceFailoverGroups/{failoverGroupName}</description></item><item><term>Operation Id</term><description>InstanceFailoverGroups_Get</description></item><item><term>Default Api Version</term><description>2022-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.InstanceFailoverGroupResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetInstanceFailoverGroupAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="failoverGroupName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="failoverGroupName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstanceFailoverGroupResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.InstanceFailoverGroupResource GetInstanceFailoverGroupResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.InstanceFailoverGroupResource GetInstanceFailoverGroupResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetInstanceFailoverGroupResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetInstanceFailoverGroupResource (client As ArmClient, id As ResourceIdentifier) As InstanceFailoverGroupResource" />
      <MemberSignature Language="F#" Value="static member GetInstanceFailoverGroupResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.InstanceFailoverGroupResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetInstanceFailoverGroupResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.InstanceFailoverGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Sql.InstanceFailoverGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.InstanceFailoverGroupResource.CreateResourceIdentifier(System.String,System.String,Azure.Core.AzureLocation,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Sql.InstanceFailoverGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetInstanceFailoverGroupResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.InstanceFailoverGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstanceFailoverGroups">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.InstanceFailoverGroupCollection GetInstanceFailoverGroups (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.InstanceFailoverGroupCollection GetInstanceFailoverGroups(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetInstanceFailoverGroups(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetInstanceFailoverGroups (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation) As InstanceFailoverGroupCollection" />
      <MemberSignature Language="F#" Value="static member GetInstanceFailoverGroups : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation -&gt; Azure.ResourceManager.Sql.InstanceFailoverGroupCollection" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetInstanceFailoverGroups (resourceGroupResource, locationName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.InstanceFailoverGroupCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The name of the region where the resource is located. </param>
        <summary>
            Gets a collection of InstanceFailoverGroupResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetInstanceFailoverGroups(Azure.Core.AzureLocation)" /> instead.</description></item></summary>
        <returns> An object representing collection of InstanceFailoverGroupResources and their operations over a InstanceFailoverGroupResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstancePool">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Sql.InstancePoolResource&gt; GetInstancePool (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string instancePoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Sql.InstancePoolResource&gt; GetInstancePool(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string instancePoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetInstancePool(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetInstancePool (resourceGroupResource As ResourceGroupResource, instancePoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of InstancePoolResource)" />
      <MemberSignature Language="F#" Value="static member GetInstancePool : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.InstancePoolResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetInstancePool (resourceGroupResource, instancePoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.InstancePoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="instancePoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="instancePoolName"> The name of the instance pool to be retrieved. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an instance pool.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/instancePools/{instancePoolName}</description></item><item><term>Operation Id</term><description>InstancePools_Get</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.InstancePoolResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetInstancePool(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="instancePoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="instancePoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstancePoolAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.InstancePoolResource&gt;&gt; GetInstancePoolAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string instancePoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.InstancePoolResource&gt;&gt; GetInstancePoolAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string instancePoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetInstancePoolAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetInstancePoolAsync (resourceGroupResource As ResourceGroupResource, instancePoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of InstancePoolResource))" />
      <MemberSignature Language="F#" Value="static member GetInstancePoolAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.InstancePoolResource&gt;&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetInstancePoolAsync (resourceGroupResource, instancePoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.InstancePoolResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="instancePoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="instancePoolName"> The name of the instance pool to be retrieved. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an instance pool.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/instancePools/{instancePoolName}</description></item><item><term>Operation Id</term><description>InstancePools_Get</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.InstancePoolResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetInstancePoolAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="instancePoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="instancePoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstancePoolResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.InstancePoolResource GetInstancePoolResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.InstancePoolResource GetInstancePoolResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetInstancePoolResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetInstancePoolResource (client As ArmClient, id As ResourceIdentifier) As InstancePoolResource" />
      <MemberSignature Language="F#" Value="static member GetInstancePoolResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.InstancePoolResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetInstancePoolResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.InstancePoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Sql.InstancePoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.InstancePoolResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Sql.InstancePoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetInstancePoolResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.InstancePoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstancePools">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.InstancePoolCollection GetInstancePools (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.InstancePoolCollection GetInstancePools(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetInstancePools(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetInstancePools (resourceGroupResource As ResourceGroupResource) As InstancePoolCollection" />
      <MemberSignature Language="F#" Value="static member GetInstancePools : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Sql.InstancePoolCollection" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetInstancePools resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.InstancePoolCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of InstancePoolResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetInstancePools" /> instead.</description></item></summary>
        <returns> An object representing collection of InstancePoolResources and their operations over a InstancePoolResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstancePools">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.InstancePoolResource&gt; GetInstancePools (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.InstancePoolResource&gt; GetInstancePools(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetInstancePools(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetInstancePools (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of InstancePoolResource)" />
      <MemberSignature Language="F#" Value="static member GetInstancePools : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.InstancePoolResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetInstancePools (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.InstancePoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of all instance pools in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/instancePools</description></item><item><term>Operation Id</term><description>InstancePools_List</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.InstancePoolResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetInstancePools(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.InstancePoolResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstancePoolsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.InstancePoolResource&gt; GetInstancePoolsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.InstancePoolResource&gt; GetInstancePoolsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetInstancePoolsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetInstancePoolsAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of InstancePoolResource)" />
      <MemberSignature Language="F#" Value="static member GetInstancePoolsAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.InstancePoolResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetInstancePoolsAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.InstancePoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of all instance pools in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/instancePools</description></item><item><term>Operation Id</term><description>InstancePools_List</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.InstancePoolResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetInstancePools(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.InstancePoolResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIPv6FirewallRuleResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.IPv6FirewallRuleResource GetIPv6FirewallRuleResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.IPv6FirewallRuleResource GetIPv6FirewallRuleResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetIPv6FirewallRuleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIPv6FirewallRuleResource (client As ArmClient, id As ResourceIdentifier) As IPv6FirewallRuleResource" />
      <MemberSignature Language="F#" Value="static member GetIPv6FirewallRuleResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.IPv6FirewallRuleResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetIPv6FirewallRuleResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.IPv6FirewallRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Sql.IPv6FirewallRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.IPv6FirewallRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Sql.IPv6FirewallRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetIPv6FirewallRuleResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.IPv6FirewallRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLedgerDigestUploadResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.LedgerDigestUploadResource GetLedgerDigestUploadResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.LedgerDigestUploadResource GetLedgerDigestUploadResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLedgerDigestUploadResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLedgerDigestUploadResource (client As ArmClient, id As ResourceIdentifier) As LedgerDigestUploadResource" />
      <MemberSignature Language="F#" Value="static member GetLedgerDigestUploadResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.LedgerDigestUploadResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLedgerDigestUploadResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.LedgerDigestUploadResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.LedgerDigestUploadResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.LedgerDigestUploadResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.LedgerDigestUploadsName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.LedgerDigestUploadResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetLedgerDigestUploadResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.LedgerDigestUploadResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLogicalDatabaseTransparentDataEncryptionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.LogicalDatabaseTransparentDataEncryptionResource GetLogicalDatabaseTransparentDataEncryptionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.LogicalDatabaseTransparentDataEncryptionResource GetLogicalDatabaseTransparentDataEncryptionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLogicalDatabaseTransparentDataEncryptionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLogicalDatabaseTransparentDataEncryptionResource (client As ArmClient, id As ResourceIdentifier) As LogicalDatabaseTransparentDataEncryptionResource" />
      <MemberSignature Language="F#" Value="static member GetLogicalDatabaseTransparentDataEncryptionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.LogicalDatabaseTransparentDataEncryptionResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLogicalDatabaseTransparentDataEncryptionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.LogicalDatabaseTransparentDataEncryptionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.LogicalDatabaseTransparentDataEncryptionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.LogicalDatabaseTransparentDataEncryptionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.TransparentDataEncryptionName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.LogicalDatabaseTransparentDataEncryptionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetLogicalDatabaseTransparentDataEncryptionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.LogicalDatabaseTransparentDataEncryptionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionBackupsByLocation">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt; GetLongTermRetentionBackupsByLocation (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt; GetLongTermRetentionBackupsByLocation(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsByLocation(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionBackupsByLocation (subscriptionResource As SubscriptionResource, locationName As AzureLocation, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SubscriptionLongTermRetentionBackupResource)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionBackupsByLocation : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsByLocation (subscriptionResource, locationName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for a given location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionBackups_ListByLocation</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionBackupsByLocationAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt; GetLongTermRetentionBackupsByLocationAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt; GetLongTermRetentionBackupsByLocationAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsByLocationAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionBackupsByLocationAsync (subscriptionResource As SubscriptionResource, locationName As AzureLocation, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SubscriptionLongTermRetentionBackupResource)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionBackupsByLocationAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsByLocationAsync (subscriptionResource, locationName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for a given location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionBackups_ListByLocation</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionBackupsByResourceGroupLocation">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt; GetLongTermRetentionBackupsByResourceGroupLocation (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt; GetLongTermRetentionBackupsByResourceGroupLocation(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsByResourceGroupLocation(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionBackupsByResourceGroupLocation (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SubscriptionLongTermRetentionBackupResource)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionBackupsByResourceGroupLocation : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsByResourceGroupLocation (resourceGroupResource, locationName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for a given location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionBackups_ListByResourceGroupLocation</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionBackupsByResourceGroupLocationAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt; GetLongTermRetentionBackupsByResourceGroupLocationAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt; GetLongTermRetentionBackupsByResourceGroupLocationAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsByResourceGroupLocationAsync(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionBackupsByResourceGroupLocationAsync (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SubscriptionLongTermRetentionBackupResource)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionBackupsByResourceGroupLocationAsync : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsByResourceGroupLocationAsync (resourceGroupResource, locationName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for a given location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionBackups_ListByResourceGroupLocation</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionBackupsByResourceGroupServer">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt; GetLongTermRetentionBackupsByResourceGroupServer (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, string longTermRetentionServerName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt; GetLongTermRetentionBackupsByResourceGroupServer(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, string longTermRetentionServerName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsByResourceGroupServer(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionBackupsByResourceGroupServer (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, longTermRetentionServerName As String, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SubscriptionLongTermRetentionBackupResource)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionBackupsByResourceGroupServer : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsByResourceGroupServer (resourceGroupResource, locationName, longTermRetentionServerName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="longTermRetentionServerName" Type="System.String" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="longTermRetentionServerName"> The name of the server. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for a given server.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionBackups_ListByResourceGroupServer</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="longTermRetentionServerName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="longTermRetentionServerName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionBackupsByResourceGroupServerAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt; GetLongTermRetentionBackupsByResourceGroupServerAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, string longTermRetentionServerName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt; GetLongTermRetentionBackupsByResourceGroupServerAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, string longTermRetentionServerName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsByResourceGroupServerAsync(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionBackupsByResourceGroupServerAsync (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, longTermRetentionServerName As String, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SubscriptionLongTermRetentionBackupResource)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionBackupsByResourceGroupServerAsync : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsByResourceGroupServerAsync (resourceGroupResource, locationName, longTermRetentionServerName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="longTermRetentionServerName" Type="System.String" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="longTermRetentionServerName"> The name of the server. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for a given server.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionBackups_ListByResourceGroupServer</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="longTermRetentionServerName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="longTermRetentionServerName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionBackupsByServer">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt; GetLongTermRetentionBackupsByServer (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, string longTermRetentionServerName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt; GetLongTermRetentionBackupsByServer(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, string longTermRetentionServerName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsByServer(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionBackupsByServer (subscriptionResource As SubscriptionResource, locationName As AzureLocation, longTermRetentionServerName As String, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SubscriptionLongTermRetentionBackupResource)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionBackupsByServer : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsByServer (subscriptionResource, locationName, longTermRetentionServerName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="longTermRetentionServerName" Type="System.String" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="longTermRetentionServerName"> The name of the server. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for a given server.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionBackups_ListByServer</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="longTermRetentionServerName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="longTermRetentionServerName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionBackupsByServerAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt; GetLongTermRetentionBackupsByServerAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, string longTermRetentionServerName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt; GetLongTermRetentionBackupsByServerAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, string longTermRetentionServerName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsByServerAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionBackupsByServerAsync (subscriptionResource As SubscriptionResource, locationName As AzureLocation, longTermRetentionServerName As String, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SubscriptionLongTermRetentionBackupResource)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionBackupsByServerAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsByServerAsync (subscriptionResource, locationName, longTermRetentionServerName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="longTermRetentionServerName" Type="System.String" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="longTermRetentionServerName"> The name of the server. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for a given server.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionBackups_ListByServer</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="longTermRetentionServerName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="longTermRetentionServerName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionBackupsWithLocation">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt; GetLongTermRetentionBackupsWithLocation (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt; GetLongTermRetentionBackupsWithLocation(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsWithLocation(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionBackupsWithLocation (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of LongTermRetentionBackupData)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionBackupsWithLocation : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsWithLocation (resourceGroupResource, locationName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for a given location based on resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionBackups_ListByResourceGroupLocation</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetLongTermRetentionBackupsWithLocation(Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.LongTermRetentionBackupData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionBackupsWithLocation">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt; GetLongTermRetentionBackupsWithLocation (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt; GetLongTermRetentionBackupsWithLocation(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsWithLocation(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionBackupsWithLocation (subscriptionResource As SubscriptionResource, locationName As AzureLocation, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of LongTermRetentionBackupData)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionBackupsWithLocation : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsWithLocation (subscriptionResource, locationName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for a given location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionBackups_ListByLocation</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetLongTermRetentionBackupsWithLocation(Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.LongTermRetentionBackupData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionBackupsWithLocationAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt; GetLongTermRetentionBackupsWithLocationAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt; GetLongTermRetentionBackupsWithLocationAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsWithLocationAsync(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionBackupsWithLocationAsync (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of LongTermRetentionBackupData)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionBackupsWithLocationAsync : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsWithLocationAsync (resourceGroupResource, locationName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for a given location based on resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionBackups_ListByResourceGroupLocation</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetLongTermRetentionBackupsWithLocation(Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.LongTermRetentionBackupData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionBackupsWithLocationAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt; GetLongTermRetentionBackupsWithLocationAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt; GetLongTermRetentionBackupsWithLocationAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsWithLocationAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionBackupsWithLocationAsync (subscriptionResource As SubscriptionResource, locationName As AzureLocation, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of LongTermRetentionBackupData)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionBackupsWithLocationAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsWithLocationAsync (subscriptionResource, locationName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for a given location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionBackups_ListByLocation</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetLongTermRetentionBackupsWithLocation(Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.LongTermRetentionBackupData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionBackupsWithServer">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt; GetLongTermRetentionBackupsWithServer (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, string longTermRetentionServerName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt; GetLongTermRetentionBackupsWithServer(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, string longTermRetentionServerName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsWithServer(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionBackupsWithServer (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, longTermRetentionServerName As String, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of LongTermRetentionBackupData)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionBackupsWithServer : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsWithServer (resourceGroupResource, locationName, longTermRetentionServerName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="longTermRetentionServerName" Type="System.String" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="longTermRetentionServerName"> The name of the server. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for a given server based on resource groups.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionBackups_ListByResourceGroupServer</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetLongTermRetentionBackupsWithServer(Azure.Core.AzureLocation,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.LongTermRetentionBackupData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="longTermRetentionServerName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="longTermRetentionServerName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionBackupsWithServer">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt; GetLongTermRetentionBackupsWithServer (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, string longTermRetentionServerName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt; GetLongTermRetentionBackupsWithServer(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, string longTermRetentionServerName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsWithServer(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionBackupsWithServer (subscriptionResource As SubscriptionResource, locationName As AzureLocation, longTermRetentionServerName As String, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of LongTermRetentionBackupData)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionBackupsWithServer : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsWithServer (subscriptionResource, locationName, longTermRetentionServerName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="longTermRetentionServerName" Type="System.String" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="longTermRetentionServerName"> The name of the server. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for a given server.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionBackups_ListByServer</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetLongTermRetentionBackupsWithServer(Azure.Core.AzureLocation,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.LongTermRetentionBackupData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="longTermRetentionServerName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="longTermRetentionServerName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionBackupsWithServerAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt; GetLongTermRetentionBackupsWithServerAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, string longTermRetentionServerName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt; GetLongTermRetentionBackupsWithServerAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, string longTermRetentionServerName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsWithServerAsync(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionBackupsWithServerAsync (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, longTermRetentionServerName As String, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of LongTermRetentionBackupData)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionBackupsWithServerAsync : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsWithServerAsync (resourceGroupResource, locationName, longTermRetentionServerName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="longTermRetentionServerName" Type="System.String" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="longTermRetentionServerName"> The name of the server. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for a given server based on resource groups.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionBackups_ListByResourceGroupServer</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetLongTermRetentionBackupsWithServer(Azure.Core.AzureLocation,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.LongTermRetentionBackupData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="longTermRetentionServerName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="longTermRetentionServerName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionBackupsWithServerAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt; GetLongTermRetentionBackupsWithServerAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, string longTermRetentionServerName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt; GetLongTermRetentionBackupsWithServerAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, string longTermRetentionServerName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsWithServerAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionBackupsWithServerAsync (subscriptionResource As SubscriptionResource, locationName As AzureLocation, longTermRetentionServerName As String, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of LongTermRetentionBackupData)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionBackupsWithServerAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionBackupsWithServerAsync (subscriptionResource, locationName, longTermRetentionServerName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.LongTermRetentionBackupData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="longTermRetentionServerName" Type="System.String" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="longTermRetentionServerName"> The name of the server. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for a given server.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionBackups_ListByServer</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetLongTermRetentionBackupsWithServer(Azure.Core.AzureLocation,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.LongTermRetentionBackupData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="longTermRetentionServerName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="longTermRetentionServerName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionManagedInstanceBackupsByInstance">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt; GetLongTermRetentionManagedInstanceBackupsByInstance (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, string managedInstanceName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt; GetLongTermRetentionManagedInstanceBackupsByInstance(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, string managedInstanceName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsByInstance(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionManagedInstanceBackupsByInstance (subscriptionResource As SubscriptionResource, locationName As AzureLocation, managedInstanceName As String, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SubscriptionLongTermRetentionManagedInstanceBackupResource)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionManagedInstanceBackupsByInstance : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsByInstance (subscriptionResource, locationName, managedInstanceName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="managedInstanceName" Type="System.String" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="managedInstanceName"> The name of the managed instance. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for a given managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstances/{managedInstanceName}/longTermRetentionManagedInstanceBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionManagedInstanceBackups_ListByInstance</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="managedInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="managedInstanceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionManagedInstanceBackupsByInstanceAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt; GetLongTermRetentionManagedInstanceBackupsByInstanceAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, string managedInstanceName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt; GetLongTermRetentionManagedInstanceBackupsByInstanceAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, string managedInstanceName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsByInstanceAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionManagedInstanceBackupsByInstanceAsync (subscriptionResource As SubscriptionResource, locationName As AzureLocation, managedInstanceName As String, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SubscriptionLongTermRetentionManagedInstanceBackupResource)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionManagedInstanceBackupsByInstanceAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsByInstanceAsync (subscriptionResource, locationName, managedInstanceName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="managedInstanceName" Type="System.String" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="managedInstanceName"> The name of the managed instance. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for a given managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstances/{managedInstanceName}/longTermRetentionManagedInstanceBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionManagedInstanceBackups_ListByInstance</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="managedInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="managedInstanceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionManagedInstanceBackupsByLocation">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt; GetLongTermRetentionManagedInstanceBackupsByLocation (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt; GetLongTermRetentionManagedInstanceBackupsByLocation(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsByLocation(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionManagedInstanceBackupsByLocation (subscriptionResource As SubscriptionResource, locationName As AzureLocation, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SubscriptionLongTermRetentionManagedInstanceBackupResource)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionManagedInstanceBackupsByLocation : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsByLocation (subscriptionResource, locationName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for managed databases in a given location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstanceBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionManagedInstanceBackups_ListByLocation</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionManagedInstanceBackupsByLocationAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt; GetLongTermRetentionManagedInstanceBackupsByLocationAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt; GetLongTermRetentionManagedInstanceBackupsByLocationAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsByLocationAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionManagedInstanceBackupsByLocationAsync (subscriptionResource As SubscriptionResource, locationName As AzureLocation, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SubscriptionLongTermRetentionManagedInstanceBackupResource)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionManagedInstanceBackupsByLocationAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsByLocationAsync (subscriptionResource, locationName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for managed databases in a given location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstanceBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionManagedInstanceBackups_ListByLocation</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionManagedInstanceBackupsByResourceGroupInstance">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt; GetLongTermRetentionManagedInstanceBackupsByResourceGroupInstance (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, string managedInstanceName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt; GetLongTermRetentionManagedInstanceBackupsByResourceGroupInstance(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, string managedInstanceName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsByResourceGroupInstance(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionManagedInstanceBackupsByResourceGroupInstance (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, managedInstanceName As String, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SubscriptionLongTermRetentionManagedInstanceBackupResource)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionManagedInstanceBackupsByResourceGroupInstance : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsByResourceGroupInstance (resourceGroupResource, locationName, managedInstanceName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="managedInstanceName" Type="System.String" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="managedInstanceName"> The name of the managed instance. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for a given managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstances/{managedInstanceName}/longTermRetentionManagedInstanceBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionManagedInstanceBackups_ListByResourceGroupInstance</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="managedInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="managedInstanceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionManagedInstanceBackupsByResourceGroupInstanceAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt; GetLongTermRetentionManagedInstanceBackupsByResourceGroupInstanceAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, string managedInstanceName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt; GetLongTermRetentionManagedInstanceBackupsByResourceGroupInstanceAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, string managedInstanceName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsByResourceGroupInstanceAsync(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionManagedInstanceBackupsByResourceGroupInstanceAsync (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, managedInstanceName As String, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SubscriptionLongTermRetentionManagedInstanceBackupResource)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionManagedInstanceBackupsByResourceGroupInstanceAsync : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsByResourceGroupInstanceAsync (resourceGroupResource, locationName, managedInstanceName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="managedInstanceName" Type="System.String" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="managedInstanceName"> The name of the managed instance. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for a given managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstances/{managedInstanceName}/longTermRetentionManagedInstanceBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionManagedInstanceBackups_ListByResourceGroupInstance</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="managedInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="managedInstanceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionManagedInstanceBackupsByResourceGroupLocation">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt; GetLongTermRetentionManagedInstanceBackupsByResourceGroupLocation (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt; GetLongTermRetentionManagedInstanceBackupsByResourceGroupLocation(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsByResourceGroupLocation(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionManagedInstanceBackupsByResourceGroupLocation (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SubscriptionLongTermRetentionManagedInstanceBackupResource)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionManagedInstanceBackupsByResourceGroupLocation : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsByResourceGroupLocation (resourceGroupResource, locationName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for managed databases in a given location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstanceBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionManagedInstanceBackups_ListByResourceGroupLocation</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionManagedInstanceBackupsByResourceGroupLocationAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt; GetLongTermRetentionManagedInstanceBackupsByResourceGroupLocationAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt; GetLongTermRetentionManagedInstanceBackupsByResourceGroupLocationAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsByResourceGroupLocationAsync(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionManagedInstanceBackupsByResourceGroupLocationAsync (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SubscriptionLongTermRetentionManagedInstanceBackupResource)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionManagedInstanceBackupsByResourceGroupLocationAsync : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsByResourceGroupLocationAsync (resourceGroupResource, locationName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for managed databases in a given location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstanceBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionManagedInstanceBackups_ListByResourceGroupLocation</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionManagedInstanceBackupsWithInstance">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt; GetLongTermRetentionManagedInstanceBackupsWithInstance (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, string managedInstanceName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt; GetLongTermRetentionManagedInstanceBackupsWithInstance(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, string managedInstanceName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsWithInstance(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionManagedInstanceBackupsWithInstance (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, managedInstanceName As String, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ManagedInstanceLongTermRetentionBackupData)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionManagedInstanceBackupsWithInstance : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsWithInstance (resourceGroupResource, locationName, managedInstanceName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="managedInstanceName" Type="System.String" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="managedInstanceName"> The name of the managed instance. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for a given managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstances/{managedInstanceName}/longTermRetentionManagedInstanceBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionManagedInstanceBackups_ListByResourceGroupInstance</description></item><item><term>Default Api Version</term><description>2021-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetLongTermRetentionManagedInstanceBackupsWithInstance(Azure.Core.AzureLocation,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="managedInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="managedInstanceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionManagedInstanceBackupsWithInstance">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt; GetLongTermRetentionManagedInstanceBackupsWithInstance (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, string managedInstanceName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt; GetLongTermRetentionManagedInstanceBackupsWithInstance(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, string managedInstanceName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsWithInstance(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionManagedInstanceBackupsWithInstance (subscriptionResource As SubscriptionResource, locationName As AzureLocation, managedInstanceName As String, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ManagedInstanceLongTermRetentionBackupData)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionManagedInstanceBackupsWithInstance : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsWithInstance (subscriptionResource, locationName, managedInstanceName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="managedInstanceName" Type="System.String" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="managedInstanceName"> The name of the managed instance. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for a given managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstances/{managedInstanceName}/longTermRetentionManagedInstanceBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionManagedInstanceBackups_ListByInstance</description></item><item><term>Default Api Version</term><description>2021-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetLongTermRetentionManagedInstanceBackupsWithInstance(Azure.Core.AzureLocation,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="managedInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="managedInstanceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionManagedInstanceBackupsWithInstanceAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt; GetLongTermRetentionManagedInstanceBackupsWithInstanceAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, string managedInstanceName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt; GetLongTermRetentionManagedInstanceBackupsWithInstanceAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, string managedInstanceName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsWithInstanceAsync(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionManagedInstanceBackupsWithInstanceAsync (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, managedInstanceName As String, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ManagedInstanceLongTermRetentionBackupData)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionManagedInstanceBackupsWithInstanceAsync : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsWithInstanceAsync (resourceGroupResource, locationName, managedInstanceName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="managedInstanceName" Type="System.String" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="managedInstanceName"> The name of the managed instance. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for a given managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstances/{managedInstanceName}/longTermRetentionManagedInstanceBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionManagedInstanceBackups_ListByResourceGroupInstance</description></item><item><term>Default Api Version</term><description>2021-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetLongTermRetentionManagedInstanceBackupsWithInstance(Azure.Core.AzureLocation,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="managedInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="managedInstanceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionManagedInstanceBackupsWithInstanceAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt; GetLongTermRetentionManagedInstanceBackupsWithInstanceAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, string managedInstanceName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt; GetLongTermRetentionManagedInstanceBackupsWithInstanceAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, string managedInstanceName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsWithInstanceAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionManagedInstanceBackupsWithInstanceAsync (subscriptionResource As SubscriptionResource, locationName As AzureLocation, managedInstanceName As String, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ManagedInstanceLongTermRetentionBackupData)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionManagedInstanceBackupsWithInstanceAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsWithInstanceAsync (subscriptionResource, locationName, managedInstanceName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="managedInstanceName" Type="System.String" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="managedInstanceName"> The name of the managed instance. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for a given managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstances/{managedInstanceName}/longTermRetentionManagedInstanceBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionManagedInstanceBackups_ListByInstance</description></item><item><term>Default Api Version</term><description>2021-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetLongTermRetentionManagedInstanceBackupsWithInstance(Azure.Core.AzureLocation,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="managedInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="managedInstanceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionManagedInstanceBackupsWithLocation">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt; GetLongTermRetentionManagedInstanceBackupsWithLocation (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt; GetLongTermRetentionManagedInstanceBackupsWithLocation(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsWithLocation(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionManagedInstanceBackupsWithLocation (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ManagedInstanceLongTermRetentionBackupData)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionManagedInstanceBackupsWithLocation : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsWithLocation (resourceGroupResource, locationName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for managed databases in a given location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstanceBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionManagedInstanceBackups_ListByResourceGroupLocation</description></item><item><term>Default Api Version</term><description>2021-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetLongTermRetentionManagedInstanceBackupsWithLocation(Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionManagedInstanceBackupsWithLocation">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt; GetLongTermRetentionManagedInstanceBackupsWithLocation (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt; GetLongTermRetentionManagedInstanceBackupsWithLocation(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsWithLocation(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionManagedInstanceBackupsWithLocation (subscriptionResource As SubscriptionResource, locationName As AzureLocation, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ManagedInstanceLongTermRetentionBackupData)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionManagedInstanceBackupsWithLocation : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsWithLocation (subscriptionResource, locationName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for managed databases in a given location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstanceBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionManagedInstanceBackups_ListByLocation</description></item><item><term>Default Api Version</term><description>2021-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetLongTermRetentionManagedInstanceBackupsWithLocation(Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionManagedInstanceBackupsWithLocationAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt; GetLongTermRetentionManagedInstanceBackupsWithLocationAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt; GetLongTermRetentionManagedInstanceBackupsWithLocationAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsWithLocationAsync(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionManagedInstanceBackupsWithLocationAsync (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ManagedInstanceLongTermRetentionBackupData)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionManagedInstanceBackupsWithLocationAsync : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsWithLocationAsync (resourceGroupResource, locationName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for managed databases in a given location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstanceBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionManagedInstanceBackups_ListByResourceGroupLocation</description></item><item><term>Default Api Version</term><description>2021-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetLongTermRetentionManagedInstanceBackupsWithLocation(Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionManagedInstanceBackupsWithLocationAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt; GetLongTermRetentionManagedInstanceBackupsWithLocationAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.SqlDatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt; GetLongTermRetentionManagedInstanceBackupsWithLocationAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsWithLocationAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionManagedInstanceBackupsWithLocationAsync (subscriptionResource As SubscriptionResource, locationName As AzureLocation, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of SqlDatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ManagedInstanceLongTermRetentionBackupData)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionManagedInstanceBackupsWithLocationAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionManagedInstanceBackupsWithLocationAsync (subscriptionResource, locationName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlDatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the long term retention backups for managed databases in a given location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstanceBackups</description></item><item><term>Operation Id</term><description>LongTermRetentionManagedInstanceBackups_ListByLocation</description></item><item><term>Default Api Version</term><description>2021-05-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetLongTermRetentionManagedInstanceBackupsWithLocation(Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.SqlDatabaseState},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionBackupData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.LongTermRetentionPolicyResource GetLongTermRetentionPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.LongTermRetentionPolicyResource GetLongTermRetentionPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionPolicyResource (client As ArmClient, id As ResourceIdentifier) As LongTermRetentionPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.LongTermRetentionPolicyResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetLongTermRetentionPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.LongTermRetentionPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.LongTermRetentionPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.LongTermRetentionPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.LongTermRetentionPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.LongTermRetentionPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetLongTermRetentionPolicyResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.LongTermRetentionPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMaintenanceWindowOptionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.MaintenanceWindowOptionResource GetMaintenanceWindowOptionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.MaintenanceWindowOptionResource GetMaintenanceWindowOptionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetMaintenanceWindowOptionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMaintenanceWindowOptionResource (client As ArmClient, id As ResourceIdentifier) As MaintenanceWindowOptionResource" />
      <MemberSignature Language="F#" Value="static member GetMaintenanceWindowOptionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.MaintenanceWindowOptionResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetMaintenanceWindowOptionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.MaintenanceWindowOptionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.MaintenanceWindowOptionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.MaintenanceWindowOptionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.MaintenanceWindowOptionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetMaintenanceWindowOptionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.MaintenanceWindowOptionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMaintenanceWindowsResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.MaintenanceWindowsResource GetMaintenanceWindowsResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.MaintenanceWindowsResource GetMaintenanceWindowsResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetMaintenanceWindowsResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMaintenanceWindowsResource (client As ArmClient, id As ResourceIdentifier) As MaintenanceWindowsResource" />
      <MemberSignature Language="F#" Value="static member GetMaintenanceWindowsResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.MaintenanceWindowsResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetMaintenanceWindowsResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.MaintenanceWindowsResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.MaintenanceWindowsResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.MaintenanceWindowsResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.MaintenanceWindowsResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetMaintenanceWindowsResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.MaintenanceWindowsResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedBackupShortTermRetentionPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedBackupShortTermRetentionPolicyResource GetManagedBackupShortTermRetentionPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedBackupShortTermRetentionPolicyResource GetManagedBackupShortTermRetentionPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedBackupShortTermRetentionPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedBackupShortTermRetentionPolicyResource (client As ArmClient, id As ResourceIdentifier) As ManagedBackupShortTermRetentionPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetManagedBackupShortTermRetentionPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedBackupShortTermRetentionPolicyResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedBackupShortTermRetentionPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedBackupShortTermRetentionPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedBackupShortTermRetentionPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedBackupShortTermRetentionPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.ManagedShortTermRetentionPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedBackupShortTermRetentionPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedBackupShortTermRetentionPolicyResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedBackupShortTermRetentionPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabaseAdvancedThreatProtectionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedDatabaseAdvancedThreatProtectionResource GetManagedDatabaseAdvancedThreatProtectionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedDatabaseAdvancedThreatProtectionResource GetManagedDatabaseAdvancedThreatProtectionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedDatabaseAdvancedThreatProtectionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedDatabaseAdvancedThreatProtectionResource (client As ArmClient, id As ResourceIdentifier) As ManagedDatabaseAdvancedThreatProtectionResource" />
      <MemberSignature Language="F#" Value="static member GetManagedDatabaseAdvancedThreatProtectionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseAdvancedThreatProtectionResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedDatabaseAdvancedThreatProtectionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedDatabaseAdvancedThreatProtectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseAdvancedThreatProtectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedDatabaseAdvancedThreatProtectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.AdvancedThreatProtectionName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseAdvancedThreatProtectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedDatabaseAdvancedThreatProtectionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseAdvancedThreatProtectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabaseColumnResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedDatabaseColumnResource GetManagedDatabaseColumnResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedDatabaseColumnResource GetManagedDatabaseColumnResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedDatabaseColumnResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedDatabaseColumnResource (client As ArmClient, id As ResourceIdentifier) As ManagedDatabaseColumnResource" />
      <MemberSignature Language="F#" Value="static member GetManagedDatabaseColumnResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseColumnResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedDatabaseColumnResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedDatabaseColumnResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseColumnResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedDatabaseColumnResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseColumnResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedDatabaseColumnResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseColumnResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabaseResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedDatabaseResource GetManagedDatabaseResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedDatabaseResource GetManagedDatabaseResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedDatabaseResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedDatabaseResource (client As ArmClient, id As ResourceIdentifier) As ManagedDatabaseResource" />
      <MemberSignature Language="F#" Value="static member GetManagedDatabaseResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedDatabaseResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedDatabaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedDatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedDatabaseResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabaseRestoreDetailResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedDatabaseRestoreDetailResource GetManagedDatabaseRestoreDetailResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedDatabaseRestoreDetailResource GetManagedDatabaseRestoreDetailResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedDatabaseRestoreDetailResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedDatabaseRestoreDetailResource (client As ArmClient, id As ResourceIdentifier) As ManagedDatabaseRestoreDetailResource" />
      <MemberSignature Language="F#" Value="static member GetManagedDatabaseRestoreDetailResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseRestoreDetailResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedDatabaseRestoreDetailResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedDatabaseRestoreDetailResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseRestoreDetailResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedDatabaseRestoreDetailResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.RestoreDetailsName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseRestoreDetailResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedDatabaseRestoreDetailResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseRestoreDetailResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabaseSchemaResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedDatabaseSchemaResource GetManagedDatabaseSchemaResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedDatabaseSchemaResource GetManagedDatabaseSchemaResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedDatabaseSchemaResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedDatabaseSchemaResource (client As ArmClient, id As ResourceIdentifier) As ManagedDatabaseSchemaResource" />
      <MemberSignature Language="F#" Value="static member GetManagedDatabaseSchemaResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseSchemaResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedDatabaseSchemaResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedDatabaseSchemaResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseSchemaResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedDatabaseSchemaResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseSchemaResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedDatabaseSchemaResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseSchemaResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabaseSecurityAlertPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedDatabaseSecurityAlertPolicyResource GetManagedDatabaseSecurityAlertPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedDatabaseSecurityAlertPolicyResource GetManagedDatabaseSecurityAlertPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedDatabaseSecurityAlertPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedDatabaseSecurityAlertPolicyResource (client As ArmClient, id As ResourceIdentifier) As ManagedDatabaseSecurityAlertPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetManagedDatabaseSecurityAlertPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseSecurityAlertPolicyResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedDatabaseSecurityAlertPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedDatabaseSecurityAlertPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseSecurityAlertPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedDatabaseSecurityAlertPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.SqlSecurityAlertPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseSecurityAlertPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedDatabaseSecurityAlertPolicyResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseSecurityAlertPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabaseSensitivityLabelResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedDatabaseSensitivityLabelResource GetManagedDatabaseSensitivityLabelResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedDatabaseSensitivityLabelResource GetManagedDatabaseSensitivityLabelResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedDatabaseSensitivityLabelResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedDatabaseSensitivityLabelResource (client As ArmClient, id As ResourceIdentifier) As ManagedDatabaseSensitivityLabelResource" />
      <MemberSignature Language="F#" Value="static member GetManagedDatabaseSensitivityLabelResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseSensitivityLabelResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedDatabaseSensitivityLabelResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedDatabaseSensitivityLabelResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseSensitivityLabelResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedDatabaseSensitivityLabelResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.SensitivityLabelSource)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseSensitivityLabelResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedDatabaseSensitivityLabelResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseSensitivityLabelResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabaseTableResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedDatabaseTableResource GetManagedDatabaseTableResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedDatabaseTableResource GetManagedDatabaseTableResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedDatabaseTableResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedDatabaseTableResource (client As ArmClient, id As ResourceIdentifier) As ManagedDatabaseTableResource" />
      <MemberSignature Language="F#" Value="static member GetManagedDatabaseTableResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseTableResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedDatabaseTableResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedDatabaseTableResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseTableResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedDatabaseTableResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseTableResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedDatabaseTableResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseTableResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabaseVulnerabilityAssessmentResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentResource GetManagedDatabaseVulnerabilityAssessmentResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentResource GetManagedDatabaseVulnerabilityAssessmentResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedDatabaseVulnerabilityAssessmentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedDatabaseVulnerabilityAssessmentResource (client As ArmClient, id As ResourceIdentifier) As ManagedDatabaseVulnerabilityAssessmentResource" />
      <MemberSignature Language="F#" Value="static member GetManagedDatabaseVulnerabilityAssessmentResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedDatabaseVulnerabilityAssessmentResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedDatabaseVulnerabilityAssessmentResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabaseVulnerabilityAssessmentRuleBaselineResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentRuleBaselineResource GetManagedDatabaseVulnerabilityAssessmentRuleBaselineResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentRuleBaselineResource GetManagedDatabaseVulnerabilityAssessmentRuleBaselineResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedDatabaseVulnerabilityAssessmentRuleBaselineResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedDatabaseVulnerabilityAssessmentRuleBaselineResource (client As ArmClient, id As ResourceIdentifier) As ManagedDatabaseVulnerabilityAssessmentRuleBaselineResource" />
      <MemberSignature Language="F#" Value="static member GetManagedDatabaseVulnerabilityAssessmentRuleBaselineResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentRuleBaselineResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedDatabaseVulnerabilityAssessmentRuleBaselineResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentRuleBaselineResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentRuleBaselineResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentRuleBaselineResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentRuleBaselineResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedDatabaseVulnerabilityAssessmentRuleBaselineResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentRuleBaselineResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabaseVulnerabilityAssessmentScanResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentScanResource GetManagedDatabaseVulnerabilityAssessmentScanResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentScanResource GetManagedDatabaseVulnerabilityAssessmentScanResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedDatabaseVulnerabilityAssessmentScanResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedDatabaseVulnerabilityAssessmentScanResource (client As ArmClient, id As ResourceIdentifier) As ManagedDatabaseVulnerabilityAssessmentScanResource" />
      <MemberSignature Language="F#" Value="static member GetManagedDatabaseVulnerabilityAssessmentScanResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentScanResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedDatabaseVulnerabilityAssessmentScanResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentScanResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentScanResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentScanResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentScanResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedDatabaseVulnerabilityAssessmentScanResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseVulnerabilityAssessmentScanResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstance">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt; GetManagedInstance (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string managedInstanceName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceResource&gt; GetManagedInstance(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string managedInstanceName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstance(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedInstance (resourceGroupResource As ResourceGroupResource, managedInstanceName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceResource)" />
      <MemberSignature Language="F#" Value="static member GetManagedInstance : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstance (resourceGroupResource, managedInstanceName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="managedInstanceName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="managedInstanceName"> The name of the managed instance. </param>
        <param name="expand"> The child resources to include in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}</description></item><item><term>Operation Id</term><description>ManagedInstances_Get</description></item><item><term>Default Api Version</term><description>2022-08-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.ManagedInstanceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetManagedInstance(System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="managedInstanceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="managedInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceAdministratorResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource GetManagedInstanceAdministratorResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource GetManagedInstanceAdministratorResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceAdministratorResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedInstanceAdministratorResource (client As ArmClient, id As ResourceIdentifier) As ManagedInstanceAdministratorResource" />
      <MemberSignature Language="F#" Value="static member GetManagedInstanceAdministratorResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceAdministratorResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.SqlAdministratorName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceAdministratorResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceAdvancedThreatProtectionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource GetManagedInstanceAdvancedThreatProtectionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource GetManagedInstanceAdvancedThreatProtectionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceAdvancedThreatProtectionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedInstanceAdvancedThreatProtectionResource (client As ArmClient, id As ResourceIdentifier) As ManagedInstanceAdvancedThreatProtectionResource" />
      <MemberSignature Language="F#" Value="static member GetManagedInstanceAdvancedThreatProtectionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceAdvancedThreatProtectionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.AdvancedThreatProtectionName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceAdvancedThreatProtectionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt; GetManagedInstanceAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string managedInstanceName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt; GetManagedInstanceAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string managedInstanceName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedInstanceAsync (resourceGroupResource As ResourceGroupResource, managedInstanceName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceResource))" />
      <MemberSignature Language="F#" Value="static member GetManagedInstanceAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceAsync (resourceGroupResource, managedInstanceName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="managedInstanceName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="managedInstanceName"> The name of the managed instance. </param>
        <param name="expand"> The child resources to include in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}</description></item><item><term>Operation Id</term><description>ManagedInstances_Get</description></item><item><term>Default Api Version</term><description>2022-08-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.ManagedInstanceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetManagedInstanceAsync(System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="managedInstanceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="managedInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceAzureADOnlyAuthenticationResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource GetManagedInstanceAzureADOnlyAuthenticationResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource GetManagedInstanceAzureADOnlyAuthenticationResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceAzureADOnlyAuthenticationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedInstanceAzureADOnlyAuthenticationResource (client As ArmClient, id As ResourceIdentifier) As ManagedInstanceAzureADOnlyAuthenticationResource" />
      <MemberSignature Language="F#" Value="static member GetManagedInstanceAzureADOnlyAuthenticationResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceAzureADOnlyAuthenticationResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.AuthenticationName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceAzureADOnlyAuthenticationResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceDtcResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedInstanceDtcResource GetManagedInstanceDtcResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedInstanceDtcResource GetManagedInstanceDtcResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceDtcResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedInstanceDtcResource (client As ArmClient, id As ResourceIdentifier) As ManagedInstanceDtcResource" />
      <MemberSignature Language="F#" Value="static member GetManagedInstanceDtcResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceDtcResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceDtcResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceDtcResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceDtcResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceDtcResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.DtcName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceDtcResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceDtcResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceDtcResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceEncryptionProtectorResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource GetManagedInstanceEncryptionProtectorResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource GetManagedInstanceEncryptionProtectorResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceEncryptionProtectorResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedInstanceEncryptionProtectorResource (client As ArmClient, id As ResourceIdentifier) As ManagedInstanceEncryptionProtectorResource" />
      <MemberSignature Language="F#" Value="static member GetManagedInstanceEncryptionProtectorResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceEncryptionProtectorResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.EncryptionProtectorName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceEncryptionProtectorResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceKeyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedInstanceKeyResource GetManagedInstanceKeyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedInstanceKeyResource GetManagedInstanceKeyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceKeyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedInstanceKeyResource (client As ArmClient, id As ResourceIdentifier) As ManagedInstanceKeyResource" />
      <MemberSignature Language="F#" Value="static member GetManagedInstanceKeyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceKeyResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceKeyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceKeyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceKeyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceKeyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceKeyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceKeyResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceKeyResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceLongTermRetentionPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionPolicyResource GetManagedInstanceLongTermRetentionPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionPolicyResource GetManagedInstanceLongTermRetentionPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceLongTermRetentionPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedInstanceLongTermRetentionPolicyResource (client As ArmClient, id As ResourceIdentifier) As ManagedInstanceLongTermRetentionPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetManagedInstanceLongTermRetentionPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionPolicyResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceLongTermRetentionPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.ManagedInstanceLongTermRetentionPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceLongTermRetentionPolicyResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceLongTermRetentionPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceOperationResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedInstanceOperationResource GetManagedInstanceOperationResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedInstanceOperationResource GetManagedInstanceOperationResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceOperationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedInstanceOperationResource (client As ArmClient, id As ResourceIdentifier) As ManagedInstanceOperationResource" />
      <MemberSignature Language="F#" Value="static member GetManagedInstanceOperationResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceOperationResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceOperationResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceOperationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceOperationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceOperationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.Guid)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceOperationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceOperationResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceOperationResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstancePrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource GetManagedInstancePrivateEndpointConnectionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource GetManagedInstancePrivateEndpointConnectionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstancePrivateEndpointConnectionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedInstancePrivateEndpointConnectionResource (client As ArmClient, id As ResourceIdentifier) As ManagedInstancePrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="static member GetManagedInstancePrivateEndpointConnectionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstancePrivateEndpointConnectionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstancePrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstancePrivateLinkResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource GetManagedInstancePrivateLinkResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource GetManagedInstancePrivateLinkResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstancePrivateLinkResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedInstancePrivateLinkResource (client As ArmClient, id As ResourceIdentifier) As ManagedInstancePrivateLinkResource" />
      <MemberSignature Language="F#" Value="static member GetManagedInstancePrivateLinkResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstancePrivateLinkResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstancePrivateLinkResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedInstanceResource GetManagedInstanceResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedInstanceResource GetManagedInstanceResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedInstanceResource (client As ArmClient, id As ResourceIdentifier) As ManagedInstanceResource" />
      <MemberSignature Language="F#" Value="static member GetManagedInstanceResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstances">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedInstanceCollection GetManagedInstances (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedInstanceCollection GetManagedInstances(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstances(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedInstances (resourceGroupResource As ResourceGroupResource) As ManagedInstanceCollection" />
      <MemberSignature Language="F#" Value="static member GetManagedInstances : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Sql.ManagedInstanceCollection" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstances resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of ManagedInstanceResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetManagedInstances" /> instead.</description></item></summary>
        <returns> An object representing collection of ManagedInstanceResources and their operations over a ManagedInstanceResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstances">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt; GetManagedInstances (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceResource&gt; GetManagedInstances(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstances(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedInstances (subscriptionResource As SubscriptionResource, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ManagedInstanceResource)" />
      <MemberSignature Language="F#" Value="static member GetManagedInstances : Azure.ResourceManager.Resources.SubscriptionResource * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstances (subscriptionResource, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="expand"> The child resources to include in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of all managed instances in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/managedInstances</description></item><item><term>Operation Id</term><description>ManagedInstances_List</description></item><item><term>Default Api Version</term><description>2022-08-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.ManagedInstanceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetManagedInstances(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstancesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt; GetManagedInstancesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceResource&gt; GetManagedInstancesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstancesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedInstancesAsync (subscriptionResource As SubscriptionResource, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ManagedInstanceResource)" />
      <MemberSignature Language="F#" Value="static member GetManagedInstancesAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstancesAsync (subscriptionResource, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="expand"> The child resources to include in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of all managed instances in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/managedInstances</description></item><item><term>Operation Id</term><description>ManagedInstances_List</description></item><item><term>Default Api Version</term><description>2022-08-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.ManagedInstanceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetManagedInstances(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceServerConfigurationOptionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource GetManagedInstanceServerConfigurationOptionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource GetManagedInstanceServerConfigurationOptionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceServerConfigurationOptionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedInstanceServerConfigurationOptionResource (client As ArmClient, id As ResourceIdentifier) As ManagedInstanceServerConfigurationOptionResource" />
      <MemberSignature Language="F#" Value="static member GetManagedInstanceServerConfigurationOptionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceServerConfigurationOptionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.ManagedInstanceServerConfigurationOptionName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceServerConfigurationOptionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceServerTrustCertificateResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource GetManagedInstanceServerTrustCertificateResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource GetManagedInstanceServerTrustCertificateResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceServerTrustCertificateResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedInstanceServerTrustCertificateResource (client As ArmClient, id As ResourceIdentifier) As ManagedInstanceServerTrustCertificateResource" />
      <MemberSignature Language="F#" Value="static member GetManagedInstanceServerTrustCertificateResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceServerTrustCertificateResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceServerTrustCertificateResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceStartStopScheduleResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource GetManagedInstanceStartStopScheduleResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource GetManagedInstanceStartStopScheduleResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceStartStopScheduleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedInstanceStartStopScheduleResource (client As ArmClient, id As ResourceIdentifier) As ManagedInstanceStartStopScheduleResource" />
      <MemberSignature Language="F#" Value="static member GetManagedInstanceStartStopScheduleResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceStartStopScheduleResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.ManagedInstanceStartStopScheduleName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceStartStopScheduleResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceVulnerabilityAssessmentResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource GetManagedInstanceVulnerabilityAssessmentResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource GetManagedInstanceVulnerabilityAssessmentResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceVulnerabilityAssessmentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedInstanceVulnerabilityAssessmentResource (client As ArmClient, id As ResourceIdentifier) As ManagedInstanceVulnerabilityAssessmentResource" />
      <MemberSignature Language="F#" Value="static member GetManagedInstanceVulnerabilityAssessmentResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedInstanceVulnerabilityAssessmentResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedInstanceVulnerabilityAssessmentResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedLedgerDigestUploadResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedLedgerDigestUploadResource GetManagedLedgerDigestUploadResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedLedgerDigestUploadResource GetManagedLedgerDigestUploadResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedLedgerDigestUploadResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedLedgerDigestUploadResource (client As ArmClient, id As ResourceIdentifier) As ManagedLedgerDigestUploadResource" />
      <MemberSignature Language="F#" Value="static member GetManagedLedgerDigestUploadResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedLedgerDigestUploadResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedLedgerDigestUploadResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedLedgerDigestUploadResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedLedgerDigestUploadResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedLedgerDigestUploadResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.ManagedLedgerDigestUploadsName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedLedgerDigestUploadResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedLedgerDigestUploadResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedLedgerDigestUploadResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource GetManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource GetManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource (client As ArmClient, id As ResourceIdentifier) As ManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.ManagedShortTermRetentionPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedRestorableDroppedDbBackupShortTermRetentionPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedServerDnsAliasResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedServerDnsAliasResource GetManagedServerDnsAliasResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedServerDnsAliasResource GetManagedServerDnsAliasResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedServerDnsAliasResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedServerDnsAliasResource (client As ArmClient, id As ResourceIdentifier) As ManagedServerDnsAliasResource" />
      <MemberSignature Language="F#" Value="static member GetManagedServerDnsAliasResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedServerDnsAliasResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedServerDnsAliasResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedServerDnsAliasResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedServerDnsAliasResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedServerDnsAliasResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedServerDnsAliasResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedServerDnsAliasResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedServerDnsAliasResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedServerSecurityAlertPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource GetManagedServerSecurityAlertPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource GetManagedServerSecurityAlertPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedServerSecurityAlertPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedServerSecurityAlertPolicyResource (client As ArmClient, id As ResourceIdentifier) As ManagedServerSecurityAlertPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetManagedServerSecurityAlertPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedServerSecurityAlertPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.SqlSecurityAlertPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedServerSecurityAlertPolicyResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedTransparentDataEncryptionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ManagedTransparentDataEncryptionResource GetManagedTransparentDataEncryptionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ManagedTransparentDataEncryptionResource GetManagedTransparentDataEncryptionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetManagedTransparentDataEncryptionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedTransparentDataEncryptionResource (client As ArmClient, id As ResourceIdentifier) As ManagedTransparentDataEncryptionResource" />
      <MemberSignature Language="F#" Value="static member GetManagedTransparentDataEncryptionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ManagedTransparentDataEncryptionResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetManagedTransparentDataEncryptionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedTransparentDataEncryptionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ManagedTransparentDataEncryptionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ManagedTransparentDataEncryptionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.TransparentDataEncryptionName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ManagedTransparentDataEncryptionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetManagedTransparentDataEncryptionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ManagedTransparentDataEncryptionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetOutboundFirewallRuleResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.OutboundFirewallRuleResource GetOutboundFirewallRuleResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.OutboundFirewallRuleResource GetOutboundFirewallRuleResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetOutboundFirewallRuleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOutboundFirewallRuleResource (client As ArmClient, id As ResourceIdentifier) As OutboundFirewallRuleResource" />
      <MemberSignature Language="F#" Value="static member GetOutboundFirewallRuleResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.OutboundFirewallRuleResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetOutboundFirewallRuleResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.OutboundFirewallRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Sql.OutboundFirewallRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.OutboundFirewallRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Sql.OutboundFirewallRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetOutboundFirewallRuleResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.OutboundFirewallRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecommendedActionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.RecommendedActionResource GetRecommendedActionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.RecommendedActionResource GetRecommendedActionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetRecommendedActionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRecommendedActionResource (client As ArmClient, id As ResourceIdentifier) As RecommendedActionResource" />
      <MemberSignature Language="F#" Value="static member GetRecommendedActionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.RecommendedActionResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetRecommendedActionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.RecommendedActionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.RecommendedActionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.RecommendedActionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.RecommendedActionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetRecommendedActionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.RecommendedActionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecoverableDatabaseResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.RecoverableDatabaseResource GetRecoverableDatabaseResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.RecoverableDatabaseResource GetRecoverableDatabaseResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetRecoverableDatabaseResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRecoverableDatabaseResource (client As ArmClient, id As ResourceIdentifier) As RecoverableDatabaseResource" />
      <MemberSignature Language="F#" Value="static member GetRecoverableDatabaseResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.RecoverableDatabaseResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetRecoverableDatabaseResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.RecoverableDatabaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.RecoverableDatabaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.RecoverableDatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.RecoverableDatabaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetRecoverableDatabaseResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.RecoverableDatabaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecoverableManagedDatabaseResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource GetRecoverableManagedDatabaseResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource GetRecoverableManagedDatabaseResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetRecoverableManagedDatabaseResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRecoverableManagedDatabaseResource (client As ArmClient, id As ResourceIdentifier) As RecoverableManagedDatabaseResource" />
      <MemberSignature Language="F#" Value="static member GetRecoverableManagedDatabaseResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetRecoverableManagedDatabaseResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetRecoverableManagedDatabaseResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGroupLongTermRetentionBackup">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource&gt; GetResourceGroupLongTermRetentionBackup (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, string longTermRetentionServerName, string longTermRetentionDatabaseName, string backupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource&gt; GetResourceGroupLongTermRetentionBackup(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, string longTermRetentionServerName, string longTermRetentionDatabaseName, string backupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetResourceGroupLongTermRetentionBackup(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetResourceGroupLongTermRetentionBackup (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, longTermRetentionServerName As String, longTermRetentionDatabaseName As String, backupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResourceGroupLongTermRetentionBackupResource)" />
      <MemberSignature Language="F#" Value="static member GetResourceGroupLongTermRetentionBackup : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetResourceGroupLongTermRetentionBackup (resourceGroupResource, locationName, longTermRetentionServerName, longTermRetentionDatabaseName, backupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="longTermRetentionServerName" Type="System.String" />
        <Parameter Name="longTermRetentionDatabaseName" Type="System.String" />
        <Parameter Name="backupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="longTermRetentionServerName"> The name of the server. </param>
        <param name="longTermRetentionDatabaseName"> The name of the database. </param>
        <param name="backupName"> The backup name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a long term retention backup.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionDatabases/{longTermRetentionDatabaseName}/longTermRetentionBackups/{backupName}</description></item><item><term>Operation Id</term><description>LongTermRetentionBackups_GetByResourceGroup</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetResourceGroupLongTermRetentionBackup(Azure.Core.AzureLocation,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" />, <paramref name="longTermRetentionServerName" />, <paramref name="longTermRetentionDatabaseName" /> or <paramref name="backupName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="longTermRetentionServerName" />, <paramref name="longTermRetentionDatabaseName" /> or <paramref name="backupName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGroupLongTermRetentionBackupAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource&gt;&gt; GetResourceGroupLongTermRetentionBackupAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, string longTermRetentionServerName, string longTermRetentionDatabaseName, string backupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource&gt;&gt; GetResourceGroupLongTermRetentionBackupAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, string longTermRetentionServerName, string longTermRetentionDatabaseName, string backupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetResourceGroupLongTermRetentionBackupAsync(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetResourceGroupLongTermRetentionBackupAsync (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, longTermRetentionServerName As String, longTermRetentionDatabaseName As String, backupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResourceGroupLongTermRetentionBackupResource))" />
      <MemberSignature Language="F#" Value="static member GetResourceGroupLongTermRetentionBackupAsync : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource&gt;&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetResourceGroupLongTermRetentionBackupAsync (resourceGroupResource, locationName, longTermRetentionServerName, longTermRetentionDatabaseName, backupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="longTermRetentionServerName" Type="System.String" />
        <Parameter Name="longTermRetentionDatabaseName" Type="System.String" />
        <Parameter Name="backupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="longTermRetentionServerName"> The name of the server. </param>
        <param name="longTermRetentionDatabaseName"> The name of the database. </param>
        <param name="backupName"> The backup name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a long term retention backup.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionDatabases/{longTermRetentionDatabaseName}/longTermRetentionBackups/{backupName}</description></item><item><term>Operation Id</term><description>LongTermRetentionBackups_GetByResourceGroup</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetResourceGroupLongTermRetentionBackupAsync(Azure.Core.AzureLocation,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" />, <paramref name="longTermRetentionServerName" />, <paramref name="longTermRetentionDatabaseName" /> or <paramref name="backupName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="longTermRetentionServerName" />, <paramref name="longTermRetentionDatabaseName" /> or <paramref name="backupName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGroupLongTermRetentionBackupResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource GetResourceGroupLongTermRetentionBackupResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource GetResourceGroupLongTermRetentionBackupResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetResourceGroupLongTermRetentionBackupResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetResourceGroupLongTermRetentionBackupResource (client As ArmClient, id As ResourceIdentifier) As ResourceGroupLongTermRetentionBackupResource" />
      <MemberSignature Language="F#" Value="static member GetResourceGroupLongTermRetentionBackupResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetResourceGroupLongTermRetentionBackupResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource.CreateResourceIdentifier(System.String,System.String,Azure.Core.AzureLocation,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetResourceGroupLongTermRetentionBackupResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGroupLongTermRetentionBackups">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupCollection GetResourceGroupLongTermRetentionBackups (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, string longTermRetentionServerName, string longTermRetentionDatabaseName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupCollection GetResourceGroupLongTermRetentionBackups(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, string longTermRetentionServerName, string longTermRetentionDatabaseName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetResourceGroupLongTermRetentionBackups(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetResourceGroupLongTermRetentionBackups (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, longTermRetentionServerName As String, longTermRetentionDatabaseName As String) As ResourceGroupLongTermRetentionBackupCollection" />
      <MemberSignature Language="F#" Value="static member GetResourceGroupLongTermRetentionBackups : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * string * string -&gt; Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupCollection" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetResourceGroupLongTermRetentionBackups (resourceGroupResource, locationName, longTermRetentionServerName, longTermRetentionDatabaseName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionBackupCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="longTermRetentionServerName" Type="System.String" />
        <Parameter Name="longTermRetentionDatabaseName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="longTermRetentionServerName"> The name of the server. </param>
        <param name="longTermRetentionDatabaseName"> The name of the database. </param>
        <summary>
            Gets a collection of ResourceGroupLongTermRetentionBackupResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetResourceGroupLongTermRetentionBackups(Azure.Core.AzureLocation,System.String,System.String)" /> instead.</description></item></summary>
        <returns> An object representing collection of ResourceGroupLongTermRetentionBackupResources and their operations over a ResourceGroupLongTermRetentionBackupResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" />, <paramref name="longTermRetentionServerName" /> or <paramref name="longTermRetentionDatabaseName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="longTermRetentionServerName" /> or <paramref name="longTermRetentionDatabaseName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGroupLongTermRetentionManagedInstanceBackup">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource&gt; GetResourceGroupLongTermRetentionManagedInstanceBackup (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, string managedInstanceName, string databaseName, string backupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource&gt; GetResourceGroupLongTermRetentionManagedInstanceBackup(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, string managedInstanceName, string databaseName, string backupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetResourceGroupLongTermRetentionManagedInstanceBackup(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetResourceGroupLongTermRetentionManagedInstanceBackup (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, managedInstanceName As String, databaseName As String, backupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResourceGroupLongTermRetentionManagedInstanceBackupResource)" />
      <MemberSignature Language="F#" Value="static member GetResourceGroupLongTermRetentionManagedInstanceBackup : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetResourceGroupLongTermRetentionManagedInstanceBackup (resourceGroupResource, locationName, managedInstanceName, databaseName, backupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="managedInstanceName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="backupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="managedInstanceName"> The name of the managed instance. </param>
        <param name="databaseName"> The name of the managed database. </param>
        <param name="backupName"> The backup name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a long term retention backup for a managed database.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstances/{managedInstanceName}/longTermRetentionDatabases/{databaseName}/longTermRetentionManagedInstanceBackups/{backupName}</description></item><item><term>Operation Id</term><description>LongTermRetentionManagedInstanceBackups_GetByResourceGroup</description></item><item><term>Default Api Version</term><description>2021-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetResourceGroupLongTermRetentionManagedInstanceBackup(Azure.Core.AzureLocation,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" />, <paramref name="managedInstanceName" />, <paramref name="databaseName" /> or <paramref name="backupName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="managedInstanceName" />, <paramref name="databaseName" /> or <paramref name="backupName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGroupLongTermRetentionManagedInstanceBackupAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource&gt;&gt; GetResourceGroupLongTermRetentionManagedInstanceBackupAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, string managedInstanceName, string databaseName, string backupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource&gt;&gt; GetResourceGroupLongTermRetentionManagedInstanceBackupAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, string managedInstanceName, string databaseName, string backupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetResourceGroupLongTermRetentionManagedInstanceBackupAsync(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetResourceGroupLongTermRetentionManagedInstanceBackupAsync (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, managedInstanceName As String, databaseName As String, backupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResourceGroupLongTermRetentionManagedInstanceBackupResource))" />
      <MemberSignature Language="F#" Value="static member GetResourceGroupLongTermRetentionManagedInstanceBackupAsync : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource&gt;&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetResourceGroupLongTermRetentionManagedInstanceBackupAsync (resourceGroupResource, locationName, managedInstanceName, databaseName, backupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="managedInstanceName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="backupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="managedInstanceName"> The name of the managed instance. </param>
        <param name="databaseName"> The name of the managed database. </param>
        <param name="backupName"> The backup name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a long term retention backup for a managed database.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstances/{managedInstanceName}/longTermRetentionDatabases/{databaseName}/longTermRetentionManagedInstanceBackups/{backupName}</description></item><item><term>Operation Id</term><description>LongTermRetentionManagedInstanceBackups_GetByResourceGroup</description></item><item><term>Default Api Version</term><description>2021-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetResourceGroupLongTermRetentionManagedInstanceBackupAsync(Azure.Core.AzureLocation,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" />, <paramref name="managedInstanceName" />, <paramref name="databaseName" /> or <paramref name="backupName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="managedInstanceName" />, <paramref name="databaseName" /> or <paramref name="backupName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGroupLongTermRetentionManagedInstanceBackupResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource GetResourceGroupLongTermRetentionManagedInstanceBackupResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource GetResourceGroupLongTermRetentionManagedInstanceBackupResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetResourceGroupLongTermRetentionManagedInstanceBackupResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetResourceGroupLongTermRetentionManagedInstanceBackupResource (client As ArmClient, id As ResourceIdentifier) As ResourceGroupLongTermRetentionManagedInstanceBackupResource" />
      <MemberSignature Language="F#" Value="static member GetResourceGroupLongTermRetentionManagedInstanceBackupResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetResourceGroupLongTermRetentionManagedInstanceBackupResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource.CreateResourceIdentifier(System.String,System.String,Azure.Core.AzureLocation,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetResourceGroupLongTermRetentionManagedInstanceBackupResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGroupLongTermRetentionManagedInstanceBackups">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupCollection GetResourceGroupLongTermRetentionManagedInstanceBackups (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, string managedInstanceName, string databaseName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupCollection GetResourceGroupLongTermRetentionManagedInstanceBackups(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, string managedInstanceName, string databaseName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetResourceGroupLongTermRetentionManagedInstanceBackups(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetResourceGroupLongTermRetentionManagedInstanceBackups (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, managedInstanceName As String, databaseName As String) As ResourceGroupLongTermRetentionManagedInstanceBackupCollection" />
      <MemberSignature Language="F#" Value="static member GetResourceGroupLongTermRetentionManagedInstanceBackups : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * string * string -&gt; Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupCollection" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetResourceGroupLongTermRetentionManagedInstanceBackups (resourceGroupResource, locationName, managedInstanceName, databaseName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ResourceGroupLongTermRetentionManagedInstanceBackupCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="managedInstanceName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="managedInstanceName"> The name of the managed instance. </param>
        <param name="databaseName"> The name of the managed database. </param>
        <summary>
            Gets a collection of ResourceGroupLongTermRetentionManagedInstanceBackupResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetResourceGroupLongTermRetentionManagedInstanceBackups(Azure.Core.AzureLocation,System.String,System.String)" /> instead.</description></item></summary>
        <returns> An object representing collection of ResourceGroupLongTermRetentionManagedInstanceBackupResources and their operations over a ResourceGroupLongTermRetentionManagedInstanceBackupResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" />, <paramref name="managedInstanceName" /> or <paramref name="databaseName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="managedInstanceName" /> or <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRestorableDroppedDatabaseResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource GetRestorableDroppedDatabaseResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource GetRestorableDroppedDatabaseResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetRestorableDroppedDatabaseResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRestorableDroppedDatabaseResource (client As ArmClient, id As ResourceIdentifier) As RestorableDroppedDatabaseResource" />
      <MemberSignature Language="F#" Value="static member GetRestorableDroppedDatabaseResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetRestorableDroppedDatabaseResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetRestorableDroppedDatabaseResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRestorableDroppedManagedDatabaseResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource GetRestorableDroppedManagedDatabaseResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource GetRestorableDroppedManagedDatabaseResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetRestorableDroppedManagedDatabaseResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRestorableDroppedManagedDatabaseResource (client As ArmClient, id As ResourceIdentifier) As RestorableDroppedManagedDatabaseResource" />
      <MemberSignature Language="F#" Value="static member GetRestorableDroppedManagedDatabaseResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetRestorableDroppedManagedDatabaseResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetRestorableDroppedManagedDatabaseResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServerAdvancedThreatProtectionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ServerAdvancedThreatProtectionResource GetServerAdvancedThreatProtectionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ServerAdvancedThreatProtectionResource GetServerAdvancedThreatProtectionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetServerAdvancedThreatProtectionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServerAdvancedThreatProtectionResource (client As ArmClient, id As ResourceIdentifier) As ServerAdvancedThreatProtectionResource" />
      <MemberSignature Language="F#" Value="static member GetServerAdvancedThreatProtectionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ServerAdvancedThreatProtectionResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetServerAdvancedThreatProtectionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ServerAdvancedThreatProtectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ServerAdvancedThreatProtectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ServerAdvancedThreatProtectionResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.AdvancedThreatProtectionName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ServerAdvancedThreatProtectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetServerAdvancedThreatProtectionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ServerAdvancedThreatProtectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceObjectiveResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.ServiceObjectiveResource GetServiceObjectiveResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.ServiceObjectiveResource GetServiceObjectiveResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetServiceObjectiveResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServiceObjectiveResource (client As ArmClient, id As ResourceIdentifier) As ServiceObjectiveResource" />
      <MemberSignature Language="F#" Value="static member GetServiceObjectiveResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.ServiceObjectiveResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetServiceObjectiveResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ServiceObjectiveResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.ServiceObjectiveResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.ServiceObjectiveResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.ServiceObjectiveResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetServiceObjectiveResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ServiceObjectiveResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlAgentConfigurationResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlAgentConfigurationResource GetSqlAgentConfigurationResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlAgentConfigurationResource GetSqlAgentConfigurationResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlAgentConfigurationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlAgentConfigurationResource (client As ArmClient, id As ResourceIdentifier) As SqlAgentConfigurationResource" />
      <MemberSignature Language="F#" Value="static member GetSqlAgentConfigurationResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlAgentConfigurationResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlAgentConfigurationResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlAgentConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlAgentConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlAgentConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlAgentConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlAgentConfigurationResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlAgentConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseAdvisorResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlDatabaseAdvisorResource GetSqlDatabaseAdvisorResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlDatabaseAdvisorResource GetSqlDatabaseAdvisorResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseAdvisorResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlDatabaseAdvisorResource (client As ArmClient, id As ResourceIdentifier) As SqlDatabaseAdvisorResource" />
      <MemberSignature Language="F#" Value="static member GetSqlDatabaseAdvisorResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseAdvisorResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseAdvisorResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseAdvisorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseAdvisorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseAdvisorResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseAdvisorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseAdvisorResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseAdvisorResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseAutomaticTuningResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlDatabaseAutomaticTuningResource GetSqlDatabaseAutomaticTuningResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlDatabaseAutomaticTuningResource GetSqlDatabaseAutomaticTuningResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseAutomaticTuningResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlDatabaseAutomaticTuningResource (client As ArmClient, id As ResourceIdentifier) As SqlDatabaseAutomaticTuningResource" />
      <MemberSignature Language="F#" Value="static member GetSqlDatabaseAutomaticTuningResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseAutomaticTuningResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseAutomaticTuningResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseAutomaticTuningResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseAutomaticTuningResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseAutomaticTuningResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseAutomaticTuningResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseAutomaticTuningResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseAutomaticTuningResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseBlobAuditingPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlDatabaseBlobAuditingPolicyResource GetSqlDatabaseBlobAuditingPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlDatabaseBlobAuditingPolicyResource GetSqlDatabaseBlobAuditingPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseBlobAuditingPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlDatabaseBlobAuditingPolicyResource (client As ArmClient, id As ResourceIdentifier) As SqlDatabaseBlobAuditingPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetSqlDatabaseBlobAuditingPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseBlobAuditingPolicyResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseBlobAuditingPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseBlobAuditingPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseBlobAuditingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseBlobAuditingPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseBlobAuditingPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseBlobAuditingPolicyResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseBlobAuditingPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseColumnResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlDatabaseColumnResource GetSqlDatabaseColumnResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlDatabaseColumnResource GetSqlDatabaseColumnResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseColumnResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlDatabaseColumnResource (client As ArmClient, id As ResourceIdentifier) As SqlDatabaseColumnResource" />
      <MemberSignature Language="F#" Value="static member GetSqlDatabaseColumnResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseColumnResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseColumnResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseColumnResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseColumnResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseColumnResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseColumnResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseColumnResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseColumnResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlDatabaseResource GetSqlDatabaseResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlDatabaseResource GetSqlDatabaseResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlDatabaseResource (client As ArmClient, id As ResourceIdentifier) As SqlDatabaseResource" />
      <MemberSignature Language="F#" Value="static member GetSqlDatabaseResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseSchemaResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlDatabaseSchemaResource GetSqlDatabaseSchemaResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlDatabaseSchemaResource GetSqlDatabaseSchemaResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseSchemaResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlDatabaseSchemaResource (client As ArmClient, id As ResourceIdentifier) As SqlDatabaseSchemaResource" />
      <MemberSignature Language="F#" Value="static member GetSqlDatabaseSchemaResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseSchemaResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseSchemaResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseSchemaResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSchemaResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseSchemaResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSchemaResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseSchemaResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSchemaResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseSecurityAlertPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlDatabaseSecurityAlertPolicyResource GetSqlDatabaseSecurityAlertPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlDatabaseSecurityAlertPolicyResource GetSqlDatabaseSecurityAlertPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseSecurityAlertPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlDatabaseSecurityAlertPolicyResource (client As ArmClient, id As ResourceIdentifier) As SqlDatabaseSecurityAlertPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetSqlDatabaseSecurityAlertPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseSecurityAlertPolicyResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseSecurityAlertPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseSecurityAlertPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSecurityAlertPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseSecurityAlertPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.SqlSecurityAlertPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSecurityAlertPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseSecurityAlertPolicyResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSecurityAlertPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseSensitivityLabelResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlDatabaseSensitivityLabelResource GetSqlDatabaseSensitivityLabelResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlDatabaseSensitivityLabelResource GetSqlDatabaseSensitivityLabelResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseSensitivityLabelResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlDatabaseSensitivityLabelResource (client As ArmClient, id As ResourceIdentifier) As SqlDatabaseSensitivityLabelResource" />
      <MemberSignature Language="F#" Value="static member GetSqlDatabaseSensitivityLabelResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseSensitivityLabelResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseSensitivityLabelResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseSensitivityLabelResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSensitivityLabelResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseSensitivityLabelResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.SensitivityLabelSource)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSensitivityLabelResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseSensitivityLabelResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSensitivityLabelResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseSqlVulnerabilityAssessmentBaselineResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineResource GetSqlDatabaseSqlVulnerabilityAssessmentBaselineResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineResource GetSqlDatabaseSqlVulnerabilityAssessmentBaselineResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseSqlVulnerabilityAssessmentBaselineResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlDatabaseSqlVulnerabilityAssessmentBaselineResource (client As ArmClient, id As ResourceIdentifier) As SqlDatabaseSqlVulnerabilityAssessmentBaselineResource" />
      <MemberSignature Language="F#" Value="static member GetSqlDatabaseSqlVulnerabilityAssessmentBaselineResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseSqlVulnerabilityAssessmentBaselineResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,Azure.ResourceManager.Sql.Models.SqlVulnerabilityAssessmentBaselineName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseSqlVulnerabilityAssessmentBaselineResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource GetSqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource GetSqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource (client As ArmClient, id As ResourceIdentifier) As SqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource" />
      <MemberSignature Language="F#" Value="static member GetSqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,Azure.ResourceManager.Sql.Models.SqlVulnerabilityAssessmentBaselineName,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentBaselineRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseSqlVulnerabilityAssessmentResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentResource GetSqlDatabaseSqlVulnerabilityAssessmentResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentResource GetSqlDatabaseSqlVulnerabilityAssessmentResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseSqlVulnerabilityAssessmentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlDatabaseSqlVulnerabilityAssessmentResource (client As ArmClient, id As ResourceIdentifier) As SqlDatabaseSqlVulnerabilityAssessmentResource" />
      <MemberSignature Language="F#" Value="static member GetSqlDatabaseSqlVulnerabilityAssessmentResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseSqlVulnerabilityAssessmentResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseSqlVulnerabilityAssessmentResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseSqlVulnerabilityAssessmentScanResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResource GetSqlDatabaseSqlVulnerabilityAssessmentScanResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResource GetSqlDatabaseSqlVulnerabilityAssessmentScanResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseSqlVulnerabilityAssessmentScanResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlDatabaseSqlVulnerabilityAssessmentScanResource (client As ArmClient, id As ResourceIdentifier) As SqlDatabaseSqlVulnerabilityAssessmentScanResource" />
      <MemberSignature Language="F#" Value="static member GetSqlDatabaseSqlVulnerabilityAssessmentScanResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseSqlVulnerabilityAssessmentScanResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseSqlVulnerabilityAssessmentScanResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseSqlVulnerabilityAssessmentScanResultResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResultResource GetSqlDatabaseSqlVulnerabilityAssessmentScanResultResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResultResource GetSqlDatabaseSqlVulnerabilityAssessmentScanResultResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseSqlVulnerabilityAssessmentScanResultResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlDatabaseSqlVulnerabilityAssessmentScanResultResource (client As ArmClient, id As ResourceIdentifier) As SqlDatabaseSqlVulnerabilityAssessmentScanResultResource" />
      <MemberSignature Language="F#" Value="static member GetSqlDatabaseSqlVulnerabilityAssessmentScanResultResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResultResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseSqlVulnerabilityAssessmentScanResultResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResultResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResultResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResultResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResultResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseSqlVulnerabilityAssessmentScanResultResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseSqlVulnerabilityAssessmentScanResultResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseTableResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlDatabaseTableResource GetSqlDatabaseTableResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlDatabaseTableResource GetSqlDatabaseTableResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseTableResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlDatabaseTableResource (client As ArmClient, id As ResourceIdentifier) As SqlDatabaseTableResource" />
      <MemberSignature Language="F#" Value="static member GetSqlDatabaseTableResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseTableResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseTableResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseTableResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseTableResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseTableResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseTableResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseTableResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseTableResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseVulnerabilityAssessmentResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentResource GetSqlDatabaseVulnerabilityAssessmentResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentResource GetSqlDatabaseVulnerabilityAssessmentResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseVulnerabilityAssessmentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlDatabaseVulnerabilityAssessmentResource (client As ArmClient, id As ResourceIdentifier) As SqlDatabaseVulnerabilityAssessmentResource" />
      <MemberSignature Language="F#" Value="static member GetSqlDatabaseVulnerabilityAssessmentResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseVulnerabilityAssessmentResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseVulnerabilityAssessmentResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseVulnerabilityAssessmentRuleBaselineResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentRuleBaselineResource GetSqlDatabaseVulnerabilityAssessmentRuleBaselineResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentRuleBaselineResource GetSqlDatabaseVulnerabilityAssessmentRuleBaselineResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseVulnerabilityAssessmentRuleBaselineResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlDatabaseVulnerabilityAssessmentRuleBaselineResource (client As ArmClient, id As ResourceIdentifier) As SqlDatabaseVulnerabilityAssessmentRuleBaselineResource" />
      <MemberSignature Language="F#" Value="static member GetSqlDatabaseVulnerabilityAssessmentRuleBaselineResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentRuleBaselineResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseVulnerabilityAssessmentRuleBaselineResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentRuleBaselineResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentRuleBaselineResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentRuleBaselineResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentRuleBaselineResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseVulnerabilityAssessmentRuleBaselineResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentRuleBaselineResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseVulnerabilityAssessmentScanResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentScanResource GetSqlDatabaseVulnerabilityAssessmentScanResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentScanResource GetSqlDatabaseVulnerabilityAssessmentScanResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseVulnerabilityAssessmentScanResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlDatabaseVulnerabilityAssessmentScanResource (client As ArmClient, id As ResourceIdentifier) As SqlDatabaseVulnerabilityAssessmentScanResource" />
      <MemberSignature Language="F#" Value="static member GetSqlDatabaseVulnerabilityAssessmentScanResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentScanResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlDatabaseVulnerabilityAssessmentScanResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentScanResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentScanResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentScanResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentScanResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlDatabaseVulnerabilityAssessmentScanResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseVulnerabilityAssessmentScanResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlFirewallRuleResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlFirewallRuleResource GetSqlFirewallRuleResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlFirewallRuleResource GetSqlFirewallRuleResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlFirewallRuleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlFirewallRuleResource (client As ArmClient, id As ResourceIdentifier) As SqlFirewallRuleResource" />
      <MemberSignature Language="F#" Value="static member GetSqlFirewallRuleResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlFirewallRuleResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlFirewallRuleResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlFirewallRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlFirewallRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlFirewallRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlFirewallRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlFirewallRuleResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlFirewallRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlPrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlPrivateEndpointConnectionResource GetSqlPrivateEndpointConnectionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlPrivateEndpointConnectionResource GetSqlPrivateEndpointConnectionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlPrivateEndpointConnectionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlPrivateEndpointConnectionResource (client As ArmClient, id As ResourceIdentifier) As SqlPrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="static member GetSqlPrivateEndpointConnectionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlPrivateEndpointConnectionResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlPrivateEndpointConnectionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlPrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlPrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlPrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlPrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlPrivateLinkResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlPrivateLinkResource GetSqlPrivateLinkResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlPrivateLinkResource GetSqlPrivateLinkResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlPrivateLinkResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlPrivateLinkResource (client As ArmClient, id As ResourceIdentifier) As SqlPrivateLinkResource" />
      <MemberSignature Language="F#" Value="static member GetSqlPrivateLinkResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlPrivateLinkResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlPrivateLinkResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlPrivateLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlPrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlPrivateLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlPrivateLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlPrivateLinkResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlPrivateLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServer">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt; GetSqlServer (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string serverName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Sql.SqlServerResource&gt; GetSqlServer(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string serverName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServer(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServer (resourceGroupResource As ResourceGroupResource, serverName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SqlServerResource)" />
      <MemberSignature Language="F#" Value="static member GetSqlServer : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServer (resourceGroupResource, serverName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="expand"> The child resources to include in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}</description></item><item><term>Operation Id</term><description>Servers_Get</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.SqlServerResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetSqlServer(System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="serverName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerAdvisorResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerAdvisorResource GetSqlServerAdvisorResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerAdvisorResource GetSqlServerAdvisorResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerAdvisorResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerAdvisorResource (client As ArmClient, id As ResourceIdentifier) As SqlServerAdvisorResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerAdvisorResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerAdvisorResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerAdvisorResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerAdvisorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerAdvisorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerAdvisorResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerAdvisorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerAdvisorResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerAdvisorResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&gt; GetSqlServerAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string serverName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.SqlServerResource&gt;&gt; GetSqlServerAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string serverName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerAsync (resourceGroupResource As ResourceGroupResource, serverName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SqlServerResource))" />
      <MemberSignature Language="F#" Value="static member GetSqlServerAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerAsync (resourceGroupResource, serverName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="expand"> The child resources to include in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}</description></item><item><term>Operation Id</term><description>Servers_Get</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.SqlServerResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetSqlServerAsync(System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="serverName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="serverName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerAutomaticTuningResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerAutomaticTuningResource GetSqlServerAutomaticTuningResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerAutomaticTuningResource GetSqlServerAutomaticTuningResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerAutomaticTuningResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerAutomaticTuningResource (client As ArmClient, id As ResourceIdentifier) As SqlServerAutomaticTuningResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerAutomaticTuningResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerAutomaticTuningResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerAutomaticTuningResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerAutomaticTuningResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerAutomaticTuningResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerAutomaticTuningResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerAutomaticTuningResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerAutomaticTuningResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerAutomaticTuningResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerAzureADAdministratorResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerAzureADAdministratorResource GetSqlServerAzureADAdministratorResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerAzureADAdministratorResource GetSqlServerAzureADAdministratorResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerAzureADAdministratorResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerAzureADAdministratorResource (client As ArmClient, id As ResourceIdentifier) As SqlServerAzureADAdministratorResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerAzureADAdministratorResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerAzureADAdministratorResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerAzureADAdministratorResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerAzureADAdministratorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerAzureADAdministratorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerAzureADAdministratorResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.SqlAdministratorName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerAzureADAdministratorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerAzureADAdministratorResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerAzureADAdministratorResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerAzureADOnlyAuthenticationResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerAzureADOnlyAuthenticationResource GetSqlServerAzureADOnlyAuthenticationResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerAzureADOnlyAuthenticationResource GetSqlServerAzureADOnlyAuthenticationResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerAzureADOnlyAuthenticationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerAzureADOnlyAuthenticationResource (client As ArmClient, id As ResourceIdentifier) As SqlServerAzureADOnlyAuthenticationResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerAzureADOnlyAuthenticationResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerAzureADOnlyAuthenticationResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerAzureADOnlyAuthenticationResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerAzureADOnlyAuthenticationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerAzureADOnlyAuthenticationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerAzureADOnlyAuthenticationResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.AuthenticationName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerAzureADOnlyAuthenticationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerAzureADOnlyAuthenticationResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerAzureADOnlyAuthenticationResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerBlobAuditingPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerBlobAuditingPolicyResource GetSqlServerBlobAuditingPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerBlobAuditingPolicyResource GetSqlServerBlobAuditingPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerBlobAuditingPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerBlobAuditingPolicyResource (client As ArmClient, id As ResourceIdentifier) As SqlServerBlobAuditingPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerBlobAuditingPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerBlobAuditingPolicyResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerBlobAuditingPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerBlobAuditingPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerBlobAuditingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerBlobAuditingPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerBlobAuditingPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerBlobAuditingPolicyResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerBlobAuditingPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerCommunicationLinkResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerCommunicationLinkResource GetSqlServerCommunicationLinkResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerCommunicationLinkResource GetSqlServerCommunicationLinkResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerCommunicationLinkResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerCommunicationLinkResource (client As ArmClient, id As ResourceIdentifier) As SqlServerCommunicationLinkResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerCommunicationLinkResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerCommunicationLinkResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerCommunicationLinkResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerCommunicationLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerCommunicationLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerCommunicationLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerCommunicationLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerCommunicationLinkResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerCommunicationLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerConnectionPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerConnectionPolicyResource GetSqlServerConnectionPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerConnectionPolicyResource GetSqlServerConnectionPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerConnectionPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerConnectionPolicyResource (client As ArmClient, id As ResourceIdentifier) As SqlServerConnectionPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerConnectionPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerConnectionPolicyResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerConnectionPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerConnectionPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerConnectionPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerConnectionPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.ConnectionPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerConnectionPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerConnectionPolicyResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerConnectionPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerDatabaseReplicationLinkResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerDatabaseReplicationLinkResource GetSqlServerDatabaseReplicationLinkResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerDatabaseReplicationLinkResource GetSqlServerDatabaseReplicationLinkResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerDatabaseReplicationLinkResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerDatabaseReplicationLinkResource (client As ArmClient, id As ResourceIdentifier) As SqlServerDatabaseReplicationLinkResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerDatabaseReplicationLinkResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerDatabaseReplicationLinkResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerDatabaseReplicationLinkResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerDatabaseReplicationLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerDatabaseReplicationLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerDatabaseReplicationLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerDatabaseReplicationLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerDatabaseReplicationLinkResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerDatabaseReplicationLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerDatabaseRestorePointResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerDatabaseRestorePointResource GetSqlServerDatabaseRestorePointResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerDatabaseRestorePointResource GetSqlServerDatabaseRestorePointResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerDatabaseRestorePointResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerDatabaseRestorePointResource (client As ArmClient, id As ResourceIdentifier) As SqlServerDatabaseRestorePointResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerDatabaseRestorePointResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerDatabaseRestorePointResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerDatabaseRestorePointResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerDatabaseRestorePointResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerDatabaseRestorePointResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerDatabaseRestorePointResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerDatabaseRestorePointResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerDatabaseRestorePointResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerDatabaseRestorePointResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerDevOpsAuditingSettingResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerDevOpsAuditingSettingResource GetSqlServerDevOpsAuditingSettingResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerDevOpsAuditingSettingResource GetSqlServerDevOpsAuditingSettingResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerDevOpsAuditingSettingResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerDevOpsAuditingSettingResource (client As ArmClient, id As ResourceIdentifier) As SqlServerDevOpsAuditingSettingResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerDevOpsAuditingSettingResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerDevOpsAuditingSettingResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerDevOpsAuditingSettingResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerDevOpsAuditingSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerDevOpsAuditingSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerDevOpsAuditingSettingResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerDevOpsAuditingSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerDevOpsAuditingSettingResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerDevOpsAuditingSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerDnsAliasResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerDnsAliasResource GetSqlServerDnsAliasResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerDnsAliasResource GetSqlServerDnsAliasResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerDnsAliasResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerDnsAliasResource (client As ArmClient, id As ResourceIdentifier) As SqlServerDnsAliasResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerDnsAliasResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerDnsAliasResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerDnsAliasResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerDnsAliasResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerDnsAliasResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerDnsAliasResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerDnsAliasResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerDnsAliasResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerDnsAliasResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerJobAgentResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerJobAgentResource GetSqlServerJobAgentResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerJobAgentResource GetSqlServerJobAgentResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerJobAgentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerJobAgentResource (client As ArmClient, id As ResourceIdentifier) As SqlServerJobAgentResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerJobAgentResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobAgentResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerJobAgentResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerJobAgentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobAgentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerJobAgentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobAgentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerJobAgentResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobAgentResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerJobCredentialResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerJobCredentialResource GetSqlServerJobCredentialResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerJobCredentialResource GetSqlServerJobCredentialResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerJobCredentialResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerJobCredentialResource (client As ArmClient, id As ResourceIdentifier) As SqlServerJobCredentialResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerJobCredentialResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobCredentialResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerJobCredentialResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerJobCredentialResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobCredentialResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerJobCredentialResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobCredentialResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerJobCredentialResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobCredentialResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerJobExecutionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerJobExecutionResource GetSqlServerJobExecutionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerJobExecutionResource GetSqlServerJobExecutionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerJobExecutionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerJobExecutionResource (client As ArmClient, id As ResourceIdentifier) As SqlServerJobExecutionResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerJobExecutionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobExecutionResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerJobExecutionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerJobExecutionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobExecutionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerJobExecutionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.Guid)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobExecutionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerJobExecutionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobExecutionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerJobExecutionStepResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerJobExecutionStepResource GetSqlServerJobExecutionStepResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerJobExecutionStepResource GetSqlServerJobExecutionStepResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerJobExecutionStepResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerJobExecutionStepResource (client As ArmClient, id As ResourceIdentifier) As SqlServerJobExecutionStepResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerJobExecutionStepResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobExecutionStepResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerJobExecutionStepResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerJobExecutionStepResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobExecutionStepResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerJobExecutionStepResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.Guid,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobExecutionStepResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerJobExecutionStepResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobExecutionStepResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerJobExecutionStepTargetResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerJobExecutionStepTargetResource GetSqlServerJobExecutionStepTargetResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerJobExecutionStepTargetResource GetSqlServerJobExecutionStepTargetResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerJobExecutionStepTargetResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerJobExecutionStepTargetResource (client As ArmClient, id As ResourceIdentifier) As SqlServerJobExecutionStepTargetResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerJobExecutionStepTargetResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobExecutionStepTargetResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerJobExecutionStepTargetResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerJobExecutionStepTargetResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobExecutionStepTargetResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerJobExecutionStepTargetResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.Guid,System.String,System.Guid)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobExecutionStepTargetResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerJobExecutionStepTargetResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobExecutionStepTargetResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerJobResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerJobResource GetSqlServerJobResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerJobResource GetSqlServerJobResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerJobResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerJobResource (client As ArmClient, id As ResourceIdentifier) As SqlServerJobResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerJobResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerJobResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerJobResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerJobResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerJobResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerJobStepResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerJobStepResource GetSqlServerJobStepResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerJobStepResource GetSqlServerJobStepResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerJobStepResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerJobStepResource (client As ArmClient, id As ResourceIdentifier) As SqlServerJobStepResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerJobStepResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobStepResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerJobStepResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerJobStepResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobStepResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerJobStepResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobStepResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerJobStepResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobStepResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerJobTargetGroupResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerJobTargetGroupResource GetSqlServerJobTargetGroupResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerJobTargetGroupResource GetSqlServerJobTargetGroupResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerJobTargetGroupResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerJobTargetGroupResource (client As ArmClient, id As ResourceIdentifier) As SqlServerJobTargetGroupResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerJobTargetGroupResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobTargetGroupResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerJobTargetGroupResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerJobTargetGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobTargetGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerJobTargetGroupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobTargetGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerJobTargetGroupResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobTargetGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerJobVersionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerJobVersionResource GetSqlServerJobVersionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerJobVersionResource GetSqlServerJobVersionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerJobVersionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerJobVersionResource (client As ArmClient, id As ResourceIdentifier) As SqlServerJobVersionResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerJobVersionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobVersionResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerJobVersionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerJobVersionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerJobVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.Int32)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobVersionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerJobVersionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobVersionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerJobVersionStepResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerJobVersionStepResource GetSqlServerJobVersionStepResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerJobVersionStepResource GetSqlServerJobVersionStepResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerJobVersionStepResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerJobVersionStepResource (client As ArmClient, id As ResourceIdentifier) As SqlServerJobVersionStepResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerJobVersionStepResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerJobVersionStepResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerJobVersionStepResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerJobVersionStepResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobVersionStepResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerJobVersionStepResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobVersionStepResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerJobVersionStepResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerJobVersionStepResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerKeyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerKeyResource GetSqlServerKeyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerKeyResource GetSqlServerKeyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerKeyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerKeyResource (client As ArmClient, id As ResourceIdentifier) As SqlServerKeyResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerKeyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerKeyResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerKeyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerKeyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerKeyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerKeyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerKeyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerKeyResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerKeyResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerResource GetSqlServerResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerResource GetSqlServerResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerResource (client As ArmClient, id As ResourceIdentifier) As SqlServerResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServers">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerCollection GetSqlServers (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerCollection GetSqlServers(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServers(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServers (resourceGroupResource As ResourceGroupResource) As SqlServerCollection" />
      <MemberSignature Language="F#" Value="static member GetSqlServers : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Sql.SqlServerCollection" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServers resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of SqlServerResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetSqlServers" /> instead.</description></item></summary>
        <returns> An object representing collection of SqlServerResources and their operations over a SqlServerResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServers">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.SqlServerResource&gt; GetSqlServers (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.SqlServerResource&gt; GetSqlServers(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServers(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServers (subscriptionResource As SubscriptionResource, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SqlServerResource)" />
      <MemberSignature Language="F#" Value="static member GetSqlServers : Azure.ResourceManager.Resources.SubscriptionResource * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServers (subscriptionResource, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="expand"> The child resources to include in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of all servers in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/servers</description></item><item><term>Operation Id</term><description>Servers_List</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.SqlServerResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetSqlServers(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.SqlServerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServersAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SqlServerResource&gt; GetSqlServersAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.SqlServerResource&gt; GetSqlServersAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServersAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServersAsync (subscriptionResource As SubscriptionResource, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SqlServerResource)" />
      <MemberSignature Language="F#" Value="static member GetSqlServersAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServersAsync (subscriptionResource, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="expand"> The child resources to include in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of all servers in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/servers</description></item><item><term>Operation Id</term><description>Servers_List</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.SqlServerResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetSqlServers(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.SqlServerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerSecurityAlertPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerSecurityAlertPolicyResource GetSqlServerSecurityAlertPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerSecurityAlertPolicyResource GetSqlServerSecurityAlertPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerSecurityAlertPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerSecurityAlertPolicyResource (client As ArmClient, id As ResourceIdentifier) As SqlServerSecurityAlertPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerSecurityAlertPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerSecurityAlertPolicyResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerSecurityAlertPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerSecurityAlertPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerSecurityAlertPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerSecurityAlertPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.SqlSecurityAlertPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerSecurityAlertPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerSecurityAlertPolicyResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerSecurityAlertPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerSqlVulnerabilityAssessmentBaselineResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineResource GetSqlServerSqlVulnerabilityAssessmentBaselineResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineResource GetSqlServerSqlVulnerabilityAssessmentBaselineResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerSqlVulnerabilityAssessmentBaselineResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerSqlVulnerabilityAssessmentBaselineResource (client As ArmClient, id As ResourceIdentifier) As SqlServerSqlVulnerabilityAssessmentBaselineResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerSqlVulnerabilityAssessmentBaselineResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerSqlVulnerabilityAssessmentBaselineResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,Azure.ResourceManager.Sql.Models.SqlVulnerabilityAssessmentBaselineName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerSqlVulnerabilityAssessmentBaselineResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerSqlVulnerabilityAssessmentBaselineRuleResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineRuleResource GetSqlServerSqlVulnerabilityAssessmentBaselineRuleResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineRuleResource GetSqlServerSqlVulnerabilityAssessmentBaselineRuleResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerSqlVulnerabilityAssessmentBaselineRuleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerSqlVulnerabilityAssessmentBaselineRuleResource (client As ArmClient, id As ResourceIdentifier) As SqlServerSqlVulnerabilityAssessmentBaselineRuleResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerSqlVulnerabilityAssessmentBaselineRuleResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineRuleResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerSqlVulnerabilityAssessmentBaselineRuleResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,Azure.ResourceManager.Sql.Models.SqlVulnerabilityAssessmentBaselineName,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerSqlVulnerabilityAssessmentBaselineRuleResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentBaselineRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerSqlVulnerabilityAssessmentResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentResource GetSqlServerSqlVulnerabilityAssessmentResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentResource GetSqlServerSqlVulnerabilityAssessmentResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerSqlVulnerabilityAssessmentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerSqlVulnerabilityAssessmentResource (client As ArmClient, id As ResourceIdentifier) As SqlServerSqlVulnerabilityAssessmentResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerSqlVulnerabilityAssessmentResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerSqlVulnerabilityAssessmentResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerSqlVulnerabilityAssessmentResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerSqlVulnerabilityAssessmentScanResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResource GetSqlServerSqlVulnerabilityAssessmentScanResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResource GetSqlServerSqlVulnerabilityAssessmentScanResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerSqlVulnerabilityAssessmentScanResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerSqlVulnerabilityAssessmentScanResource (client As ArmClient, id As ResourceIdentifier) As SqlServerSqlVulnerabilityAssessmentScanResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerSqlVulnerabilityAssessmentScanResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerSqlVulnerabilityAssessmentScanResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerSqlVulnerabilityAssessmentScanResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerSqlVulnerabilityAssessmentScanResultResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResultResource GetSqlServerSqlVulnerabilityAssessmentScanResultResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResultResource GetSqlServerSqlVulnerabilityAssessmentScanResultResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerSqlVulnerabilityAssessmentScanResultResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerSqlVulnerabilityAssessmentScanResultResource (client As ArmClient, id As ResourceIdentifier) As SqlServerSqlVulnerabilityAssessmentScanResultResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerSqlVulnerabilityAssessmentScanResultResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResultResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerSqlVulnerabilityAssessmentScanResultResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResultResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResultResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResultResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResultResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerSqlVulnerabilityAssessmentScanResultResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerSqlVulnerabilityAssessmentScanResultResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerTrustGroup">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerTrustGroupResource&gt; GetSqlServerTrustGroup (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, string serverTrustGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Sql.SqlServerTrustGroupResource&gt; GetSqlServerTrustGroup(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, string serverTrustGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerTrustGroup(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerTrustGroup (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, serverTrustGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SqlServerTrustGroupResource)" />
      <MemberSignature Language="F#" Value="static member GetSqlServerTrustGroup : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerTrustGroupResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerTrustGroup (resourceGroupResource, locationName, serverTrustGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerTrustGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="serverTrustGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The name of the region where the resource is located. </param>
        <param name="serverTrustGroupName"> The name of the server trust group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server trust group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/serverTrustGroups/{serverTrustGroupName}</description></item><item><term>Operation Id</term><description>ServerTrustGroups_Get</description></item><item><term>Default Api Version</term><description>2020-11-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.SqlServerTrustGroupResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetSqlServerTrustGroup(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="serverTrustGroupName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="serverTrustGroupName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerTrustGroupAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerTrustGroupResource&gt;&gt; GetSqlServerTrustGroupAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName, string serverTrustGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.SqlServerTrustGroupResource&gt;&gt; GetSqlServerTrustGroupAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName, string serverTrustGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerTrustGroupAsync(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerTrustGroupAsync (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation, serverTrustGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SqlServerTrustGroupResource))" />
      <MemberSignature Language="F#" Value="static member GetSqlServerTrustGroupAsync : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerTrustGroupResource&gt;&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerTrustGroupAsync (resourceGroupResource, locationName, serverTrustGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerTrustGroupResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="serverTrustGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The name of the region where the resource is located. </param>
        <param name="serverTrustGroupName"> The name of the server trust group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server trust group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/serverTrustGroups/{serverTrustGroupName}</description></item><item><term>Operation Id</term><description>ServerTrustGroups_Get</description></item><item><term>Default Api Version</term><description>2020-11-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.SqlServerTrustGroupResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetSqlServerTrustGroupAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="serverTrustGroupName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="serverTrustGroupName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerTrustGroupResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerTrustGroupResource GetSqlServerTrustGroupResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerTrustGroupResource GetSqlServerTrustGroupResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerTrustGroupResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerTrustGroupResource (client As ArmClient, id As ResourceIdentifier) As SqlServerTrustGroupResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerTrustGroupResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerTrustGroupResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerTrustGroupResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerTrustGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerTrustGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerTrustGroupResource.CreateResourceIdentifier(System.String,System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerTrustGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerTrustGroupResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerTrustGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerTrustGroups">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerTrustGroupCollection GetSqlServerTrustGroups (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation locationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerTrustGroupCollection GetSqlServerTrustGroups(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation locationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerTrustGroups(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerTrustGroups (resourceGroupResource As ResourceGroupResource, locationName As AzureLocation) As SqlServerTrustGroupCollection" />
      <MemberSignature Language="F#" Value="static member GetSqlServerTrustGroups : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation -&gt; Azure.ResourceManager.Sql.SqlServerTrustGroupCollection" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerTrustGroups (resourceGroupResource, locationName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerTrustGroupCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="locationName"> The name of the region where the resource is located. </param>
        <summary>
            Gets a collection of SqlServerTrustGroupResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetSqlServerTrustGroups(Azure.Core.AzureLocation)" /> instead.</description></item></summary>
        <returns> An object representing collection of SqlServerTrustGroupResources and their operations over a SqlServerTrustGroupResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerVirtualNetworkRuleResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerVirtualNetworkRuleResource GetSqlServerVirtualNetworkRuleResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerVirtualNetworkRuleResource GetSqlServerVirtualNetworkRuleResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerVirtualNetworkRuleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerVirtualNetworkRuleResource (client As ArmClient, id As ResourceIdentifier) As SqlServerVirtualNetworkRuleResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerVirtualNetworkRuleResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerVirtualNetworkRuleResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerVirtualNetworkRuleResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerVirtualNetworkRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerVirtualNetworkRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerVirtualNetworkRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerVirtualNetworkRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerVirtualNetworkRuleResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerVirtualNetworkRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerVulnerabilityAssessmentResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlServerVulnerabilityAssessmentResource GetSqlServerVulnerabilityAssessmentResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlServerVulnerabilityAssessmentResource GetSqlServerVulnerabilityAssessmentResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerVulnerabilityAssessmentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServerVulnerabilityAssessmentResource (client As ArmClient, id As ResourceIdentifier) As SqlServerVulnerabilityAssessmentResource" />
      <MemberSignature Language="F#" Value="static member GetSqlServerVulnerabilityAssessmentResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlServerVulnerabilityAssessmentResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlServerVulnerabilityAssessmentResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerVulnerabilityAssessmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlServerVulnerabilityAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlServerVulnerabilityAssessmentResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlServerVulnerabilityAssessmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlServerVulnerabilityAssessmentResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlServerVulnerabilityAssessmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlTimeZone">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Sql.SqlTimeZoneResource&gt; GetSqlTimeZone (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, string timeZoneId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Sql.SqlTimeZoneResource&gt; GetSqlTimeZone(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, string timeZoneId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlTimeZone(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlTimeZone (subscriptionResource As SubscriptionResource, locationName As AzureLocation, timeZoneId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SqlTimeZoneResource)" />
      <MemberSignature Language="F#" Value="static member GetSqlTimeZone : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.SqlTimeZoneResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlTimeZone (subscriptionResource, locationName, timeZoneId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.SqlTimeZoneResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="timeZoneId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The <see cref="T:Azure.Core.AzureLocation" /> to use. </param>
        <param name="timeZoneId"> The <see cref="T:System.String" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed instance time zone.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/timeZones/{timeZoneId}</description></item><item><term>Operation Id</term><description>TimeZones_Get</description></item><item><term>Default Api Version</term><description>2020-11-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.SqlTimeZoneResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetSqlTimeZone(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="timeZoneId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="timeZoneId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlTimeZoneAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlTimeZoneResource&gt;&gt; GetSqlTimeZoneAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, string timeZoneId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.SqlTimeZoneResource&gt;&gt; GetSqlTimeZoneAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, string timeZoneId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlTimeZoneAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlTimeZoneAsync (subscriptionResource As SubscriptionResource, locationName As AzureLocation, timeZoneId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SqlTimeZoneResource))" />
      <MemberSignature Language="F#" Value="static member GetSqlTimeZoneAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlTimeZoneResource&gt;&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlTimeZoneAsync (subscriptionResource, locationName, timeZoneId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlTimeZoneResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="timeZoneId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The <see cref="T:Azure.Core.AzureLocation" /> to use. </param>
        <param name="timeZoneId"> The <see cref="T:System.String" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed instance time zone.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/timeZones/{timeZoneId}</description></item><item><term>Operation Id</term><description>TimeZones_Get</description></item><item><term>Default Api Version</term><description>2020-11-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.SqlTimeZoneResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetSqlTimeZoneAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="timeZoneId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="timeZoneId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlTimeZoneResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlTimeZoneResource GetSqlTimeZoneResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlTimeZoneResource GetSqlTimeZoneResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlTimeZoneResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlTimeZoneResource (client As ArmClient, id As ResourceIdentifier) As SqlTimeZoneResource" />
      <MemberSignature Language="F#" Value="static member GetSqlTimeZoneResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SqlTimeZoneResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlTimeZoneResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlTimeZoneResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SqlTimeZoneResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SqlTimeZoneResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SqlTimeZoneResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSqlTimeZoneResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlTimeZoneResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlTimeZones">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlTimeZoneCollection GetSqlTimeZones (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlTimeZoneCollection GetSqlTimeZones(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSqlTimeZones(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlTimeZones (subscriptionResource As SubscriptionResource, locationName As AzureLocation) As SqlTimeZoneCollection" />
      <MemberSignature Language="F#" Value="static member GetSqlTimeZones : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation -&gt; Azure.ResourceManager.Sql.SqlTimeZoneCollection" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSqlTimeZones (subscriptionResource, locationName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlTimeZoneCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The <see cref="T:Azure.Core.AzureLocation" /> to use. </param>
        <summary>
            Gets a collection of SqlTimeZoneResources in the SubscriptionResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetSqlTimeZones(Azure.Core.AzureLocation)" /> instead.</description></item></summary>
        <returns> An object representing collection of SqlTimeZoneResources and their operations over a SqlTimeZoneResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionLongTermRetentionBackup">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt; GetSubscriptionLongTermRetentionBackup (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, string longTermRetentionServerName, string longTermRetentionDatabaseName, string backupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt; GetSubscriptionLongTermRetentionBackup(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, string longTermRetentionServerName, string longTermRetentionDatabaseName, string backupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSubscriptionLongTermRetentionBackup(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionLongTermRetentionBackup (subscriptionResource As SubscriptionResource, locationName As AzureLocation, longTermRetentionServerName As String, longTermRetentionDatabaseName As String, backupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SubscriptionLongTermRetentionBackupResource)" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionLongTermRetentionBackup : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSubscriptionLongTermRetentionBackup (subscriptionResource, locationName, longTermRetentionServerName, longTermRetentionDatabaseName, backupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="longTermRetentionServerName" Type="System.String" />
        <Parameter Name="longTermRetentionDatabaseName" Type="System.String" />
        <Parameter Name="backupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="longTermRetentionServerName"> The name of the server. </param>
        <param name="longTermRetentionDatabaseName"> The name of the database. </param>
        <param name="backupName"> The backup name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a long term retention backup.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionDatabases/{longTermRetentionDatabaseName}/longTermRetentionBackups/{backupName}</description></item><item><term>Operation Id</term><description>LongTermRetentionBackups_Get</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetSubscriptionLongTermRetentionBackup(Azure.Core.AzureLocation,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="longTermRetentionServerName" />, <paramref name="longTermRetentionDatabaseName" /> or <paramref name="backupName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="longTermRetentionServerName" />, <paramref name="longTermRetentionDatabaseName" /> or <paramref name="backupName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionLongTermRetentionBackupAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt;&gt; GetSubscriptionLongTermRetentionBackupAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, string longTermRetentionServerName, string longTermRetentionDatabaseName, string backupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt;&gt; GetSubscriptionLongTermRetentionBackupAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, string longTermRetentionServerName, string longTermRetentionDatabaseName, string backupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSubscriptionLongTermRetentionBackupAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionLongTermRetentionBackupAsync (subscriptionResource As SubscriptionResource, locationName As AzureLocation, longTermRetentionServerName As String, longTermRetentionDatabaseName As String, backupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SubscriptionLongTermRetentionBackupResource))" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionLongTermRetentionBackupAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt;&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSubscriptionLongTermRetentionBackupAsync (subscriptionResource, locationName, longTermRetentionServerName, longTermRetentionDatabaseName, backupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="longTermRetentionServerName" Type="System.String" />
        <Parameter Name="longTermRetentionDatabaseName" Type="System.String" />
        <Parameter Name="backupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="longTermRetentionServerName"> The name of the server. </param>
        <param name="longTermRetentionDatabaseName"> The name of the database. </param>
        <param name="backupName"> The backup name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a long term retention backup.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionDatabases/{longTermRetentionDatabaseName}/longTermRetentionBackups/{backupName}</description></item><item><term>Operation Id</term><description>LongTermRetentionBackups_Get</description></item><item><term>Default Api Version</term><description>2023-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetSubscriptionLongTermRetentionBackupAsync(Azure.Core.AzureLocation,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="longTermRetentionServerName" />, <paramref name="longTermRetentionDatabaseName" /> or <paramref name="backupName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="longTermRetentionServerName" />, <paramref name="longTermRetentionDatabaseName" /> or <paramref name="backupName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionLongTermRetentionBackupResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource GetSubscriptionLongTermRetentionBackupResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource GetSubscriptionLongTermRetentionBackupResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSubscriptionLongTermRetentionBackupResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionLongTermRetentionBackupResource (client As ArmClient, id As ResourceIdentifier) As SubscriptionLongTermRetentionBackupResource" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionLongTermRetentionBackupResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSubscriptionLongTermRetentionBackupResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSubscriptionLongTermRetentionBackupResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionLongTermRetentionBackups">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupCollection GetSubscriptionLongTermRetentionBackups (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, string longTermRetentionServerName, string longTermRetentionDatabaseName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupCollection GetSubscriptionLongTermRetentionBackups(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, string longTermRetentionServerName, string longTermRetentionDatabaseName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSubscriptionLongTermRetentionBackups(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionLongTermRetentionBackups (subscriptionResource As SubscriptionResource, locationName As AzureLocation, longTermRetentionServerName As String, longTermRetentionDatabaseName As String) As SubscriptionLongTermRetentionBackupCollection" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionLongTermRetentionBackups : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * string -&gt; Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupCollection" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSubscriptionLongTermRetentionBackups (subscriptionResource, locationName, longTermRetentionServerName, longTermRetentionDatabaseName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="longTermRetentionServerName" Type="System.String" />
        <Parameter Name="longTermRetentionDatabaseName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="longTermRetentionServerName"> The name of the server. </param>
        <param name="longTermRetentionDatabaseName"> The name of the database. </param>
        <summary>
            Gets a collection of SubscriptionLongTermRetentionBackupResources in the SubscriptionResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetSubscriptionLongTermRetentionBackups(Azure.Core.AzureLocation,System.String,System.String)" /> instead.</description></item></summary>
        <returns> An object representing collection of SubscriptionLongTermRetentionBackupResources and their operations over a SubscriptionLongTermRetentionBackupResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="longTermRetentionServerName" /> or <paramref name="longTermRetentionDatabaseName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="longTermRetentionServerName" /> or <paramref name="longTermRetentionDatabaseName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionLongTermRetentionManagedInstanceBackup">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt; GetSubscriptionLongTermRetentionManagedInstanceBackup (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, string managedInstanceName, string databaseName, string backupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt; GetSubscriptionLongTermRetentionManagedInstanceBackup(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, string managedInstanceName, string databaseName, string backupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSubscriptionLongTermRetentionManagedInstanceBackup(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionLongTermRetentionManagedInstanceBackup (subscriptionResource As SubscriptionResource, locationName As AzureLocation, managedInstanceName As String, databaseName As String, backupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SubscriptionLongTermRetentionManagedInstanceBackupResource)" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionLongTermRetentionManagedInstanceBackup : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSubscriptionLongTermRetentionManagedInstanceBackup (subscriptionResource, locationName, managedInstanceName, databaseName, backupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="managedInstanceName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="backupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="managedInstanceName"> The name of the managed instance. </param>
        <param name="databaseName"> The name of the managed database. </param>
        <param name="backupName"> The backup name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a long term retention backup for a managed database.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstances/{managedInstanceName}/longTermRetentionDatabases/{databaseName}/longTermRetentionManagedInstanceBackups/{backupName}</description></item><item><term>Operation Id</term><description>LongTermRetentionManagedInstanceBackups_Get</description></item><item><term>Default Api Version</term><description>2021-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetSubscriptionLongTermRetentionManagedInstanceBackup(Azure.Core.AzureLocation,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="managedInstanceName" />, <paramref name="databaseName" /> or <paramref name="backupName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="managedInstanceName" />, <paramref name="databaseName" /> or <paramref name="backupName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionLongTermRetentionManagedInstanceBackupAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt;&gt; GetSubscriptionLongTermRetentionManagedInstanceBackupAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, string managedInstanceName, string databaseName, string backupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt;&gt; GetSubscriptionLongTermRetentionManagedInstanceBackupAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, string managedInstanceName, string databaseName, string backupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSubscriptionLongTermRetentionManagedInstanceBackupAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionLongTermRetentionManagedInstanceBackupAsync (subscriptionResource As SubscriptionResource, locationName As AzureLocation, managedInstanceName As String, databaseName As String, backupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SubscriptionLongTermRetentionManagedInstanceBackupResource))" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionLongTermRetentionManagedInstanceBackupAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt;&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSubscriptionLongTermRetentionManagedInstanceBackupAsync (subscriptionResource, locationName, managedInstanceName, databaseName, backupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="managedInstanceName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="backupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="managedInstanceName"> The name of the managed instance. </param>
        <param name="databaseName"> The name of the managed database. </param>
        <param name="backupName"> The backup name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a long term retention backup for a managed database.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstances/{managedInstanceName}/longTermRetentionDatabases/{databaseName}/longTermRetentionManagedInstanceBackups/{backupName}</description></item><item><term>Operation Id</term><description>LongTermRetentionManagedInstanceBackups_Get</description></item><item><term>Default Api Version</term><description>2021-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetSubscriptionLongTermRetentionManagedInstanceBackupAsync(Azure.Core.AzureLocation,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="managedInstanceName" />, <paramref name="databaseName" /> or <paramref name="backupName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="managedInstanceName" />, <paramref name="databaseName" /> or <paramref name="backupName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionLongTermRetentionManagedInstanceBackupResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource GetSubscriptionLongTermRetentionManagedInstanceBackupResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource GetSubscriptionLongTermRetentionManagedInstanceBackupResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSubscriptionLongTermRetentionManagedInstanceBackupResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionLongTermRetentionManagedInstanceBackupResource (client As ArmClient, id As ResourceIdentifier) As SubscriptionLongTermRetentionManagedInstanceBackupResource" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionLongTermRetentionManagedInstanceBackupResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSubscriptionLongTermRetentionManagedInstanceBackupResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSubscriptionLongTermRetentionManagedInstanceBackupResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionLongTermRetentionManagedInstanceBackups">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupCollection GetSubscriptionLongTermRetentionManagedInstanceBackups (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, string managedInstanceName, string databaseName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupCollection GetSubscriptionLongTermRetentionManagedInstanceBackups(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, string managedInstanceName, string databaseName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSubscriptionLongTermRetentionManagedInstanceBackups(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionLongTermRetentionManagedInstanceBackups (subscriptionResource As SubscriptionResource, locationName As AzureLocation, managedInstanceName As String, databaseName As String) As SubscriptionLongTermRetentionManagedInstanceBackupCollection" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionLongTermRetentionManagedInstanceBackups : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * string -&gt; Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupCollection" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSubscriptionLongTermRetentionManagedInstanceBackups (subscriptionResource, locationName, managedInstanceName, databaseName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="managedInstanceName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="managedInstanceName"> The name of the managed instance. </param>
        <param name="databaseName"> The name of the managed database. </param>
        <summary>
            Gets a collection of SubscriptionLongTermRetentionManagedInstanceBackupResources in the SubscriptionResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetSubscriptionLongTermRetentionManagedInstanceBackups(Azure.Core.AzureLocation,System.String,System.String)" /> instead.</description></item></summary>
        <returns> An object representing collection of SubscriptionLongTermRetentionManagedInstanceBackupResources and their operations over a SubscriptionLongTermRetentionManagedInstanceBackupResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="managedInstanceName" /> or <paramref name="databaseName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="managedInstanceName" /> or <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionUsage">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Sql.SubscriptionUsageResource&gt; GetSubscriptionUsage (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, string usageName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Sql.SubscriptionUsageResource&gt; GetSubscriptionUsage(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, string usageName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSubscriptionUsage(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionUsage (subscriptionResource As SubscriptionResource, locationName As AzureLocation, usageName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SubscriptionUsageResource)" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionUsage : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.SubscriptionUsageResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSubscriptionUsage (subscriptionResource, locationName, usageName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.SubscriptionUsageResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="usageName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The name of the region where the resource is located. </param>
        <param name="usageName"> Name of usage metric to return. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a subscription usage metric.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/usages/{usageName}</description></item><item><term>Operation Id</term><description>SubscriptionUsages_Get</description></item><item><term>Default Api Version</term><description>2020-11-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.SubscriptionUsageResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetSubscriptionUsage(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="usageName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usageName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionUsageAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SubscriptionUsageResource&gt;&gt; GetSubscriptionUsageAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, string usageName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.SubscriptionUsageResource&gt;&gt; GetSubscriptionUsageAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, string usageName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSubscriptionUsageAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionUsageAsync (subscriptionResource As SubscriptionResource, locationName As AzureLocation, usageName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SubscriptionUsageResource))" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionUsageAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SubscriptionUsageResource&gt;&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSubscriptionUsageAsync (subscriptionResource, locationName, usageName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SubscriptionUsageResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="usageName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The name of the region where the resource is located. </param>
        <param name="usageName"> Name of usage metric to return. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a subscription usage metric.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/usages/{usageName}</description></item><item><term>Operation Id</term><description>SubscriptionUsages_Get</description></item><item><term>Default Api Version</term><description>2020-11-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.SubscriptionUsageResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetSubscriptionUsageAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="usageName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usageName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionUsageResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SubscriptionUsageResource GetSubscriptionUsageResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SubscriptionUsageResource GetSubscriptionUsageResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSubscriptionUsageResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionUsageResource (client As ArmClient, id As ResourceIdentifier) As SubscriptionUsageResource" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionUsageResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SubscriptionUsageResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSubscriptionUsageResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SubscriptionUsageResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SubscriptionUsageResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SubscriptionUsageResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SubscriptionUsageResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSubscriptionUsageResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SubscriptionUsageResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionUsages">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SubscriptionUsageCollection GetSubscriptionUsages (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SubscriptionUsageCollection GetSubscriptionUsages(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSubscriptionUsages(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionUsages (subscriptionResource As SubscriptionResource, locationName As AzureLocation) As SubscriptionUsageCollection" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionUsages : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation -&gt; Azure.ResourceManager.Sql.SubscriptionUsageCollection" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSubscriptionUsages (subscriptionResource, locationName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SubscriptionUsageCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The name of the region where the resource is located. </param>
        <summary>
            Gets a collection of SubscriptionUsageResources in the SubscriptionResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetSubscriptionUsages(Azure.Core.AzureLocation)" /> instead.</description></item></summary>
        <returns> An object representing collection of SubscriptionUsageResources and their operations over a SubscriptionUsageResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSyncAgentResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SyncAgentResource GetSyncAgentResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SyncAgentResource GetSyncAgentResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSyncAgentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSyncAgentResource (client As ArmClient, id As ResourceIdentifier) As SyncAgentResource" />
      <MemberSignature Language="F#" Value="static member GetSyncAgentResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SyncAgentResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSyncAgentResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SyncAgentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SyncAgentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SyncAgentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SyncAgentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSyncAgentResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SyncAgentResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSyncDatabaseIdsSyncGroups">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt; GetSyncDatabaseIdsSyncGroups (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Resources.Models.SubResource&gt; GetSyncDatabaseIdsSyncGroups(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSyncDatabaseIdsSyncGroups(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSyncDatabaseIdsSyncGroups (subscriptionResource As SubscriptionResource, locationName As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SubResource)" />
      <MemberSignature Language="F#" Value="static member GetSyncDatabaseIdsSyncGroups : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSyncDatabaseIdsSyncGroups (subscriptionResource, locationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The name of the region where the resource is located. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a collection of sync database ids.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/syncDatabaseIds</description></item><item><term>Operation Id</term><description>SyncGroups_ListSyncDatabaseIds</description></item><item><term>Default Api Version</term><description>2020-11-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.SyncGroupResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetSyncDatabaseIdsSyncGroups(Azure.Core.AzureLocation,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.Models.SubResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSyncDatabaseIdsSyncGroupsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt; GetSyncDatabaseIdsSyncGroupsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation locationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Resources.Models.SubResource&gt; GetSyncDatabaseIdsSyncGroupsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation locationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSyncDatabaseIdsSyncGroupsAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSyncDatabaseIdsSyncGroupsAsync (subscriptionResource As SubscriptionResource, locationName As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SubResource)" />
      <MemberSignature Language="F#" Value="static member GetSyncDatabaseIdsSyncGroupsAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSyncDatabaseIdsSyncGroupsAsync (subscriptionResource, locationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> The name of the region where the resource is located. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a collection of sync database ids.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/syncDatabaseIds</description></item><item><term>Operation Id</term><description>SyncGroups_ListSyncDatabaseIds</description></item><item><term>Default Api Version</term><description>2020-11-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.SyncGroupResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetSyncDatabaseIdsSyncGroups(Azure.Core.AzureLocation,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.Models.SubResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSyncGroupResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SyncGroupResource GetSyncGroupResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SyncGroupResource GetSyncGroupResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSyncGroupResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSyncGroupResource (client As ArmClient, id As ResourceIdentifier) As SyncGroupResource" />
      <MemberSignature Language="F#" Value="static member GetSyncGroupResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SyncGroupResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSyncGroupResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SyncGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SyncGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SyncGroupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SyncGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSyncGroupResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SyncGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSyncMemberResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SyncMemberResource GetSyncMemberResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SyncMemberResource GetSyncMemberResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetSyncMemberResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSyncMemberResource (client As ArmClient, id As ResourceIdentifier) As SyncMemberResource" />
      <MemberSignature Language="F#" Value="static member GetSyncMemberResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.SyncMemberResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetSyncMemberResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SyncMemberResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.SyncMemberResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.SyncMemberResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.SyncMemberResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetSyncMemberResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SyncMemberResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualCluster">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Sql.VirtualClusterResource&gt; GetVirtualCluster (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string virtualClusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Sql.VirtualClusterResource&gt; GetVirtualCluster(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string virtualClusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetVirtualCluster(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualCluster (resourceGroupResource As ResourceGroupResource, virtualClusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualClusterResource)" />
      <MemberSignature Language="F#" Value="static member GetVirtualCluster : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.VirtualClusterResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetVirtualCluster (resourceGroupResource, virtualClusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.VirtualClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="virtualClusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="virtualClusterName"> The name of the virtual cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a virtual cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/virtualClusters/{virtualClusterName}</description></item><item><term>Operation Id</term><description>VirtualClusters_Get</description></item><item><term>Default Api Version</term><description>2022-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.VirtualClusterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetVirtualCluster(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="virtualClusterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualClusterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualClusterAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.VirtualClusterResource&gt;&gt; GetVirtualClusterAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string virtualClusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.VirtualClusterResource&gt;&gt; GetVirtualClusterAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string virtualClusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetVirtualClusterAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualClusterAsync (resourceGroupResource As ResourceGroupResource, virtualClusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualClusterResource))" />
      <MemberSignature Language="F#" Value="static member GetVirtualClusterAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.VirtualClusterResource&gt;&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetVirtualClusterAsync (resourceGroupResource, virtualClusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.VirtualClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="virtualClusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="virtualClusterName"> The name of the virtual cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a virtual cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/virtualClusters/{virtualClusterName}</description></item><item><term>Operation Id</term><description>VirtualClusters_Get</description></item><item><term>Default Api Version</term><description>2022-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.VirtualClusterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetVirtualClusterAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="virtualClusterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualClusterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualClusterResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.VirtualClusterResource GetVirtualClusterResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.VirtualClusterResource GetVirtualClusterResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetVirtualClusterResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualClusterResource (client As ArmClient, id As ResourceIdentifier) As VirtualClusterResource" />
      <MemberSignature Language="F#" Value="static member GetVirtualClusterResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.VirtualClusterResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetVirtualClusterResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.VirtualClusterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.VirtualClusterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.VirtualClusterResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.VirtualClusterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetVirtualClusterResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.VirtualClusterResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualClusters">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.VirtualClusterCollection GetVirtualClusters (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.VirtualClusterCollection GetVirtualClusters(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetVirtualClusters(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualClusters (resourceGroupResource As ResourceGroupResource) As VirtualClusterCollection" />
      <MemberSignature Language="F#" Value="static member GetVirtualClusters : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Sql.VirtualClusterCollection" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetVirtualClusters resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.VirtualClusterCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of VirtualClusterResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlResourceGroupResource.GetVirtualClusters" /> instead.</description></item></summary>
        <returns> An object representing collection of VirtualClusterResources and their operations over a VirtualClusterResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualClusters">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.VirtualClusterResource&gt; GetVirtualClusters (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.VirtualClusterResource&gt; GetVirtualClusters(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetVirtualClusters(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualClusters (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of VirtualClusterResource)" />
      <MemberSignature Language="F#" Value="static member GetVirtualClusters : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.VirtualClusterResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetVirtualClusters (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.VirtualClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of all virtualClusters in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/virtualClusters</description></item><item><term>Operation Id</term><description>VirtualClusters_List</description></item><item><term>Default Api Version</term><description>2022-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.VirtualClusterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetVirtualClusters(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.VirtualClusterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualClustersAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.VirtualClusterResource&gt; GetVirtualClustersAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.VirtualClusterResource&gt; GetVirtualClustersAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetVirtualClustersAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualClustersAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of VirtualClusterResource)" />
      <MemberSignature Language="F#" Value="static member GetVirtualClustersAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.VirtualClusterResource&gt;" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetVirtualClustersAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.VirtualClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of all virtualClusters in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Sql/virtualClusters</description></item><item><term>Operation Id</term><description>VirtualClusters_List</description></item><item><term>Default Api Version</term><description>2022-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Sql.VirtualClusterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlSubscriptionResource.GetVirtualClusters(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.VirtualClusterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadClassifierResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.WorkloadClassifierResource GetWorkloadClassifierResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.WorkloadClassifierResource GetWorkloadClassifierResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetWorkloadClassifierResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkloadClassifierResource (client As ArmClient, id As ResourceIdentifier) As WorkloadClassifierResource" />
      <MemberSignature Language="F#" Value="static member GetWorkloadClassifierResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.WorkloadClassifierResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetWorkloadClassifierResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.WorkloadClassifierResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.WorkloadClassifierResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.WorkloadClassifierResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.WorkloadClassifierResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetWorkloadClassifierResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.WorkloadClassifierResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadGroupResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.WorkloadGroupResource GetWorkloadGroupResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.WorkloadGroupResource GetWorkloadGroupResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlExtensions.GetWorkloadGroupResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkloadGroupResource (client As ArmClient, id As ResourceIdentifier) As WorkloadGroupResource" />
      <MemberSignature Language="F#" Value="static member GetWorkloadGroupResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Sql.WorkloadGroupResource" Usage="Azure.ResourceManager.Sql.SqlExtensions.GetWorkloadGroupResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.WorkloadGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Sql.WorkloadGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Sql.WorkloadGroupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Sql.WorkloadGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Sql.Mocking.MockableSqlArmClient.GetWorkloadGroupResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.WorkloadGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
